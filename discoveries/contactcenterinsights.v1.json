{
  "basePath": "",
  "ownerDomain": "google.com",
  "rootUrl": "https://contactcenterinsights.googleapis.com/",
  "version": "v1",
  "canonicalName": "Contactcenterinsights",
  "schemas": {
    "GoogleCloudContactcenterinsightsV1SentimentData": {
      "id": "GoogleCloudContactcenterinsightsV1SentimentData",
      "type": "object",
      "description": "The data for a sentiment annotation.",
      "properties": {
        "magnitude": {
          "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.",
          "format": "float",
          "type": "number"
        },
        "score": {
          "description": "The sentiment score between -1.0 (negative) and 1.0 (positive).",
          "format": "float",
          "type": "number"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest",
          "description": "The original request for creation."
        }
      },
      "description": "Metadata for creating an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats": {
      "properties": {
        "failedIngestCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.",
          "format": "int32"
        },
        "successfulIngestCount": {
          "format": "int32",
          "description": "Output only. The number of new conversations added during this ingest operation.",
          "readOnly": true,
          "type": "integer"
        },
        "duplicatesSkippedCount": {
          "format": "int32",
          "description": "Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.",
          "readOnly": true,
          "type": "integer"
        },
        "processedObjectCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Output only. The number of objects processed during the ingest operation.",
          "format": "int32"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats",
      "type": "object",
      "description": "Statistics for IngestConversations operation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata": {
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
          "description": "Output only. The annotator selector used for the analysis (if any).",
          "readOnly": true
        },
        "conversation": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The Conversation that this Analysis Operation belongs to."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata",
      "description": "Metadata for a create analysis operation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector": {
      "properties": {
        "runIssueModelAnnotator": {
          "description": "Whether to run the issue model annotator. A model should have already been deployed for this to take effect.",
          "type": "boolean"
        },
        "runInterruptionAnnotator": {
          "type": "boolean",
          "description": "Whether to run the interruption annotator."
        },
        "runSilenceAnnotator": {
          "type": "boolean",
          "description": "Whether to run the silence annotator."
        },
        "runPhraseMatcherAnnotator": {
          "type": "boolean",
          "description": "Whether to run the active phrase matcher annotator(s)."
        },
        "runEntityAnnotator": {
          "description": "Whether to run the entity annotator.",
          "type": "boolean"
        },
        "phraseMatchers": {
          "description": "The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "runSentimentAnnotator": {
          "type": "boolean",
          "description": "Whether to run the sentiment annotator."
        },
        "runIntentAnnotator": {
          "type": "boolean",
          "description": "Whether to run the intent annotator."
        },
        "runSummarizationAnnotator": {
          "description": "Whether to run the summarization annotator.",
          "type": "boolean"
        },
        "issueModels": {
          "type": "array",
          "description": "The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.",
          "items": {
            "type": "string"
          }
        },
        "summarizationConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig",
          "description": "Configuration for the summarization annotator."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
      "type": "object",
      "description": "Selector of all available annotators and phrase matchers to run."
    },
    "GoogleCloudContactcenterinsightsV1CallAnnotation": {
      "type": "object",
      "description": "A piece of metadata that applies to a window of a call.",
      "properties": {
        "issueMatchData": {
          "description": "Data specifying an issue match.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueMatchData"
        },
        "interruptionData": {
          "$ref": "GoogleCloudContactcenterinsightsV1InterruptionData",
          "description": "Data specifying an interruption."
        },
        "channelTag": {
          "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.",
          "format": "int32",
          "type": "integer"
        },
        "annotationEndBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        },
        "holdData": {
          "description": "Data specifying a hold.",
          "$ref": "GoogleCloudContactcenterinsightsV1HoldData"
        },
        "annotationStartBoundary": {
          "description": "The boundary in the conversation where the annotation starts, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "silenceData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SilenceData",
          "description": "Data specifying silence."
        },
        "entityMentionData": {
          "description": "Data specifying an entity mention.",
          "$ref": "GoogleCloudContactcenterinsightsV1EntityMentionData"
        },
        "intentMatchData": {
          "description": "Data specifying an intent match.",
          "$ref": "GoogleCloudContactcenterinsightsV1IntentMatchData"
        },
        "sentimentData": {
          "description": "Data specifying sentiment.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "phraseMatchData": {
          "description": "Data specifying a phrase match.",
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CallAnnotation"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig": {
      "properties": {
        "medium": {
          "deprecated": true,
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "type": "string"
        },
        "filter": {
          "type": "string",
          "description": "A filter to reduce the conversations used for training the model to a specific subset."
        },
        "trainingConversationsCount": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Number of conversations used in training. Output only.",
          "format": "int64"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig",
      "description": "Configs for the input data used to create the issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination": {
      "type": "object",
      "properties": {
        "objectUri": {
          "type": "string",
          "description": "Required. Format: `gs:///`"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination",
      "description": "Google Cloud Storage Object URI to save the issue model to."
    },
    "GoogleCloudContactcenterinsightsV1RedactionConfig": {
      "properties": {
        "inspectTemplate": {
          "description": "The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`",
          "type": "string"
        },
        "deidentifyTemplate": {
          "type": "string",
          "description": "The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1RedactionConfig",
      "type": "object",
      "description": "DLP resources used for redaction while ingesting conversations."
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchData": {
      "properties": {
        "phraseMatcher": {
          "description": "The unique identifier (the resource name) of the phrase matcher.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the phrase matcher."
        }
      },
      "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1DialogflowSource": {
      "id": "GoogleCloudContactcenterinsightsV1DialogflowSource",
      "properties": {
        "audioUri": {
          "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
          "type": "string"
        },
        "dialogflowConversation": {
          "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "A Dialogflow source of conversation data."
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatcher": {
      "description": "The phrase matcher resource.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatcher",
      "properties": {
        "active": {
          "type": "boolean",
          "description": "Applies the phrase matcher only when it is active."
        },
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the phrase matcher."
        },
        "revisionCreateTime": {
          "readOnly": true,
          "description": "Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added.",
          "type": "string",
          "format": "google-datetime"
        },
        "versionTag": {
          "type": "string",
          "description": "The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`."
        },
        "type": {
          "type": "string",
          "enum": [
            "PHRASE_MATCHER_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rule groups or there is no match.",
            "If any of the phrase match rule groups are met, there is a match."
          ],
          "description": "Required. The type of this phrase matcher."
        },
        "revisionId": {
          "description": "Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567",
          "type": "string",
          "readOnly": true
        },
        "activationUpdateTime": {
          "description": "Output only. The most recent time at which the activation status was updated.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "phraseMatchRuleGroups": {
          "description": "A list of phase match rule groups that are included in this matcher.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup"
          },
          "type": "array"
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the phrase matcher was updated.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "roleMatch": {
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "description": "The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest": {
      "type": "object",
      "description": "Request to export an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest",
      "properties": {
        "gcsDestination": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination",
          "description": "Google Cloud Storage URI to export the Issue Model to."
        },
        "name": {
          "description": "Required. The issue model to export",
          "type": "string"
        }
      }
    },
    "GoogleRpcStatus": {
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "GoogleRpcStatus",
      "properties": {
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation",
      "properties": {
        "startBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        },
        "articleSuggestion": {
          "description": "Agent Assist Article Suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData"
        },
        "answerFeedback": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback",
          "description": "The feedback that the customer has about the answer in `data`."
        },
        "annotationId": {
          "type": "string",
          "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}"
        },
        "conversationSummarizationSuggestion": {
          "description": "Conversation summarization suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData"
        },
        "smartComposeSuggestion": {
          "description": "Agent Assist Smart Compose suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which this annotation was created."
        },
        "endBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        },
        "faqAnswer": {
          "description": "Agent Assist FAQ answer data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData"
        },
        "smartReply": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData",
          "description": "Agent Assist Smart Reply data."
        },
        "dialogflowInteraction": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData",
          "description": "Dialogflow interaction data."
        }
      },
      "description": "An annotation that was generated during the customer and agent interaction.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsResponse": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsResponse",
      "description": "The response to an IngestConversations operation.",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo",
      "properties": {
        "dispositionCode": {
          "type": "string",
          "description": "A user-provided string indicating the outcome of the agent's segment of the call."
        },
        "agentId": {
          "type": "string",
          "description": "A user-specified string representing the agent."
        },
        "team": {
          "description": "A user-specified string representing the agent's team.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The agent's name."
        }
      },
      "description": "Information about an agent involved in the conversation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1SilenceData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1SilenceData",
      "properties": {},
      "description": "The data for a silence annotation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript",
      "description": "A message representing the transcript of a conversation.",
      "properties": {
        "transcriptSegments": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment"
          },
          "type": "array",
          "description": "A list of sequential transcript segments that comprise the conversation."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource": {
      "properties": {
        "objectUri": {
          "description": "Required. Format: `gs:///`",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Google Cloud Storage Object URI to get the issue model file from.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse": {
      "description": "The response to deploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1HoldData": {
      "description": "The data for a hold annotation.",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1HoldData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1AnswerFeedback": {
      "description": "The feedback that the customer has about a certain answer in the conversation.",
      "properties": {
        "clicked": {
          "description": "Indicates whether an answer or item was clicked by the human agent.",
          "type": "boolean"
        },
        "correctnessLevel": {
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ],
          "description": "The correctness level of an answer.",
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ],
          "type": "string"
        },
        "displayed": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnswerFeedback"
    },
    "GoogleCloudContactcenterinsightsV1ExactMatchConfig": {
      "id": "GoogleCloudContactcenterinsightsV1ExactMatchConfig",
      "description": "Exact match configuration.",
      "type": "object",
      "properties": {
        "caseSensitive": {
          "type": "boolean",
          "description": "Whether to consider case sensitivity when performing an exact match."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IssueModelResult": {
      "description": "Issue Modeling result on a conversation.",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelResult",
      "type": "object",
      "properties": {
        "issues": {
          "description": "All the matched issues.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment"
          }
        },
        "issueModel": {
          "description": "Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource": {
      "properties": {
        "bucketUri": {
          "type": "string",
          "description": "Required. The Cloud Storage bucket containing source objects."
        },
        "metadataBucketUri": {
          "description": "Optional. The Cloud Storage path to the source object metadata. Note that: [1] metadata files are expected to be in JSON format [2] metadata and source objects must be in separate buckets [3] a source object's metadata object must share the same name to be properly ingested",
          "type": "string"
        },
        "bucketObjectType": {
          "enum": [
            "BUCKET_OBJECT_TYPE_UNSPECIFIED",
            "TRANSCRIPT",
            "AUDIO"
          ],
          "description": "Optional. Specifies the type of the objects in `bucket_uri`.",
          "type": "string",
          "enumDescriptions": [
            "The object type is unspecified and will default to `TRANSCRIPT`.",
            "The object is a transcript.",
            "The object is an audio file."
          ]
        },
        "customMetadataKeys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. Custom keys to extract as conversation labels from metadata files in `metadata_bucket_uri`. Keys not included in this field will be ignored. Note that there is a limit of 20 labels per conversation."
        }
      },
      "description": "Configuration for Cloud Storage bucket sources.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo": {
      "properties": {
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset."
        },
        "startOffset": {
          "format": "google-duration",
          "description": "Time offset of the start of this word relative to the beginning of the total conversation.",
          "type": "string"
        },
        "endOffset": {
          "type": "string",
          "format": "google-duration",
          "description": "Time offset of the end of this word relative to the beginning of the total conversation."
        },
        "word": {
          "description": "The word itself. Includes punctuation marks that surround the word.",
          "type": "string"
        }
      },
      "description": "Word-level info for words in a transcript.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource": {
      "description": "Configuration for Cloud Storage bucket sources.",
      "type": "object",
      "properties": {
        "customMetadataKeys": {
          "description": "Optional. Custom keys to extract as conversation labels from metadata files in `metadata_bucket_uri`. Keys not included in this field will be ignored. Note that there is a limit of 20 labels per conversation.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "metadataBucketUri": {
          "type": "string",
          "description": "Optional. The Cloud Storage path to the source object metadata. Note that: [1] metadata files are expected to be in JSON format [2] metadata and source objects must be in separate buckets [3] a source object's metadata object must share the same name to be properly ingested"
        },
        "bucketObjectType": {
          "enumDescriptions": [
            "The object type is unspecified and will default to `TRANSCRIPT`.",
            "The object is a transcript.",
            "The object is an audio file."
          ],
          "type": "string",
          "enum": [
            "BUCKET_OBJECT_TYPE_UNSPECIFIED",
            "TRANSCRIPT",
            "AUDIO"
          ],
          "description": "Optional. Specifies the type of the objects in `bucket_uri`."
        },
        "bucketUri": {
          "description": "Required. The Cloud Storage bucket containing source objects.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource"
    },
    "GoogleCloudContactcenterinsightsV1alpha1Analysis": {
      "description": "The analysis resource.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1Analysis",
      "properties": {
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        },
        "createTime": {
          "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "analysisResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult",
          "readOnly": true,
          "description": "Output only. The result of the analysis, which is populated when the analysis finishes."
        },
        "name": {
          "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}",
          "type": "string"
        },
        "requestTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which the analysis was requested.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1InterruptionData": {
      "description": "The data for an interruption annotation.",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1alpha1InterruptionData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats": {
      "type": "object",
      "properties": {
        "duplicatesSkippedCount": {
          "description": "Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "failedIngestCount": {
          "description": "Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "processedObjectCount": {
          "readOnly": true,
          "description": "Output only. The number of objects processed during the ingest operation.",
          "format": "int32",
          "type": "integer"
        },
        "successfulIngestCount": {
          "format": "int32",
          "readOnly": true,
          "description": "Output only. The number of new conversations added during this ingest operation.",
          "type": "integer"
        }
      },
      "description": "Statistics for IngestConversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats"
    },
    "GoogleLongrunningListOperationsResponse": {
      "id": "GoogleLongrunningListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "type": "array"
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1DialogflowIntent": {
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DialogflowIntent",
      "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata",
      "properties": {
        "request": {
          "description": "The original request for bulk delete.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest"
        },
        "partialErrors": {
          "type": "array",
          "description": "Partial errors during bulk delete conversations operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "endTime": {
          "type": "string",
          "description": "The time the operation finished running.",
          "format": "google-datetime"
        },
        "createTime": {
          "description": "The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The metadata for a bulk delete conversations operation."
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse": {
      "description": "The response to undeploy an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation": {
      "description": "A piece of metadata that applies to a window of a call.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation",
      "type": "object",
      "properties": {
        "interruptionData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1InterruptionData",
          "description": "Data specifying an interruption."
        },
        "channelTag": {
          "type": "integer",
          "format": "int32",
          "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated."
        },
        "issueMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData",
          "description": "Data specifying an issue match."
        },
        "intentMatchData": {
          "description": "Data specifying an intent match.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData"
        },
        "annotationStartBoundary": {
          "description": "The boundary in the conversation where the annotation starts, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary"
        },
        "entityMentionData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData",
          "description": "Data specifying an entity mention."
        },
        "holdData": {
          "description": "Data specifying a hold.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1HoldData"
        },
        "sentimentData": {
          "description": "Data specifying sentiment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
        },
        "annotationEndBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        },
        "silenceData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SilenceData",
          "description": "Data specifying silence."
        },
        "phraseMatchData": {
          "description": "Data specifying a phrase match.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata": {
      "description": "Metadata for undeploying an issue model.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string"
        },
        "request": {
          "description": "The original request for undeployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest"
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStats": {
      "type": "object",
      "properties": {
        "unclassifiedConversationsCount": {
          "format": "int64",
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time.",
          "type": "string"
        },
        "issueStats": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          },
          "description": "Statistics on each issue. Key is the issue's resource name."
        },
        "analyzedConversationsCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of conversations the issue model has analyzed at this point in time."
        }
      },
      "description": "Aggregated statistics about an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats"
    },
    "GoogleCloudContactcenterinsightsV1RuntimeAnnotation": {
      "id": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation",
      "description": "An annotation that was generated during the customer and agent interaction.",
      "properties": {
        "startBoundary": {
          "description": "The boundary in the conversation where the annotation starts, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "smartComposeSuggestion": {
          "description": "Agent Assist Smart Compose suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData"
        },
        "answerFeedback": {
          "description": "The feedback that the customer has about the answer in `data`.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnswerFeedback"
        },
        "conversationSummarizationSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData",
          "description": "Conversation summarization suggestion data."
        },
        "articleSuggestion": {
          "description": "Agent Assist Article Suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData"
        },
        "faqAnswer": {
          "description": "Agent Assist FAQ answer data.",
          "$ref": "GoogleCloudContactcenterinsightsV1FaqAnswerData"
        },
        "annotationId": {
          "type": "string",
          "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}"
        },
        "endBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        },
        "dialogflowInteraction": {
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData",
          "description": "Dialogflow interaction data."
        },
        "smartReply": {
          "$ref": "GoogleCloudContactcenterinsightsV1SmartReplyData",
          "description": "Agent Assist Smart Reply data."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time at which this annotation was created.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata": {
      "description": "Metadata for deploying an issue model.",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest",
          "description": "The original request for deployment."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats": {
      "properties": {
        "issue": {
          "type": "string",
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        },
        "labeledConversationsCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of conversations attached to the issue at this point in time."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the issue."
        }
      },
      "description": "Aggregated statistics about an issue.",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig": {
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig",
      "type": "object",
      "description": "Configuration for processing transcript objects.",
      "properties": {
        "medium": {
          "description": "Required. The medium transcript objects represent.",
          "type": "string",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ]
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest": {
      "type": "object",
      "description": "The request to deploy an issue model.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The issue model to deploy."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment",
      "properties": {
        "channelTag": {
          "type": "integer",
          "format": "int32",
          "description": "The channel of the audio that the data applies to."
        },
        "sentimentData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "Data specifying sentiment."
        }
      },
      "description": "One channel of conversation-level sentiment data.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig": {
      "description": "Configuration that applies to all conversations.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig",
      "properties": {
        "customerChannel": {
          "format": "int32",
          "description": "Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed.",
          "type": "integer"
        },
        "agentChannel": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed."
        },
        "agentId": {
          "type": "string",
          "description": "An opaque, user-specified string representing the human agent who handled the conversations."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata": {
      "type": "object",
      "properties": {
        "appliedRedactionConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig",
          "description": "Output only. The redaction config applied to the uploaded conversation.",
          "readOnly": true
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest",
          "readOnly": true,
          "description": "Output only. The original request."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        },
        "analysisOperation": {
          "type": "string",
          "description": "Output only. The operation name for a successfully created analysis operation, if any.",
          "readOnly": true
        }
      },
      "description": "The metadata for an UploadConversation operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest",
      "description": "The request to create an issue model.",
      "properties": {
        "issueModel": {
          "description": "Required. The issue model to create.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModel"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the issue model."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequest": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource for new conversations."
        },
        "conversationConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig",
          "description": "Configuration that applies to all conversations."
        },
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource",
          "description": "A cloud storage bucket source. Note that any previously ingested objects from the source will be skipped to avoid duplication."
        },
        "redactionConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig",
          "description": "Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings."
        },
        "speechConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1SpeechConfig",
          "description": "Optional. Default Speech-to-Text configuration. Optional, will default to the config specified in Settings."
        },
        "transcriptObjectConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig",
          "description": "Configuration for when `source` contains conversation transcripts."
        }
      },
      "description": "The request to ingest conversations."
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo": {
      "type": "object",
      "properties": {
        "startOffset": {
          "description": "Time offset of the start of this word relative to the beginning of the total conversation.",
          "type": "string",
          "format": "google-duration"
        },
        "confidence": {
          "format": "float",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.",
          "type": "number"
        },
        "endOffset": {
          "type": "string",
          "format": "google-duration",
          "description": "Time offset of the end of this word relative to the beginning of the total conversation."
        },
        "word": {
          "type": "string",
          "description": "The word itself. Includes punctuation marks that surround the word."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo",
      "description": "Word-level info for words in a transcript."
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup": {
      "properties": {
        "phraseMatchRules": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRule"
          },
          "description": "A list of phrase match rules that are included in this group."
        },
        "type": {
          "enum": [
            "PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rules or there is no match.",
            "If any of the phrase match rules are met, there is a match."
          ],
          "description": "Required. The type of this phrase match rule group."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup",
      "description": "A message representing a rule in the phrase matcher."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment": {
      "properties": {
        "issue": {
          "type": "string",
          "description": "Resource name of the assigned issue."
        },
        "score": {
          "format": "double",
          "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1].",
          "type": "number"
        },
        "displayName": {
          "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment",
      "description": "Information about the issue."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest": {
      "description": "The request to delete an issue model.",
      "properties": {
        "name": {
          "description": "Required. The name of the issue model to delete.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant": {
      "properties": {
        "dialogflowParticipant": {
          "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "deprecated": true,
          "type": "string"
        },
        "obfuscatedExternalUserId": {
          "type": "string",
          "description": "Obfuscated user ID from Dialogflow."
        },
        "dialogflowParticipantName": {
          "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "type": "string"
        },
        "role": {
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "description": "The role of the participant.",
          "type": "string"
        },
        "userId": {
          "description": "A user-specified ID representing the participant.",
          "type": "string"
        }
      },
      "description": "The call participant speaking for a given utterance.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
      "properties": {
        "smartReplyAllowlistCovered": {
          "type": "boolean",
          "description": "Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist."
        }
      },
      "description": "Metadata from Dialogflow relating to the current transcript segment.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata",
      "properties": {
        "intents": {
          "description": "All the matched intents in the call.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Intent"
          }
        },
        "phraseMatchers": {
          "type": "object",
          "description": "All the matched phrase matchers in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
          }
        },
        "entities": {
          "type": "object",
          "description": "All the entities in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Entity"
          }
        },
        "annotations": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CallAnnotation"
          },
          "description": "A list of call annotations that apply to this call.",
          "type": "array"
        },
        "sentiments": {
          "type": "array",
          "description": "Overall conversation-level sentiment for each channel of the call.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment"
          }
        },
        "issueModelResult": {
          "description": "Overall conversation-level issue modeling result.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelResult"
        }
      },
      "description": "Call-specific metadata created during analysis."
    },
    "GoogleCloudContactcenterinsightsV1Entity": {
      "type": "object",
      "properties": {
        "salience": {
          "format": "float",
          "type": "number",
          "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below."
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the entity."
        },
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "The aggregate sentiment expressed for this entity in the conversation."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Person.",
            "Location.",
            "Organization.",
            "Event.",
            "Artwork.",
            "Consumer product.",
            "Other types of entities.",
            "Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.",
            "Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.",
            "Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.",
            "Number. The metadata is the number itself.",
            "Price. The metadata identifies the `value` and `currency`."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSON",
            "LOCATION",
            "ORGANIZATION",
            "EVENT",
            "WORK_OF_ART",
            "CONSUMER_GOOD",
            "OTHER",
            "PHONE_NUMBER",
            "ADDRESS",
            "DATE",
            "NUMBER",
            "PRICE"
          ],
          "description": "The entity type."
        }
      },
      "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.",
      "id": "GoogleCloudContactcenterinsightsV1Entity"
    },
    "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig": {
      "type": "object",
      "description": "Default configuration when creating Analyses in Insights.",
      "id": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig",
      "properties": {
        "uploadConversationAnalysisPercentage": {
          "format": "double",
          "type": "number",
          "description": "Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100]."
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        },
        "runtimeIntegrationAnalysisPercentage": {
          "format": "double",
          "description": "Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].",
          "type": "number"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse": {
      "description": "Response for an export insights operation.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse"
    },
    "GoogleCloudContactcenterinsightsV1Settings": {
      "description": "The settings resource.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1Settings",
      "properties": {
        "conversationTtl": {
          "description": "The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.",
          "type": "string",
          "format": "google-duration"
        },
        "languageCode": {
          "description": "A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to \"en-US\" if it is neither specified on the segment nor here.",
          "type": "string"
        },
        "pubsubNotificationSettings": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * \"all-triggers\": Notify each time any of the supported triggers occurs. * \"create-analysis\": Notify each time an analysis is created. * \"create-conversation\": Notify each time a conversation is created. * \"export-insights-data\": Notify each time an export is complete. * \"update-conversation\": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}",
          "type": "object"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which the settings were last updated."
        },
        "speechConfig": {
          "description": "Optional. Default Speech-to-Text resources to be used while ingesting audio files. Optional, CCAI Insights will create a default if not provided.",
          "$ref": "GoogleCloudContactcenterinsightsV1SpeechConfig"
        },
        "analysisConfig": {
          "description": "Default analysis settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings"
        },
        "redactionConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig",
          "description": "Default DLP redaction resources to be applied while ingesting conversations."
        },
        "createTime": {
          "description": "Output only. The time at which the settings was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1View": {
      "id": "GoogleCloudContactcenterinsightsV1View",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}"
        },
        "value": {
          "type": "string",
          "description": "String with specific view properties, must be non-empty."
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the view was updated.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The human-readable display name of the view."
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which this view was created."
        }
      },
      "description": "The View resource."
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest": {
      "description": "The request to delete conversations in bulk.",
      "type": "object",
      "properties": {
        "maxDeleteCount": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of conversations to delete."
        },
        "force": {
          "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses.",
          "type": "boolean"
        },
        "filter": {
          "type": "string",
          "description": "Filter used to select the subset of conversations to delete."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location}"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsMetadata": {
      "properties": {
        "partialErrors": {
          "type": "array",
          "description": "Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "readOnly": true
        },
        "ingestConversationsStats": {
          "readOnly": true,
          "description": "Output only. Statistics for IngestConversations operation.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats"
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest",
          "description": "Output only. The original request for ingest.",
          "readOnly": true
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "The metadata for an IngestConversations operation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadata"
    },
    "GoogleCloudContactcenterinsightsV1Conversation": {
      "properties": {
        "turnCount": {
          "readOnly": true,
          "description": "Output only. The number of turns in the conversation.",
          "format": "int32",
          "type": "integer"
        },
        "languageCode": {
          "type": "string",
          "description": "A user-specified language code for the conversation."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The most recent time at which the conversation was updated.",
          "readOnly": true,
          "type": "string"
        },
        "medium": {
          "type": "string",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "description": "Immutable. The conversation medium, if unspecified will default to PHONE_CALL."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which the conversation was created.",
          "readOnly": true
        },
        "latestAnalysis": {
          "$ref": "GoogleCloudContactcenterinsightsV1Analysis",
          "readOnly": true,
          "description": "Output only. The conversation's latest analysis, if one exists."
        },
        "startTime": {
          "description": "The time at which the conversation started.",
          "format": "google-datetime",
          "type": "string"
        },
        "runtimeAnnotations": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation"
          },
          "readOnly": true,
          "description": "Output only. The annotations that were generated during the customer and agent interaction.",
          "type": "array"
        },
        "agentId": {
          "description": "An opaque, user-specified string representing the human agent who handled the conversation.",
          "type": "string"
        },
        "labels": {
          "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "type": "string"
        },
        "ttl": {
          "type": "string",
          "format": "google-duration",
          "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time."
        },
        "expireTime": {
          "type": "string",
          "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.",
          "format": "google-datetime"
        },
        "duration": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The duration of the conversation.",
          "format": "google-duration"
        },
        "callMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata",
          "description": "Call-specific metadata."
        },
        "latestSummary": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData",
          "description": "Output only. Latest summary of the conversation.",
          "readOnly": true
        },
        "dialogflowIntents": {
          "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1DialogflowIntent"
          }
        },
        "qualityMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationQualityMetadata",
          "description": "Conversation metadata related to quality management."
        },
        "transcript": {
          "description": "Output only. The conversation transcript.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscript"
        },
        "dataSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationDataSource",
          "description": "The source of the audio and transcription for the conversation."
        },
        "obfuscatedUserId": {
          "type": "string",
          "description": "Obfuscated user ID which the customer sent to us."
        }
      },
      "type": "object",
      "description": "The conversation resource.",
      "id": "GoogleCloudContactcenterinsightsV1Conversation"
    },
    "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "phraseMatchers": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
          },
          "description": "The phrase matchers that match the request.",
          "type": "array"
        }
      },
      "description": "The response of listing phrase matchers.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse"
    },
    "GoogleCloudContactcenterinsightsV1ListConversationsResponse": {
      "type": "object",
      "description": "The response of listing conversations.",
      "id": "GoogleCloudContactcenterinsightsV1ListConversationsResponse",
      "properties": {
        "conversations": {
          "type": "array",
          "description": "The conversations that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
          }
        },
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata": {
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest",
          "description": "The original request for export."
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        },
        "partialErrors": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Partial errors during export operation that might cause the operation output to be incomplete."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata",
      "type": "object",
      "description": "Metadata for an export insights operation."
    },
    "GoogleCloudContactcenterinsightsV1IssueMatchData": {
      "description": "The data for an issue match annotation.",
      "properties": {
        "issueAssignment": {
          "description": "Information about the issue's assignment.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueMatchData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ArticleSuggestionData": {
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Map that contains metadata about the Article Suggestion and the document that it originates from.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "title": {
          "description": "Article title.",
          "type": "string"
        },
        "confidenceScore": {
          "type": "number",
          "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float"
        },
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}",
          "type": "string"
        },
        "uri": {
          "description": "Article URI.",
          "type": "string"
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData",
      "type": "object",
      "description": "Agent Assist Article Suggestion data."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData": {
      "properties": {
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Article title."
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the Article Suggestion and the document that it originates from.",
          "type": "object"
        },
        "confidenceScore": {
          "format": "float",
          "type": "number",
          "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "uri": {
          "description": "Article URI.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Agent Assist Article Suggestion data.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData"
    },
    "GoogleProtobufEmpty": {
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "GoogleProtobufEmpty",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination",
      "properties": {
        "table": {
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used."
        },
        "dataset": {
          "type": "string",
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error."
        }
      },
      "description": "A BigQuery Table Reference."
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata": {
      "properties": {
        "createTime": {
          "type": "string",
          "description": "The time the operation was created.",
          "format": "google-datetime"
        },
        "totalRequestedAnalysesCount": {
          "format": "int32",
          "type": "integer",
          "description": "Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request."
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Partial errors during bulk analyze operation that might cause the operation output to be incomplete."
        },
        "failedAnalysesCount": {
          "format": "int32",
          "type": "integer",
          "description": "The number of requested analyses that have failed so far."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest",
          "description": "The original request for bulk analyze."
        },
        "completedAnalysesCount": {
          "description": "The number of requested analyses that have completed successfully so far.",
          "format": "int32",
          "type": "integer"
        },
        "endTime": {
          "description": "The time the operation finished running.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "The metadata for a bulk analyze conversations operation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata"
    },
    "GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo": {
      "type": "object",
      "description": "Information about an agent involved in the conversation.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The agent's name."
        },
        "dispositionCode": {
          "type": "string",
          "description": "A user-provided string indicating the outcome of the agent's segment of the call."
        },
        "team": {
          "description": "A user-specified string representing the agent's team.",
          "type": "string"
        },
        "agentId": {
          "description": "A user-specified string representing the agent.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata",
      "properties": {
        "failedAnalysesCount": {
          "type": "integer",
          "description": "The number of requested analyses that have failed so far.",
          "format": "int32"
        },
        "partialErrors": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "readOnly": true,
          "description": "Output only. Partial errors during bulk analyze operation that might cause the operation output to be incomplete."
        },
        "request": {
          "description": "The original request for bulk analyze.",
          "$ref": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest"
        },
        "completedAnalysesCount": {
          "description": "The number of requested analyses that have completed successfully so far.",
          "type": "integer",
          "format": "int32"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the operation was created."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time the operation finished running.",
          "type": "string"
        },
        "totalRequestedAnalysesCount": {
          "format": "int32",
          "description": "Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.",
          "type": "integer"
        }
      },
      "description": "The metadata for a bulk analyze conversations operation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse": {
      "properties": {
        "successfulAnalysisCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of successful analyses."
        },
        "failedAnalysisCount": {
          "type": "integer",
          "description": "Count of failed analyses.",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse",
      "description": "The response for a bulk analyze conversations operation."
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest",
      "description": "The request to create an issue model.",
      "type": "object",
      "properties": {
        "issueModel": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModel",
          "description": "Required. The issue model to create."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the issue model."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata": {
      "description": "Call-specific metadata.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata",
      "type": "object",
      "properties": {
        "customerChannel": {
          "type": "integer",
          "description": "The audio channel that contains the customer.",
          "format": "int32"
        },
        "agentChannel": {
          "format": "int32",
          "type": "integer",
          "description": "The audio channel that contains the agent."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse": {
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse",
      "description": "Response from import issue model",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata": {
      "properties": {
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Partial errors during export operation that might cause the operation output to be incomplete."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest",
          "description": "The original request for export."
        }
      },
      "type": "object",
      "description": "Metadata for an export insights operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1Conversation": {
      "description": "The conversation resource.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1Conversation",
      "properties": {
        "turnCount": {
          "description": "Output only. The number of turns in the conversation.",
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "obfuscatedUserId": {
          "type": "string",
          "description": "Obfuscated user ID which the customer sent to us."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}"
        },
        "medium": {
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "type": "string",
          "description": "Immutable. The conversation medium, if unspecified will default to PHONE_CALL.",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ]
        },
        "expireTime": {
          "type": "string",
          "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.",
          "format": "google-datetime"
        },
        "languageCode": {
          "description": "A user-specified language code for the conversation.",
          "type": "string"
        },
        "startTime": {
          "format": "google-datetime",
          "description": "The time at which the conversation started.",
          "type": "string"
        },
        "dataSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource",
          "description": "The source of the audio and transcription for the conversation."
        },
        "callMetadata": {
          "description": "Call-specific metadata.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata"
        },
        "transcript": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript",
          "description": "Output only. The conversation transcript."
        },
        "dialogflowIntents": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent"
          },
          "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}",
          "readOnly": true
        },
        "latestAnalysis": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1Analysis",
          "description": "Output only. The conversation's latest analysis, if one exists.",
          "readOnly": true
        },
        "latestSummary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData",
          "description": "Output only. Latest summary of the conversation.",
          "readOnly": true
        },
        "qualityMetadata": {
          "description": "Conversation metadata related to quality management.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata"
        },
        "ttl": {
          "type": "string",
          "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.",
          "format": "google-duration"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time at which the conversation was created."
        },
        "runtimeAnnotations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation"
          },
          "description": "Output only. The annotations that were generated during the customer and agent interaction."
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the conversation was updated.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "duration": {
          "description": "Output only. The duration of the conversation.",
          "type": "string",
          "format": "google-duration",
          "readOnly": true
        },
        "agentId": {
          "description": "An opaque, user-specified string representing the human agent who handled the conversation.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata": {
      "type": "object",
      "description": "Conversation metadata related to quality management.",
      "properties": {
        "agentInfo": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo"
          },
          "description": "Information about agents involved in the call.",
          "type": "array"
        },
        "waitDuration": {
          "type": "string",
          "description": "The amount of time the customer waited to connect with an agent.",
          "format": "google-duration"
        },
        "customerSatisfactionRating": {
          "format": "int32",
          "type": "integer",
          "description": "An arbitrary integer value indicating the customer's satisfaction rating."
        },
        "menuPath": {
          "description": "An arbitrary string value specifying the menu path the customer took.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata"
    },
    "GoogleCloudContactcenterinsightsV1FaqAnswerData": {
      "properties": {
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.",
          "type": "string"
        },
        "question": {
          "description": "The corresponding FAQ question.",
          "type": "string"
        },
        "answer": {
          "type": "string",
          "description": "The piece of text from the `source` knowledge base document."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map that contains metadata about the FAQ answer and the document that it originates from."
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "confidenceScore": {
          "format": "float",
          "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1FaqAnswerData",
      "type": "object",
      "description": "Agent Assist frequently-asked-question answer data."
    },
    "GoogleCloudContactcenterinsightsV1AnnotatorSelector": {
      "description": "Selector of all available annotators and phrase matchers to run.",
      "properties": {
        "runPhraseMatcherAnnotator": {
          "description": "Whether to run the active phrase matcher annotator(s).",
          "type": "boolean"
        },
        "phraseMatchers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}"
        },
        "runSummarizationAnnotator": {
          "description": "Whether to run the summarization annotator.",
          "type": "boolean"
        },
        "summarizationConfig": {
          "description": "Configuration for the summarization annotator.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig"
        },
        "runInterruptionAnnotator": {
          "description": "Whether to run the interruption annotator.",
          "type": "boolean"
        },
        "runSilenceAnnotator": {
          "description": "Whether to run the silence annotator.",
          "type": "boolean"
        },
        "runIntentAnnotator": {
          "type": "boolean",
          "description": "Whether to run the intent annotator."
        },
        "runEntityAnnotator": {
          "type": "boolean",
          "description": "Whether to run the entity annotator."
        },
        "runSentimentAnnotator": {
          "type": "boolean",
          "description": "Whether to run the sentiment annotator."
        },
        "issueModels": {
          "items": {
            "type": "string"
          },
          "description": "The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.",
          "type": "array"
        },
        "runIssueModelAnnotator": {
          "description": "Whether to run the issue model annotator. A model should have already been deployed for this to take effect.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ExportIssueModelRequest": {
      "properties": {
        "name": {
          "description": "Required. The issue model to export",
          "type": "string"
        },
        "gcsDestination": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination",
          "description": "Google Cloud Storage URI to export the Issue Model to."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ExportIssueModelRequest",
      "description": "Request to export an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData",
      "description": "Agent Assist frequently-asked-question answer data.",
      "properties": {
        "answer": {
          "type": "string",
          "description": "The piece of text from the `source` knowledge base document."
        },
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.",
          "type": "string"
        },
        "question": {
          "type": "string",
          "description": "The corresponding FAQ question."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the FAQ answer and the document that it originates from.",
          "type": "object"
        },
        "confidenceScore": {
          "type": "number",
          "format": "float",
          "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData": {
      "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData",
      "properties": {
        "intentUniqueId": {
          "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The issue model to undeploy.",
          "type": "string"
        }
      },
      "description": "The request to undeploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1ListIssuesResponse": {
      "properties": {
        "issues": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Issue"
          },
          "type": "array",
          "description": "The issues that match the request."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ListIssuesResponse",
      "type": "object",
      "description": "The response of listing issues."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource",
      "description": "The conversation source, which is a combination of transcript and audio.",
      "properties": {
        "dialogflowSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource",
          "description": "The source when the conversation comes from Dialogflow."
        },
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1GcsSource",
          "description": "A Cloud Storage location specification for the audio and transcript."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval": {
      "description": "A single interval in a time series.",
      "properties": {
        "conversationCount": {
          "type": "integer",
          "description": "The number of conversations created in this interval.",
          "format": "int32"
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The start time of this interval."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData": {
      "properties": {
        "metadata": {
          "type": "object",
          "description": "A map that contains metadata about the summarization and the document from which it originates.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "confidence": {
          "description": "The confidence score of the summarization.",
          "type": "number",
          "format": "float"
        },
        "textSections": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value."
        },
        "text": {
          "type": "string",
          "description": "The summarization content that is concatenated into one string."
        },
        "conversationModel": {
          "type": "string",
          "description": "The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}"
        },
        "answerRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData",
      "type": "object",
      "description": "Conversation summarization suggestion data."
    },
    "GoogleCloudContactcenterinsightsV1SilenceData": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1SilenceData",
      "description": "The data for a silence annotation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1SentimentData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
      "properties": {
        "score": {
          "description": "The sentiment score between -1.0 (negative) and 1.0 (positive).",
          "format": "float",
          "type": "number"
        },
        "magnitude": {
          "type": "number",
          "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.",
          "format": "float"
        }
      },
      "type": "object",
      "description": "The data for a sentiment annotation."
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination": {
      "properties": {
        "projectId": {
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.",
          "type": "string"
        },
        "dataset": {
          "type": "string",
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error."
        },
        "table": {
          "type": "string",
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination",
      "type": "object",
      "description": "A BigQuery Table Reference."
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata": {
      "properties": {
        "request": {
          "description": "The original request for deployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest"
        },
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata",
      "description": "Metadata for deploying an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse": {
      "properties": {},
      "description": "The response to an IngestConversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResult": {
      "description": "The result of an analysis.",
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResult",
      "properties": {
        "callAnalysisMetadata": {
          "description": "Call-specific metadata created by the analysis.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which the analysis ended."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueAssignment": {
      "id": "GoogleCloudContactcenterinsightsV1IssueAssignment",
      "properties": {
        "issue": {
          "description": "Resource name of the assigned issue.",
          "type": "string"
        },
        "score": {
          "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1].",
          "format": "double",
          "type": "number"
        },
        "displayName": {
          "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.",
          "type": "string"
        }
      },
      "description": "Information about the issue.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig": {
      "description": "Configuration for processing transcript objects.",
      "properties": {
        "medium": {
          "description": "Required. The medium transcript objects represent.",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment",
      "type": "object",
      "properties": {
        "words": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo"
          },
          "description": "A list of the word-specific information for each word in the segment."
        },
        "channelTag": {
          "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.",
          "type": "integer",
          "format": "int32"
        },
        "text": {
          "description": "The text of this segment.",
          "type": "string"
        },
        "sentiment": {
          "description": "The sentiment for this transcript segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
        },
        "messageTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time that the message occurred, if provided."
        },
        "segmentParticipant": {
          "description": "The participant of this segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant"
        },
        "languageCode": {
          "type": "string",
          "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\"."
        },
        "dialogflowSegmentMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
          "description": "CCAI metadata relating to the current transcript segment."
        },
        "confidence": {
          "format": "float",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.",
          "type": "number"
        }
      },
      "description": "A segment of a full transcript."
    },
    "GoogleCloudContactcenterinsightsV1UploadConversationMetadata": {
      "type": "object",
      "properties": {
        "appliedRedactionConfig": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig",
          "description": "Output only. The redaction config applied to the uploaded conversation."
        },
        "request": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1UploadConversationRequest",
          "description": "Output only. The original request."
        },
        "analysisOperation": {
          "readOnly": true,
          "description": "Output only. The operation name for a successfully created analysis operation, if any.",
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation finished running."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1UploadConversationMetadata",
      "description": "The metadata for an UploadConversation operation."
    },
    "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData",
      "description": "Agent Assist Smart Compose suggestion data.",
      "properties": {
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "confidenceScore": {
          "type": "number",
          "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "double"
        },
        "suggestion": {
          "type": "string",
          "description": "The content of the suggestion."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1Issue": {
      "description": "The issue resource.",
      "properties": {
        "sampleUtterances": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. Resource names of the sample representative utterances that match to this issue.",
          "items": {
            "type": "string"
          }
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The most recent time that this issue was updated.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which this issue was created.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the issue."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1Issue",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse",
      "description": "The response for a bulk analyze conversations operation.",
      "properties": {
        "successfulAnalysisCount": {
          "type": "integer",
          "description": "Count of successful analyses.",
          "format": "int32"
        },
        "failedAnalysisCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of failed analyses."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest": {
      "description": "The request to deploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest",
      "properties": {
        "name": {
          "description": "Required. The issue model to deploy.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationCallMetadata": {
      "properties": {
        "customerChannel": {
          "description": "The audio channel that contains the customer.",
          "type": "integer",
          "format": "int32"
        },
        "agentChannel": {
          "description": "The audio channel that contains the agent.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata",
      "description": "Call-specific metadata.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment",
      "type": "object",
      "properties": {
        "segmentParticipant": {
          "description": "The participant of this segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationParticipant"
        },
        "messageTime": {
          "format": "google-datetime",
          "description": "The time that the message occurred, if provided.",
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset."
        },
        "languageCode": {
          "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".",
          "type": "string"
        },
        "channelTag": {
          "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.",
          "format": "int32",
          "type": "integer"
        },
        "words": {
          "description": "A list of the word-specific information for each word in the segment.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo"
          },
          "type": "array"
        },
        "dialogflowSegmentMetadata": {
          "description": "CCAI metadata relating to the current transcript segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata"
        },
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "The sentiment for this transcript segment."
        },
        "text": {
          "type": "string",
          "description": "The text of this segment."
        }
      },
      "description": "A segment of a full transcript."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the intent."
        }
      },
      "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent"
    },
    "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData",
      "properties": {
        "sentiment": {
          "description": "Sentiment expressed for this mention of the entity.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
        },
        "type": {
          "enumDescriptions": [
            "Unspecified.",
            "Proper noun.",
            "Common noun (or noun compound)."
          ],
          "description": "The type of the entity mention.",
          "type": "string",
          "enum": [
            "MENTION_TYPE_UNSPECIFIED",
            "PROPER",
            "COMMON"
          ]
        },
        "entityUniqueId": {
          "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation."
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRule": {
      "properties": {
        "negated": {
          "type": "boolean",
          "description": "Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment."
        },
        "config": {
          "description": "Provides additional information about the rule that specifies how to apply the rule.",
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig"
        },
        "query": {
          "description": "Required. The phrase to be matched.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The data for a phrase match rule.",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRule"
    },
    "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata": {
      "description": "The metadata for a bulk delete conversations operation.",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "The time the operation was created.",
          "format": "google-datetime"
        },
        "request": {
          "description": "The original request for bulk delete.",
          "$ref": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest"
        },
        "endTime": {
          "description": "The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Partial errors during bulk delete conversations operation that might cause the operation output to be incomplete."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData",
      "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the phrase matcher."
        },
        "phraseMatcher": {
          "description": "The unique identifier (the resource name) of the phrase matcher.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest": {
      "type": "object",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource",
          "description": "Google Cloud Storage source message."
        },
        "createNewModel": {
          "type": "boolean",
          "description": "Optional. If set to true, will create a new issue model from the imported file with randomly generated IDs for the issue model and corresponding issues. Otherwise, replaces an existing model with the same ID as the file."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the issue model."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest",
      "description": "Request to import an issue model."
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse": {
      "description": "The response to deploy an issue model.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource",
      "properties": {
        "audioUri": {
          "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
          "type": "string"
        },
        "dialogflowConversation": {
          "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "A Dialogflow source of conversation data.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Intent": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1Intent",
      "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the intent."
        },
        "id": {
          "description": "The unique identifier of the intent.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData": {
      "description": "Dialogflow interaction data.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData",
      "type": "object",
      "properties": {
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "dialogflowIntentId": {
          "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ImportIssueModelResponse": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ImportIssueModelResponse",
      "description": "Response from import issue model",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest",
      "description": "The request to analyze conversations in bulk.",
      "type": "object",
      "properties": {
        "analysisPercentage": {
          "description": "Required. Percentage of selected conversation to analyze, between [0, 100].",
          "type": "number",
          "format": "float"
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to create analyses in."
        },
        "filter": {
          "type": "string",
          "description": "Required. Filter used to select the subset of conversations to analyze."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest": {
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest",
      "type": "object",
      "properties": {
        "writeDisposition": {
          "type": "string",
          "enumDescriptions": [
            "Write disposition is not specified. Defaults to WRITE_TRUNCATE.",
            "If the table already exists, BigQuery will overwrite the table data and use the schema from the load.",
            "If the table already exists, BigQuery will append data to the table."
          ],
          "description": "Options for what to do if the destination table already exists.",
          "enum": [
            "WRITE_DISPOSITION_UNSPECIFIED",
            "WRITE_TRUNCATE",
            "WRITE_APPEND"
          ]
        },
        "bigQueryDestination": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination",
          "description": "Specified if sink is a BigQuery table."
        },
        "parent": {
          "description": "Required. The parent resource to export data from.",
          "type": "string"
        },
        "filter": {
          "type": "string",
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties."
        },
        "kmsKey": {
          "type": "string",
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}"
        }
      },
      "description": "The request to export insights."
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig",
      "description": "Configuration for summarization.",
      "properties": {
        "summarizationModel": {
          "type": "string",
          "enum": [
            "SUMMARIZATION_MODEL_UNSPECIFIED",
            "BASELINE_MODEL"
          ],
          "enumDescriptions": [
            "Unspecified summarization model.",
            "The CCAI baseline model."
          ],
          "description": "Default summarization model to be used."
        },
        "conversationProfile": {
          "description": "Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination": {
      "type": "object",
      "properties": {
        "objectUri": {
          "description": "Required. Format: `gs:///`",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination",
      "description": "Google Cloud Storage Object URI to save the issue model to."
    },
    "GoogleCloudContactcenterinsightsV1ExportIssueModelResponse": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExportIssueModelResponse",
      "description": "Response from export issue model"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse",
      "type": "object",
      "description": "Response for an export insights operation.",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponse": {
      "properties": {
        "conversationCountTimeSeries": {
          "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries",
          "description": "A time series representing the count of conversations created over time that match that requested filter criteria."
        },
        "customHighlighterMatches": {
          "description": "A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "conversationCount": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of conversations."
        },
        "smartHighlighterMatches": {
          "description": "A map associating each smart highlighter display name with its respective number of matches in the set of conversations.",
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        },
        "averageTurnCount": {
          "format": "int32",
          "type": "integer",
          "description": "The average number of turns per conversation."
        },
        "issueMatchesStats": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          },
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`",
          "type": "object"
        },
        "averageDuration": {
          "format": "google-duration",
          "description": "The average duration of all conversations. The average is calculated using only conversations that have a time duration.",
          "type": "string"
        },
        "issueMatches": {
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.",
          "deprecated": true
        }
      },
      "description": "The response for calculating conversation statistics.",
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse": {
      "description": "Response from export issue model",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback": {
      "properties": {
        "clicked": {
          "description": "Indicates whether an answer or item was clicked by the human agent.",
          "type": "boolean"
        },
        "displayed": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI."
        },
        "correctnessLevel": {
          "type": "string",
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ],
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ],
          "description": "The correctness level of an answer."
        }
      },
      "description": "The feedback that the customer has about a certain answer in the conversation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback"
    },
    "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig": {
      "description": "DLP resources used for redaction while ingesting conversations.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig",
      "properties": {
        "inspectTemplate": {
          "description": "The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`",
          "type": "string"
        },
        "deidentifyTemplate": {
          "description": "The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IntentMatchData": {
      "id": "GoogleCloudContactcenterinsightsV1IntentMatchData",
      "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.",
      "type": "object",
      "properties": {
        "intentUniqueId": {
          "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata",
      "properties": {
        "annotatorSelector": {
          "readOnly": true,
          "description": "Output only. The annotator selector used for the analysis (if any).",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
        },
        "conversation": {
          "type": "string",
          "description": "Output only. The Conversation that this Analysis Operation belongs to.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Metadata for a create analysis operation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1GcsSource": {
      "properties": {
        "audioUri": {
          "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
          "type": "string"
        },
        "transcriptUri": {
          "type": "string",
          "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1GcsSource",
      "description": "A Cloud Storage source of conversation data.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult": {
      "properties": {
        "issues": {
          "type": "array",
          "description": "All the matched issues.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment"
          }
        },
        "issueModel": {
          "description": "Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Issue Modeling result on a conversation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult"
    },
    "GoogleCloudContactcenterinsightsV1ImportIssueModelRequest": {
      "type": "object",
      "description": "Request to import an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1ImportIssueModelRequest",
      "properties": {
        "parent": {
          "description": "Required. The parent resource of the issue model.",
          "type": "string"
        },
        "createNewModel": {
          "type": "boolean",
          "description": "Optional. If set to true, will create a new issue model from the imported file with randomly generated IDs for the issue model and corresponding issues. Otherwise, replaces an existing model with the same ID as the file."
        },
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource",
          "description": "Google Cloud Storage source message."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest",
      "properties": {
        "redactionConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig",
          "description": "Optional. DLP settings for transcript redaction. Will default to the config specified in Settings."
        },
        "conversationId": {
          "description": "Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`",
          "type": "string"
        },
        "speechConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig",
          "description": "Optional. Speech-to-Text configuration. Will default to the config specified in Settings."
        },
        "conversation": {
          "description": "Required. The conversation resource to create.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1Conversation"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the conversation."
        }
      },
      "type": "object",
      "description": "Request to upload a conversation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata",
      "description": "Metadata for deleting an issue model.",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created."
        },
        "request": {
          "description": "The original request for deletion.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelMetadata": {
      "properties": {
        "createTime": {
          "description": "The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest",
          "description": "The original export request."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time the operation finished running.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelMetadata",
      "description": "Metadata used for export issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries": {
      "properties": {
        "points": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval"
          },
          "description": "An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window."
        },
        "intervalDuration": {
          "description": "The duration of each interval.",
          "type": "string",
          "format": "google-duration"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries",
      "description": "A time series representing conversations over time.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig": {
      "type": "object",
      "properties": {
        "speechRecognizer": {
          "type": "string",
          "description": "The fully-qualified Speech Recognizer resource name. Format: `projects/{project_id}/locations/{location}/recognizer/{recognizer}`"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig",
      "description": "Speech-to-Text configuration."
    },
    "GoogleCloudContactcenterinsightsV1ExportIssueModelMetadata": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the operation was created."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExportIssueModelRequest",
          "description": "The original export request."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation finished running."
        }
      },
      "description": "Metadata used for export issue model.",
      "id": "GoogleCloudContactcenterinsightsV1ExportIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig",
      "description": "Configuration that applies to all conversations.",
      "properties": {
        "customerChannel": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed."
        },
        "agentId": {
          "type": "string",
          "description": "An opaque, user-specified string representing the human agent who handled the conversations."
        },
        "agentChannel": {
          "type": "integer",
          "description": "Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed.",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata": {
      "description": "The metadata for an IngestConversations operation.",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "ingestConversationsStats": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats",
          "description": "Output only. Statistics for IngestConversations operation.",
          "readOnly": true
        },
        "partialErrors": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest",
          "readOnly": true,
          "description": "Output only. The original request for ingest."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata"
    },
    "GoogleCloudContactcenterinsightsV1ConversationParticipant": {
      "description": "The call participant speaking for a given utterance.",
      "properties": {
        "dialogflowParticipant": {
          "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "deprecated": true,
          "type": "string"
        },
        "userId": {
          "type": "string",
          "description": "A user-specified ID representing the participant."
        },
        "dialogflowParticipantName": {
          "type": "string",
          "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}"
        },
        "role": {
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "description": "The role of the participant.",
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "type": "string"
        },
        "obfuscatedExternalUserId": {
          "type": "string",
          "description": "Obfuscated user ID from Dialogflow."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationParticipant"
    },
    "GoogleCloudContactcenterinsightsV1IssueModel": {
      "properties": {
        "modelType": {
          "description": "Type of the model.",
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "TYPE_V1",
            "TYPE_V2"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified model type.",
            "Type V1.",
            "Type V2."
          ]
        },
        "state": {
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ],
          "description": "Output only. State of the model.",
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ],
          "readOnly": true,
          "type": "string"
        },
        "languageCode": {
          "type": "string",
          "description": "Language of the model."
        },
        "inputDataConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig",
          "description": "Configs for the input data that used to create the issue model."
        },
        "issueCount": {
          "type": "string",
          "description": "Output only. Number of issues in this issue model.",
          "format": "int64",
          "readOnly": true
        },
        "trainingStats": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
          "description": "Output only. Immutable. The issue model's label statistics on its training data.",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time at which this issue model was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the issue model was updated.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "displayName": {
          "description": "The representative name for the issue model.",
          "type": "string"
        }
      },
      "description": "The issue model resource.",
      "id": "GoogleCloudContactcenterinsightsV1IssueModel",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata": {
      "description": "Metadata from Dialogflow relating to the current transcript segment.",
      "type": "object",
      "properties": {
        "smartReplyAllowlistCovered": {
          "description": "Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata"
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest": {
      "properties": {
        "name": {
          "description": "Required. The issue model to undeploy.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest",
      "type": "object",
      "description": "The request to undeploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig": {
      "description": "Configs for the input data used to create the issue model.",
      "properties": {
        "filter": {
          "type": "string",
          "description": "A filter to reduce the conversations used for training the model to a specific subset."
        },
        "medium": {
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "deprecated": true,
          "type": "string",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`."
        },
        "trainingConversationsCount": {
          "description": "Output only. Number of conversations used in training. Output only.",
          "type": "string",
          "format": "int64",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig"
    },
    "GoogleCloudContactcenterinsightsV1alpha1HoldData": {
      "type": "object",
      "properties": {},
      "description": "The data for a hold annotation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1HoldData"
    },
    "GoogleCloudContactcenterinsightsV1DialogflowInteractionData": {
      "properties": {
        "dialogflowIntentId": {
          "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}",
          "type": "string"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        }
      },
      "description": "Dialogflow interaction data.",
      "id": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData",
      "description": "Agent Assist Smart Compose suggestion data.",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates."
        },
        "confidenceScore": {
          "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "double",
          "type": "number"
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "suggestion": {
          "description": "The content of the suggestion.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1EntityMentionData": {
      "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1EntityMentionData",
      "properties": {
        "sentiment": {
          "description": "Sentiment expressed for this mention of the entity.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "entityUniqueId": {
          "type": "string",
          "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to."
        },
        "type": {
          "enum": [
            "MENTION_TYPE_UNSPECIFIED",
            "PROPER",
            "COMMON"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Proper noun.",
            "Common noun (or noun compound)."
          ],
          "type": "string",
          "description": "The type of the entity mention."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest": {
      "properties": {
        "speechConfig": {
          "description": "Optional. Default Speech-to-Text configuration. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig"
        },
        "transcriptObjectConfig": {
          "description": "Configuration for when `source` contains conversation transcripts.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig"
        },
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource",
          "description": "A cloud storage bucket source. Note that any previously ingested objects from the source will be skipped to avoid duplication."
        },
        "conversationConfig": {
          "description": "Configuration that applies to all conversations.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource for new conversations."
        },
        "redactionConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig",
          "description": "Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest",
      "description": "The request to ingest conversations.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData": {
      "description": "Conversation summarization suggestion data.",
      "properties": {
        "answerRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "confidence": {
          "description": "The confidence score of the summarization.",
          "type": "number",
          "format": "float"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map that contains metadata about the summarization and the document from which it originates.",
          "type": "object"
        },
        "textSections": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value."
        },
        "text": {
          "description": "The summarization content that is concatenated into one string.",
          "type": "string"
        },
        "conversationModel": {
          "type": "string",
          "description": "The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData",
      "description": "The data for an issue match annotation.",
      "properties": {
        "issueAssignment": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment",
          "description": "Information about the issue's assignment."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ListAnalysesResponse": {
      "description": "The response to list analyses.",
      "properties": {
        "analyses": {
          "description": "The analyses that match the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1Intent": {
      "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the intent."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1Intent",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse": {
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse",
      "description": "The response to undeploy an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult": {
      "properties": {
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which the analysis ended."
        },
        "callAnalysisMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata",
          "description": "Call-specific metadata created by the analysis."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult",
      "type": "object",
      "description": "The result of an analysis."
    },
    "GoogleCloudContactcenterinsightsV1alpha1Entity": {
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSON",
            "LOCATION",
            "ORGANIZATION",
            "EVENT",
            "WORK_OF_ART",
            "CONSUMER_GOOD",
            "OTHER",
            "PHONE_NUMBER",
            "ADDRESS",
            "DATE",
            "NUMBER",
            "PRICE"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Person.",
            "Location.",
            "Organization.",
            "Event.",
            "Artwork.",
            "Consumer product.",
            "Other types of entities.",
            "Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.",
            "Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.",
            "Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.",
            "Number. The metadata is the number itself.",
            "Price. The metadata identifies the `value` and `currency`."
          ],
          "type": "string",
          "description": "The entity type."
        },
        "displayName": {
          "description": "The representative name for the entity.",
          "type": "string"
        },
        "salience": {
          "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.",
          "format": "float",
          "type": "number"
        },
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
          "description": "The aggregate sentiment expressed for this entity in the conversation."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1Entity",
      "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats": {
      "description": "Aggregated statistics about an issue.",
      "type": "object",
      "properties": {
        "issue": {
          "type": "string",
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        },
        "labeledConversationsCount": {
          "type": "string",
          "description": "Number of conversations attached to the issue at this point in time.",
          "format": "int64"
        },
        "displayName": {
          "description": "Display name of the issue.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats"
    },
    "GoogleCloudContactcenterinsightsV1InterruptionData": {
      "description": "The data for an interruption annotation.",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1InterruptionData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelMetadata": {
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest",
          "description": "The original import request."
        },
        "endTime": {
          "type": "string",
          "description": "The time the operation finished running.",
          "format": "google-datetime"
        }
      },
      "description": "Metadata used for import issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata",
      "type": "object",
      "properties": {
        "request": {
          "description": "The original request for undeployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Metadata for undeploying an issue model."
    },
    "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest": {
      "description": "The request to delete conversations in bulk.",
      "type": "object",
      "properties": {
        "force": {
          "type": "boolean",
          "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses."
        },
        "maxDeleteCount": {
          "type": "integer",
          "description": "Maximum number of conversations to delete.",
          "format": "int32"
        },
        "parent": {
          "description": "Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location}",
          "type": "string"
        },
        "filter": {
          "type": "string",
          "description": "Filter used to select the subset of conversations to delete."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest"
    },
    "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData": {
      "properties": {
        "confidenceScore": {
          "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "double"
        },
        "metadata": {
          "description": "Map that contains metadata about the Smart Reply and the document from which it originates.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "reply": {
          "type": "string",
          "description": "The content of the reply."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData",
      "description": "Agent Assist Smart Reply data.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse": {
      "properties": {},
      "type": "object",
      "description": "The response for a bulk delete conversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse"
    },
    "GoogleLongrunningOperation": {
      "id": "GoogleLongrunningOperation",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata": {
      "description": "Metadata for creating an issue model.",
      "type": "object",
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest",
          "description": "The original request for creation."
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest",
      "type": "object",
      "properties": {
        "filter": {
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.",
          "type": "string"
        },
        "writeDisposition": {
          "enum": [
            "WRITE_DISPOSITION_UNSPECIFIED",
            "WRITE_TRUNCATE",
            "WRITE_APPEND"
          ],
          "type": "string",
          "description": "Options for what to do if the destination table already exists.",
          "enumDescriptions": [
            "Write disposition is not specified. Defaults to WRITE_TRUNCATE.",
            "If the table already exists, BigQuery will overwrite the table data and use the schema from the load.",
            "If the table already exists, BigQuery will append data to the table."
          ]
        },
        "bigQueryDestination": {
          "description": "Specified if sink is a BigQuery table.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to export data from."
        },
        "kmsKey": {
          "type": "string",
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}"
        }
      },
      "description": "The request to export insights."
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata",
      "properties": {
        "intents": {
          "type": "object",
          "description": "All the matched intents in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1Intent"
          }
        },
        "issueModelResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult",
          "description": "Overall conversation-level issue modeling result."
        },
        "annotations": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation"
          },
          "description": "A list of call annotations that apply to this call.",
          "type": "array"
        },
        "sentiments": {
          "description": "Overall conversation-level sentiment for each channel of the call.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment"
          }
        },
        "entities": {
          "description": "All the entities in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1Entity"
          },
          "type": "object"
        },
        "phraseMatchers": {
          "description": "All the matched phrase matchers in the call.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData"
          }
        }
      },
      "type": "object",
      "description": "Call-specific metadata created during analysis."
    },
    "GoogleCloudContactcenterinsightsV1ImportIssueModelMetadata": {
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation finished running."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1ImportIssueModelRequest",
          "description": "The original import request."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation was created."
        }
      },
      "description": "Metadata used for import issue model.",
      "id": "GoogleCloudContactcenterinsightsV1ImportIssueModelMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1UploadConversationRequest": {
      "type": "object",
      "properties": {
        "redactionConfig": {
          "description": "Optional. DLP settings for transcript redaction. Will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig"
        },
        "conversationId": {
          "description": "Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`",
          "type": "string"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the conversation."
        },
        "conversation": {
          "description": "Required. The conversation resource to create.",
          "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
        },
        "speechConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1SpeechConfig",
          "description": "Optional. Speech-to-Text configuration. Will default to the config specified in Settings."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1UploadConversationRequest",
      "description": "Request to upload a conversation."
    },
    "GoogleCloudContactcenterinsightsV1SpeechConfig": {
      "id": "GoogleCloudContactcenterinsightsV1SpeechConfig",
      "description": "Speech-to-Text configuration.",
      "properties": {
        "speechRecognizer": {
          "type": "string",
          "description": "The fully-qualified Speech Recognizer resource name. Format: `projects/{project_id}/locations/{location}/recognizer/{recognizer}`"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse": {
      "description": "The response for a bulk delete conversations operation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig": {
      "properties": {
        "exactMatchConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExactMatchConfig",
          "description": "The configuration for the exact match rule."
        }
      },
      "description": "Configuration information of a phrase match rule.",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata": {
      "type": "object",
      "description": "Metadata for deleting an issue model.",
      "properties": {
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created."
        },
        "request": {
          "description": "The original request for deletion.",
          "$ref": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscript": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscript",
      "type": "object",
      "description": "A message representing the transcript of a conversation.",
      "properties": {
        "transcriptSegments": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment"
          },
          "description": "A list of sequential transcript segments that comprise the conversation.",
          "type": "array"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig": {
      "description": "Configuration for summarization.",
      "properties": {
        "summarizationModel": {
          "type": "string",
          "enum": [
            "SUMMARIZATION_MODEL_UNSPECIFIED",
            "BASELINE_MODEL"
          ],
          "enumDescriptions": [
            "Unspecified summarization model.",
            "The CCAI baseline model."
          ],
          "description": "Default summarization model to be used."
        },
        "conversationProfile": {
          "type": "string",
          "description": "Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource": {
      "id": "GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource",
      "description": "Google Cloud Storage Object URI to get the issue model file from.",
      "type": "object",
      "properties": {
        "objectUri": {
          "type": "string",
          "description": "Required. Format: `gs:///`"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModel": {
      "description": "The issue model resource.",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ],
          "description": "Output only. State of the model.",
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ],
          "type": "string",
          "readOnly": true
        },
        "trainingStats": {
          "readOnly": true,
          "description": "Output only. Immutable. The issue model's label statistics on its training data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats"
        },
        "issueCount": {
          "readOnly": true,
          "description": "Output only. Number of issues in this issue model.",
          "type": "string",
          "format": "int64"
        },
        "modelType": {
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "TYPE_V1",
            "TYPE_V2"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified model type.",
            "Type V1.",
            "Type V2."
          ],
          "description": "Type of the model."
        },
        "languageCode": {
          "type": "string",
          "description": "Language of the model."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the issue model was updated.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which this issue model was created."
        },
        "inputDataConfig": {
          "description": "Configs for the input data that used to create the issue model.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig"
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the issue model."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModel",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment": {
      "description": "One channel of conversation-level sentiment data.",
      "properties": {
        "channelTag": {
          "description": "The channel of the audio that the data applies to.",
          "type": "integer",
          "format": "int32"
        },
        "sentimentData": {
          "description": "Data specifying sentiment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment"
    },
    "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse": {
      "description": "The response of listing issue models.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse",
      "properties": {
        "issueModels": {
          "description": "The issue models that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest": {
      "type": "object",
      "description": "The request to analyze conversations in bulk.",
      "properties": {
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
        },
        "filter": {
          "description": "Required. Filter used to select the subset of conversations to analyze.",
          "type": "string"
        },
        "analysisPercentage": {
          "description": "Required. Percentage of selected conversation to analyze, between [0, 100].",
          "format": "float",
          "type": "number"
        },
        "parent": {
          "description": "Required. The parent resource to create analyses in.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest"
    },
    "GoogleCloudContactcenterinsightsV1SmartReplyData": {
      "properties": {
        "confidenceScore": {
          "format": "double",
          "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        },
        "reply": {
          "type": "string",
          "description": "The content of the reply."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the Smart Reply and the document from which it originates.",
          "type": "object"
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        }
      },
      "description": "Agent Assist Smart Reply data.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1SmartReplyData"
    },
    "GoogleCloudContactcenterinsightsV1ListViewsResponse": {
      "description": "The response of listing views.",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "views": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1View"
          },
          "description": "The views that match the request.",
          "type": "array"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ListViewsResponse",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Analysis": {
      "description": "The analysis resource.",
      "properties": {
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
        },
        "requestTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time at which the analysis was requested."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes.",
          "readOnly": true,
          "type": "string"
        },
        "analysisResult": {
          "description": "Output only. The result of the analysis, which is populated when the analysis finishes.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResult",
          "readOnly": true
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1Analysis",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse": {
      "type": "object",
      "description": "Response of querying an issue model's statistics.",
      "id": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse",
      "properties": {
        "currentStats": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
          "description": "The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1GcsSource": {
      "description": "A Cloud Storage source of conversation data.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1GcsSource",
      "properties": {
        "transcriptUri": {
          "type": "string",
          "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript."
        },
        "audioUri": {
          "type": "string",
          "description": "Cloud Storage URI that points to a file that contains the conversation audio."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ConversationDataSource": {
      "description": "The conversation source, which is a combination of transcript and audio.",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1GcsSource",
          "description": "A Cloud Storage location specification for the audio and transcript."
        },
        "dialogflowSource": {
          "description": "The source when the conversation comes from Dialogflow.",
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowSource"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationDataSource"
    },
    "GoogleCloudContactcenterinsightsV1AnnotationBoundary": {
      "id": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
      "description": "A point in a conversation that marks the start or the end of an annotation.",
      "properties": {
        "transcriptIndex": {
          "format": "int32",
          "type": "integer",
          "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero."
        },
        "wordIndex": {
          "format": "int32",
          "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats": {
      "properties": {
        "unclassifiedConversationsCount": {
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time.",
          "type": "string",
          "format": "int64"
        },
        "issueStats": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats"
          },
          "description": "Statistics on each issue. Key is the issue's resource name."
        },
        "analyzedConversationsCount": {
          "format": "int64",
          "description": "Number of conversations the issue model has analyzed at this point in time.",
          "type": "string"
        }
      },
      "description": "Aggregated statistics about an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest": {
      "description": "The request to delete an issue model.",
      "properties": {
        "name": {
          "description": "Required. The name of the issue model to delete.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1ConversationQualityMetadata": {
      "properties": {
        "waitDuration": {
          "type": "string",
          "format": "google-duration",
          "description": "The amount of time the customer waited to connect with an agent."
        },
        "menuPath": {
          "type": "string",
          "description": "An arbitrary string value specifying the menu path the customer took."
        },
        "agentInfo": {
          "description": "Information about agents involved in the call.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo"
          },
          "type": "array"
        },
        "customerSatisfactionRating": {
          "format": "int32",
          "description": "An arbitrary integer value indicating the customer's satisfaction rating.",
          "type": "integer"
        }
      },
      "description": "Conversation metadata related to quality management.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationQualityMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
      "properties": {
        "transcriptIndex": {
          "format": "int32",
          "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.",
          "type": "integer"
        },
        "wordIndex": {
          "format": "int32",
          "type": "integer",
          "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero."
        }
      },
      "type": "object",
      "description": "A point in a conversation that marks the start or the end of an annotation."
    }
  },
  "version_module": true,
  "documentationLink": "https://cloud.google.com/contact-center/insights/docs",
  "mtlsRootUrl": "https://contactcenterinsights.mtls.googleapis.com/",
  "batchPath": "batch",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "parameters": {
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "location": "query",
      "type": "string",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "getSettings": {
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "parameterOrder": [
                "name"
              ],
              "id": "contactcenterinsights.projects.locations.getSettings",
              "description": "Gets project-level settings.",
              "parameters": {
                "name": {
                  "description": "Required. The name of the settings resource to get.",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              }
            },
            "updateSettings": {
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "format": "google-fieldmask",
                  "description": "Required. The list of fields to be updated.",
                  "location": "query"
                },
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "httpMethod": "PATCH",
              "id": "contactcenterinsights.projects.locations.updateSettings",
              "description": "Updates project-level settings.",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}"
            }
          },
          "resources": {
            "phraseMatchers": {
              "methods": {
                "patch": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "required": true
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The list of fields to be updated.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "path": "v1/{+name}",
                  "description": "Updates a phrase matcher.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  }
                },
                "delete": {
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "description": "Deletes a phrase matcher.",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.delete",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the phrase matcher to delete.",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "description": "Gets a phrase matcher.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.get",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the phrase matcher to get."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "path": "v1/{+name}"
                },
                "list": {
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of phrase matchers to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                      "format": "int32"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "A filter to reduce results to a specific subset. Useful for querying phrase matchers with specific properties."
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListPhraseMatchersResponse`. This value indicates that this is a continuation of a prior `ListPhraseMatchers` call and that the system should return the next page of data.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent resource of the phrase matcher.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists phrase matchers.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/phraseMatchers"
                },
                "create": {
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "description": "Creates a phrase matcher.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.create",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent resource of the phrase matcher. Required. The location to create a phrase matcher for. Format: `projects//locations/` or `projects//locations/`"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/phraseMatchers",
                  "httpMethod": "POST"
                }
              }
            },
            "insightsdata": {
              "methods": {
                "export": {
                  "description": "Export insights data to a destination defined in the request body.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.insightsdata.export",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource to export data from.",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/insightsdata:export"
                }
              }
            },
            "conversations": {
              "methods": {
                "calculateStats": {
                  "path": "v1/{+location}/conversations:calculateStats",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse"
                  },
                  "parameterOrder": [
                    "location"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats",
                  "id": "contactcenterinsights.projects.locations.conversations.calculateStats",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets conversation statistics.",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "A filter to reduce results to a specific subset. This field is useful for getting statistics about conversations with specific properties.",
                      "type": "string"
                    },
                    "location": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The location of the conversations.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "httpMethod": "GET"
                },
                "ingest": {
                  "description": "Imports conversations and processes them according to the user's configuration.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "contactcenterinsights.projects.locations.conversations.ingest",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest",
                  "path": "v1/{+parent}/conversations:ingest",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource for new conversations.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "create": {
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/conversations",
                  "parameters": {
                    "conversationId": {
                      "location": "query",
                      "description": "A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent resource of the conversation.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Creates a conversation.",
                  "id": "contactcenterinsights.projects.locations.conversations.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations"
                },
                "upload": {
                  "description": "Create a longrunning conversation upload operation. This method differs from CreateConversation by allowing audio transcription and optional DLP redaction.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.upload",
                  "path": "v1/{+parent}/conversations:upload",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1UploadConversationRequest"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent resource of the conversation.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:upload"
                },
                "bulkDelete": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkDelete",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location}",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v1/{+parent}/conversations:bulkDelete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes multiple conversations in a single request.",
                  "id": "contactcenterinsights.projects.locations.conversations.bulkDelete",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest"
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The parent resource of the conversation.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "The maximum number of conversations to return in the response. A valid page size ranges from 0 to 1,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size.",
                      "location": "query",
                      "format": "int32"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties."
                    },
                    "view": {
                      "type": "string",
                      "enumDescriptions": [
                        "The conversation view is not specified. * Defaults to `FULL` in `GetConversationRequest`. * Defaults to `BASIC` in `ListConversationsRequest`.",
                        "Populates all fields in the conversation.",
                        "Populates all fields in the conversation except the transcript."
                      ],
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "FULL",
                        "BASIC"
                      ],
                      "description": "The level of details of the conversation. Default is `BASIC`.",
                      "location": "query"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Optional. The attribute by which to order conversations in the response. If empty, conversations will be ordered by descending creation time. Supported values are one of the following: * create_time * customer_satisfaction_rating * duration * latest_analysis * start_time * turn_count The default sort order is ascending. To specify order, append `asc` or `desc`, i.e. `create_time desc`. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The value returned by the last `ListConversationsResponse`. This value indicates that this is a continuation of a prior `ListConversations` call and that the system should return the next page of data.",
                      "location": "query"
                    }
                  },
                  "description": "Lists conversations.",
                  "id": "contactcenterinsights.projects.locations.conversations.list",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListConversationsResponse"
                  },
                  "path": "v1/{+parent}/conversations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "patch": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "description": "Updates a conversation.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "location": "path",
                      "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "The list of fields to be updated.",
                      "location": "query",
                      "format": "google-fieldmask"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.conversations.patch",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  }
                },
                "bulkAnalyze": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource to create analyses in.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Analyzes multiple conversations in a single request.",
                  "path": "v1/{+parent}/conversations:bulkAnalyze",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze",
                  "id": "contactcenterinsights.projects.locations.conversations.bulkAnalyze",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.delete",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "description": "Deletes a conversation.",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "force": {
                      "type": "boolean",
                      "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses.",
                      "location": "query"
                    },
                    "name": {
                      "description": "Required. The name of the conversation to delete.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "type": "string"
                    }
                  }
                },
                "get": {
                  "id": "contactcenterinsights.projects.locations.conversations.get",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets a conversation.",
                  "parameters": {
                    "view": {
                      "location": "query",
                      "description": "The level of details of the conversation. Default is `FULL`.",
                      "enumDescriptions": [
                        "The conversation view is not specified. * Defaults to `FULL` in `GetConversationRequest`. * Defaults to `BASIC` in `ListConversationsRequest`.",
                        "Populates all fields in the conversation.",
                        "Populates all fields in the conversation except the transcript."
                      ],
                      "type": "string",
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "FULL",
                        "BASIC"
                      ]
                    },
                    "name": {
                      "required": true,
                      "description": "Required. The name of the conversation to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  }
                }
              },
              "resources": {
                "analyses": {
                  "methods": {
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "pageToken": {
                          "description": "The value returned by the last `ListAnalysesResponse`; indicates that this is a continuation of a prior `ListAnalyses` call and the system should return the next page of data.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "description": "Required. The parent resource of the analyses.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "required": true,
                          "location": "path"
                        },
                        "pageSize": {
                          "format": "int32",
                          "description": "The maximum number of analyses to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                          "location": "query",
                          "type": "integer"
                        },
                        "filter": {
                          "type": "string",
                          "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties.",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "httpMethod": "GET",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.list",
                      "path": "v1/{+parent}/analyses",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse"
                      },
                      "description": "Lists analyses."
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/analyses",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "httpMethod": "POST",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.create",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "type": "string",
                          "description": "Required. The parent resource of the analysis.",
                          "location": "path",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "description": "Creates an analysis. The long running operation is done when the analysis has completed.",
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. The name of the analysis to get.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.get",
                      "description": "Gets an analysis.",
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}"
                    },
                    "delete": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the analysis to delete.",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$",
                          "type": "string"
                        }
                      },
                      "httpMethod": "DELETE",
                      "description": "Deletes an analysis.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.delete"
                    }
                  }
                }
              }
            },
            "views": {
              "methods": {
                "create": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the view. Required. The location to create a view for. Format: `projects//locations/` or `projects//locations/`"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views",
                  "path": "v1/{+parent}/views",
                  "id": "contactcenterinsights.projects.locations.views.create",
                  "description": "Creates a view.",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  }
                },
                "get": {
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "id": "contactcenterinsights.projects.locations.views.get",
                  "description": "Gets a view.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "description": "Required. The name of the view to get.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a view.",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the view to delete.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "id": "contactcenterinsights.projects.locations.views.delete",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "id": "contactcenterinsights.projects.locations.views.patch",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$"
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "The list of fields to be updated.",
                      "format": "google-fieldmask"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "path": "v1/{+name}",
                  "httpMethod": "PATCH",
                  "description": "Updates a view.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "id": "contactcenterinsights.projects.locations.views.list",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of views to return in the response. If this value is zero, the service will select a default size. A call may return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                      "type": "integer",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The value returned by the last `ListViewsResponse`; indicates that this is a continuation of a prior `ListViews` call and the system should return the next page of data."
                    },
                    "parent": {
                      "description": "Required. The parent resource of the views.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Lists views.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListViewsResponse"
                  },
                  "path": "v1/{+parent}/views",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "issueModels": {
              "methods": {
                "undeploy": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The issue model to undeploy."
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.undeploy",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}:undeploy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "get": {
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets an issue model.",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "id": "contactcenterinsights.projects.locations.issueModels.get",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the issue model to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "export": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:export",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "location": "path",
                      "description": "Required. The issue model to export",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}:export",
                  "id": "contactcenterinsights.projects.locations.issueModels.export",
                  "description": "Exports an issue model to the provided destination.",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ExportIssueModelRequest"
                  }
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "The list of fields to be updated.",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.patch",
                  "path": "v1/{+name}",
                  "description": "Updates an issue model."
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels",
                  "path": "v1/{+parent}/issueModels",
                  "httpMethod": "POST",
                  "description": "Creates an issue model.",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the issue model.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.create"
                },
                "delete": {
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the issue model to delete."
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.delete",
                  "description": "Deletes an issue model.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "deploy": {
                  "path": "v1/{+name}:deploy",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The issue model to deploy.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.",
                  "id": "contactcenterinsights.projects.locations.issueModels.deploy",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "list": {
                  "description": "Lists issue models.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/issueModels",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent resource of the issue model.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.list"
                },
                "calculateIssueModelStats": {
                  "path": "v1/{+issueModel}:calculateIssueModelStats",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats",
                  "parameters": {
                    "issueModel": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The resource name of the issue model to query against.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "issueModel"
                  ],
                  "description": "Gets an issue model's statistics.",
                  "id": "contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse"
                  }
                },
                "import": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.import",
                  "description": "Imports an issue model from a Cloud Storage bucket.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/issueModels:import",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the issue model.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ImportIssueModelRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels:import"
                }
              },
              "resources": {
                "issues": {
                  "methods": {
                    "get": {
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the issue to get.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.get",
                      "description": "Gets an issue.",
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      }
                    },
                    "delete": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes an issue.",
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.delete",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. The name of the issue to delete.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$"
                        }
                      },
                      "httpMethod": "DELETE",
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      }
                    },
                    "patch": {
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "parameters": {
                        "updateMask": {
                          "description": "The list of fields to be updated.",
                          "location": "query",
                          "format": "google-fieldmask",
                          "type": "string"
                        },
                        "name": {
                          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "httpMethod": "PATCH",
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.patch",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Updates an issue."
                    },
                    "list": {
                      "description": "Lists issues.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. The parent resource of the issue.",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListIssuesResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues",
                      "path": "v1/{+parent}/issues",
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.list"
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenterinsights.projects.locations.operations.list",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "httpMethod": "GET",
                  "path": "v1/{+name}/operations",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation's parent resource."
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer"
                    },
                    "filter": {
                      "location": "query",
                      "description": "The standard list filter.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations"
                },
                "cancel": {
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.operations.cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "path": "v1/{+name}:cancel",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                },
                "get": {
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "id": "contactcenterinsights.projects.locations.operations.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET"
                }
              }
            }
          }
        }
      }
    }
  },
  "ownerName": "Google",
  "baseUrl": "https://contactcenterinsights.googleapis.com/",
  "id": "contactcenterinsights:v1",
  "kind": "discovery#restDescription",
  "name": "contactcenterinsights",
  "servicePath": "",
  "description": "",
  "discoveryVersion": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "protocol": "rest",
  "revision": "20240212",
  "title": "Contact Center AI Insights API",
  "fullyEncodeReservedExpansion": true
}

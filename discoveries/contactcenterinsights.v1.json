{
  "version": "v1",
  "discoveryVersion": "v1",
  "name": "contactcenterinsights",
  "title": "Contact Center AI Insights API",
  "documentationLink": "https://cloud.google.com/contact-center/insights/docs",
  "kind": "discovery#restDescription",
  "description": "",
  "protocol": "rest",
  "parameters": {
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "alt": {
      "location": "query",
      "default": "json",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response."
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    }
  },
  "revision": "20210918",
  "ownerName": "Google",
  "servicePath": "",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "updateSettings": {
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "description": "Updates project-level settings.",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query",
                  "description": "Required. The list of fields to be updated."
                }
              },
              "httpMethod": "PATCH",
              "request": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "id": "contactcenterinsights.projects.locations.updateSettings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ]
            },
            "getSettings": {
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "id": "contactcenterinsights.projects.locations.getSettings",
              "description": "Gets project-level settings.",
              "parameters": {
                "name": {
                  "description": "Required. The name of the settings resource to get.",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "httpMethod": "GET"
            }
          },
          "resources": {
            "conversations": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "description": "Gets a conversation.",
                  "parameters": {
                    "view": {
                      "description": "The level of details of the conversation. Default is `FULL`.",
                      "type": "string",
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "location": "query",
                      "enumDescriptions": [
                        "Not specified. Defaults to FULL on GetConversationRequest and BASIC for ListConversationsRequest.",
                        "Transcript field is not populated in the response.",
                        "All fields are populated."
                      ]
                    },
                    "name": {
                      "description": "Required. The name of the conversation to get.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "id": "contactcenterinsights.projects.locations.conversations.get",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  }
                },
                "calculateStats": {
                  "description": "Gets conversation statistics.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "location"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse"
                  },
                  "path": "v1/{+location}/conversations:calculateStats",
                  "parameters": {
                    "location": {
                      "required": true,
                      "description": "Required. The location of the conversations.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "A filter to reduce results to a specific subset. This field is useful for getting statistics about conversations with specific properties."
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats",
                  "id": "contactcenterinsights.projects.locations.conversations.calculateStats"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.create",
                  "parameters": {
                    "conversationId": {
                      "description": "A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-32 characters and must match the regular expression /^[a-z0-9-]{4,32}$/. Valid characters are /a-z-/",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent resource of the conversation.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "description": "Creates a conversation.",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations",
                  "path": "v1/{+parent}/conversations",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  }
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "id": "contactcenterinsights.projects.locations.conversations.patch",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "required": true,
                      "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
                      "location": "path",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "The list of fields to be updated.",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    }
                  },
                  "description": "Updates a conversation.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "parameters": {
                    "force": {
                      "location": "query",
                      "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Required. The name of the conversation to delete.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.delete",
                  "description": "Deletes a conversation.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListConversationsResponse"
                  },
                  "path": "v1/{+parent}/conversations",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties."
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of conversations to return in the response. A valid page size ranges from 0 to 1,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size."
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent resource of the conversation.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "view": {
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "type": "string",
                      "location": "query",
                      "enumDescriptions": [
                        "Not specified. Defaults to FULL on GetConversationRequest and BASIC for ListConversationsRequest.",
                        "Transcript field is not populated in the response.",
                        "All fields are populated."
                      ],
                      "description": "The level of details of the conversation. Default is `BASIC`."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The value returned by the last `ListConversationsResponse`. This value indicates that this is a continuation of a prior `ListConversations` call and that the system should return the next page of data.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "contactcenterinsights.projects.locations.conversations.list",
                  "description": "Lists conversations.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations"
                }
              },
              "resources": {
                "analyses": {
                  "methods": {
                    "get": {
                      "description": "Gets an analysis.",
                      "httpMethod": "GET",
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$",
                          "description": "Required. The name of the analysis to get."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.get",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}"
                    },
                    "list": {
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "description": "The maximum number of analyses to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "The value returned by the last `ListAnalysesResponse`; indicates that this is a continuation of a prior `ListAnalyses` call and the system should return the next page of data."
                        },
                        "filter": {
                          "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "description": "Required. The parent resource of the analyses.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "required": true
                        }
                      },
                      "description": "Lists analyses.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/analyses",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse"
                      },
                      "httpMethod": "GET",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the analysis to delete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "description": "Deletes an analysis.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.delete"
                    },
                    "create": {
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "Required. The parent resource of the analysis.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.create",
                      "description": "Creates an analysis. The long running operation is done when the analysis has completed.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "path": "v1/{+parent}/analyses",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      }
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.operations.cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}:cancel",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "id": "contactcenterinsights.projects.locations.operations.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation resource.",
                      "type": "string"
                    }
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "The standard list filter.",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "The standard list page size.",
                      "format": "int32",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "required": true
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The standard list page token.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenterinsights.projects.locations.operations.list",
                  "path": "v1/{+name}/operations"
                }
              }
            },
            "issueModels": {
              "resources": {
                "issues": {
                  "methods": {
                    "patch": {
                      "httpMethod": "PATCH",
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.patch",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "description": "Updates an issue.",
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "parameters": {
                        "updateMask": {
                          "type": "string",
                          "description": "The list of fields to be updated.",
                          "location": "query",
                          "format": "google-fieldmask"
                        },
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent resource of the issue.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues",
                      "description": "Lists issues.",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListIssuesResponse"
                      },
                      "path": "v1/{+parent}/issues",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.list"
                    },
                    "get": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets an issue.",
                      "path": "v1/{+name}",
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.get",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the issue to get.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$",
                          "location": "path"
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.patch",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The list of fields to be updated.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "PATCH",
                  "description": "Updates an issue model.",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  }
                },
                "get": {
                  "id": "contactcenterinsights.projects.locations.issueModels.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets an issue model.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the issue model to get.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  }
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent resource of the issue model.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+parent}/issueModels",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Creates an issue model.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "id": "contactcenterinsights.projects.locations.issueModels.create",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels"
                },
                "delete": {
                  "id": "contactcenterinsights.projects.locations.issueModels.delete",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the issue model to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Deletes an issue model.",
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "calculateIssueModelStats": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "issueModel"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse"
                  },
                  "parameters": {
                    "issueModel": {
                      "description": "Required. The resource name of the issue model to query against.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "description": "Gets an issue model's statistics.",
                  "id": "contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats",
                  "path": "v1/{+issueModel}:calculateIssueModelStats",
                  "httpMethod": "GET"
                },
                "deploy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "description": "Required. The issue model to deploy.",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+name}:deploy",
                  "id": "contactcenterinsights.projects.locations.issueModels.deploy",
                  "description": "Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest"
                  }
                },
                "undeploy": {
                  "description": "Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.",
                  "httpMethod": "POST",
                  "path": "v1/{+name}:undeploy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.undeploy",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The issue model to undeploy."
                    }
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "description": "Lists issue models.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels",
                  "path": "v1/{+parent}/issueModels",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent resource of the issue model."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "phraseMatchers": {
              "methods": {
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the phrase matcher to get.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$"
                    }
                  },
                  "description": "Gets a phrase matcher."
                },
                "list": {
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent resource of the phrase matcher.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of phrase matchers to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                      "location": "query",
                      "type": "integer"
                    },
                    "filter": {
                      "type": "string",
                      "description": "A filter to reduce results to a specific subset. Useful for querying phrase matchers with specific properties.",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The value returned by the last `ListPhraseMatchersResponse`. This value indicates that this is a continuation of a prior `ListPhraseMatchers` call and that the system should return the next page of data."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/phraseMatchers",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers",
                  "description": "Lists phrase matchers.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.list"
                },
                "delete": {
                  "description": "Deletes a phrase matcher.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the phrase matcher to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE"
                },
                "create": {
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.create",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/phraseMatchers",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent resource of the phrase matcher. Required. The location to create a phrase matcher for. Format: `projects//locations/` or `projects//locations/`"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a phrase matcher."
                }
              }
            },
            "insightsdata": {
              "methods": {
                "export": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
                  },
                  "path": "v1/{+parent}/insightsdata:export",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Export insights data to a destination defined in the request body.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent resource to export data from.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export",
                  "id": "contactcenterinsights.projects.locations.insightsdata.export"
                }
              }
            }
          }
        }
      }
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "version_module": true,
  "baseUrl": "https://contactcenterinsights.googleapis.com/",
  "schemas": {
    "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse": {
      "type": "object",
      "description": "The response of listing phrase matchers.",
      "id": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse",
      "properties": {
        "phraseMatchers": {
          "description": "The phrase matchers that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1Intent": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the intent."
        },
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the intent."
        }
      },
      "type": "object",
      "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.",
      "id": "GoogleCloudContactcenterinsightsV1Intent"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatcher": {
      "properties": {
        "revisionId": {
          "readOnly": true,
          "description": "Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567",
          "type": "string"
        },
        "active": {
          "description": "Applies the phrase matcher only when it is active.",
          "type": "boolean"
        },
        "versionTag": {
          "type": "string",
          "description": "The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`."
        },
        "type": {
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rule groups or there is no match.",
            "If any of the phrase match rule groups are met, there is a match."
          ],
          "type": "string",
          "description": "Required. The type of this phrase matcher.",
          "enum": [
            "PHRASE_MATCHER_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ]
        },
        "phraseMatchRuleGroups": {
          "description": "A list of phase match rule groups that are included in this matcher.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup"
          }
        },
        "displayName": {
          "description": "The human-readable name of the phrase matcher.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the phrase matcher was updated.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "roleMatch": {
          "description": "The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "type": "string"
        },
        "name": {
          "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
          "type": "string"
        },
        "activationUpdateTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The most recent time at which the activation status was updated."
        },
        "revisionCreateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatcher",
      "type": "object",
      "description": "The phrase matcher resource."
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest": {
      "properties": {
        "name": {
          "description": "Required. The issue model to undeploy.",
          "type": "string"
        }
      },
      "description": "The request to undeploy an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats": {
      "description": "Aggregated statistics about an issue.",
      "properties": {
        "labeledConversationsCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of conversations attached to the issue at this point in time."
        },
        "issue": {
          "type": "string",
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata": {
      "description": "Metadata for a create analysis operation.",
      "id": "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata",
      "properties": {
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        },
        "conversation": {
          "type": "string",
          "description": "Output only. The Conversation that this Analysis Operation belongs to.",
          "readOnly": true
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationDataSource": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationDataSource",
      "type": "object",
      "description": "The conversation source, which is a combination of transcript and audio.",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1GcsSource",
          "description": "A Cloud Storage location specification for the audio and transcript."
        },
        "dialogflowSource": {
          "description": "The source when the conversation comes from Dialogflow.",
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowSource"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse": {
      "properties": {},
      "description": "The response to undeploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata": {
      "properties": {
        "endTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime"
        },
        "request": {
          "description": "The original request for undeployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata",
      "type": "object",
      "description": "Metadata for undeploying an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse",
      "description": "The response to deploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse",
      "properties": {
        "conversationCountTimeSeries": {
          "description": "A time series representing the count of conversations created over time that match that requested filter criteria.",
          "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries"
        },
        "smartHighlighterMatches": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          },
          "description": "A map associating each smart highlighter display name with its respective number of matches in the set of conversations."
        },
        "conversationCount": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of conversations."
        },
        "issueMatches": {
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`",
          "type": "object"
        },
        "averageTurnCount": {
          "format": "int32",
          "description": "The average number of turns per conversation.",
          "type": "integer"
        },
        "averageDuration": {
          "description": "The average duration of all conversations. The average is calculated using only conversations that have a time duration.",
          "type": "string",
          "format": "google-duration"
        },
        "customHighlighterMatches": {
          "description": "A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          },
          "type": "object"
        }
      },
      "description": "The response for calculating conversation statistics.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1FaqAnswerData": {
      "description": "Agent Assist frequently-asked-question answer data.",
      "properties": {
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.",
          "type": "string"
        },
        "confidenceScore": {
          "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float",
          "type": "number"
        },
        "question": {
          "type": "string",
          "description": "The corresponding FAQ question."
        },
        "metadata": {
          "type": "object",
          "description": "Map that contains metadata about the FAQ answer and the document that it originates from.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "answer": {
          "description": "The piece of text from the `source` knowledge base document.",
          "type": "string"
        },
        "queryRecord": {
          "description": "Name of the query record. Format: projects/{project}/locations/{location}/queryRecords/{query_record}.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1FaqAnswerData"
    },
    "GoogleCloudContactcenterinsightsV1AnnotationBoundary": {
      "description": "A point in a conversation that marks the start or the end of an annotation.",
      "id": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
      "type": "object",
      "properties": {
        "transcriptIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero."
        },
        "wordIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ConversationParticipant": {
      "properties": {
        "dialogflowParticipant": {
          "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "type": "string"
        },
        "obfuscatedExternalUserId": {
          "description": "Obfuscated user ID from Dialogflow.",
          "type": "string"
        },
        "userId": {
          "type": "string",
          "description": "A user-specified ID representing the participant."
        },
        "role": {
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "description": "The role of the participant.",
          "type": "string"
        },
        "dialogflowParticipantName": {
          "type": "string",
          "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}"
        }
      },
      "type": "object",
      "description": "The call participant speaking for a given utterance.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationParticipant"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchData": {
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchData",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the phrase matcher."
        },
        "phraseMatcher": {
          "type": "string",
          "description": "The unique identifier (the resource name) of the phrase matcher."
        }
      },
      "type": "object",
      "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match."
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse": {
      "type": "object",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse",
      "description": "Response for an export insights operation."
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        },
        "request": {
          "description": "The original request for creation.",
          "$ref": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string"
        }
      },
      "description": "Metadata for creating an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CallAnnotation": {
      "type": "object",
      "description": "A piece of metadata that applies to a window of a call.",
      "id": "GoogleCloudContactcenterinsightsV1CallAnnotation",
      "properties": {
        "channelTag": {
          "format": "int32",
          "type": "integer",
          "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated."
        },
        "interruptionData": {
          "$ref": "GoogleCloudContactcenterinsightsV1InterruptionData",
          "description": "Data specifying an interruption."
        },
        "sentimentData": {
          "description": "Data specifying sentiment.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "entityMentionData": {
          "$ref": "GoogleCloudContactcenterinsightsV1EntityMentionData",
          "description": "Data specifying an entity mention."
        },
        "phraseMatchData": {
          "description": "Data specifying a phrase match.",
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
        },
        "annotationStartBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        },
        "annotationEndBoundary": {
          "description": "The boundary in the conversation where the annotation ends, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "intentMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1IntentMatchData",
          "description": "Data specifying an intent match."
        },
        "silenceData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SilenceData",
          "description": "Data specifying silence."
        },
        "holdData": {
          "$ref": "GoogleCloudContactcenterinsightsV1HoldData",
          "description": "Data specifying a hold."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse": {
      "properties": {
        "issueModels": {
          "description": "The issue models that match the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
          }
        }
      },
      "type": "object",
      "description": "The response of listing issue models.",
      "id": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata": {
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string"
        },
        "conversation": {
          "type": "string",
          "description": "Output only. The Conversation that this Analysis Operation belongs to.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        }
      },
      "description": "Metadata for a create analysis operation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats",
      "description": "Aggregated statistics about an issue.",
      "type": "object",
      "properties": {
        "issue": {
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
          "type": "string"
        },
        "labeledConversationsCount": {
          "type": "string",
          "description": "Number of conversations attached to the issue at this point in time.",
          "format": "int64"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata": {
      "description": "Metadata for deploying an issue model.",
      "properties": {
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        },
        "request": {
          "description": "The original request for deployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest"
        },
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ArticleSuggestionData": {
      "description": "Agent Assist Article Suggestion data.",
      "id": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData",
      "properties": {
        "uri": {
          "description": "Article URI.",
          "type": "string"
        },
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}",
          "type": "string"
        },
        "metadata": {
          "description": "Map that contains metadata about the Article Suggestion and the document that it originates from.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "confidenceScore": {
          "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "float"
        },
        "queryRecord": {
          "description": "Name of the query record. Format: projects/{project}/locations/{location}/queryRecords/{query_record}",
          "type": "string"
        },
        "title": {
          "description": "Article title.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Analysis": {
      "id": "GoogleCloudContactcenterinsightsV1Analysis",
      "description": "The analysis resource.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes."
        },
        "analysisResult": {
          "description": "Output only. The result of the analysis, which is populated when the analysis finishes.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResult"
        },
        "requestTime": {
          "readOnly": true,
          "description": "Output only. The time at which the analysis was requested.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleRpcStatus": {
      "properties": {
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "GoogleRpcStatus",
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata": {
      "description": "Call-specific metadata created during analysis.",
      "type": "object",
      "properties": {
        "sentiments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment"
          },
          "description": "Overall conversation-level sentiment for each channel of the call."
        },
        "issueModelResult": {
          "description": "Overall conversation-level issue modeling result.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelResult"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CallAnnotation"
          },
          "description": "A list of call annotations that apply to this call."
        },
        "phraseMatchers": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
          },
          "type": "object",
          "description": "All the matched phrase matchers in the call."
        },
        "intents": {
          "type": "object",
          "description": "All the matched intents in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Intent"
          }
        },
        "entities": {
          "type": "object",
          "description": "All the entities in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Entity"
          }
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig",
      "description": "Configs for the input data used to create the issue model.",
      "properties": {
        "filter": {
          "type": "string",
          "description": "A filter to reduce the conversations used for training the model to a specific subset."
        },
        "trainingConversationsCount": {
          "readOnly": true,
          "description": "Output only. Number of conversations used in training. Output only.",
          "type": "string",
          "format": "int64"
        },
        "medium": {
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "type": "string",
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.",
          "enumDescriptions": [
            "Default value.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ]
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ListAnalysesResponse": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse",
      "properties": {
        "analyses": {
          "description": "The analyses that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "description": "The response to list analyses."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata": {
      "type": "object",
      "description": "Metadata for deleting an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata",
      "properties": {
        "endTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest",
          "description": "The original request for deletion."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStats": {
      "properties": {
        "issueStats": {
          "description": "Statistics on each issue. Key is the issue's resource name.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          },
          "type": "object"
        },
        "unclassifiedConversationsCount": {
          "format": "int64",
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time.",
          "type": "string"
        },
        "analyzedConversationsCount": {
          "format": "int64",
          "description": "Number of conversations the issue model has analyzed at this point in time.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
      "type": "object",
      "description": "Aggregated statistics about an issue model."
    },
    "GoogleCloudContactcenterinsightsV1AnswerFeedback": {
      "id": "GoogleCloudContactcenterinsightsV1AnswerFeedback",
      "properties": {
        "correctnessLevel": {
          "description": "The correctness level of an answer.",
          "type": "string",
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ],
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ]
        },
        "clicked": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was clicked by the human agent."
        },
        "displayed": {
          "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "The feedback that the customer has about a certain answer in the conversation."
    },
    "GoogleCloudContactcenterinsightsV1SentimentData": {
      "description": "The data for a sentiment annotation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1SentimentData",
      "properties": {
        "score": {
          "description": "The sentiment score between -1.0 (negative) and 1.0 (positive).",
          "type": "number",
          "format": "float"
        },
        "magnitude": {
          "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1DialogflowInteractionData": {
      "description": "Dialogflow interaction data.",
      "properties": {
        "dialogflowIntentId": {
          "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}",
          "type": "string"
        },
        "confidence": {
          "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "float"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData"
    },
    "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse": {
      "type": "object",
      "properties": {
        "currentStats": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
          "description": "The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse",
      "description": "Response of querying an issue model's statistics."
    },
    "GoogleCloudContactcenterinsightsV1SmartReplyData": {
      "description": "Agent Assist Smart Reply data.",
      "id": "GoogleCloudContactcenterinsightsV1SmartReplyData",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Map that contains metadata about the Smart Reply and the document from which it originates.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "confidenceScore": {
          "type": "number",
          "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "double"
        },
        "queryRecord": {
          "description": "Name of the query record. Format: projects/{project}/locations/{location}/queryRecords/{query_record}",
          "type": "string"
        },
        "reply": {
          "type": "string",
          "description": "The content of the reply."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1SilenceData": {
      "properties": {},
      "description": "The data for a silence annotation.",
      "id": "GoogleCloudContactcenterinsightsV1SilenceData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1RuntimeAnnotation": {
      "properties": {
        "startBoundary": {
          "description": "The boundary in the conversation where the annotation starts, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "faqAnswer": {
          "description": "Agent Assist FAQ answer data.",
          "$ref": "GoogleCloudContactcenterinsightsV1FaqAnswerData"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which this annotation was created."
        },
        "answerFeedback": {
          "description": "The feedback that the customer has about the answer in `data`.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnswerFeedback"
        },
        "smartComposeSuggestion": {
          "description": "Agent Assist Smart Compose suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData"
        },
        "articleSuggestion": {
          "description": "Agent Assist Article Suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData"
        },
        "endBoundary": {
          "description": "The boundary in the conversation where the annotation ends, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "smartReply": {
          "$ref": "GoogleCloudContactcenterinsightsV1SmartReplyData",
          "description": "Agent Assist Smart Reply data."
        },
        "dialogflowInteraction": {
          "description": "Dialogflow interaction data.",
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData"
        },
        "annotationId": {
          "type": "string",
          "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation",
      "description": "An annotation that was generated during the customer and agent interaction.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse",
      "properties": {},
      "description": "The response to undeploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1ConversationCallMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata",
      "properties": {
        "customerChannel": {
          "type": "integer",
          "format": "int32",
          "description": "The audio channel that contains the customer."
        },
        "agentChannel": {
          "type": "integer",
          "description": "The audio channel that contains the agent.",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "Call-specific metadata."
    },
    "GoogleCloudContactcenterinsightsV1IssueModel": {
      "properties": {
        "state": {
          "description": "Output only. State of the model.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ],
          "type": "string"
        },
        "inputDataConfig": {
          "description": "Configs for the input data that used to create the issue model.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig"
        },
        "trainingStats": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
          "description": "Output only. Immutable. The issue model's label statistics on its training data."
        },
        "createTime": {
          "description": "Output only. The time at which this issue model was created.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "name": {
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The most recent time at which the issue model was updated."
        },
        "displayName": {
          "description": "The representative name for the issue model.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueModel",
      "type": "object",
      "description": "The issue model resource."
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The issue model to deploy.",
          "type": "string"
        }
      },
      "description": "The request to deploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModel": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModel",
      "properties": {
        "trainingStats": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats",
          "description": "Output only. Immutable. The issue model's label statistics on its training data."
        },
        "inputDataConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig",
          "description": "Configs for the input data that used to create the issue model."
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time at which this issue model was created."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ],
          "type": "string",
          "description": "Output only. State of the model.",
          "readOnly": true,
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ]
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the issue model."
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The most recent time at which the issue model was updated.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
        }
      },
      "description": "The issue model resource.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats": {
      "properties": {
        "analyzedConversationsCount": {
          "description": "Number of conversations the issue model has analyzed at this point in time.",
          "type": "string",
          "format": "int64"
        },
        "unclassifiedConversationsCount": {
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time.",
          "format": "int64",
          "type": "string"
        },
        "issueStats": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats"
          },
          "type": "object",
          "description": "Statistics on each issue. Key is the issue's resource name."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats",
      "description": "Aggregated statistics about an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The issue model to undeploy."
        }
      },
      "description": "The request to undeploy an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1GcsSource": {
      "description": "A Cloud Storage source of conversation data.",
      "id": "GoogleCloudContactcenterinsightsV1GcsSource",
      "type": "object",
      "properties": {
        "audioUri": {
          "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
          "type": "string"
        },
        "transcriptUri": {
          "type": "string",
          "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript."
        }
      }
    },
    "GoogleLongrunningOperation": {
      "id": "GoogleLongrunningOperation",
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1Entity": {
      "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.",
      "id": "GoogleCloudContactcenterinsightsV1Entity",
      "properties": {
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "The aggregate sentiment expressed for this entity in the conversation."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below."
        },
        "displayName": {
          "description": "The representative name for the entity.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "The entity type.",
          "enumDescriptions": [
            "Unspecified.",
            "Person.",
            "Location.",
            "Organization.",
            "Event.",
            "Artwork.",
            "Consumer product.",
            "Other types of entities.",
            "Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.",
            "Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.",
            "Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.",
            "Number. The metadata is the number itself.",
            "Price. The metadata identifies the `value` and `currency`."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSON",
            "LOCATION",
            "ORGANIZATION",
            "EVENT",
            "WORK_OF_ART",
            "CONSUMER_GOOD",
            "OTHER",
            "PHONE_NUMBER",
            "ADDRESS",
            "DATE",
            "NUMBER",
            "PRICE"
          ]
        },
        "salience": {
          "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.",
          "type": "number",
          "format": "float"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination",
      "properties": {
        "dataset": {
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used."
        },
        "table": {
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        }
      },
      "description": "A BigQuery Table Reference."
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment": {
      "description": "A segment of a full transcript.",
      "properties": {
        "confidence": {
          "type": "number",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.",
          "format": "float"
        },
        "text": {
          "type": "string",
          "description": "The text of this segment."
        },
        "languageCode": {
          "type": "string",
          "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\"."
        },
        "channelTag": {
          "type": "integer",
          "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.",
          "format": "int32"
        },
        "words": {
          "description": "A list of the word-specific information for each word in the segment.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo"
          },
          "type": "array"
        },
        "segmentParticipant": {
          "description": "The participant of this segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationParticipant"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment"
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata": {
      "type": "object",
      "properties": {
        "request": {
          "description": "The original request for deletion.",
          "$ref": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata",
      "description": "Metadata for deleting an issue model."
    },
    "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig": {
      "description": "Default configuration when creating Analyses in Insights.",
      "type": "object",
      "properties": {
        "runtimeIntegrationAnalysisPercentage": {
          "format": "double",
          "description": "Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].",
          "type": "number"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig"
    },
    "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment",
      "description": "One channel of conversation-level sentiment data.",
      "type": "object",
      "properties": {
        "sentimentData": {
          "description": "Data specifying sentiment.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "channelTag": {
          "description": "The channel of the audio that the data applies to.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig",
      "properties": {
        "trainingConversationsCount": {
          "type": "string",
          "description": "Output only. Number of conversations used in training. Output only.",
          "readOnly": true,
          "format": "int64"
        },
        "medium": {
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.",
          "enumDescriptions": [
            "Default value.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "type": "string",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ]
        },
        "filter": {
          "description": "A filter to reduce the conversations used for training the model to a specific subset.",
          "type": "string"
        }
      },
      "description": "Configs for the input data used to create the issue model."
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest",
      "type": "object",
      "description": "The request to create an issue model.",
      "properties": {
        "parent": {
          "description": "Required. The parent resource of the issue model.",
          "type": "string"
        },
        "issueModel": {
          "description": "Required. The issue model to create.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest": {
      "description": "The request to export insights.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest",
      "type": "object",
      "properties": {
        "filter": {
          "type": "string",
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to export data from."
        },
        "bigQueryDestination": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination",
          "description": "Specified if sink is a BigQuery table."
        },
        "kmsKey": {
          "type": "string",
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IssueModelResult": {
      "type": "object",
      "description": "Issue Modeling result on a conversation.",
      "properties": {
        "issues": {
          "description": "All the matched issues.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment"
          }
        },
        "issueModel": {
          "type": "string",
          "description": "Issue model that generates the result."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueModelResult"
    },
    "GoogleCloudContactcenterinsightsV1InterruptionData": {
      "properties": {},
      "description": "The data for an interruption annotation.",
      "id": "GoogleCloudContactcenterinsightsV1InterruptionData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1EntityMentionData": {
      "properties": {
        "sentiment": {
          "description": "Sentiment expressed for this mention of the entity.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "entityUniqueId": {
          "type": "string",
          "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to."
        },
        "type": {
          "enum": [
            "MENTION_TYPE_UNSPECIFIED",
            "PROPER",
            "COMMON"
          ],
          "description": "The type of the entity mention.",
          "enumDescriptions": [
            "Unspecified.",
            "Proper noun.",
            "Common noun (or noun compound)."
          ],
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1EntityMentionData",
      "type": "object",
      "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation."
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination": {
      "properties": {
        "projectId": {
          "type": "string",
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used."
        },
        "table": {
          "type": "string",
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error."
        },
        "dataset": {
          "type": "string",
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error."
        }
      },
      "description": "A BigQuery Table Reference.",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest": {
      "properties": {
        "name": {
          "description": "Required. The issue model to deploy.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest",
      "type": "object",
      "description": "The request to deploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1IssueAssignment": {
      "id": "GoogleCloudContactcenterinsightsV1IssueAssignment",
      "type": "object",
      "description": "Information about the issue.",
      "properties": {
        "displayName": {
          "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.",
          "type": "string"
        },
        "issue": {
          "type": "string",
          "description": "Resource name of the assigned issue."
        },
        "score": {
          "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1].",
          "format": "double",
          "type": "number"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse",
      "description": "Response for an export insights operation.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest": {
      "description": "The request to create an issue model.",
      "type": "object",
      "properties": {
        "parent": {
          "description": "Required. The parent resource of the issue model.",
          "type": "string"
        },
        "issueModel": {
          "description": "Required. The issue model to create.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModel"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1ListConversationsResponse": {
      "description": "The response of listing conversations.",
      "id": "GoogleCloudContactcenterinsightsV1ListConversationsResponse",
      "properties": {
        "conversations": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
          },
          "type": "array",
          "description": "The conversations that match the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1DialogflowSource": {
      "description": "A Dialogflow source of conversation data.",
      "id": "GoogleCloudContactcenterinsightsV1DialogflowSource",
      "properties": {
        "dialogflowConversation": {
          "readOnly": true,
          "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "type": "string"
        },
        "audioUri": {
          "type": "string",
          "description": "Cloud Storage URI that points to a file that contains the conversation audio."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ExactMatchConfig": {
      "type": "object",
      "properties": {
        "caseSensitive": {
          "type": "boolean",
          "description": "Whether to consider case sensitivity when performing an exact match."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ExactMatchConfig",
      "description": "Exact match configuration."
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest",
          "description": "The original request for undeployment."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        }
      },
      "description": "Metadata for undeploying an issue model."
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRule": {
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRule",
      "type": "object",
      "properties": {
        "query": {
          "description": "Required. The phrase to be matched.",
          "type": "string"
        },
        "negated": {
          "description": "Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.",
          "type": "boolean"
        },
        "config": {
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig",
          "description": "Provides additional information about the rule that specifies how to apply the rule."
        }
      },
      "description": "The data for a phrase match rule."
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata": {
      "type": "object",
      "properties": {
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "request": {
          "description": "The original request for creation.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest"
        }
      },
      "description": "Metadata for creating an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1Conversation": {
      "properties": {
        "startTime": {
          "description": "The time at which the conversation started.",
          "format": "google-datetime",
          "type": "string"
        },
        "runtimeAnnotations": {
          "type": "array",
          "description": "Output only. The annotations that were generated during the customer and agent interaction.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation"
          },
          "readOnly": true
        },
        "medium": {
          "enumDescriptions": [
            "Default value.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "description": "Immutable. The conversation medium.",
          "type": "string"
        },
        "languageCode": {
          "description": "A user-specified language code for the conversation.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which the conversation was created."
        },
        "duration": {
          "readOnly": true,
          "type": "string",
          "format": "google-duration",
          "description": "Output only. The duration of the conversation."
        },
        "ttl": {
          "format": "google-duration",
          "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.",
          "type": "string"
        },
        "turnCount": {
          "readOnly": true,
          "description": "Output only. The number of turns in the conversation.",
          "format": "int32",
          "type": "integer"
        },
        "agentId": {
          "type": "string",
          "description": "An opaque, user-specified string representing the human agent who handled the conversation."
        },
        "expireTime": {
          "format": "google-datetime",
          "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.",
          "type": "string"
        },
        "transcript": {
          "description": "Output only. The conversation transcript.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscript",
          "readOnly": true
        },
        "name": {
          "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "type": "string"
        },
        "latestAnalysis": {
          "description": "Output only. The conversation's latest analysis, if one exists.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
        },
        "dialogflowIntents": {
          "readOnly": true,
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1DialogflowIntent"
          },
          "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}",
          "type": "object"
        },
        "callMetadata": {
          "description": "Call-specific metadata.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata"
        },
        "labels": {
          "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The most recent time at which the conversation was updated."
        },
        "dataSource": {
          "description": "The source of the audio and transcription for the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationDataSource"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1Conversation",
      "description": "The conversation resource.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1HoldData": {
      "description": "The data for a hold annotation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1HoldData",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest",
      "description": "The request to delete an issue model.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name of the issue model to delete."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig": {
      "type": "object",
      "properties": {
        "exactMatchConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExactMatchConfig",
          "description": "The configuration for the exact match rule."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig",
      "description": "Configuration information of a phrase match rule."
    },
    "GoogleCloudContactcenterinsightsV1Settings": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings",
          "type": "string"
        },
        "conversationTtl": {
          "type": "string",
          "description": "The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.",
          "format": "google-duration"
        },
        "analysisConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig",
          "description": "Default analysis settings."
        },
        "languageCode": {
          "type": "string",
          "description": "A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to \"en-US\" if it is neither specified on the segment nor here."
        },
        "pubsubNotificationSettings": {
          "description": "A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * \"all-triggers\": Notify each time any of the supported triggers occurs. * \"create-analysis\": Notify each time an analysis is created. * \"create-conversation\": Notify each time a conversation is created. * \"export-insights-data\": Notify each time an export is complete. * \"update-conversation\": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time at which the settings were last updated.",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time at which the settings was created.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "description": "The settings resource.",
      "id": "GoogleCloudContactcenterinsightsV1Settings"
    },
    "GoogleCloudContactcenterinsightsV1DialogflowIntent": {
      "id": "GoogleCloudContactcenterinsightsV1DialogflowIntent",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        }
      },
      "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo": {
      "properties": {
        "confidence": {
          "format": "float",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.",
          "type": "number"
        },
        "endOffset": {
          "type": "string",
          "description": "Time offset of the end of this word relative to the beginning of the total conversation.",
          "format": "google-duration"
        },
        "word": {
          "type": "string",
          "description": "The word itself. Includes punctuation marks that surround the word."
        },
        "startOffset": {
          "description": "Time offset of the start of this word relative to the beginning of the total conversation.",
          "type": "string",
          "format": "google-duration"
        }
      },
      "description": "Word-level info for words in a transcript.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest": {
      "description": "The request to export insights.",
      "properties": {
        "kmsKey": {
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}",
          "type": "string"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to export data from."
        },
        "filter": {
          "type": "string",
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties."
        },
        "bigQueryDestination": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination",
          "description": "Specified if sink is a BigQuery table."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IntentMatchData": {
      "properties": {
        "intentUniqueId": {
          "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IntentMatchData",
      "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.",
      "type": "object"
    },
    "GoogleLongrunningListOperationsResponse": {
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "operations": {
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest": {
      "properties": {
        "name": {
          "description": "Required. The name of the issue model to delete.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The request to delete an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata": {
      "type": "object",
      "description": "Metadata for an export insights operation.",
      "properties": {
        "partialErrors": {
          "description": "Partial errors during export operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest",
          "description": "The original request for export."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata"
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResult": {
      "type": "object",
      "description": "The result of an analysis.",
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResult",
      "properties": {
        "endTime": {
          "type": "string",
          "description": "The time at which the analysis ended.",
          "format": "google-datetime"
        },
        "callAnalysisMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata",
          "description": "Call-specific metadata created by the analysis."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ListIssuesResponse": {
      "id": "GoogleCloudContactcenterinsightsV1ListIssuesResponse",
      "properties": {
        "issues": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Issue"
          },
          "description": "The issues that match the request."
        }
      },
      "description": "The response of listing issues.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse",
      "properties": {},
      "description": "The response to deploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup": {
      "type": "object",
      "description": "A message representing a rule in the phrase matcher.",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup",
      "properties": {
        "phraseMatchRules": {
          "description": "A list of phase match rules that are included in this group.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRule"
          }
        },
        "type": {
          "description": "Required. The type of this phrase match rule group.",
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rules or there is no match.",
            "If any of the phrase match rules are met, there is a match."
          ],
          "enum": [
            "PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ],
          "type": "string"
        }
      }
    },
    "GoogleProtobufEmpty": {
      "properties": {},
      "type": "object",
      "id": "GoogleProtobufEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata": {
      "description": "Metadata for deploying an issue model.",
      "type": "object",
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest",
          "description": "The original request for deployment."
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1Issue": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1Issue",
      "description": "The issue resource.",
      "properties": {
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The most recent time that this issue was updated.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which this issue was created."
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the issue."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata": {
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest",
          "description": "The original request for export."
        },
        "partialErrors": {
          "description": "Partial errors during export operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata",
      "description": "Metadata for an export insights operation."
    },
    "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData": {
      "properties": {
        "queryRecord": {
          "description": "Name of the query record. Format: projects/{project}/locations/{location}/queryRecords/{query_record}",
          "type": "string"
        },
        "confidenceScore": {
          "type": "number",
          "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "double"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates."
        },
        "suggestion": {
          "type": "string",
          "description": "The content of the suggestion."
        }
      },
      "type": "object",
      "description": "Agent Assist Smart Compose suggestion data.",
      "id": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscript": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscript",
      "properties": {
        "transcriptSegments": {
          "description": "A list of sequential transcript segments that comprise the conversation.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "A message representing the transcript of a conversation."
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval": {
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The start time of this interval."
        },
        "conversationCount": {
          "format": "int32",
          "description": "The number of conversations created in this interval.",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "A single interval in a time series.",
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval"
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries": {
      "properties": {
        "intervalDuration": {
          "description": "The duration of each interval.",
          "type": "string",
          "format": "google-duration"
        },
        "points": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval"
          },
          "type": "array",
          "description": "An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries",
      "type": "object",
      "description": "A time series representing conversations over time."
    }
  },
  "mtlsRootUrl": "https://contactcenterinsights.mtls.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "Contactcenterinsights",
  "basePath": "",
  "rootUrl": "https://contactcenterinsights.googleapis.com/",
  "ownerDomain": "google.com",
  "batchPath": "batch",
  "id": "contactcenterinsights:v1"
}

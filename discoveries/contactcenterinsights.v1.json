{
  "batchPath": "batch",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "version_module": true,
  "servicePath": "",
  "discoveryVersion": "v1",
  "description": "",
  "name": "contactcenterinsights",
  "basePath": "",
  "parameters": {
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "location": "query",
      "default": "json",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    }
  },
  "title": "Contact Center AI Insights API",
  "rootUrl": "https://contactcenterinsights.googleapis.com/",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "fullyEncodeReservedExpansion": true,
  "protocol": "rest",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "views": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views",
                  "path": "v1/{+parent}/views",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "contactcenterinsights.projects.locations.views.list",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListViewsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The value returned by the last `ListViewsResponse`; indicates that this is a continuation of a prior `ListViews` call and the system should return the next page of data."
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of views to return in the response. If this value is zero, the service will select a default size. A call may return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available."
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent resource of the views.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Lists views."
                },
                "delete": {
                  "id": "contactcenterinsights.projects.locations.views.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "description": "Deletes a view.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the view to delete."
                    }
                  }
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "contactcenterinsights.projects.locations.views.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/views",
                  "description": "Creates a view.",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent resource of the view. Required. The location to create a view for. Format: `projects//locations/` or `projects//locations/`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "httpMethod": "POST"
                },
                "patch": {
                  "description": "Updates a view.",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The list of fields to be updated.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "required": true,
                      "description": "Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.views.patch",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  }
                },
                "get": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The name of the view to get.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Gets a view.",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.views.get",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "issueModels": {
              "methods": {
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "id": "contactcenterinsights.projects.locations.issueModels.get",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "description": "Gets an issue model.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "description": "Required. The name of the issue model to get.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/issueModels",
                  "description": "Lists issue models.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The parent resource of the issue model.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels"
                },
                "deploy": {
                  "id": "contactcenterinsights.projects.locations.issueModels.deploy",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest"
                  },
                  "path": "v1/{+name}:deploy",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The issue model to deploy.",
                      "type": "string"
                    }
                  },
                  "description": "Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed."
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "description": "Updates an issue model.",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.patch",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "parameters": {
                    "name": {
                      "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "required": true
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "The list of fields to be updated.",
                      "location": "query"
                    }
                  }
                },
                "undeploy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.undeploy",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "description": "Required. The issue model to undeploy.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:undeploy",
                  "description": "Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed."
                },
                "calculateIssueModelStats": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "issueModel"
                  ],
                  "description": "Gets an issue model's statistics.",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse"
                  },
                  "parameters": {
                    "issueModel": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The resource name of the issue model to query against."
                    }
                  },
                  "path": "v1/{+issueModel}:calculateIssueModelStats",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats",
                  "id": "contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats"
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the issue model to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "description": "Deletes an issue model.",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "id": "contactcenterinsights.projects.locations.issueModels.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "path": "v1/{+parent}/issueModels",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.create",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The parent resource of the issue model.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Creates an issue model.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST"
                }
              },
              "resources": {
                "issues": {
                  "methods": {
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the issue to delete.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "description": "Deletes an issue.",
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.delete",
                      "path": "v1/{+name}"
                    },
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.patch",
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "parameters": {
                        "updateMask": {
                          "location": "query",
                          "format": "google-fieldmask",
                          "type": "string",
                          "description": "The list of fields to be updated."
                        },
                        "name": {
                          "location": "path",
                          "required": true,
                          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$"
                        }
                      },
                      "path": "v1/{+name}",
                      "description": "Updates an issue.",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PATCH"
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/issues",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The parent resource of the issue.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues",
                      "description": "Lists issues.",
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.list",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListIssuesResponse"
                      }
                    },
                    "get": {
                      "httpMethod": "GET",
                      "description": "Gets an issue.",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.get",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$",
                          "type": "string",
                          "description": "Required. The name of the issue to get.",
                          "required": true
                        }
                      }
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenterinsights.projects.locations.operations.get",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "cancel": {
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "path": "v1/{+name}:cancel",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "id": "contactcenterinsights.projects.locations.operations.cancel"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenterinsights.projects.locations.operations.list",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    },
                    "name": {
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "filter": {
                      "location": "query",
                      "description": "The standard list filter.",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "The standard list page size.",
                      "format": "int32"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "httpMethod": "GET",
                  "path": "v1/{+name}/operations"
                }
              }
            },
            "insightsdata": {
              "methods": {
                "export": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export",
                  "path": "v1/{+parent}/insightsdata:export",
                  "id": "contactcenterinsights.projects.locations.insightsdata.export",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Export insights data to a destination defined in the request body.",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent resource to export data from.",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                }
              }
            },
            "conversations": {
              "methods": {
                "calculateStats": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "A filter to reduce results to a specific subset. This field is useful for getting statistics about conversations with specific properties."
                    },
                    "location": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The location of the conversations.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats",
                  "path": "v1/{+location}/conversations:calculateStats",
                  "id": "contactcenterinsights.projects.locations.conversations.calculateStats",
                  "description": "Gets conversation statistics.",
                  "parameterOrder": [
                    "location"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse"
                  }
                },
                "patch": {
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "The list of fields to be updated.",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.conversations.patch",
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "path": "v1/{+name}",
                  "description": "Updates a conversation.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "bulkDelete": {
                  "path": "v1/{+parent}/conversations:bulkDelete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest"
                  },
                  "id": "contactcenterinsights.projects.locations.conversations.bulkDelete",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location}",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Deletes multiple conversations in a single request.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkDelete"
                },
                "delete": {
                  "parameters": {
                    "force": {
                      "location": "query",
                      "type": "boolean",
                      "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses."
                    },
                    "name": {
                      "description": "Required. The name of the conversation to delete.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "path": "v1/{+name}",
                  "description": "Deletes a conversation.",
                  "id": "contactcenterinsights.projects.locations.conversations.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  }
                },
                "upload": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent resource of the conversation.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1UploadConversationRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Create a longrunning conversation upload operation. This method differs from CreateConversation by allowing audio transcription and optional DLP redaction.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:upload",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.upload",
                  "path": "v1/{+parent}/conversations:upload",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "bulkAnalyze": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.bulkAnalyze",
                  "description": "Analyzes multiple conversations in a single request.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent resource to create analyses in.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/conversations:bulkAnalyze",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze"
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations",
                  "id": "contactcenterinsights.projects.locations.conversations.list",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListConversationsResponse"
                  },
                  "description": "Lists conversations.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/conversations",
                  "parameters": {
                    "filter": {
                      "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the conversation."
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of conversations to return in the response. A valid page size ranges from 0 to 1,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size."
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListConversationsResponse`. This value indicates that this is a continuation of a prior `ListConversations` call and that the system should return the next page of data.",
                      "type": "string",
                      "location": "query"
                    },
                    "view": {
                      "enumDescriptions": [
                        "The conversation view is not specified. * Defaults to `FULL` in `GetConversationRequest`. * Defaults to `BASIC` in `ListConversationsRequest`.",
                        "Populates all fields in the conversation.",
                        "Populates all fields in the conversation except the transcript."
                      ],
                      "type": "string",
                      "description": "The level of details of the conversation. Default is `BASIC`.",
                      "location": "query",
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "FULL",
                        "BASIC"
                      ]
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "create": {
                  "id": "contactcenterinsights.projects.locations.conversations.create",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "description": "Creates a conversation.",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the conversation.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "conversationId": {
                      "description": "A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations",
                  "path": "v1/{+parent}/conversations",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  }
                },
                "get": {
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "parameters": {
                    "view": {
                      "type": "string",
                      "description": "The level of details of the conversation. Default is `FULL`.",
                      "location": "query",
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "FULL",
                        "BASIC"
                      ],
                      "enumDescriptions": [
                        "The conversation view is not specified. * Defaults to `FULL` in `GetConversationRequest`. * Defaults to `BASIC` in `ListConversationsRequest`.",
                        "Populates all fields in the conversation.",
                        "Populates all fields in the conversation except the transcript."
                      ]
                    },
                    "name": {
                      "required": true,
                      "description": "Required. The name of the conversation to get.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "id": "contactcenterinsights.projects.locations.conversations.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a conversation.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}"
                },
                "ingest": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent resource for new conversations.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest",
                  "description": "Imports conversations and processes them according to the user's configuration.",
                  "id": "contactcenterinsights.projects.locations.conversations.ingest",
                  "path": "v1/{+parent}/conversations:ingest"
                }
              },
              "resources": {
                "analyses": {
                  "methods": {
                    "get": {
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "description": "Gets an analysis.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.get",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$",
                          "description": "Required. The name of the analysis to get.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}"
                    },
                    "list": {
                      "path": "v1/{+parent}/analyses",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "description": "The maximum number of analyses to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                          "location": "query",
                          "format": "int32"
                        },
                        "filter": {
                          "location": "query",
                          "type": "string",
                          "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties."
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. The parent resource of the analyses.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "The value returned by the last `ListAnalysesResponse`; indicates that this is a continuation of a prior `ListAnalyses` call and the system should return the next page of data."
                        }
                      },
                      "httpMethod": "GET",
                      "description": "Lists analyses.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.list"
                    },
                    "create": {
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.create",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "location": "path",
                          "description": "Required. The parent resource of the analysis.",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/analyses",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates an analysis. The long running operation is done when the analysis has completed.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "delete": {
                      "path": "v1/{+name}",
                      "httpMethod": "DELETE",
                      "description": "Deletes an analysis.",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the analysis to delete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      }
                    }
                  }
                }
              }
            },
            "phraseMatchers": {
              "methods": {
                "patch": {
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.patch",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "type": "string",
                      "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
                      "location": "path",
                      "required": true
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "The list of fields to be updated."
                    }
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates a phrase matcher."
                },
                "list": {
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "A filter to reduce results to a specific subset. Useful for querying phrase matchers with specific properties.",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "The maximum number of phrase matchers to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListPhraseMatchersResponse`. This value indicates that this is a continuation of a prior `ListPhraseMatchers` call and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The parent resource of the phrase matcher.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.list",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers",
                  "path": "v1/{+parent}/phraseMatchers",
                  "description": "Lists phrase matchers.",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "create": {
                  "path": "v1/{+parent}/phraseMatchers",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the phrase matcher. Required. The location to create a phrase matcher for. Format: `projects//locations/` or `projects//locations/`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "description": "Creates a phrase matcher.",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.create"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the phrase matcher to delete.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "description": "Deletes a phrase matcher.",
                  "path": "v1/{+name}"
                },
                "get": {
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "description": "Gets a phrase matcher.",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the phrase matcher to get.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.get"
                }
              }
            }
          },
          "methods": {
            "getSettings": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "id": "contactcenterinsights.projects.locations.getSettings",
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "description": "Required. The name of the settings resource to get.",
                  "type": "string",
                  "required": true
                }
              },
              "description": "Gets project-level settings."
            },
            "updateSettings": {
              "description": "Updates project-level settings.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "request": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "path": "v1/{+name}",
              "id": "contactcenterinsights.projects.locations.updateSettings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings",
                  "location": "path",
                  "required": true
                },
                "updateMask": {
                  "description": "Required. The list of fields to be updated.",
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask"
                }
              }
            }
          }
        }
      }
    }
  },
  "version": "v1",
  "baseUrl": "https://contactcenterinsights.googleapis.com/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "mtlsRootUrl": "https://contactcenterinsights.mtls.googleapis.com/",
  "documentationLink": "https://cloud.google.com/contact-center/insights/docs",
  "revision": "20231113",
  "kind": "discovery#restDescription",
  "schemas": {
    "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult",
      "description": "The result of an analysis.",
      "properties": {
        "endTime": {
          "type": "string",
          "description": "The time at which the analysis ended.",
          "format": "google-datetime"
        },
        "callAnalysisMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata",
          "description": "Call-specific metadata created by the analysis."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback": {
      "description": "The feedback that the customer has about a certain answer in the conversation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback",
      "type": "object",
      "properties": {
        "correctnessLevel": {
          "type": "string",
          "description": "The correctness level of an answer.",
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ],
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ]
        },
        "displayed": {
          "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.",
          "type": "boolean"
        },
        "clicked": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was clicked by the human agent."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats": {
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats",
      "description": "Statistics for IngestConversations operation.",
      "properties": {
        "failedIngestCount": {
          "format": "int32",
          "readOnly": true,
          "type": "integer",
          "description": "Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field."
        },
        "duplicatesSkippedCount": {
          "format": "int32",
          "description": "Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.",
          "readOnly": true,
          "type": "integer"
        },
        "processedObjectCount": {
          "readOnly": true,
          "format": "int32",
          "type": "integer",
          "description": "Output only. The number of objects processed during the ingest operation."
        },
        "successfulIngestCount": {
          "description": "Output only. The number of new conversations added during this ingest operation.",
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1AnnotationBoundary": {
      "type": "object",
      "description": "A point in a conversation that marks the start or the end of an annotation.",
      "id": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
      "properties": {
        "transcriptIndex": {
          "format": "int32",
          "type": "integer",
          "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero."
        },
        "wordIndex": {
          "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult": {
      "description": "Issue Modeling result on a conversation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult",
      "type": "object",
      "properties": {
        "issues": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment"
          },
          "type": "array",
          "description": "All the matched issues."
        },
        "issueModel": {
          "type": "string",
          "description": "Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1InterruptionData": {
      "type": "object",
      "properties": {},
      "description": "The data for an interruption annotation.",
      "id": "GoogleCloudContactcenterinsightsV1InterruptionData"
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata": {
      "type": "object",
      "description": "Call-specific metadata created during analysis.",
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata",
      "properties": {
        "issueModelResult": {
          "description": "Overall conversation-level issue modeling result.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelResult"
        },
        "phraseMatchers": {
          "description": "All the matched phrase matchers in the call.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
          }
        },
        "annotations": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CallAnnotation"
          },
          "type": "array",
          "description": "A list of call annotations that apply to this call."
        },
        "intents": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Intent"
          },
          "description": "All the matched intents in the call.",
          "type": "object"
        },
        "sentiments": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment"
          },
          "description": "Overall conversation-level sentiment for each channel of the call.",
          "type": "array"
        },
        "entities": {
          "description": "All the entities in the call.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Entity"
          }
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1RuntimeAnnotation": {
      "properties": {
        "faqAnswer": {
          "$ref": "GoogleCloudContactcenterinsightsV1FaqAnswerData",
          "description": "Agent Assist FAQ answer data."
        },
        "dialogflowInteraction": {
          "description": "Dialogflow interaction data.",
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData"
        },
        "smartReply": {
          "description": "Agent Assist Smart Reply data.",
          "$ref": "GoogleCloudContactcenterinsightsV1SmartReplyData"
        },
        "answerFeedback": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnswerFeedback",
          "description": "The feedback that the customer has about the answer in `data`."
        },
        "endBoundary": {
          "description": "The boundary in the conversation where the annotation ends, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time at which this annotation was created.",
          "type": "string"
        },
        "articleSuggestion": {
          "description": "Agent Assist Article Suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData"
        },
        "smartComposeSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData",
          "description": "Agent Assist Smart Compose suggestion data."
        },
        "annotationId": {
          "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}",
          "type": "string"
        },
        "conversationSummarizationSuggestion": {
          "description": "Conversation summarization suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData"
        },
        "startBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        }
      },
      "type": "object",
      "description": "An annotation that was generated during the customer and agent interaction.",
      "id": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse": {
      "description": "Response for an export insights operation.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata",
      "description": "Metadata for an export insights operation.",
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest",
          "description": "The original request for export."
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Partial errors during export operation that might cause the operation output to be incomplete."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1View": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}"
        },
        "displayName": {
          "type": "string",
          "description": "The human-readable display name of the view."
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The most recent time at which the view was updated.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time at which this view was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "value": {
          "description": "String with specific view properties, must be non-empty.",
          "type": "string"
        }
      },
      "description": "The View resource.",
      "id": "GoogleCloudContactcenterinsightsV1View"
    },
    "GoogleCloudContactcenterinsightsV1ExactMatchConfig": {
      "properties": {
        "caseSensitive": {
          "description": "Whether to consider case sensitivity when performing an exact match.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ExactMatchConfig",
      "type": "object",
      "description": "Exact match configuration."
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponse": {
      "description": "The response for calculating conversation statistics.",
      "properties": {
        "conversationCount": {
          "description": "The total number of conversations.",
          "type": "integer",
          "format": "int32"
        },
        "conversationCountTimeSeries": {
          "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries",
          "description": "A time series representing the count of conversations created over time that match that requested filter criteria."
        },
        "issueMatches": {
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          },
          "deprecated": true
        },
        "customHighlighterMatches": {
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "type": "object",
          "description": "A map associating each custom highlighter resource name with its respective number of matches in the set of conversations."
        },
        "issueMatchesStats": {
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          },
          "type": "object"
        },
        "smartHighlighterMatches": {
          "description": "A map associating each smart highlighter display name with its respective number of matches in the set of conversations.",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          },
          "type": "object"
        },
        "averageTurnCount": {
          "description": "The average number of turns per conversation.",
          "type": "integer",
          "format": "int32"
        },
        "averageDuration": {
          "description": "The average duration of all conversations. The average is calculated using only conversations that have a time duration.",
          "type": "string",
          "format": "google-duration"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource": {
      "properties": {
        "bucketUri": {
          "description": "Required. The Cloud Storage bucket containing source objects.",
          "type": "string"
        },
        "bucketObjectType": {
          "description": "Optional. Specifies the type of the objects in `bucket_uri`.",
          "enum": [
            "BUCKET_OBJECT_TYPE_UNSPECIFIED",
            "TRANSCRIPT",
            "AUDIO"
          ],
          "enumDescriptions": [
            "The object type is unspecified and will default to TRANSCRIPT.",
            "The object is a transcript.",
            "The object is an audio file."
          ],
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource",
      "description": "Configuration for Cloud Storage bucket sources.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest",
          "description": "The original request for creation."
        }
      },
      "description": "Metadata for creating an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest",
      "description": "The request to deploy an issue model.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The issue model to deploy."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig": {
      "type": "object",
      "properties": {
        "conversationProfile": {
          "type": "string",
          "description": "Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}"
        },
        "summarizationModel": {
          "description": "Default summarization model to be used.",
          "enumDescriptions": [
            "Unspecified summarization model.",
            "The CCAI baseline model."
          ],
          "enum": [
            "SUMMARIZATION_MODEL_UNSPECIFIED",
            "BASELINE_MODEL"
          ],
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig",
      "description": "Configuration for summarization."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse": {
      "type": "object",
      "description": "The response to an IngestConversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1RedactionConfig": {
      "properties": {
        "inspectTemplate": {
          "type": "string",
          "description": "The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`"
        },
        "deidentifyTemplate": {
          "type": "string",
          "description": "The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1RedactionConfig",
      "type": "object",
      "description": "DLP resources used for redaction while ingesting conversations."
    },
    "GoogleCloudContactcenterinsightsV1Entity": {
      "properties": {
        "displayName": {
          "description": "The representative name for the entity.",
          "type": "string"
        },
        "salience": {
          "type": "number",
          "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.",
          "format": "float"
        },
        "type": {
          "enumDescriptions": [
            "Unspecified.",
            "Person.",
            "Location.",
            "Organization.",
            "Event.",
            "Artwork.",
            "Consumer product.",
            "Other types of entities.",
            "Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.",
            "Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.",
            "Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.",
            "Number. The metadata is the number itself.",
            "Price. The metadata identifies the `value` and `currency`."
          ],
          "description": "The entity type.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSON",
            "LOCATION",
            "ORGANIZATION",
            "EVENT",
            "WORK_OF_ART",
            "CONSUMER_GOOD",
            "OTHER",
            "PHONE_NUMBER",
            "ADDRESS",
            "DATE",
            "NUMBER",
            "PRICE"
          ]
        },
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "The aggregate sentiment expressed for this entity in the conversation."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1Entity",
      "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig",
      "properties": {
        "filter": {
          "type": "string",
          "description": "A filter to reduce the conversations used for training the model to a specific subset."
        },
        "medium": {
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.",
          "deprecated": true,
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ]
        },
        "trainingConversationsCount": {
          "description": "Output only. Number of conversations used in training. Output only.",
          "format": "int64",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Configs for the input data used to create the issue model."
    },
    "GoogleCloudContactcenterinsightsV1SilenceData": {
      "id": "GoogleCloudContactcenterinsightsV1SilenceData",
      "description": "The data for a silence annotation.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1AnnotatorSelector": {
      "properties": {
        "runPhraseMatcherAnnotator": {
          "description": "Whether to run the active phrase matcher annotator(s).",
          "type": "boolean"
        },
        "phraseMatchers": {
          "description": "The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "issueModels": {
          "type": "array",
          "description": "The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.",
          "items": {
            "type": "string"
          }
        },
        "runIntentAnnotator": {
          "type": "boolean",
          "description": "Whether to run the intent annotator."
        },
        "summarizationConfig": {
          "description": "Configuration for the summarization annotator.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig"
        },
        "runSilenceAnnotator": {
          "type": "boolean",
          "description": "Whether to run the silence annotator."
        },
        "runInterruptionAnnotator": {
          "type": "boolean",
          "description": "Whether to run the interruption annotator."
        },
        "runSummarizationAnnotator": {
          "description": "Whether to run the summarization annotator.",
          "type": "boolean"
        },
        "runSentimentAnnotator": {
          "description": "Whether to run the sentiment annotator.",
          "type": "boolean"
        },
        "runEntityAnnotator": {
          "type": "boolean",
          "description": "Whether to run the entity annotator."
        },
        "runIssueModelAnnotator": {
          "description": "Whether to run the issue model annotator. A model should have already been deployed for this to take effect.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
      "type": "object",
      "description": "Selector of all available annotators and phrase matchers to run."
    },
    "GoogleCloudContactcenterinsightsV1SentimentData": {
      "type": "object",
      "description": "The data for a sentiment annotation.",
      "properties": {
        "magnitude": {
          "type": "number",
          "format": "float",
          "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score."
        },
        "score": {
          "format": "float",
          "type": "number",
          "description": "The sentiment score between -1.0 (negative) and 1.0 (positive)."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1SentimentData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
      "description": "Selector of all available annotators and phrase matchers to run.",
      "properties": {
        "runIntentAnnotator": {
          "description": "Whether to run the intent annotator.",
          "type": "boolean"
        },
        "runInterruptionAnnotator": {
          "description": "Whether to run the interruption annotator.",
          "type": "boolean"
        },
        "runSilenceAnnotator": {
          "description": "Whether to run the silence annotator.",
          "type": "boolean"
        },
        "phraseMatchers": {
          "type": "array",
          "description": "The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
          "items": {
            "type": "string"
          }
        },
        "runSentimentAnnotator": {
          "description": "Whether to run the sentiment annotator.",
          "type": "boolean"
        },
        "runIssueModelAnnotator": {
          "type": "boolean",
          "description": "Whether to run the issue model annotator. A model should have already been deployed for this to take effect."
        },
        "issueModels": {
          "description": "The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "summarizationConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig",
          "description": "Configuration for the summarization annotator."
        },
        "runPhraseMatcherAnnotator": {
          "description": "Whether to run the active phrase matcher annotator(s).",
          "type": "boolean"
        },
        "runEntityAnnotator": {
          "type": "boolean",
          "description": "Whether to run the entity annotator."
        },
        "runSummarizationAnnotator": {
          "description": "Whether to run the summarization annotator.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination": {
      "type": "object",
      "properties": {
        "table": {
          "type": "string",
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error."
        },
        "projectId": {
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.",
          "type": "string"
        },
        "dataset": {
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination",
      "description": "A BigQuery Table Reference."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData",
      "properties": {
        "intentUniqueId": {
          "type": "string",
          "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information."
        }
      },
      "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata": {
      "properties": {
        "createTime": {
          "type": "string",
          "description": "The time the operation was created.",
          "format": "google-datetime"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation finished running."
        },
        "completedAnalysesCount": {
          "description": "The number of requested analyses that have completed successfully so far.",
          "format": "int32",
          "type": "integer"
        },
        "failedAnalysesCount": {
          "description": "The number of requested analyses that have failed so far.",
          "format": "int32",
          "type": "integer"
        },
        "totalRequestedAnalysesCount": {
          "format": "int32",
          "description": "Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.",
          "type": "integer"
        },
        "partialErrors": {
          "type": "array",
          "description": "Output only. Partial errors during bulk analyze operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "readOnly": true
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest",
          "description": "The original request for bulk analyze."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata",
      "description": "The metadata for a bulk analyze conversations operation."
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsResponse": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsResponse",
      "properties": {},
      "description": "The response to an IngestConversations operation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse": {
      "properties": {},
      "description": "The response to undeploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment": {
      "properties": {
        "channelTag": {
          "format": "int32",
          "description": "The channel of the audio that the data applies to.",
          "type": "integer"
        },
        "sentimentData": {
          "description": "Data specifying sentiment.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment",
      "type": "object",
      "description": "One channel of conversation-level sentiment data."
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The issue model to deploy."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest",
      "description": "The request to deploy an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse": {
      "description": "The response for a bulk analyze conversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse",
      "type": "object",
      "properties": {
        "failedAnalysisCount": {
          "description": "Count of failed analyses.",
          "type": "integer",
          "format": "int32"
        },
        "successfulAnalysisCount": {
          "description": "Count of successful analyses.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IntentMatchData": {
      "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.",
      "id": "GoogleCloudContactcenterinsightsV1IntentMatchData",
      "properties": {
        "intentUniqueId": {
          "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleRpcStatus": {
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        }
      },
      "id": "GoogleRpcStatus",
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of the issue model to delete.",
          "type": "string"
        }
      },
      "description": "The request to delete an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModel": {
      "description": "The issue model resource.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModel",
      "properties": {
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which this issue model was created."
        },
        "inputDataConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig",
          "description": "Configs for the input data that used to create the issue model."
        },
        "trainingStats": {
          "readOnly": true,
          "description": "Output only. Immutable. The issue model's label statistics on its training data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats"
        },
        "displayName": {
          "description": "The representative name for the issue model.",
          "type": "string"
        },
        "languageCode": {
          "description": "Language of the model.",
          "type": "string"
        },
        "state": {
          "description": "Output only. State of the model.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ],
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The most recent time at which the issue model was updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "modelType": {
          "type": "string",
          "description": "Type of the model.",
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "TYPE_V1",
            "TYPE_V2"
          ],
          "enumDescriptions": [
            "Unspecified model type.",
            "Type V1.",
            "Type V2."
          ]
        },
        "name": {
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        },
        "issueCount": {
          "description": "Output only. Number of issues in this issue model.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IssueModel": {
      "id": "GoogleCloudContactcenterinsightsV1IssueModel",
      "type": "object",
      "description": "The issue model resource.",
      "properties": {
        "displayName": {
          "description": "The representative name for the issue model.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The most recent time at which the issue model was updated.",
          "type": "string",
          "readOnly": true
        },
        "trainingStats": {
          "description": "Output only. Immutable. The issue model's label statistics on its training data.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats"
        },
        "languageCode": {
          "type": "string",
          "description": "Language of the model."
        },
        "name": {
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        },
        "inputDataConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig",
          "description": "Configs for the input data that used to create the issue model."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which this issue model was created.",
          "readOnly": true
        },
        "modelType": {
          "description": "Type of the model.",
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "TYPE_V1",
            "TYPE_V2"
          ],
          "enumDescriptions": [
            "Unspecified model type.",
            "Type V1.",
            "Type V2."
          ],
          "type": "string"
        },
        "issueCount": {
          "readOnly": true,
          "type": "string",
          "format": "int64",
          "description": "Output only. Number of issues in this issue model."
        },
        "state": {
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ],
          "type": "string",
          "description": "Output only. State of the model.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ]
        }
      }
    },
    "GoogleProtobufEmpty": {
      "id": "GoogleProtobufEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationDataSource": {
      "type": "object",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1GcsSource",
          "description": "A Cloud Storage location specification for the audio and transcript."
        },
        "dialogflowSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowSource",
          "description": "The source when the conversation comes from Dialogflow."
        }
      },
      "description": "The conversation source, which is a combination of transcript, audio, and metadata.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationDataSource"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest": {
      "description": "The request to undeploy an issue model.",
      "properties": {
        "name": {
          "description": "Required. The issue model to undeploy.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig": {
      "id": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig",
      "type": "object",
      "description": "Default configuration when creating Analyses in Insights.",
      "properties": {
        "runtimeIntegrationAnalysisPercentage": {
          "description": "Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].",
          "type": "number",
          "format": "double"
        },
        "uploadConversationAnalysisPercentage": {
          "description": "Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100].",
          "format": "double",
          "type": "number"
        },
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination": {
      "description": "A BigQuery Table Reference.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination",
      "properties": {
        "dataset": {
          "type": "string",
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error."
        },
        "projectId": {
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.",
          "type": "string"
        },
        "table": {
          "type": "string",
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup": {
      "type": "object",
      "description": "A message representing a rule in the phrase matcher.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Required. The type of this phrase match rule group.",
          "enum": [
            "PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rules or there is no match.",
            "If any of the phrase match rules are met, there is a match."
          ]
        },
        "phraseMatchRules": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRule"
          },
          "description": "A list of phrase match rules that are included in this group.",
          "type": "array"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelResult": {
      "type": "object",
      "properties": {
        "issues": {
          "type": "array",
          "description": "All the matched issues.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment"
          }
        },
        "issueModel": {
          "description": "Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueModelResult",
      "description": "Issue Modeling result on a conversation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant": {
      "properties": {
        "dialogflowParticipantName": {
          "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "type": "string"
        },
        "dialogflowParticipant": {
          "type": "string",
          "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "deprecated": true
        },
        "role": {
          "type": "string",
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "description": "The role of the participant."
        },
        "userId": {
          "type": "string",
          "description": "A user-specified ID representing the participant."
        },
        "obfuscatedExternalUserId": {
          "type": "string",
          "description": "Obfuscated user ID from Dialogflow."
        }
      },
      "description": "The call participant speaking for a given utterance.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig": {
      "type": "object",
      "description": "Configs for the input data used to create the issue model.",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig",
      "properties": {
        "medium": {
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.",
          "deprecated": true,
          "type": "string",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ]
        },
        "filter": {
          "description": "A filter to reduce the conversations used for training the model to a specific subset.",
          "type": "string"
        },
        "trainingConversationsCount": {
          "format": "int64",
          "description": "Output only. Number of conversations used in training. Output only.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest": {
      "description": "The request to delete conversations in bulk.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location}"
        },
        "filter": {
          "description": "Filter used to select the subset of conversations to delete.",
          "type": "string"
        },
        "force": {
          "type": "boolean",
          "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses."
        },
        "maxDeleteCount": {
          "description": "Maximum number of conversations to delete.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1DialogflowSource": {
      "description": "A Dialogflow source of conversation data.",
      "type": "object",
      "properties": {
        "audioUri": {
          "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
          "type": "string"
        },
        "dialogflowConversation": {
          "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DialogflowSource"
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata": {
      "description": "Metadata for deploying an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata",
      "type": "object",
      "properties": {
        "request": {
          "description": "The original request for deployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest"
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig": {
      "type": "object",
      "description": "DLP resources used for redaction while ingesting conversations.",
      "properties": {
        "deidentifyTemplate": {
          "type": "string",
          "description": "The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`"
        },
        "inspectTemplate": {
          "type": "string",
          "description": "The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig"
    },
    "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse": {
      "type": "object",
      "properties": {
        "phraseMatchers": {
          "description": "The phrase matchers that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse",
      "description": "The response of listing phrase matchers."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest",
      "description": "The request to delete an issue model.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name of the issue model to delete."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata": {
      "properties": {
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
          "description": "Output only. The annotator selector used for the analysis (if any).",
          "readOnly": true
        },
        "conversation": {
          "readOnly": true,
          "description": "Output only. The Conversation that this Analysis Operation belongs to.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata",
      "description": "Metadata for a create analysis operation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo": {
      "properties": {
        "confidence": {
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.",
          "format": "float",
          "type": "number"
        },
        "word": {
          "type": "string",
          "description": "The word itself. Includes punctuation marks that surround the word."
        },
        "startOffset": {
          "type": "string",
          "format": "google-duration",
          "description": "Time offset of the start of this word relative to the beginning of the total conversation."
        },
        "endOffset": {
          "type": "string",
          "description": "Time offset of the end of this word relative to the beginning of the total conversation.",
          "format": "google-duration"
        }
      },
      "description": "Word-level info for words in a transcript.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo"
    },
    "GoogleCloudContactcenterinsightsV1SmartReplyData": {
      "id": "GoogleCloudContactcenterinsightsV1SmartReplyData",
      "description": "Agent Assist Smart Reply data.",
      "type": "object",
      "properties": {
        "confidenceScore": {
          "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "double"
        },
        "reply": {
          "description": "The content of the reply.",
          "type": "string"
        },
        "metadata": {
          "description": "Map that contains metadata about the Smart Reply and the document from which it originates.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1Conversation": {
      "description": "The conversation resource.",
      "properties": {
        "languageCode": {
          "description": "A user-specified language code for the conversation.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.",
          "type": "object"
        },
        "duration": {
          "description": "Output only. The duration of the conversation.",
          "readOnly": true,
          "type": "string",
          "format": "google-duration"
        },
        "runtimeAnnotations": {
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation"
          },
          "type": "array",
          "description": "Output only. The annotations that were generated during the customer and agent interaction."
        },
        "name": {
          "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "type": "string"
        },
        "latestSummary": {
          "description": "Output only. Latest summary of the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData",
          "readOnly": true
        },
        "obfuscatedUserId": {
          "description": "Obfuscated user ID which the customer sent to us.",
          "type": "string"
        },
        "callMetadata": {
          "description": "Call-specific metadata.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata"
        },
        "latestAnalysis": {
          "description": "Output only. The conversation's latest analysis, if one exists.",
          "$ref": "GoogleCloudContactcenterinsightsV1Analysis",
          "readOnly": true
        },
        "agentId": {
          "description": "An opaque, user-specified string representing the human agent who handled the conversation.",
          "type": "string"
        },
        "startTime": {
          "description": "The time at which the conversation started.",
          "type": "string",
          "format": "google-datetime"
        },
        "dialogflowIntents": {
          "type": "object",
          "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}",
          "readOnly": true,
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1DialogflowIntent"
          }
        },
        "dataSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationDataSource",
          "description": "The source of the audio and transcription for the conversation."
        },
        "expireTime": {
          "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.",
          "type": "string",
          "format": "google-datetime"
        },
        "medium": {
          "description": "Immutable. The conversation medium, if unspecified will default to PHONE_CALL.",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ]
        },
        "transcript": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscript",
          "readOnly": true,
          "description": "Output only. The conversation transcript."
        },
        "turnCount": {
          "format": "int32",
          "type": "integer",
          "description": "Output only. The number of turns in the conversation.",
          "readOnly": true
        },
        "ttl": {
          "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.",
          "type": "string",
          "format": "google-duration"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The most recent time at which the conversation was updated."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time at which the conversation was created."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1Conversation",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest": {
      "description": "The request to export insights.",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest",
      "properties": {
        "bigQueryDestination": {
          "description": "Specified if sink is a BigQuery table.",
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to export data from."
        },
        "writeDisposition": {
          "type": "string",
          "description": "Options for what to do if the destination table already exists.",
          "enumDescriptions": [
            "Write disposition is not specified. Defaults to WRITE_TRUNCATE.",
            "If the table already exists, BigQuery will overwrite the table data and use the schema from the load.",
            "If the table already exists, BigQuery will append data to the table."
          ],
          "enum": [
            "WRITE_DISPOSITION_UNSPECIFIED",
            "WRITE_TRUNCATE",
            "WRITE_APPEND"
          ]
        },
        "filter": {
          "type": "string",
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties."
        },
        "kmsKey": {
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatcher": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "PHRASE_MATCHER_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rule groups or there is no match.",
            "If any of the phrase match rule groups are met, there is a match."
          ],
          "description": "Required. The type of this phrase matcher."
        },
        "displayName": {
          "description": "The human-readable name of the phrase matcher.",
          "type": "string"
        },
        "revisionId": {
          "type": "string",
          "description": "Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567",
          "readOnly": true
        },
        "activationUpdateTime": {
          "description": "Output only. The most recent time at which the activation status was updated.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "phraseMatchRuleGroups": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup"
          },
          "description": "A list of phase match rule groups that are included in this matcher."
        },
        "versionTag": {
          "type": "string",
          "description": "The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`."
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The most recent time at which the phrase matcher was updated."
        },
        "active": {
          "description": "Applies the phrase matcher only when it is active.",
          "type": "boolean"
        },
        "revisionCreateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added.",
          "format": "google-datetime"
        },
        "name": {
          "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
          "type": "string"
        },
        "roleMatch": {
          "description": "The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatcher",
      "description": "The phrase matcher resource."
    },
    "GoogleCloudContactcenterinsightsV1UploadConversationMetadata": {
      "properties": {
        "appliedRedactionConfig": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig",
          "description": "Output only. The redaction config applied to the uploaded conversation."
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        },
        "request": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1UploadConversationRequest",
          "description": "Output only. The original request."
        },
        "analysisOperation": {
          "type": "string",
          "description": "Output only. The operation name for a successfully created analysis operation, if any.",
          "readOnly": true
        }
      },
      "description": "The metadata for an UploadConversation operation.",
      "id": "GoogleCloudContactcenterinsightsV1UploadConversationMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse": {
      "properties": {
        "currentStats": {
          "description": "The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse",
      "description": "Response of querying an issue model's statistics.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1DialogflowInteractionData": {
      "properties": {
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "dialogflowIntentId": {
          "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData",
      "description": "Dialogflow interaction data."
    },
    "GoogleCloudContactcenterinsightsV1HoldData": {
      "type": "object",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1HoldData",
      "description": "The data for a hold annotation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1InterruptionData": {
      "properties": {},
      "type": "object",
      "description": "The data for an interruption annotation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1InterruptionData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata",
      "description": "The metadata for an UploadConversation operation.",
      "type": "object",
      "properties": {
        "analysisOperation": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The operation name for a successfully created analysis operation, if any."
        },
        "appliedRedactionConfig": {
          "description": "Output only. The redaction config applied to the uploaded conversation.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig"
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime"
        },
        "request": {
          "readOnly": true,
          "description": "Output only. The original request.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata",
      "type": "object",
      "properties": {
        "conversation": {
          "description": "Output only. The Conversation that this Analysis Operation belongs to.",
          "readOnly": true,
          "type": "string"
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
          "readOnly": true,
          "description": "Output only. The annotator selector used for the analysis (if any)."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        }
      },
      "description": "Metadata for a create analysis operation."
    },
    "GoogleCloudContactcenterinsightsV1FaqAnswerData": {
      "type": "object",
      "properties": {
        "answer": {
          "description": "The piece of text from the `source` knowledge base document.",
          "type": "string"
        },
        "question": {
          "type": "string",
          "description": "The corresponding FAQ question."
        },
        "metadata": {
          "description": "Map that contains metadata about the FAQ answer and the document that it originates from.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "source": {
          "type": "string",
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}."
        },
        "confidenceScore": {
          "type": "number",
          "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float"
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        }
      },
      "description": "Agent Assist frequently-asked-question answer data.",
      "id": "GoogleCloudContactcenterinsightsV1FaqAnswerData"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsMetadata": {
      "type": "object",
      "properties": {
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.",
          "type": "array",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        },
        "ingestConversationsStats": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats",
          "description": "Output only. Statistics for IngestConversations operation."
        },
        "request": {
          "description": "Output only. The original request for ingest.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest",
          "readOnly": true
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadata",
      "description": "The metadata for an IngestConversations operation."
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse": {
      "description": "The response for a bulk analyze conversations operation.",
      "properties": {
        "failedAnalysisCount": {
          "description": "Count of failed analyses.",
          "format": "int32",
          "type": "integer"
        },
        "successfulAnalysisCount": {
          "type": "integer",
          "description": "Count of successful analyses.",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse"
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResult": {
      "properties": {
        "callAnalysisMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata",
          "description": "Call-specific metadata created by the analysis."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time at which the analysis ended.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResult",
      "description": "The result of an analysis."
    },
    "GoogleLongrunningOperation": {
      "id": "GoogleLongrunningOperation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStats": {
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
      "properties": {
        "analyzedConversationsCount": {
          "description": "Number of conversations the issue model has analyzed at this point in time.",
          "type": "string",
          "format": "int64"
        },
        "unclassifiedConversationsCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time."
        },
        "issueStats": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          },
          "description": "Statistics on each issue. Key is the issue's resource name.",
          "type": "object"
        }
      },
      "description": "Aggregated statistics about an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse": {
      "type": "object",
      "description": "The response for a bulk delete conversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData",
      "type": "object",
      "properties": {
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
          "description": "Sentiment expressed for this mention of the entity."
        },
        "type": {
          "enumDescriptions": [
            "Unspecified.",
            "Proper noun.",
            "Common noun (or noun compound)."
          ],
          "type": "string",
          "enum": [
            "MENTION_TYPE_UNSPECIFIED",
            "PROPER",
            "COMMON"
          ],
          "description": "The type of the entity mention."
        },
        "entityUniqueId": {
          "type": "string",
          "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to."
        }
      },
      "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig": {
      "description": "Speech-to-Text configuration.",
      "type": "object",
      "properties": {
        "speechRecognizer": {
          "description": "The fully-qualified Speech Recognizer resource name. Format: `projects/{project_id}/locations/{location}/recognizer/{recognizer}`",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats": {
      "description": "Statistics for IngestConversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats",
      "type": "object",
      "properties": {
        "duplicatesSkippedCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested."
        },
        "processedObjectCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Output only. The number of objects processed during the ingest operation."
        },
        "failedIngestCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field."
        },
        "successfulIngestCount": {
          "description": "Output only. The number of new conversations added during this ingest operation.",
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ListViewsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1ListViewsResponse",
      "type": "object",
      "description": "The response of listing views.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "views": {
          "description": "The views that match the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1View"
          }
        }
      }
    },
    "GoogleLongrunningListOperationsResponse": {
      "id": "GoogleLongrunningListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1CallAnnotation": {
      "description": "A piece of metadata that applies to a window of a call.",
      "id": "GoogleCloudContactcenterinsightsV1CallAnnotation",
      "properties": {
        "phraseMatchData": {
          "description": "Data specifying a phrase match.",
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
        },
        "channelTag": {
          "format": "int32",
          "type": "integer",
          "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated."
        },
        "holdData": {
          "description": "Data specifying a hold.",
          "$ref": "GoogleCloudContactcenterinsightsV1HoldData"
        },
        "annotationEndBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        },
        "sentimentData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "Data specifying sentiment."
        },
        "silenceData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SilenceData",
          "description": "Data specifying silence."
        },
        "intentMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1IntentMatchData",
          "description": "Data specifying an intent match."
        },
        "entityMentionData": {
          "$ref": "GoogleCloudContactcenterinsightsV1EntityMentionData",
          "description": "Data specifying an entity mention."
        },
        "annotationStartBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        },
        "interruptionData": {
          "description": "Data specifying an interruption.",
          "$ref": "GoogleCloudContactcenterinsightsV1InterruptionData"
        },
        "issueMatchData": {
          "description": "Data specifying an issue match.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueMatchData"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats": {
      "properties": {
        "issue": {
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the issue."
        },
        "labeledConversationsCount": {
          "description": "Number of conversations attached to the issue at this point in time.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats",
      "type": "object",
      "description": "Aggregated statistics about an issue."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata",
      "properties": {
        "request": {
          "description": "The original request for export.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest"
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "partialErrors": {
          "type": "array",
          "description": "Partial errors during export operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime"
        }
      },
      "description": "Metadata for an export insights operation."
    },
    "GoogleCloudContactcenterinsightsV1ListAnalysesResponse": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse",
      "description": "The response to list analyses.",
      "properties": {
        "analyses": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
          },
          "description": "The analyses that match the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata": {
      "type": "object",
      "properties": {
        "intents": {
          "description": "All the matched intents in the call.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1Intent"
          }
        },
        "phraseMatchers": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData"
          },
          "description": "All the matched phrase matchers in the call.",
          "type": "object"
        },
        "issueModelResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult",
          "description": "Overall conversation-level issue modeling result."
        },
        "sentiments": {
          "description": "Overall conversation-level sentiment for each channel of the call.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment"
          },
          "type": "array"
        },
        "entities": {
          "description": "All the entities in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1Entity"
          },
          "type": "object"
        },
        "annotations": {
          "description": "A list of call annotations that apply to this call.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata",
      "description": "Call-specific metadata created during analysis."
    },
    "GoogleCloudContactcenterinsightsV1Settings": {
      "type": "object",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to \"en-US\" if it is neither specified on the segment nor here."
        },
        "speechConfig": {
          "description": "Optional. Default Speech-to-Text resources to be used while ingesting audio files. Optional, CCAI Insights will create a default if not provided.",
          "$ref": "GoogleCloudContactcenterinsightsV1SpeechConfig"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings"
        },
        "conversationTtl": {
          "description": "The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.",
          "format": "google-duration",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time at which the settings were last updated.",
          "format": "google-datetime"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time at which the settings was created.",
          "readOnly": true
        },
        "pubsubNotificationSettings": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * \"all-triggers\": Notify each time any of the supported triggers occurs. * \"create-analysis\": Notify each time an analysis is created. * \"create-conversation\": Notify each time a conversation is created. * \"export-insights-data\": Notify each time an export is complete. * \"update-conversation\": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}",
          "type": "object"
        },
        "redactionConfig": {
          "description": "Default DLP redaction resources to be applied while ingesting conversations.",
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig"
        },
        "analysisConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig",
          "description": "Default analysis settings."
        }
      },
      "description": "The settings resource.",
      "id": "GoogleCloudContactcenterinsightsV1Settings"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRule": {
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRule",
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "description": "Required. The phrase to be matched."
        },
        "config": {
          "description": "Provides additional information about the rule that specifies how to apply the rule.",
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig"
        },
        "negated": {
          "type": "boolean",
          "description": "Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment."
        }
      },
      "description": "The data for a phrase match rule."
    },
    "GoogleCloudContactcenterinsightsV1alpha1SentimentData": {
      "type": "object",
      "properties": {
        "score": {
          "description": "The sentiment score between -1.0 (negative) and 1.0 (positive).",
          "type": "number",
          "format": "float"
        },
        "magnitude": {
          "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.",
          "type": "number",
          "format": "float"
        }
      },
      "description": "The data for a sentiment annotation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata": {
      "type": "object",
      "properties": {
        "request": {
          "description": "The original request for deletion.",
          "$ref": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime"
        }
      },
      "description": "Metadata for deleting an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation": {
      "properties": {
        "faqAnswer": {
          "description": "Agent Assist FAQ answer data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData"
        },
        "answerFeedback": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback",
          "description": "The feedback that the customer has about the answer in `data`."
        },
        "createTime": {
          "description": "The time at which this annotation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "annotationId": {
          "type": "string",
          "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}"
        },
        "endBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        },
        "startBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        },
        "articleSuggestion": {
          "description": "Agent Assist Article Suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData"
        },
        "dialogflowInteraction": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData",
          "description": "Dialogflow interaction data."
        },
        "conversationSummarizationSuggestion": {
          "description": "Conversation summarization suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData"
        },
        "smartReply": {
          "description": "Agent Assist Smart Reply data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData"
        },
        "smartComposeSuggestion": {
          "description": "Agent Assist Smart Compose suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation",
      "type": "object",
      "description": "An annotation that was generated during the customer and agent interaction."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata",
      "properties": {
        "request": {
          "description": "The original request for deployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "Metadata for deploying an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment": {
      "properties": {
        "displayName": {
          "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.",
          "type": "string"
        },
        "score": {
          "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1].",
          "format": "double",
          "type": "number"
        },
        "issue": {
          "type": "string",
          "description": "Resource name of the assigned issue."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment",
      "description": "Information about the issue.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest": {
      "description": "The request to ingest conversations.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest",
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource for new conversations."
        },
        "conversationConfig": {
          "description": "Configuration that applies to all conversations.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig"
        },
        "redactionConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig",
          "description": "Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings."
        },
        "transcriptObjectConfig": {
          "description": "Configuration for when `source` contains conversation transcripts.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig"
        },
        "speechConfig": {
          "description": "Optional. Default Speech-to-Text configuration. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig"
        },
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource",
          "description": "A cloud storage bucket source. Note that any previously ingested objects from the source will be skipped to avoid duplication."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1SilenceData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1SilenceData",
      "description": "The data for a silence annotation.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1Analysis": {
      "description": "The analysis resource.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1Analysis",
      "properties": {
        "requestTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which the analysis was requested.",
          "readOnly": true,
          "type": "string"
        },
        "analysisResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult",
          "description": "Output only. The result of the analysis, which is populated when the analysis finishes.",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes."
        },
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector"
        },
        "name": {
          "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo": {
      "properties": {
        "confidence": {
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.",
          "format": "float",
          "type": "number"
        },
        "startOffset": {
          "format": "google-duration",
          "type": "string",
          "description": "Time offset of the start of this word relative to the beginning of the total conversation."
        },
        "endOffset": {
          "description": "Time offset of the end of this word relative to the beginning of the total conversation.",
          "type": "string",
          "format": "google-duration"
        },
        "word": {
          "type": "string",
          "description": "The word itself. Includes punctuation marks that surround the word."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo",
      "description": "Word-level info for words in a transcript.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationCallMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata",
      "type": "object",
      "properties": {
        "customerChannel": {
          "format": "int32",
          "description": "The audio channel that contains the customer.",
          "type": "integer"
        },
        "agentChannel": {
          "format": "int32",
          "description": "The audio channel that contains the agent.",
          "type": "integer"
        }
      },
      "description": "Call-specific metadata."
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource": {
      "description": "Configuration for Cloud Storage bucket sources.",
      "properties": {
        "bucketUri": {
          "description": "Required. The Cloud Storage bucket containing source objects.",
          "type": "string"
        },
        "bucketObjectType": {
          "type": "string",
          "enum": [
            "BUCKET_OBJECT_TYPE_UNSPECIFIED",
            "TRANSCRIPT",
            "AUDIO"
          ],
          "description": "Optional. Specifies the type of the objects in `bucket_uri`.",
          "enumDescriptions": [
            "The object type is unspecified and will default to TRANSCRIPT.",
            "The object is a transcript.",
            "The object is an audio file."
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource"
    },
    "GoogleCloudContactcenterinsightsV1ConversationParticipant": {
      "properties": {
        "dialogflowParticipant": {
          "type": "string",
          "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "deprecated": true
        },
        "role": {
          "description": "The role of the participant.",
          "type": "string",
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ]
        },
        "obfuscatedExternalUserId": {
          "description": "Obfuscated user ID from Dialogflow.",
          "type": "string"
        },
        "userId": {
          "type": "string",
          "description": "A user-specified ID representing the participant."
        },
        "dialogflowParticipantName": {
          "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "type": "string"
        }
      },
      "description": "The call participant speaking for a given utterance.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationParticipant"
    },
    "GoogleCloudContactcenterinsightsV1Intent": {
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the intent."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1Intent",
      "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE."
    },
    "GoogleCloudContactcenterinsightsV1DialogflowIntent": {
      "id": "GoogleCloudContactcenterinsightsV1DialogflowIntent",
      "type": "object",
      "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData": {
      "type": "object",
      "description": "Agent Assist Smart Compose suggestion data.",
      "properties": {
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "suggestion": {
          "type": "string",
          "description": "The content of the suggestion."
        },
        "confidenceScore": {
          "type": "number",
          "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "double"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData"
    },
    "GoogleCloudContactcenterinsightsV1Issue": {
      "description": "The issue resource.",
      "id": "GoogleCloudContactcenterinsightsV1Issue",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The representative name for the issue."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        },
        "updateTime": {
          "description": "Output only. The most recent time that this issue was updated.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which this issue was created."
        },
        "sampleUtterances": {
          "readOnly": true,
          "description": "Output only. Resource names of the sample representative utterances that match to this issue.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment": {
      "properties": {
        "channelTag": {
          "type": "integer",
          "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.",
          "format": "int32"
        },
        "confidence": {
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.",
          "type": "number",
          "format": "float"
        },
        "words": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo"
          },
          "description": "A list of the word-specific information for each word in the segment."
        },
        "text": {
          "type": "string",
          "description": "The text of this segment."
        },
        "dialogflowSegmentMetadata": {
          "description": "CCAI metadata relating to the current transcript segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata"
        },
        "segmentParticipant": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationParticipant",
          "description": "The participant of this segment."
        },
        "messageTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time that the message occurred, if provided."
        },
        "languageCode": {
          "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".",
          "type": "string"
        },
        "sentiment": {
          "description": "The sentiment for this transcript segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment",
      "description": "A segment of a full transcript.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource",
      "type": "object",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1GcsSource",
          "description": "A Cloud Storage location specification for the audio and transcript."
        },
        "dialogflowSource": {
          "description": "The source when the conversation comes from Dialogflow.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource"
        }
      },
      "description": "The conversation source, which is a combination of transcript, audio, and metadata."
    },
    "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse": {
      "properties": {
        "issueModels": {
          "type": "array",
          "description": "The issue models that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
          }
        }
      },
      "description": "The response of listing issue models.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata",
      "type": "object",
      "properties": {
        "customerChannel": {
          "type": "integer",
          "description": "The audio channel that contains the customer.",
          "format": "int32"
        },
        "agentChannel": {
          "format": "int32",
          "type": "integer",
          "description": "The audio channel that contains the agent."
        }
      },
      "description": "Call-specific metadata."
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest",
      "description": "The request to create an issue model.",
      "properties": {
        "issueModel": {
          "description": "Required. The issue model to create.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
        },
        "parent": {
          "description": "Required. The parent resource of the issue model.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1Entity": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1Entity",
      "properties": {
        "salience": {
          "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.",
          "type": "number",
          "format": "float"
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the entity."
        },
        "sentiment": {
          "description": "The aggregate sentiment expressed for this entity in the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below."
        },
        "type": {
          "enumDescriptions": [
            "Unspecified.",
            "Person.",
            "Location.",
            "Organization.",
            "Event.",
            "Artwork.",
            "Consumer product.",
            "Other types of entities.",
            "Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.",
            "Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.",
            "Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.",
            "Number. The metadata is the number itself.",
            "Price. The metadata identifies the `value` and `currency`."
          ],
          "description": "The entity type.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSON",
            "LOCATION",
            "ORGANIZATION",
            "EVENT",
            "WORK_OF_ART",
            "CONSUMER_GOOD",
            "OTHER",
            "PHONE_NUMBER",
            "ADDRESS",
            "DATE",
            "NUMBER",
            "PRICE"
          ]
        }
      },
      "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ArticleSuggestionData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the Article Suggestion and the document that it originates from.",
          "type": "object"
        },
        "source": {
          "type": "string",
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}"
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "Article URI."
        },
        "title": {
          "type": "string",
          "description": "Article title."
        },
        "confidenceScore": {
          "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float",
          "type": "number"
        }
      },
      "description": "Agent Assist Article Suggestion data."
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest": {
      "properties": {
        "issueModel": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModel",
          "description": "Required. The issue model to create."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the issue model."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest",
      "description": "The request to create an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData": {
      "description": "Agent Assist frequently-asked-question answer data.",
      "type": "object",
      "properties": {
        "confidenceScore": {
          "type": "number",
          "format": "float",
          "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.",
          "type": "string"
        },
        "metadata": {
          "description": "Map that contains metadata about the FAQ answer and the document that it originates from.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "question": {
          "type": "string",
          "description": "The corresponding FAQ question."
        },
        "answer": {
          "type": "string",
          "description": "The piece of text from the `source` knowledge base document."
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData"
    },
    "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig": {
      "id": "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig",
      "type": "object",
      "properties": {
        "conversationProfile": {
          "description": "Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}",
          "type": "string"
        },
        "summarizationModel": {
          "enumDescriptions": [
            "Unspecified summarization model.",
            "The CCAI baseline model."
          ],
          "type": "string",
          "enum": [
            "SUMMARIZATION_MODEL_UNSPECIFIED",
            "BASELINE_MODEL"
          ],
          "description": "Default summarization model to be used."
        }
      },
      "description": "Configuration for summarization."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript": {
      "description": "A message representing the transcript of a conversation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript",
      "type": "object",
      "properties": {
        "transcriptSegments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment"
          },
          "description": "A list of sequential transcript segments that comprise the conversation."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata": {
      "properties": {
        "endTime": {
          "description": "The time the operation finished running.",
          "format": "google-datetime",
          "type": "string"
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Partial errors during bulk delete conversations operation that might cause the operation output to be incomplete."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time the operation was created.",
          "type": "string"
        },
        "request": {
          "description": "The original request for bulk delete.",
          "$ref": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata",
      "type": "object",
      "description": "The metadata for a bulk delete conversations operation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse": {
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse",
      "description": "Response for an export insights operation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1GcsSource": {
      "type": "object",
      "description": "A Cloud Storage source of conversation data.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1GcsSource",
      "properties": {
        "transcriptUri": {
          "type": "string",
          "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript."
        },
        "audioUri": {
          "type": "string",
          "description": "Cloud Storage URI that points to a file that contains the conversation audio."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData",
      "properties": {
        "answerRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "confidence": {
          "type": "number",
          "description": "The confidence score of the summarization.",
          "format": "float"
        },
        "metadata": {
          "type": "object",
          "description": "A map that contains metadata about the summarization and the document from which it originates.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "textSections": {
          "description": "The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "conversationModel": {
          "description": "The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}",
          "type": "string"
        },
        "text": {
          "description": "The summarization content that is concatenated into one string.",
          "type": "string"
        }
      },
      "description": "Conversation summarization suggestion data.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries": {
      "properties": {
        "intervalDuration": {
          "format": "google-duration",
          "description": "The duration of each interval.",
          "type": "string"
        },
        "points": {
          "description": "An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval"
          }
        }
      },
      "description": "A time series representing conversations over time.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries"
    },
    "GoogleCloudContactcenterinsightsV1Analysis": {
      "id": "GoogleCloudContactcenterinsightsV1Analysis",
      "description": "The analysis resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}"
        },
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
        },
        "requestTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which the analysis was requested."
        },
        "analysisResult": {
          "description": "Output only. The result of the analysis, which is populated when the analysis finishes.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResult"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest": {
      "type": "object",
      "description": "The request to analyze conversations in bulk.",
      "properties": {
        "filter": {
          "description": "Required. Filter used to select the subset of conversations to analyze.",
          "type": "string"
        },
        "analysisPercentage": {
          "type": "number",
          "format": "float",
          "description": "Required. Percentage of selected conversation to analyze, between [0, 100]."
        },
        "parent": {
          "description": "Required. The parent resource to create analyses in.",
          "type": "string"
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest"
    },
    "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest": {
      "type": "object",
      "properties": {
        "force": {
          "type": "boolean",
          "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location}"
        },
        "filter": {
          "description": "Filter used to select the subset of conversations to delete.",
          "type": "string"
        },
        "maxDeleteCount": {
          "format": "int32",
          "description": "Maximum number of conversations to delete.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest",
      "description": "The request to delete conversations in bulk."
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata": {
      "description": "The metadata for a bulk delete conversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata",
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "The time the operation was created.",
          "format": "google-datetime"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest",
          "description": "The original request for bulk delete."
        },
        "partialErrors": {
          "type": "array",
          "description": "Partial errors during bulk delete conversations operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation finished running."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats",
      "description": "Aggregated statistics about an issue.",
      "properties": {
        "labeledConversationsCount": {
          "type": "string",
          "description": "Number of conversations attached to the issue at this point in time.",
          "format": "int64"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the issue."
        },
        "issue": {
          "type": "string",
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1Intent": {
      "type": "object",
      "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.",
      "properties": {
        "id": {
          "description": "The unique identifier of the intent.",
          "type": "string"
        },
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1Intent"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata": {
      "description": "The metadata for a bulk analyze conversations operation.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation was created."
        },
        "completedAnalysesCount": {
          "format": "int32",
          "type": "integer",
          "description": "The number of requested analyses that have completed successfully so far."
        },
        "failedAnalysesCount": {
          "format": "int32",
          "description": "The number of requested analyses that have failed so far.",
          "type": "integer"
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Output only. Partial errors during bulk analyze operation that might cause the operation output to be incomplete.",
          "readOnly": true
        },
        "request": {
          "description": "The original request for bulk analyze.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time the operation finished running.",
          "type": "string"
        },
        "totalRequestedAnalysesCount": {
          "format": "int32",
          "description": "Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1Conversation": {
      "description": "The conversation resource.",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "A user-specified language code for the conversation."
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The most recent time at which the conversation was updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "dialogflowIntents": {
          "type": "object",
          "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}",
          "readOnly": true,
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent"
          }
        },
        "callMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata",
          "description": "Call-specific metadata."
        },
        "duration": {
          "format": "google-duration",
          "type": "string",
          "description": "Output only. The duration of the conversation.",
          "readOnly": true
        },
        "expireTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted."
        },
        "transcript": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript",
          "readOnly": true,
          "description": "Output only. The conversation transcript."
        },
        "latestSummary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData",
          "readOnly": true,
          "description": "Output only. Latest summary of the conversation."
        },
        "dataSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource",
          "description": "The source of the audio and transcription for the conversation."
        },
        "startTime": {
          "description": "The time at which the conversation started.",
          "type": "string",
          "format": "google-datetime"
        },
        "ttl": {
          "format": "google-duration",
          "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.",
          "type": "string"
        },
        "latestAnalysis": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1Analysis",
          "readOnly": true,
          "description": "Output only. The conversation's latest analysis, if one exists."
        },
        "runtimeAnnotations": {
          "description": "Output only. The annotations that were generated during the customer and agent interaction.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation"
          }
        },
        "medium": {
          "description": "Immutable. The conversation medium, if unspecified will default to PHONE_CALL.",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "type": "string"
        },
        "turnCount": {
          "description": "Output only. The number of turns in the conversation.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}"
        },
        "obfuscatedUserId": {
          "description": "Obfuscated user ID which the customer sent to us.",
          "type": "string"
        },
        "agentId": {
          "type": "string",
          "description": "An opaque, user-specified string representing the human agent who handled the conversation."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which the conversation was created.",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.",
          "type": "object"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1Conversation"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
      "description": "Metadata from Dialogflow relating to the current transcript segment.",
      "type": "object",
      "properties": {
        "smartReplyAllowlistCovered": {
          "description": "Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation": {
      "properties": {
        "issueMatchData": {
          "description": "Data specifying an issue match.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData"
        },
        "annotationStartBoundary": {
          "description": "The boundary in the conversation where the annotation starts, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary"
        },
        "entityMentionData": {
          "description": "Data specifying an entity mention.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData"
        },
        "interruptionData": {
          "description": "Data specifying an interruption.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1InterruptionData"
        },
        "silenceData": {
          "description": "Data specifying silence.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SilenceData"
        },
        "channelTag": {
          "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.",
          "type": "integer",
          "format": "int32"
        },
        "intentMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData",
          "description": "Data specifying an intent match."
        },
        "sentimentData": {
          "description": "Data specifying sentiment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
        },
        "phraseMatchData": {
          "description": "Data specifying a phrase match.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData"
        },
        "holdData": {
          "description": "Data specifying a hold.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1HoldData"
        },
        "annotationEndBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        }
      },
      "description": "A piece of metadata that applies to a window of a call.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment",
      "type": "object",
      "description": "One channel of conversation-level sentiment data.",
      "properties": {
        "sentimentData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
          "description": "Data specifying sentiment."
        },
        "channelTag": {
          "description": "The channel of the audio that the data applies to.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData": {
      "properties": {
        "source": {
          "type": "string",
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}"
        },
        "metadata": {
          "description": "Map that contains metadata about the Article Suggestion and the document that it originates from.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "confidenceScore": {
          "format": "float",
          "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Article title."
        },
        "uri": {
          "description": "Article URI.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData",
      "description": "Agent Assist Article Suggestion data.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueMatchData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IssueMatchData",
      "properties": {
        "issueAssignment": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment",
          "description": "Information about the issue's assignment."
        }
      },
      "description": "The data for an issue match annotation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata",
      "description": "Metadata for deleting an issue model.",
      "type": "object",
      "properties": {
        "request": {
          "description": "The original request for deletion.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest"
        },
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData": {
      "type": "object",
      "description": "Agent Assist Smart Reply data.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData",
      "properties": {
        "reply": {
          "description": "The content of the reply.",
          "type": "string"
        },
        "metadata": {
          "description": "Map that contains metadata about the Smart Reply and the document from which it originates.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "confidenceScore": {
          "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1UploadConversationRequest": {
      "description": "Request to upload a conversation.",
      "properties": {
        "conversationId": {
          "description": "Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`",
          "type": "string"
        },
        "speechConfig": {
          "description": "Optional. Default Speech-to-Text configuration. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1SpeechConfig"
        },
        "conversation": {
          "$ref": "GoogleCloudContactcenterinsightsV1Conversation",
          "description": "Required. The conversation resource to create."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the conversation."
        },
        "redactionConfig": {
          "description": "Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1UploadConversationRequest",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig": {
      "type": "object",
      "properties": {
        "agentChannel": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. For audio conversations, this field indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for audio conversations to be properly displayed and analyzed."
        },
        "customerChannel": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. For audio conversations, this field indicates which of the channels, 1 or 2, contains the customer. Note that this must be set for audio conversations to be properly displayed and analyzed."
        },
        "agentId": {
          "description": "An opaque, user-specified string representing the human agent who handled the conversations.",
          "type": "string"
        }
      },
      "description": "Configuration that applies to all conversations.",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
      "type": "object",
      "properties": {
        "transcriptIndex": {
          "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.",
          "type": "integer",
          "format": "int32"
        },
        "wordIndex": {
          "type": "integer",
          "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.",
          "format": "int32"
        }
      },
      "description": "A point in a conversation that marks the start or the end of an annotation."
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscript": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscript",
      "description": "A message representing the transcript of a conversation.",
      "properties": {
        "transcriptSegments": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment"
          },
          "description": "A list of sequential transcript segments that comprise the conversation.",
          "type": "array"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ListIssuesResponse": {
      "description": "The response of listing issues.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListIssuesResponse",
      "properties": {
        "issues": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Issue"
          },
          "type": "array",
          "description": "The issues that match the request."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig": {
      "description": "Configuration for processing transcript objects.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig",
      "properties": {
        "medium": {
          "type": "string",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "description": "Required. The medium transcript objects represent.",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ]
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment",
      "description": "A segment of a full transcript.",
      "type": "object",
      "properties": {
        "messageTime": {
          "description": "The time that the message occurred, if provided.",
          "type": "string",
          "format": "google-datetime"
        },
        "languageCode": {
          "type": "string",
          "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\"."
        },
        "segmentParticipant": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant",
          "description": "The participant of this segment."
        },
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
          "description": "The sentiment for this transcript segment."
        },
        "channelTag": {
          "format": "int32",
          "type": "integer",
          "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono."
        },
        "text": {
          "description": "The text of this segment.",
          "type": "string"
        },
        "dialogflowSegmentMetadata": {
          "description": "CCAI metadata relating to the current transcript segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata"
        },
        "words": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo"
          },
          "description": "A list of the word-specific information for each word in the segment.",
          "type": "array"
        },
        "confidence": {
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.",
          "format": "float",
          "type": "number"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest": {
      "description": "The request to analyze conversations in bulk.",
      "properties": {
        "analysisPercentage": {
          "description": "Required. Percentage of selected conversation to analyze, between [0, 100].",
          "format": "float",
          "type": "number"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to create analyses in."
        },
        "filter": {
          "description": "Required. Filter used to select the subset of conversations to analyze.",
          "type": "string"
        },
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchData": {
      "properties": {
        "phraseMatcher": {
          "type": "string",
          "description": "The unique identifier (the resource name) of the phrase matcher."
        },
        "displayName": {
          "description": "The human-readable name of the phrase matcher.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig": {
      "description": "Configuration for processing transcript objects.",
      "type": "object",
      "properties": {
        "medium": {
          "description": "Required. The medium transcript objects represent.",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        }
      },
      "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse": {
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse",
      "description": "The response to deploy an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse": {
      "description": "The response to deploy an issue model.",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData": {
      "description": "Dialogflow interaction data.",
      "properties": {
        "confidence": {
          "type": "number",
          "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float"
        },
        "dialogflowIntentId": {
          "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData"
    },
    "GoogleCloudContactcenterinsightsV1IssueAssignment": {
      "id": "GoogleCloudContactcenterinsightsV1IssueAssignment",
      "properties": {
        "issue": {
          "type": "string",
          "description": "Resource name of the assigned issue."
        },
        "score": {
          "format": "double",
          "type": "number",
          "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1]."
        },
        "displayName": {
          "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Information about the issue."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata": {
      "properties": {
        "partialErrors": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Output only. Partial errors during ingest operation that might cause the operation output to be incomplete."
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        },
        "request": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest",
          "description": "Output only. The original request for ingest."
        },
        "ingestConversationsStats": {
          "description": "Output only. Statistics for IngestConversations operation.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats"
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The metadata for an IngestConversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata"
    },
    "GoogleCloudContactcenterinsightsV1SpeechConfig": {
      "description": "Speech-to-Text configuration.",
      "properties": {
        "speechRecognizer": {
          "description": "The fully-qualified Speech Recognizer resource name. Format: `projects/{project_id}/locations/{location}/recognizer/{recognizer}`",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1SpeechConfig"
    },
    "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData": {
      "description": "Agent Assist Smart Compose suggestion data.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData",
      "properties": {
        "suggestion": {
          "description": "The content of the suggestion.",
          "type": "string"
        },
        "metadata": {
          "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "confidenceScore": {
          "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata": {
      "type": "object",
      "description": "Metadata for creating an issue model.",
      "properties": {
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest",
          "description": "The original request for creation."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequest": {
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest",
      "properties": {
        "gcsSource": {
          "description": "A cloud storage bucket source. Note that any previously ingested objects from the source will be skipped to avoid duplication.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource"
        },
        "transcriptObjectConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig",
          "description": "Configuration for when `source` contains conversation transcripts."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource for new conversations."
        },
        "conversationConfig": {
          "description": "Configuration that applies to all conversations.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig"
        },
        "speechConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1SpeechConfig",
          "description": "Optional. Default Speech-to-Text configuration. Optional, will default to the config specified in Settings."
        },
        "redactionConfig": {
          "description": "Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig"
        }
      },
      "type": "object",
      "description": "The request to ingest conversations."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource": {
      "properties": {
        "audioUri": {
          "type": "string",
          "description": "Cloud Storage URI that points to a file that contains the conversation audio."
        },
        "dialogflowConversation": {
          "type": "string",
          "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource",
      "description": "A Dialogflow source of conversation data."
    },
    "GoogleCloudContactcenterinsightsV1EntityMentionData": {
      "id": "GoogleCloudContactcenterinsightsV1EntityMentionData",
      "properties": {
        "entityUniqueId": {
          "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.",
          "type": "string"
        },
        "type": {
          "description": "The type of the entity mention.",
          "type": "string",
          "enum": [
            "MENTION_TYPE_UNSPECIFIED",
            "PROPER",
            "COMMON"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Proper noun.",
            "Common noun (or noun compound)."
          ]
        },
        "sentiment": {
          "description": "Sentiment expressed for this mention of the entity.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        }
      },
      "type": "object",
      "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation."
    },
    "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData": {
      "type": "object",
      "description": "Conversation summarization suggestion data.",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map that contains metadata about the summarization and the document from which it originates.",
          "type": "object"
        },
        "text": {
          "type": "string",
          "description": "The summarization content that is concatenated into one string."
        },
        "textSections": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.",
          "type": "object"
        },
        "answerRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "conversationModel": {
          "type": "string",
          "description": "The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "The confidence score of the summarization."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1HoldData": {
      "type": "object",
      "description": "The data for a hold annotation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1HoldData",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "description": "Required. The parent resource of the conversation.",
          "type": "string"
        },
        "conversationId": {
          "type": "string",
          "description": "Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`"
        },
        "speechConfig": {
          "description": "Optional. Default Speech-to-Text configuration. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig"
        },
        "redactionConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig",
          "description": "Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings."
        },
        "conversation": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1Conversation",
          "description": "Required. The conversation resource to create."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest",
      "description": "Request to upload a conversation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig",
      "description": "Configuration that applies to all conversations.",
      "properties": {
        "customerChannel": {
          "description": "Optional. For audio conversations, this field indicates which of the channels, 1 or 2, contains the customer. Note that this must be set for audio conversations to be properly displayed and analyzed.",
          "type": "integer",
          "format": "int32"
        },
        "agentChannel": {
          "description": "Optional. For audio conversations, this field indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for audio conversations to be properly displayed and analyzed.",
          "format": "int32",
          "type": "integer"
        },
        "agentId": {
          "description": "An opaque, user-specified string representing the human agent who handled the conversations.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1GcsSource": {
      "description": "A Cloud Storage source of conversation data.",
      "properties": {
        "audioUri": {
          "type": "string",
          "description": "Cloud Storage URI that points to a file that contains the conversation audio."
        },
        "transcriptUri": {
          "type": "string",
          "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1GcsSource"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
      "properties": {
        "smartReplyAllowlistCovered": {
          "type": "boolean",
          "description": "Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist."
        }
      },
      "type": "object",
      "description": "Metadata from Dialogflow relating to the current transcript segment."
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval": {
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval",
      "description": "A single interval in a time series.",
      "properties": {
        "startTime": {
          "description": "The start time of this interval.",
          "format": "google-datetime",
          "type": "string"
        },
        "conversationCount": {
          "description": "The number of conversations created in this interval.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse",
      "type": "object",
      "description": "The response for a bulk delete conversations operation.",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata": {
      "description": "Metadata for undeploying an issue model.",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest",
          "description": "The original request for undeployment."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats",
      "type": "object",
      "description": "Aggregated statistics about an issue model.",
      "properties": {
        "analyzedConversationsCount": {
          "description": "Number of conversations the issue model has analyzed at this point in time.",
          "type": "string",
          "format": "int64"
        },
        "issueStats": {
          "description": "Statistics on each issue. Key is the issue's resource name.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats"
          },
          "type": "object"
        },
        "unclassifiedConversationsCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the phrase matcher."
        },
        "phraseMatcher": {
          "description": "The unique identifier (the resource name) of the phrase matcher.",
          "type": "string"
        }
      },
      "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData": {
      "description": "The data for an issue match annotation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData",
      "type": "object",
      "properties": {
        "issueAssignment": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment",
          "description": "Information about the issue's assignment."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to export data from."
        },
        "bigQueryDestination": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination",
          "description": "Specified if sink is a BigQuery table."
        },
        "writeDisposition": {
          "enum": [
            "WRITE_DISPOSITION_UNSPECIFIED",
            "WRITE_TRUNCATE",
            "WRITE_APPEND"
          ],
          "enumDescriptions": [
            "Write disposition is not specified. Defaults to WRITE_TRUNCATE.",
            "If the table already exists, BigQuery will overwrite the table data and use the schema from the load.",
            "If the table already exists, BigQuery will append data to the table."
          ],
          "type": "string",
          "description": "Options for what to do if the destination table already exists."
        },
        "kmsKey": {
          "type": "string",
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}"
        },
        "filter": {
          "type": "string",
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties."
        }
      },
      "type": "object",
      "description": "The request to export insights."
    },
    "GoogleCloudContactcenterinsightsV1ListConversationsResponse": {
      "description": "The response of listing conversations.",
      "id": "GoogleCloudContactcenterinsightsV1ListConversationsResponse",
      "type": "object",
      "properties": {
        "conversations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
          },
          "description": "The conversations that match the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest": {
      "description": "The request to undeploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest",
      "properties": {
        "name": {
          "description": "Required. The issue model to undeploy.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata": {
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest",
          "description": "The original request for undeployment."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Metadata for undeploying an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse": {
      "description": "The response to undeploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig": {
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig",
      "properties": {
        "exactMatchConfig": {
          "description": "The configuration for the exact match rule.",
          "$ref": "GoogleCloudContactcenterinsightsV1ExactMatchConfig"
        }
      },
      "type": "object",
      "description": "Configuration information of a phrase match rule."
    },
    "GoogleCloudContactcenterinsightsV1AnswerFeedback": {
      "id": "GoogleCloudContactcenterinsightsV1AnswerFeedback",
      "properties": {
        "correctnessLevel": {
          "description": "The correctness level of an answer.",
          "type": "string",
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ],
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ]
        },
        "displayed": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI."
        },
        "clicked": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was clicked by the human agent."
        }
      },
      "type": "object",
      "description": "The feedback that the customer has about a certain answer in the conversation."
    }
  },
  "canonicalName": "Contactcenterinsights",
  "id": "contactcenterinsights:v1"
}

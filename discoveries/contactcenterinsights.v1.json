{
  "mtlsRootUrl": "https://contactcenterinsights.mtls.googleapis.com/",
  "canonicalName": "Contactcenterinsights",
  "name": "contactcenterinsights",
  "title": "Contact Center AI Insights API",
  "revision": "20240506",
  "ownerDomain": "google.com",
  "protocol": "rest",
  "documentationLink": "https://cloud.google.com/contact-center/insights/docs",
  "rootUrl": "https://contactcenterinsights.googleapis.com/",
  "baseUrl": "https://contactcenterinsights.googleapis.com/",
  "basePath": "",
  "id": "contactcenterinsights:v1",
  "parameters": {
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response."
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    }
  },
  "discoveryVersion": "v1",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "getSettings": {
              "id": "contactcenterinsights.projects.locations.getSettings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the settings resource to get.",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$"
                }
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "description": "Gets project-level settings."
            },
            "updateSettings": {
              "request": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string",
                  "description": "Required. The list of fields to be updated."
                },
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "path": "v1/{+name}",
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "id": "contactcenterinsights.projects.locations.updateSettings",
              "description": "Updates project-level settings."
            }
          },
          "resources": {
            "conversations": {
              "resources": {
                "analyses": {
                  "methods": {
                    "get": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the analysis to get.",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.get",
                      "description": "Gets an analysis.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      }
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the analysis to delete.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "description": "Deletes an analysis.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.delete",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "httpMethod": "DELETE"
                    },
                    "create": {
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent resource of the analysis.",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "description": "Creates an analysis. The long running operation is done when the analysis has completed.",
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.create",
                      "httpMethod": "POST",
                      "path": "v1/{+parent}/analyses"
                    },
                    "list": {
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.list",
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties."
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of analyses to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "The value returned by the last `ListAnalysesResponse`; indicates that this is a continuation of a prior `ListAnalyses` call and the system should return the next page of data.",
                          "type": "string"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The parent resource of the analyses."
                        }
                      },
                      "description": "Lists analyses.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/analyses",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "calculateStats": {
                  "parameterOrder": [
                    "location"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "A filter to reduce results to a specific subset. This field is useful for getting statistics about conversations with specific properties.",
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The location of the conversations.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v1/{+location}/conversations:calculateStats",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.calculateStats",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse"
                  },
                  "description": "Gets conversation statistics.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats"
                },
                "list": {
                  "path": "v1/{+parent}/conversations",
                  "parameters": {
                    "view": {
                      "description": "The level of details of the conversation. Default is `BASIC`.",
                      "location": "query",
                      "enumDescriptions": [
                        "The conversation view is not specified. * Defaults to `FULL` in `GetConversationRequest`. * Defaults to `BASIC` in `ListConversationsRequest`.",
                        "Populates all fields in the conversation.",
                        "Populates all fields in the conversation except the transcript."
                      ],
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "FULL",
                        "BASIC"
                      ],
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListConversationsResponse`. This value indicates that this is a continuation of a prior `ListConversations` call and that the system should return the next page of data.",
                      "type": "string",
                      "location": "query"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The attribute by which to order conversations in the response. If empty, conversations will be ordered by descending creation time. Supported values are one of the following: * create_time * customer_satisfaction_rating * duration * latest_analysis * start_time * turn_count The default sort order is ascending. To specify order, append `asc` or `desc`, i.e. `create_time desc`. See https://google.aip.dev/132#ordering for more details."
                    },
                    "filter": {
                      "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent resource of the conversation.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of conversations to return in the response. A valid page size ranges from 0 to 1,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size.",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "contactcenterinsights.projects.locations.conversations.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists conversations.",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListConversationsResponse"
                  }
                },
                "delete": {
                  "id": "contactcenterinsights.projects.locations.conversations.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "description": "Deletes a conversation.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the conversation to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "type": "string"
                    },
                    "force": {
                      "type": "boolean",
                      "location": "query",
                      "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses."
                    }
                  }
                },
                "get": {
                  "id": "contactcenterinsights.projects.locations.conversations.get",
                  "httpMethod": "GET",
                  "description": "Gets a conversation.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "parameters": {
                    "view": {
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "FULL",
                        "BASIC"
                      ],
                      "type": "string",
                      "description": "The level of details of the conversation. Default is `FULL`.",
                      "enumDescriptions": [
                        "The conversation view is not specified. * Defaults to `FULL` in `GetConversationRequest`. * Defaults to `BASIC` in `ListConversationsRequest`.",
                        "Populates all fields in the conversation.",
                        "Populates all fields in the conversation except the transcript."
                      ],
                      "location": "query"
                    },
                    "name": {
                      "description": "Required. The name of the conversation to get.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "bulkDelete": {
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkDelete",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location}",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v1/{+parent}/conversations:bulkDelete",
                  "description": "Deletes multiple conversations in a single request.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "contactcenterinsights.projects.locations.conversations.bulkDelete"
                },
                "upload": {
                  "id": "contactcenterinsights.projects.locations.conversations.upload",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1UploadConversationRequest"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:upload",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent resource of the conversation.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Create a longrunning conversation upload operation. This method differs from CreateConversation by allowing audio transcription and optional DLP redaction.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/conversations:upload"
                },
                "ingest": {
                  "id": "contactcenterinsights.projects.locations.conversations.ingest",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest",
                  "description": "Imports conversations and processes them according to the user's configuration.",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent resource for new conversations.",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+parent}/conversations:ingest",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "bulkAnalyze": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.bulkAnalyze",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource to create analyses in.",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+parent}/conversations:bulkAnalyze",
                  "description": "Analyzes multiple conversations in a single request."
                },
                "patch": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
                      "location": "path"
                    },
                    "updateMask": {
                      "location": "query",
                      "description": "The list of fields to be updated.",
                      "format": "google-fieldmask",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "id": "contactcenterinsights.projects.locations.conversations.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "description": "Updates a conversation.",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}"
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "deprecated": true,
                  "id": "contactcenterinsights.projects.locations.conversations.create",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "path": "v1/{+parent}/conversations",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "description": "Creates a conversation. DEPRECATED: Use UploadConversation instead. CreateConversation does not support audio transcription or DLP redaction.",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent resource of the conversation.",
                      "type": "string"
                    },
                    "conversationId": {
                      "location": "query",
                      "type": "string",
                      "description": "A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.operations.cancel",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  }
                },
                "get": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.operations.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "list": {
                  "id": "contactcenterinsights.projects.locations.operations.list",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}/operations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation's parent resource."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "issueModels": {
              "resources": {
                "issues": {
                  "methods": {
                    "get": {
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "httpMethod": "GET",
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.get",
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the issue to get."
                        }
                      },
                      "description": "Gets an issue.",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "delete": {
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "description": "Deletes an issue.",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the issue to delete.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$"
                        }
                      },
                      "path": "v1/{+name}",
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.delete",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent resource of the issue.",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                        }
                      },
                      "path": "v1/{+parent}/issues",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues",
                      "description": "Lists issues.",
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.list",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListIssuesResponse"
                      }
                    },
                    "patch": {
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.patch",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Updates an issue.",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$",
                          "type": "string"
                        },
                        "updateMask": {
                          "location": "query",
                          "format": "google-fieldmask",
                          "description": "The list of fields to be updated.",
                          "type": "string"
                        }
                      },
                      "httpMethod": "PATCH",
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "create": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent resource of the issue model.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Creates an issue model.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.create",
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/issueModels",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  }
                },
                "undeploy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy",
                  "id": "contactcenterinsights.projects.locations.issueModels.undeploy",
                  "httpMethod": "POST",
                  "description": "Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The issue model to undeploy.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
                  },
                  "path": "v1/{+name}:undeploy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the issue model.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels",
                  "id": "contactcenterinsights.projects.locations.issueModels.list",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse"
                  },
                  "path": "v1/{+parent}/issueModels",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists issue models."
                },
                "import": {
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ImportIssueModelRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Imports an issue model from a Cloud Storage bucket.",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the issue model.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "path": "v1/{+parent}/issueModels:import",
                  "id": "contactcenterinsights.projects.locations.issueModels.import",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels:import"
                },
                "deploy": {
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}:deploy",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.deploy",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "type": "string",
                      "description": "Required. The issue model to deploy."
                    }
                  },
                  "description": "Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed."
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "id": "contactcenterinsights.projects.locations.issueModels.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets an issue model.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the issue model to get.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "path": "v1/{+name}"
                },
                "delete": {
                  "description": "Deletes an issue model.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "id": "contactcenterinsights.projects.locations.issueModels.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the issue model to delete.",
                      "required": true
                    }
                  }
                },
                "export": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:export",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The issue model to export",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "description": "Exports an issue model to the provided destination.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ExportIssueModelRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.export",
                  "path": "v1/{+name}:export"
                },
                "calculateIssueModelStats": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse"
                  },
                  "description": "Gets an issue model's statistics.",
                  "path": "v1/{+issueModel}:calculateIssueModelStats",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats",
                  "parameterOrder": [
                    "issueModel"
                  ],
                  "parameters": {
                    "issueModel": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "required": true,
                      "description": "Required. The resource name of the issue model to query against."
                    }
                  }
                },
                "patch": {
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "httpMethod": "PATCH",
                  "id": "contactcenterinsights.projects.locations.issueModels.patch",
                  "description": "Updates an issue model.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "The list of fields to be updated."
                    }
                  }
                }
              }
            },
            "insightsdata": {
              "methods": {
                "export": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export",
                  "id": "contactcenterinsights.projects.locations.insightsdata.export",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource to export data from.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+parent}/insightsdata:export",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Export insights data to a destination defined in the request body.",
                  "httpMethod": "POST"
                }
              }
            },
            "phraseMatchers": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.list",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/phraseMatchers",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of phrase matchers to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available."
                    },
                    "filter": {
                      "description": "A filter to reduce results to a specific subset. Useful for querying phrase matchers with specific properties.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The parent resource of the phrase matcher.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The value returned by the last `ListPhraseMatchersResponse`. This value indicates that this is a continuation of a prior `ListPhraseMatchers` call and that the system should return the next page of data."
                    }
                  },
                  "description": "Lists phrase matchers.",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "description": "Required. The name of the phrase matcher to delete.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a phrase matcher.",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.delete"
                },
                "patch": {
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "description": "The list of fields to be updated.",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}"
                    }
                  },
                  "description": "Updates a phrase matcher.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a phrase matcher.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/phraseMatchers",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the phrase matcher. Required. The location to create a phrase matcher for. Format: `projects//locations/` or `projects//locations/`",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.create",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  }
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a phrase matcher.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the phrase matcher to get.",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.get"
                }
              }
            },
            "views": {
              "methods": {
                "patch": {
                  "description": "Updates a view.",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "The list of fields to be updated."
                    },
                    "name": {
                      "required": true,
                      "description": "Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "id": "contactcenterinsights.projects.locations.views.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "description": "Creates a view.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "id": "contactcenterinsights.projects.locations.views.create",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the view. Required. The location to create a view for. Format: `projects//locations/` or `projects//locations/`",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/views",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a view.",
                  "path": "v1/{+name}",
                  "id": "contactcenterinsights.projects.locations.views.get",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the view to get.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}"
                },
                "list": {
                  "path": "v1/{+parent}/views",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListViewsResponse"
                  },
                  "description": "Lists views.",
                  "id": "contactcenterinsights.projects.locations.views.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of views to return in the response. If this value is zero, the service will select a default size. A call may return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent resource of the views.",
                      "location": "path",
                      "required": true
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListViewsResponse`; indicates that this is a continuation of a prior `ListViews` call and the system should return the next page of data.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the view to delete.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenterinsights.projects.locations.views.delete",
                  "description": "Deletes a view."
                }
              }
            }
          }
        }
      }
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "servicePath": "",
  "fullyEncodeReservedExpansion": true,
  "kind": "discovery#restDescription",
  "version_module": true,
  "description": "",
  "ownerName": "Google",
  "schemas": {
    "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse": {
      "description": "The response for a bulk delete conversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats": {
      "properties": {
        "failedIngestCount": {
          "description": "Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.",
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "processedObjectCount": {
          "format": "int32",
          "readOnly": true,
          "description": "Output only. The number of objects processed during the ingest operation.",
          "type": "integer"
        },
        "successfulIngestCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Output only. The number of new conversations added during this ingest operation.",
          "format": "int32"
        },
        "duplicatesSkippedCount": {
          "readOnly": true,
          "format": "int32",
          "description": "Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.",
          "type": "integer"
        }
      },
      "description": "Statistics for IngestConversations operation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats"
    },
    "GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination": {
      "properties": {
        "objectUri": {
          "type": "string",
          "description": "Required. Format: `gs:///`"
        }
      },
      "description": "Google Cloud Storage Object URI to save the issue model to.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination"
    },
    "GoogleCloudContactcenterinsightsV1alpha1SearchKnowledgeAnswerAnswerSource": {
      "properties": {
        "snippet": {
          "type": "string",
          "description": "The relevant snippet of the article."
        },
        "title": {
          "description": "The title of the article.",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "The URI of the article."
        },
        "document": {
          "type": "string",
          "description": "The document from which the snippet was extracted. Format: `projects//knowledgeBases//documents/`"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1SearchKnowledgeAnswerAnswerSource",
      "description": "The sources of the answers."
    },
    "GoogleCloudContactcenterinsightsV1alpha1FreeFormSuggestion": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string",
          "description": "Required. Free form suggestion."
        },
        "labels": {
          "type": "array",
          "description": "Optional. Labels for the generator.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1FreeFormSuggestion",
      "description": "Suggestion generated using free form generator."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse",
      "type": "object",
      "properties": {},
      "description": "Response from import issue model"
    },
    "GoogleCloudContactcenterinsightsV1AgentCoachingInstruction": {
      "type": "object",
      "description": "Agent Coaching instructions that customer can configure.",
      "properties": {
        "agentAction": {
          "description": "Optional. The action that human agent should take. For example, \"apologize for the slow shipping\". If the users only want to use agent coaching for intent detection, agent_action can be empty",
          "type": "string"
        },
        "systemAction": {
          "type": "string",
          "description": "Optional. The action that system should take. For example, \"call GetOrderTime with order_number={order number provided by the customer}\". If the users don't have plugins or don't want to trigger plugins, the system_action can be empty"
        },
        "condition": {
          "description": "Optional. The condition of the instruction. For example, \"the customer wants to cancel an order\". If the users want the instruction to be triggered unconditionally, the condition can be empty.",
          "type": "string"
        },
        "displayName": {
          "description": "Optional. Display name for the instruction.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. The detailed description of this instruction."
        },
        "metadata": {
          "description": "Optional. Additional information attached to this instruction.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1AgentCoachingInstruction"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary": {
      "type": "object",
      "description": "A point in a conversation that marks the start or the end of an annotation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
      "properties": {
        "transcriptIndex": {
          "format": "int32",
          "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.",
          "type": "integer"
        },
        "wordIndex": {
          "format": "int32",
          "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.",
          "type": "integer"
        }
      }
    },
    "GoogleRpcStatus": {
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "GoogleRpcStatus"
    },
    "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponseKnowledgeAnswer": {
      "id": "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponseKnowledgeAnswer",
      "properties": {
        "intentMatchingSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponseKnowledgeAnswerIntentMatchingSource",
          "description": "Populated if the prediction was from intent matching."
        },
        "matchConfidence": {
          "format": "float",
          "type": "number",
          "description": "The system's confidence score that this answer is a good match for this conversational query. The range is from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "generativeSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponseKnowledgeAnswerGenerativeSource",
          "description": "Populated if the prediction was Generative."
        },
        "faqSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponseKnowledgeAnswerFaqSource",
          "description": "Populated if the prediction came from FAQ."
        },
        "answerText": {
          "type": "string",
          "description": "The piece of text from the `source` that answers this suggested query."
        }
      },
      "type": "object",
      "description": "Represents an answer from Knowledge. Cuurently supports FAQ and Generative answers."
    },
    "GoogleCloudContactcenterinsightsV1IssueModel": {
      "type": "object",
      "description": "The issue model resource.",
      "properties": {
        "inputDataConfig": {
          "description": "Configs for the input data that used to create the issue model.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig"
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the issue model."
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The most recent time at which the issue model was updated.",
          "format": "google-datetime"
        },
        "issueCount": {
          "format": "int64",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Number of issues in this issue model."
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ],
          "description": "Output only. State of the model.",
          "type": "string"
        },
        "languageCode": {
          "type": "string",
          "description": "Language of the model."
        },
        "modelType": {
          "description": "Type of the model.",
          "enumDescriptions": [
            "Unspecified model type.",
            "Type V1.",
            "Type V2."
          ],
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "TYPE_V1",
            "TYPE_V2"
          ],
          "type": "string"
        },
        "name": {
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time at which this issue model was created.",
          "format": "google-datetime"
        },
        "trainingStats": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
          "description": "Output only. Immutable. The issue model's label statistics on its training data."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueModel"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse": {
      "description": "The response to deploy an issue model.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse"
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata": {
      "description": "Metadata for deploying an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata",
      "type": "object",
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest",
          "description": "The original request for deployment."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
      "properties": {
        "runIntentAnnotator": {
          "type": "boolean",
          "description": "Whether to run the intent annotator."
        },
        "summarizationConfig": {
          "description": "Configuration for the summarization annotator.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig"
        },
        "runSilenceAnnotator": {
          "description": "Whether to run the silence annotator.",
          "type": "boolean"
        },
        "runSummarizationAnnotator": {
          "type": "boolean",
          "description": "Whether to run the summarization annotator."
        },
        "runEntityAnnotator": {
          "type": "boolean",
          "description": "Whether to run the entity annotator."
        },
        "runIssueModelAnnotator": {
          "type": "boolean",
          "description": "Whether to run the issue model annotator. A model should have already been deployed for this to take effect."
        },
        "runSentimentAnnotator": {
          "type": "boolean",
          "description": "Whether to run the sentiment annotator."
        },
        "runPhraseMatcherAnnotator": {
          "type": "boolean",
          "description": "Whether to run the active phrase matcher annotator(s)."
        },
        "issueModels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference."
        },
        "runInterruptionAnnotator": {
          "description": "Whether to run the interruption annotator.",
          "type": "boolean"
        },
        "phraseMatchers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}"
        }
      },
      "type": "object",
      "description": "Selector of all available annotators and phrase matchers to run."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig": {
      "properties": {
        "medium": {
          "type": "string",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "description": "Required. The medium transcript objects represent."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig",
      "description": "Configuration for processing transcript objects.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse": {
      "description": "The response to undeploy an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1ConversationDataSource": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationDataSource",
      "description": "The conversation source, which is a combination of transcript and audio.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "description": "A Cloud Storage location specification for the audio and transcript.",
          "$ref": "GoogleCloudContactcenterinsightsV1GcsSource"
        },
        "dialogflowSource": {
          "description": "The source when the conversation comes from Dialogflow.",
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowSource"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource": {
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource",
      "description": "Configuration for Cloud Storage bucket sources.",
      "properties": {
        "customMetadataKeys": {
          "type": "array",
          "description": "Optional. Custom keys to extract as conversation labels from metadata files in `metadata_bucket_uri`. Keys not included in this field will be ignored. Note that there is a limit of 20 labels per conversation.",
          "items": {
            "type": "string"
          }
        },
        "bucketUri": {
          "type": "string",
          "description": "Required. The Cloud Storage bucket containing source objects."
        },
        "bucketObjectType": {
          "enumDescriptions": [
            "The object type is unspecified and will default to `TRANSCRIPT`.",
            "The object is a transcript.",
            "The object is an audio file."
          ],
          "description": "Optional. Specifies the type of the objects in `bucket_uri`.",
          "type": "string",
          "enum": [
            "BUCKET_OBJECT_TYPE_UNSPECIFIED",
            "TRANSCRIPT",
            "AUDIO"
          ]
        },
        "metadataBucketUri": {
          "type": "string",
          "description": "Optional. The Cloud Storage path to the source object metadata. Note that: [1] metadata files are expected to be in JSON format [2] metadata and source objects must be in separate buckets [3] a source object's metadata object must share the same name to be properly ingested"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1AgentCoachingSuggestion": {
      "properties": {
        "suggestionEval": {
          "description": "Self evaluation of the suggestion.",
          "$ref": "GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionAgentCoachingSuggestionEval"
        },
        "agentActionSuggestions": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionAgentActionSuggestion"
          },
          "type": "array",
          "description": "Optional. Suggested actions for the agent to take."
        },
        "applicableInstructions": {
          "description": "Optional. Instructions applicable based on the current context.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1AgentCoachingInstruction"
          }
        },
        "sampleResponses": {
          "description": "Optional. Sample response for the Agent.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionSampleResponse"
          }
        },
        "suggestionReasoning": {
          "description": "Reasoning for the suggestion.",
          "$ref": "GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionAgentCoachingSuggestionReasoning"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1AgentCoachingSuggestion",
      "type": "object",
      "description": "Suggestion for coaching agents."
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig",
      "type": "object",
      "description": "Configuration for summarization.",
      "properties": {
        "conversationProfile": {
          "description": "Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}",
          "type": "string"
        },
        "summarizationModel": {
          "description": "Default summarization model to be used.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified summarization model.",
            "The CCAI baseline model.",
            "The CCAI baseline model, V2.0."
          ],
          "enum": [
            "SUMMARIZATION_MODEL_UNSPECIFIED",
            "BASELINE_MODEL",
            "BASELINE_MODEL_V2_0"
          ]
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats": {
      "type": "object",
      "description": "Aggregated statistics about an issue.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats",
      "properties": {
        "labeledConversationsCount": {
          "description": "Number of conversations attached to the issue at this point in time.",
          "format": "int64",
          "type": "string"
        },
        "issue": {
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of the issue.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest": {
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest",
      "properties": {
        "filter": {
          "type": "string",
          "description": "Required. Filter used to select the subset of conversations to analyze."
        },
        "parent": {
          "description": "Required. The parent resource to create analyses in.",
          "type": "string"
        },
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
        },
        "analysisPercentage": {
          "description": "Required. Percentage of selected conversation to analyze, between [0, 100].",
          "format": "float",
          "type": "number"
        }
      },
      "description": "The request to analyze conversations in bulk.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig",
      "description": "Configuration that applies to all conversations.",
      "properties": {
        "agentChannel": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed."
        },
        "customerChannel": {
          "description": "Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed.",
          "format": "int32",
          "type": "integer"
        },
        "agentId": {
          "description": "Optional. An opaque, user-specified string representing a human agent who handled all conversations in the import. Note that this will be overridden if per-conversation metadata is provided via the `metadata_bucket_uri`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionAgentCoachingSuggestionEval": {
      "properties": {
        "actionActionSuggestionEval": {
          "description": "Optional. Eval for Agent action suggestion.",
          "type": "string"
        },
        "sampleResponseEval": {
          "description": "Optional. Eval for sample response.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionAgentCoachingSuggestionEval",
      "type": "object",
      "description": "Self evaluations of the suggestion."
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponse": {
      "description": "The response for calculating conversation statistics.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse",
      "properties": {
        "issueMatchesStats": {
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          },
          "type": "object"
        },
        "customHighlighterMatches": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          },
          "description": "A map associating each custom highlighter resource name with its respective number of matches in the set of conversations."
        },
        "conversationCountTimeSeries": {
          "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries",
          "description": "A time series representing the count of conversations created over time that match that requested filter criteria."
        },
        "issueMatches": {
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          },
          "type": "object",
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.",
          "deprecated": true
        },
        "averageDuration": {
          "description": "The average duration of all conversations. The average is calculated using only conversations that have a time duration.",
          "format": "google-duration",
          "type": "string"
        },
        "smartHighlighterMatches": {
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "description": "A map associating each smart highlighter display name with its respective number of matches in the set of conversations."
        },
        "conversationCount": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of conversations."
        },
        "averageTurnCount": {
          "description": "The average number of turns per conversation.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IssueMatchData": {
      "description": "The data for an issue match annotation.",
      "id": "GoogleCloudContactcenterinsightsV1IssueMatchData",
      "type": "object",
      "properties": {
        "issueAssignment": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment",
          "description": "Information about the issue's assignment."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1DialogflowIntent": {
      "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.",
      "id": "GoogleCloudContactcenterinsightsV1DialogflowIntent",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the intent."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ListConversationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available."
        },
        "conversations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
          },
          "description": "The conversations that match the request."
        }
      },
      "type": "object",
      "description": "The response of listing conversations.",
      "id": "GoogleCloudContactcenterinsightsV1ListConversationsResponse"
    },
    "GoogleCloudContactcenterinsightsV1RuntimeAnnotation": {
      "type": "object",
      "properties": {
        "generatorSuggestionResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1GetGeneratorSuggestionResponse",
          "description": "The generator suggestion result."
        },
        "annotationId": {
          "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}",
          "type": "string"
        },
        "dialogflowInteraction": {
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData",
          "description": "Dialogflow interaction data."
        },
        "answerFeedback": {
          "description": "The feedback that the customer has about the answer in `data`.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnswerFeedback"
        },
        "articleSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData",
          "description": "Agent Assist Article Suggestion data."
        },
        "conversationSummarizationSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData",
          "description": "Conversation summarization suggestion data."
        },
        "endBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        },
        "smartComposeSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData",
          "description": "Agent Assist Smart Compose suggestion data."
        },
        "knowledgeAssistResult": {
          "description": "The Knowledge Assist result.",
          "$ref": "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponse"
        },
        "faqAnswer": {
          "description": "Agent Assist FAQ answer data.",
          "$ref": "GoogleCloudContactcenterinsightsV1FaqAnswerData"
        },
        "knowledgeSearchResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1SearchKnowledgeAnswer",
          "description": "The Knowledge Search result."
        },
        "startBoundary": {
          "description": "The boundary in the conversation where the annotation starts, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which this annotation was created."
        },
        "smartReply": {
          "$ref": "GoogleCloudContactcenterinsightsV1SmartReplyData",
          "description": "Agent Assist Smart Reply data."
        }
      },
      "description": "An annotation that was generated during the customer and agent interaction.",
      "id": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation"
    },
    "GoogleCloudContactcenterinsightsV1SearchKnowledgeAnswerAnswerSource": {
      "id": "GoogleCloudContactcenterinsightsV1SearchKnowledgeAnswerAnswerSource",
      "description": "The sources of the answers.",
      "type": "object",
      "properties": {
        "title": {
          "description": "The title of the article.",
          "type": "string"
        },
        "document": {
          "description": "The document from which the snippet was extracted. Format: `projects//knowledgeBases//documents/`",
          "type": "string"
        },
        "snippet": {
          "type": "string",
          "description": "The relevant snippet of the article."
        },
        "uri": {
          "type": "string",
          "description": "The URI of the article."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1CallAnnotation": {
      "properties": {
        "annotationStartBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        },
        "holdData": {
          "$ref": "GoogleCloudContactcenterinsightsV1HoldData",
          "description": "Data specifying a hold."
        },
        "sentimentData": {
          "description": "Data specifying sentiment.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "silenceData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SilenceData",
          "description": "Data specifying silence."
        },
        "channelTag": {
          "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.",
          "format": "int32",
          "type": "integer"
        },
        "phraseMatchData": {
          "description": "Data specifying a phrase match.",
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
        },
        "issueMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueMatchData",
          "description": "Data specifying an issue match."
        },
        "annotationEndBoundary": {
          "description": "The boundary in the conversation where the annotation ends, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "intentMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1IntentMatchData",
          "description": "Data specifying an intent match."
        },
        "entityMentionData": {
          "$ref": "GoogleCloudContactcenterinsightsV1EntityMentionData",
          "description": "Data specifying an entity mention."
        },
        "interruptionData": {
          "$ref": "GoogleCloudContactcenterinsightsV1InterruptionData",
          "description": "Data specifying an interruption."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CallAnnotation",
      "type": "object",
      "description": "A piece of metadata that applies to a window of a call."
    },
    "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData": {
      "type": "object",
      "properties": {
        "phraseMatcher": {
          "description": "The unique identifier (the resource name) of the phrase matcher.",
          "type": "string"
        },
        "displayName": {
          "description": "The human-readable name of the phrase matcher.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData",
      "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match."
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata": {
      "properties": {
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        },
        "request": {
          "description": "The original request for undeployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata",
      "type": "object",
      "description": "Metadata for undeploying an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponseKnowledgeAnswerFaqSource": {
      "properties": {
        "question": {
          "description": "The corresponding FAQ question.",
          "type": "string"
        },
        "document": {
          "description": "Indicates which Knowledge Document this answer was extracted from. Format: `projects//knowledgeBases//documents/`.",
          "type": "string"
        }
      },
      "description": "Details about source of FAQ answer.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponseKnowledgeAnswerFaqSource",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig": {
      "description": "Speech-to-Text configuration. Speech-to-Text settings are applied to conversations ingested from the UploadConversation and IngestConversations endpoints, including conversation coming from CCAI Platform. They are not applied to conversations ingested from the CreateConversation endpoint.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig",
      "properties": {
        "speechRecognizer": {
          "description": "The fully-qualified Speech Recognizer resource name. Format: `projects/{project_id}/locations/{location}/recognizer/{recognizer}`",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ListViewsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1ListViewsResponse",
      "description": "The response of listing views.",
      "type": "object",
      "properties": {
        "views": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1View"
          },
          "type": "array",
          "description": "The views that match the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata": {
      "type": "object",
      "description": "Conversation metadata related to quality management.",
      "properties": {
        "agentInfo": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo"
          },
          "type": "array",
          "description": "Information about agents involved in the call."
        },
        "waitDuration": {
          "description": "The amount of time the customer waited to connect with an agent.",
          "format": "google-duration",
          "type": "string"
        },
        "menuPath": {
          "type": "string",
          "description": "An arbitrary string value specifying the menu path the customer took."
        },
        "customerSatisfactionRating": {
          "format": "int32",
          "description": "An arbitrary integer value indicating the customer's satisfaction rating.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse": {
      "properties": {},
      "description": "The response for a bulk delete conversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource": {
      "description": "Google Cloud Storage Object URI to get the issue model file from.",
      "properties": {
        "objectUri": {
          "type": "string",
          "description": "Required. Format: `gs:///`"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource"
    },
    "GoogleCloudContactcenterinsightsV1SummarySuggestion": {
      "id": "GoogleCloudContactcenterinsightsV1SummarySuggestion",
      "properties": {
        "summarySections": {
          "description": "Required. All the parts of generated summary.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1SummarySuggestionSummarySection"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Suggested summary of the conversation."
    },
    "GoogleCloudContactcenterinsightsV1DialogflowInteractionData": {
      "description": "Dialogflow interaction data.",
      "id": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData",
      "properties": {
        "dialogflowIntentId": {
          "type": "string",
          "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}"
        },
        "confidence": {
          "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "float"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Analysis": {
      "properties": {
        "requestTime": {
          "description": "Output only. The time at which the analysis was requested.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "analysisResult": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResult",
          "description": "Output only. The result of the analysis, which is populated when the analysis finishes."
        },
        "name": {
          "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}",
          "type": "string"
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1Analysis",
      "description": "The analysis resource.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse": {
      "description": "The response for a bulk analyze conversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse",
      "properties": {
        "successfulAnalysisCount": {
          "description": "Count of successful analyses.",
          "format": "int32",
          "type": "integer"
        },
        "failedAnalysisCount": {
          "format": "int32",
          "type": "integer",
          "description": "Count of failed analyses."
        }
      },
      "type": "object"
    },
    "GoogleLongrunningOperation": {
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      },
      "id": "GoogleLongrunningOperation"
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResult": {
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResult",
      "type": "object",
      "description": "The result of an analysis.",
      "properties": {
        "endTime": {
          "description": "The time at which the analysis ended.",
          "format": "google-datetime",
          "type": "string"
        },
        "callAnalysisMetadata": {
          "description": "Call-specific metadata created by the analysis.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsMetadata": {
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "ingestConversationsStats": {
          "description": "Output only. Statistics for IngestConversations operation.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest",
          "readOnly": true,
          "description": "Output only. The original request for ingest."
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Partial errors during ingest operation that might cause the operation output to be incomplete."
        }
      },
      "description": "The metadata for an IngestConversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadata"
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest": {
      "description": "The request to delete an issue model.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name of the issue model to delete."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ListAnalysesResponse": {
      "description": "The response to list analyses.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "analyses": {
          "type": "array",
          "description": "The analyses that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup": {
      "description": "A message representing a rule in the phrase matcher.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup",
      "properties": {
        "type": {
          "enum": [
            "PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rules or there is no match.",
            "If any of the phrase match rules are met, there is a match."
          ],
          "type": "string",
          "description": "Required. The type of this phrase match rule group."
        },
        "phraseMatchRules": {
          "type": "array",
          "description": "A list of phrase match rules that are included in this group.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRule"
          }
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1View": {
      "id": "GoogleCloudContactcenterinsightsV1View",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable display name of the view."
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which this view was created."
        },
        "name": {
          "description": "Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}",
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "String with specific view properties, must be non-empty."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The most recent time at which the view was updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "description": "The View resource."
    },
    "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData": {
      "properties": {
        "question": {
          "type": "string",
          "description": "The corresponding FAQ question."
        },
        "metadata": {
          "description": "Map that contains metadata about the FAQ answer and the document that it originates from.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "answer": {
          "type": "string",
          "description": "The piece of text from the `source` knowledge base document."
        },
        "source": {
          "type": "string",
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}."
        },
        "confidenceScore": {
          "type": "number",
          "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float"
        }
      },
      "type": "object",
      "description": "Agent Assist frequently-asked-question answer data.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponseKnowledgeAnswerGenerativeSource": {
      "description": "Details about source of Generative answer.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponseKnowledgeAnswerGenerativeSource",
      "type": "object",
      "properties": {
        "snippets": {
          "type": "array",
          "description": "All snippets used for this Generative Prediction, with their source URI and data.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponseKnowledgeAnswerGenerativeSourceSnippet"
          }
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ImportIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1ImportIssueModelMetadata",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1ImportIssueModelRequest",
          "description": "The original import request."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation finished running."
        }
      },
      "description": "Metadata used for import issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult": {
      "description": "Issue Modeling result on a conversation.",
      "properties": {
        "issues": {
          "type": "array",
          "description": "All the matched issues.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment"
          }
        },
        "issueModel": {
          "description": "Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The issue model to deploy."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest",
      "description": "The request to deploy an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponse": {
      "description": "Response for Knowledge Assist. Contains suggested query and optionally includes an answer for the query.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponse",
      "properties": {
        "suggestedQueryAnswer": {
          "description": "The answer generated for the suggested query. Whether or not an answer is generated depends on how confident we are about the generated query.",
          "$ref": "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponseKnowledgeAnswer"
        },
        "suggestedQuery": {
          "description": "The query suggested based on the context. Suggestion is made only if it is different from the previous suggestion.",
          "$ref": "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponseSuggestedQuery"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ArticleSuggestionData": {
      "properties": {
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}",
          "type": "string"
        },
        "metadata": {
          "description": "Map that contains metadata about the Article Suggestion and the document that it originates from.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "confidenceScore": {
          "format": "float",
          "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        },
        "uri": {
          "description": "Article URI.",
          "type": "string"
        },
        "title": {
          "description": "Article title.",
          "type": "string"
        }
      },
      "description": "Agent Assist Article Suggestion data.",
      "id": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelMetadata",
      "type": "object",
      "description": "Metadata used for import issue model.",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "description": "The time the operation finished running.",
          "type": "string"
        },
        "request": {
          "description": "The original import request.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the operation was created."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1InterruptionData": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1InterruptionData",
      "description": "The data for an interruption annotation."
    },
    "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig": {
      "description": "Configs for the input data used to create the issue model.",
      "properties": {
        "medium": {
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "deprecated": true,
          "type": "string",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`."
        },
        "filter": {
          "description": "A filter to reduce the conversations used for training the model to a specific subset.",
          "type": "string"
        },
        "trainingConversationsCount": {
          "readOnly": true,
          "description": "Output only. Number of conversations used in training. Output only.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AgentCoachingSuggestionAgentCoachingSuggestionReasoning": {
      "properties": {
        "issueSummary": {
          "type": "string",
          "description": "Optional. Summary of the issue."
        },
        "agentActionTaken": {
          "type": "string",
          "description": "Optional. The actions that the agent has taken already."
        }
      },
      "description": "Reasoning for the suggestion.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AgentCoachingSuggestionAgentCoachingSuggestionReasoning"
    },
    "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponseKnowledgeAnswerIntentMatchingSource": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponseKnowledgeAnswerIntentMatchingSource",
      "description": "Details about source of Intent Matching answer.",
      "properties": {
        "title": {
          "description": "Title of the document.",
          "type": "string"
        },
        "uri": {
          "description": "URI the data is sourced from.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata",
      "type": "object",
      "properties": {
        "customerChannel": {
          "type": "integer",
          "format": "int32",
          "description": "The audio channel that contains the customer."
        },
        "agentChannel": {
          "format": "int32",
          "description": "The audio channel that contains the agent.",
          "type": "integer"
        }
      },
      "description": "Call-specific metadata."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata": {
      "type": "object",
      "properties": {
        "request": {
          "description": "Output only. The original request for ingest.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest"
        },
        "ingestConversationsStats": {
          "description": "Output only. Statistics for IngestConversations operation.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats",
          "readOnly": true
        },
        "partialErrors": {
          "type": "array",
          "description": "Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.",
          "readOnly": true,
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "type": "string"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata",
      "description": "The metadata for an IngestConversations operation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponseKnowledgeAnswer": {
      "properties": {
        "matchConfidence": {
          "format": "float",
          "type": "number",
          "description": "The system's confidence score that this answer is a good match for this conversational query. The range is from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "intentMatchingSource": {
          "description": "Populated if the prediction was from intent matching.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponseKnowledgeAnswerIntentMatchingSource"
        },
        "faqSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponseKnowledgeAnswerFaqSource",
          "description": "Populated if the prediction came from FAQ."
        },
        "generativeSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponseKnowledgeAnswerGenerativeSource",
          "description": "Populated if the prediction was Generative."
        },
        "answerText": {
          "description": "The piece of text from the `source` that answers this suggested query.",
          "type": "string"
        }
      },
      "description": "Represents an answer from Knowledge. Cuurently supports FAQ and Generative answers.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponseKnowledgeAnswer"
    },
    "GoogleCloudContactcenterinsightsV1SpeechConfig": {
      "properties": {
        "speechRecognizer": {
          "type": "string",
          "description": "The fully-qualified Speech Recognizer resource name. Format: `projects/{project_id}/locations/{location}/recognizer/{recognizer}`"
        }
      },
      "description": "Speech-to-Text configuration. Speech-to-Text settings are applied to conversations ingested from the UploadConversation and IngestConversations endpoints, including conversation coming from CCAI Platform. They are not applied to conversations ingested from the CreateConversation endpoint.",
      "id": "GoogleCloudContactcenterinsightsV1SpeechConfig",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1Intent": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the intent."
        },
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the intent."
        }
      },
      "type": "object",
      "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1Intent"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource": {
      "properties": {
        "audioUri": {
          "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
          "type": "string"
        },
        "dialogflowConversation": {
          "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "A Dialogflow source of conversation data.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ExactMatchConfig": {
      "properties": {
        "caseSensitive": {
          "type": "boolean",
          "description": "Whether to consider case sensitivity when performing an exact match."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ExactMatchConfig",
      "type": "object",
      "description": "Exact match configuration."
    },
    "GoogleCloudContactcenterinsightsV1alpha1HoldData": {
      "description": "The data for a hold annotation.",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1alpha1HoldData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse": {
      "description": "The response of listing issue models.",
      "id": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse",
      "properties": {
        "issueModels": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
          },
          "description": "The issue models that match the request."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1HoldData": {
      "id": "GoogleCloudContactcenterinsightsV1HoldData",
      "properties": {},
      "description": "The data for a hold annotation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata": {
      "description": "Metadata from Dialogflow relating to the current transcript segment.",
      "properties": {
        "smartReplyAllowlistCovered": {
          "description": "Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelResult": {
      "id": "GoogleCloudContactcenterinsightsV1IssueModelResult",
      "description": "Issue Modeling result on a conversation.",
      "type": "object",
      "properties": {
        "issueModel": {
          "description": "Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        },
        "issues": {
          "type": "array",
          "description": "All the matched issues.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment"
          }
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionSampleResponse": {
      "id": "GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionSampleResponse",
      "type": "object",
      "properties": {
        "responseText": {
          "type": "string",
          "description": "Optional. Sample response for Agent in text."
        }
      },
      "description": "Sample response that the agent can use. This could be based on applicable instructions and ingested data from other systems."
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest",
      "type": "object",
      "properties": {
        "issueModel": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModel",
          "description": "Required. The issue model to create."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the issue model."
        }
      },
      "description": "The request to create an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource": {
      "type": "object",
      "description": "Configuration for Cloud Storage bucket sources.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource",
      "properties": {
        "bucketObjectType": {
          "enum": [
            "BUCKET_OBJECT_TYPE_UNSPECIFIED",
            "TRANSCRIPT",
            "AUDIO"
          ],
          "type": "string",
          "description": "Optional. Specifies the type of the objects in `bucket_uri`.",
          "enumDescriptions": [
            "The object type is unspecified and will default to `TRANSCRIPT`.",
            "The object is a transcript.",
            "The object is an audio file."
          ]
        },
        "metadataBucketUri": {
          "description": "Optional. The Cloud Storage path to the source object metadata. Note that: [1] metadata files are expected to be in JSON format [2] metadata and source objects must be in separate buckets [3] a source object's metadata object must share the same name to be properly ingested",
          "type": "string"
        },
        "customMetadataKeys": {
          "description": "Optional. Custom keys to extract as conversation labels from metadata files in `metadata_bucket_uri`. Keys not included in this field will be ignored. Note that there is a limit of 20 labels per conversation.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bucketUri": {
          "type": "string",
          "description": "Required. The Cloud Storage bucket containing source objects."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1SummarySuggestionSummarySection": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1SummarySuggestionSummarySection",
      "properties": {
        "section": {
          "description": "Required. Name of the section.",
          "type": "string"
        },
        "summary": {
          "description": "Required. Summary text for the section.",
          "type": "string"
        }
      },
      "description": "A component of the generated summary.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest",
      "description": "Request to export an issue model.",
      "type": "object",
      "properties": {
        "gcsDestination": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination",
          "description": "Google Cloud Storage URI to export the Issue Model to."
        },
        "name": {
          "type": "string",
          "description": "Required. The issue model to export"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata": {
      "type": "object",
      "description": "The metadata for a bulk delete conversations operation.",
      "properties": {
        "request": {
          "description": "The original request for bulk delete.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the operation finished running."
        },
        "createTime": {
          "description": "The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Partial errors during bulk delete conversations operation that might cause the operation output to be incomplete.",
          "type": "array"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatcher": {
      "description": "The phrase matcher resource.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatcher",
      "properties": {
        "roleMatch": {
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "type": "string",
          "description": "The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript."
        },
        "activationUpdateTime": {
          "readOnly": true,
          "description": "Output only. The most recent time at which the activation status was updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "displayName": {
          "description": "The human-readable name of the phrase matcher.",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The most recent time at which the phrase matcher was updated."
        },
        "type": {
          "enum": [
            "PHRASE_MATCHER_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ],
          "description": "Required. The type of this phrase matcher.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rule groups or there is no match.",
            "If any of the phrase match rule groups are met, there is a match."
          ]
        },
        "revisionId": {
          "description": "Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
          "type": "string"
        },
        "revisionCreateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added."
        },
        "phraseMatchRuleGroups": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup"
          },
          "description": "A list of phase match rule groups that are included in this matcher."
        },
        "versionTag": {
          "type": "string",
          "description": "The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`."
        },
        "active": {
          "description": "Applies the phrase matcher only when it is active.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats": {
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats",
      "type": "object",
      "description": "Aggregated statistics about an issue.",
      "properties": {
        "labeledConversationsCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of conversations attached to the issue at this point in time."
        },
        "issue": {
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the issue."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment": {
      "description": "A segment of a full transcript.",
      "properties": {
        "dialogflowSegmentMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
          "description": "CCAI metadata relating to the current transcript segment."
        },
        "languageCode": {
          "type": "string",
          "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\"."
        },
        "confidence": {
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.",
          "format": "float",
          "type": "number"
        },
        "channelTag": {
          "type": "integer",
          "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.",
          "format": "int32"
        },
        "text": {
          "description": "The text of this segment.",
          "type": "string"
        },
        "words": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo"
          },
          "type": "array",
          "description": "A list of the word-specific information for each word in the segment."
        },
        "segmentParticipant": {
          "description": "The participant of this segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant"
        },
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
          "description": "The sentiment for this transcript segment."
        },
        "messageTime": {
          "description": "The time that the message occurred, if provided.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequest": {
      "description": "The request to ingest conversations.",
      "properties": {
        "speechConfig": {
          "description": "Optional. Default Speech-to-Text configuration. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1SpeechConfig"
        },
        "transcriptObjectConfig": {
          "description": "Configuration for when `source` contains conversation transcripts.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig"
        },
        "redactionConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig",
          "description": "Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings."
        },
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource",
          "description": "A cloud storage bucket source. Note that any previously ingested objects from the source will be skipped to avoid duplication."
        },
        "conversationConfig": {
          "description": "Configuration that applies to all conversations.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource for new conversations."
        },
        "sampleSize": {
          "description": "Optional. If set, this fields indicates the number of objects to ingest from the Cloud Storage bucket. If empty, the entire bucket will be ingested. Note that conversations produced via sampling will not be ingested by subsequent ingest requests unless they are first deleted.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRule": {
      "type": "object",
      "description": "The data for a phrase match rule.",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRule",
      "properties": {
        "negated": {
          "type": "boolean",
          "description": "Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment."
        },
        "config": {
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig",
          "description": "Provides additional information about the rule that specifies how to apply the rule."
        },
        "query": {
          "type": "string",
          "description": "Required. The phrase to be matched."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsResponse",
      "properties": {},
      "type": "object",
      "description": "The response to an IngestConversations operation."
    },
    "GoogleCloudContactcenterinsightsV1ConversationParticipant": {
      "properties": {
        "role": {
          "type": "string",
          "description": "The role of the participant.",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ]
        },
        "dialogflowParticipant": {
          "deprecated": true,
          "type": "string",
          "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}"
        },
        "dialogflowParticipantName": {
          "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "type": "string"
        },
        "obfuscatedExternalUserId": {
          "description": "Obfuscated user ID from Dialogflow.",
          "type": "string"
        },
        "userId": {
          "description": "A user-specified ID representing the participant.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationParticipant",
      "description": "The call participant speaking for a given utterance.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation": {
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "The time at which this annotation was created.",
          "type": "string"
        },
        "knowledgeSearchResult": {
          "description": "The Knowledge Search result.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SearchKnowledgeAnswer"
        },
        "faqAnswer": {
          "description": "Agent Assist FAQ answer data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData"
        },
        "dialogflowInteraction": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData",
          "description": "Dialogflow interaction data."
        },
        "startBoundary": {
          "description": "The boundary in the conversation where the annotation starts, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary"
        },
        "generatorSuggestionResult": {
          "description": "The generator suggestion result.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1GetGeneratorSuggestionResponse"
        },
        "smartComposeSuggestion": {
          "description": "Agent Assist Smart Compose suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData"
        },
        "articleSuggestion": {
          "description": "Agent Assist Article Suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData"
        },
        "smartReply": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData",
          "description": "Agent Assist Smart Reply data."
        },
        "knowledgeAssistResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponse",
          "description": "The Knowledge Assist result."
        },
        "conversationSummarizationSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData",
          "description": "Conversation summarization suggestion data."
        },
        "answerFeedback": {
          "description": "The feedback that the customer has about the answer in `data`.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback"
        },
        "endBoundary": {
          "description": "The boundary in the conversation where the annotation ends, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary"
        },
        "annotationId": {
          "type": "string",
          "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation",
      "type": "object",
      "description": "An annotation that was generated during the customer and agent interaction."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination": {
      "description": "A BigQuery Table Reference.",
      "type": "object",
      "properties": {
        "table": {
          "type": "string",
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error."
        },
        "dataset": {
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo": {
      "description": "Word-level info for words in a transcript.",
      "properties": {
        "startOffset": {
          "type": "string",
          "description": "Time offset of the start of this word relative to the beginning of the total conversation.",
          "format": "google-duration"
        },
        "endOffset": {
          "format": "google-duration",
          "description": "Time offset of the end of this word relative to the beginning of the total conversation.",
          "type": "string"
        },
        "word": {
          "type": "string",
          "description": "The word itself. Includes punctuation marks that surround the word."
        },
        "confidence": {
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest",
      "description": "Request to upload a conversation.",
      "properties": {
        "speechConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig",
          "description": "Optional. Speech-to-Text configuration. Will default to the config specified in Settings."
        },
        "conversationId": {
          "type": "string",
          "description": "Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the conversation."
        },
        "redactionConfig": {
          "description": "Optional. DLP settings for transcript redaction. Will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig"
        },
        "conversation": {
          "description": "Required. The conversation resource to create.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1Conversation"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ImportIssueModelRequest": {
      "description": "Request to import an issue model.",
      "properties": {
        "createNewModel": {
          "type": "boolean",
          "description": "Optional. If set to true, will create a new issue model from the imported file with randomly generated IDs for the issue model and corresponding issues. Otherwise, replaces an existing model with the same ID as the file."
        },
        "parent": {
          "description": "Required. The parent resource of the issue model.",
          "type": "string"
        },
        "gcsSource": {
          "description": "Google Cloud Storage source message.",
          "$ref": "GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ImportIssueModelRequest",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1SearchKnowledgeAnswer": {
      "properties": {
        "answerRecord": {
          "description": "The name of the answer record. Format: `projects//locations//answer Records/`",
          "type": "string"
        },
        "answerType": {
          "enum": [
            "ANSWER_TYPE_UNSPECIFIED",
            "FAQ",
            "GENERATIVE",
            "INTENT"
          ],
          "type": "string",
          "description": "The type of the answer.",
          "enumDescriptions": [
            "The answer has a unspecified type.",
            "The answer is from FAQ documents.",
            "The answer is from generative model.",
            "The answer is from intent matching."
          ]
        },
        "confidenceScore": {
          "type": "number",
          "format": "float",
          "description": "The confidence score in [0.0, 1.0] range."
        },
        "answerSources": {
          "description": "All sources used to generate the answer.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1SearchKnowledgeAnswerAnswerSource"
          }
        },
        "answer": {
          "type": "string",
          "description": "The piece of text from the knowledge base documents that answers the search query"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1SearchKnowledgeAnswer",
      "description": "Represents a SearchKnowledge answer.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata": {
      "properties": {
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        },
        "conversation": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The Conversation that this Analysis Operation belongs to."
        },
        "annotatorSelector": {
          "description": "Output only. The annotator selector used for the analysis (if any).",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
        }
      },
      "type": "object",
      "description": "Metadata for a create analysis operation.",
      "id": "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map that contains metadata about the Smart Reply and the document from which it originates."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "reply": {
          "type": "string",
          "description": "The content of the reply."
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        }
      },
      "description": "Agent Assist Smart Reply data.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata": {
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Partial errors during export operation that might cause the operation output to be incomplete."
        },
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest",
          "description": "The original request for export."
        }
      },
      "type": "object",
      "description": "Metadata for an export insights operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1SilenceData": {
      "type": "object",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1alpha1SilenceData",
      "description": "The data for a silence annotation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig",
      "type": "object",
      "properties": {
        "inspectTemplate": {
          "description": "The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`",
          "type": "string"
        },
        "deidentifyTemplate": {
          "type": "string",
          "description": "The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`"
        }
      },
      "description": "DLP resources used for redaction while ingesting conversations. DLP settings are applied to conversations ingested from the UploadConversation and IngestConversations endpoints, including conversation coming from CCAI Platform. They are not applied to conversations ingested from the CreateConversation endpoint or the Dialogflow / Agent Assist runtime integrations. When using Dialogflow / Agent Assist runtime integrations redaction should be performed in Dialogflow / Agent Assist."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData",
      "properties": {
        "title": {
          "type": "string",
          "description": "Article title."
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "confidenceScore": {
          "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "float"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map that contains metadata about the Article Suggestion and the document that it originates from."
        },
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "Article URI."
        }
      },
      "description": "Agent Assist Article Suggestion data.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1RedactionConfig": {
      "type": "object",
      "properties": {
        "inspectTemplate": {
          "description": "The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`",
          "type": "string"
        },
        "deidentifyTemplate": {
          "type": "string",
          "description": "The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1RedactionConfig",
      "description": "DLP resources used for redaction while ingesting conversations. DLP settings are applied to conversations ingested from the UploadConversation and IngestConversations endpoints, including conversation coming from CCAI Platform. They are not applied to conversations ingested from the CreateConversation endpoint or the Dialogflow / Agent Assist runtime integrations. When using Dialogflow / Agent Assist runtime integrations redaction should be performed in Dialogflow / Agent Assist."
    },
    "GoogleCloudContactcenterinsightsV1Intent": {
      "id": "GoogleCloudContactcenterinsightsV1Intent",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier of the intent.",
          "type": "string"
        }
      },
      "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStats": {
      "description": "Aggregated statistics about an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
      "type": "object",
      "properties": {
        "analyzedConversationsCount": {
          "description": "Number of conversations the issue model has analyzed at this point in time.",
          "type": "string",
          "format": "int64"
        },
        "unclassifiedConversationsCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time."
        },
        "issueStats": {
          "type": "object",
          "description": "Statistics on each issue. Key is the issue's resource name.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          }
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata",
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest",
          "description": "The original request for deployment."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Metadata for deploying an issue model."
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
      "description": "Metadata from Dialogflow relating to the current transcript segment.",
      "properties": {
        "smartReplyAllowlistCovered": {
          "description": "Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata": {
      "properties": {
        "conversation": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The Conversation that this Analysis Operation belongs to."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
          "readOnly": true,
          "description": "Output only. The annotator selector used for the analysis (if any)."
        }
      },
      "type": "object",
      "description": "Metadata for a create analysis operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData",
      "description": "The data for an issue match annotation.",
      "properties": {
        "issueAssignment": {
          "description": "Information about the issue's assignment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult": {
      "description": "The result of an analysis.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time at which the analysis ended."
        },
        "callAnalysisMetadata": {
          "description": "Call-specific metadata created by the analysis.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1SearchKnowledgeAnswer": {
      "id": "GoogleCloudContactcenterinsightsV1SearchKnowledgeAnswer",
      "description": "Represents a SearchKnowledge answer.",
      "type": "object",
      "properties": {
        "confidenceScore": {
          "type": "number",
          "description": "The confidence score in [0.0, 1.0] range.",
          "format": "float"
        },
        "answerSources": {
          "description": "All sources used to generate the answer.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1SearchKnowledgeAnswerAnswerSource"
          }
        },
        "answerRecord": {
          "description": "The name of the answer record. Format: `projects//locations//answer Records/`",
          "type": "string"
        },
        "answer": {
          "description": "The piece of text from the knowledge base documents that answers the search query",
          "type": "string"
        },
        "answerType": {
          "enum": [
            "ANSWER_TYPE_UNSPECIFIED",
            "FAQ",
            "GENERATIVE",
            "INTENT"
          ],
          "type": "string",
          "description": "The type of the answer.",
          "enumDescriptions": [
            "The answer has a unspecified type.",
            "The answer is from FAQ documents.",
            "The answer is from generative model.",
            "The answer is from intent matching."
          ]
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest",
      "type": "object",
      "properties": {
        "redactionConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig",
          "description": "Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings."
        },
        "conversationConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig",
          "description": "Configuration that applies to all conversations."
        },
        "sampleSize": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. If set, this fields indicates the number of objects to ingest from the Cloud Storage bucket. If empty, the entire bucket will be ingested. Note that conversations produced via sampling will not be ingested by subsequent ingest requests unless they are first deleted."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource for new conversations."
        },
        "transcriptObjectConfig": {
          "description": "Configuration for when `source` contains conversation transcripts.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig"
        },
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource",
          "description": "A cloud storage bucket source. Note that any previously ingested objects from the source will be skipped to avoid duplication."
        },
        "speechConfig": {
          "description": "Optional. Default Speech-to-Text configuration. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig"
        }
      },
      "description": "The request to ingest conversations."
    },
    "GoogleCloudContactcenterinsightsV1alpha1SentimentData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
      "description": "The data for a sentiment annotation.",
      "properties": {
        "score": {
          "description": "The sentiment score between -1.0 (negative) and 1.0 (positive).",
          "type": "number",
          "format": "float"
        },
        "magnitude": {
          "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest": {
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to export data from."
        },
        "filter": {
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.",
          "type": "string"
        },
        "writeDisposition": {
          "type": "string",
          "enum": [
            "WRITE_DISPOSITION_UNSPECIFIED",
            "WRITE_TRUNCATE",
            "WRITE_APPEND"
          ],
          "enumDescriptions": [
            "Write disposition is not specified. Defaults to WRITE_TRUNCATE.",
            "If the table already exists, BigQuery will overwrite the table data and use the schema from the load.",
            "If the table already exists, BigQuery will append data to the table."
          ],
          "description": "Options for what to do if the destination table already exists."
        },
        "kmsKey": {
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}",
          "type": "string"
        },
        "bigQueryDestination": {
          "description": "Specified if sink is a BigQuery table.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest",
      "description": "The request to export insights.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse": {
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse",
      "description": "The response to an IngestConversations operation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Conversation": {
      "id": "GoogleCloudContactcenterinsightsV1Conversation",
      "description": "The conversation resource.",
      "type": "object",
      "properties": {
        "qualityMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationQualityMetadata",
          "description": "Conversation metadata related to quality management."
        },
        "latestAnalysis": {
          "description": "Output only. The conversation's latest analysis, if one exists.",
          "$ref": "GoogleCloudContactcenterinsightsV1Analysis",
          "readOnly": true
        },
        "transcript": {
          "readOnly": true,
          "description": "Output only. The conversation transcript.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscript"
        },
        "runtimeAnnotations": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation"
          },
          "readOnly": true,
          "description": "Output only. The annotations that were generated during the customer and agent interaction.",
          "type": "array"
        },
        "languageCode": {
          "type": "string",
          "description": "A user-specified language code for the conversation."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time at which the conversation was created.",
          "readOnly": true
        },
        "turnCount": {
          "readOnly": true,
          "description": "Output only. The number of turns in the conversation.",
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}"
        },
        "labels": {
          "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "latestSummary": {
          "readOnly": true,
          "description": "Output only. Latest summary of the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData"
        },
        "agentId": {
          "type": "string",
          "description": "An opaque, user-specified string representing the human agent who handled the conversation."
        },
        "medium": {
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "description": "Immutable. The conversation medium, if unspecified will default to PHONE_CALL.",
          "type": "string"
        },
        "dialogflowIntents": {
          "readOnly": true,
          "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1DialogflowIntent"
          }
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The most recent time at which the conversation was updated.",
          "readOnly": true
        },
        "duration": {
          "description": "Output only. The duration of the conversation.",
          "format": "google-duration",
          "type": "string",
          "readOnly": true
        },
        "ttl": {
          "format": "google-duration",
          "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.",
          "type": "string"
        },
        "expireTime": {
          "format": "google-datetime",
          "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.",
          "type": "string"
        },
        "callMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata",
          "description": "Call-specific metadata."
        },
        "obfuscatedUserId": {
          "description": "Obfuscated user ID which the customer sent to us.",
          "type": "string"
        },
        "startTime": {
          "description": "The time at which the conversation started.",
          "format": "google-datetime",
          "type": "string"
        },
        "dataSource": {
          "description": "The source of the audio and transcription for the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationDataSource"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest",
      "description": "Request to import an issue model.",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource",
          "description": "Google Cloud Storage source message."
        },
        "createNewModel": {
          "description": "Optional. If set to true, will create a new issue model from the imported file with randomly generated IDs for the issue model and corresponding issues. Otherwise, replaces an existing model with the same ID as the file.",
          "type": "boolean"
        },
        "parent": {
          "description": "Required. The parent resource of the issue model.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata",
      "properties": {
        "sentiments": {
          "description": "Overall conversation-level sentiment for each channel of the call.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment"
          },
          "type": "array"
        },
        "annotations": {
          "description": "A list of call annotations that apply to this call.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation"
          }
        },
        "phraseMatchers": {
          "description": "All the matched phrase matchers in the call.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData"
          }
        },
        "issueModelResult": {
          "description": "Overall conversation-level issue modeling result.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult"
        },
        "silence": {
          "description": "Overall conversation-level silence during the call.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence"
        },
        "intents": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1Intent"
          },
          "description": "All the matched intents in the call.",
          "type": "object"
        },
        "entities": {
          "description": "All the entities in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1Entity"
          },
          "type": "object"
        }
      },
      "description": "Call-specific metadata created during analysis.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelMetadata": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelMetadata",
      "description": "Metadata used for export issue model.",
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest",
          "description": "The original export request."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time the operation finished running.",
          "type": "string"
        },
        "createTime": {
          "description": "The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment": {
      "description": "Information about the issue.",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then."
        },
        "score": {
          "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1].",
          "type": "number",
          "format": "double"
        },
        "issue": {
          "description": "Resource name of the assigned issue.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment"
    },
    "GoogleCloudContactcenterinsightsV1DialogflowSource": {
      "description": "A Dialogflow source of conversation data.",
      "id": "GoogleCloudContactcenterinsightsV1DialogflowSource",
      "properties": {
        "audioUri": {
          "type": "string",
          "description": "Cloud Storage URI that points to a file that contains the conversation audio."
        },
        "dialogflowConversation": {
          "readOnly": true,
          "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ImportIssueModelResponse": {
      "properties": {},
      "description": "Response from import issue model",
      "id": "GoogleCloudContactcenterinsightsV1ImportIssueModelResponse",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback",
      "description": "The feedback that the customer has about a certain answer in the conversation.",
      "type": "object",
      "properties": {
        "clicked": {
          "description": "Indicates whether an answer or item was clicked by the human agent.",
          "type": "boolean"
        },
        "displayed": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI."
        },
        "correctnessLevel": {
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ],
          "description": "The correctness level of an answer."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo": {
      "type": "object",
      "properties": {
        "agentId": {
          "description": "A user-specified string representing the agent.",
          "type": "string"
        },
        "dispositionCode": {
          "description": "A user-provided string indicating the outcome of the agent's segment of the call.",
          "type": "string"
        },
        "displayName": {
          "description": "The agent's name.",
          "type": "string"
        },
        "team": {
          "description": "A user-specified string representing the agent's team.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo",
      "description": "Information about an agent involved in the conversation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to create analyses in."
        },
        "analysisPercentage": {
          "type": "number",
          "format": "float",
          "description": "Required. Percentage of selected conversation to analyze, between [0, 100]."
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        },
        "filter": {
          "type": "string",
          "description": "Required. Filter used to select the subset of conversations to analyze."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest",
      "description": "The request to analyze conversations in bulk."
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats": {
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats",
      "description": "Statistics for IngestConversations operation.",
      "properties": {
        "duplicatesSkippedCount": {
          "format": "int32",
          "description": "Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.",
          "readOnly": true,
          "type": "integer"
        },
        "failedIngestCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field."
        },
        "successfulIngestCount": {
          "description": "Output only. The number of new conversations added during this ingest operation.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "processedObjectCount": {
          "readOnly": true,
          "description": "Output only. The number of objects processed during the ingest operation.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscript": {
      "description": "A message representing the transcript of a conversation.",
      "properties": {
        "transcriptSegments": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment"
          },
          "type": "array",
          "description": "A list of sequential transcript segments that comprise the conversation."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscript",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse": {
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse",
      "properties": {},
      "description": "Response for an export insights operation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval": {
      "description": "A single interval in a time series.",
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval",
      "type": "object",
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The start time of this interval."
        },
        "conversationCount": {
          "description": "The number of conversations created in this interval.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1UploadConversationRequest": {
      "properties": {
        "conversationId": {
          "description": "Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`",
          "type": "string"
        },
        "conversation": {
          "description": "Required. The conversation resource to create.",
          "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
        },
        "redactionConfig": {
          "description": "Optional. DLP settings for transcript redaction. Will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the conversation."
        },
        "speechConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1SpeechConfig",
          "description": "Optional. Speech-to-Text configuration. Will default to the config specified in Settings."
        }
      },
      "description": "Request to upload a conversation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1UploadConversationRequest"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AgentCoachingSuggestionSampleResponse": {
      "properties": {
        "responseText": {
          "type": "string",
          "description": "Optional. Sample response for Agent in text."
        }
      },
      "description": "Sample response that the agent can use. This could be based on applicable instructions and ingested data from other systems.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AgentCoachingSuggestionSampleResponse",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchData",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the phrase matcher."
        },
        "phraseMatcher": {
          "description": "The unique identifier (the resource name) of the phrase matcher.",
          "type": "string"
        }
      },
      "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match."
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse": {
      "description": "The response to undeploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest": {
      "properties": {
        "name": {
          "description": "Required. The issue model to undeploy.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest",
      "description": "The request to undeploy an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1InterruptionData": {
      "properties": {},
      "description": "The data for an interruption annotation.",
      "id": "GoogleCloudContactcenterinsightsV1InterruptionData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1Analysis": {
      "description": "The analysis resource.",
      "type": "object",
      "properties": {
        "requestTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which the analysis was requested.",
          "type": "string",
          "readOnly": true
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        },
        "name": {
          "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes.",
          "readOnly": true
        },
        "analysisResult": {
          "description": "Output only. The result of the analysis, which is populated when the analysis finishes.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1Analysis"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource": {
      "properties": {
        "objectUri": {
          "type": "string",
          "description": "Required. Format: `gs:///`"
        }
      },
      "type": "object",
      "description": "Google Cloud Storage Object URI to get the issue model file from.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AgentCoachingInstruction": {
      "type": "object",
      "description": "Agent Coaching instructions that customer can configure.",
      "properties": {
        "systemAction": {
          "type": "string",
          "description": "Optional. The action that system should take. For example, \"call GetOrderTime with order_number={order number provided by the customer}\". If the users don't have plugins or don't want to trigger plugins, the system_action can be empty"
        },
        "condition": {
          "description": "Optional. The condition of the instruction. For example, \"the customer wants to cancel an order\". If the users want the instruction to be triggered unconditionally, the condition can be empty.",
          "type": "string"
        },
        "agentAction": {
          "description": "Optional. The action that human agent should take. For example, \"apologize for the slow shipping\". If the users only want to use agent coaching for intent detection, agent_action can be empty",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "description": "Optional. Additional information attached to this instruction.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Optional. The detailed description of this instruction.",
          "type": "string"
        },
        "displayName": {
          "description": "Optional. Display name for the instruction.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1AgentCoachingInstruction"
    },
    "GoogleCloudContactcenterinsightsV1Entity": {
      "properties": {
        "type": {
          "description": "The entity type.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Person.",
            "Location.",
            "Organization.",
            "Event.",
            "Artwork.",
            "Consumer product.",
            "Other types of entities.",
            "Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.",
            "Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.",
            "Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.",
            "Number. The metadata is the number itself.",
            "Price. The metadata identifies the `value` and `currency`."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSON",
            "LOCATION",
            "ORGANIZATION",
            "EVENT",
            "WORK_OF_ART",
            "CONSUMER_GOOD",
            "OTHER",
            "PHONE_NUMBER",
            "ADDRESS",
            "DATE",
            "NUMBER",
            "PRICE"
          ]
        },
        "sentiment": {
          "description": "The aggregate sentiment expressed for this entity in the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "salience": {
          "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.",
          "type": "number",
          "format": "float"
        },
        "metadata": {
          "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "displayName": {
          "description": "The representative name for the entity.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1Entity",
      "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Settings": {
      "description": "The settings resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings"
        },
        "speechConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1SpeechConfig",
          "description": "Optional. Default Speech-to-Text resources to be used while ingesting audio files. Optional, CCAI Insights will create a default if not provided. This applies to conversations ingested from the UploadConversation and IngestConversations endpoints, including conversations coming from CCAI Platform."
        },
        "languageCode": {
          "type": "string",
          "description": "A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to \"en-US\" if it is neither specified on the segment nor here."
        },
        "pubsubNotificationSettings": {
          "description": "A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * \"all-triggers\": Notify each time any of the supported triggers occurs. * \"create-analysis\": Notify each time an analysis is created. * \"create-conversation\": Notify each time a conversation is created. * \"export-insights-data\": Notify each time an export is complete. * \"ingest-conversations\": Notify each time an IngestConversations LRO completes. * \"update-conversation\": Notify each time a conversation is updated via UpdateConversation. * \"upload-conversation\": Notify when an UploadConversation LRO completes. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "analysisConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig",
          "description": "Default analysis settings."
        },
        "createTime": {
          "description": "Output only. The time at which the settings was created.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "conversationTtl": {
          "description": "The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.",
          "format": "google-duration",
          "type": "string"
        },
        "redactionConfig": {
          "description": "Default DLP redaction resources to be applied while ingesting conversations. This applies to conversations ingested from the UploadConversation and IngestConversations endpoints, including conversations coming from CCAI Platform.",
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig"
        },
        "updateTime": {
          "description": "Output only. The time at which the settings were last updated.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1Settings",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationCallMetadata": {
      "properties": {
        "agentChannel": {
          "format": "int32",
          "type": "integer",
          "description": "The audio channel that contains the agent."
        },
        "customerChannel": {
          "description": "The audio channel that contains the customer.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "Call-specific metadata.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata"
    },
    "GoogleCloudContactcenterinsightsV1ConversationLevelSilence": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationLevelSilence",
      "type": "object",
      "description": "Conversation-level silence data.",
      "properties": {
        "silencePercentage": {
          "type": "number",
          "description": "Percentage of the total conversation spent in silence.",
          "format": "float"
        },
        "silenceDuration": {
          "type": "string",
          "format": "google-duration",
          "description": "Amount of time calculated to be in silence."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest": {
      "description": "The request to undeploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest",
      "properties": {
        "name": {
          "description": "Required. The issue model to undeploy.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData": {
      "properties": {
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "metadata": {
          "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "suggestion": {
          "description": "The content of the suggestion.",
          "type": "string"
        },
        "confidenceScore": {
          "format": "double",
          "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        }
      },
      "type": "object",
      "description": "Agent Assist Smart Compose suggestion data.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest": {
      "description": "The request to delete an issue model.",
      "properties": {
        "name": {
          "description": "Required. The name of the issue model to delete.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        }
      },
      "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata": {
      "properties": {
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the operation finished running."
        },
        "createTime": {
          "type": "string",
          "description": "The time the operation was created.",
          "format": "google-datetime"
        },
        "partialErrors": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Partial errors during bulk delete conversations operation that might cause the operation output to be incomplete."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest",
          "description": "The original request for bulk delete."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata",
      "type": "object",
      "description": "The metadata for a bulk delete conversations operation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo",
      "type": "object",
      "properties": {
        "word": {
          "type": "string",
          "description": "The word itself. Includes punctuation marks that surround the word."
        },
        "confidence": {
          "format": "float",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.",
          "type": "number"
        },
        "endOffset": {
          "type": "string",
          "description": "Time offset of the end of this word relative to the beginning of the total conversation.",
          "format": "google-duration"
        },
        "startOffset": {
          "format": "google-duration",
          "description": "Time offset of the start of this word relative to the beginning of the total conversation.",
          "type": "string"
        }
      },
      "description": "Word-level info for words in a transcript."
    },
    "GoogleCloudContactcenterinsightsV1Issue": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1Issue",
      "description": "The issue resource.",
      "properties": {
        "displayName": {
          "description": "The representative name for the issue.",
          "type": "string"
        },
        "sampleUtterances": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. Resource names of the sample representative utterances that match to this issue.",
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The most recent time that this issue was updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time at which this issue was created."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponseKnowledgeAnswerGenerativeSourceSnippet": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponseKnowledgeAnswerGenerativeSourceSnippet",
      "type": "object",
      "description": "Snippet Source for a Generative Prediction.",
      "properties": {
        "text": {
          "type": "string",
          "description": "text taken from that URI."
        },
        "title": {
          "type": "string",
          "description": "Title of the document."
        },
        "document": {
          "type": "string",
          "description": "Indicates which Knowledge Document this snippet was extracted from. Format: `projects//knowledgeBases//documents/`."
        },
        "uri": {
          "description": "URI the data is sourced from.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata": {
      "description": "Metadata for undeploying an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata",
      "type": "object",
      "properties": {
        "request": {
          "description": "The original request for undeployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest"
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ExportIssueModelMetadata": {
      "properties": {
        "request": {
          "description": "The original export request.",
          "$ref": "GoogleCloudContactcenterinsightsV1ExportIssueModelRequest"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the operation was created."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation finished running."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExportIssueModelMetadata",
      "description": "Metadata used for export issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData",
      "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Proper noun.",
            "Common noun (or noun compound)."
          ],
          "enum": [
            "MENTION_TYPE_UNSPECIFIED",
            "PROPER",
            "COMMON"
          ],
          "description": "The type of the entity mention."
        },
        "entityUniqueId": {
          "type": "string",
          "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to."
        },
        "sentiment": {
          "description": "Sentiment expressed for this mention of the entity.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData": {
      "properties": {
        "intentUniqueId": {
          "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData",
      "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata": {
      "properties": {
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest",
          "description": "The original request for creation."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata",
      "description": "Metadata for creating an issue model."
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest": {
      "properties": {
        "filter": {
          "type": "string",
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to export data from."
        },
        "bigQueryDestination": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination",
          "description": "Specified if sink is a BigQuery table."
        },
        "kmsKey": {
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}",
          "type": "string"
        },
        "writeDisposition": {
          "enumDescriptions": [
            "Write disposition is not specified. Defaults to WRITE_TRUNCATE.",
            "If the table already exists, BigQuery will overwrite the table data and use the schema from the load.",
            "If the table already exists, BigQuery will append data to the table."
          ],
          "description": "Options for what to do if the destination table already exists.",
          "type": "string",
          "enum": [
            "WRITE_DISPOSITION_UNSPECIFIED",
            "WRITE_TRUNCATE",
            "WRITE_APPEND"
          ]
        }
      },
      "description": "The request to export insights.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
    },
    "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponseKnowledgeAnswerGenerativeSourceSnippet": {
      "id": "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponseKnowledgeAnswerGenerativeSourceSnippet",
      "description": "Snippet Source for a Generative Prediction.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the document."
        },
        "uri": {
          "description": "URI the data is sourced from.",
          "type": "string"
        },
        "document": {
          "description": "Indicates which Knowledge Document this snippet was extracted from. Format: `projects//knowledgeBases//documents/`.",
          "type": "string"
        },
        "text": {
          "type": "string",
          "description": "text taken from that URI."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest": {
      "type": "object",
      "properties": {
        "maxDeleteCount": {
          "description": "Maximum number of conversations to delete.",
          "format": "int32",
          "type": "integer"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location}"
        },
        "force": {
          "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses.",
          "type": "boolean"
        },
        "filter": {
          "type": "string",
          "description": "Filter used to select the subset of conversations to delete."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest",
      "description": "The request to delete conversations in bulk."
    },
    "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponseKnowledgeAnswerIntentMatchingSource": {
      "type": "object",
      "description": "Details about source of Intent Matching answer.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "URI the data is sourced from."
        },
        "title": {
          "type": "string",
          "description": "Title of the document."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponseKnowledgeAnswerIntentMatchingSource"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment": {
      "type": "object",
      "properties": {
        "sentimentData": {
          "description": "Data specifying sentiment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
        },
        "channelTag": {
          "format": "int32",
          "description": "The channel of the audio that the data applies to.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment",
      "description": "One channel of conversation-level sentiment data."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats": {
      "properties": {
        "issueStats": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats"
          },
          "type": "object",
          "description": "Statistics on each issue. Key is the issue's resource name."
        },
        "unclassifiedConversationsCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time."
        },
        "analyzedConversationsCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of conversations the issue model has analyzed at this point in time."
        }
      },
      "type": "object",
      "description": "Aggregated statistics about an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats"
    },
    "GoogleCloudContactcenterinsightsV1alpha1Conversation": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1Conversation",
      "properties": {
        "dialogflowIntents": {
          "type": "object",
          "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent"
          },
          "readOnly": true
        },
        "expireTime": {
          "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.",
          "format": "google-datetime",
          "type": "string"
        },
        "runtimeAnnotations": {
          "description": "Output only. The annotations that were generated during the customer and agent interaction.",
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation"
          },
          "type": "array"
        },
        "agentId": {
          "description": "An opaque, user-specified string representing the human agent who handled the conversation.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which the conversation was created."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry."
        },
        "obfuscatedUserId": {
          "description": "Obfuscated user ID which the customer sent to us.",
          "type": "string"
        },
        "callMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata",
          "description": "Call-specific metadata."
        },
        "dataSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource",
          "description": "The source of the audio and transcription for the conversation."
        },
        "ttl": {
          "type": "string",
          "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.",
          "format": "google-duration"
        },
        "turnCount": {
          "description": "Output only. The number of turns in the conversation.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "duration": {
          "type": "string",
          "readOnly": true,
          "format": "google-duration",
          "description": "Output only. The duration of the conversation."
        },
        "transcript": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript",
          "description": "Output only. The conversation transcript."
        },
        "startTime": {
          "type": "string",
          "description": "The time at which the conversation started.",
          "format": "google-datetime"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The most recent time at which the conversation was updated.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}"
        },
        "latestAnalysis": {
          "description": "Output only. The conversation's latest analysis, if one exists.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1Analysis",
          "readOnly": true
        },
        "latestSummary": {
          "description": "Output only. Latest summary of the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData",
          "readOnly": true
        },
        "qualityMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata",
          "description": "Conversation metadata related to quality management."
        },
        "languageCode": {
          "type": "string",
          "description": "A user-specified language code for the conversation."
        },
        "medium": {
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "description": "Immutable. The conversation medium, if unspecified will default to PHONE_CALL.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The conversation resource."
    },
    "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment",
      "type": "object",
      "description": "One channel of conversation-level sentiment data.",
      "properties": {
        "sentimentData": {
          "description": "Data specifying sentiment.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "channelTag": {
          "type": "integer",
          "format": "int32",
          "description": "The channel of the audio that the data applies to."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse": {
      "type": "object",
      "properties": {},
      "description": "The response to deploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse"
    },
    "GoogleCloudContactcenterinsightsV1IssueAssignment": {
      "properties": {
        "score": {
          "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1].",
          "format": "double",
          "type": "number"
        },
        "displayName": {
          "type": "string",
          "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then."
        },
        "issue": {
          "type": "string",
          "description": "Resource name of the assigned issue."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IssueAssignment",
      "description": "Information about the issue."
    },
    "GoogleCloudContactcenterinsightsV1GcsSource": {
      "type": "object",
      "description": "A Cloud Storage source of conversation data.",
      "id": "GoogleCloudContactcenterinsightsV1GcsSource",
      "properties": {
        "transcriptUri": {
          "type": "string",
          "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript."
        },
        "audioUri": {
          "type": "string",
          "description": "Cloud Storage URI that points to a file that contains the conversation audio."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig",
      "description": "Configuration for summarization.",
      "properties": {
        "summarizationModel": {
          "enum": [
            "SUMMARIZATION_MODEL_UNSPECIFIED",
            "BASELINE_MODEL",
            "BASELINE_MODEL_V2_0"
          ],
          "enumDescriptions": [
            "Unspecified summarization model.",
            "The CCAI baseline model.",
            "The CCAI baseline model, V2.0."
          ],
          "type": "string",
          "description": "Default summarization model to be used."
        },
        "conversationProfile": {
          "description": "Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponseKnowledgeAnswerGenerativeSource": {
      "id": "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponseKnowledgeAnswerGenerativeSource",
      "properties": {
        "snippets": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponseKnowledgeAnswerGenerativeSourceSnippet"
          },
          "type": "array",
          "description": "All snippets used for this Generative Prediction, with their source URI and data."
        }
      },
      "type": "object",
      "description": "Details about source of Generative answer."
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata": {
      "description": "Metadata for creating an issue model.",
      "type": "object",
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest",
          "description": "The original request for creation."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1ExportIssueModelResponse": {
      "type": "object",
      "description": "Response from export issue model",
      "id": "GoogleCloudContactcenterinsightsV1ExportIssueModelResponse",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1AnswerFeedback": {
      "id": "GoogleCloudContactcenterinsightsV1AnswerFeedback",
      "properties": {
        "displayed": {
          "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.",
          "type": "boolean"
        },
        "clicked": {
          "description": "Indicates whether an answer or item was clicked by the human agent.",
          "type": "boolean"
        },
        "correctnessLevel": {
          "description": "The correctness level of an answer.",
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ],
          "type": "string",
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ]
        }
      },
      "description": "The feedback that the customer has about a certain answer in the conversation.",
      "type": "object"
    },
    "GoogleLongrunningListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        }
      },
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleCloudContactcenterinsightsV1ConversationQualityMetadata": {
      "type": "object",
      "properties": {
        "customerSatisfactionRating": {
          "description": "An arbitrary integer value indicating the customer's satisfaction rating.",
          "type": "integer",
          "format": "int32"
        },
        "menuPath": {
          "type": "string",
          "description": "An arbitrary string value specifying the menu path the customer took."
        },
        "agentInfo": {
          "description": "Information about agents involved in the call.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo"
          }
        },
        "waitDuration": {
          "description": "The amount of time the customer waited to connect with an agent.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "description": "Conversation metadata related to quality management.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationQualityMetadata"
    },
    "GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionAgentActionSuggestion": {
      "type": "object",
      "description": "Actions suggested for the agent. This is based on applicable instructions.",
      "properties": {
        "agentAction": {
          "type": "string",
          "description": "Optional. The suggested action for the agent."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionAgentActionSuggestion"
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest",
      "description": "The request to create an issue model.",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the issue model."
        },
        "issueModel": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModel",
          "description": "Required. The issue model to create."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1AnnotatorSelector": {
      "description": "Selector of all available annotators and phrase matchers to run.",
      "id": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
      "type": "object",
      "properties": {
        "runSentimentAnnotator": {
          "type": "boolean",
          "description": "Whether to run the sentiment annotator."
        },
        "runIssueModelAnnotator": {
          "type": "boolean",
          "description": "Whether to run the issue model annotator. A model should have already been deployed for this to take effect."
        },
        "runInterruptionAnnotator": {
          "type": "boolean",
          "description": "Whether to run the interruption annotator."
        },
        "runIntentAnnotator": {
          "description": "Whether to run the intent annotator.",
          "type": "boolean"
        },
        "issueModels": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference."
        },
        "runSilenceAnnotator": {
          "description": "Whether to run the silence annotator.",
          "type": "boolean"
        },
        "runSummarizationAnnotator": {
          "type": "boolean",
          "description": "Whether to run the summarization annotator."
        },
        "summarizationConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig",
          "description": "Configuration for the summarization annotator."
        },
        "phraseMatchers": {
          "items": {
            "type": "string"
          },
          "description": "The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
          "type": "array"
        },
        "runPhraseMatcherAnnotator": {
          "description": "Whether to run the active phrase matcher annotator(s).",
          "type": "boolean"
        },
        "runEntityAnnotator": {
          "description": "Whether to run the entity annotator.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig": {
      "description": "Default configuration when creating Analyses in Insights.",
      "properties": {
        "uploadConversationAnalysisPercentage": {
          "format": "double",
          "type": "number",
          "description": "Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100]."
        },
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
        },
        "runtimeIntegrationAnalysisPercentage": {
          "description": "Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].",
          "type": "number",
          "format": "double"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1GeneratorSuggestion": {
      "properties": {
        "agentCoachingSuggestion": {
          "description": "Optional. Suggestion to coach the agent.",
          "$ref": "GoogleCloudContactcenterinsightsV1AgentCoachingSuggestion"
        },
        "freeFormSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1FreeFormSuggestion",
          "description": "Optional. Free form suggestion."
        },
        "summarySuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1SummarySuggestion",
          "description": "Optional. Suggested summary."
        }
      },
      "description": "Suggestion generated using a Generator.",
      "id": "GoogleCloudContactcenterinsightsV1GeneratorSuggestion",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1SilenceData": {
      "description": "The data for a silence annotation.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1SilenceData"
    },
    "GoogleCloudContactcenterinsightsV1FreeFormSuggestion": {
      "description": "Suggestion generated using free form generator.",
      "id": "GoogleCloudContactcenterinsightsV1FreeFormSuggestion",
      "properties": {
        "response": {
          "type": "string",
          "description": "Required. Free form suggestion."
        },
        "labels": {
          "items": {
            "type": "string"
          },
          "description": "Optional. Labels for the generator.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1SentimentData": {
      "properties": {
        "score": {
          "type": "number",
          "description": "The sentiment score between -1.0 (negative) and 1.0 (positive).",
          "format": "float"
        },
        "magnitude": {
          "type": "number",
          "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.",
          "format": "float"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1SentimentData",
      "description": "The data for a sentiment annotation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse": {
      "description": "The response for a bulk analyze conversations operation.",
      "properties": {
        "failedAnalysisCount": {
          "description": "Count of failed analyses.",
          "format": "int32",
          "type": "integer"
        },
        "successfulAnalysisCount": {
          "format": "int32",
          "type": "integer",
          "description": "Count of successful analyses."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponseSuggestedQuery": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponseSuggestedQuery",
      "description": "Represents a suggested query.",
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "description": "Suggested query score.",
          "format": "float"
        },
        "queryText": {
          "type": "string",
          "description": "Suggested query text."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse": {
      "description": "Response from export issue model",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AgentCoachingSuggestionAgentCoachingSuggestionEval": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1AgentCoachingSuggestionAgentCoachingSuggestionEval",
      "properties": {
        "sampleResponseEval": {
          "description": "Optional. Eval for sample response.",
          "type": "string"
        },
        "actionActionSuggestionEval": {
          "type": "string",
          "description": "Optional. Eval for Agent action suggestion."
        }
      },
      "description": "Self evaluations of the suggestion.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation",
      "type": "object",
      "description": "A piece of metadata that applies to a window of a call.",
      "properties": {
        "phraseMatchData": {
          "description": "Data specifying a phrase match.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData"
        },
        "entityMentionData": {
          "description": "Data specifying an entity mention.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData"
        },
        "issueMatchData": {
          "description": "Data specifying an issue match.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData"
        },
        "interruptionData": {
          "description": "Data specifying an interruption.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1InterruptionData"
        },
        "intentMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData",
          "description": "Data specifying an intent match."
        },
        "annotationStartBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        },
        "channelTag": {
          "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.",
          "format": "int32",
          "type": "integer"
        },
        "holdData": {
          "description": "Data specifying a hold.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1HoldData"
        },
        "annotationEndBoundary": {
          "description": "The boundary in the conversation where the annotation ends, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary"
        },
        "silenceData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SilenceData",
          "description": "Data specifying silence."
        },
        "sentimentData": {
          "description": "Data specifying sentiment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1UploadConversationMetadata": {
      "description": "The metadata for an UploadConversation operation.",
      "id": "GoogleCloudContactcenterinsightsV1UploadConversationMetadata",
      "properties": {
        "appliedRedactionConfig": {
          "description": "Output only. The redaction config applied to the uploaded conversation.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig"
        },
        "request": {
          "readOnly": true,
          "description": "Output only. The original request.",
          "$ref": "GoogleCloudContactcenterinsightsV1UploadConversationRequest"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        },
        "analysisOperation": {
          "readOnly": true,
          "description": "Output only. The operation name for a successfully created analysis operation, if any.",
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation finished running."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1AnnotationBoundary": {
      "description": "A point in a conversation that marks the start or the end of an annotation.",
      "id": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
      "properties": {
        "wordIndex": {
          "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.",
          "format": "int32",
          "type": "integer"
        },
        "transcriptIndex": {
          "format": "int32",
          "type": "integer",
          "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ExportIssueModelRequest": {
      "description": "Request to export an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExportIssueModelRequest",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The issue model to export"
        },
        "gcsDestination": {
          "description": "Google Cloud Storage URI to export the Issue Model to.",
          "$ref": "GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1GcsSource": {
      "type": "object",
      "properties": {
        "audioUri": {
          "type": "string",
          "description": "Cloud Storage URI that points to a file that contains the conversation audio."
        },
        "transcriptUri": {
          "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1GcsSource",
      "description": "A Cloud Storage source of conversation data."
    },
    "GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionAgentCoachingSuggestionReasoning": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AgentCoachingSuggestionAgentCoachingSuggestionReasoning",
      "properties": {
        "agentActionTaken": {
          "type": "string",
          "description": "Optional. The actions that the agent has taken already."
        },
        "issueSummary": {
          "type": "string",
          "description": "Optional. Summary of the issue."
        }
      },
      "description": "Reasoning for the suggestion."
    },
    "GoogleProtobufEmpty": {
      "type": "object",
      "id": "GoogleProtobufEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1FaqAnswerData": {
      "id": "GoogleCloudContactcenterinsightsV1FaqAnswerData",
      "description": "Agent Assist frequently-asked-question answer data.",
      "properties": {
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.",
          "type": "string"
        },
        "confidenceScore": {
          "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "float"
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "question": {
          "description": "The corresponding FAQ question.",
          "type": "string"
        },
        "answer": {
          "type": "string",
          "description": "The piece of text from the `source` knowledge base document."
        },
        "metadata": {
          "description": "Map that contains metadata about the FAQ answer and the document that it originates from.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1Entity": {
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.",
          "type": "object"
        },
        "type": {
          "enumDescriptions": [
            "Unspecified.",
            "Person.",
            "Location.",
            "Organization.",
            "Event.",
            "Artwork.",
            "Consumer product.",
            "Other types of entities.",
            "Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.",
            "Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.",
            "Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.",
            "Number. The metadata is the number itself.",
            "Price. The metadata identifies the `value` and `currency`."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSON",
            "LOCATION",
            "ORGANIZATION",
            "EVENT",
            "WORK_OF_ART",
            "CONSUMER_GOOD",
            "OTHER",
            "PHONE_NUMBER",
            "ADDRESS",
            "DATE",
            "NUMBER",
            "PRICE"
          ],
          "description": "The entity type.",
          "type": "string"
        },
        "salience": {
          "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.",
          "type": "number",
          "format": "float"
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the entity."
        },
        "sentiment": {
          "description": "The aggregate sentiment expressed for this entity in the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1Entity",
      "type": "object",
      "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant": {
      "type": "object",
      "properties": {
        "obfuscatedExternalUserId": {
          "description": "Obfuscated user ID from Dialogflow.",
          "type": "string"
        },
        "userId": {
          "description": "A user-specified ID representing the participant.",
          "type": "string"
        },
        "dialogflowParticipant": {
          "type": "string",
          "deprecated": true,
          "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}"
        },
        "dialogflowParticipantName": {
          "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "type": "string"
        },
        "role": {
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "type": "string",
          "description": "The role of the participant.",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ]
        }
      },
      "description": "The call participant speaking for a given utterance.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource": {
      "type": "object",
      "properties": {
        "dialogflowSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource",
          "description": "The source when the conversation comes from Dialogflow."
        },
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1GcsSource",
          "description": "A Cloud Storage location specification for the audio and transcript."
        }
      },
      "description": "The conversation source, which is a combination of transcript and audio.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse": {
      "description": "Response for an export insights operation.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata",
      "properties": {
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest",
          "description": "The original request for deletion."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Metadata for deleting an issue model."
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata",
      "properties": {
        "phraseMatchers": {
          "type": "object",
          "description": "All the matched phrase matchers in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
          }
        },
        "silence": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationLevelSilence",
          "description": "Overall conversation-level silence during the call."
        },
        "sentiments": {
          "description": "Overall conversation-level sentiment for each channel of the call.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment"
          }
        },
        "issueModelResult": {
          "description": "Overall conversation-level issue modeling result.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelResult"
        },
        "intents": {
          "description": "All the matched intents in the call.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Intent"
          }
        },
        "annotations": {
          "type": "array",
          "description": "A list of call annotations that apply to this call.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CallAnnotation"
          }
        },
        "entities": {
          "type": "object",
          "description": "All the entities in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Entity"
          }
        }
      },
      "type": "object",
      "description": "Call-specific metadata created during analysis."
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries": {
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries",
      "type": "object",
      "properties": {
        "intervalDuration": {
          "description": "The duration of each interval.",
          "format": "google-duration",
          "type": "string"
        },
        "points": {
          "type": "array",
          "description": "An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval"
          }
        }
      },
      "description": "A time series representing conversations over time."
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest": {
      "properties": {
        "parent": {
          "description": "Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location}",
          "type": "string"
        },
        "force": {
          "type": "boolean",
          "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses."
        },
        "maxDeleteCount": {
          "format": "int32",
          "description": "Maximum number of conversations to delete.",
          "type": "integer"
        },
        "filter": {
          "description": "Filter used to select the subset of conversations to delete.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The request to delete conversations in bulk.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig": {
      "type": "object",
      "properties": {
        "trainingConversationsCount": {
          "description": "Output only. Number of conversations used in training. Output only.",
          "format": "int64",
          "type": "string",
          "readOnly": true
        },
        "filter": {
          "description": "A filter to reduce the conversations used for training the model to a specific subset.",
          "type": "string"
        },
        "medium": {
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "type": "string",
          "deprecated": true,
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig",
      "description": "Configs for the input data used to create the issue model."
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment": {
      "type": "object",
      "properties": {
        "dialogflowSegmentMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
          "description": "CCAI metadata relating to the current transcript segment."
        },
        "languageCode": {
          "type": "string",
          "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\"."
        },
        "words": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo"
          },
          "description": "A list of the word-specific information for each word in the segment.",
          "type": "array"
        },
        "sentiment": {
          "description": "The sentiment for this transcript segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "text": {
          "type": "string",
          "description": "The text of this segment."
        },
        "messageTime": {
          "description": "The time that the message occurred, if provided.",
          "format": "google-datetime",
          "type": "string"
        },
        "confidence": {
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.",
          "type": "number",
          "format": "float"
        },
        "segmentParticipant": {
          "description": "The participant of this segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationParticipant"
        },
        "channelTag": {
          "format": "int32",
          "type": "integer",
          "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment",
      "description": "A segment of a full transcript."
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig": {
      "description": "Configuration that applies to all conversations.",
      "type": "object",
      "properties": {
        "agentId": {
          "type": "string",
          "description": "Optional. An opaque, user-specified string representing a human agent who handled all conversations in the import. Note that this will be overridden if per-conversation metadata is provided via the `metadata_bucket_uri`."
        },
        "customerChannel": {
          "description": "Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed.",
          "format": "int32",
          "type": "integer"
        },
        "agentChannel": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination": {
      "description": "Google Cloud Storage Object URI to save the issue model to.",
      "properties": {
        "objectUri": {
          "type": "string",
          "description": "Required. Format: `gs:///`"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination": {
      "description": "A BigQuery Table Reference.",
      "properties": {
        "projectId": {
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.",
          "type": "string"
        },
        "table": {
          "type": "string",
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error."
        },
        "dataset": {
          "type": "string",
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo": {
      "description": "Information about an agent involved in the conversation.",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The agent's name."
        },
        "dispositionCode": {
          "type": "string",
          "description": "A user-provided string indicating the outcome of the agent's segment of the call."
        },
        "agentId": {
          "description": "A user-specified string representing the agent.",
          "type": "string"
        },
        "team": {
          "description": "A user-specified string representing the agent's team.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig": {
      "properties": {
        "exactMatchConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExactMatchConfig",
          "description": "The configuration for the exact match rule."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig",
      "type": "object",
      "description": "Configuration information of a phrase match rule."
    },
    "GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata",
      "description": "The metadata for an UploadConversation operation.",
      "type": "object",
      "properties": {
        "request": {
          "description": "Output only. The original request.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        },
        "analysisOperation": {
          "description": "Output only. The operation name for a successfully created analysis operation, if any.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        },
        "appliedRedactionConfig": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig",
          "description": "Output only. The redaction config applied to the uploaded conversation."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1GeneratorSuggestion": {
      "description": "Suggestion generated using a Generator.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1GeneratorSuggestion",
      "type": "object",
      "properties": {
        "agentCoachingSuggestion": {
          "description": "Optional. Suggestion to coach the agent.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AgentCoachingSuggestion"
        },
        "freeFormSuggestion": {
          "description": "Optional. Free form suggestion.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1FreeFormSuggestion"
        },
        "summarySuggestion": {
          "description": "Optional. Suggested summary.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SummarySuggestion"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1AgentCoachingSuggestionAgentActionSuggestion": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1AgentCoachingSuggestionAgentActionSuggestion",
      "type": "object",
      "properties": {
        "agentAction": {
          "type": "string",
          "description": "Optional. The suggested action for the agent."
        }
      },
      "description": "Actions suggested for the agent. This is based on applicable instructions."
    },
    "GoogleCloudContactcenterinsightsV1alpha1GetGeneratorSuggestionResponse": {
      "description": "Represents response from generators.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1GetGeneratorSuggestionResponse",
      "properties": {
        "generatorSuggestion": {
          "description": "The suggestion generated from the Generator.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1GeneratorSuggestion"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1SmartReplyData": {
      "description": "Agent Assist Smart Reply data.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1SmartReplyData",
      "properties": {
        "reply": {
          "type": "string",
          "description": "The content of the reply."
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "metadata": {
          "type": "object",
          "description": "Map that contains metadata about the Smart Reply and the document from which it originates.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponseKnowledgeAnswerFaqSource": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string",
          "description": "The corresponding FAQ question."
        },
        "document": {
          "type": "string",
          "description": "Indicates which Knowledge Document this answer was extracted from. Format: `projects//knowledgeBases//documents/`."
        }
      },
      "description": "Details about source of FAQ answer.",
      "id": "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponseKnowledgeAnswerFaqSource"
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata": {
      "properties": {
        "request": {
          "description": "The original request for deletion.",
          "$ref": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        }
      },
      "description": "Metadata for deleting an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData": {
      "description": "Conversation summarization suggestion data.",
      "properties": {
        "conversationModel": {
          "type": "string",
          "description": "The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}"
        },
        "textSections": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.",
          "type": "object"
        },
        "answerRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map that contains metadata about the summarization and the document from which it originates."
        },
        "confidence": {
          "description": "The confidence score of the summarization.",
          "format": "float",
          "type": "number"
        },
        "text": {
          "description": "The summarization content that is concatenated into one string.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IntentMatchData": {
      "id": "GoogleCloudContactcenterinsightsV1IntentMatchData",
      "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.",
      "properties": {
        "intentUniqueId": {
          "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse",
      "description": "Response of querying an issue model's statistics.",
      "type": "object",
      "properties": {
        "currentStats": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
          "description": "The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest": {
      "properties": {
        "name": {
          "description": "Required. The issue model to deploy.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest",
      "description": "The request to deploy an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponseSuggestedQuery": {
      "id": "GoogleCloudContactcenterinsightsV1GetKnowledgeAssistResponseSuggestedQuery",
      "type": "object",
      "description": "Represents a suggested query.",
      "properties": {
        "score": {
          "format": "float",
          "type": "number",
          "description": "Suggested query score."
        },
        "queryText": {
          "type": "string",
          "description": "Suggested query text."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse": {
      "id": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse",
      "properties": {
        "phraseMatchers": {
          "description": "The phrase matchers that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "description": "The response of listing phrase matchers.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence": {
      "properties": {
        "silenceDuration": {
          "type": "string",
          "description": "Amount of time calculated to be in silence.",
          "format": "google-duration"
        },
        "silencePercentage": {
          "format": "float",
          "description": "Percentage of the total conversation spent in silence.",
          "type": "number"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence",
      "description": "Conversation-level silence data.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1GetGeneratorSuggestionResponse": {
      "id": "GoogleCloudContactcenterinsightsV1GetGeneratorSuggestionResponse",
      "properties": {
        "generatorSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1GeneratorSuggestion",
          "description": "The suggestion generated from the Generator."
        }
      },
      "type": "object",
      "description": "Represents response from generators."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript": {
      "description": "A message representing the transcript of a conversation.",
      "type": "object",
      "properties": {
        "transcriptSegments": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment"
          },
          "type": "array",
          "description": "A list of sequential transcript segments that comprise the conversation."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "request": {
          "description": "The original request for export.",
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
        },
        "partialErrors": {
          "description": "Partial errors during export operation that might cause the operation output to be incomplete.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      },
      "description": "Metadata for an export insights operation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AgentCoachingSuggestion": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AgentCoachingSuggestion",
      "description": "Suggestion for coaching agents.",
      "properties": {
        "agentActionSuggestions": {
          "description": "Optional. Suggested actions for the agent to take.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1AgentCoachingSuggestionAgentActionSuggestion"
          }
        },
        "suggestionEval": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AgentCoachingSuggestionAgentCoachingSuggestionEval",
          "description": "Self evaluation of the suggestion."
        },
        "suggestionReasoning": {
          "description": "Reasoning for the suggestion.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AgentCoachingSuggestionAgentCoachingSuggestionReasoning"
        },
        "applicableInstructions": {
          "description": "Optional. Instructions applicable based on the current context.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1AgentCoachingInstruction"
          }
        },
        "sampleResponses": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1AgentCoachingSuggestionSampleResponse"
          },
          "description": "Optional. Sample response for the Agent.",
          "type": "array"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData": {
      "description": "Conversation summarization suggestion data.",
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "The summarization content that is concatenated into one string."
        },
        "conversationModel": {
          "type": "string",
          "description": "The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}"
        },
        "answerRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "textSections": {
          "description": "The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "type": "object",
          "description": "A map that contains metadata about the summarization and the document from which it originates.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "confidence": {
          "type": "number",
          "description": "The confidence score of the summarization.",
          "format": "float"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData"
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata": {
      "description": "The metadata for a bulk analyze conversations operation.",
      "properties": {
        "failedAnalysesCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of requested analyses that have failed so far."
        },
        "partialErrors": {
          "type": "array",
          "description": "Output only. Partial errors during bulk analyze operation that might cause the operation output to be incomplete.",
          "readOnly": true,
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation was created."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest",
          "description": "The original request for bulk analyze."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time the operation finished running.",
          "type": "string"
        },
        "totalRequestedAnalysesCount": {
          "format": "int32",
          "type": "integer",
          "description": "Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request."
        },
        "completedAnalysesCount": {
          "description": "The number of requested analyses that have completed successfully so far.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig": {
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig",
      "properties": {
        "medium": {
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "type": "string",
          "description": "Required. The medium transcript objects represent."
        }
      },
      "description": "Configuration for processing transcript objects.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ListIssuesResponse": {
      "type": "object",
      "description": "The response of listing issues.",
      "properties": {
        "issues": {
          "type": "array",
          "description": "The issues that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Issue"
          }
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ListIssuesResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1SummarySuggestion": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1SummarySuggestion",
      "type": "object",
      "description": "Suggested summary of the conversation.",
      "properties": {
        "summarySections": {
          "description": "Required. All the parts of generated summary.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1SummarySuggestionSummarySection"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1SummarySuggestionSummarySection": {
      "properties": {
        "section": {
          "type": "string",
          "description": "Required. Name of the section."
        },
        "summary": {
          "type": "string",
          "description": "Required. Summary text for the section."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1SummarySuggestionSummarySection",
      "description": "A component of the generated summary.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModel": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModel",
      "properties": {
        "issueCount": {
          "readOnly": true,
          "format": "int64",
          "description": "Output only. Number of issues in this issue model.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The most recent time at which the issue model was updated."
        },
        "trainingStats": {
          "description": "Output only. Immutable. The issue model's label statistics on its training data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats",
          "readOnly": true
        },
        "languageCode": {
          "description": "Language of the model.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time at which this issue model was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "inputDataConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig",
          "description": "Configs for the input data that used to create the issue model."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
        },
        "modelType": {
          "type": "string",
          "description": "Type of the model.",
          "enumDescriptions": [
            "Unspecified model type.",
            "Type V1.",
            "Type V2."
          ],
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "TYPE_V1",
            "TYPE_V2"
          ]
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ],
          "type": "string",
          "description": "Output only. State of the model."
        },
        "displayName": {
          "description": "The representative name for the issue model.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The issue model resource."
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata": {
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation was created."
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. Partial errors during bulk analyze operation that might cause the operation output to be incomplete."
        },
        "totalRequestedAnalysesCount": {
          "type": "integer",
          "description": "Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.",
          "format": "int32"
        },
        "failedAnalysesCount": {
          "type": "integer",
          "description": "The number of requested analyses that have failed so far.",
          "format": "int32"
        },
        "completedAnalysesCount": {
          "format": "int32",
          "type": "integer",
          "description": "The number of requested analyses that have completed successfully so far."
        },
        "endTime": {
          "description": "The time the operation finished running.",
          "format": "google-datetime",
          "type": "string"
        },
        "request": {
          "description": "The original request for bulk analyze.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest"
        }
      },
      "description": "The metadata for a bulk analyze conversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1EntityMentionData": {
      "properties": {
        "sentiment": {
          "description": "Sentiment expressed for this mention of the entity.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "entityUniqueId": {
          "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.",
          "type": "string"
        },
        "type": {
          "description": "The type of the entity mention.",
          "enum": [
            "MENTION_TYPE_UNSPECIFIED",
            "PROPER",
            "COMMON"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Proper noun.",
            "Common noun (or noun compound)."
          ],
          "type": "string"
        }
      },
      "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1EntityMentionData"
    },
    "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData": {
      "type": "object",
      "properties": {
        "suggestion": {
          "type": "string",
          "description": "The content of the suggestion."
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "metadata": {
          "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "confidenceScore": {
          "format": "double",
          "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData",
      "description": "Agent Assist Smart Compose suggestion data."
    },
    "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponse": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponse",
      "description": "Response for Knowledge Assist. Contains suggested query and optionally includes an answer for the query.",
      "properties": {
        "suggestedQueryAnswer": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponseKnowledgeAnswer",
          "description": "The answer generated for the suggested query. Whether or not an answer is generated depends on how confident we are about the generated query."
        },
        "suggestedQuery": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1GetKnowledgeAssistResponseSuggestedQuery",
          "description": "The query suggested based on the context. Suggestion is made only if it is different from the previous suggestion."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData": {
      "properties": {
        "confidence": {
          "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float",
          "type": "number"
        },
        "dialogflowIntentId": {
          "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData",
      "description": "Dialogflow interaction data.",
      "type": "object"
    }
  },
  "version": "v1",
  "batchPath": "batch",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  }
}

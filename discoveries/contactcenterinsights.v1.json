{
  "version": "v1",
  "name": "contactcenterinsights",
  "title": "Contact Center AI Insights API",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "parameters": {
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "type": "string",
      "default": "json"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    }
  },
  "discoveryVersion": "v1",
  "batchPath": "batch",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "ownerName": "Google",
  "description": "",
  "basePath": "",
  "protocol": "rest",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "insightsdata": {
              "methods": {
                "export": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent resource to export data from.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "path": "v1/{+parent}/insightsdata:export",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export",
                  "description": "Export insights data to a destination defined in the request body.",
                  "id": "contactcenterinsights.projects.locations.insightsdata.export",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "views": {
              "methods": {
                "create": {
                  "id": "contactcenterinsights.projects.locations.views.create",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent resource of the view. Required. The location to create a view for. Format: `projects//locations/` or `projects//locations/`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "description": "Creates a view.",
                  "path": "v1/{+parent}/views",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "delete": {
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the view to delete.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "httpMethod": "DELETE",
                  "id": "contactcenterinsights.projects.locations.views.delete",
                  "description": "Deletes a view.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}"
                },
                "get": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "description": "Gets a view.",
                  "path": "v1/{+name}",
                  "id": "contactcenterinsights.projects.locations.views.get",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the view to get."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}"
                },
                "list": {
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/views",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListViewsResponse"
                  },
                  "id": "contactcenterinsights.projects.locations.views.list",
                  "description": "Lists views.",
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of views to return in the response. If this value is zero, the service will select a default size. A call may return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent resource of the views."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The value returned by the last `ListViewsResponse`; indicates that this is a continuation of a prior `ListViews` call and the system should return the next page of data."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views"
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "id": "contactcenterinsights.projects.locations.views.patch",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "description": "Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query",
                      "description": "The list of fields to be updated."
                    }
                  },
                  "description": "Updates a view.",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  }
                }
              }
            },
            "issueModels": {
              "methods": {
                "patch": {
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates an issue model.",
                  "path": "v1/{+name}",
                  "id": "contactcenterinsights.projects.locations.issueModels.patch",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "The list of fields to be updated."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  }
                },
                "undeploy": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:undeploy",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "location": "path",
                      "description": "Required. The issue model to undeploy.",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy",
                  "description": "Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.undeploy",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
                  }
                },
                "deploy": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "location": "path",
                      "description": "Required. The issue model to deploy."
                    }
                  },
                  "path": "v1/{+name}:deploy",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.deploy",
                  "description": "Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "calculateIssueModelStats": {
                  "description": "Gets an issue model's statistics.",
                  "parameters": {
                    "issueModel": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The resource name of the issue model to query against.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse"
                  },
                  "parameterOrder": [
                    "issueModel"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats",
                  "id": "contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats",
                  "httpMethod": "GET",
                  "path": "v1/{+issueModel}:calculateIssueModelStats",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels",
                  "path": "v1/{+parent}/issueModels",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the issue model.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "description": "Creates an issue model.",
                  "id": "contactcenterinsights.projects.locations.issueModels.create",
                  "httpMethod": "POST"
                },
                "list": {
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels",
                  "id": "contactcenterinsights.projects.locations.issueModels.list",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the issue model.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Lists issue models.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/issueModels"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "description": "Gets an issue model.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the issue model to get."
                    }
                  }
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The name of the issue model to delete.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                    }
                  },
                  "description": "Deletes an issue model.",
                  "id": "contactcenterinsights.projects.locations.issueModels.delete",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}"
                }
              },
              "resources": {
                "issues": {
                  "methods": {
                    "patch": {
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "httpMethod": "PATCH",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.patch",
                      "path": "v1/{+name}",
                      "parameters": {
                        "updateMask": {
                          "type": "string",
                          "format": "google-fieldmask",
                          "location": "query",
                          "description": "The list of fields to be updated."
                        },
                        "name": {
                          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Updates an issue.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      }
                    },
                    "get": {
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets an issue.",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.get",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. The name of the issue to get.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "list": {
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. The parent resource of the issue.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListIssuesResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues",
                      "path": "v1/{+parent}/issues",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.list",
                      "httpMethod": "GET",
                      "description": "Lists issues."
                    },
                    "delete": {
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "path": "v1/{+name}",
                      "description": "Deletes an issue.",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.delete",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. The name of the issue to delete.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$"
                        }
                      }
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "path": "v1/{+name}:cancel",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "id": "contactcenterinsights.projects.locations.operations.cancel"
                },
                "get": {
                  "id": "contactcenterinsights.projects.locations.operations.get",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "httpMethod": "GET",
                  "path": "v1/{+name}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The standard list page size.",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenterinsights.projects.locations.operations.list"
                }
              }
            },
            "phraseMatchers": {
              "methods": {
                "patch": {
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The list of fields to be updated.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a phrase matcher.",
                  "httpMethod": "PATCH",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the phrase matcher to get."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "description": "Gets a phrase matcher."
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.delete",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the phrase matcher to delete."
                    }
                  },
                  "httpMethod": "DELETE",
                  "description": "Deletes a phrase matcher.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "httpMethod": "POST",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.create",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "path": "v1/{+parent}/phraseMatchers",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent resource of the phrase matcher. Required. The location to create a phrase matcher for. Format: `projects//locations/` or `projects//locations/`",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a phrase matcher.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers"
                },
                "list": {
                  "path": "v1/{+parent}/phraseMatchers",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists phrase matchers.",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the phrase matcher.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The value returned by the last `ListPhraseMatchersResponse`. This value indicates that this is a continuation of a prior `ListPhraseMatchers` call and that the system should return the next page of data."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of phrase matchers to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                      "type": "integer",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "A filter to reduce results to a specific subset. Useful for querying phrase matchers with specific properties."
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "conversations": {
              "resources": {
                "analyses": {
                  "methods": {
                    "delete": {
                      "httpMethod": "DELETE",
                      "description": "Deletes an analysis.",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the analysis to delete.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$"
                        }
                      },
                      "path": "v1/{+name}",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}"
                    },
                    "get": {
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. The name of the analysis to get."
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}",
                      "path": "v1/{+name}",
                      "description": "Gets an analysis.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      }
                    },
                    "create": {
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent resource of the analysis.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "description": "Creates an analysis. The long running operation is done when the analysis has completed.",
                      "httpMethod": "POST",
                      "path": "v1/{+parent}/analyses",
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.create",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "list": {
                      "path": "v1/{+parent}/analyses",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "The value returned by the last `ListAnalysesResponse`; indicates that this is a continuation of a prior `ListAnalyses` call and the system should return the next page of data.",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The parent resource of the analyses.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$"
                        },
                        "filter": {
                          "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "description": "The maximum number of analyses to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                          "format": "int32"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse"
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.list",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "description": "Lists analyses.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "id": "contactcenterinsights.projects.locations.conversations.patch",
                  "httpMethod": "PATCH",
                  "description": "Updates a conversation.",
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to be updated.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "bulkAnalyze": {
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent resource to create analyses in."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze",
                  "path": "v1/{+parent}/conversations:bulkAnalyze",
                  "id": "contactcenterinsights.projects.locations.conversations.bulkAnalyze",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Analyzes multiple conversations in a single request."
                },
                "upload": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1UploadConversationRequest"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The parent resource of the conversation.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:upload",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/conversations:upload",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.upload",
                  "description": "Create a longrunning conversation upload operation. This method differs from CreateConversation by allowing audio transcription and optional DLP redaction."
                },
                "list": {
                  "id": "contactcenterinsights.projects.locations.conversations.list",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent resource of the conversation."
                    },
                    "view": {
                      "location": "query",
                      "enumDescriptions": [
                        "The conversation view is not specified. * Defaults to `FULL` in `GetConversationRequest`. * Defaults to `BASIC` in `ListConversationsRequest`.",
                        "Populates all fields in the conversation.",
                        "Populates all fields in the conversation except the transcript."
                      ],
                      "type": "string",
                      "description": "The level of details of the conversation. Default is `BASIC`.",
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "FULL",
                        "BASIC"
                      ]
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListConversationsResponse`. This value indicates that this is a continuation of a prior `ListConversations` call and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of conversations to return in the response. A valid page size ranges from 0 to 1,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "filter": {
                      "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists conversations.",
                  "path": "v1/{+parent}/conversations",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListConversationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "ingest": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Imports conversations and processes them according to the user's configuration.",
                  "path": "v1/{+parent}/conversations:ingest",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent resource for new conversations.",
                      "required": true
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.conversations.ingest",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest"
                },
                "get": {
                  "description": "Gets a conversation.",
                  "httpMethod": "GET",
                  "id": "contactcenterinsights.projects.locations.conversations.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the conversation to get.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "view": {
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "FULL",
                        "BASIC"
                      ],
                      "description": "The level of details of the conversation. Default is `FULL`.",
                      "location": "query",
                      "enumDescriptions": [
                        "The conversation view is not specified. * Defaults to `FULL` in `GetConversationRequest`. * Defaults to `BASIC` in `ListConversationsRequest`.",
                        "Populates all fields in the conversation.",
                        "Populates all fields in the conversation except the transcript."
                      ],
                      "type": "string"
                    }
                  }
                },
                "create": {
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a conversation.",
                  "path": "v1/{+parent}/conversations",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the conversation.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "conversationId": {
                      "type": "string",
                      "location": "query",
                      "description": "A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "id": "contactcenterinsights.projects.locations.conversations.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations"
                },
                "calculateStats": {
                  "parameterOrder": [
                    "location"
                  ],
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "A filter to reduce results to a specific subset. This field is useful for getting statistics about conversations with specific properties."
                    },
                    "location": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The location of the conversations.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse"
                  },
                  "id": "contactcenterinsights.projects.locations.conversations.calculateStats",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+location}/conversations:calculateStats",
                  "description": "Gets conversation statistics."
                },
                "delete": {
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The name of the conversation to delete.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$"
                    },
                    "force": {
                      "location": "query",
                      "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses.",
                      "type": "boolean"
                    }
                  },
                  "description": "Deletes a conversation.",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "id": "contactcenterinsights.projects.locations.conversations.delete"
                }
              }
            }
          },
          "methods": {
            "updateSettings": {
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "updateMask": {
                  "location": "query",
                  "type": "string",
                  "description": "Required. The list of fields to be updated.",
                  "format": "google-fieldmask"
                },
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "type": "string",
                  "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings"
                }
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "path": "v1/{+name}",
              "id": "contactcenterinsights.projects.locations.updateSettings",
              "description": "Updates project-level settings."
            },
            "getSettings": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the settings resource to get.",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$"
                }
              },
              "description": "Gets project-level settings.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "id": "contactcenterinsights.projects.locations.getSettings",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings"
            }
          }
        }
      }
    }
  },
  "schemas": {
    "GoogleCloudContactcenterinsightsV1RuntimeAnnotation": {
      "description": "An annotation that was generated during the customer and agent interaction.",
      "id": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation",
      "type": "object",
      "properties": {
        "endBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        },
        "smartReply": {
          "description": "Agent Assist Smart Reply data.",
          "$ref": "GoogleCloudContactcenterinsightsV1SmartReplyData"
        },
        "conversationSummarizationSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData",
          "description": "Conversation summarization suggestion data."
        },
        "startBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        },
        "faqAnswer": {
          "description": "Agent Assist FAQ answer data.",
          "$ref": "GoogleCloudContactcenterinsightsV1FaqAnswerData"
        },
        "answerFeedback": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnswerFeedback",
          "description": "The feedback that the customer has about the answer in `data`."
        },
        "dialogflowInteraction": {
          "description": "Dialogflow interaction data.",
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time at which this annotation was created.",
          "type": "string"
        },
        "articleSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData",
          "description": "Agent Assist Article Suggestion data."
        },
        "annotationId": {
          "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}",
          "type": "string"
        },
        "smartComposeSuggestion": {
          "description": "Agent Assist Smart Compose suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata": {
      "description": "Metadata for deleting an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata",
      "type": "object",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest",
          "description": "The original request for deletion."
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1View": {
      "type": "object",
      "properties": {
        "value": {
          "description": "String with specific view properties, must be non-empty.",
          "type": "string"
        },
        "displayName": {
          "description": "The human-readable display name of the view.",
          "type": "string"
        },
        "name": {
          "description": "Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The most recent time at which the view was updated."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time at which this view was created.",
          "format": "google-datetime",
          "readOnly": true
        }
      },
      "description": "The View resource.",
      "id": "GoogleCloudContactcenterinsightsV1View"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest": {
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest",
      "properties": {
        "bigQueryDestination": {
          "description": "Specified if sink is a BigQuery table.",
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination"
        },
        "parent": {
          "description": "Required. The parent resource to export data from.",
          "type": "string"
        },
        "writeDisposition": {
          "description": "Options for what to do if the destination table already exists.",
          "enum": [
            "WRITE_DISPOSITION_UNSPECIFIED",
            "WRITE_TRUNCATE",
            "WRITE_APPEND"
          ],
          "type": "string",
          "enumDescriptions": [
            "Write disposition is not specified. Defaults to WRITE_TRUNCATE.",
            "If the table already exists, BigQuery will overwrite the table data and use the schema from the load.",
            "If the table already exists, BigQuery will append data to the table."
          ]
        },
        "kmsKey": {
          "type": "string",
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}"
        },
        "filter": {
          "type": "string",
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties."
        }
      },
      "type": "object",
      "description": "The request to export insights."
    },
    "GoogleCloudContactcenterinsightsV1HoldData": {
      "properties": {},
      "description": "The data for a hold annotation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1HoldData"
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest",
          "description": "The original request for deployment."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Metadata for deploying an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1Entity": {
      "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1Entity",
      "properties": {
        "salience": {
          "format": "float",
          "type": "number",
          "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient."
        },
        "metadata": {
          "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "The aggregate sentiment expressed for this entity in the conversation."
        },
        "displayName": {
          "description": "The representative name for the entity.",
          "type": "string"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSON",
            "LOCATION",
            "ORGANIZATION",
            "EVENT",
            "WORK_OF_ART",
            "CONSUMER_GOOD",
            "OTHER",
            "PHONE_NUMBER",
            "ADDRESS",
            "DATE",
            "NUMBER",
            "PRICE"
          ],
          "description": "The entity type.",
          "enumDescriptions": [
            "Unspecified.",
            "Person.",
            "Location.",
            "Organization.",
            "Event.",
            "Artwork.",
            "Consumer product.",
            "Other types of entities.",
            "Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.",
            "Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.",
            "Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.",
            "Number. The metadata is the number itself.",
            "Price. The metadata identifies the `value` and `currency`."
          ],
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData": {
      "properties": {
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "confidenceScore": {
          "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "double",
          "type": "number"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the Smart Reply and the document from which it originates.",
          "type": "object"
        },
        "reply": {
          "type": "string",
          "description": "The content of the reply."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData",
      "type": "object",
      "description": "Agent Assist Smart Reply data."
    },
    "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig": {
      "id": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig",
      "description": "Configs for the input data used to create the issue model.",
      "properties": {
        "trainingConversationsCount": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Number of conversations used in training. Output only.",
          "format": "int64"
        },
        "medium": {
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "deprecated": true,
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.",
          "type": "string",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ]
        },
        "filter": {
          "description": "A filter to reduce the conversations used for training the model to a specific subset.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1GcsSource": {
      "properties": {
        "audioUri": {
          "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
          "type": "string"
        },
        "transcriptUri": {
          "type": "string",
          "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript."
        }
      },
      "description": "A Cloud Storage source of conversation data.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1GcsSource",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData": {
      "type": "object",
      "properties": {
        "dialogflowIntentId": {
          "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}",
          "type": "string"
        },
        "confidence": {
          "format": "float",
          "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        }
      },
      "description": "Dialogflow interaction data.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData"
    },
    "GoogleCloudContactcenterinsightsV1SilenceData": {
      "properties": {},
      "description": "The data for a silence annotation.",
      "id": "GoogleCloudContactcenterinsightsV1SilenceData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse": {
      "properties": {
        "failedAnalysisCount": {
          "description": "Count of failed analyses.",
          "type": "integer",
          "format": "int32"
        },
        "successfulAnalysisCount": {
          "description": "Count of successful analyses.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse",
      "description": "The response for a bulk analyze conversations operation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationCallMetadata": {
      "properties": {
        "agentChannel": {
          "type": "integer",
          "format": "int32",
          "description": "The audio channel that contains the agent."
        },
        "customerChannel": {
          "format": "int32",
          "type": "integer",
          "description": "The audio channel that contains the customer."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata",
      "type": "object",
      "description": "Call-specific metadata."
    },
    "GoogleCloudContactcenterinsightsV1Conversation": {
      "id": "GoogleCloudContactcenterinsightsV1Conversation",
      "type": "object",
      "properties": {
        "dataSource": {
          "description": "The source of the audio and transcription for the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationDataSource"
        },
        "ttl": {
          "type": "string",
          "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.",
          "format": "google-duration"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}"
        },
        "turnCount": {
          "format": "int32",
          "description": "Output only. The number of turns in the conversation.",
          "type": "integer",
          "readOnly": true
        },
        "dialogflowIntents": {
          "type": "object",
          "readOnly": true,
          "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1DialogflowIntent"
          }
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which the conversation was created."
        },
        "transcript": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscript",
          "description": "Output only. The conversation transcript."
        },
        "obfuscatedUserId": {
          "type": "string",
          "description": "Obfuscated user ID which the customer sent to us."
        },
        "runtimeAnnotations": {
          "readOnly": true,
          "description": "Output only. The annotations that were generated during the customer and agent interaction.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation"
          }
        },
        "startTime": {
          "description": "The time at which the conversation started.",
          "format": "google-datetime",
          "type": "string"
        },
        "medium": {
          "type": "string",
          "description": "Immutable. The conversation medium, if unspecified will default to PHONE_CALL.",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ]
        },
        "languageCode": {
          "type": "string",
          "description": "A user-specified language code for the conversation."
        },
        "agentId": {
          "description": "An opaque, user-specified string representing the human agent who handled the conversation.",
          "type": "string"
        },
        "duration": {
          "format": "google-duration",
          "description": "Output only. The duration of the conversation.",
          "type": "string",
          "readOnly": true
        },
        "expireTime": {
          "type": "string",
          "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.",
          "format": "google-datetime"
        },
        "labels": {
          "type": "object",
          "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "latestSummary": {
          "description": "Output only. Latest summary of the conversation.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData"
        },
        "latestAnalysis": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1Analysis",
          "description": "Output only. The conversation's latest analysis, if one exists."
        },
        "callMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata",
          "description": "Call-specific metadata."
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the conversation was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      },
      "description": "The conversation resource."
    },
    "GoogleCloudContactcenterinsightsV1IssueModelResult": {
      "id": "GoogleCloudContactcenterinsightsV1IssueModelResult",
      "description": "Issue Modeling result on a conversation.",
      "properties": {
        "issues": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment"
          },
          "description": "All the matched issues.",
          "type": "array"
        },
        "issueModel": {
          "type": "string",
          "description": "Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1Conversation": {
      "description": "The conversation resource.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1Conversation",
      "properties": {
        "dataSource": {
          "description": "The source of the audio and transcription for the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource"
        },
        "latestAnalysis": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1Analysis",
          "description": "Output only. The conversation's latest analysis, if one exists.",
          "readOnly": true
        },
        "latestSummary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData",
          "readOnly": true,
          "description": "Output only. Latest summary of the conversation."
        },
        "agentId": {
          "type": "string",
          "description": "An opaque, user-specified string representing the human agent who handled the conversation."
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time at which the conversation was created.",
          "format": "google-datetime"
        },
        "languageCode": {
          "description": "A user-specified language code for the conversation.",
          "type": "string"
        },
        "startTime": {
          "description": "The time at which the conversation started.",
          "format": "google-datetime",
          "type": "string"
        },
        "medium": {
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "type": "string",
          "description": "Immutable. The conversation medium, if unspecified will default to PHONE_CALL.",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ]
        },
        "dialogflowIntents": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent"
          },
          "readOnly": true,
          "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}"
        },
        "transcript": {
          "readOnly": true,
          "description": "Output only. The conversation transcript.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript"
        },
        "ttl": {
          "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.",
          "format": "google-duration",
          "type": "string"
        },
        "expireTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted."
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the conversation was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "turnCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Output only. The number of turns in the conversation."
        },
        "labels": {
          "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "callMetadata": {
          "description": "Call-specific metadata.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata"
        },
        "duration": {
          "format": "google-duration",
          "readOnly": true,
          "description": "Output only. The duration of the conversation.",
          "type": "string"
        },
        "name": {
          "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "type": "string"
        },
        "runtimeAnnotations": {
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation"
          },
          "type": "array",
          "description": "Output only. The annotations that were generated during the customer and agent interaction."
        },
        "obfuscatedUserId": {
          "description": "Obfuscated user ID which the customer sent to us.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ListViewsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1ListViewsResponse",
      "type": "object",
      "description": "The response of listing views.",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "views": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1View"
          },
          "description": "The views that match the request.",
          "type": "array"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats": {
      "type": "object",
      "description": "Statistics for IngestConversations operation.",
      "properties": {
        "processedObjectCount": {
          "readOnly": true,
          "format": "int32",
          "type": "integer",
          "description": "Output only. The number of objects processed during the ingest operation."
        },
        "successfulIngestCount": {
          "readOnly": true,
          "description": "Output only. The number of new conversations added during this ingest operation.",
          "format": "int32",
          "type": "integer"
        },
        "duplicatesSkippedCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested."
        },
        "failedIngestCount": {
          "format": "int32",
          "description": "Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.",
          "type": "integer",
          "readOnly": true
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats"
    },
    "GoogleCloudContactcenterinsightsV1UploadConversationRequest": {
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the conversation."
        },
        "conversationId": {
          "description": "Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`",
          "type": "string"
        },
        "redactionConfig": {
          "description": "Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig"
        },
        "conversation": {
          "description": "Required. The conversation resource to create.",
          "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1UploadConversationRequest",
      "type": "object",
      "description": "Request to upload a conversation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData",
      "properties": {
        "intentUniqueId": {
          "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences."
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequest": {
      "properties": {
        "transcriptObjectConfig": {
          "description": "Configuration for when `source` contains conversation transcripts.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig"
        },
        "conversationConfig": {
          "description": "Configuration that applies to all conversations.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig"
        },
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource",
          "description": "A cloud storage bucket source."
        },
        "parent": {
          "description": "Required. The parent resource for new conversations.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The request to ingest conversations.",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest"
    },
    "GoogleCloudContactcenterinsightsV1SmartReplyData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1SmartReplyData",
      "description": "Agent Assist Smart Reply data.",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the Smart Reply and the document from which it originates.",
          "type": "object"
        },
        "reply": {
          "type": "string",
          "description": "The content of the reply."
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata",
      "type": "object",
      "description": "Metadata for creating an issue model.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        },
        "request": {
          "description": "The original request for creation.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse": {
      "type": "object",
      "description": "The response of listing phrase matchers.",
      "id": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "phraseMatchers": {
          "type": "array",
          "description": "The phrase matchers that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
          }
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IntentMatchData": {
      "id": "GoogleCloudContactcenterinsightsV1IntentMatchData",
      "properties": {
        "intentUniqueId": {
          "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information.",
          "type": "string"
        }
      },
      "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchData": {
      "properties": {
        "phraseMatcher": {
          "type": "string",
          "description": "The unique identifier (the resource name) of the phrase matcher."
        },
        "displayName": {
          "description": "The human-readable name of the phrase matcher.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchData",
      "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest": {
      "description": "The request to create an issue model.",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the issue model."
        },
        "issueModel": {
          "description": "Required. The issue model to create.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult": {
      "properties": {
        "endTime": {
          "description": "The time at which the analysis ended.",
          "type": "string",
          "format": "google-datetime"
        },
        "callAnalysisMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata",
          "description": "Call-specific metadata created by the analysis."
        }
      },
      "description": "The result of an analysis.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult"
    },
    "GoogleCloudContactcenterinsightsV1DialogflowSource": {
      "id": "GoogleCloudContactcenterinsightsV1DialogflowSource",
      "properties": {
        "audioUri": {
          "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
          "type": "string"
        },
        "dialogflowConversation": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}"
        }
      },
      "type": "object",
      "description": "A Dialogflow source of conversation data."
    },
    "GoogleCloudContactcenterinsightsV1Intent": {
      "id": "GoogleCloudContactcenterinsightsV1Intent",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier of the intent.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript": {
      "description": "A message representing the transcript of a conversation.",
      "properties": {
        "transcriptSegments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment"
          },
          "description": "A list of sequential transcript segments that comprise the conversation."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig": {
      "properties": {
        "exactMatchConfig": {
          "description": "The configuration for the exact match rule.",
          "$ref": "GoogleCloudContactcenterinsightsV1ExactMatchConfig"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig",
      "description": "Configuration information of a phrase match rule."
    },
    "GoogleLongrunningOperation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "GoogleLongrunningOperation"
    },
    "GoogleCloudContactcenterinsightsV1GcsSource": {
      "id": "GoogleCloudContactcenterinsightsV1GcsSource",
      "description": "A Cloud Storage source of conversation data.",
      "properties": {
        "audioUri": {
          "type": "string",
          "description": "Cloud Storage URI that points to a file that contains the conversation audio."
        },
        "transcriptUri": {
          "type": "string",
          "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup": {
      "description": "A message representing a rule in the phrase matcher.",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rules or there is no match.",
            "If any of the phrase match rules are met, there is a match."
          ],
          "description": "Required. The type of this phrase match rule group.",
          "type": "string"
        },
        "phraseMatchRules": {
          "type": "array",
          "description": "A list of phrase match rules that are included in this group.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRule"
          }
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination": {
      "description": "A BigQuery Table Reference.",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination",
      "type": "object",
      "properties": {
        "table": {
          "type": "string",
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error."
        },
        "dataset": {
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        },
        "projectId": {
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1DialogflowInteractionData": {
      "type": "object",
      "properties": {
        "confidence": {
          "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "float"
        },
        "dialogflowIntentId": {
          "type": "string",
          "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData",
      "description": "Dialogflow interaction data."
    },
    "GoogleCloudContactcenterinsightsV1Settings": {
      "properties": {
        "name": {
          "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings",
          "type": "string"
        },
        "languageCode": {
          "description": "A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to \"en-US\" if it is neither specified on the segment nor here.",
          "type": "string"
        },
        "redactionConfig": {
          "description": "Default DLP redaction resources to be applied while ingesting conversations.",
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig"
        },
        "pubsubNotificationSettings": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * \"all-triggers\": Notify each time any of the supported triggers occurs. * \"create-analysis\": Notify each time an analysis is created. * \"create-conversation\": Notify each time a conversation is created. * \"export-insights-data\": Notify each time an export is complete. * \"update-conversation\": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which the settings were last updated."
        },
        "conversationTtl": {
          "description": "The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.",
          "format": "google-duration",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time at which the settings was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "analysisConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig",
          "description": "Default analysis settings."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1Settings",
      "description": "The settings resource.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata": {
      "description": "Call-specific metadata.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata",
      "properties": {
        "customerChannel": {
          "description": "The audio channel that contains the customer.",
          "type": "integer",
          "format": "int32"
        },
        "agentChannel": {
          "description": "The audio channel that contains the agent.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment": {
      "properties": {
        "languageCode": {
          "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".",
          "type": "string"
        },
        "channelTag": {
          "format": "int32",
          "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.",
          "type": "integer"
        },
        "text": {
          "description": "The text of this segment.",
          "type": "string"
        },
        "messageTime": {
          "description": "The time that the message occurred, if provided.",
          "type": "string",
          "format": "google-datetime"
        },
        "segmentParticipant": {
          "description": "The participant of this segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant"
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset."
        },
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
          "description": "The sentiment for this transcript segment."
        },
        "words": {
          "description": "A list of the word-specific information for each word in the segment.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo"
          }
        },
        "dialogflowSegmentMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
          "description": "CCAI metadata relating to the current transcript segment."
        }
      },
      "description": "A segment of a full transcript.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo",
      "properties": {
        "word": {
          "description": "The word itself. Includes punctuation marks that surround the word.",
          "type": "string"
        },
        "endOffset": {
          "format": "google-duration",
          "type": "string",
          "description": "Time offset of the end of this word relative to the beginning of the total conversation."
        },
        "startOffset": {
          "format": "google-duration",
          "type": "string",
          "description": "Time offset of the start of this word relative to the beginning of the total conversation."
        },
        "confidence": {
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.",
          "type": "number",
          "format": "float"
        }
      },
      "description": "Word-level info for words in a transcript.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata": {
      "type": "object",
      "description": "The metadata for a bulk analyze conversations operation.",
      "properties": {
        "failedAnalysesCount": {
          "format": "int32",
          "description": "The number of requested analyses that have failed so far.",
          "type": "integer"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation finished running."
        },
        "completedAnalysesCount": {
          "description": "The number of requested analyses that have completed successfully so far.",
          "type": "integer",
          "format": "int32"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation was created."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest",
          "description": "The original request for bulk analyze."
        },
        "totalRequestedAnalysesCount": {
          "description": "Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata"
    },
    "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse",
      "type": "object",
      "description": "Response of querying an issue model's statistics.",
      "properties": {
        "currentStats": {
          "description": "The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ExactMatchConfig": {
      "id": "GoogleCloudContactcenterinsightsV1ExactMatchConfig",
      "type": "object",
      "description": "Exact match configuration.",
      "properties": {
        "caseSensitive": {
          "description": "Whether to consider case sensitivity when performing an exact match.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource": {
      "type": "object",
      "properties": {
        "audioUri": {
          "type": "string",
          "description": "Cloud Storage URI that points to a file that contains the conversation audio."
        },
        "dialogflowConversation": {
          "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "type": "string",
          "readOnly": true
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource",
      "description": "A Dialogflow source of conversation data."
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata": {
      "description": "Metadata for undeploying an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata",
      "properties": {
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest",
          "description": "The original request for undeployment."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource": {
      "properties": {
        "bucketUri": {
          "description": "Required. The Cloud Storage bucket containing source objects.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource",
      "description": "Configuration for Cloud Storage bucket sources.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscript": {
      "description": "A message representing the transcript of a conversation.",
      "type": "object",
      "properties": {
        "transcriptSegments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment"
          },
          "description": "A list of sequential transcript segments that comprise the conversation."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscript"
    },
    "GoogleCloudContactcenterinsightsV1ConversationDataSource": {
      "type": "object",
      "description": "The conversation source, which is a combination of transcript and audio.",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1GcsSource",
          "description": "A Cloud Storage location specification for the audio and transcript."
        },
        "dialogflowSource": {
          "description": "The source when the conversation comes from Dialogflow.",
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowSource"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationDataSource"
    },
    "GoogleCloudContactcenterinsightsV1ListConversationsResponse": {
      "description": "The response of listing conversations.",
      "id": "GoogleCloudContactcenterinsightsV1ListConversationsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available.",
          "type": "string"
        },
        "conversations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
          },
          "description": "The conversations that match the request."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource": {
      "properties": {
        "bucketUri": {
          "type": "string",
          "description": "Required. The Cloud Storage bucket containing source objects."
        }
      },
      "type": "object",
      "description": "Configuration for Cloud Storage bucket sources.",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource"
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest": {
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest",
      "properties": {
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
        },
        "parent": {
          "description": "Required. The parent resource to create analyses in.",
          "type": "string"
        },
        "analysisPercentage": {
          "type": "number",
          "format": "float",
          "description": "Required. Percentage of selected conversation to analyze, between [0, 100]."
        },
        "filter": {
          "description": "Required. Filter used to select the subset of conversations to analyze.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The request to analyze conversations in bulk."
    },
    "GoogleCloudContactcenterinsightsV1alpha1SentimentData": {
      "description": "The data for a sentiment annotation.",
      "properties": {
        "magnitude": {
          "type": "number",
          "format": "float",
          "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score."
        },
        "score": {
          "description": "The sentiment score between -1.0 (negative) and 1.0 (positive).",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData": {
      "properties": {
        "issueAssignment": {
          "description": "Information about the issue's assignment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData",
      "type": "object",
      "description": "The data for an issue match annotation."
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResult": {
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time at which the analysis ended."
        },
        "callAnalysisMetadata": {
          "description": "Call-specific metadata created by the analysis.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata"
        }
      },
      "description": "The result of an analysis.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResult"
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata",
      "description": "Metadata for creating an issue model.",
      "properties": {
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        },
        "request": {
          "description": "The original request for creation.",
          "$ref": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig": {
      "properties": {
        "agentId": {
          "type": "string",
          "description": "An opaque, user-specified string representing the human agent who handled the conversations."
        }
      },
      "description": "Configuration that applies to all conversations.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig"
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "GoogleRpcStatus",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1EntityMentionData": {
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of the entity mention.",
          "enum": [
            "MENTION_TYPE_UNSPECIFIED",
            "PROPER",
            "COMMON"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Proper noun.",
            "Common noun (or noun compound)."
          ],
          "type": "string"
        },
        "sentiment": {
          "description": "Sentiment expressed for this mention of the entity.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "entityUniqueId": {
          "type": "string",
          "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1EntityMentionData",
      "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation."
    },
    "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData": {
      "type": "object",
      "properties": {
        "text": {
          "description": "The summarization content that is concatenated into one string.",
          "type": "string"
        },
        "textSections": {
          "description": "The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map that contains metadata about the summarization and the document from which it originates.",
          "type": "object"
        },
        "confidence": {
          "format": "float",
          "description": "The confidence score of the summarization.",
          "type": "number"
        },
        "answerRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "conversationModel": {
          "type": "string",
          "description": "The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData",
      "description": "Conversation summarization suggestion data."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata": {
      "properties": {
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest",
          "description": "The original request for export."
        },
        "partialErrors": {
          "description": "Partial errors during export operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        }
      },
      "description": "Metadata for an export insights operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest": {
      "type": "object",
      "description": "The request to ingest conversations.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest",
      "properties": {
        "gcsSource": {
          "description": "A cloud storage bucket source.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource"
        },
        "parent": {
          "description": "Required. The parent resource for new conversations.",
          "type": "string"
        },
        "conversationConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig",
          "description": "Configuration that applies to all conversations."
        },
        "transcriptObjectConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig",
          "description": "Configuration for when `source` contains conversation transcripts."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig": {
      "type": "object",
      "properties": {
        "deidentifyTemplate": {
          "description": "The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`",
          "type": "string"
        },
        "inspectTemplate": {
          "description": "The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`",
          "type": "string"
        }
      },
      "description": "DLP resources used for redaction while ingesting conversations.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig"
    },
    "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig",
      "description": "Default configuration when creating Analyses in Insights.",
      "properties": {
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
        },
        "uploadConversationAnalysisPercentage": {
          "type": "number",
          "description": "Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100].",
          "format": "double"
        },
        "runtimeIntegrationAnalysisPercentage": {
          "format": "double",
          "type": "number",
          "description": "Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100]."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1DialogflowIntent": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1DialogflowIntent",
      "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModel": {
      "description": "The issue model resource.",
      "properties": {
        "name": {
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the issue model was updated.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "languageCode": {
          "description": "Language of the model.",
          "type": "string"
        },
        "trainingStats": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats",
          "readOnly": true,
          "description": "Output only. Immutable. The issue model's label statistics on its training data."
        },
        "modelType": {
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "TYPE_V1",
            "TYPE_V2"
          ],
          "description": "Type of the model.",
          "enumDescriptions": [
            "Unspecified model type.",
            "Type V1.",
            "Type V2."
          ],
          "type": "string"
        },
        "inputDataConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig",
          "description": "Configs for the input data that used to create the issue model."
        },
        "issueCount": {
          "format": "int64",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Number of issues in this issue model."
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the issue model."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ],
          "readOnly": true,
          "description": "Output only. State of the model.",
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ]
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which this issue model was created."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModel",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata",
      "properties": {
        "annotations": {
          "description": "A list of call annotations that apply to this call.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation"
          }
        },
        "issueModelResult": {
          "description": "Overall conversation-level issue modeling result.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult"
        },
        "entities": {
          "type": "object",
          "description": "All the entities in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1Entity"
          }
        },
        "sentiments": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment"
          },
          "type": "array",
          "description": "Overall conversation-level sentiment for each channel of the call."
        },
        "phraseMatchers": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData"
          },
          "description": "All the matched phrase matchers in the call.",
          "type": "object"
        },
        "intents": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1Intent"
          },
          "description": "All the matched intents in the call."
        }
      },
      "description": "Call-specific metadata created during analysis."
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector": {
      "type": "object",
      "description": "Selector of all available annotators and phrase matchers to run.",
      "properties": {
        "phraseMatchers": {
          "description": "The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "issueModels": {
          "description": "The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "runIntentAnnotator": {
          "type": "boolean",
          "description": "Whether to run the intent annotator."
        },
        "summarizationConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig",
          "description": "Configuration for the summarization annotator."
        },
        "runSilenceAnnotator": {
          "type": "boolean",
          "description": "Whether to run the silence annotator."
        },
        "runEntityAnnotator": {
          "description": "Whether to run the entity annotator.",
          "type": "boolean"
        },
        "runPhraseMatcherAnnotator": {
          "type": "boolean",
          "description": "Whether to run the active phrase matcher annotator(s)."
        },
        "runSentimentAnnotator": {
          "description": "Whether to run the sentiment annotator.",
          "type": "boolean"
        },
        "runSummarizationAnnotator": {
          "description": "Whether to run the summarization annotator.",
          "type": "boolean"
        },
        "runInterruptionAnnotator": {
          "description": "Whether to run the interruption annotator.",
          "type": "boolean"
        },
        "runIssueModelAnnotator": {
          "description": "Whether to run the issue model annotator. A model should have already been deployed for this to take effect.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest",
      "description": "Request to upload a conversation.",
      "properties": {
        "redactionConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig",
          "description": "Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings."
        },
        "conversation": {
          "description": "Required. The conversation resource to create.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1Conversation"
        },
        "conversationId": {
          "type": "string",
          "description": "Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`"
        },
        "parent": {
          "description": "Required. The parent resource of the conversation.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig": {
      "description": "Configuration for summarization.",
      "type": "object",
      "properties": {
        "summarizationModel": {
          "description": "Default summarization model to be used.",
          "enumDescriptions": [
            "Unspecified summarization model.",
            "The Insights baseline model."
          ],
          "type": "string",
          "enum": [
            "SUMMARIZATION_MODEL_UNSPECIFIED",
            "BASELINE_MODEL"
          ]
        },
        "conversationProfile": {
          "description": "Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig": {
      "properties": {
        "medium": {
          "description": "Required. The medium transcript objects represent.",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "type": "string"
        }
      },
      "description": "Configuration for processing transcript objects.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse": {
      "type": "object",
      "description": "The response to deploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1InterruptionData": {
      "properties": {},
      "type": "object",
      "description": "The data for an interruption annotation.",
      "id": "GoogleCloudContactcenterinsightsV1InterruptionData"
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest": {
      "type": "object",
      "description": "The request to delete an issue model.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name of the issue model to delete."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo": {
      "type": "object",
      "description": "Word-level info for words in a transcript.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo",
      "properties": {
        "endOffset": {
          "description": "Time offset of the end of this word relative to the beginning of the total conversation.",
          "format": "google-duration",
          "type": "string"
        },
        "startOffset": {
          "type": "string",
          "description": "Time offset of the start of this word relative to the beginning of the total conversation.",
          "format": "google-duration"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset."
        },
        "word": {
          "description": "The word itself. Includes punctuation marks that surround the word.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries",
      "description": "A time series representing conversations over time.",
      "properties": {
        "points": {
          "description": "An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval"
          }
        },
        "intervalDuration": {
          "type": "string",
          "format": "google-duration",
          "description": "The duration of each interval."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant",
      "properties": {
        "obfuscatedExternalUserId": {
          "type": "string",
          "description": "Obfuscated user ID from Dialogflow."
        },
        "role": {
          "description": "The role of the participant.",
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "type": "string",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ]
        },
        "dialogflowParticipant": {
          "type": "string",
          "deprecated": true,
          "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}"
        },
        "userId": {
          "description": "A user-specified ID representing the participant.",
          "type": "string"
        },
        "dialogflowParticipantName": {
          "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The call participant speaking for a given utterance."
    },
    "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata": {
      "properties": {
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "conversation": {
          "description": "Output only. The Conversation that this Analysis Operation belongs to.",
          "type": "string",
          "readOnly": true
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
          "readOnly": true,
          "description": "Output only. The annotator selector used for the analysis (if any)."
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata",
      "type": "object",
      "description": "Metadata for a create analysis operation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest",
      "description": "The request to deploy an issue model.",
      "properties": {
        "name": {
          "description": "Required. The issue model to deploy.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData": {
      "type": "object",
      "properties": {
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "question": {
          "type": "string",
          "description": "The corresponding FAQ question."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the FAQ answer and the document that it originates from."
        },
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.",
          "type": "string"
        },
        "answer": {
          "type": "string",
          "description": "The piece of text from the `source` knowledge base document."
        },
        "confidenceScore": {
          "format": "float",
          "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData",
      "description": "Agent Assist frequently-asked-question answer data."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata",
      "properties": {
        "ingestConversationsStats": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats",
          "description": "Output only. Statistics for IngestConversations operation."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "partialErrors": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Output only. Partial errors during ingest operation that might cause the operation output to be incomplete."
        },
        "request": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest",
          "description": "Output only. The original request for ingest."
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        }
      },
      "description": "The metadata for an IngestConversations operation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData",
      "type": "object",
      "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.",
      "properties": {
        "phraseMatcher": {
          "type": "string",
          "description": "The unique identifier (the resource name) of the phrase matcher."
        },
        "displayName": {
          "description": "The human-readable name of the phrase matcher.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig": {
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig",
      "type": "object",
      "properties": {
        "medium": {
          "type": "string",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "description": "Required. The medium transcript objects represent."
        }
      },
      "description": "Configuration for processing transcript objects."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata",
      "type": "object",
      "description": "Metadata for deploying an issue model.",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        },
        "request": {
          "description": "The original request for deployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse": {
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse",
      "description": "The response to deploy an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse": {
      "type": "object",
      "description": "The response for a bulk analyze conversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse",
      "properties": {
        "failedAnalysisCount": {
          "description": "Count of failed analyses.",
          "type": "integer",
          "format": "int32"
        },
        "successfulAnalysisCount": {
          "description": "Count of successful analyses.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRule": {
      "properties": {
        "query": {
          "type": "string",
          "description": "Required. The phrase to be matched."
        },
        "negated": {
          "type": "boolean",
          "description": "Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment."
        },
        "config": {
          "description": "Provides additional information about the rule that specifies how to apply the rule.",
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig"
        }
      },
      "description": "The data for a phrase match rule.",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRule",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig",
      "description": "Configuration for summarization.",
      "properties": {
        "summarizationModel": {
          "type": "string",
          "enum": [
            "SUMMARIZATION_MODEL_UNSPECIFIED",
            "BASELINE_MODEL"
          ],
          "description": "Default summarization model to be used.",
          "enumDescriptions": [
            "Unspecified summarization model.",
            "The Insights baseline model."
          ]
        },
        "conversationProfile": {
          "type": "string",
          "description": "Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest": {
      "description": "The request to undeploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The issue model to undeploy.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest": {
      "description": "The request to deploy an issue model.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The issue model to deploy.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1alpha1SilenceData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1SilenceData",
      "description": "The data for a silence annotation.",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStats": {
      "description": "Aggregated statistics about an issue model.",
      "properties": {
        "issueStats": {
          "description": "Statistics on each issue. Key is the issue's resource name.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          },
          "type": "object"
        },
        "analyzedConversationsCount": {
          "type": "string",
          "description": "Number of conversations the issue model has analyzed at this point in time.",
          "format": "int64"
        },
        "unclassifiedConversationsCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats"
    },
    "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment",
      "description": "One channel of conversation-level sentiment data.",
      "properties": {
        "sentimentData": {
          "description": "Data specifying sentiment.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "channelTag": {
          "type": "integer",
          "description": "The channel of the audio that the data applies to.",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1UploadConversationMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1UploadConversationMetadata",
      "type": "object",
      "properties": {
        "appliedRedactionConfig": {
          "readOnly": true,
          "description": "Output only. The redaction config applied to the uploaded conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running."
        },
        "request": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1UploadConversationRequest",
          "description": "Output only. The original request."
        },
        "analysisOperation": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The operation name for a successfully created analysis operation, if any."
        }
      },
      "description": "The metadata for an UploadConversation operation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats",
      "properties": {
        "duplicatesSkippedCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.",
          "format": "int32"
        },
        "failedIngestCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.",
          "format": "int32"
        },
        "successfulIngestCount": {
          "readOnly": true,
          "type": "integer",
          "description": "Output only. The number of new conversations added during this ingest operation.",
          "format": "int32"
        },
        "processedObjectCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Output only. The number of objects processed during the ingest operation.",
          "format": "int32"
        }
      },
      "description": "Statistics for IngestConversations operation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1InterruptionData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1InterruptionData",
      "description": "The data for an interruption annotation.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval": {
      "description": "A single interval in a time series.",
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval",
      "type": "object",
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The start time of this interval."
        },
        "conversationCount": {
          "description": "The number of conversations created in this interval.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats": {
      "description": "Aggregated statistics about an issue.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the issue."
        },
        "issue": {
          "type": "string",
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        },
        "labeledConversationsCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of conversations attached to the issue at this point in time."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest": {
      "description": "The request to analyze conversations in bulk.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest",
      "type": "object",
      "properties": {
        "analysisPercentage": {
          "format": "float",
          "type": "number",
          "description": "Required. Percentage of selected conversation to analyze, between [0, 100]."
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        },
        "filter": {
          "type": "string",
          "description": "Required. Filter used to select the subset of conversations to analyze."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to create analyses in."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource",
      "properties": {
        "gcsSource": {
          "description": "A Cloud Storage location specification for the audio and transcript.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1GcsSource"
        },
        "dialogflowSource": {
          "description": "The source when the conversation comes from Dialogflow.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource"
        }
      },
      "description": "The conversation source, which is a combination of transcript and audio.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1FaqAnswerData": {
      "id": "GoogleCloudContactcenterinsightsV1FaqAnswerData",
      "description": "Agent Assist frequently-asked-question answer data.",
      "type": "object",
      "properties": {
        "confidenceScore": {
          "type": "number",
          "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map that contains metadata about the FAQ answer and the document that it originates from."
        },
        "question": {
          "type": "string",
          "description": "The corresponding FAQ question."
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "answer": {
          "description": "The piece of text from the `source` knowledge base document.",
          "type": "string"
        },
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse": {
      "properties": {
        "issueModels": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
          },
          "description": "The issue models that match the request."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse",
      "type": "object",
      "description": "The response of listing issue models."
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback": {
      "description": "The feedback that the customer has about a certain answer in the conversation.",
      "properties": {
        "displayed": {
          "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.",
          "type": "boolean"
        },
        "correctnessLevel": {
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ],
          "type": "string",
          "description": "The correctness level of an answer.",
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ]
        },
        "clicked": {
          "description": "Indicates whether an answer or item was clicked by the human agent.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback"
    },
    "GoogleCloudContactcenterinsightsV1SentimentData": {
      "properties": {
        "score": {
          "description": "The sentiment score between -1.0 (negative) and 1.0 (positive).",
          "type": "number",
          "format": "float"
        },
        "magnitude": {
          "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.",
          "format": "float",
          "type": "number"
        }
      },
      "description": "The data for a sentiment annotation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1SentimentData"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata": {
      "description": "Metadata for an export insights operation.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        },
        "partialErrors": {
          "description": "Partial errors during export operation that might cause the operation output to be incomplete.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest",
          "description": "The original request for export."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata"
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponse": {
      "properties": {
        "averageDuration": {
          "format": "google-duration",
          "description": "The average duration of all conversations. The average is calculated using only conversations that have a time duration.",
          "type": "string"
        },
        "issueMatches": {
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "deprecated": true,
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead."
        },
        "conversationCountTimeSeries": {
          "description": "A time series representing the count of conversations created over time that match that requested filter criteria.",
          "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries"
        },
        "conversationCount": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of conversations."
        },
        "customHighlighterMatches": {
          "description": "A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "type": "object"
        },
        "issueMatchesStats": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          },
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`"
        },
        "averageTurnCount": {
          "format": "int32",
          "description": "The average number of turns per conversation.",
          "type": "integer"
        },
        "smartHighlighterMatches": {
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "description": "A map associating each smart highlighter display name with its respective number of matches in the set of conversations."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse",
      "description": "The response for calculating conversation statistics.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata": {
      "type": "object",
      "description": "Metadata from Dialogflow relating to the current transcript segment.",
      "properties": {
        "smartReplyAllowlistCovered": {
          "type": "boolean",
          "description": "Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1Entity": {
      "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1Entity",
      "properties": {
        "sentiment": {
          "description": "The aggregate sentiment expressed for this entity in the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the entity."
        },
        "salience": {
          "format": "float",
          "type": "number",
          "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient."
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSON",
            "LOCATION",
            "ORGANIZATION",
            "EVENT",
            "WORK_OF_ART",
            "CONSUMER_GOOD",
            "OTHER",
            "PHONE_NUMBER",
            "ADDRESS",
            "DATE",
            "NUMBER",
            "PRICE"
          ],
          "description": "The entity type.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Person.",
            "Location.",
            "Organization.",
            "Event.",
            "Artwork.",
            "Consumer product.",
            "Other types of entities.",
            "Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.",
            "Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.",
            "Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.",
            "Number. The metadata is the number itself.",
            "Price. The metadata identifies the `value` and `currency`."
          ]
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsMetadata": {
      "description": "The metadata for an IngestConversations operation.",
      "type": "object",
      "properties": {
        "request": {
          "description": "Output only. The original request for ingest.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest",
          "readOnly": true
        },
        "partialErrors": {
          "description": "Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "ingestConversationsStats": {
          "description": "Output only. Statistics for IngestConversations operation.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment",
      "type": "object",
      "properties": {
        "issue": {
          "type": "string",
          "description": "Resource name of the assigned issue."
        },
        "score": {
          "type": "number",
          "format": "double",
          "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1]."
        },
        "displayName": {
          "type": "string",
          "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then."
        }
      },
      "description": "Information about the issue."
    },
    "GoogleCloudContactcenterinsightsV1ConversationParticipant": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationParticipant",
      "description": "The call participant speaking for a given utterance.",
      "properties": {
        "obfuscatedExternalUserId": {
          "description": "Obfuscated user ID from Dialogflow.",
          "type": "string"
        },
        "userId": {
          "description": "A user-specified ID representing the participant.",
          "type": "string"
        },
        "dialogflowParticipant": {
          "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "type": "string",
          "deprecated": true
        },
        "dialogflowParticipantName": {
          "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "type": "string"
        },
        "role": {
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "description": "The role of the participant.",
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest": {
      "type": "object",
      "description": "The request to delete an issue model.",
      "properties": {
        "name": {
          "description": "Required. The name of the issue model to delete.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment": {
      "description": "A segment of a full transcript.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment",
      "properties": {
        "words": {
          "description": "A list of the word-specific information for each word in the segment.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo"
          }
        },
        "dialogflowSegmentMetadata": {
          "description": "CCAI metadata relating to the current transcript segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata"
        },
        "channelTag": {
          "format": "int32",
          "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.",
          "type": "integer"
        },
        "confidence": {
          "format": "float",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.",
          "type": "number"
        },
        "messageTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time that the message occurred, if provided."
        },
        "languageCode": {
          "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".",
          "type": "string"
        },
        "text": {
          "description": "The text of this segment.",
          "type": "string"
        },
        "sentiment": {
          "description": "The sentiment for this transcript segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "segmentParticipant": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationParticipant",
          "description": "The participant of this segment."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats",
      "type": "object",
      "properties": {
        "issueStats": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats"
          },
          "description": "Statistics on each issue. Key is the issue's resource name."
        },
        "analyzedConversationsCount": {
          "description": "Number of conversations the issue model has analyzed at this point in time.",
          "type": "string",
          "format": "int64"
        },
        "unclassifiedConversationsCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time."
        }
      },
      "description": "Aggregated statistics about an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata": {
      "type": "object",
      "description": "Metadata for undeploying an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        },
        "request": {
          "description": "The original request for undeployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData",
      "type": "object",
      "description": "Conversation summarization suggestion data.",
      "properties": {
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "The confidence score of the summarization."
        },
        "text": {
          "type": "string",
          "description": "The summarization content that is concatenated into one string."
        },
        "conversationModel": {
          "type": "string",
          "description": "The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}"
        },
        "answerRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "metadata": {
          "type": "object",
          "description": "A map that contains metadata about the summarization and the document from which it originates.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "textSections": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.",
          "type": "object"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse",
      "properties": {},
      "description": "The response to undeploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData": {
      "id": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData",
      "description": "Agent Assist Smart Compose suggestion data.",
      "properties": {
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "metadata": {
          "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "suggestion": {
          "type": "string",
          "description": "The content of the suggestion."
        },
        "confidenceScore": {
          "type": "number",
          "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "double"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata",
      "properties": {
        "appliedRedactionConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig",
          "description": "Output only. The redaction config applied to the uploaded conversation.",
          "readOnly": true
        },
        "analysisOperation": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The operation name for a successfully created analysis operation, if any."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "request": {
          "readOnly": true,
          "description": "Output only. The original request.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest"
        }
      },
      "description": "The metadata for an UploadConversation operation."
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsResponse": {
      "type": "object",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsResponse",
      "description": "The response to an IngestConversations operation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1HoldData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1HoldData",
      "description": "The data for a hold annotation.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1RedactionConfig": {
      "description": "DLP resources used for redaction while ingesting conversations.",
      "type": "object",
      "properties": {
        "inspectTemplate": {
          "type": "string",
          "description": "The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`"
        },
        "deidentifyTemplate": {
          "description": "The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1RedactionConfig"
    },
    "GoogleCloudContactcenterinsightsV1alpha1Analysis": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}"
        },
        "requestTime": {
          "description": "Output only. The time at which the analysis was requested.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "analysisResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult",
          "readOnly": true,
          "description": "Output only. The result of the analysis, which is populated when the analysis finishes."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes.",
          "type": "string"
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        }
      },
      "description": "The analysis resource.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1Analysis",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult": {
      "description": "Issue Modeling result on a conversation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult",
      "properties": {
        "issues": {
          "description": "All the matched issues.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment"
          },
          "type": "array"
        },
        "issueModel": {
          "type": "string",
          "description": "Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ArticleSuggestionData": {
      "id": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData",
      "properties": {
        "confidenceScore": {
          "type": "number",
          "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float"
        },
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the Article Suggestion and the document that it originates from.",
          "type": "object"
        },
        "uri": {
          "description": "Article URI.",
          "type": "string"
        },
        "title": {
          "description": "Article title.",
          "type": "string"
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Agent Assist Article Suggestion data."
    },
    "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation",
      "description": "An annotation that was generated during the customer and agent interaction.",
      "type": "object",
      "properties": {
        "conversationSummarizationSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData",
          "description": "Conversation summarization suggestion data."
        },
        "smartComposeSuggestion": {
          "description": "Agent Assist Smart Compose suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData"
        },
        "articleSuggestion": {
          "description": "Agent Assist Article Suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData"
        },
        "dialogflowInteraction": {
          "description": "Dialogflow interaction data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData"
        },
        "faqAnswer": {
          "description": "Agent Assist FAQ answer data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData"
        },
        "startBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        },
        "smartReply": {
          "description": "Agent Assist Smart Reply data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData"
        },
        "annotationId": {
          "type": "string",
          "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}"
        },
        "createTime": {
          "description": "The time at which this annotation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "answerFeedback": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback",
          "description": "The feedback that the customer has about the answer in `data`."
        },
        "endBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig": {
      "properties": {
        "trainingConversationsCount": {
          "readOnly": true,
          "format": "int64",
          "type": "string",
          "description": "Output only. Number of conversations used in training. Output only."
        },
        "filter": {
          "description": "A filter to reduce the conversations used for training the model to a specific subset.",
          "type": "string"
        },
        "medium": {
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "type": "string",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "deprecated": true,
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig",
      "description": "Configs for the input data used to create the issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse",
      "description": "Response for an export insights operation.",
      "type": "object",
      "properties": {}
    },
    "GoogleProtobufEmpty": {
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "id": "GoogleProtobufEmpty"
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The issue model to undeploy."
        }
      },
      "description": "The request to undeploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1IssueModel": {
      "type": "object",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time at which this issue model was created."
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The most recent time at which the issue model was updated.",
          "type": "string"
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ],
          "description": "Output only. State of the model.",
          "type": "string"
        },
        "name": {
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        },
        "trainingStats": {
          "description": "Output only. Immutable. The issue model's label statistics on its training data.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats"
        },
        "issueCount": {
          "description": "Output only. Number of issues in this issue model.",
          "readOnly": true,
          "format": "int64",
          "type": "string"
        },
        "modelType": {
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "TYPE_V1",
            "TYPE_V2"
          ],
          "enumDescriptions": [
            "Unspecified model type.",
            "Type V1.",
            "Type V2."
          ],
          "type": "string",
          "description": "Type of the model."
        },
        "inputDataConfig": {
          "description": "Configs for the input data that used to create the issue model.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig"
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the issue model."
        },
        "languageCode": {
          "type": "string",
          "description": "Language of the model."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueModel",
      "description": "The issue model resource."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig",
      "description": "Configuration that applies to all conversations.",
      "type": "object",
      "properties": {
        "agentId": {
          "description": "An opaque, user-specified string representing the human agent who handled the conversations.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1Intent": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identifier of the intent.",
          "type": "string"
        },
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        }
      },
      "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1Intent"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent": {
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent",
      "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData",
      "properties": {
        "title": {
          "type": "string",
          "description": "Article title."
        },
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}",
          "type": "string"
        },
        "uri": {
          "description": "Article URI.",
          "type": "string"
        },
        "confidenceScore": {
          "format": "float",
          "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        },
        "metadata": {
          "type": "object",
          "description": "Map that contains metadata about the Article Suggestion and the document that it originates from.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        }
      },
      "description": "Agent Assist Article Suggestion data.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueMatchData": {
      "description": "The data for an issue match annotation.",
      "type": "object",
      "properties": {
        "issueAssignment": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment",
          "description": "Information about the issue's assignment."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueMatchData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment": {
      "description": "One channel of conversation-level sentiment data.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment",
      "properties": {
        "channelTag": {
          "format": "int32",
          "type": "integer",
          "description": "The channel of the audio that the data applies to."
        },
        "sentimentData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
          "description": "Data specifying sentiment."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse": {
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse",
      "description": "The response to undeploy an issue model.",
      "type": "object"
    },
    "GoogleLongrunningListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatcher": {
      "properties": {
        "phraseMatchRuleGroups": {
          "description": "A list of phase match rule groups that are included in this matcher.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup"
          },
          "type": "array"
        },
        "activationUpdateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The most recent time at which the activation status was updated.",
          "readOnly": true
        },
        "type": {
          "description": "Required. The type of this phrase matcher.",
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rule groups or there is no match.",
            "If any of the phrase match rule groups are met, there is a match."
          ],
          "enum": [
            "PHRASE_MATCHER_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ],
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The most recent time at which the phrase matcher was updated."
        },
        "roleMatch": {
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "type": "string",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "description": "The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript."
        },
        "name": {
          "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
          "type": "string"
        },
        "versionTag": {
          "description": "The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the phrase matcher."
        },
        "active": {
          "type": "boolean",
          "description": "Applies the phrase matcher only when it is active."
        },
        "revisionCreateTime": {
          "description": "Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "revisionId": {
          "description": "Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatcher",
      "description": "The phrase matcher resource."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata": {
      "properties": {
        "smartReplyAllowlistCovered": {
          "description": "Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
      "type": "object",
      "description": "Metadata from Dialogflow relating to the current transcript segment."
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary": {
      "description": "A point in a conversation that marks the start or the end of an annotation.",
      "type": "object",
      "properties": {
        "transcriptIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero."
        },
        "wordIndex": {
          "type": "integer",
          "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.",
          "format": "int32"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata",
      "description": "Metadata for deleting an issue model.",
      "properties": {
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime"
        },
        "request": {
          "description": "The original request for deletion.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1AnnotatorSelector": {
      "id": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
      "properties": {
        "summarizationConfig": {
          "description": "Configuration for the summarization annotator.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig"
        },
        "runPhraseMatcherAnnotator": {
          "description": "Whether to run the active phrase matcher annotator(s).",
          "type": "boolean"
        },
        "runSummarizationAnnotator": {
          "description": "Whether to run the summarization annotator.",
          "type": "boolean"
        },
        "runIssueModelAnnotator": {
          "type": "boolean",
          "description": "Whether to run the issue model annotator. A model should have already been deployed for this to take effect."
        },
        "runSilenceAnnotator": {
          "type": "boolean",
          "description": "Whether to run the silence annotator."
        },
        "issueModels": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference."
        },
        "runIntentAnnotator": {
          "description": "Whether to run the intent annotator.",
          "type": "boolean"
        },
        "phraseMatchers": {
          "type": "array",
          "description": "The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
          "items": {
            "type": "string"
          }
        },
        "runInterruptionAnnotator": {
          "description": "Whether to run the interruption annotator.",
          "type": "boolean"
        },
        "runEntityAnnotator": {
          "description": "Whether to run the entity annotator.",
          "type": "boolean"
        },
        "runSentimentAnnotator": {
          "description": "Whether to run the sentiment annotator.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Selector of all available annotators and phrase matchers to run."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination",
      "properties": {
        "dataset": {
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used."
        },
        "table": {
          "type": "string",
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error."
        }
      },
      "type": "object",
      "description": "A BigQuery Table Reference."
    },
    "GoogleCloudContactcenterinsightsV1ListIssuesResponse": {
      "description": "The response of listing issues.",
      "type": "object",
      "properties": {
        "issues": {
          "type": "array",
          "description": "The issues that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Issue"
          }
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ListIssuesResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest": {
      "properties": {
        "bigQueryDestination": {
          "description": "Specified if sink is a BigQuery table.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination"
        },
        "filter": {
          "type": "string",
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties."
        },
        "writeDisposition": {
          "description": "Options for what to do if the destination table already exists.",
          "enum": [
            "WRITE_DISPOSITION_UNSPECIFIED",
            "WRITE_TRUNCATE",
            "WRITE_APPEND"
          ],
          "type": "string",
          "enumDescriptions": [
            "Write disposition is not specified. Defaults to WRITE_TRUNCATE.",
            "If the table already exists, BigQuery will overwrite the table data and use the schema from the load.",
            "If the table already exists, BigQuery will append data to the table."
          ]
        },
        "kmsKey": {
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}",
          "type": "string"
        },
        "parent": {
          "description": "Required. The parent resource to export data from.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The request to export insights.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest"
    },
    "GoogleCloudContactcenterinsightsV1AnswerFeedback": {
      "description": "The feedback that the customer has about a certain answer in the conversation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnswerFeedback",
      "properties": {
        "clicked": {
          "description": "Indicates whether an answer or item was clicked by the human agent.",
          "type": "boolean"
        },
        "correctnessLevel": {
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ],
          "description": "The correctness level of an answer."
        },
        "displayed": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData": {
      "properties": {
        "entityUniqueId": {
          "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "The type of the entity mention.",
          "enum": [
            "MENTION_TYPE_UNSPECIFIED",
            "PROPER",
            "COMMON"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Proper noun.",
            "Common noun (or noun compound)."
          ]
        },
        "sentiment": {
          "description": "Sentiment expressed for this mention of the entity.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData",
      "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata": {
      "type": "object",
      "description": "The metadata for a bulk analyze conversations operation.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "The time the operation was created.",
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the operation finished running."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest",
          "description": "The original request for bulk analyze."
        },
        "failedAnalysesCount": {
          "format": "int32",
          "type": "integer",
          "description": "The number of requested analyses that have failed so far."
        },
        "totalRequestedAnalysesCount": {
          "format": "int32",
          "description": "Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.",
          "type": "integer"
        },
        "completedAnalysesCount": {
          "description": "The number of requested analyses that have completed successfully so far.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata": {
      "description": "Metadata for a create analysis operation.",
      "properties": {
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "type": "string"
        },
        "annotatorSelector": {
          "description": "Output only. The annotator selector used for the analysis (if any).",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
          "readOnly": true
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime"
        },
        "conversation": {
          "readOnly": true,
          "description": "Output only. The Conversation that this Analysis Operation belongs to.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata"
    },
    "GoogleCloudContactcenterinsightsV1CallAnnotation": {
      "id": "GoogleCloudContactcenterinsightsV1CallAnnotation",
      "description": "A piece of metadata that applies to a window of a call.",
      "type": "object",
      "properties": {
        "annotationEndBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        },
        "intentMatchData": {
          "description": "Data specifying an intent match.",
          "$ref": "GoogleCloudContactcenterinsightsV1IntentMatchData"
        },
        "entityMentionData": {
          "description": "Data specifying an entity mention.",
          "$ref": "GoogleCloudContactcenterinsightsV1EntityMentionData"
        },
        "interruptionData": {
          "$ref": "GoogleCloudContactcenterinsightsV1InterruptionData",
          "description": "Data specifying an interruption."
        },
        "sentimentData": {
          "description": "Data specifying sentiment.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "channelTag": {
          "format": "int32",
          "type": "integer",
          "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated."
        },
        "annotationStartBoundary": {
          "description": "The boundary in the conversation where the annotation starts, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "holdData": {
          "$ref": "GoogleCloudContactcenterinsightsV1HoldData",
          "description": "Data specifying a hold."
        },
        "silenceData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SilenceData",
          "description": "Data specifying silence."
        },
        "phraseMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData",
          "description": "Data specifying a phrase match."
        },
        "issueMatchData": {
          "description": "Data specifying an issue match.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueMatchData"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse": {
      "description": "Response for an export insights operation.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse": {
      "properties": {},
      "type": "object",
      "description": "The response to an IngestConversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse"
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata": {
      "description": "Call-specific metadata created during analysis.",
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata",
      "properties": {
        "sentiments": {
          "description": "Overall conversation-level sentiment for each channel of the call.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment"
          },
          "type": "array"
        },
        "issueModelResult": {
          "description": "Overall conversation-level issue modeling result.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelResult"
        },
        "phraseMatchers": {
          "description": "All the matched phrase matchers in the call.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
          }
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CallAnnotation"
          },
          "description": "A list of call annotations that apply to this call."
        },
        "entities": {
          "description": "All the entities in the call.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Entity"
          }
        },
        "intents": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Intent"
          },
          "description": "All the matched intents in the call.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ListAnalysesResponse": {
      "id": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse",
      "properties": {
        "analyses": {
          "description": "The analyses that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The response to list analyses."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats": {
      "description": "Aggregated statistics about an issue.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats",
      "properties": {
        "issue": {
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the issue."
        },
        "labeledConversationsCount": {
          "format": "int64",
          "description": "Number of conversations attached to the issue at this point in time.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData": {
      "properties": {
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "metadata": {
          "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "suggestion": {
          "type": "string",
          "description": "The content of the suggestion."
        },
        "confidenceScore": {
          "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "double",
          "type": "number"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData",
      "description": "Agent Assist Smart Compose suggestion data.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation": {
      "type": "object",
      "properties": {
        "annotationStartBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        },
        "annotationEndBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        },
        "intentMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData",
          "description": "Data specifying an intent match."
        },
        "issueMatchData": {
          "description": "Data specifying an issue match.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData"
        },
        "entityMentionData": {
          "description": "Data specifying an entity mention.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData"
        },
        "phraseMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData",
          "description": "Data specifying a phrase match."
        },
        "channelTag": {
          "format": "int32",
          "type": "integer",
          "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated."
        },
        "silenceData": {
          "description": "Data specifying silence.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SilenceData"
        },
        "sentimentData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
          "description": "Data specifying sentiment."
        },
        "interruptionData": {
          "description": "Data specifying an interruption.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1InterruptionData"
        },
        "holdData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1HoldData",
          "description": "Data specifying a hold."
        }
      },
      "description": "A piece of metadata that applies to a window of a call.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation"
    },
    "GoogleCloudContactcenterinsightsV1IssueAssignment": {
      "properties": {
        "issue": {
          "type": "string",
          "description": "Resource name of the assigned issue."
        },
        "score": {
          "format": "double",
          "type": "number",
          "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1]."
        },
        "displayName": {
          "type": "string",
          "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IssueAssignment",
      "description": "Information about the issue."
    },
    "GoogleCloudContactcenterinsightsV1Analysis": {
      "properties": {
        "analysisResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResult",
          "description": "Output only. The result of the analysis, which is populated when the analysis finishes.",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes.",
          "readOnly": true
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}"
        },
        "requestTime": {
          "type": "string",
          "description": "Output only. The time at which the analysis was requested.",
          "format": "google-datetime",
          "readOnly": true
        }
      },
      "description": "The analysis resource.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1Analysis"
    },
    "GoogleCloudContactcenterinsightsV1Issue": {
      "properties": {
        "name": {
          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
          "type": "string"
        },
        "sampleUtterances": {
          "items": {
            "type": "string"
          },
          "description": "Output only. Resource names of the sample representative utterances that match to this issue.",
          "readOnly": true,
          "type": "array"
        },
        "displayName": {
          "description": "The representative name for the issue.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time at which this issue was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The most recent time that this issue was updated.",
          "format": "google-datetime",
          "readOnly": true
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1Issue",
      "type": "object",
      "description": "The issue resource."
    },
    "GoogleCloudContactcenterinsightsV1AnnotationBoundary": {
      "description": "A point in a conversation that marks the start or the end of an annotation.",
      "id": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
      "type": "object",
      "properties": {
        "wordIndex": {
          "format": "int32",
          "type": "integer",
          "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero."
        },
        "transcriptIndex": {
          "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest",
      "description": "The request to create an issue model.",
      "type": "object",
      "properties": {
        "issueModel": {
          "description": "Required. The issue model to create.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModel"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the issue model."
        }
      }
    }
  },
  "version_module": true,
  "kind": "discovery#restDescription",
  "ownerDomain": "google.com",
  "servicePath": "",
  "rootUrl": "https://contactcenterinsights.googleapis.com/",
  "id": "contactcenterinsights:v1",
  "canonicalName": "Contactcenterinsights",
  "mtlsRootUrl": "https://contactcenterinsights.mtls.googleapis.com/",
  "documentationLink": "https://cloud.google.com/contact-center/insights/docs",
  "revision": "20230803",
  "baseUrl": "https://contactcenterinsights.googleapis.com/",
  "fullyEncodeReservedExpansion": true
}

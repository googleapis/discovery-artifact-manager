{
  "parameters": {
    "alt": {
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query",
      "type": "boolean"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "location": "query",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ]
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    }
  },
  "basePath": "",
  "id": "contactcenterinsights:v1",
  "servicePath": "",
  "mtlsRootUrl": "https://contactcenterinsights.mtls.googleapis.com/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "rootUrl": "https://contactcenterinsights.googleapis.com/",
  "batchPath": "batch",
  "version": "v1",
  "ownerName": "Google",
  "title": "Contact Center AI Insights API",
  "protocol": "rest",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "documentationLink": "https://cloud.google.com/contact-center/insights/docs",
  "description": "",
  "version_module": true,
  "baseUrl": "https://contactcenterinsights.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "name": "contactcenterinsights",
  "kind": "discovery#restDescription",
  "revision": "20231031",
  "schemas": {
    "GoogleCloudContactcenterinsightsV1PhraseMatcher": {
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatcher",
      "description": "The phrase matcher resource.",
      "properties": {
        "revisionCreateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added."
        },
        "revisionId": {
          "description": "Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567",
          "readOnly": true,
          "type": "string"
        },
        "activationUpdateTime": {
          "format": "google-datetime",
          "description": "Output only. The most recent time at which the activation status was updated.",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The most recent time at which the phrase matcher was updated.",
          "type": "string"
        },
        "displayName": {
          "description": "The human-readable name of the phrase matcher.",
          "type": "string"
        },
        "versionTag": {
          "description": "The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.",
          "type": "string"
        },
        "active": {
          "type": "boolean",
          "description": "Applies the phrase matcher only when it is active."
        },
        "roleMatch": {
          "description": "The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.",
          "type": "string",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "PHRASE_MATCHER_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ],
          "description": "Required. The type of this phrase matcher.",
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rule groups or there is no match.",
            "If any of the phrase match rule groups are met, there is a match."
          ]
        },
        "name": {
          "type": "string",
          "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}"
        },
        "phraseMatchRuleGroups": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup"
          },
          "description": "A list of phase match rule groups that are included in this matcher."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse": {
      "type": "object",
      "description": "The response to undeploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1RuntimeAnnotation": {
      "type": "object",
      "description": "An annotation that was generated during the customer and agent interaction.",
      "id": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation",
      "properties": {
        "faqAnswer": {
          "$ref": "GoogleCloudContactcenterinsightsV1FaqAnswerData",
          "description": "Agent Assist FAQ answer data."
        },
        "endBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        },
        "dialogflowInteraction": {
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData",
          "description": "Dialogflow interaction data."
        },
        "conversationSummarizationSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData",
          "description": "Conversation summarization suggestion data."
        },
        "startBoundary": {
          "description": "The boundary in the conversation where the annotation starts, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "smartReply": {
          "$ref": "GoogleCloudContactcenterinsightsV1SmartReplyData",
          "description": "Agent Assist Smart Reply data."
        },
        "smartComposeSuggestion": {
          "description": "Agent Assist Smart Compose suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData"
        },
        "answerFeedback": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnswerFeedback",
          "description": "The feedback that the customer has about the answer in `data`."
        },
        "createTime": {
          "type": "string",
          "description": "The time at which this annotation was created.",
          "format": "google-datetime"
        },
        "articleSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData",
          "description": "Agent Assist Article Suggestion data."
        },
        "annotationId": {
          "type": "string",
          "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig": {
      "type": "object",
      "description": "Speech-to-Text configuration.",
      "properties": {
        "speechRecognizer": {
          "description": "The fully-qualified Speech Recognizer resource name. Format: `projects/{project_id}/locations/{location}/recognizer/{recognizer}`",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig": {
      "properties": {
        "agentChannel": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. For audio conversations, this field indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for audio conversations to be properly displayed and analyzed."
        },
        "customerChannel": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. For audio conversations, this field indicates which of the channels, 1 or 2, contains the customer. Note that this must be set for audio conversations to be properly displayed and analyzed."
        },
        "agentId": {
          "description": "An opaque, user-specified string representing the human agent who handled the conversations.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig",
      "type": "object",
      "description": "Configuration that applies to all conversations."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata": {
      "description": "The metadata for an IngestConversations operation.",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string"
        },
        "ingestConversationsStats": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats",
          "description": "Output only. Statistics for IngestConversations operation.",
          "readOnly": true
        },
        "request": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest",
          "description": "Output only. The original request for ingest."
        },
        "partialErrors": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata"
    },
    "GoogleProtobufEmpty": {
      "type": "object",
      "id": "GoogleProtobufEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript",
      "type": "object",
      "properties": {
        "transcriptSegments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment"
          },
          "description": "A list of sequential transcript segments that comprise the conversation."
        }
      },
      "description": "A message representing the transcript of a conversation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest": {
      "properties": {
        "conversationId": {
          "description": "Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`",
          "type": "string"
        },
        "redactionConfig": {
          "description": "Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig"
        },
        "conversation": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1Conversation",
          "description": "Required. The conversation resource to create."
        },
        "speechConfig": {
          "description": "Optional. Default Speech-to-Text configuration. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig"
        },
        "parent": {
          "description": "Required. The parent resource of the conversation.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Request to upload a conversation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest"
    },
    "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation": {
      "type": "object",
      "properties": {
        "startBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        },
        "faqAnswer": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData",
          "description": "Agent Assist FAQ answer data."
        },
        "createTime": {
          "type": "string",
          "description": "The time at which this annotation was created.",
          "format": "google-datetime"
        },
        "annotationId": {
          "type": "string",
          "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}"
        },
        "articleSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData",
          "description": "Agent Assist Article Suggestion data."
        },
        "smartComposeSuggestion": {
          "description": "Agent Assist Smart Compose suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData"
        },
        "dialogflowInteraction": {
          "description": "Dialogflow interaction data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData"
        },
        "smartReply": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData",
          "description": "Agent Assist Smart Reply data."
        },
        "answerFeedback": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback",
          "description": "The feedback that the customer has about the answer in `data`."
        },
        "conversationSummarizationSuggestion": {
          "description": "Conversation summarization suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData"
        },
        "endBoundary": {
          "description": "The boundary in the conversation where the annotation ends, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation",
      "description": "An annotation that was generated during the customer and agent interaction."
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback": {
      "type": "object",
      "description": "The feedback that the customer has about a certain answer in the conversation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback",
      "properties": {
        "displayed": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI."
        },
        "clicked": {
          "description": "Indicates whether an answer or item was clicked by the human agent.",
          "type": "boolean"
        },
        "correctnessLevel": {
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ],
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ],
          "description": "The correctness level of an answer.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse",
      "description": "Response for an export insights operation."
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata": {
      "properties": {
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest",
          "description": "The original request for deployment."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "type": "string"
        }
      },
      "description": "Metadata for deploying an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsResponse": {
      "type": "object",
      "properties": {},
      "description": "The response to an IngestConversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsResponse"
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval": {
      "type": "object",
      "properties": {
        "conversationCount": {
          "format": "int32",
          "type": "integer",
          "description": "The number of conversations created in this interval."
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The start time of this interval."
        }
      },
      "description": "A single interval in a time series.",
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval"
    },
    "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation": {
      "properties": {
        "interruptionData": {
          "description": "Data specifying an interruption.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1InterruptionData"
        },
        "phraseMatchData": {
          "description": "Data specifying a phrase match.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData"
        },
        "channelTag": {
          "format": "int32",
          "type": "integer",
          "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated."
        },
        "silenceData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SilenceData",
          "description": "Data specifying silence."
        },
        "intentMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData",
          "description": "Data specifying an intent match."
        },
        "entityMentionData": {
          "description": "Data specifying an entity mention.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData"
        },
        "holdData": {
          "description": "Data specifying a hold.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1HoldData"
        },
        "issueMatchData": {
          "description": "Data specifying an issue match.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData"
        },
        "sentimentData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
          "description": "Data specifying sentiment."
        },
        "annotationStartBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        },
        "annotationEndBoundary": {
          "description": "The boundary in the conversation where the annotation ends, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation",
      "type": "object",
      "description": "A piece of metadata that applies to a window of a call."
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStats": {
      "description": "Aggregated statistics about an issue model.",
      "properties": {
        "analyzedConversationsCount": {
          "format": "int64",
          "description": "Number of conversations the issue model has analyzed at this point in time.",
          "type": "string"
        },
        "unclassifiedConversationsCount": {
          "format": "int64",
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time.",
          "type": "string"
        },
        "issueStats": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          },
          "type": "object",
          "description": "Statistics on each issue. Key is the issue's resource name."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData": {
      "description": "The data for an issue match annotation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData",
      "properties": {
        "issueAssignment": {
          "description": "Information about the issue's assignment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata": {
      "description": "The metadata for an UploadConversation operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata",
      "type": "object",
      "properties": {
        "appliedRedactionConfig": {
          "readOnly": true,
          "description": "Output only. The redaction config applied to the uploaded conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        },
        "analysisOperation": {
          "description": "Output only. The operation name for a successfully created analysis operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest",
          "readOnly": true,
          "description": "Output only. The original request."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModel": {
      "type": "object",
      "description": "The issue model resource.",
      "properties": {
        "name": {
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        },
        "issueCount": {
          "readOnly": true,
          "format": "int64",
          "description": "Output only. Number of issues in this issue model.",
          "type": "string"
        },
        "trainingStats": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats",
          "description": "Output only. Immutable. The issue model's label statistics on its training data."
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ],
          "description": "Output only. State of the model."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which this issue model was created.",
          "readOnly": true
        },
        "modelType": {
          "type": "string",
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "TYPE_V1",
            "TYPE_V2"
          ],
          "description": "Type of the model.",
          "enumDescriptions": [
            "Unspecified model type.",
            "Type V1.",
            "Type V2."
          ]
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The most recent time at which the issue model was updated.",
          "format": "google-datetime",
          "readOnly": true
        },
        "languageCode": {
          "type": "string",
          "description": "Language of the model."
        },
        "inputDataConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig",
          "description": "Configs for the input data that used to create the issue model."
        },
        "displayName": {
          "description": "The representative name for the issue model.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModel"
    },
    "GoogleCloudContactcenterinsightsV1GcsSource": {
      "type": "object",
      "properties": {
        "audioUri": {
          "type": "string",
          "description": "Cloud Storage URI that points to a file that contains the conversation audio."
        },
        "transcriptUri": {
          "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1GcsSource",
      "description": "A Cloud Storage source of conversation data."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment": {
      "properties": {
        "issue": {
          "description": "Resource name of the assigned issue.",
          "type": "string"
        },
        "score": {
          "type": "number",
          "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1].",
          "format": "double"
        },
        "displayName": {
          "type": "string",
          "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment",
      "description": "Information about the issue."
    },
    "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig": {
      "properties": {
        "deidentifyTemplate": {
          "type": "string",
          "description": "The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`"
        },
        "inspectTemplate": {
          "description": "The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`",
          "type": "string"
        }
      },
      "type": "object",
      "description": "DLP resources used for redaction while ingesting conversations.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult": {
      "properties": {
        "callAnalysisMetadata": {
          "description": "Call-specific metadata created by the analysis.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata"
        },
        "endTime": {
          "type": "string",
          "description": "The time at which the analysis ended.",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "The result of an analysis.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult"
    },
    "GoogleCloudContactcenterinsightsV1RedactionConfig": {
      "description": "DLP resources used for redaction while ingesting conversations.",
      "id": "GoogleCloudContactcenterinsightsV1RedactionConfig",
      "type": "object",
      "properties": {
        "deidentifyTemplate": {
          "description": "The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`",
          "type": "string"
        },
        "inspectTemplate": {
          "type": "string",
          "description": "The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse": {
      "type": "object",
      "description": "The response for a bulk analyze conversations operation.",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata": {
      "description": "Metadata for undeploying an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata",
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest",
          "description": "The original request for undeployment."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo",
      "description": "Word-level info for words in a transcript.",
      "properties": {
        "startOffset": {
          "format": "google-duration",
          "description": "Time offset of the start of this word relative to the beginning of the total conversation.",
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.",
          "format": "float"
        },
        "endOffset": {
          "type": "string",
          "description": "Time offset of the end of this word relative to the beginning of the total conversation.",
          "format": "google-duration"
        },
        "word": {
          "description": "The word itself. Includes punctuation marks that surround the word.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRule": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRule",
      "properties": {
        "query": {
          "description": "Required. The phrase to be matched.",
          "type": "string"
        },
        "negated": {
          "type": "boolean",
          "description": "Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment."
        },
        "config": {
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig",
          "description": "Provides additional information about the rule that specifies how to apply the rule."
        }
      },
      "description": "The data for a phrase match rule."
    },
    "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData",
      "description": "Conversation summarization suggestion data.",
      "properties": {
        "textSections": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value."
        },
        "text": {
          "type": "string",
          "description": "The summarization content that is concatenated into one string."
        },
        "metadata": {
          "description": "A map that contains metadata about the summarization and the document from which it originates.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "answerRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "conversationModel": {
          "description": "The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}",
          "type": "string"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "The confidence score of the summarization."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse": {
      "properties": {
        "issueModels": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
          },
          "description": "The issue models that match the request.",
          "type": "array"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse",
      "description": "The response of listing issue models.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest",
      "description": "The request to deploy an issue model.",
      "properties": {
        "name": {
          "description": "Required. The issue model to deploy.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1HoldData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1HoldData",
      "properties": {},
      "description": "The data for a hold annotation."
    },
    "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig",
      "properties": {
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
        },
        "uploadConversationAnalysisPercentage": {
          "type": "number",
          "format": "double",
          "description": "Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100]."
        },
        "runtimeIntegrationAnalysisPercentage": {
          "type": "number",
          "description": "Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].",
          "format": "double"
        }
      },
      "description": "Default configuration when creating Analyses in Insights."
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResult": {
      "properties": {
        "callAnalysisMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata",
          "description": "Call-specific metadata created by the analysis."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time at which the analysis ended.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResult",
      "description": "The result of an analysis.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1SilenceData": {
      "description": "The data for a silence annotation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1SilenceData",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata": {
      "properties": {
        "partialErrors": {
          "readOnly": true,
          "description": "Output only. Partial errors during bulk analyze operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest",
          "description": "The original request for bulk analyze."
        },
        "endTime": {
          "description": "The time the operation finished running.",
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the operation was created."
        },
        "totalRequestedAnalysesCount": {
          "type": "integer",
          "description": "Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.",
          "format": "int32"
        },
        "failedAnalysesCount": {
          "description": "The number of requested analyses that have failed so far.",
          "format": "int32",
          "type": "integer"
        },
        "completedAnalysesCount": {
          "format": "int32",
          "description": "The number of requested analyses that have completed successfully so far.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata",
      "type": "object",
      "description": "The metadata for a bulk analyze conversations operation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
      "properties": {
        "wordIndex": {
          "format": "int32",
          "type": "integer",
          "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero."
        },
        "transcriptIndex": {
          "format": "int32",
          "type": "integer",
          "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero."
        }
      },
      "description": "A point in a conversation that marks the start or the end of an annotation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1SpeechConfig": {
      "type": "object",
      "properties": {
        "speechRecognizer": {
          "description": "The fully-qualified Speech Recognizer resource name. Format: `projects/{project_id}/locations/{location}/recognizer/{recognizer}`",
          "type": "string"
        }
      },
      "description": "Speech-to-Text configuration.",
      "id": "GoogleCloudContactcenterinsightsV1SpeechConfig"
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse": {
      "type": "object",
      "description": "The response to deploy an issue model.",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse"
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponse": {
      "properties": {
        "customHighlighterMatches": {
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "type": "object",
          "description": "A map associating each custom highlighter resource name with its respective number of matches in the set of conversations."
        },
        "smartHighlighterMatches": {
          "description": "A map associating each smart highlighter display name with its respective number of matches in the set of conversations.",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          },
          "type": "object"
        },
        "issueMatches": {
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.",
          "deprecated": true,
          "type": "object"
        },
        "conversationCountTimeSeries": {
          "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries",
          "description": "A time series representing the count of conversations created over time that match that requested filter criteria."
        },
        "issueMatchesStats": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          },
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`"
        },
        "conversationCount": {
          "description": "The total number of conversations.",
          "type": "integer",
          "format": "int32"
        },
        "averageTurnCount": {
          "description": "The average number of turns per conversation.",
          "format": "int32",
          "type": "integer"
        },
        "averageDuration": {
          "description": "The average duration of all conversations. The average is calculated using only conversations that have a time duration.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse",
      "description": "The response for calculating conversation statistics."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData": {
      "properties": {
        "answerRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "A map that contains metadata about the summarization and the document from which it originates."
        },
        "textSections": {
          "description": "The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "confidence": {
          "description": "The confidence score of the summarization.",
          "type": "number",
          "format": "float"
        },
        "conversationModel": {
          "description": "The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}",
          "type": "string"
        },
        "text": {
          "type": "string",
          "description": "The summarization content that is concatenated into one string."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData",
      "description": "Conversation summarization suggestion data."
    },
    "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata",
      "description": "Metadata for a create analysis operation.",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        },
        "conversation": {
          "readOnly": true,
          "description": "Output only. The Conversation that this Analysis Operation belongs to.",
          "type": "string"
        },
        "annotatorSelector": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
          "description": "Output only. The annotator selector used for the analysis (if any)."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult": {
      "description": "Issue Modeling result on a conversation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult",
      "properties": {
        "issueModel": {
          "type": "string",
          "description": "Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
        },
        "issues": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment"
          },
          "description": "All the matched issues.",
          "type": "array"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ConversationDataSource": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationDataSource",
      "description": "The conversation source, which is a combination of transcript, audio, and metadata.",
      "type": "object",
      "properties": {
        "dialogflowSource": {
          "description": "The source when the conversation comes from Dialogflow.",
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowSource"
        },
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1GcsSource",
          "description": "A Cloud Storage location specification for the audio and transcript."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource": {
      "description": "Configuration for Cloud Storage bucket sources.",
      "type": "object",
      "properties": {
        "bucketObjectType": {
          "enumDescriptions": [
            "The object type is unspecified and will default to TRANSCRIPT.",
            "The object is a transcript.",
            "The object is an audio file."
          ],
          "enum": [
            "BUCKET_OBJECT_TYPE_UNSPECIFIED",
            "TRANSCRIPT",
            "AUDIO"
          ],
          "description": "Optional. Specifies the type of the objects in `bucket_uri`.",
          "type": "string"
        },
        "bucketUri": {
          "description": "Required. The Cloud Storage bucket containing source objects.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource"
    },
    "GoogleCloudContactcenterinsightsV1alpha1GcsSource": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1GcsSource",
      "type": "object",
      "properties": {
        "transcriptUri": {
          "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.",
          "type": "string"
        },
        "audioUri": {
          "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
          "type": "string"
        }
      },
      "description": "A Cloud Storage source of conversation data."
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest",
      "description": "The request to create an issue model.",
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the issue model."
        },
        "issueModel": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModel",
          "description": "Required. The issue model to create."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of the issue model to delete.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest",
      "description": "The request to delete an issue model."
    },
    "GoogleCloudContactcenterinsightsV1DialogflowIntent": {
      "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1DialogflowIntent",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the intent."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1Analysis": {
      "description": "The analysis resource.",
      "type": "object",
      "properties": {
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes."
        },
        "requestTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which the analysis was requested.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}"
        },
        "analysisResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult",
          "readOnly": true,
          "description": "Output only. The result of the analysis, which is populated when the analysis finishes."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1Analysis"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig",
      "properties": {
        "medium": {
          "type": "string",
          "description": "Required. The medium transcript objects represent.",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ]
        }
      },
      "description": "Configuration for processing transcript objects."
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata": {
      "properties": {
        "entities": {
          "type": "object",
          "description": "All the entities in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Entity"
          }
        },
        "sentiments": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment"
          },
          "type": "array",
          "description": "Overall conversation-level sentiment for each channel of the call."
        },
        "issueModelResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelResult",
          "description": "Overall conversation-level issue modeling result."
        },
        "intents": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Intent"
          },
          "description": "All the matched intents in the call."
        },
        "phraseMatchers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
          },
          "description": "All the matched phrase matchers in the call."
        },
        "annotations": {
          "description": "A list of call annotations that apply to this call.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CallAnnotation"
          }
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata",
      "description": "Call-specific metadata created during analysis.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats": {
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats",
      "properties": {
        "labeledConversationsCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of conversations attached to the issue at this point in time."
        },
        "issue": {
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the issue."
        }
      },
      "description": "Aggregated statistics about an issue.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata": {
      "type": "object",
      "description": "Metadata for a create analysis operation.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        },
        "annotatorSelector": {
          "description": "Output only. The annotator selector used for the analysis (if any).",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "conversation": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The Conversation that this Analysis Operation belongs to."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata"
    },
    "GoogleCloudContactcenterinsightsV1SmartReplyData": {
      "properties": {
        "confidenceScore": {
          "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "double"
        },
        "reply": {
          "type": "string",
          "description": "The content of the reply."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the Smart Reply and the document from which it originates.",
          "type": "object"
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        }
      },
      "description": "Agent Assist Smart Reply data.",
      "id": "GoogleCloudContactcenterinsightsV1SmartReplyData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchData",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the phrase matcher.",
          "type": "string"
        },
        "phraseMatcher": {
          "type": "string",
          "description": "The unique identifier (the resource name) of the phrase matcher."
        }
      },
      "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match."
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequest": {
      "properties": {
        "redactionConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig",
          "description": "Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings."
        },
        "transcriptObjectConfig": {
          "description": "Configuration for when `source` contains conversation transcripts.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig"
        },
        "conversationConfig": {
          "description": "Configuration that applies to all conversations.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig"
        },
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource",
          "description": "A cloud storage bucket source. Note that any previously ingested objects from the source will be skipped to avoid duplication."
        },
        "speechConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1SpeechConfig",
          "description": "Optional. Default Speech-to-Text configuration. Optional, will default to the config specified in Settings."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource for new conversations."
        }
      },
      "description": "The request to ingest conversations.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData": {
      "properties": {
        "uri": {
          "description": "Article URI.",
          "type": "string"
        },
        "confidenceScore": {
          "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "float"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the Article Suggestion and the document that it originates from."
        },
        "title": {
          "description": "Article title.",
          "type": "string"
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData",
      "type": "object",
      "description": "Agent Assist Article Suggestion data."
    },
    "GoogleCloudContactcenterinsightsV1EntityMentionData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1EntityMentionData",
      "properties": {
        "sentiment": {
          "description": "Sentiment expressed for this mention of the entity.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "type": {
          "enum": [
            "MENTION_TYPE_UNSPECIFIED",
            "PROPER",
            "COMMON"
          ],
          "description": "The type of the entity mention.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Proper noun.",
            "Common noun (or noun compound)."
          ]
        },
        "entityUniqueId": {
          "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.",
          "type": "string"
        }
      },
      "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1Entity": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1Entity",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The representative name for the entity.",
          "type": "string"
        },
        "sentiment": {
          "description": "The aggregate sentiment expressed for this entity in the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below."
        },
        "salience": {
          "type": "number",
          "format": "float",
          "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient."
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSON",
            "LOCATION",
            "ORGANIZATION",
            "EVENT",
            "WORK_OF_ART",
            "CONSUMER_GOOD",
            "OTHER",
            "PHONE_NUMBER",
            "ADDRESS",
            "DATE",
            "NUMBER",
            "PRICE"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Person.",
            "Location.",
            "Organization.",
            "Event.",
            "Artwork.",
            "Consumer product.",
            "Other types of entities.",
            "Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.",
            "Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.",
            "Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.",
            "Number. The metadata is the number itself.",
            "Price. The metadata identifies the `value` and `currency`."
          ],
          "description": "The entity type.",
          "type": "string"
        }
      },
      "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest": {
      "properties": {
        "parent": {
          "description": "Required. The parent resource for new conversations.",
          "type": "string"
        },
        "transcriptObjectConfig": {
          "description": "Configuration for when `source` contains conversation transcripts.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig"
        },
        "redactionConfig": {
          "description": "Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig"
        },
        "conversationConfig": {
          "description": "Configuration that applies to all conversations.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig"
        },
        "speechConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig",
          "description": "Optional. Default Speech-to-Text configuration. Optional, will default to the config specified in Settings."
        },
        "gcsSource": {
          "description": "A cloud storage bucket source. Note that any previously ingested objects from the source will be skipped to avoid duplication.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest",
      "description": "The request to ingest conversations."
    },
    "GoogleCloudContactcenterinsightsV1ListConversationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available.",
          "type": "string"
        },
        "conversations": {
          "description": "The conversations that match the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
          }
        }
      },
      "description": "The response of listing conversations.",
      "id": "GoogleCloudContactcenterinsightsV1ListConversationsResponse"
    },
    "GoogleCloudContactcenterinsightsV1Analysis": {
      "id": "GoogleCloudContactcenterinsightsV1Analysis",
      "type": "object",
      "description": "The analysis resource.",
      "properties": {
        "name": {
          "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}",
          "type": "string"
        },
        "requestTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which the analysis was requested."
        },
        "analysisResult": {
          "description": "Output only. The result of the analysis, which is populated when the analysis finishes.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResult"
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse",
      "description": "The response for a bulk analyze conversations operation.",
      "properties": {
        "successfulAnalysisCount": {
          "description": "Count of successful analyses.",
          "type": "integer",
          "format": "int32"
        },
        "failedAnalysisCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of failed analyses."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData",
      "properties": {
        "intentUniqueId": {
          "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences."
    },
    "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse",
      "description": "The response for a bulk analyze conversations operation.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1Intent": {
      "id": "GoogleCloudContactcenterinsightsV1Intent",
      "type": "object",
      "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the intent."
        },
        "id": {
          "description": "The unique identifier of the intent.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest": {
      "properties": {
        "filter": {
          "description": "Filter used to select the subset of conversations to analyze.",
          "type": "string"
        },
        "force": {
          "type": "boolean",
          "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses."
        },
        "maxDeleteCount": {
          "format": "int32",
          "type": "integer",
          "description": "Maximum number of conversations to delete. The default is 1000. It can be changed by setting the `max_delete_count` field."
        },
        "parent": {
          "description": "Required. The parent resource to create analyses in. Format: projects/{project}/locations/{location}",
          "type": "string"
        }
      },
      "description": "The request to delete conversations in bulk.",
      "id": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest": {
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest",
      "type": "object",
      "description": "The request to analyze conversations in bulk.",
      "properties": {
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        },
        "filter": {
          "description": "Required. Filter used to select the subset of conversations to analyze.",
          "type": "string"
        },
        "analysisPercentage": {
          "type": "number",
          "description": "Required. Percentage of selected conversation to analyze, between [0, 100].",
          "format": "float"
        },
        "parent": {
          "description": "Required. The parent resource to create analyses in.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig": {
      "properties": {
        "exactMatchConfig": {
          "description": "The configuration for the exact match rule.",
          "$ref": "GoogleCloudContactcenterinsightsV1ExactMatchConfig"
        }
      },
      "type": "object",
      "description": "Configuration information of a phrase match rule.",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig"
    },
    "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "phraseMatchers": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
          },
          "description": "The phrase matchers that match the request."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse",
      "description": "The response of listing phrase matchers."
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest": {
      "description": "The request to create an issue model.",
      "type": "object",
      "properties": {
        "parent": {
          "description": "Required. The parent resource of the issue model.",
          "type": "string"
        },
        "issueModel": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModel",
          "description": "Required. The issue model to create."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata": {
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest",
          "description": "The original request for undeployment."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata",
      "description": "Metadata for undeploying an issue model."
    },
    "GoogleCloudContactcenterinsightsV1InterruptionData": {
      "id": "GoogleCloudContactcenterinsightsV1InterruptionData",
      "description": "The data for an interruption annotation.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse",
      "properties": {
        "successfulAnalysisCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of successful analyses."
        },
        "failedAnalysisCount": {
          "format": "int32",
          "description": "Count of failed analyses.",
          "type": "integer"
        }
      },
      "description": "The response for a bulk analyze conversations operation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IntentMatchData": {
      "id": "GoogleCloudContactcenterinsightsV1IntentMatchData",
      "properties": {
        "intentUniqueId": {
          "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences."
    },
    "GoogleCloudContactcenterinsightsV1ListViewsResponse": {
      "description": "The response of listing views.",
      "id": "GoogleCloudContactcenterinsightsV1ListViewsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "views": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1View"
          },
          "type": "array",
          "description": "The views that match the request."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData",
      "type": "object",
      "description": "Agent Assist Smart Compose suggestion data.",
      "properties": {
        "metadata": {
          "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "suggestion": {
          "type": "string",
          "description": "The content of the suggestion."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata": {
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "totalRequestedAnalysesCount": {
          "description": "Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.",
          "type": "integer",
          "format": "int32"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest",
          "description": "The original request for bulk analyze."
        },
        "failedAnalysesCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of requested analyses that have failed so far."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation finished running."
        },
        "partialErrors": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Output only. Partial errors during bulk analyze operation that might cause the operation output to be incomplete.",
          "readOnly": true
        },
        "completedAnalysesCount": {
          "description": "The number of requested analyses that have completed successfully so far.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata",
      "description": "The metadata for a bulk analyze conversations operation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig",
      "properties": {
        "medium": {
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "deprecated": true,
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "type": "string"
        },
        "trainingConversationsCount": {
          "readOnly": true,
          "description": "Output only. Number of conversations used in training. Output only.",
          "type": "string",
          "format": "int64"
        },
        "filter": {
          "type": "string",
          "description": "A filter to reduce the conversations used for training the model to a specific subset."
        }
      },
      "description": "Configs for the input data used to create the issue model."
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats",
      "description": "Statistics for IngestConversations operation.",
      "properties": {
        "successfulIngestCount": {
          "description": "Output only. The number of new conversations added during this ingest operation.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "duplicatesSkippedCount": {
          "description": "Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.",
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "processedObjectCount": {
          "readOnly": true,
          "format": "int32",
          "description": "Output only. The number of objects processed during the ingest operation.",
          "type": "integer"
        },
        "failedIngestCount": {
          "readOnly": true,
          "description": "Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the issue.",
          "type": "string"
        },
        "labeledConversationsCount": {
          "description": "Number of conversations attached to the issue at this point in time.",
          "type": "string",
          "format": "int64"
        },
        "issue": {
          "type": "string",
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        }
      },
      "description": "Aggregated statistics about an issue."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig",
      "description": "Configuration that applies to all conversations.",
      "properties": {
        "agentChannel": {
          "format": "int32",
          "description": "Optional. For audio conversations, this field indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for audio conversations to be properly displayed and analyzed.",
          "type": "integer"
        },
        "customerChannel": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. For audio conversations, this field indicates which of the channels, 1 or 2, contains the customer. Note that this must be set for audio conversations to be properly displayed and analyzed."
        },
        "agentId": {
          "description": "An opaque, user-specified string representing the human agent who handled the conversations.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1SilenceData": {
      "description": "The data for a silence annotation.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1SilenceData"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest": {
      "description": "The request to export insights.",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest",
      "properties": {
        "filter": {
          "type": "string",
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties."
        },
        "bigQueryDestination": {
          "description": "Specified if sink is a BigQuery table.",
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to export data from."
        },
        "kmsKey": {
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}",
          "type": "string"
        },
        "writeDisposition": {
          "description": "Options for what to do if the destination table already exists.",
          "enumDescriptions": [
            "Write disposition is not specified. Defaults to WRITE_TRUNCATE.",
            "If the table already exists, BigQuery will overwrite the table data and use the schema from the load.",
            "If the table already exists, BigQuery will append data to the table."
          ],
          "enum": [
            "WRITE_DISPOSITION_UNSPECIFIED",
            "WRITE_TRUNCATE",
            "WRITE_APPEND"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest": {
      "description": "The request to undeploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The issue model to undeploy."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig": {
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig",
      "properties": {
        "medium": {
          "type": "string",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "description": "Required. The medium transcript objects represent.",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ]
        }
      },
      "type": "object",
      "description": "Configuration for processing transcript objects."
    },
    "GoogleCloudContactcenterinsightsV1alpha1InterruptionData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1InterruptionData",
      "description": "The data for an interruption annotation.",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1Issue": {
      "type": "object",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time at which this issue was created."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The most recent time that this issue was updated.",
          "format": "google-datetime"
        },
        "sampleUtterances": {
          "description": "Output only. Resource names of the sample representative utterances that match to this issue.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "displayName": {
          "description": "The representative name for the issue.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1Issue",
      "description": "The issue resource."
    },
    "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment": {
      "description": "One channel of conversation-level sentiment data.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment",
      "properties": {
        "sentimentData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "Data specifying sentiment."
        },
        "channelTag": {
          "format": "int32",
          "type": "integer",
          "description": "The channel of the audio that the data applies to."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment": {
      "type": "object",
      "description": "A segment of a full transcript.",
      "properties": {
        "words": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo"
          },
          "description": "A list of the word-specific information for each word in the segment."
        },
        "channelTag": {
          "type": "integer",
          "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.",
          "format": "int32"
        },
        "messageTime": {
          "format": "google-datetime",
          "description": "The time that the message occurred, if provided.",
          "type": "string"
        },
        "confidence": {
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.",
          "format": "float",
          "type": "number"
        },
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "The sentiment for this transcript segment."
        },
        "segmentParticipant": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationParticipant",
          "description": "The participant of this segment."
        },
        "languageCode": {
          "type": "string",
          "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\"."
        },
        "dialogflowSegmentMetadata": {
          "description": "CCAI metadata relating to the current transcript segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata"
        },
        "text": {
          "description": "The text of this segment.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment"
    },
    "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig": {
      "type": "object",
      "description": "Configuration for summarization.",
      "id": "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig",
      "properties": {
        "summarizationModel": {
          "description": "Default summarization model to be used.",
          "enum": [
            "SUMMARIZATION_MODEL_UNSPECIFIED",
            "BASELINE_MODEL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified summarization model.",
            "The Insights baseline model."
          ]
        },
        "conversationProfile": {
          "description": "Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscript": {
      "properties": {
        "transcriptSegments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment"
          },
          "description": "A list of sequential transcript segments that comprise the conversation."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscript",
      "description": "A message representing the transcript of a conversation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1AnnotatorSelector": {
      "properties": {
        "runIssueModelAnnotator": {
          "description": "Whether to run the issue model annotator. A model should have already been deployed for this to take effect.",
          "type": "boolean"
        },
        "summarizationConfig": {
          "description": "Configuration for the summarization annotator.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig"
        },
        "issueModels": {
          "description": "The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "runInterruptionAnnotator": {
          "description": "Whether to run the interruption annotator.",
          "type": "boolean"
        },
        "phraseMatchers": {
          "items": {
            "type": "string"
          },
          "description": "The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
          "type": "array"
        },
        "runEntityAnnotator": {
          "description": "Whether to run the entity annotator.",
          "type": "boolean"
        },
        "runIntentAnnotator": {
          "type": "boolean",
          "description": "Whether to run the intent annotator."
        },
        "runPhraseMatcherAnnotator": {
          "description": "Whether to run the active phrase matcher annotator(s).",
          "type": "boolean"
        },
        "runSummarizationAnnotator": {
          "type": "boolean",
          "description": "Whether to run the summarization annotator."
        },
        "runSentimentAnnotator": {
          "description": "Whether to run the sentiment annotator.",
          "type": "boolean"
        },
        "runSilenceAnnotator": {
          "type": "boolean",
          "description": "Whether to run the silence annotator."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
      "description": "Selector of all available annotators and phrase matchers to run."
    },
    "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse": {
      "properties": {
        "currentStats": {
          "description": "The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats"
        }
      },
      "description": "Response of querying an issue model's statistics.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse"
    },
    "GoogleCloudContactcenterinsightsV1AnswerFeedback": {
      "properties": {
        "displayed": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI."
        },
        "correctnessLevel": {
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ],
          "description": "The correctness level of an answer.",
          "type": "string",
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ]
        },
        "clicked": {
          "description": "Indicates whether an answer or item was clicked by the human agent.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "The feedback that the customer has about a certain answer in the conversation.",
      "id": "GoogleCloudContactcenterinsightsV1AnswerFeedback"
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata": {
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest",
          "description": "The original request for creation."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata",
      "type": "object",
      "description": "Metadata for creating an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant",
      "type": "object",
      "properties": {
        "role": {
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "type": "string",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "description": "The role of the participant."
        },
        "obfuscatedExternalUserId": {
          "type": "string",
          "description": "Obfuscated user ID from Dialogflow."
        },
        "dialogflowParticipant": {
          "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "type": "string",
          "deprecated": true
        },
        "userId": {
          "type": "string",
          "description": "A user-specified ID representing the participant."
        },
        "dialogflowParticipantName": {
          "type": "string",
          "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}"
        }
      },
      "description": "The call participant speaking for a given utterance."
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsMetadata": {
      "properties": {
        "request": {
          "readOnly": true,
          "description": "Output only. The original request for ingest.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest"
        },
        "partialErrors": {
          "type": "array",
          "description": "Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.",
          "readOnly": true,
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true
        },
        "ingestConversationsStats": {
          "description": "Output only. Statistics for IngestConversations operation.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        }
      },
      "description": "The metadata for an IngestConversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1HoldData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1HoldData",
      "description": "The data for a hold annotation.",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData": {
      "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of the entity mention.",
          "enumDescriptions": [
            "Unspecified.",
            "Proper noun.",
            "Common noun (or noun compound)."
          ],
          "enum": [
            "MENTION_TYPE_UNSPECIFIED",
            "PROPER",
            "COMMON"
          ]
        },
        "sentiment": {
          "description": "Sentiment expressed for this mention of the entity.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
        },
        "entityUniqueId": {
          "type": "string",
          "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse": {
      "properties": {},
      "description": "The response to an IngestConversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent",
      "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE."
    },
    "GoogleCloudContactcenterinsightsV1IssueModelResult": {
      "properties": {
        "issueModel": {
          "type": "string",
          "description": "Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
        },
        "issues": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment"
          },
          "type": "array",
          "description": "All the matched issues."
        }
      },
      "description": "Issue Modeling result on a conversation.",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelResult",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata",
      "properties": {
        "partialErrors": {
          "description": "Partial errors during bulk delete conversations operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest",
          "description": "The original request for bulk delete."
        },
        "endTime": {
          "description": "The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        },
        "createTime": {
          "description": "The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "The metadata for a bulk delete conversations operation."
    },
    "GoogleLongrunningOperation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "id": "GoogleLongrunningOperation",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData",
      "description": "Agent Assist Smart Reply data.",
      "properties": {
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "reply": {
          "type": "string",
          "description": "The content of the reply."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map that contains metadata about the Smart Reply and the document from which it originates."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata": {
      "properties": {
        "phraseMatchers": {
          "description": "All the matched phrase matchers in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData"
          },
          "type": "object"
        },
        "issueModelResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult",
          "description": "Overall conversation-level issue modeling result."
        },
        "intents": {
          "description": "All the matched intents in the call.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1Intent"
          }
        },
        "sentiments": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment"
          },
          "description": "Overall conversation-level sentiment for each channel of the call.",
          "type": "array"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation"
          },
          "description": "A list of call annotations that apply to this call."
        },
        "entities": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1Entity"
          },
          "type": "object",
          "description": "All the entities in the call."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata",
      "description": "Call-specific metadata created during analysis."
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo",
      "description": "Word-level info for words in a transcript.",
      "properties": {
        "endOffset": {
          "format": "google-duration",
          "type": "string",
          "description": "Time offset of the end of this word relative to the beginning of the total conversation."
        },
        "word": {
          "description": "The word itself. Includes punctuation marks that surround the word.",
          "type": "string"
        },
        "startOffset": {
          "type": "string",
          "format": "google-duration",
          "description": "Time offset of the start of this word relative to the beginning of the total conversation."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationParticipant": {
      "type": "object",
      "description": "The call participant speaking for a given utterance.",
      "properties": {
        "obfuscatedExternalUserId": {
          "description": "Obfuscated user ID from Dialogflow.",
          "type": "string"
        },
        "dialogflowParticipantName": {
          "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "type": "string"
        },
        "role": {
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "description": "The role of the participant."
        },
        "dialogflowParticipant": {
          "type": "string",
          "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "deprecated": true
        },
        "userId": {
          "description": "A user-specified ID representing the participant.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationParticipant"
    },
    "GoogleCloudContactcenterinsightsV1ListAnalysesResponse": {
      "description": "The response to list analyses.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse",
      "properties": {
        "analyses": {
          "description": "The analyses that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats",
      "properties": {
        "failedIngestCount": {
          "readOnly": true,
          "description": "Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.",
          "format": "int32",
          "type": "integer"
        },
        "processedObjectCount": {
          "format": "int32",
          "description": "Output only. The number of objects processed during the ingest operation.",
          "readOnly": true,
          "type": "integer"
        },
        "successfulIngestCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "description": "Output only. The number of new conversations added during this ingest operation."
        },
        "duplicatesSkippedCount": {
          "readOnly": true,
          "format": "int32",
          "type": "integer",
          "description": "Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested."
        }
      },
      "description": "Statistics for IngestConversations operation."
    },
    "GoogleCloudContactcenterinsightsV1UploadConversationRequest": {
      "type": "object",
      "description": "Request to upload a conversation.",
      "id": "GoogleCloudContactcenterinsightsV1UploadConversationRequest",
      "properties": {
        "conversation": {
          "description": "Required. The conversation resource to create.",
          "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
        },
        "parent": {
          "description": "Required. The parent resource of the conversation.",
          "type": "string"
        },
        "redactionConfig": {
          "description": "Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig"
        },
        "speechConfig": {
          "description": "Optional. Default Speech-to-Text configuration. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1SpeechConfig"
        },
        "conversationId": {
          "description": "Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ListIssuesResponse": {
      "description": "The response of listing issues.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListIssuesResponse",
      "properties": {
        "issues": {
          "type": "array",
          "description": "The issues that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Issue"
          }
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata": {
      "properties": {
        "smartReplyAllowlistCovered": {
          "type": "boolean",
          "description": "Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
      "type": "object",
      "description": "Metadata from Dialogflow relating to the current transcript segment."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest": {
      "description": "The request to export insights.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest",
      "properties": {
        "filter": {
          "type": "string",
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties."
        },
        "kmsKey": {
          "type": "string",
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}"
        },
        "parent": {
          "description": "Required. The parent resource to export data from.",
          "type": "string"
        },
        "writeDisposition": {
          "enumDescriptions": [
            "Write disposition is not specified. Defaults to WRITE_TRUNCATE.",
            "If the table already exists, BigQuery will overwrite the table data and use the schema from the load.",
            "If the table already exists, BigQuery will append data to the table."
          ],
          "description": "Options for what to do if the destination table already exists.",
          "type": "string",
          "enum": [
            "WRITE_DISPOSITION_UNSPECIFIED",
            "WRITE_TRUNCATE",
            "WRITE_APPEND"
          ]
        },
        "bigQueryDestination": {
          "description": "Specified if sink is a BigQuery table.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1DialogflowSource": {
      "id": "GoogleCloudContactcenterinsightsV1DialogflowSource",
      "type": "object",
      "properties": {
        "dialogflowConversation": {
          "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "readOnly": true,
          "type": "string"
        },
        "audioUri": {
          "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
          "type": "string"
        }
      },
      "description": "A Dialogflow source of conversation data."
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup",
      "description": "A message representing a rule in the phrase matcher.",
      "properties": {
        "phraseMatchRules": {
          "type": "array",
          "description": "A list of phrase match rules that are included in this group.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRule"
          }
        },
        "type": {
          "enum": [
            "PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ],
          "type": "string",
          "description": "Required. The type of this phrase match rule group.",
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rules or there is no match.",
            "If any of the phrase match rules are met, there is a match."
          ]
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource": {
      "properties": {
        "dialogflowConversation": {
          "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "type": "string",
          "readOnly": true
        },
        "audioUri": {
          "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource",
      "description": "A Dialogflow source of conversation data.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData": {
      "type": "object",
      "properties": {
        "question": {
          "description": "The corresponding FAQ question.",
          "type": "string"
        },
        "source": {
          "type": "string",
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}."
        },
        "confidenceScore": {
          "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "float"
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "metadata": {
          "description": "Map that contains metadata about the FAQ answer and the document that it originates from.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "answer": {
          "type": "string",
          "description": "The piece of text from the `source` knowledge base document."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData",
      "description": "Agent Assist frequently-asked-question answer data."
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata": {
      "type": "object",
      "description": "Metadata for an export insights operation.",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "request": {
          "description": "The original request for export.",
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
        },
        "partialErrors": {
          "description": "Partial errors during export operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination": {
      "type": "object",
      "description": "A BigQuery Table Reference.",
      "properties": {
        "projectId": {
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.",
          "type": "string"
        },
        "table": {
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        },
        "dataset": {
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination"
    },
    "GoogleCloudContactcenterinsightsV1ExactMatchConfig": {
      "type": "object",
      "properties": {
        "caseSensitive": {
          "type": "boolean",
          "description": "Whether to consider case sensitivity when performing an exact match."
        }
      },
      "description": "Exact match configuration.",
      "id": "GoogleCloudContactcenterinsightsV1ExactMatchConfig"
    },
    "GoogleCloudContactcenterinsightsV1View": {
      "description": "The View resource.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1View",
      "properties": {
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time at which this view was created.",
          "format": "google-datetime"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The most recent time at which the view was updated.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The human-readable display name of the view."
        },
        "value": {
          "description": "String with specific view properties, must be non-empty.",
          "type": "string"
        },
        "name": {
          "description": "Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata": {
      "description": "Metadata for an export insights operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata",
      "properties": {
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest",
          "description": "The original request for export."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Partial errors during export operation that might cause the operation output to be incomplete.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata": {
      "description": "Metadata for deleting an issue model.",
      "properties": {
        "request": {
          "description": "The original request for deletion.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest"
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector": {
      "properties": {
        "runIntentAnnotator": {
          "type": "boolean",
          "description": "Whether to run the intent annotator."
        },
        "issueModels": {
          "description": "The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "runSentimentAnnotator": {
          "description": "Whether to run the sentiment annotator.",
          "type": "boolean"
        },
        "runPhraseMatcherAnnotator": {
          "description": "Whether to run the active phrase matcher annotator(s).",
          "type": "boolean"
        },
        "runInterruptionAnnotator": {
          "type": "boolean",
          "description": "Whether to run the interruption annotator."
        },
        "runSilenceAnnotator": {
          "type": "boolean",
          "description": "Whether to run the silence annotator."
        },
        "runEntityAnnotator": {
          "description": "Whether to run the entity annotator.",
          "type": "boolean"
        },
        "runIssueModelAnnotator": {
          "type": "boolean",
          "description": "Whether to run the issue model annotator. A model should have already been deployed for this to take effect."
        },
        "phraseMatchers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}"
        },
        "runSummarizationAnnotator": {
          "description": "Whether to run the summarization annotator.",
          "type": "boolean"
        },
        "summarizationConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig",
          "description": "Configuration for the summarization annotator."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
      "description": "Selector of all available annotators and phrase matchers to run.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1AnnotationBoundary": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
      "description": "A point in a conversation that marks the start or the end of an annotation.",
      "properties": {
        "transcriptIndex": {
          "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.",
          "format": "int32",
          "type": "integer"
        },
        "wordIndex": {
          "type": "integer",
          "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata": {
      "description": "Metadata for creating an issue model.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest",
          "description": "The original request for creation."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource": {
      "properties": {
        "dialogflowSource": {
          "description": "The source when the conversation comes from Dialogflow.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource"
        },
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1GcsSource",
          "description": "A Cloud Storage location specification for the audio and transcript."
        }
      },
      "description": "The conversation source, which is a combination of transcript, audio, and metadata.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ArticleSuggestionData": {
      "id": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData",
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}"
        },
        "title": {
          "type": "string",
          "description": "Article title."
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "description": "Map that contains metadata about the Article Suggestion and the document that it originates from.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "uri": {
          "type": "string",
          "description": "Article URI."
        },
        "confidenceScore": {
          "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "float"
        }
      },
      "description": "Agent Assist Article Suggestion data."
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig": {
      "properties": {
        "conversationProfile": {
          "description": "Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}",
          "type": "string"
        },
        "summarizationModel": {
          "enumDescriptions": [
            "Unspecified summarization model.",
            "The Insights baseline model."
          ],
          "type": "string",
          "description": "Default summarization model to be used.",
          "enum": [
            "SUMMARIZATION_MODEL_UNSPECIFIED",
            "BASELINE_MODEL"
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig",
      "description": "Configuration for summarization."
    },
    "GoogleCloudContactcenterinsightsV1CallAnnotation": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CallAnnotation",
      "description": "A piece of metadata that applies to a window of a call.",
      "properties": {
        "channelTag": {
          "type": "integer",
          "format": "int32",
          "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated."
        },
        "annotationEndBoundary": {
          "description": "The boundary in the conversation where the annotation ends, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "phraseMatchData": {
          "description": "Data specifying a phrase match.",
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
        },
        "issueMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueMatchData",
          "description": "Data specifying an issue match."
        },
        "annotationStartBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        },
        "intentMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1IntentMatchData",
          "description": "Data specifying an intent match."
        },
        "silenceData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SilenceData",
          "description": "Data specifying silence."
        },
        "interruptionData": {
          "$ref": "GoogleCloudContactcenterinsightsV1InterruptionData",
          "description": "Data specifying an interruption."
        },
        "entityMentionData": {
          "$ref": "GoogleCloudContactcenterinsightsV1EntityMentionData",
          "description": "Data specifying an entity mention."
        },
        "holdData": {
          "$ref": "GoogleCloudContactcenterinsightsV1HoldData",
          "description": "Data specifying a hold."
        },
        "sentimentData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "Data specifying sentiment."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest": {
      "description": "The request to delete conversations in bulk.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest",
      "properties": {
        "force": {
          "type": "boolean",
          "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses."
        },
        "filter": {
          "description": "Filter used to select the subset of conversations to analyze.",
          "type": "string"
        },
        "maxDeleteCount": {
          "description": "Maximum number of conversations to delete. The default is 1000. It can be changed by setting the `max_delete_count` field.",
          "format": "int32",
          "type": "integer"
        },
        "parent": {
          "description": "Required. The parent resource to create analyses in. Format: projects/{project}/locations/{location}",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ConversationCallMetadata": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata",
      "properties": {
        "agentChannel": {
          "type": "integer",
          "format": "int32",
          "description": "The audio channel that contains the agent."
        },
        "customerChannel": {
          "format": "int32",
          "description": "The audio channel that contains the customer.",
          "type": "integer"
        }
      },
      "description": "Call-specific metadata."
    },
    "GoogleCloudContactcenterinsightsV1UploadConversationMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1UploadConversationMetadata",
      "description": "The metadata for an UploadConversation operation.",
      "type": "object",
      "properties": {
        "analysisOperation": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The operation name for a successfully created analysis operation, if any."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1UploadConversationRequest",
          "description": "Output only. The original request.",
          "readOnly": true
        },
        "appliedRedactionConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig",
          "description": "Output only. The redaction config applied to the uploaded conversation.",
          "readOnly": true
        }
      }
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData",
      "description": "Dialogflow interaction data.",
      "type": "object",
      "properties": {
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "dialogflowIntentId": {
          "type": "string",
          "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}"
        }
      }
    },
    "GoogleLongrunningListOperationsResponse": {
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "id": "GoogleLongrunningListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          }
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata": {
      "properties": {
        "customerChannel": {
          "description": "The audio channel that contains the customer.",
          "format": "int32",
          "type": "integer"
        },
        "agentChannel": {
          "format": "int32",
          "type": "integer",
          "description": "The audio channel that contains the agent."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata",
      "description": "Call-specific metadata.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueAssignment": {
      "description": "Information about the issue.",
      "properties": {
        "issue": {
          "type": "string",
          "description": "Resource name of the assigned issue."
        },
        "displayName": {
          "type": "string",
          "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then."
        },
        "score": {
          "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1].",
          "format": "double",
          "type": "number"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueAssignment",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination": {
      "properties": {
        "projectId": {
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.",
          "type": "string"
        },
        "table": {
          "type": "string",
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error."
        },
        "dataset": {
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination",
      "type": "object",
      "description": "A BigQuery Table Reference."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats": {
      "properties": {
        "analyzedConversationsCount": {
          "description": "Number of conversations the issue model has analyzed at this point in time.",
          "format": "int64",
          "type": "string"
        },
        "issueStats": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats"
          },
          "type": "object",
          "description": "Statistics on each issue. Key is the issue's resource name."
        },
        "unclassifiedConversationsCount": {
          "format": "int64",
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats",
      "description": "Aggregated statistics about an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse",
      "description": "Response for an export insights operation.",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1Conversation": {
      "properties": {
        "labels": {
          "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ttl": {
          "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.",
          "format": "google-duration",
          "type": "string"
        },
        "startTime": {
          "description": "The time at which the conversation started.",
          "format": "google-datetime",
          "type": "string"
        },
        "duration": {
          "description": "Output only. The duration of the conversation.",
          "format": "google-duration",
          "readOnly": true,
          "type": "string"
        },
        "agentId": {
          "description": "An opaque, user-specified string representing the human agent who handled the conversation.",
          "type": "string"
        },
        "medium": {
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "description": "Immutable. The conversation medium, if unspecified will default to PHONE_CALL.",
          "type": "string",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ]
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which the conversation was created.",
          "readOnly": true,
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the conversation was updated.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "latestSummary": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData",
          "readOnly": true,
          "description": "Output only. Latest summary of the conversation."
        },
        "dialogflowIntents": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1DialogflowIntent"
          },
          "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}",
          "type": "object",
          "readOnly": true
        },
        "callMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata",
          "description": "Call-specific metadata."
        },
        "runtimeAnnotations": {
          "description": "Output only. The annotations that were generated during the customer and agent interaction.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation"
          },
          "readOnly": true
        },
        "obfuscatedUserId": {
          "description": "Obfuscated user ID which the customer sent to us.",
          "type": "string"
        },
        "dataSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationDataSource",
          "description": "The source of the audio and transcription for the conversation."
        },
        "transcript": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscript",
          "description": "Output only. The conversation transcript.",
          "readOnly": true
        },
        "languageCode": {
          "type": "string",
          "description": "A user-specified language code for the conversation."
        },
        "name": {
          "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "type": "string"
        },
        "latestAnalysis": {
          "description": "Output only. The conversation's latest analysis, if one exists.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
        },
        "expireTime": {
          "format": "google-datetime",
          "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.",
          "type": "string"
        },
        "turnCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Output only. The number of turns in the conversation."
        }
      },
      "description": "The conversation resource.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1Conversation"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment": {
      "properties": {
        "messageTime": {
          "description": "The time that the message occurred, if provided.",
          "format": "google-datetime",
          "type": "string"
        },
        "words": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo"
          },
          "description": "A list of the word-specific information for each word in the segment."
        },
        "languageCode": {
          "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".",
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset."
        },
        "segmentParticipant": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant",
          "description": "The participant of this segment."
        },
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
          "description": "The sentiment for this transcript segment."
        },
        "channelTag": {
          "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.",
          "format": "int32",
          "type": "integer"
        },
        "text": {
          "description": "The text of this segment.",
          "type": "string"
        },
        "dialogflowSegmentMetadata": {
          "description": "CCAI metadata relating to the current transcript segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment",
      "description": "A segment of a full transcript.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1Conversation": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1Conversation",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "A user-specified language code for the conversation."
        },
        "turnCount": {
          "type": "integer",
          "format": "int32",
          "description": "Output only. The number of turns in the conversation.",
          "readOnly": true
        },
        "latestAnalysis": {
          "readOnly": true,
          "description": "Output only. The conversation's latest analysis, if one exists.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1Analysis"
        },
        "dataSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource",
          "description": "The source of the audio and transcription for the conversation."
        },
        "callMetadata": {
          "description": "Call-specific metadata.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata"
        },
        "latestSummary": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData",
          "description": "Output only. Latest summary of the conversation."
        },
        "duration": {
          "type": "string",
          "description": "Output only. The duration of the conversation.",
          "format": "google-duration",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which the conversation was created.",
          "type": "string"
        },
        "agentId": {
          "description": "An opaque, user-specified string representing the human agent who handled the conversation.",
          "type": "string"
        },
        "runtimeAnnotations": {
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation"
          },
          "type": "array",
          "description": "Output only. The annotations that were generated during the customer and agent interaction."
        },
        "labels": {
          "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "dialogflowIntents": {
          "readOnly": true,
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent"
          },
          "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}",
          "type": "object"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The most recent time at which the conversation was updated.",
          "format": "google-datetime"
        },
        "ttl": {
          "format": "google-duration",
          "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.",
          "type": "string"
        },
        "startTime": {
          "description": "The time at which the conversation started.",
          "type": "string",
          "format": "google-datetime"
        },
        "obfuscatedUserId": {
          "type": "string",
          "description": "Obfuscated user ID which the customer sent to us."
        },
        "expireTime": {
          "type": "string",
          "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.",
          "format": "google-datetime"
        },
        "medium": {
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "description": "Immutable. The conversation medium, if unspecified will default to PHONE_CALL.",
          "type": "string",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ]
        },
        "name": {
          "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "type": "string"
        },
        "transcript": {
          "description": "Output only. The conversation transcript.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript"
        }
      },
      "description": "The conversation resource.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata": {
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest",
          "description": "The original request for deletion."
        }
      },
      "description": "Metadata for deleting an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse": {
      "description": "The response to undeploy an issue model.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse"
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest": {
      "description": "The request to delete an issue model.",
      "properties": {
        "name": {
          "description": "Required. The name of the issue model to delete.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest": {
      "description": "The request to analyze conversations in bulk.",
      "properties": {
        "parent": {
          "description": "Required. The parent resource to create analyses in.",
          "type": "string"
        },
        "filter": {
          "description": "Required. Filter used to select the subset of conversations to analyze.",
          "type": "string"
        },
        "analysisPercentage": {
          "format": "float",
          "type": "number",
          "description": "Required. Percentage of selected conversation to analyze, between [0, 100]."
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1FaqAnswerData": {
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the FAQ answer and the document that it originates from.",
          "type": "object"
        },
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.",
          "type": "string"
        },
        "answer": {
          "description": "The piece of text from the `source` knowledge base document.",
          "type": "string"
        },
        "question": {
          "type": "string",
          "description": "The corresponding FAQ question."
        },
        "confidenceScore": {
          "type": "number",
          "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float"
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1FaqAnswerData",
      "type": "object",
      "description": "Agent Assist frequently-asked-question answer data."
    },
    "GoogleCloudContactcenterinsightsV1SentimentData": {
      "description": "The data for a sentiment annotation.",
      "properties": {
        "score": {
          "type": "number",
          "description": "The sentiment score between -1.0 (negative) and 1.0 (positive).",
          "format": "float"
        },
        "magnitude": {
          "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.",
          "type": "number",
          "format": "float"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1SentimentData"
    },
    "GoogleCloudContactcenterinsightsV1IssueMatchData": {
      "id": "GoogleCloudContactcenterinsightsV1IssueMatchData",
      "description": "The data for an issue match annotation.",
      "properties": {
        "issueAssignment": {
          "description": "Information about the issue's assignment.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the phrase matcher."
        },
        "phraseMatcher": {
          "description": "The unique identifier (the resource name) of the phrase matcher.",
          "type": "string"
        }
      },
      "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData"
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The issue model to deploy."
        }
      },
      "description": "The request to deploy an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Settings": {
      "description": "The settings resource.",
      "type": "object",
      "properties": {
        "speechConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1SpeechConfig",
          "description": "Optional. Default Speech-to-Text resources to be used while ingesting audio files. Optional, CCAI Insights will create a default if not provided."
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time at which the settings were last updated.",
          "format": "google-datetime"
        },
        "languageCode": {
          "type": "string",
          "description": "A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to \"en-US\" if it is neither specified on the segment nor here."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings"
        },
        "redactionConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig",
          "description": "Default DLP redaction resources to be applied while ingesting conversations."
        },
        "analysisConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig",
          "description": "Default analysis settings."
        },
        "conversationTtl": {
          "description": "The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.",
          "type": "string",
          "format": "google-duration"
        },
        "pubsubNotificationSettings": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * \"all-triggers\": Notify each time any of the supported triggers occurs. * \"create-analysis\": Notify each time an analysis is created. * \"create-conversation\": Notify each time a conversation is created. * \"export-insights-data\": Notify each time an export is complete. * \"update-conversation\": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which the settings was created.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1Settings"
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest": {
      "properties": {
        "name": {
          "description": "Required. The issue model to undeploy.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest",
      "type": "object",
      "description": "The request to undeploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData": {
      "properties": {
        "suggestion": {
          "description": "The content of the suggestion.",
          "type": "string"
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates."
        },
        "confidenceScore": {
          "type": "number",
          "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "double"
        }
      },
      "type": "object",
      "description": "Agent Assist Smart Compose suggestion data.",
      "id": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse": {
      "description": "The response to deploy an issue model.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1Intent": {
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the intent."
        }
      },
      "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1Intent"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
      "description": "Metadata from Dialogflow relating to the current transcript segment.",
      "properties": {
        "smartReplyAllowlistCovered": {
          "type": "boolean",
          "description": "Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Entity": {
      "properties": {
        "salience": {
          "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.",
          "type": "number",
          "format": "float"
        },
        "type": {
          "enumDescriptions": [
            "Unspecified.",
            "Person.",
            "Location.",
            "Organization.",
            "Event.",
            "Artwork.",
            "Consumer product.",
            "Other types of entities.",
            "Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.",
            "Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.",
            "Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.",
            "Number. The metadata is the number itself.",
            "Price. The metadata identifies the `value` and `currency`."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSON",
            "LOCATION",
            "ORGANIZATION",
            "EVENT",
            "WORK_OF_ART",
            "CONSUMER_GOOD",
            "OTHER",
            "PHONE_NUMBER",
            "ADDRESS",
            "DATE",
            "NUMBER",
            "PRICE"
          ],
          "type": "string",
          "description": "The entity type."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below."
        },
        "sentiment": {
          "description": "The aggregate sentiment expressed for this entity in the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the entity."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1Entity",
      "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueModel": {
      "description": "The issue model resource.",
      "id": "GoogleCloudContactcenterinsightsV1IssueModel",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time at which this issue model was created."
        },
        "languageCode": {
          "type": "string",
          "description": "Language of the model."
        },
        "inputDataConfig": {
          "description": "Configs for the input data that used to create the issue model.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig"
        },
        "modelType": {
          "description": "Type of the model.",
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "TYPE_V1",
            "TYPE_V2"
          ],
          "enumDescriptions": [
            "Unspecified model type.",
            "Type V1.",
            "Type V2."
          ],
          "type": "string"
        },
        "issueCount": {
          "description": "Output only. Number of issues in this issue model.",
          "format": "int64",
          "readOnly": true,
          "type": "string"
        },
        "trainingStats": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
          "description": "Output only. Immutable. The issue model's label statistics on its training data."
        },
        "displayName": {
          "description": "The representative name for the issue model.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the issue model was updated.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "description": "Output only. State of the model.",
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ]
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries": {
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries",
      "properties": {
        "points": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval"
          },
          "type": "array",
          "description": "An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window."
        },
        "intervalDuration": {
          "description": "The duration of each interval.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A time series representing conversations over time."
    },
    "GoogleCloudContactcenterinsightsV1alpha1SentimentData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
      "description": "The data for a sentiment annotation.",
      "properties": {
        "score": {
          "description": "The sentiment score between -1.0 (negative) and 1.0 (positive).",
          "type": "number",
          "format": "float"
        },
        "magnitude": {
          "type": "number",
          "format": "float",
          "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata": {
      "description": "Metadata for deploying an issue model.",
      "type": "object",
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest",
          "description": "The original request for deployment."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1DialogflowInteractionData": {
      "properties": {
        "confidence": {
          "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "float"
        },
        "dialogflowIntentId": {
          "type": "string",
          "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}"
        }
      },
      "description": "Dialogflow interaction data.",
      "id": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource",
      "description": "Configuration for Cloud Storage bucket sources.",
      "type": "object",
      "properties": {
        "bucketUri": {
          "type": "string",
          "description": "Required. The Cloud Storage bucket containing source objects."
        },
        "bucketObjectType": {
          "type": "string",
          "enumDescriptions": [
            "The object type is unspecified and will default to TRANSCRIPT.",
            "The object is a transcript.",
            "The object is an audio file."
          ],
          "description": "Optional. Specifies the type of the objects in `bucket_uri`.",
          "enum": [
            "BUCKET_OBJECT_TYPE_UNSPECIFIED",
            "TRANSCRIPT",
            "AUDIO"
          ]
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment": {
      "properties": {
        "sentimentData": {
          "description": "Data specifying sentiment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
        },
        "channelTag": {
          "format": "int32",
          "type": "integer",
          "description": "The channel of the audio that the data applies to."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment",
      "description": "One channel of conversation-level sentiment data."
    },
    "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata": {
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation finished running."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest",
          "description": "The original request for bulk delete."
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Partial errors during bulk delete conversations operation that might cause the operation output to be incomplete."
        },
        "createTime": {
          "type": "string",
          "description": "The time the operation was created.",
          "format": "google-datetime"
        }
      },
      "description": "The metadata for a bulk delete conversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig",
      "properties": {
        "filter": {
          "description": "A filter to reduce the conversations used for training the model to a specific subset.",
          "type": "string"
        },
        "trainingConversationsCount": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Number of conversations used in training. Output only.",
          "format": "int64"
        },
        "medium": {
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.",
          "type": "string",
          "deprecated": true,
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ]
        }
      },
      "description": "Configs for the input data used to create the issue model."
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "getSettings": {
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "id": "contactcenterinsights.projects.locations.getSettings",
              "httpMethod": "GET",
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets project-level settings.",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "parameters": {
                "name": {
                  "description": "Required. The name of the settings resource to get.",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              }
            },
            "updateSettings": {
              "parameterOrder": [
                "name"
              ],
              "id": "contactcenterinsights.projects.locations.updateSettings",
              "request": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "path": "v1/{+name}",
              "httpMethod": "PATCH",
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Required. The list of fields to be updated.",
                  "type": "string"
                },
                "name": {
                  "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$"
                }
              },
              "description": "Updates project-level settings.",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings"
            }
          },
          "resources": {
            "views": {
              "methods": {
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the view to get.",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "httpMethod": "GET",
                  "id": "contactcenterinsights.projects.locations.views.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a view."
                },
                "delete": {
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "description": "Deletes a view.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "id": "contactcenterinsights.projects.locations.views.delete",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the view to delete.",
                      "location": "path",
                      "required": true
                    }
                  }
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.views.patch",
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to be updated.",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "description": "Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates a view.",
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/views",
                  "httpMethod": "GET",
                  "description": "Lists views.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of views to return in the response. If this value is zero, the service will select a default size. A call may return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                      "type": "integer",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListViewsResponse`; indicates that this is a continuation of a prior `ListViews` call and the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent resource of the views.",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListViewsResponse"
                  },
                  "id": "contactcenterinsights.projects.locations.views.list"
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the view. Required. The location to create a view for. Format: `projects//locations/` or `projects//locations/`",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a view.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/views",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "id": "contactcenterinsights.projects.locations.views.create"
                }
              }
            },
            "phraseMatchers": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the phrase matcher to delete.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.delete",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a phrase matcher.",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  }
                },
                "create": {
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "description": "Creates a phrase matcher.",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The parent resource of the phrase matcher. Required. The location to create a phrase matcher for. Format: `projects//locations/` or `projects//locations/`",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/phraseMatchers",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.patch",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "The list of fields to be updated.",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "required": true,
                      "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "description": "Updates a phrase matcher.",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  }
                },
                "get": {
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "description": "Required. The name of the phrase matcher to get.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "httpMethod": "GET",
                  "description": "Gets a phrase matcher.",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "httpMethod": "GET",
                  "description": "Lists phrase matchers.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse"
                  },
                  "parameters": {
                    "filter": {
                      "description": "A filter to reduce results to a specific subset. Useful for querying phrase matchers with specific properties.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListPhraseMatchersResponse`. This value indicates that this is a continuation of a prior `ListPhraseMatchers` call and that the system should return the next page of data.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "The maximum number of phrase matchers to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent resource of the phrase matcher.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.list",
                  "path": "v1/{+parent}/phraseMatchers"
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "path": "v1/{+name}:cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "id": "contactcenterinsights.projects.locations.operations.cancel",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.operations.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "list": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The name of the operation's parent resource.",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "path": "v1/{+name}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenterinsights.projects.locations.operations.list",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations"
                }
              }
            },
            "insightsdata": {
              "methods": {
                "export": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.insightsdata.export",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource to export data from.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+parent}/insightsdata:export",
                  "description": "Export insights data to a destination defined in the request body.",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "conversations": {
              "resources": {
                "analyses": {
                  "methods": {
                    "delete": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}",
                      "httpMethod": "DELETE",
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the analysis to delete.",
                          "required": true
                        }
                      },
                      "description": "Deletes an analysis.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.delete"
                    },
                    "list": {
                      "description": "Lists analyses.",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "format": "int32",
                          "description": "The maximum number of analyses to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available."
                        },
                        "parent": {
                          "type": "string",
                          "description": "Required. The parent resource of the analyses.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "required": true,
                          "location": "path"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties."
                        },
                        "pageToken": {
                          "description": "The value returned by the last `ListAnalysesResponse`; indicates that this is a continuation of a prior `ListAnalyses` call and the system should return the next page of data.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse"
                      },
                      "httpMethod": "GET",
                      "path": "v1/{+parent}/analyses"
                    },
                    "get": {
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the analysis to get.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "description": "Gets an analysis.",
                      "httpMethod": "GET",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.get"
                    },
                    "create": {
                      "path": "v1/{+parent}/analyses",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. The parent resource of the analysis.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates an analysis. The long running operation is done when the analysis has completed.",
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.create"
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "description": "Gets a conversation.",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "id": "contactcenterinsights.projects.locations.conversations.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the conversation to get.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$"
                    },
                    "view": {
                      "type": "string",
                      "location": "query",
                      "description": "The level of details of the conversation. Default is `FULL`.",
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "FULL",
                        "BASIC"
                      ],
                      "enumDescriptions": [
                        "The conversation view is not specified. * Defaults to `FULL` in `GetConversationRequest`. * Defaults to `BASIC` in `ListConversationsRequest`.",
                        "Populates all fields in the conversation.",
                        "Populates all fields in the conversation except the transcript."
                      ]
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "id": "contactcenterinsights.projects.locations.conversations.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListConversationsResponse"
                  },
                  "path": "v1/{+parent}/conversations",
                  "parameters": {
                    "view": {
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "FULL",
                        "BASIC"
                      ],
                      "description": "The level of details of the conversation. Default is `BASIC`.",
                      "type": "string",
                      "location": "query",
                      "enumDescriptions": [
                        "The conversation view is not specified. * Defaults to `FULL` in `GetConversationRequest`. * Defaults to `BASIC` in `ListConversationsRequest`.",
                        "Populates all fields in the conversation.",
                        "Populates all fields in the conversation except the transcript."
                      ]
                    },
                    "pageSize": {
                      "description": "The maximum number of conversations to return in the response. A valid page size ranges from 0 to 1,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent resource of the conversation.",
                      "required": true
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The value returned by the last `ListConversationsResponse`. This value indicates that this is a continuation of a prior `ListConversations` call and that the system should return the next page of data."
                    }
                  },
                  "description": "Lists conversations.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "upload": {
                  "id": "contactcenterinsights.projects.locations.conversations.upload",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent resource of the conversation."
                    }
                  },
                  "description": "Create a longrunning conversation upload operation. This method differs from CreateConversation by allowing audio transcription and optional DLP redaction.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:upload",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1UploadConversationRequest"
                  },
                  "path": "v1/{+parent}/conversations:upload"
                },
                "calculateStats": {
                  "description": "Gets conversation statistics.",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "A filter to reduce results to a specific subset. This field is useful for getting statistics about conversations with specific properties."
                    },
                    "location": {
                      "type": "string",
                      "description": "Required. The location of the conversations.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "path": "v1/{+location}/conversations:calculateStats",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse"
                  },
                  "id": "contactcenterinsights.projects.locations.conversations.calculateStats",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "location"
                  ]
                },
                "bulkAnalyze": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze",
                  "id": "contactcenterinsights.projects.locations.conversations.bulkAnalyze",
                  "path": "v1/{+parent}/conversations:bulkAnalyze",
                  "description": "Analyzes multiple conversations in a single request.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent resource to create analyses in.",
                      "location": "path",
                      "required": true
                    }
                  }
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the conversation to delete."
                    },
                    "force": {
                      "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.conversations.delete",
                  "httpMethod": "DELETE",
                  "description": "Deletes a conversation.",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}"
                },
                "ingest": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/conversations:ingest",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest",
                  "id": "contactcenterinsights.projects.locations.conversations.ingest",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest"
                  },
                  "description": "Imports conversations and processes them according to the user's configuration.",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent resource for new conversations.",
                      "required": true,
                      "type": "string"
                    }
                  }
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "path": "v1/{+name}",
                  "id": "contactcenterinsights.projects.locations.conversations.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "location": "path"
                    },
                    "updateMask": {
                      "description": "The list of fields to be updated.",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates a conversation."
                },
                "create": {
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/conversations",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the conversation.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "conversationId": {
                      "description": "A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "description": "Creates a conversation.",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  }
                },
                "bulkDelete": {
                  "description": "Deletes multiple conversations in a single request.",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkDelete",
                  "path": "v1/{+parent}/conversations:bulkDelete",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent resource to create analyses in. Format: projects/{project}/locations/{location}"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.bulkDelete",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest"
                  }
                }
              }
            },
            "issueModels": {
              "resources": {
                "issues": {
                  "methods": {
                    "list": {
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.list",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent resource of the issue.",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                        }
                      },
                      "description": "Lists issues.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListIssuesResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues",
                      "path": "v1/{+parent}/issues",
                      "httpMethod": "GET"
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.get",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the issue to get.",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets an issue.",
                      "path": "v1/{+name}",
                      "httpMethod": "GET"
                    },
                    "patch": {
                      "description": "Updates an issue.",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$"
                        },
                        "updateMask": {
                          "location": "query",
                          "format": "google-fieldmask",
                          "description": "The list of fields to be updated.",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "PATCH",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.patch"
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "description": "Deletes an issue.",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the issue to delete.",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$"
                        }
                      },
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.delete",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "calculateIssueModelStats": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats",
                  "parameterOrder": [
                    "issueModel"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets an issue model's statistics.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats",
                  "parameters": {
                    "issueModel": {
                      "required": true,
                      "description": "Required. The resource name of the issue model to query against.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                    }
                  },
                  "path": "v1/{+issueModel}:calculateIssueModelStats",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse"
                  }
                },
                "get": {
                  "description": "Gets an issue model.",
                  "path": "v1/{+name}",
                  "id": "contactcenterinsights.projects.locations.issueModels.get",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the issue model to get."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}"
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.create",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates an issue model.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent resource of the issue model.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v1/{+parent}/issueModels",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.delete",
                  "description": "Deletes an issue model.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the issue model to delete."
                    }
                  },
                  "httpMethod": "DELETE"
                },
                "undeploy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.undeploy",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:undeploy",
                  "parameters": {
                    "name": {
                      "description": "Required. The issue model to undeploy.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy",
                  "description": "Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed."
                },
                "deploy": {
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.deploy",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:deploy",
                  "parameters": {
                    "name": {
                      "description": "Required. The issue model to deploy.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                    }
                  },
                  "description": "Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "id": "contactcenterinsights.projects.locations.issueModels.list",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the issue model.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels",
                  "path": "v1/{+parent}/issueModels",
                  "description": "Lists issue models.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query",
                      "description": "The list of fields to be updated."
                    }
                  },
                  "description": "Updates an issue model.",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "id": "contactcenterinsights.projects.locations.issueModels.patch"
                }
              }
            }
          }
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "canonicalName": "Contactcenterinsights",
  "discoveryVersion": "v1"
}

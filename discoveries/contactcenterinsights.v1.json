{
  "schemas": {
    "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata",
      "description": "Metadata for a create analysis operation.",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string"
        },
        "conversation": {
          "readOnly": true,
          "description": "Output only. The Conversation that this Analysis Operation belongs to.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Entity": {
      "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The representative name for the entity."
        },
        "metadata": {
          "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "The aggregate sentiment expressed for this entity in the conversation."
        },
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSON",
            "LOCATION",
            "ORGANIZATION",
            "EVENT",
            "WORK_OF_ART",
            "CONSUMER_GOOD",
            "OTHER",
            "PHONE_NUMBER",
            "ADDRESS",
            "DATE",
            "NUMBER",
            "PRICE"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Person.",
            "Location.",
            "Organization.",
            "Event.",
            "Artwork.",
            "Consumer product.",
            "Other types of entities.",
            "Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.",
            "Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.",
            "Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.",
            "Number. The metadata is the number itself.",
            "Price. The metadata identifies the `value` and `currency`."
          ],
          "description": "The entity type."
        },
        "salience": {
          "type": "number",
          "format": "float",
          "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1Entity"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRule": {
      "description": "The data for a phrase match rule.",
      "type": "object",
      "properties": {
        "negated": {
          "type": "boolean",
          "description": "Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment."
        },
        "query": {
          "description": "Required. The phrase to be matched.",
          "type": "string"
        },
        "config": {
          "description": "Provides additional information about the rule that specifies how to apply the rule.",
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRule"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModel": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModel",
      "properties": {
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The most recent time at which the issue model was updated."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which this issue model was created.",
          "type": "string"
        },
        "inputDataConfig": {
          "description": "Configs for the input data that used to create the issue model.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig"
        },
        "trainingStats": {
          "description": "Output only. Immutable. The issue model's label statistics on its training data.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats"
        },
        "displayName": {
          "description": "The representative name for the issue model.",
          "type": "string"
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. State of the model.",
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ]
        },
        "name": {
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        }
      },
      "description": "The issue model resource.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig": {
      "description": "Configuration information of a phrase match rule.",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig",
      "properties": {
        "exactMatchConfig": {
          "description": "The configuration for the exact match rule.",
          "$ref": "GoogleCloudContactcenterinsightsV1ExactMatchConfig"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig": {
      "id": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig",
      "properties": {
        "runtimeIntegrationAnalysisPercentage": {
          "description": "Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].",
          "format": "double",
          "type": "number"
        }
      },
      "description": "Default configuration when creating Analyses in Insights.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelResult": {
      "type": "object",
      "description": "Issue Modeling result on a conversation.",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelResult",
      "properties": {
        "issueModel": {
          "description": "Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        },
        "issues": {
          "type": "array",
          "description": "All the matched issues.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment"
          }
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata",
      "properties": {
        "request": {
          "description": "The original request for deployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest"
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "Metadata for deploying an issue model."
    },
    "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse": {
      "description": "The response of listing phrase matchers.",
      "type": "object",
      "properties": {
        "phraseMatchers": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
          },
          "description": "The phrase matchers that match the request.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse"
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval": {
      "properties": {
        "conversationCount": {
          "description": "The number of conversations created in this interval.",
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The start time of this interval."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval",
      "description": "A single interval in a time series."
    },
    "GoogleCloudContactcenterinsightsV1ConversationCallMetadata": {
      "properties": {
        "agentChannel": {
          "format": "int32",
          "type": "integer",
          "description": "The audio channel that contains the agent."
        },
        "customerChannel": {
          "type": "integer",
          "format": "int32",
          "description": "The audio channel that contains the customer."
        }
      },
      "description": "Call-specific metadata.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata": {
      "properties": {
        "request": {
          "description": "The original request for export.",
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Partial errors during export operation that might cause the operation output to be incomplete."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "Metadata for an export insights operation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata": {
      "type": "object",
      "description": "Metadata for creating an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata",
      "properties": {
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "request": {
          "description": "The original request for creation.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData": {
      "description": "Agent Assist Smart Compose suggestion data.",
      "id": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData",
      "properties": {
        "suggestion": {
          "description": "The content of the suggestion.",
          "type": "string"
        },
        "confidenceScore": {
          "type": "number",
          "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "double"
        },
        "queryRecord": {
          "description": "Name of the query record. Format: projects/{project}/locations/{location}/queryRecords/{query_record}",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata": {
      "type": "object",
      "properties": {
        "request": {
          "description": "The original request for deletion.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata",
      "description": "Metadata for deleting an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination",
      "properties": {
        "projectId": {
          "type": "string",
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used."
        },
        "dataset": {
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        },
        "table": {
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A BigQuery Table Reference."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest": {
      "properties": {
        "name": {
          "description": "Required. The name of the issue model to delete.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest",
      "description": "The request to delete an issue model."
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscript": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscript",
      "properties": {
        "transcriptSegments": {
          "description": "A list of sequential transcript segments that comprise the conversation.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "A message representing the transcript of a conversation."
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination": {
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination",
      "properties": {
        "projectId": {
          "type": "string",
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used."
        },
        "dataset": {
          "type": "string",
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error."
        },
        "table": {
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A BigQuery Table Reference."
    },
    "GoogleCloudContactcenterinsightsV1Settings": {
      "id": "GoogleCloudContactcenterinsightsV1Settings",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "Output only. The time at which the settings was created.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "conversationTtl": {
          "description": "The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.",
          "format": "google-duration",
          "type": "string"
        },
        "pubsubNotificationSettings": {
          "type": "object",
          "description": "A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * \"all-triggers\": Notify each time any of the supported triggers occurs. * \"create-analysis\": Notify each time an analysis is created. * \"create-conversation\": Notify each time a conversation is created. * \"export-insights-data\": Notify each time an export is complete. * \"update-conversation\": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time at which the settings were last updated.",
          "readOnly": true
        },
        "languageCode": {
          "type": "string",
          "description": "A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to \"en-US\" if it is neither specified on the segment nor here."
        },
        "analysisConfig": {
          "description": "Default analysis settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig"
        }
      },
      "type": "object",
      "description": "The settings resource."
    },
    "GoogleCloudContactcenterinsightsV1InterruptionData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1InterruptionData",
      "description": "The data for an interruption annotation.",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1FaqAnswerData": {
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the FAQ answer and the document that it originates from."
        },
        "answer": {
          "type": "string",
          "description": "The piece of text from the `source` knowledge base document."
        },
        "queryRecord": {
          "description": "Name of the query record. Format: projects/{project}/locations/{location}/queryRecords/{query_record}.",
          "type": "string"
        },
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.",
          "type": "string"
        },
        "question": {
          "description": "The corresponding FAQ question.",
          "type": "string"
        },
        "confidenceScore": {
          "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "float"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1FaqAnswerData",
      "type": "object",
      "description": "Agent Assist frequently-asked-question answer data."
    },
    "GoogleCloudContactcenterinsightsV1HoldData": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1HoldData",
      "description": "The data for a hold annotation."
    },
    "GoogleLongrunningListOperationsResponse": {
      "type": "object",
      "id": "GoogleLongrunningListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata": {
      "type": "object",
      "properties": {
        "request": {
          "description": "The original request for deployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest"
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata",
      "description": "Metadata for deploying an issue model."
    },
    "GoogleCloudContactcenterinsightsV1DialogflowInteractionData": {
      "description": "Dialogflow interaction data.",
      "properties": {
        "dialogflowIntentId": {
          "type": "string",
          "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}"
        },
        "confidence": {
          "format": "float",
          "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest",
      "properties": {
        "bigQueryDestination": {
          "description": "Specified if sink is a BigQuery table.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination"
        },
        "writeDisposition": {
          "enumDescriptions": [
            "Write disposition is not specified. Defaults to WRITE_TRUNCATE.",
            "If the table already exists, BigQuery will overwrite the table data and use the schema from the load.",
            "If the table already exists, BigQuery will append data to the table."
          ],
          "description": "Options for what to do if the destination table already exists.",
          "enum": [
            "WRITE_DISPOSITION_UNSPECIFIED",
            "WRITE_TRUNCATE",
            "WRITE_APPEND"
          ],
          "type": "string"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to export data from."
        },
        "filter": {
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.",
          "type": "string"
        },
        "kmsKey": {
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}",
          "type": "string"
        }
      },
      "description": "The request to export insights."
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata",
      "description": "Metadata for deleting an issue model.",
      "type": "object",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation finished running."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "type": "string"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest",
          "description": "The original request for deletion."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1SentimentData": {
      "description": "The data for a sentiment annotation.",
      "id": "GoogleCloudContactcenterinsightsV1SentimentData",
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "format": "float",
          "description": "The sentiment score between -1.0 (negative) and 1.0 (positive)."
        },
        "magnitude": {
          "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleRpcStatus"
    },
    "GoogleCloudContactcenterinsightsV1SilenceData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1SilenceData",
      "properties": {},
      "description": "The data for a silence annotation."
    },
    "GoogleCloudContactcenterinsightsV1Conversation": {
      "properties": {
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time at which the conversation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "agentId": {
          "description": "An opaque, user-specified string representing the human agent who handled the conversation.",
          "type": "string"
        },
        "transcript": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscript",
          "description": "Output only. The conversation transcript.",
          "readOnly": true
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry."
        },
        "medium": {
          "type": "string",
          "description": "Immutable. The conversation medium, if unspecified will default to PHONE_CALL.",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ]
        },
        "dialogflowIntents": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1DialogflowIntent"
          },
          "readOnly": true,
          "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}"
        },
        "latestAnalysis": {
          "description": "Output only. The conversation's latest analysis, if one exists.",
          "$ref": "GoogleCloudContactcenterinsightsV1Analysis",
          "readOnly": true
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The most recent time at which the conversation was updated.",
          "format": "google-datetime"
        },
        "expireTime": {
          "format": "google-datetime",
          "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.",
          "type": "string"
        },
        "languageCode": {
          "description": "A user-specified language code for the conversation.",
          "type": "string"
        },
        "callMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata",
          "description": "Call-specific metadata."
        },
        "turnCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "description": "Output only. The number of turns in the conversation."
        },
        "runtimeAnnotations": {
          "readOnly": true,
          "description": "Output only. The annotations that were generated during the customer and agent interaction.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation"
          }
        },
        "duration": {
          "type": "string",
          "format": "google-duration",
          "readOnly": true,
          "description": "Output only. The duration of the conversation."
        },
        "name": {
          "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "type": "string"
        },
        "ttl": {
          "type": "string",
          "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.",
          "format": "google-duration"
        },
        "dataSource": {
          "description": "The source of the audio and transcription for the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationDataSource"
        },
        "obfuscatedUserId": {
          "description": "Obfuscated user ID which the customer sent to us.",
          "type": "string"
        },
        "startTime": {
          "description": "The time at which the conversation started.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "The conversation resource.",
      "id": "GoogleCloudContactcenterinsightsV1Conversation",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats": {
      "properties": {
        "issue": {
          "type": "string",
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        },
        "displayName": {
          "description": "Display name of the issue.",
          "type": "string"
        },
        "labeledConversationsCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of conversations attached to the issue at this point in time."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats",
      "description": "Aggregated statistics about an issue."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig": {
      "description": "Configs for the input data used to create the issue model.",
      "properties": {
        "medium": {
          "type": "string",
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ]
        },
        "trainingConversationsCount": {
          "readOnly": true,
          "description": "Output only. Number of conversations used in training. Output only.",
          "format": "int64",
          "type": "string"
        },
        "filter": {
          "type": "string",
          "description": "A filter to reduce the conversations used for training the model to a specific subset."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ListConversationsResponse": {
      "type": "object",
      "properties": {
        "conversations": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
          },
          "type": "array",
          "description": "The conversations that match the request."
        },
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ListConversationsResponse",
      "description": "The response of listing conversations."
    },
    "GoogleCloudContactcenterinsightsV1CallAnnotation": {
      "id": "GoogleCloudContactcenterinsightsV1CallAnnotation",
      "properties": {
        "silenceData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SilenceData",
          "description": "Data specifying silence."
        },
        "annotationEndBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        },
        "holdData": {
          "$ref": "GoogleCloudContactcenterinsightsV1HoldData",
          "description": "Data specifying a hold."
        },
        "annotationStartBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        },
        "interruptionData": {
          "description": "Data specifying an interruption.",
          "$ref": "GoogleCloudContactcenterinsightsV1InterruptionData"
        },
        "channelTag": {
          "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.",
          "type": "integer",
          "format": "int32"
        },
        "intentMatchData": {
          "description": "Data specifying an intent match.",
          "$ref": "GoogleCloudContactcenterinsightsV1IntentMatchData"
        },
        "sentimentData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "Data specifying sentiment."
        },
        "phraseMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData",
          "description": "Data specifying a phrase match."
        },
        "entityMentionData": {
          "$ref": "GoogleCloudContactcenterinsightsV1EntityMentionData",
          "description": "Data specifying an entity mention."
        }
      },
      "description": "A piece of metadata that applies to a window of a call.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo",
      "properties": {
        "startOffset": {
          "type": "string",
          "format": "google-duration",
          "description": "Time offset of the start of this word relative to the beginning of the total conversation."
        },
        "endOffset": {
          "description": "Time offset of the end of this word relative to the beginning of the total conversation.",
          "type": "string",
          "format": "google-duration"
        },
        "word": {
          "description": "The word itself. Includes punctuation marks that surround the word.",
          "type": "string"
        },
        "confidence": {
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.",
          "type": "number",
          "format": "float"
        }
      },
      "type": "object",
      "description": "Word-level info for words in a transcript."
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata",
      "properties": {
        "request": {
          "description": "The original request for creation.",
          "$ref": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Metadata for creating an issue model."
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse": {
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse",
      "type": "object",
      "description": "The response to undeploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatcher": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the phrase matcher."
        },
        "name": {
          "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
          "type": "string"
        },
        "active": {
          "type": "boolean",
          "description": "Applies the phrase matcher only when it is active."
        },
        "revisionId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567"
        },
        "roleMatch": {
          "description": "The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.",
          "type": "string",
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ]
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The most recent time at which the phrase matcher was updated."
        },
        "phraseMatchRuleGroups": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup"
          },
          "description": "A list of phase match rule groups that are included in this matcher.",
          "type": "array"
        },
        "activationUpdateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The most recent time at which the activation status was updated."
        },
        "revisionCreateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added."
        },
        "type": {
          "description": "Required. The type of this phrase matcher.",
          "enum": [
            "PHRASE_MATCHER_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rule groups or there is no match.",
            "If any of the phrase match rule groups are met, there is a match."
          ]
        },
        "versionTag": {
          "type": "string",
          "description": "The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatcher",
      "description": "The phrase matcher resource.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse",
      "properties": {},
      "type": "object",
      "description": "The response to undeploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata": {
      "properties": {
        "annotations": {
          "type": "array",
          "description": "A list of call annotations that apply to this call.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CallAnnotation"
          }
        },
        "sentiments": {
          "description": "Overall conversation-level sentiment for each channel of the call.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment"
          }
        },
        "phraseMatchers": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
          },
          "description": "All the matched phrase matchers in the call.",
          "type": "object"
        },
        "intents": {
          "description": "All the matched intents in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Intent"
          },
          "type": "object"
        },
        "issueModelResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelResult",
          "description": "Overall conversation-level issue modeling result."
        },
        "entities": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Entity"
          },
          "type": "object",
          "description": "All the entities in the call."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata",
      "description": "Call-specific metadata created during analysis."
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest": {
      "type": "object",
      "description": "The request to delete an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name of the issue model to delete."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1Analysis": {
      "type": "object",
      "description": "The analysis resource.",
      "id": "GoogleCloudContactcenterinsightsV1Analysis",
      "properties": {
        "name": {
          "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}",
          "type": "string"
        },
        "analysisResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResult",
          "description": "Output only. The result of the analysis, which is populated when the analysis finishes.",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "requestTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which the analysis was requested.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the issue."
        },
        "issue": {
          "type": "string",
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        },
        "labeledConversationsCount": {
          "format": "int64",
          "description": "Number of conversations attached to the issue at this point in time.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Aggregated statistics about an issue.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
      "description": "Metadata from Dialogflow relating to the current transcript segment.",
      "type": "object",
      "properties": {
        "smartReplyAllowlistCovered": {
          "description": "Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ListAnalysesResponse": {
      "properties": {
        "analyses": {
          "type": "array",
          "description": "The analyses that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse",
      "description": "The response to list analyses."
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata": {
      "type": "object",
      "description": "Metadata for undeploying an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata",
      "properties": {
        "request": {
          "description": "The original request for undeployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest"
        },
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ListViewsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1ListViewsResponse",
      "description": "The response of listing views.",
      "type": "object",
      "properties": {
        "views": {
          "description": "The views that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1View"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IntentMatchData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IntentMatchData",
      "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.",
      "properties": {
        "intentUniqueId": {
          "type": "string",
          "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment": {
      "type": "object",
      "description": "A segment of a full transcript.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment",
      "properties": {
        "text": {
          "type": "string",
          "description": "The text of this segment."
        },
        "channelTag": {
          "type": "integer",
          "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.",
          "format": "int32"
        },
        "sentiment": {
          "description": "The sentiment for this transcript segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "segmentParticipant": {
          "description": "The participant of this segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationParticipant"
        },
        "messageTime": {
          "description": "The time that the message occurred, if provided.",
          "type": "string",
          "format": "google-datetime"
        },
        "confidence": {
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.",
          "type": "number",
          "format": "float"
        },
        "words": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo"
          },
          "description": "A list of the word-specific information for each word in the segment."
        },
        "languageCode": {
          "type": "string",
          "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\"."
        },
        "dialogflowSegmentMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
          "description": "CCAI metadata relating to the current transcript segment."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest": {
      "description": "The request to export insights.",
      "properties": {
        "bigQueryDestination": {
          "description": "Specified if sink is a BigQuery table.",
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination"
        },
        "kmsKey": {
          "type": "string",
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}"
        },
        "parent": {
          "description": "Required. The parent resource to export data from.",
          "type": "string"
        },
        "writeDisposition": {
          "enum": [
            "WRITE_DISPOSITION_UNSPECIFIED",
            "WRITE_TRUNCATE",
            "WRITE_APPEND"
          ],
          "description": "Options for what to do if the destination table already exists.",
          "enumDescriptions": [
            "Write disposition is not specified. Defaults to WRITE_TRUNCATE.",
            "If the table already exists, BigQuery will overwrite the table data and use the schema from the load.",
            "If the table already exists, BigQuery will append data to the table."
          ],
          "type": "string"
        },
        "filter": {
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStats": {
      "properties": {
        "issueStats": {
          "description": "Statistics on each issue. Key is the issue's resource name.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          }
        },
        "analyzedConversationsCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of conversations the issue model has analyzed at this point in time."
        },
        "unclassifiedConversationsCount": {
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
      "description": "Aggregated statistics about an issue model."
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest": {
      "type": "object",
      "description": "The request to deploy an issue model.",
      "properties": {
        "name": {
          "description": "Required. The issue model to deploy.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats": {
      "description": "Aggregated statistics about an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats",
      "properties": {
        "analyzedConversationsCount": {
          "format": "int64",
          "description": "Number of conversations the issue model has analyzed at this point in time.",
          "type": "string"
        },
        "unclassifiedConversationsCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time."
        },
        "issueStats": {
          "type": "object",
          "description": "Statistics on each issue. Key is the issue's resource name.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats"
          }
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResult": {
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResult",
      "description": "The result of an analysis.",
      "type": "object",
      "properties": {
        "endTime": {
          "description": "The time at which the analysis ended.",
          "format": "google-datetime",
          "type": "string"
        },
        "callAnalysisMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata",
          "description": "Call-specific metadata created by the analysis."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponse": {
      "properties": {
        "conversationCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of conversations."
        },
        "averageTurnCount": {
          "format": "int32",
          "description": "The average number of turns per conversation.",
          "type": "integer"
        },
        "issueMatches": {
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          },
          "type": "object",
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead."
        },
        "issueMatchesStats": {
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          }
        },
        "customHighlighterMatches": {
          "description": "A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          },
          "type": "object"
        },
        "conversationCountTimeSeries": {
          "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries",
          "description": "A time series representing the count of conversations created over time that match that requested filter criteria."
        },
        "averageDuration": {
          "description": "The average duration of all conversations. The average is calculated using only conversations that have a time duration.",
          "type": "string",
          "format": "google-duration"
        },
        "smartHighlighterMatches": {
          "description": "A map associating each smart highlighter display name with its respective number of matches in the set of conversations.",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "type": "object"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse",
      "description": "The response for calculating conversation statistics.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ListIssuesResponse": {
      "properties": {
        "issues": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Issue"
          },
          "description": "The issues that match the request.",
          "type": "array"
        }
      },
      "description": "The response of listing issues.",
      "id": "GoogleCloudContactcenterinsightsV1ListIssuesResponse",
      "type": "object"
    },
    "GoogleLongrunningOperation": {
      "properties": {
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        }
      },
      "type": "object",
      "id": "GoogleLongrunningOperation",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest": {
      "properties": {
        "issueModel": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModel",
          "description": "Required. The issue model to create."
        },
        "parent": {
          "description": "Required. The parent resource of the issue model.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest",
      "type": "object",
      "description": "The request to create an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The issue model to undeploy."
        }
      },
      "description": "The request to undeploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1View": {
      "type": "object",
      "description": "The View resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The most recent time at which the view was updated."
        },
        "displayName": {
          "description": "The human-readable display name of the view.",
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "String with specific view properties."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time at which this view was created.",
          "format": "google-datetime",
          "readOnly": true
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1View"
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries": {
      "properties": {
        "points": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval"
          },
          "description": "An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window.",
          "type": "array"
        },
        "intervalDuration": {
          "type": "string",
          "format": "google-duration",
          "description": "The duration of each interval."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries",
      "type": "object",
      "description": "A time series representing conversations over time."
    },
    "GoogleCloudContactcenterinsightsV1GcsSource": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1GcsSource",
      "properties": {
        "audioUri": {
          "type": "string",
          "description": "Cloud Storage URI that points to a file that contains the conversation audio."
        },
        "transcriptUri": {
          "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.",
          "type": "string"
        }
      },
      "description": "A Cloud Storage source of conversation data."
    },
    "GoogleCloudContactcenterinsightsV1RuntimeAnnotation": {
      "properties": {
        "dialogflowInteraction": {
          "description": "Dialogflow interaction data.",
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData"
        },
        "answerFeedback": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnswerFeedback",
          "description": "The feedback that the customer has about the answer in `data`."
        },
        "faqAnswer": {
          "$ref": "GoogleCloudContactcenterinsightsV1FaqAnswerData",
          "description": "Agent Assist FAQ answer data."
        },
        "annotationId": {
          "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}",
          "type": "string"
        },
        "smartReply": {
          "$ref": "GoogleCloudContactcenterinsightsV1SmartReplyData",
          "description": "Agent Assist Smart Reply data."
        },
        "endBoundary": {
          "description": "The boundary in the conversation where the annotation ends, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "startBoundary": {
          "description": "The boundary in the conversation where the annotation starts, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "articleSuggestion": {
          "description": "Agent Assist Article Suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which this annotation was created."
        },
        "smartComposeSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData",
          "description": "Agent Assist Smart Compose suggestion data."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation",
      "description": "An annotation that was generated during the customer and agent interaction.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment": {
      "type": "object",
      "description": "One channel of conversation-level sentiment data.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment",
      "properties": {
        "channelTag": {
          "description": "The channel of the audio that the data applies to.",
          "format": "int32",
          "type": "integer"
        },
        "sentimentData": {
          "description": "Data specifying sentiment.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup": {
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup",
      "description": "A message representing a rule in the phrase matcher.",
      "properties": {
        "phraseMatchRules": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRule"
          },
          "description": "A list of phase match rules that are included in this group.",
          "type": "array"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rules or there is no match.",
            "If any of the phrase match rules are met, there is a match."
          ],
          "description": "Required. The type of this phrase match rule group.",
          "enum": [
            "PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1AnnotationBoundary": {
      "type": "object",
      "description": "A point in a conversation that marks the start or the end of an annotation.",
      "id": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
      "properties": {
        "transcriptIndex": {
          "format": "int32",
          "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.",
          "type": "integer"
        },
        "wordIndex": {
          "type": "integer",
          "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1EntityMentionData": {
      "properties": {
        "sentiment": {
          "description": "Sentiment expressed for this mention of the entity.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "entityUniqueId": {
          "type": "string",
          "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to."
        },
        "type": {
          "enum": [
            "MENTION_TYPE_UNSPECIFIED",
            "PROPER",
            "COMMON"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Proper noun.",
            "Common noun (or noun compound)."
          ],
          "description": "The type of the entity mention.",
          "type": "string"
        }
      },
      "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1EntityMentionData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse": {
      "type": "object",
      "description": "The response to deploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse": {
      "description": "The response of listing issue models.",
      "id": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse",
      "properties": {
        "issueModels": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
          },
          "type": "array",
          "description": "The issue models that match the request."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Issue": {
      "id": "GoogleCloudContactcenterinsightsV1Issue",
      "properties": {
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which this issue was created."
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the issue."
        },
        "name": {
          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The most recent time that this issue was updated.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The issue resource."
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata": {
      "description": "Metadata for undeploying an issue model.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true
        },
        "request": {
          "description": "The original request for undeployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchData": {
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchData",
      "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the phrase matcher."
        },
        "phraseMatcher": {
          "type": "string",
          "description": "The unique identifier (the resource name) of the phrase matcher."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig": {
      "id": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig",
      "properties": {
        "trainingConversationsCount": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Number of conversations used in training. Output only.",
          "format": "int64"
        },
        "medium": {
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "type": "string"
        },
        "filter": {
          "description": "A filter to reduce the conversations used for training the model to a specific subset.",
          "type": "string"
        }
      },
      "description": "Configs for the input data used to create the issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest",
      "properties": {
        "issueModel": {
          "description": "Required. The issue model to create.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModel"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the issue model."
        }
      },
      "type": "object",
      "description": "The request to create an issue model."
    },
    "GoogleCloudContactcenterinsightsV1AnswerFeedback": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnswerFeedback",
      "properties": {
        "clicked": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was clicked by the human agent."
        },
        "correctnessLevel": {
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ],
          "type": "string",
          "description": "The correctness level of an answer.",
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ]
        },
        "displayed": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI."
        }
      },
      "description": "The feedback that the customer has about a certain answer in the conversation."
    },
    "GoogleCloudContactcenterinsightsV1Intent": {
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the intent."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1Intent",
      "type": "object",
      "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE."
    },
    "GoogleCloudContactcenterinsightsV1ExactMatchConfig": {
      "properties": {
        "caseSensitive": {
          "description": "Whether to consider case sensitivity when performing an exact match.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExactMatchConfig",
      "description": "Exact match configuration."
    },
    "GoogleCloudContactcenterinsightsV1ConversationDataSource": {
      "properties": {
        "dialogflowSource": {
          "description": "The source when the conversation comes from Dialogflow.",
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowSource"
        },
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1GcsSource",
          "description": "A Cloud Storage location specification for the audio and transcript."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationDataSource",
      "type": "object",
      "description": "The conversation source, which is a combination of transcript and audio."
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse",
      "description": "The response to deploy an issue model.",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1SmartReplyData": {
      "type": "object",
      "properties": {
        "confidenceScore": {
          "format": "double",
          "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        },
        "queryRecord": {
          "type": "string",
          "description": "Name of the query record. Format: projects/{project}/locations/{location}/queryRecords/{query_record}"
        },
        "reply": {
          "description": "The content of the reply.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map that contains metadata about the Smart Reply and the document from which it originates."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1SmartReplyData",
      "description": "Agent Assist Smart Reply data."
    },
    "GoogleCloudContactcenterinsightsV1DialogflowIntent": {
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        }
      },
      "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1DialogflowIntent"
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest",
      "properties": {
        "name": {
          "description": "Required. The issue model to undeploy.",
          "type": "string"
        }
      },
      "description": "The request to undeploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1IssueAssignment": {
      "type": "object",
      "description": "Information about the issue.",
      "properties": {
        "issue": {
          "type": "string",
          "description": "Resource name of the assigned issue."
        },
        "displayName": {
          "type": "string",
          "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then."
        },
        "score": {
          "format": "double",
          "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1].",
          "type": "number"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueAssignment"
    },
    "GoogleCloudContactcenterinsightsV1ArticleSuggestionData": {
      "properties": {
        "queryRecord": {
          "type": "string",
          "description": "Name of the query record. Format: projects/{project}/locations/{location}/queryRecords/{query_record}"
        },
        "uri": {
          "description": "Article URI.",
          "type": "string"
        },
        "title": {
          "description": "Article title.",
          "type": "string"
        },
        "confidenceScore": {
          "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "float"
        },
        "metadata": {
          "description": "Map that contains metadata about the Article Suggestion and the document that it originates from.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "source": {
          "type": "string",
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData",
      "description": "Agent Assist Article Suggestion data."
    },
    "GoogleCloudContactcenterinsightsV1ConversationParticipant": {
      "type": "object",
      "description": "The call participant speaking for a given utterance.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationParticipant",
      "properties": {
        "role": {
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "description": "The role of the participant.",
          "type": "string",
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ]
        },
        "obfuscatedExternalUserId": {
          "type": "string",
          "description": "Obfuscated user ID from Dialogflow."
        },
        "dialogflowParticipantName": {
          "type": "string",
          "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}"
        },
        "userId": {
          "description": "A user-specified ID representing the participant.",
          "type": "string"
        },
        "dialogflowParticipant": {
          "type": "string",
          "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata",
      "properties": {
        "partialErrors": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Partial errors during export operation that might cause the operation output to be incomplete."
        },
        "request": {
          "description": "The original request for export.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "Metadata for an export insights operation."
    },
    "GoogleCloudContactcenterinsightsV1DialogflowSource": {
      "id": "GoogleCloudContactcenterinsightsV1DialogflowSource",
      "description": "A Dialogflow source of conversation data.",
      "type": "object",
      "properties": {
        "audioUri": {
          "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
          "type": "string"
        },
        "dialogflowConversation": {
          "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse": {
      "description": "Response of querying an issue model's statistics.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse",
      "properties": {
        "currentStats": {
          "description": "The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata": {
      "properties": {
        "conversation": {
          "description": "Output only. The Conversation that this Analysis Operation belongs to.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Metadata for a create analysis operation.",
      "id": "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata"
    },
    "GoogleProtobufEmpty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "GoogleProtobufEmpty",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest": {
      "description": "The request to deploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The issue model to deploy.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse": {
      "description": "Response for an export insights operation.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse",
      "description": "Response for an export insights operation.",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1IssueModel": {
      "description": "The issue model resource.",
      "properties": {
        "trainingStats": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
          "description": "Output only. Immutable. The issue model's label statistics on its training data."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ],
          "description": "Output only. State of the model.",
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ]
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the issue model was updated.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which this issue model was created.",
          "readOnly": true
        },
        "inputDataConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig",
          "description": "Configs for the input data that used to create the issue model."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
        },
        "displayName": {
          "description": "The representative name for the issue model.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueModel",
      "type": "object"
    }
  },
  "parameters": {
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "location": "query",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "description": "Data format for response.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    }
  },
  "rootUrl": "https://contactcenterinsights.googleapis.com/",
  "servicePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "canonicalName": "Contactcenterinsights",
  "basePath": "",
  "kind": "discovery#restDescription",
  "description": "",
  "ownerDomain": "google.com",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "mtlsRootUrl": "https://contactcenterinsights.mtls.googleapis.com/",
  "batchPath": "batch",
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/contact-center/insights/docs",
  "protocol": "rest",
  "title": "Contact Center AI Insights API",
  "fullyEncodeReservedExpansion": true,
  "revision": "20220103",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "getSettings": {
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "path": "v1/{+name}",
              "description": "Gets project-level settings.",
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "parameterOrder": [
                "name"
              ],
              "id": "contactcenterinsights.projects.locations.getSettings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. The name of the settings resource to get.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "required": true
                }
              }
            },
            "updateSettings": {
              "id": "contactcenterinsights.projects.locations.updateSettings",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$"
                },
                "updateMask": {
                  "description": "Required. The list of fields to be updated.",
                  "type": "string",
                  "format": "google-fieldmask",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "description": "Updates project-level settings."
            }
          },
          "resources": {
            "phraseMatchers": {
              "methods": {
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent resource of the phrase matcher. Required. The location to create a phrase matcher for. Format: `projects//locations/` or `projects//locations/`",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers",
                  "description": "Creates a phrase matcher.",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "path": "v1/{+parent}/phraseMatchers",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  }
                },
                "delete": {
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.delete",
                  "description": "Deletes a phrase matcher.",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the phrase matcher to delete.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}"
                    },
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "The list of fields to be updated.",
                      "format": "google-fieldmask"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.patch",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates a phrase matcher.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  }
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.list",
                  "description": "Lists phrase matchers.",
                  "path": "v1/{+parent}/phraseMatchers",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "The value returned by the last `ListPhraseMatchersResponse`. This value indicates that this is a continuation of a prior `ListPhraseMatchers` call and that the system should return the next page of data.",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "The maximum number of phrase matchers to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "filter": {
                      "description": "A filter to reduce results to a specific subset. Useful for querying phrase matchers with specific properties.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent resource of the phrase matcher.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "description": "Gets a phrase matcher.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "description": "Required. The name of the phrase matcher to get.",
                      "location": "path"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.get"
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/{+name}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.operations.cancel"
                },
                "list": {
                  "path": "v1/{+name}/operations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.operations.list",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "The standard list page size."
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
                },
                "get": {
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "id": "contactcenterinsights.projects.locations.operations.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET"
                }
              }
            },
            "views": {
              "methods": {
                "list": {
                  "description": "Lists views.",
                  "path": "v1/{+parent}/views",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListViewsResponse"
                  },
                  "id": "contactcenterinsights.projects.locations.views.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views",
                  "parameters": {
                    "pageToken": {
                      "description": "The value returned by the last `ListViewsResponse`; indicates that this is a continuation of a prior `ListViews` call and the system should return the next page of data.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of views to return in the response. If this value is zero, the service will select a default size. A call may return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent resource of the views.",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent resource of the view. Required. The location to create a view for. Format: `projects//locations/` or `projects//locations/`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/views",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views",
                  "id": "contactcenterinsights.projects.locations.views.create",
                  "description": "Creates a view."
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a view.",
                  "path": "v1/{+name}",
                  "id": "contactcenterinsights.projects.locations.views.get",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "description": "Required. The name of the view to get.",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}"
                },
                "patch": {
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "httpMethod": "PATCH",
                  "description": "Updates a view.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "type": "string",
                      "description": "Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}"
                    },
                    "updateMask": {
                      "description": "The list of fields to be updated.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "id": "contactcenterinsights.projects.locations.views.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  }
                },
                "delete": {
                  "id": "contactcenterinsights.projects.locations.views.delete",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the view to delete.",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "description": "Deletes a view.",
                  "httpMethod": "DELETE"
                }
              }
            },
            "conversations": {
              "resources": {
                "analyses": {
                  "methods": {
                    "create": {
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. The parent resource of the analysis.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "description": "Creates an analysis. The long running operation is done when the analysis has completed.",
                      "httpMethod": "POST",
                      "path": "v1/{+parent}/analyses",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.create"
                    },
                    "list": {
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.list",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "description": "The maximum number of analyses to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                          "location": "query"
                        },
                        "filter": {
                          "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "The value returned by the last `ListAnalysesResponse`; indicates that this is a continuation of a prior `ListAnalyses` call and the system should return the next page of data.",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "description": "Required. The parent resource of the analyses.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "description": "Lists analyses.",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/analyses"
                    },
                    "get": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the analysis to get."
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.get",
                      "path": "v1/{+name}",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "description": "Gets an analysis."
                    },
                    "delete": {
                      "description": "Deletes an analysis.",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.delete",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the analysis to delete.",
                          "required": true
                        }
                      },
                      "httpMethod": "DELETE",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}",
                      "path": "v1/{+name}"
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists conversations.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListConversationsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the conversation.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties.",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "The maximum number of conversations to return in the response. A valid page size ranges from 0 to 1,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size.",
                      "type": "integer"
                    },
                    "view": {
                      "type": "string",
                      "enumDescriptions": [
                        "Not specified. Defaults to FULL on GetConversationRequest and BASIC for ListConversationsRequest.",
                        "Transcript field is not populated in the response for Insights conversation.",
                        "All fields are populated for Insights conversation."
                      ],
                      "location": "query",
                      "description": "The level of details of the conversation. Default is `BASIC`.",
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ]
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The value returned by the last `ListConversationsResponse`. This value indicates that this is a continuation of a prior `ListConversations` call and that the system should return the next page of data.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations",
                  "path": "v1/{+parent}/conversations",
                  "httpMethod": "GET",
                  "id": "contactcenterinsights.projects.locations.conversations.list"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "description": "Creates a conversation.",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent resource of the conversation.",
                      "type": "string",
                      "location": "path"
                    },
                    "conversationId": {
                      "location": "query",
                      "type": "string",
                      "description": "A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`"
                    }
                  },
                  "path": "v1/{+parent}/conversations",
                  "id": "contactcenterinsights.projects.locations.conversations.create"
                },
                "calculateStats": {
                  "id": "contactcenterinsights.projects.locations.conversations.calculateStats",
                  "httpMethod": "GET",
                  "path": "v1/{+location}/conversations:calculateStats",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "A filter to reduce results to a specific subset. This field is useful for getting statistics about conversations with specific properties.",
                      "location": "query"
                    },
                    "location": {
                      "description": "Required. The location of the conversations.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "description": "Gets conversation statistics.",
                  "parameterOrder": [
                    "location"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a conversation.",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.delete",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the conversation to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "force": {
                      "type": "boolean",
                      "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses.",
                      "location": "query"
                    }
                  }
                },
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to be updated.",
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates a conversation.",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "id": "contactcenterinsights.projects.locations.conversations.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH"
                },
                "get": {
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "description": "Gets a conversation.",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the conversation to get.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "view": {
                      "location": "query",
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "enumDescriptions": [
                        "Not specified. Defaults to FULL on GetConversationRequest and BASIC for ListConversationsRequest.",
                        "Transcript field is not populated in the response for Insights conversation.",
                        "All fields are populated for Insights conversation."
                      ],
                      "type": "string",
                      "description": "The level of details of the conversation. Default is `FULL`."
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.conversations.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}"
                }
              }
            },
            "issueModels": {
              "methods": {
                "deploy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.deploy",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:deploy",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The issue model to deploy.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest"
                  }
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels",
                  "path": "v1/{+parent}/issueModels",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists issue models.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.list",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent resource of the issue model.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  }
                },
                "undeploy": {
                  "httpMethod": "POST",
                  "path": "v1/{+name}:undeploy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.undeploy",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "description": "Required. The issue model to undeploy.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
                  },
                  "description": "Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy"
                },
                "create": {
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent resource of the issue model."
                    }
                  },
                  "path": "v1/{+parent}/issueModels",
                  "description": "Creates an issue model.",
                  "id": "contactcenterinsights.projects.locations.issueModels.create",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "calculateIssueModelStats": {
                  "path": "v1/{+issueModel}:calculateIssueModelStats",
                  "parameters": {
                    "issueModel": {
                      "description": "Required. The resource name of the issue model to query against.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "issueModel"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets an issue model's statistics.",
                  "httpMethod": "GET",
                  "id": "contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse"
                  }
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the issue model to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "description": "Gets an issue model.",
                  "id": "contactcenterinsights.projects.locations.issueModels.get",
                  "httpMethod": "GET",
                  "path": "v1/{+name}"
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "description": "Updates an issue model.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.patch",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "The list of fields to be updated.",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
                      "type": "string"
                    }
                  }
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes an issue model.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the issue model to delete.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.delete",
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}"
                }
              },
              "resources": {
                "issues": {
                  "methods": {
                    "list": {
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                          "description": "Required. The parent resource of the issue.",
                          "type": "string"
                        }
                      },
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists issues.",
                      "path": "v1/{+parent}/issues",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListIssuesResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "patch": {
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "parameters": {
                        "updateMask": {
                          "format": "google-fieldmask",
                          "description": "The list of fields to be updated.",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$",
                          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PATCH",
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.patch",
                      "description": "Updates an issue.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "path": "v1/{+name}"
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.get",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the issue to get.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "description": "Gets an issue.",
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      }
                    }
                  }
                }
              }
            },
            "insightsdata": {
              "methods": {
                "export": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "contactcenterinsights.projects.locations.insightsdata.export",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource to export data from.",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Export insights data to a destination defined in the request body.",
                  "path": "v1/{+parent}/insightsdata:export"
                }
              }
            }
          }
        }
      }
    }
  },
  "baseUrl": "https://contactcenterinsights.googleapis.com/",
  "version": "v1",
  "version_module": true,
  "ownerName": "Google",
  "name": "contactcenterinsights",
  "id": "contactcenterinsights:v1"
}

{
  "baseUrl": "https://contactcenterinsights.googleapis.com/",
  "documentationLink": "https://cloud.google.com/contact-center/insights/docs",
  "name": "contactcenterinsights",
  "id": "contactcenterinsights:v1",
  "ownerDomain": "google.com",
  "servicePath": "",
  "discoveryVersion": "v1",
  "kind": "discovery#restDescription",
  "basePath": "",
  "canonicalName": "Contactcenterinsights",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "operations": {
              "methods": {
                "cancel": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenterinsights.projects.locations.operations.cancel",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                },
                "get": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "contactcenterinsights.projects.locations.operations.get",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "httpMethod": "GET"
                },
                "list": {
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    }
                  },
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.operations.list",
                  "path": "v1/{+name}/operations"
                }
              }
            },
            "views": {
              "methods": {
                "create": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent resource of the view. Required. The location to create a view for. Format: `projects//locations/` or `projects//locations/`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "id": "contactcenterinsights.projects.locations.views.create",
                  "path": "v1/{+parent}/views",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Creates a view.",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "id": "contactcenterinsights.projects.locations.views.delete",
                  "description": "Deletes a view.",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the view to delete.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "id": "contactcenterinsights.projects.locations.views.patch",
                  "description": "Updates a view.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "required": true
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The list of fields to be updated.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  }
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "id": "contactcenterinsights.projects.locations.views.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the view to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Gets a view.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}"
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The value returned by the last `ListViewsResponse`; indicates that this is a continuation of a prior `ListViews` call and the system should return the next page of data."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent resource of the views."
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of views to return in the response. If this value is zero, the service will select a default size. A call may return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                      "format": "int32"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListViewsResponse"
                  },
                  "httpMethod": "GET",
                  "id": "contactcenterinsights.projects.locations.views.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists views.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views",
                  "path": "v1/{+parent}/views"
                }
              }
            },
            "conversations": {
              "resources": {
                "analyses": {
                  "methods": {
                    "create": {
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The parent resource of the analysis.",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "path": "v1/{+parent}/analyses",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "description": "Creates an analysis. The long running operation is done when the analysis has completed."
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.delete",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes an analysis.",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. The name of the analysis to delete.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.get",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}",
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the analysis to get.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$"
                        }
                      },
                      "description": "Gets an analysis.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET"
                    },
                    "list": {
                      "path": "v1/{+parent}/analyses",
                      "parameters": {
                        "pageToken": {
                          "description": "The value returned by the last `ListAnalysesResponse`; indicates that this is a continuation of a prior `ListAnalyses` call and the system should return the next page of data.",
                          "type": "string",
                          "location": "query"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The parent resource of the analyses.",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of analyses to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        }
                      },
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "description": "Lists analyses.",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.list",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "upload": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Create a long-running conversation upload operation. This method differs from `CreateConversation` by allowing audio transcription and optional DLP redaction.",
                  "id": "contactcenterinsights.projects.locations.conversations.upload",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent resource of the conversation.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1UploadConversationRequest"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:upload",
                  "path": "v1/{+parent}/conversations:upload",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "bulkDelete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkDelete",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest"
                  },
                  "description": "Deletes multiple conversations in a single request.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.bulkDelete",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location}",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+parent}/conversations:bulkDelete",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "ingest": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource for new conversations.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v1/{+parent}/conversations:ingest",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.ingest",
                  "httpMethod": "POST",
                  "description": "Imports conversations and processes them according to the user's configuration."
                },
                "delete": {
                  "description": "Deletes a conversation.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the conversation to delete.",
                      "type": "string",
                      "required": true
                    },
                    "force": {
                      "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.conversations.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE"
                },
                "calculateStats": {
                  "httpMethod": "GET",
                  "description": "Gets conversation statistics.",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse"
                  },
                  "parameters": {
                    "location": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The location of the conversations.",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "A filter to reduce results to a specific subset. This field is useful for getting statistics about conversations with specific properties."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.calculateStats",
                  "path": "v1/{+location}/conversations:calculateStats",
                  "parameterOrder": [
                    "location"
                  ]
                },
                "patch": {
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "httpMethod": "PATCH",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "id": "contactcenterinsights.projects.locations.conversations.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The list of fields to be updated. All possible fields can be updated by passing `*`, or a subset of the following updateable fields can be provided: * `agent_id` * `language_code` * `labels` * `metadata` * `quality_metadata` * `call_metadata` * `start_time` * `expire_time` or `ttl` * `data_source.gcs_source.audio_uri` or `data_source.dialogflow_source.audio_uri`",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a conversation."
                },
                "list": {
                  "id": "contactcenterinsights.projects.locations.conversations.list",
                  "description": "Lists conversations.",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "The value returned by the last `ListConversationsResponse`. This value indicates that this is a continuation of a prior `ListConversations` call and that the system should return the next page of data.",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties.",
                      "location": "query"
                    },
                    "orderBy": {
                      "description": "Optional. The attribute by which to order conversations in the response. If empty, conversations will be ordered by descending creation time. Supported values are one of the following: * create_time * customer_satisfaction_rating * duration * latest_analysis * start_time * turn_count The default sort order is ascending. To specify order, append `asc` or `desc` (`create_time desc`). For more details, see [Google AIPs Ordering](https://google.aip.dev/132#ordering).",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of conversations to return in the response. A valid page size ranges from 0 to 1,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size."
                    },
                    "view": {
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "FULL",
                        "BASIC"
                      ],
                      "type": "string",
                      "location": "query",
                      "enumDescriptions": [
                        "The conversation view is not specified. * Defaults to `FULL` in `GetConversationRequest`. * Defaults to `BASIC` in `ListConversationsRequest`.",
                        "Populates all fields in the conversation.",
                        "Populates all fields in the conversation except the transcript."
                      ],
                      "description": "The level of details of the conversation. Default is `BASIC`."
                    },
                    "parent": {
                      "description": "Required. The parent resource of the conversation.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+parent}/conversations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListConversationsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the conversation to get.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$"
                    },
                    "view": {
                      "location": "query",
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "FULL",
                        "BASIC"
                      ],
                      "enumDescriptions": [
                        "The conversation view is not specified. * Defaults to `FULL` in `GetConversationRequest`. * Defaults to `BASIC` in `ListConversationsRequest`.",
                        "Populates all fields in the conversation.",
                        "Populates all fields in the conversation except the transcript."
                      ],
                      "type": "string",
                      "description": "The level of details of the conversation. Default is `FULL`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets a conversation.",
                  "id": "contactcenterinsights.projects.locations.conversations.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "httpMethod": "GET",
                  "path": "v1/{+name}"
                },
                "bulkAnalyze": {
                  "path": "v1/{+parent}/conversations:bulkAnalyze",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Analyzes multiple conversations in a single request.",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource to create analyses in."
                    }
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.bulkAnalyze"
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "conversationId": {
                      "location": "query",
                      "type": "string",
                      "description": "A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent resource of the conversation.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Creates a conversation. Does not support audio transcription or DLP redaction. Use `conversations.upload` instead.",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "httpMethod": "POST",
                  "id": "contactcenterinsights.projects.locations.conversations.create",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "deprecated": true,
                  "path": "v1/{+parent}/conversations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations"
                }
              }
            },
            "phraseMatchers": {
              "methods": {
                "get": {
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.get",
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "description": "Gets a phrase matcher.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the phrase matcher to get."
                    }
                  }
                },
                "patch": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "description": "Updates a phrase matcher.",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "The list of fields to be updated."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.patch",
                  "path": "v1/{+name}"
                },
                "delete": {
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the phrase matcher to delete.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$"
                    }
                  },
                  "description": "Deletes a phrase matcher.",
                  "httpMethod": "DELETE",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent resource of the phrase matcher. Required. The location to create a phrase matcher for. Format: `projects//locations/` or `projects//locations/`"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a phrase matcher.",
                  "path": "v1/{+parent}/phraseMatchers",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers"
                },
                "list": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/phraseMatchers",
                  "description": "Lists phrase matchers.",
                  "parameters": {
                    "pageToken": {
                      "description": "The value returned by the last `ListPhraseMatchersResponse`. This value indicates that this is a continuation of a prior `ListPhraseMatchers` call and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent resource of the phrase matcher.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "filter": {
                      "location": "query",
                      "description": "A filter to reduce results to a specific subset. Useful for querying phrase matchers with specific properties.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of phrase matchers to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available."
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.list"
                }
              }
            },
            "insightsdata": {
              "methods": {
                "export": {
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource to export data from.",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Export insights data to a destination defined in the request body.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export",
                  "id": "contactcenterinsights.projects.locations.insightsdata.export",
                  "path": "v1/{+parent}/insightsdata:export",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "issueModels": {
              "methods": {
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the issue model to delete."
                    }
                  },
                  "description": "Deletes an issue model.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "DELETE",
                  "id": "contactcenterinsights.projects.locations.issueModels.delete"
                },
                "list": {
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse"
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels",
                  "id": "contactcenterinsights.projects.locations.issueModels.list",
                  "description": "Lists issue models.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent resource of the issue model.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/issueModels"
                },
                "export": {
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ExportIssueModelRequest"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.export",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:export",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Exports an issue model to the provided destination.",
                  "parameters": {
                    "name": {
                      "description": "Required. The issue model to export.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:export"
                },
                "deploy": {
                  "description": "Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.deploy",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The issue model to deploy.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy",
                  "path": "v1/{+name}:deploy",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "import": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels:import",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the issue model.",
                      "required": true
                    }
                  },
                  "description": "Imports an issue model from a Cloud Storage bucket.",
                  "path": "v1/{+parent}/issueModels:import",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ImportIssueModelRequest"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.import"
                },
                "patch": {
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.patch",
                  "path": "v1/{+name}",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The list of fields to be updated.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates an issue model.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "httpMethod": "PATCH"
                },
                "calculateIssueModelStats": {
                  "httpMethod": "GET",
                  "description": "Gets an issue model's statistics.",
                  "parameters": {
                    "issueModel": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "required": true,
                      "description": "Required. The resource name of the issue model to query against."
                    }
                  },
                  "parameterOrder": [
                    "issueModel"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats",
                  "path": "v1/{+issueModel}:calculateIssueModelStats"
                },
                "undeploy": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}:undeploy",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy",
                  "description": "Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The issue model to undeploy.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.undeploy",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
                  }
                },
                "get": {
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the issue model to get."
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets an issue model.",
                  "id": "contactcenterinsights.projects.locations.issueModels.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}"
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the issue model.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v1/{+parent}/issueModels",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels",
                  "id": "contactcenterinsights.projects.locations.issueModels.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "description": "Creates an issue model."
                }
              },
              "resources": {
                "issues": {
                  "methods": {
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$",
                          "type": "string",
                          "description": "Required. The name of the issue to get.",
                          "location": "path"
                        }
                      },
                      "description": "Gets an issue.",
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.get",
                      "path": "v1/{+name}"
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$",
                          "description": "Required. The name of the issue to delete.",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "description": "Deletes an issue.",
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.delete",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE"
                    },
                    "patch": {
                      "httpMethod": "PATCH",
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.patch",
                      "description": "Updates an issue.",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "updateMask": {
                          "type": "string",
                          "format": "google-fieldmask",
                          "location": "query",
                          "description": "The list of fields to be updated."
                        },
                        "name": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$",
                          "required": true,
                          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
                        }
                      },
                      "path": "v1/{+name}"
                    },
                    "list": {
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.list",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues",
                      "path": "v1/{+parent}/issues",
                      "description": "Lists issues.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListIssuesResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "required": true,
                          "description": "Required. The parent resource of the issue.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "getSettings": {
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets project-level settings.",
              "id": "contactcenterinsights.projects.locations.getSettings",
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "parameters": {
                "name": {
                  "description": "Required. The name of the settings resource to get.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "location": "path"
                }
              },
              "path": "v1/{+name}",
              "httpMethod": "GET"
            },
            "updateSettings": {
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "request": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "path": "v1/{+name}",
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "contactcenterinsights.projects.locations.updateSettings",
              "description": "Updates project-level settings.",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "description": "Required. The list of fields to be updated.",
                  "location": "query",
                  "format": "google-fieldmask"
                },
                "name": {
                  "type": "string",
                  "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$"
                }
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings"
            }
          }
        }
      }
    }
  },
  "protocol": "rest",
  "revision": "20240611",
  "batchPath": "batch",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "title": "Contact Center AI Insights API",
  "schemas": {
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats",
      "properties": {
        "analyzedConversationsCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of conversations the issue model has analyzed at this point in time."
        },
        "unclassifiedConversationsCount": {
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time.",
          "type": "string",
          "format": "int64"
        },
        "issueStats": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats"
          },
          "description": "Statistics on each issue. Key is the issue's resource name."
        }
      },
      "type": "object",
      "description": "Aggregated statistics about an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata": {
      "description": "The metadata for an IngestConversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata",
      "type": "object",
      "properties": {
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "ingestConversationsStats": {
          "description": "Output only. Statistics for IngestConversations operation.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats",
          "readOnly": true
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest",
          "description": "Output only. The original request for ingest.",
          "readOnly": true
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. Partial errors during ingest operation that might cause the operation output to be incomplete."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment": {
      "properties": {
        "sentimentData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
          "description": "Data specifying sentiment."
        },
        "channelTag": {
          "description": "The channel of the audio that the data applies to.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment",
      "description": "One channel of conversation-level sentiment data.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest": {
      "description": "Request to upload a conversation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest",
      "type": "object",
      "properties": {
        "speechConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig",
          "description": "Optional. Speech-to-Text configuration. Will default to the config specified in Settings."
        },
        "conversationId": {
          "description": "Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`",
          "type": "string"
        },
        "parent": {
          "description": "Required. The parent resource of the conversation.",
          "type": "string"
        },
        "redactionConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig",
          "description": "Optional. DLP settings for transcript redaction. Will default to the config specified in Settings."
        },
        "conversation": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1Conversation",
          "description": "Required. The conversation resource to create."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelMetadata": {
      "description": "Metadata used for import issue model.",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "description": "The time the operation finished running.",
          "type": "string"
        },
        "createTime": {
          "description": "The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "request": {
          "description": "The original import request.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest": {
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest",
      "properties": {
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to create analyses in."
        },
        "analysisPercentage": {
          "description": "Required. Percentage of selected conversation to analyze, between [0, 100].",
          "type": "number",
          "format": "float"
        },
        "filter": {
          "type": "string",
          "description": "Required. Filter used to select the subset of conversations to analyze."
        }
      },
      "type": "object",
      "description": "The request to analyze conversations in bulk."
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata",
      "type": "object",
      "description": "Metadata for creating an issue model.",
      "properties": {
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest",
          "description": "The original request for creation."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1CallAnnotation": {
      "description": "A piece of metadata that applies to a window of a call.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CallAnnotation",
      "properties": {
        "interruptionData": {
          "$ref": "GoogleCloudContactcenterinsightsV1InterruptionData",
          "description": "Data specifying an interruption."
        },
        "sentimentData": {
          "description": "Data specifying sentiment.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "silenceData": {
          "description": "Data specifying silence.",
          "$ref": "GoogleCloudContactcenterinsightsV1SilenceData"
        },
        "phraseMatchData": {
          "description": "Data specifying a phrase match.",
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
        },
        "annotationEndBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        },
        "channelTag": {
          "format": "int32",
          "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.",
          "type": "integer"
        },
        "holdData": {
          "description": "Data specifying a hold.",
          "$ref": "GoogleCloudContactcenterinsightsV1HoldData"
        },
        "entityMentionData": {
          "$ref": "GoogleCloudContactcenterinsightsV1EntityMentionData",
          "description": "Data specifying an entity mention."
        },
        "annotationStartBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        },
        "intentMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1IntentMatchData",
          "description": "Data specifying an intent match."
        },
        "issueMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueMatchData",
          "description": "Data specifying an issue match."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ConversationQualityMetadata": {
      "type": "object",
      "description": "Conversation metadata related to quality management.",
      "properties": {
        "customerSatisfactionRating": {
          "type": "integer",
          "description": "An arbitrary integer value indicating the customer's satisfaction rating.",
          "format": "int32"
        },
        "menuPath": {
          "description": "An arbitrary string value specifying the menu path the customer took.",
          "type": "string"
        },
        "agentInfo": {
          "description": "Information about agents involved in the call.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo"
          }
        },
        "waitDuration": {
          "format": "google-duration",
          "description": "The amount of time the customer waited to connect with an agent.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationQualityMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata": {
      "properties": {
        "partialErrors": {
          "readOnly": true,
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Output only. Partial errors during bulk analyze operation that might cause the operation output to be incomplete.",
          "type": "array"
        },
        "totalRequestedAnalysesCount": {
          "description": "Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.",
          "format": "int32",
          "type": "integer"
        },
        "createTime": {
          "description": "The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "failedAnalysesCount": {
          "type": "integer",
          "description": "The number of requested analyses that have failed so far.",
          "format": "int32"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest",
          "description": "The original request for bulk analyze."
        },
        "completedAnalysesCount": {
          "description": "The number of requested analyses that have completed successfully so far.",
          "type": "integer",
          "format": "int32"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time the operation finished running.",
          "type": "string"
        }
      },
      "description": "The metadata for a bulk analyze conversations operation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest": {
      "properties": {
        "name": {
          "description": "Required. The issue model to undeploy.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The request to undeploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata": {
      "description": "Metadata for undeploying an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata",
      "type": "object",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest",
          "description": "The original request for undeployment."
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ImportIssueModelMetadata": {
      "type": "object",
      "description": "Metadata used for import issue model.",
      "id": "GoogleCloudContactcenterinsightsV1ImportIssueModelMetadata",
      "properties": {
        "request": {
          "description": "The original import request.",
          "$ref": "GoogleCloudContactcenterinsightsV1ImportIssueModelRequest"
        },
        "createTime": {
          "description": "The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time the operation finished running.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsResponse": {
      "type": "object",
      "description": "The response to an IngestConversations operation.",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsResponse"
    },
    "GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource": {
      "properties": {
        "objectUri": {
          "type": "string",
          "description": "Required. Format: `gs:///`"
        }
      },
      "description": "Google Cloud Storage Object URI to get the issue model file from.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource"
    },
    "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse": {
      "type": "object",
      "properties": {
        "currentStats": {
          "description": "The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse",
      "description": "Response of querying an issue model's statistics."
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The issue model to undeploy.",
          "type": "string"
        }
      },
      "description": "The request to undeploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata": {
      "properties": {
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Partial errors during export operation that might cause the operation output to be incomplete.",
          "type": "array"
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        },
        "request": {
          "description": "The original request for export.",
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
        }
      },
      "type": "object",
      "description": "Metadata for an export insights operation.",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult": {
      "properties": {
        "issueModel": {
          "type": "string",
          "description": "Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
        },
        "issues": {
          "description": "All the matched issues.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult",
      "description": "Issue Modeling result on a conversation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1Entity": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1Entity",
      "properties": {
        "salience": {
          "type": "number",
          "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.",
          "format": "float"
        },
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
          "description": "The aggregate sentiment expressed for this entity in the conversation."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below."
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the entity."
        },
        "type": {
          "description": "The entity type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSON",
            "LOCATION",
            "ORGANIZATION",
            "EVENT",
            "WORK_OF_ART",
            "CONSUMER_GOOD",
            "OTHER",
            "PHONE_NUMBER",
            "ADDRESS",
            "DATE",
            "NUMBER",
            "PRICE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Person.",
            "Location.",
            "Organization.",
            "Event.",
            "Artwork.",
            "Consumer product.",
            "Other types of entities.",
            "Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.",
            "Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.",
            "Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.",
            "Number. The metadata is the number itself.",
            "Price. The metadata identifies the `value` and `currency`."
          ]
        }
      },
      "type": "object",
      "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location."
    },
    "GoogleCloudContactcenterinsightsV1SentimentData": {
      "id": "GoogleCloudContactcenterinsightsV1SentimentData",
      "description": "The data for a sentiment annotation.",
      "properties": {
        "score": {
          "type": "number",
          "format": "float",
          "description": "The sentiment score between -1.0 (negative) and 1.0 (positive)."
        },
        "magnitude": {
          "format": "float",
          "type": "number",
          "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig": {
      "type": "object",
      "properties": {
        "summarizationModel": {
          "enumDescriptions": [
            "Unspecified summarization model.",
            "The CCAI baseline model.",
            "The CCAI baseline model, V2.0."
          ],
          "enum": [
            "SUMMARIZATION_MODEL_UNSPECIFIED",
            "BASELINE_MODEL",
            "BASELINE_MODEL_V2_0"
          ],
          "description": "Default summarization model to be used.",
          "type": "string"
        },
        "conversationProfile": {
          "type": "string",
          "description": "Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig",
      "description": "Configuration for summarization."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData": {
      "properties": {
        "metadata": {
          "type": "object",
          "description": "A map that contains metadata about the summarization and the document from which it originates.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "textSections": {
          "description": "The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "answerRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "conversationModel": {
          "description": "The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}",
          "type": "string"
        },
        "text": {
          "description": "The summarization content that is concatenated into one string.",
          "type": "string"
        },
        "confidence": {
          "description": "The confidence score of the summarization.",
          "format": "float",
          "type": "number"
        }
      },
      "description": "Conversation summarization suggestion data.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata": {
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest",
          "description": "The original request for deletion."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata",
      "type": "object",
      "description": "Metadata for deleting an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment",
      "description": "A segment of a full transcript.",
      "properties": {
        "sentiment": {
          "description": "The sentiment for this transcript segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
        },
        "text": {
          "type": "string",
          "description": "The text of this segment."
        },
        "channelTag": {
          "format": "int32",
          "type": "integer",
          "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono."
        },
        "languageCode": {
          "type": "string",
          "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\"."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset."
        },
        "dialogflowSegmentMetadata": {
          "description": "CCAI metadata relating to the current transcript segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata"
        },
        "words": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo"
          },
          "description": "A list of the word-specific information for each word in the segment.",
          "type": "array"
        },
        "segmentParticipant": {
          "description": "The participant of this segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant"
        },
        "messageTime": {
          "format": "google-datetime",
          "description": "The time that the message occurred, if provided.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata": {
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest",
          "description": "The original request for deletion."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata",
      "type": "object",
      "description": "Metadata for deleting an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource": {
      "properties": {
        "dialogflowConversation": {
          "type": "string",
          "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "readOnly": true
        },
        "audioUri": {
          "type": "string",
          "description": "Cloud Storage URI that points to a file that contains the conversation audio."
        }
      },
      "type": "object",
      "description": "A Dialogflow source of conversation data.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence": {
      "description": "Conversation-level silence data.",
      "type": "object",
      "properties": {
        "silencePercentage": {
          "format": "float",
          "description": "Percentage of the total conversation spent in silence.",
          "type": "number"
        },
        "silenceDuration": {
          "format": "google-duration",
          "description": "Amount of time calculated to be in silence.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment": {
      "description": "A segment of a full transcript.",
      "properties": {
        "words": {
          "type": "array",
          "description": "A list of the word-specific information for each word in the segment.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo"
          }
        },
        "text": {
          "type": "string",
          "description": "The text of this segment."
        },
        "segmentParticipant": {
          "description": "The participant of this segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationParticipant"
        },
        "confidence": {
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.",
          "format": "float",
          "type": "number"
        },
        "sentiment": {
          "description": "The sentiment for this transcript segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "channelTag": {
          "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.",
          "type": "integer",
          "format": "int32"
        },
        "dialogflowSegmentMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
          "description": "CCAI metadata relating to the current transcript segment."
        },
        "languageCode": {
          "type": "string",
          "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\"."
        },
        "messageTime": {
          "description": "The time that the message occurred, if provided.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment"
    },
    "GoogleCloudContactcenterinsightsV1ConversationDataSource": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationDataSource",
      "properties": {
        "dialogflowSource": {
          "description": "The source when the conversation comes from Dialogflow.",
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowSource"
        },
        "gcsSource": {
          "description": "A Cloud Storage location specification for the audio and transcript.",
          "$ref": "GoogleCloudContactcenterinsightsV1GcsSource"
        }
      },
      "type": "object",
      "description": "The conversation source, which is a combination of transcript and audio."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource": {
      "properties": {
        "objectUri": {
          "type": "string",
          "description": "Required. Format: `gs:///`"
        }
      },
      "description": "Google Cloud Storage Object URI to get the issue model file from.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput": {
      "properties": {
        "query": {
          "type": "string",
          "description": "Query text. Article Search uses this to store the input query used to generate the search results."
        },
        "generatorName": {
          "description": "The resource name of associated generator. Format: `projects//locations//generators/`",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Explicit input used for generating the answer",
      "id": "GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest": {
      "description": "The request to deploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The issue model to deploy."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig": {
      "description": "Configuration for processing transcript objects.",
      "properties": {
        "medium": {
          "type": "string",
          "description": "Required. The medium transcript objects represent.",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
      "properties": {
        "wordIndex": {
          "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.",
          "format": "int32",
          "type": "integer"
        },
        "transcriptIndex": {
          "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "A point in a conversation that marks the start or the end of an annotation."
    },
    "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig": {
      "id": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig",
      "type": "object",
      "description": "Default configuration when creating Analyses in Insights.",
      "properties": {
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        },
        "runtimeIntegrationAnalysisPercentage": {
          "type": "number",
          "format": "double",
          "description": "Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100]."
        },
        "uploadConversationAnalysisPercentage": {
          "type": "number",
          "format": "double",
          "description": "Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100]."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse": {
      "type": "object",
      "description": "The response of listing issue models.",
      "properties": {
        "issueModels": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
          },
          "description": "The issue models that match the request.",
          "type": "array"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse"
    },
    "GoogleCloudContactcenterinsightsV1IssueModel": {
      "id": "GoogleCloudContactcenterinsightsV1IssueModel",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which this issue model was created."
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the issue model."
        },
        "trainingStats": {
          "description": "Output only. Immutable. The issue model's label statistics on its training data.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
          "readOnly": true
        },
        "languageCode": {
          "description": "Language of the model.",
          "type": "string"
        },
        "modelType": {
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "TYPE_V1",
            "TYPE_V2"
          ],
          "description": "Type of the model.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified model type.",
            "Type V1.",
            "Type V2."
          ]
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
        },
        "inputDataConfig": {
          "description": "Configs for the input data that used to create the issue model.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig"
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ],
          "type": "string",
          "description": "Output only. State of the model.",
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ]
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The most recent time at which the issue model was updated.",
          "readOnly": true,
          "type": "string"
        },
        "issueCount": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Number of issues in this issue model.",
          "format": "int64"
        }
      },
      "description": "The issue model resource.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata",
      "description": "The metadata for a bulk analyze conversations operation.",
      "properties": {
        "partialErrors": {
          "description": "Output only. Partial errors during bulk analyze operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation was created."
        },
        "totalRequestedAnalysesCount": {
          "description": "Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.",
          "type": "integer",
          "format": "int32"
        },
        "endTime": {
          "type": "string",
          "description": "The time the operation finished running.",
          "format": "google-datetime"
        },
        "completedAnalysesCount": {
          "format": "int32",
          "type": "integer",
          "description": "The number of requested analyses that have completed successfully so far."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest",
          "description": "The original request for bulk analyze."
        },
        "failedAnalysesCount": {
          "type": "integer",
          "description": "The number of requested analyses that have failed so far.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest": {
      "properties": {
        "issueModel": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModel",
          "description": "Required. The issue model to create."
        },
        "parent": {
          "description": "Required. The parent resource of the issue model.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest",
      "description": "The request to create an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest": {
      "description": "Request to import an issue model.",
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the issue model."
        },
        "createNewModel": {
          "type": "boolean",
          "description": "Optional. If set to true, will create an issue model from the imported file with randomly generated IDs for the issue model and corresponding issues. Otherwise, replaces an existing model with the same ID as the file."
        },
        "gcsSource": {
          "description": "Google Cloud Storage source message.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1ListConversationsResponse": {
      "properties": {
        "conversations": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
          },
          "type": "array",
          "description": "The conversations that match the request."
        },
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ListConversationsResponse",
      "description": "The response of listing conversations.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModel": {
      "description": "The issue model resource.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModel",
      "properties": {
        "state": {
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ],
          "readOnly": true,
          "description": "Output only. State of the model."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which this issue model was created.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the issue model."
        },
        "modelType": {
          "description": "Type of the model.",
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "TYPE_V1",
            "TYPE_V2"
          ],
          "enumDescriptions": [
            "Unspecified model type.",
            "Type V1.",
            "Type V2."
          ],
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the issue model was updated.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "trainingStats": {
          "readOnly": true,
          "description": "Output only. Immutable. The issue model's label statistics on its training data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats"
        },
        "inputDataConfig": {
          "description": "Configs for the input data that used to create the issue model.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig"
        },
        "issueCount": {
          "type": "string",
          "description": "Output only. Number of issues in this issue model.",
          "readOnly": true,
          "format": "int64"
        },
        "languageCode": {
          "description": "Language of the model.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig",
      "properties": {
        "trainingConversationsCount": {
          "type": "string",
          "readOnly": true,
          "format": "int64",
          "description": "Output only. Number of conversations used in training. Output only."
        },
        "filter": {
          "type": "string",
          "description": "A filter to reduce the conversations used for training the model to a specific subset."
        },
        "medium": {
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "deprecated": true,
          "type": "string",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`."
        }
      },
      "description": "Configs for the input data used to create the issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData",
      "description": "The data for an issue match annotation.",
      "properties": {
        "issueAssignment": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment",
          "description": "Information about the issue's assignment."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1SentimentData": {
      "properties": {
        "score": {
          "format": "float",
          "description": "The sentiment score between -1.0 (negative) and 1.0 (positive).",
          "type": "number"
        },
        "magnitude": {
          "format": "float",
          "type": "number",
          "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score."
        }
      },
      "description": "The data for a sentiment annotation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1SpeechConfig": {
      "properties": {
        "speechRecognizer": {
          "type": "string",
          "description": "The fully-qualified Speech Recognizer resource name. Format: `projects/{project_id}/locations/{location}/recognizer/{recognizer}`"
        }
      },
      "type": "object",
      "description": "Speech-to-Text configuration. Speech-to-Text settings are applied to conversations ingested from the `UploadConversation` and `IngestConversations` endpoints, including conversation coming from CCAI Platform. They are not applied to conversations ingested from the `CreateConversation` endpoint.",
      "id": "GoogleCloudContactcenterinsightsV1SpeechConfig"
    },
    "GoogleLongrunningOperation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "GoogleLongrunningOperation",
      "properties": {
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1GcsSource": {
      "description": "A Cloud Storage source of conversation data.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1GcsSource",
      "properties": {
        "audioUri": {
          "type": "string",
          "description": "Cloud Storage URI that points to a file that contains the conversation audio."
        },
        "transcriptUri": {
          "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse": {
      "properties": {},
      "type": "object",
      "description": "Response for an export insights operation.",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult": {
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "description": "The time at which the analysis ended.",
          "type": "string"
        },
        "callAnalysisMetadata": {
          "description": "Call-specific metadata created by the analysis.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata"
        }
      },
      "description": "The result of an analysis.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult"
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata",
      "type": "object",
      "properties": {
        "silence": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationLevelSilence",
          "description": "Overall conversation-level silence during the call."
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CallAnnotation"
          },
          "description": "A list of call annotations that apply to this call."
        },
        "entities": {
          "type": "object",
          "description": "All the entities in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Entity"
          }
        },
        "intents": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Intent"
          },
          "description": "All the matched intents in the call.",
          "type": "object"
        },
        "issueModelResult": {
          "description": "Overall conversation-level issue modeling result.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelResult"
        },
        "sentiments": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment"
          },
          "type": "array",
          "description": "Overall conversation-level sentiment for each channel of the call."
        },
        "phraseMatchers": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
          },
          "description": "All the matched phrase matchers in the call.",
          "type": "object"
        }
      },
      "description": "Call-specific metadata created during analysis."
    },
    "GoogleCloudContactcenterinsightsV1Intent": {
      "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the intent."
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the intent."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1Intent"
    },
    "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse": {
      "id": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "phraseMatchers": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
          },
          "description": "The phrase matchers that match the request.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "The response of listing phrase matchers."
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats": {
      "type": "object",
      "properties": {
        "successfulIngestCount": {
          "type": "integer",
          "format": "int32",
          "description": "Output only. The number of new conversations added during this ingest operation.",
          "readOnly": true
        },
        "processedObjectCount": {
          "description": "Output only. The number of objects processed during the ingest operation.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "duplicatesSkippedCount": {
          "description": "Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "failedIngestCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "description": "Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats",
      "description": "Statistics for IngestConversations operation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest",
      "type": "object",
      "properties": {
        "filter": {
          "type": "string",
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties."
        },
        "bigQueryDestination": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination",
          "description": "Specified if sink is a BigQuery table."
        },
        "kmsKey": {
          "type": "string",
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}"
        },
        "writeDisposition": {
          "enum": [
            "WRITE_DISPOSITION_UNSPECIFIED",
            "WRITE_TRUNCATE",
            "WRITE_APPEND"
          ],
          "description": "Options for what to do if the destination table already exists.",
          "type": "string",
          "enumDescriptions": [
            "Write disposition is not specified. Defaults to WRITE_TRUNCATE.",
            "If the table already exists, BigQuery will overwrite the table data and use the schema from the load.",
            "If the table already exists, BigQuery will append data to the table."
          ]
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to export data from."
        }
      },
      "description": "The request to export insights."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript": {
      "properties": {
        "transcriptSegments": {
          "type": "array",
          "description": "A list of sequential transcript segments that comprise the conversation.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment"
          }
        }
      },
      "description": "A message representing the transcript of a conversation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript"
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "GoogleRpcStatus",
      "type": "object",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData",
      "description": "Dialogflow interaction data.",
      "type": "object",
      "properties": {
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "dialogflowIntentId": {
          "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse",
      "properties": {
        "failedAnalysisCount": {
          "description": "Count of failed analyses.",
          "format": "int32",
          "type": "integer"
        },
        "successfulAnalysisCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of successful analyses."
        }
      },
      "type": "object",
      "description": "The response for a bulk analyze conversations operation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata": {
      "properties": {
        "annotations": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation"
          },
          "type": "array",
          "description": "A list of call annotations that apply to this call."
        },
        "entities": {
          "description": "All the entities in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1Entity"
          },
          "type": "object"
        },
        "sentiments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment"
          },
          "description": "Overall conversation-level sentiment for each channel of the call."
        },
        "silence": {
          "description": "Overall conversation-level silence during the call.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence"
        },
        "intents": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1Intent"
          },
          "description": "All the matched intents in the call."
        },
        "issueModelResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult",
          "description": "Overall conversation-level issue modeling result."
        },
        "phraseMatchers": {
          "description": "All the matched phrase matchers in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData"
          },
          "type": "object"
        }
      },
      "description": "Call-specific metadata created during analysis.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ListIssuesResponse": {
      "description": "The response of listing issues.",
      "properties": {
        "issues": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Issue"
          },
          "description": "The issues that match the request."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListIssuesResponse"
    },
    "GoogleCloudContactcenterinsightsV1IssueAssignment": {
      "id": "GoogleCloudContactcenterinsightsV1IssueAssignment",
      "description": "Information about the issue.",
      "type": "object",
      "properties": {
        "score": {
          "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1].",
          "format": "double",
          "type": "number"
        },
        "displayName": {
          "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.",
          "type": "string"
        },
        "issue": {
          "description": "Resource name of the assigned issue.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1SilenceData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1SilenceData",
      "properties": {},
      "description": "The data for a silence annotation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData",
      "description": "Agent Assist Smart Reply data.",
      "type": "object",
      "properties": {
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "confidenceScore": {
          "type": "number",
          "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "double"
        },
        "reply": {
          "type": "string",
          "description": "The content of the reply."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map that contains metadata about the Smart Reply and the document from which it originates."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData",
      "properties": {
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "suggestion": {
          "type": "string",
          "description": "The content of the suggestion."
        },
        "confidenceScore": {
          "format": "double",
          "type": "number",
          "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "metadata": {
          "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "Agent Assist Smart Compose suggestion data.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1InterruptionData": {
      "id": "GoogleCloudContactcenterinsightsV1InterruptionData",
      "properties": {},
      "type": "object",
      "description": "The data for an interruption annotation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig": {
      "description": "Configs for the input data used to create the issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig",
      "properties": {
        "filter": {
          "description": "A filter to reduce the conversations used for training the model to a specific subset.",
          "type": "string"
        },
        "medium": {
          "deprecated": true,
          "type": "string",
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ]
        },
        "trainingConversationsCount": {
          "type": "string",
          "description": "Output only. Number of conversations used in training. Output only.",
          "readOnly": true,
          "format": "int64"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries": {
      "description": "A time series representing conversations over time.",
      "type": "object",
      "properties": {
        "intervalDuration": {
          "description": "The duration of each interval.",
          "format": "google-duration",
          "type": "string"
        },
        "points": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval"
          },
          "type": "array",
          "description": "An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStats": {
      "type": "object",
      "properties": {
        "issueStats": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          },
          "type": "object",
          "description": "Statistics on each issue. Key is the issue's resource name."
        },
        "analyzedConversationsCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of conversations the issue model has analyzed at this point in time."
        },
        "unclassifiedConversationsCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
      "description": "Aggregated statistics about an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse": {
      "properties": {
        "successfulAnalysisCount": {
          "description": "Count of successful analyses.",
          "format": "int32",
          "type": "integer"
        },
        "failedAnalysisCount": {
          "format": "int32",
          "type": "integer",
          "description": "Count of failed analyses."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse",
      "type": "object",
      "description": "The response for a bulk analyze conversations operation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse": {
      "description": "The response to deploy an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1UploadConversationMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1UploadConversationMetadata",
      "properties": {
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created."
        },
        "analysisOperation": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The operation name for a successfully created analysis operation, if any."
        },
        "appliedRedactionConfig": {
          "description": "Output only. The redaction config applied to the uploaded conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig",
          "readOnly": true
        },
        "request": {
          "description": "Output only. The original request.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1UploadConversationRequest"
        }
      },
      "description": "The metadata for an `UploadConversation` operation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData": {
      "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the phrase matcher.",
          "type": "string"
        },
        "phraseMatcher": {
          "type": "string",
          "description": "The unique identifier (the resource name) of the phrase matcher."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo": {
      "description": "Information about an agent involved in the conversation.",
      "properties": {
        "displayName": {
          "description": "The agent's name.",
          "type": "string"
        },
        "agentId": {
          "type": "string",
          "description": "A user-specified string representing the agent."
        },
        "team": {
          "description": "A user-specified string representing the agent's team.",
          "type": "string"
        },
        "dispositionCode": {
          "type": "string",
          "description": "A user-provided string indicating the outcome of the agent's segment of the call."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo"
    },
    "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest": {
      "id": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest",
      "description": "The request to delete conversations in bulk.",
      "type": "object",
      "properties": {
        "force": {
          "type": "boolean",
          "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location}"
        },
        "maxDeleteCount": {
          "description": "Maximum number of conversations to delete.",
          "type": "integer",
          "format": "int32"
        },
        "filter": {
          "type": "string",
          "description": "Filter used to select the subset of conversations to delete."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IssueModelResult": {
      "id": "GoogleCloudContactcenterinsightsV1IssueModelResult",
      "properties": {
        "issues": {
          "description": "All the matched issues.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment"
          },
          "type": "array"
        },
        "issueModel": {
          "description": "Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Issue Modeling result on a conversation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo": {
      "properties": {
        "endOffset": {
          "format": "google-duration",
          "type": "string",
          "description": "Time offset of the end of this word relative to the beginning of the total conversation."
        },
        "word": {
          "type": "string",
          "description": "The word itself. Includes punctuation marks that surround the word."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset."
        },
        "startOffset": {
          "format": "google-duration",
          "description": "Time offset of the start of this word relative to the beginning of the total conversation.",
          "type": "string"
        }
      },
      "description": "Word-level info for words in a transcript.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
      "description": "Selector of all available annotators and phrase matchers to run.",
      "type": "object",
      "properties": {
        "runIssueModelAnnotator": {
          "type": "boolean",
          "description": "Whether to run the issue model annotator. A model should have already been deployed for this to take effect."
        },
        "runSummarizationAnnotator": {
          "type": "boolean",
          "description": "Whether to run the summarization annotator."
        },
        "runInterruptionAnnotator": {
          "type": "boolean",
          "description": "Whether to run the interruption annotator."
        },
        "phraseMatchers": {
          "description": "The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "runEntityAnnotator": {
          "type": "boolean",
          "description": "Whether to run the entity annotator."
        },
        "runPhraseMatcherAnnotator": {
          "description": "Whether to run the active phrase matcher annotator(s).",
          "type": "boolean"
        },
        "runIntentAnnotator": {
          "description": "Whether to run the intent annotator.",
          "type": "boolean"
        },
        "runSentimentAnnotator": {
          "type": "boolean",
          "description": "Whether to run the sentiment annotator."
        },
        "summarizationConfig": {
          "description": "Configuration for the summarization annotator.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig"
        },
        "runSilenceAnnotator": {
          "type": "boolean",
          "description": "Whether to run the silence annotator."
        },
        "issueModels": {
          "description": "The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment": {
      "properties": {
        "issue": {
          "description": "Resource name of the assigned issue.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then."
        },
        "score": {
          "type": "number",
          "format": "double",
          "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1]."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment",
      "description": "Information about the issue."
    },
    "GoogleCloudContactcenterinsightsV1ConversationParticipant": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationParticipant",
      "type": "object",
      "properties": {
        "role": {
          "description": "The role of the participant.",
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "type": "string",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ]
        },
        "dialogflowParticipantName": {
          "type": "string",
          "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}"
        },
        "userId": {
          "description": "A user-specified ID representing the participant.",
          "type": "string"
        },
        "obfuscatedExternalUserId": {
          "description": "Obfuscated user ID from Dialogflow.",
          "type": "string"
        },
        "dialogflowParticipant": {
          "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "deprecated": true,
          "type": "string"
        }
      },
      "description": "The call participant speaking for a given utterance."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData": {
      "properties": {
        "confidenceScore": {
          "type": "number",
          "format": "float",
          "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "uri": {
          "type": "string",
          "description": "Article URI."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map that contains metadata about the Article Suggestion and the document that it originates from."
        },
        "title": {
          "description": "Article title.",
          "type": "string"
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "source": {
          "type": "string",
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}"
        }
      },
      "description": "Agent Assist Article Suggestion data.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData"
    },
    "GoogleCloudContactcenterinsightsV1ConversationCallMetadata": {
      "type": "object",
      "description": "Call-specific metadata.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata",
      "properties": {
        "customerChannel": {
          "description": "The audio channel that contains the customer.",
          "format": "int32",
          "type": "integer"
        },
        "agentChannel": {
          "description": "The audio channel that contains the agent.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo": {
      "properties": {
        "displayName": {
          "description": "The agent's name.",
          "type": "string"
        },
        "dispositionCode": {
          "type": "string",
          "description": "A user-provided string indicating the outcome of the agent's segment of the call."
        },
        "team": {
          "description": "A user-specified string representing the agent's team.",
          "type": "string"
        },
        "agentId": {
          "type": "string",
          "description": "A user-specified string representing the agent."
        }
      },
      "description": "Information about an agent involved in the conversation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo"
    },
    "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig": {
      "id": "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig",
      "description": "Configuration for summarization.",
      "type": "object",
      "properties": {
        "summarizationModel": {
          "enum": [
            "SUMMARIZATION_MODEL_UNSPECIFIED",
            "BASELINE_MODEL",
            "BASELINE_MODEL_V2_0"
          ],
          "description": "Default summarization model to be used.",
          "enumDescriptions": [
            "Unspecified summarization model.",
            "The CCAI baseline model.",
            "The CCAI baseline model, V2.0."
          ],
          "type": "string"
        },
        "conversationProfile": {
          "description": "Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1AnnotationBoundary": {
      "properties": {
        "transcriptIndex": {
          "format": "int32",
          "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.",
          "type": "integer"
        },
        "wordIndex": {
          "format": "int32",
          "type": "integer",
          "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
      "description": "A point in a conversation that marks the start or the end of an annotation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource": {
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1GcsSource",
          "description": "A Cloud Storage location specification for the audio and transcript."
        },
        "dialogflowSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource",
          "description": "The source when the conversation comes from Dialogflow."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource",
      "description": "The conversation source, which is a combination of transcript and audio.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback": {
      "properties": {
        "correctnessLevel": {
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ],
          "description": "The correctness level of an answer."
        },
        "clicked": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was clicked by the human agent."
        },
        "displayed": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI."
        }
      },
      "description": "The feedback that the customer has about a certain answer in the conversation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback"
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name of the issue model to delete."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest",
      "description": "The request to delete an issue model."
    },
    "GoogleCloudContactcenterinsightsV1ExactMatchConfig": {
      "description": "Exact match configuration.",
      "properties": {
        "caseSensitive": {
          "description": "Whether to consider case sensitivity when performing an exact match.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ExactMatchConfig",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest",
      "description": "The request to analyze conversations in bulk.",
      "type": "object",
      "properties": {
        "analysisPercentage": {
          "format": "float",
          "description": "Required. Percentage of selected conversation to analyze, between [0, 100].",
          "type": "number"
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        },
        "parent": {
          "description": "Required. The parent resource to create analyses in.",
          "type": "string"
        },
        "filter": {
          "type": "string",
          "description": "Required. Filter used to select the subset of conversations to analyze."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1GcsSource": {
      "description": "A Cloud Storage source of conversation data.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1GcsSource",
      "properties": {
        "audioUri": {
          "type": "string",
          "description": "Cloud Storage URI that points to a file that contains the conversation audio."
        },
        "transcriptUri": {
          "type": "string",
          "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscript": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscript",
      "description": "A message representing the transcript of a conversation.",
      "type": "object",
      "properties": {
        "transcriptSegments": {
          "description": "A list of sequential transcript segments that comprise the conversation.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment"
          }
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput": {
      "type": "object",
      "description": "Explicit input used for generating the answer",
      "id": "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput",
      "properties": {
        "query": {
          "description": "Query text. Article Search uses this to store the input query used to generate the search results.",
          "type": "string"
        },
        "generatorName": {
          "type": "string",
          "description": "The resource name of associated generator. Format: `projects//locations//generators/`"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse",
      "description": "Response from import issue model",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1Issue": {
      "description": "The issue resource.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1Issue",
      "properties": {
        "displayName": {
          "description": "The representative name for the issue.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        },
        "updateTime": {
          "description": "Output only. The most recent time that this issue was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "sampleUtterances": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Resource names of the sample representative utterances that match to this issue."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which this issue was created.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination": {
      "properties": {
        "projectId": {
          "type": "string",
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used."
        },
        "table": {
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        },
        "dataset": {
          "type": "string",
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error."
        }
      },
      "description": "A BigQuery Table Reference.",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest": {
      "description": "The request to export insights.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest",
      "properties": {
        "filter": {
          "type": "string",
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties."
        },
        "kmsKey": {
          "type": "string",
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}"
        },
        "writeDisposition": {
          "description": "Options for what to do if the destination table already exists.",
          "enumDescriptions": [
            "Write disposition is not specified. Defaults to WRITE_TRUNCATE.",
            "If the table already exists, BigQuery will overwrite the table data and use the schema from the load.",
            "If the table already exists, BigQuery will append data to the table."
          ],
          "enum": [
            "WRITE_DISPOSITION_UNSPECIFIED",
            "WRITE_TRUNCATE",
            "WRITE_APPEND"
          ],
          "type": "string"
        },
        "bigQueryDestination": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination",
          "description": "Specified if sink is a BigQuery table."
        },
        "parent": {
          "description": "Required. The parent resource to export data from.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatcher": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatcher",
      "description": "The phrase matcher resource.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the phrase matcher."
        },
        "phraseMatchRuleGroups": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup"
          },
          "description": "A list of phase match rule groups that are included in this matcher.",
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}"
        },
        "revisionCreateTime": {
          "description": "Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the phrase matcher was updated.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "activationUpdateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The most recent time at which the activation status was updated.",
          "format": "google-datetime"
        },
        "type": {
          "description": "Required. The type of this phrase matcher.",
          "enum": [
            "PHRASE_MATCHER_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rule groups or there is no match.",
            "If any of the phrase match rule groups are met, there is a match."
          ]
        },
        "revisionId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567"
        },
        "roleMatch": {
          "description": "The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.",
          "type": "string",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ]
        },
        "versionTag": {
          "type": "string",
          "description": "The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`."
        },
        "active": {
          "description": "Applies the phrase matcher only when it is active.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1RuntimeAnnotation": {
      "type": "object",
      "properties": {
        "smartComposeSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData",
          "description": "Agent Assist Smart Compose suggestion data."
        },
        "smartReply": {
          "description": "Agent Assist Smart Reply data.",
          "$ref": "GoogleCloudContactcenterinsightsV1SmartReplyData"
        },
        "answerFeedback": {
          "description": "The feedback that the customer has about the answer in `data`.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnswerFeedback"
        },
        "startBoundary": {
          "description": "The boundary in the conversation where the annotation starts, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "articleSuggestion": {
          "description": "Agent Assist Article Suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData"
        },
        "annotationId": {
          "type": "string",
          "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}"
        },
        "faqAnswer": {
          "$ref": "GoogleCloudContactcenterinsightsV1FaqAnswerData",
          "description": "Agent Assist FAQ answer data."
        },
        "createTime": {
          "description": "The time at which this annotation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "dialogflowInteraction": {
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData",
          "description": "Dialogflow interaction data."
        },
        "conversationSummarizationSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData",
          "description": "Conversation summarization suggestion data."
        },
        "endBoundary": {
          "description": "The boundary in the conversation where the annotation ends, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "userInput": {
          "description": "Explicit input used for generating the answer",
          "$ref": "GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation",
      "description": "An annotation that was generated during the customer and agent interaction."
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest": {
      "properties": {
        "issueModel": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModel",
          "description": "Required. The issue model to create."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the issue model."
        }
      },
      "description": "The request to create an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo": {
      "type": "object",
      "description": "Word-level info for words in a transcript.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo",
      "properties": {
        "startOffset": {
          "format": "google-duration",
          "description": "Time offset of the start of this word relative to the beginning of the total conversation.",
          "type": "string"
        },
        "word": {
          "description": "The word itself. Includes punctuation marks that surround the word.",
          "type": "string"
        },
        "endOffset": {
          "type": "string",
          "description": "Time offset of the end of this word relative to the beginning of the total conversation.",
          "format": "google-duration"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1SilenceData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1SilenceData",
      "properties": {},
      "type": "object",
      "description": "The data for a silence annotation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1Analysis": {
      "properties": {
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector"
        },
        "createTime": {
          "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "analysisResult": {
          "description": "Output only. The result of the analysis, which is populated when the analysis finishes.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult"
        },
        "name": {
          "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}",
          "type": "string"
        },
        "requestTime": {
          "description": "Output only. The time at which the analysis was requested.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "The analysis resource.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1Analysis"
    },
    "GoogleCloudContactcenterinsightsV1IssueMatchData": {
      "description": "The data for an issue match annotation.",
      "id": "GoogleCloudContactcenterinsightsV1IssueMatchData",
      "properties": {
        "issueAssignment": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment",
          "description": "Information about the issue's assignment."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1SmartReplyData": {
      "properties": {
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the Smart Reply and the document from which it originates."
        },
        "reply": {
          "description": "The content of the reply.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1SmartReplyData",
      "description": "Agent Assist Smart Reply data."
    },
    "GoogleCloudContactcenterinsightsV1UploadConversationRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the conversation."
        },
        "redactionConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig",
          "description": "Optional. DLP settings for transcript redaction. Will default to the config specified in Settings."
        },
        "conversation": {
          "description": "Required. The conversation resource to create.",
          "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
        },
        "conversationId": {
          "description": "Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`",
          "type": "string"
        },
        "speechConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1SpeechConfig",
          "description": "Optional. Speech-to-Text configuration. Will default to the config specified in Settings."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1UploadConversationRequest",
      "description": "Request to upload a conversation."
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata": {
      "properties": {
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest",
          "description": "The original request for creation."
        }
      },
      "description": "Metadata for creating an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata",
      "description": "The metadata for a bulk delete conversations operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Partial errors during bulk delete conversations operation that might cause the operation output to be incomplete.",
          "type": "array"
        },
        "request": {
          "description": "The original request for bulk delete.",
          "$ref": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest"
        },
        "endTime": {
          "description": "The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1DialogflowSource": {
      "id": "GoogleCloudContactcenterinsightsV1DialogflowSource",
      "type": "object",
      "description": "A Dialogflow source of conversation data.",
      "properties": {
        "audioUri": {
          "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
          "type": "string"
        },
        "dialogflowConversation": {
          "type": "string",
          "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "readOnly": true
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData",
      "type": "object",
      "properties": {
        "intentUniqueId": {
          "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information.",
          "type": "string"
        }
      },
      "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata": {
      "type": "object",
      "properties": {
        "request": {
          "description": "The original request for export.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        },
        "partialErrors": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Partial errors during export operation that might cause the operation output to be incomplete."
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime"
        }
      },
      "description": "Metadata for an export insights operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig": {
      "description": "Speech-to-Text configuration. Speech-to-Text settings are applied to conversations ingested from the `UploadConversation` and `IngestConversations` endpoints, including conversation coming from CCAI Platform. They are not applied to conversations ingested from the `CreateConversation` endpoint.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig",
      "properties": {
        "speechRecognizer": {
          "description": "The fully-qualified Speech Recognizer resource name. Format: `projects/{project_id}/locations/{location}/recognizer/{recognizer}`",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig": {
      "properties": {
        "customerChannel": {
          "description": "Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed.",
          "format": "int32",
          "type": "integer"
        },
        "agentId": {
          "description": "Optional. An opaque, user-specified string representing a human agent who handled all conversations in the import. Note that this will be overridden if per-conversation metadata is provided through the `metadata_bucket_uri`.",
          "type": "string"
        },
        "agentChannel": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig",
      "description": "Configuration that applies to all conversations.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats",
      "description": "Statistics for IngestConversations operation.",
      "properties": {
        "duplicatesSkippedCount": {
          "readOnly": true,
          "type": "integer",
          "description": "Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.",
          "format": "int32"
        },
        "successfulIngestCount": {
          "readOnly": true,
          "description": "Output only. The number of new conversations added during this ingest operation.",
          "type": "integer",
          "format": "int32"
        },
        "processedObjectCount": {
          "type": "integer",
          "format": "int32",
          "description": "Output only. The number of objects processed during the ingest operation.",
          "readOnly": true
        },
        "failedIngestCount": {
          "type": "integer",
          "description": "Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.",
          "readOnly": true,
          "format": "int32"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse",
      "type": "object",
      "description": "The response for calculating conversation statistics.",
      "properties": {
        "averageDuration": {
          "format": "google-duration",
          "type": "string",
          "description": "The average duration of all conversations. The average is calculated using only conversations that have a time duration."
        },
        "issueMatches": {
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          },
          "deprecated": true,
          "type": "object"
        },
        "smartHighlighterMatches": {
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "type": "object",
          "description": "A map associating each smart highlighter display name with its respective number of matches in the set of conversations."
        },
        "customHighlighterMatches": {
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "description": "A map associating each custom highlighter resource name with its respective number of matches in the set of conversations."
        },
        "conversationCountTimeSeries": {
          "description": "A time series representing the count of conversations created over time that match that requested filter criteria.",
          "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries"
        },
        "issueMatchesStats": {
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          },
          "type": "object"
        },
        "conversationCount": {
          "description": "The total number of conversations.",
          "type": "integer",
          "format": "int32"
        },
        "averageTurnCount": {
          "type": "integer",
          "description": "The average number of turns per conversation.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1Settings": {
      "id": "GoogleCloudContactcenterinsightsV1Settings",
      "description": "The CCAI Insights project wide settings. Use these settings to configure the behavior of Insights. View these settings with [`getsettings`](https://cloud.google.com/contact-center/insights/docs/reference/rest/v1/projects.locations/getSettings) and change the settings with [`updateSettings`](https://cloud.google.com/contact-center/insights/docs/reference/rest/v1/projects.locations/updateSettings).",
      "type": "object",
      "properties": {
        "conversationTtl": {
          "description": "The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.",
          "format": "google-duration",
          "type": "string"
        },
        "analysisConfig": {
          "description": "Default analysis settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig"
        },
        "languageCode": {
          "type": "string",
          "description": "A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to \"en-US\" if it is neither specified on the segment nor here."
        },
        "speechConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1SpeechConfig",
          "description": "Optional. Default Speech-to-Text resources to use while ingesting audio files. Optional, CCAI Insights will create a default if not provided. This applies to conversations ingested from the `UploadConversation` and `IngestConversations` endpoints, including conversations coming from CCAI Platform."
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which the settings was created."
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which the settings were last updated."
        },
        "redactionConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig",
          "description": "Default DLP redaction resources to be applied while ingesting conversations. This applies to conversations ingested from the `UploadConversation` and `IngestConversations` endpoints, including conversations coming from CCAI Platform."
        },
        "name": {
          "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings",
          "type": "string"
        },
        "pubsubNotificationSettings": {
          "type": "object",
          "description": "A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * \"all-triggers\": Notify each time any of the supported triggers occurs. * \"create-analysis\": Notify each time an analysis is created. * \"create-conversation\": Notify each time a conversation is created. * \"export-insights-data\": Notify each time an export is complete. * \"ingest-conversations\": Notify each time an IngestConversations LRO is complete. * \"update-conversation\": Notify each time a conversation is updated via UpdateConversation. * \"upload-conversation\": Notify when an UploadConversation LRO is complete. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup": {
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup",
      "type": "object",
      "description": "A message representing a rule in the phrase matcher.",
      "properties": {
        "phraseMatchRules": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRule"
          },
          "type": "array",
          "description": "A list of phrase match rules that are included in this group."
        },
        "type": {
          "description": "Required. The type of this phrase match rule group.",
          "enum": [
            "PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rules or there is no match.",
            "If any of the phrase match rules are met, there is a match."
          ]
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ImportIssueModelResponse": {
      "description": "Response from import issue model",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1ImportIssueModelResponse"
    },
    "GoogleCloudContactcenterinsightsV1ArticleSuggestionData": {
      "description": "Agent Assist Article Suggestion data.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData",
      "properties": {
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}",
          "type": "string"
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "uri": {
          "description": "Article URI.",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "description": "Map that contains metadata about the Article Suggestion and the document that it originates from.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "confidenceScore": {
          "type": "number",
          "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float"
        },
        "title": {
          "type": "string",
          "description": "Article title."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig",
      "properties": {
        "deidentifyTemplate": {
          "description": "The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`",
          "type": "string"
        },
        "inspectTemplate": {
          "type": "string",
          "description": "The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`"
        }
      },
      "type": "object",
      "description": "DLP resources used for redaction while ingesting conversations. DLP settings are applied to conversations ingested from the `UploadConversation` and `IngestConversations` endpoints, including conversation coming from CCAI Platform. They are not applied to conversations ingested from the `CreateConversation` endpoint or the Dialogflow / Agent Assist runtime integrations. When using Dialogflow / Agent Assist runtime integrations, redaction should be performed in Dialogflow / Agent Assist."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata",
      "type": "object",
      "description": "Conversation metadata related to quality management.",
      "properties": {
        "waitDuration": {
          "type": "string",
          "format": "google-duration",
          "description": "The amount of time the customer waited to connect with an agent."
        },
        "agentInfo": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo"
          },
          "description": "Information about agents involved in the call."
        },
        "menuPath": {
          "type": "string",
          "description": "An arbitrary string value specifying the menu path the customer took."
        },
        "customerSatisfactionRating": {
          "format": "int32",
          "description": "An arbitrary integer value indicating the customer's satisfaction rating.",
          "type": "integer"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata": {
      "type": "object",
      "properties": {
        "request": {
          "description": "Output only. The original request.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "analysisOperation": {
          "description": "Output only. The operation name for a successfully created analysis operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        },
        "appliedRedactionConfig": {
          "description": "Output only. The redaction config applied to the uploaded conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig",
          "readOnly": true
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata",
      "description": "The metadata for an `UploadConversation` operation."
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsMetadata": {
      "description": "The metadata for an IngestConversations operation.",
      "type": "object",
      "properties": {
        "partialErrors": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "readOnly": true,
          "description": "Output only. Partial errors during ingest operation that might cause the operation output to be incomplete."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "request": {
          "description": "Output only. The original request for ingest.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest"
        },
        "ingestConversationsStats": {
          "readOnly": true,
          "description": "Output only. Statistics for IngestConversations operation.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadata"
    },
    "GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination": {
      "properties": {
        "objectUri": {
          "type": "string",
          "description": "Required. Format: `gs:///`"
        }
      },
      "description": "Google Cloud Storage Object URI to save the issue model to.",
      "id": "GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IntentMatchData": {
      "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.",
      "id": "GoogleCloudContactcenterinsightsV1IntentMatchData",
      "type": "object",
      "properties": {
        "intentUniqueId": {
          "type": "string",
          "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource": {
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource",
      "properties": {
        "bucketUri": {
          "type": "string",
          "description": "Required. The Cloud Storage bucket containing source objects."
        },
        "customMetadataKeys": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. Custom keys to extract as conversation labels from metadata files in `metadata_bucket_uri`. Keys not included in this field will be ignored. Note that there is a limit of 20 labels per conversation."
        },
        "bucketObjectType": {
          "enumDescriptions": [
            "The object type is unspecified and will default to `TRANSCRIPT`.",
            "The object is a transcript.",
            "The object is an audio file."
          ],
          "type": "string",
          "description": "Optional. Specifies the type of the objects in `bucket_uri`.",
          "enum": [
            "BUCKET_OBJECT_TYPE_UNSPECIFIED",
            "TRANSCRIPT",
            "AUDIO"
          ]
        },
        "metadataBucketUri": {
          "type": "string",
          "description": "Optional. The Cloud Storage path to the conversation metadata. Note that: [1] Metadata files are expected to be in JSON format. [2] Metadata and source files (transcripts or audio) must be in separate buckets. [3] A source file and its corresponding metadata file must share the same name to be properly ingested, E.g. `gs://bucket/audio/conversation1.mp3` and `gs://bucket/metadata/conversation1.json`."
        }
      },
      "type": "object",
      "description": "Configuration for Cloud Storage bucket sources."
    },
    "GoogleCloudContactcenterinsightsV1AnnotatorSelector": {
      "type": "object",
      "properties": {
        "runInterruptionAnnotator": {
          "type": "boolean",
          "description": "Whether to run the interruption annotator."
        },
        "runIntentAnnotator": {
          "description": "Whether to run the intent annotator.",
          "type": "boolean"
        },
        "runPhraseMatcherAnnotator": {
          "description": "Whether to run the active phrase matcher annotator(s).",
          "type": "boolean"
        },
        "runEntityAnnotator": {
          "type": "boolean",
          "description": "Whether to run the entity annotator."
        },
        "issueModels": {
          "description": "The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "runSentimentAnnotator": {
          "description": "Whether to run the sentiment annotator.",
          "type": "boolean"
        },
        "runIssueModelAnnotator": {
          "type": "boolean",
          "description": "Whether to run the issue model annotator. A model should have already been deployed for this to take effect."
        },
        "summarizationConfig": {
          "description": "Configuration for the summarization annotator.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig"
        },
        "runSummarizationAnnotator": {
          "type": "boolean",
          "description": "Whether to run the summarization annotator."
        },
        "runSilenceAnnotator": {
          "type": "boolean",
          "description": "Whether to run the silence annotator."
        },
        "phraseMatchers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}"
        }
      },
      "description": "Selector of all available annotators and phrase matchers to run.",
      "id": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
    },
    "GoogleCloudContactcenterinsightsV1alpha1Conversation": {
      "type": "object",
      "properties": {
        "qualityMetadata": {
          "description": "Conversation metadata related to quality management.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata"
        },
        "latestSummary": {
          "description": "Output only. Latest summary of the conversation.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData"
        },
        "expireTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted."
        },
        "medium": {
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "description": "Immutable. The conversation medium, if unspecified will default to PHONE_CALL.",
          "type": "string"
        },
        "agentId": {
          "type": "string",
          "description": "An opaque, user-specified string representing the human agent who handled the conversation."
        },
        "turnCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Output only. The number of turns in the conversation.",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}"
        },
        "labels": {
          "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "dataSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource",
          "description": "The source of the audio and transcription for the conversation."
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time at which the conversation started."
        },
        "obfuscatedUserId": {
          "description": "Obfuscated user ID which the customer sent to us.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which the conversation was created.",
          "readOnly": true,
          "type": "string"
        },
        "ttl": {
          "type": "string",
          "format": "google-duration",
          "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time."
        },
        "dialogflowIntents": {
          "readOnly": true,
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent"
          },
          "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}",
          "type": "object"
        },
        "languageCode": {
          "type": "string",
          "description": "A user-specified language code for the conversation."
        },
        "latestAnalysis": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1Analysis",
          "readOnly": true,
          "description": "Output only. The conversation's latest analysis, if one exists."
        },
        "duration": {
          "format": "google-duration",
          "description": "Output only. The duration of the conversation.",
          "readOnly": true,
          "type": "string"
        },
        "transcript": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript",
          "description": "Output only. The conversation transcript."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The most recent time at which the conversation was updated.",
          "readOnly": true,
          "type": "string"
        },
        "runtimeAnnotations": {
          "readOnly": true,
          "description": "Output only. The annotations that were generated during the customer and agent interaction.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation"
          }
        },
        "callMetadata": {
          "description": "Call-specific metadata.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1Conversation",
      "description": "The conversation resource."
    },
    "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment": {
      "type": "object",
      "description": "One channel of conversation-level sentiment data.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment",
      "properties": {
        "sentimentData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "Data specifying sentiment."
        },
        "channelTag": {
          "type": "integer",
          "format": "int32",
          "description": "The channel of the audio that the data applies to."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ConversationLevelSilence": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationLevelSilence",
      "type": "object",
      "properties": {
        "silenceDuration": {
          "type": "string",
          "description": "Amount of time calculated to be in silence.",
          "format": "google-duration"
        },
        "silencePercentage": {
          "type": "number",
          "description": "Percentage of the total conversation spent in silence.",
          "format": "float"
        }
      },
      "description": "Conversation-level silence data."
    },
    "GoogleCloudContactcenterinsightsV1ListAnalysesResponse": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "analyses": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
          },
          "description": "The analyses that match the request.",
          "type": "array"
        }
      },
      "description": "The response to list analyses."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats",
      "description": "Aggregated statistics about an issue.",
      "type": "object",
      "properties": {
        "issue": {
          "type": "string",
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        },
        "labeledConversationsCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of conversations attached to the issue at this point in time."
        },
        "displayName": {
          "description": "Display name of the issue.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the issue."
        },
        "labeledConversationsCount": {
          "description": "Number of conversations attached to the issue at this point in time.",
          "format": "int64",
          "type": "string"
        },
        "issue": {
          "type": "string",
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        }
      },
      "description": "Aggregated statistics about an issue.",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval": {
      "properties": {
        "conversationCount": {
          "format": "int32",
          "description": "The number of conversations created in this interval.",
          "type": "integer"
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The start time of this interval."
        }
      },
      "type": "object",
      "description": "A single interval in a time series.",
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval"
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest",
      "description": "The request to deploy an issue model.",
      "properties": {
        "name": {
          "description": "Required. The issue model to deploy.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata",
      "properties": {
        "request": {
          "description": "The original request for bulk delete.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest"
        },
        "createTime": {
          "description": "The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Partial errors during bulk delete conversations operation that might cause the operation output to be incomplete.",
          "type": "array"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time the operation finished running.",
          "type": "string"
        }
      },
      "description": "The metadata for a bulk delete conversations operation."
    },
    "GoogleCloudContactcenterinsightsV1HoldData": {
      "description": "The data for a hold annotation.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1HoldData"
    },
    "GoogleCloudContactcenterinsightsV1DialogflowIntent": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DialogflowIntent",
      "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination": {
      "type": "object",
      "properties": {
        "table": {
          "type": "string",
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error."
        },
        "projectId": {
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.",
          "type": "string"
        },
        "dataset": {
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination",
      "description": "A BigQuery Table Reference."
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata": {
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "annotatorSelector": {
          "description": "Output only. The annotator selector used for the analysis (if any).",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector"
        },
        "conversation": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The Conversation that this Analysis Operation belongs to."
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata",
      "description": "Metadata for a create analysis operation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ExportIssueModelResponse": {
      "properties": {},
      "description": "Response from export issue model",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExportIssueModelResponse"
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse",
      "description": "The response to deploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1Analysis": {
      "type": "object",
      "description": "The analysis resource.",
      "id": "GoogleCloudContactcenterinsightsV1Analysis",
      "properties": {
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        },
        "analysisResult": {
          "readOnly": true,
          "description": "Output only. The result of the analysis, which is populated when the analysis finishes.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResult"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}"
        },
        "requestTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which the analysis was requested.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1Intent": {
      "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1Intent",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier of the intent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ExportIssueModelMetadata": {
      "description": "Metadata used for export issue model.",
      "id": "GoogleCloudContactcenterinsightsV1ExportIssueModelMetadata",
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExportIssueModelRequest",
          "description": "The original export request."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time the operation finished running.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time the operation was created.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1RedactionConfig": {
      "id": "GoogleCloudContactcenterinsightsV1RedactionConfig",
      "description": "DLP resources used for redaction while ingesting conversations. DLP settings are applied to conversations ingested from the `UploadConversation` and `IngestConversations` endpoints, including conversation coming from CCAI Platform. They are not applied to conversations ingested from the `CreateConversation` endpoint or the Dialogflow / Agent Assist runtime integrations. When using Dialogflow / Agent Assist runtime integrations, redaction should be performed in Dialogflow / Agent Assist.",
      "properties": {
        "deidentifyTemplate": {
          "description": "The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`",
          "type": "string"
        },
        "inspectTemplate": {
          "description": "The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResult": {
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "description": "The time at which the analysis ended.",
          "type": "string"
        },
        "callAnalysisMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata",
          "description": "Call-specific metadata created by the analysis."
        }
      },
      "type": "object",
      "description": "The result of an analysis.",
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResult"
    },
    "GoogleProtobufEmpty": {
      "id": "GoogleProtobufEmpty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1DialogflowInteractionData": {
      "properties": {
        "dialogflowIntentId": {
          "type": "string",
          "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}"
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData",
      "description": "Dialogflow interaction data.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Conversation": {
      "properties": {
        "updateTime": {
          "description": "Output only. The most recent time at which the conversation was updated.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "medium": {
          "type": "string",
          "description": "Immutable. The conversation medium, if unspecified will default to PHONE_CALL.",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ]
        },
        "latestAnalysis": {
          "$ref": "GoogleCloudContactcenterinsightsV1Analysis",
          "readOnly": true,
          "description": "Output only. The conversation's latest analysis, if one exists."
        },
        "obfuscatedUserId": {
          "type": "string",
          "description": "Obfuscated user ID which the customer sent to us."
        },
        "languageCode": {
          "description": "A user-specified language code for the conversation.",
          "type": "string"
        },
        "transcript": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscript",
          "readOnly": true,
          "description": "Output only. The conversation transcript."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}"
        },
        "ttl": {
          "type": "string",
          "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.",
          "format": "google-duration"
        },
        "turnCount": {
          "readOnly": true,
          "description": "Output only. The number of turns in the conversation.",
          "type": "integer",
          "format": "int32"
        },
        "labels": {
          "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "expireTime": {
          "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.",
          "type": "string",
          "format": "google-datetime"
        },
        "dialogflowIntents": {
          "readOnly": true,
          "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1DialogflowIntent"
          },
          "type": "object"
        },
        "dataSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationDataSource",
          "description": "The source of the audio and transcription for the conversation."
        },
        "agentId": {
          "type": "string",
          "description": "An opaque, user-specified string representing the human agent who handled the conversation."
        },
        "createTime": {
          "description": "Output only. The time at which the conversation was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "runtimeAnnotations": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. The annotations that were generated during the customer and agent interaction.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation"
          }
        },
        "latestSummary": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData",
          "description": "Output only. Latest summary of the conversation."
        },
        "duration": {
          "description": "Output only. The duration of the conversation.",
          "readOnly": true,
          "type": "string",
          "format": "google-duration"
        },
        "startTime": {
          "format": "google-datetime",
          "description": "The time at which the conversation started.",
          "type": "string"
        },
        "qualityMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationQualityMetadata",
          "description": "Conversation metadata related to quality management."
        },
        "callMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata",
          "description": "Call-specific metadata."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1Conversation",
      "type": "object",
      "description": "The conversation resource."
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchData": {
      "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the phrase matcher.",
          "type": "string"
        },
        "phraseMatcher": {
          "type": "string",
          "description": "The unique identifier (the resource name) of the phrase matcher."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The issue model to export."
        },
        "gcsDestination": {
          "description": "Google Cloud Storage URI to export the issue model to.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination"
        }
      },
      "description": "Request to export an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation": {
      "properties": {
        "annotationStartBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        },
        "holdData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1HoldData",
          "description": "Data specifying a hold."
        },
        "silenceData": {
          "description": "Data specifying silence.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SilenceData"
        },
        "entityMentionData": {
          "description": "Data specifying an entity mention.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData"
        },
        "phraseMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData",
          "description": "Data specifying a phrase match."
        },
        "intentMatchData": {
          "description": "Data specifying an intent match.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData"
        },
        "issueMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData",
          "description": "Data specifying an issue match."
        },
        "sentimentData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
          "description": "Data specifying sentiment."
        },
        "channelTag": {
          "format": "int32",
          "type": "integer",
          "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated."
        },
        "interruptionData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1InterruptionData",
          "description": "Data specifying an interruption."
        },
        "annotationEndBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        }
      },
      "description": "A piece of metadata that applies to a window of a call.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE."
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata": {
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest",
          "description": "The original request for deployment."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata",
      "type": "object",
      "description": "Metadata for deploying an issue model."
    },
    "GoogleCloudContactcenterinsightsV1EntityMentionData": {
      "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.",
      "id": "GoogleCloudContactcenterinsightsV1EntityMentionData",
      "type": "object",
      "properties": {
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "Sentiment expressed for this mention of the entity."
        },
        "entityUniqueId": {
          "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.",
          "type": "string"
        },
        "type": {
          "description": "The type of the entity mention.",
          "enum": [
            "MENTION_TYPE_UNSPECIFIED",
            "PROPER",
            "COMMON"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Proper noun.",
            "Common noun (or noun compound)."
          ]
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1View": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable display name of the view."
        },
        "value": {
          "description": "String with specific view properties, must be non-empty.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which this view was created.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}"
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the view was updated.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1View",
      "description": "The View resource."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant": {
      "properties": {
        "role": {
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "description": "The role of the participant.",
          "type": "string",
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ]
        },
        "dialogflowParticipantName": {
          "type": "string",
          "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}"
        },
        "dialogflowParticipant": {
          "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "deprecated": true,
          "type": "string"
        },
        "obfuscatedExternalUserId": {
          "type": "string",
          "description": "Obfuscated user ID from Dialogflow."
        },
        "userId": {
          "type": "string",
          "description": "A user-specified ID representing the participant."
        }
      },
      "type": "object",
      "description": "The call participant speaking for a given utterance.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant"
    },
    "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData",
      "properties": {
        "text": {
          "type": "string",
          "description": "The summarization content that is concatenated into one string."
        },
        "textSections": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.",
          "type": "object"
        },
        "confidence": {
          "description": "The confidence score of the summarization.",
          "type": "number",
          "format": "float"
        },
        "answerRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "metadata": {
          "description": "A map that contains metadata about the summarization and the document from which it originates.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "conversationModel": {
          "type": "string",
          "description": "The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}"
        }
      },
      "type": "object",
      "description": "Conversation summarization suggestion data."
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequest": {
      "type": "object",
      "properties": {
        "transcriptObjectConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig",
          "description": "Configuration for when `source` contains conversation transcripts."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource for new conversations."
        },
        "redactionConfig": {
          "description": "Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig"
        },
        "conversationConfig": {
          "description": "Configuration that applies to all conversations.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig"
        },
        "gcsSource": {
          "description": "A cloud storage bucket source. Note that any previously ingested objects from the source will be skipped to avoid duplication.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource"
        },
        "speechConfig": {
          "description": "Optional. Default Speech-to-Text configuration. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1SpeechConfig"
        },
        "sampleSize": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. If set, this fields indicates the number of objects to ingest from the Cloud Storage bucket. If empty, the entire bucket will be ingested. Unless they are first deleted, conversations produced through sampling won't be ingested by subsequent ingest requests."
        }
      },
      "description": "The request to ingest conversations.",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest"
    },
    "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse",
      "description": "The response for a bulk delete conversations operation.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest",
      "description": "The request to delete conversations in bulk.",
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location}"
        },
        "force": {
          "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses.",
          "type": "boolean"
        },
        "maxDeleteCount": {
          "format": "int32",
          "description": "Maximum number of conversations to delete.",
          "type": "integer"
        },
        "filter": {
          "description": "Filter used to select the subset of conversations to delete.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1FaqAnswerData": {
      "id": "GoogleCloudContactcenterinsightsV1FaqAnswerData",
      "type": "object",
      "description": "Agent Assist frequently-asked-question answer data.",
      "properties": {
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "question": {
          "type": "string",
          "description": "The corresponding FAQ question."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the FAQ answer and the document that it originates from.",
          "type": "object"
        },
        "confidenceScore": {
          "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "float"
        },
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.",
          "type": "string"
        },
        "answer": {
          "description": "The piece of text from the `source` knowledge base document.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1Entity": {
      "id": "GoogleCloudContactcenterinsightsV1Entity",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The entity type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSON",
            "LOCATION",
            "ORGANIZATION",
            "EVENT",
            "WORK_OF_ART",
            "CONSUMER_GOOD",
            "OTHER",
            "PHONE_NUMBER",
            "ADDRESS",
            "DATE",
            "NUMBER",
            "PRICE"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Person.",
            "Location.",
            "Organization.",
            "Event.",
            "Artwork.",
            "Consumer product.",
            "Other types of entities.",
            "Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.",
            "Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.",
            "Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.",
            "Number. The metadata is the number itself.",
            "Price. The metadata identifies the `value` and `currency`."
          ]
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.",
          "type": "object"
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the entity."
        },
        "sentiment": {
          "description": "The aggregate sentiment expressed for this entity in the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "salience": {
          "format": "float",
          "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.",
          "type": "number"
        }
      },
      "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location."
    },
    "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata",
      "description": "Metadata for a create analysis operation.",
      "type": "object",
      "properties": {
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created."
        },
        "annotatorSelector": {
          "description": "Output only. The annotator selector used for the analysis (if any).",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
        },
        "conversation": {
          "type": "string",
          "description": "Output only. The Conversation that this Analysis Operation belongs to.",
          "readOnly": true
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData",
      "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.",
      "properties": {
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
          "description": "Sentiment expressed for this mention of the entity."
        },
        "entityUniqueId": {
          "type": "string",
          "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to."
        },
        "type": {
          "type": "string",
          "enum": [
            "MENTION_TYPE_UNSPECIFIED",
            "PROPER",
            "COMMON"
          ],
          "description": "The type of the entity mention.",
          "enumDescriptions": [
            "Unspecified.",
            "Proper noun.",
            "Common noun (or noun compound)."
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource",
      "description": "Configuration for Cloud Storage bucket sources.",
      "type": "object",
      "properties": {
        "metadataBucketUri": {
          "type": "string",
          "description": "Optional. The Cloud Storage path to the conversation metadata. Note that: [1] Metadata files are expected to be in JSON format. [2] Metadata and source files (transcripts or audio) must be in separate buckets. [3] A source file and its corresponding metadata file must share the same name to be properly ingested, E.g. `gs://bucket/audio/conversation1.mp3` and `gs://bucket/metadata/conversation1.json`."
        },
        "bucketObjectType": {
          "enum": [
            "BUCKET_OBJECT_TYPE_UNSPECIFIED",
            "TRANSCRIPT",
            "AUDIO"
          ],
          "enumDescriptions": [
            "The object type is unspecified and will default to `TRANSCRIPT`.",
            "The object is a transcript.",
            "The object is an audio file."
          ],
          "type": "string",
          "description": "Optional. Specifies the type of the objects in `bucket_uri`."
        },
        "bucketUri": {
          "type": "string",
          "description": "Required. The Cloud Storage bucket containing source objects."
        },
        "customMetadataKeys": {
          "type": "array",
          "description": "Optional. Custom keys to extract as conversation labels from metadata files in `metadata_bucket_uri`. Keys not included in this field will be ignored. Note that there is a limit of 20 labels per conversation.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleLongrunningListOperationsResponse": {
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "id": "GoogleLongrunningListOperationsResponse",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata": {
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        },
        "request": {
          "description": "The original request for undeployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata",
      "type": "object",
      "description": "Metadata for undeploying an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1InterruptionData": {
      "description": "The data for an interruption annotation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1InterruptionData",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata": {
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest",
          "description": "The original request for deployment."
        }
      },
      "description": "Metadata for deploying an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse": {
      "description": "The response for a bulk delete conversations operation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelMetadata": {
      "type": "object",
      "description": "Metadata used for export issue model.",
      "properties": {
        "createTime": {
          "description": "The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The time the operation finished running.",
          "format": "google-datetime",
          "type": "string"
        },
        "request": {
          "description": "The original export request.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData": {
      "description": "Agent Assist frequently-asked-question answer data.",
      "properties": {
        "confidenceScore": {
          "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float",
          "type": "number"
        },
        "answer": {
          "description": "The piece of text from the `source` knowledge base document.",
          "type": "string"
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map that contains metadata about the FAQ answer and the document that it originates from."
        },
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.",
          "type": "string"
        },
        "question": {
          "type": "string",
          "description": "The corresponding FAQ question."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest",
      "type": "object",
      "description": "The request to delete an issue model.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name of the issue model to delete."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ImportIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1ImportIssueModelRequest",
      "properties": {
        "parent": {
          "description": "Required. The parent resource of the issue model.",
          "type": "string"
        },
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource",
          "description": "Google Cloud Storage source message."
        },
        "createNewModel": {
          "type": "boolean",
          "description": "Optional. If set to true, will create an issue model from the imported file with randomly generated IDs for the issue model and corresponding issues. Otherwise, replaces an existing model with the same ID as the file."
        }
      },
      "type": "object",
      "description": "Request to import an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse",
      "description": "Response from export issue model",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse",
      "type": "object",
      "properties": {},
      "description": "Response for an export insights operation."
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata": {
      "properties": {
        "smartReplyAllowlistCovered": {
          "type": "boolean",
          "description": "Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist."
        }
      },
      "description": "Metadata from Dialogflow relating to the current transcript segment.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig": {
      "description": "Configuration information of a phrase match rule.",
      "type": "object",
      "properties": {
        "exactMatchConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExactMatchConfig",
          "description": "The configuration for the exact match rule."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig"
    },
    "GoogleCloudContactcenterinsightsV1ExportIssueModelRequest": {
      "description": "Request to export an issue model.",
      "properties": {
        "name": {
          "description": "Required. The issue model to export.",
          "type": "string"
        },
        "gcsDestination": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination",
          "description": "Google Cloud Storage URI to export the issue model to."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ExportIssueModelRequest",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata": {
      "properties": {
        "smartReplyAllowlistCovered": {
          "description": "Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
      "type": "object",
      "description": "Metadata from Dialogflow relating to the current transcript segment."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse": {
      "description": "The response to an IngestConversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest": {
      "properties": {
        "speechConfig": {
          "description": "Optional. Default Speech-to-Text configuration. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SpeechConfig"
        },
        "parent": {
          "description": "Required. The parent resource for new conversations.",
          "type": "string"
        },
        "sampleSize": {
          "format": "int32",
          "description": "Optional. If set, this fields indicates the number of objects to ingest from the Cloud Storage bucket. If empty, the entire bucket will be ingested. Unless they are first deleted, conversations produced through sampling won't be ingested by subsequent ingest requests.",
          "type": "integer"
        },
        "conversationConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig",
          "description": "Configuration that applies to all conversations."
        },
        "redactionConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig",
          "description": "Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings."
        },
        "transcriptObjectConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig",
          "description": "Configuration for when `source` contains conversation transcripts."
        },
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource",
          "description": "A cloud storage bucket source. Note that any previously ingested objects from the source will be skipped to avoid duplication."
        }
      },
      "description": "The request to ingest conversations.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest"
    },
    "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation": {
      "properties": {
        "startBoundary": {
          "description": "The boundary in the conversation where the annotation starts, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary"
        },
        "userInput": {
          "description": "Explicit input used for generating the answer",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput"
        },
        "conversationSummarizationSuggestion": {
          "description": "Conversation summarization suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData"
        },
        "endBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        },
        "answerFeedback": {
          "description": "The feedback that the customer has about the answer in `data`.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback"
        },
        "annotationId": {
          "type": "string",
          "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}"
        },
        "smartReply": {
          "description": "Agent Assist Smart Reply data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData"
        },
        "smartComposeSuggestion": {
          "description": "Agent Assist Smart Compose suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData"
        },
        "articleSuggestion": {
          "description": "Agent Assist Article Suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData"
        },
        "createTime": {
          "description": "The time at which this annotation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "faqAnswer": {
          "description": "Agent Assist FAQ answer data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData"
        },
        "dialogflowInteraction": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData",
          "description": "Dialogflow interaction data."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation",
      "description": "An annotation that was generated during the customer and agent interaction.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1HoldData": {
      "type": "object",
      "description": "The data for a hold annotation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1HoldData",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse": {
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse",
      "type": "object",
      "description": "The response to undeploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination": {
      "description": "Google Cloud Storage Object URI to save the issue model to.",
      "type": "object",
      "properties": {
        "objectUri": {
          "type": "string",
          "description": "Required. Format: `gs:///`"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRule": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "description": "Required. The phrase to be matched."
        },
        "negated": {
          "type": "boolean",
          "description": "Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment."
        },
        "config": {
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig",
          "description": "Provides additional information about the rule that specifies how to apply the rule."
        }
      },
      "description": "The data for a phrase match rule.",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRule"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig": {
      "properties": {
        "customerChannel": {
          "type": "integer",
          "description": "Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed.",
          "format": "int32"
        },
        "agentId": {
          "type": "string",
          "description": "Optional. An opaque, user-specified string representing a human agent who handled all conversations in the import. Note that this will be overridden if per-conversation metadata is provided through the `metadata_bucket_uri`."
        },
        "agentChannel": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed."
        }
      },
      "description": "Configuration that applies to all conversations.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata",
      "properties": {
        "agentChannel": {
          "type": "integer",
          "format": "int32",
          "description": "The audio channel that contains the agent."
        },
        "customerChannel": {
          "description": "The audio channel that contains the customer.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Call-specific metadata.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData": {
      "properties": {
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates.",
          "type": "object"
        },
        "suggestion": {
          "type": "string",
          "description": "The content of the suggestion."
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        }
      },
      "description": "Agent Assist Smart Compose suggestion data.",
      "id": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1AnswerFeedback": {
      "description": "The feedback that the customer has about a certain answer in the conversation.",
      "id": "GoogleCloudContactcenterinsightsV1AnswerFeedback",
      "type": "object",
      "properties": {
        "correctnessLevel": {
          "type": "string",
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ],
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ],
          "description": "The correctness level of an answer."
        },
        "displayed": {
          "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.",
          "type": "boolean"
        },
        "clicked": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was clicked by the human agent."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ListViewsResponse": {
      "description": "The response of listing views.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListViewsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "views": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1View"
          },
          "description": "The views that match the request.",
          "type": "array"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse",
      "type": "object",
      "properties": {},
      "description": "The response to undeploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig": {
      "description": "Configuration for processing transcript objects.",
      "type": "object",
      "properties": {
        "medium": {
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "description": "Required. The medium transcript objects represent.",
          "type": "string",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ]
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig"
    }
  },
  "fullyEncodeReservedExpansion": true,
  "mtlsRootUrl": "https://contactcenterinsights.mtls.googleapis.com/",
  "description": "",
  "version": "v1",
  "rootUrl": "https://contactcenterinsights.googleapis.com/",
  "ownerName": "Google",
  "version_module": true,
  "parameters": {
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true",
      "type": "boolean"
    },
    "$.xgafv": {
      "location": "query",
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ]
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "location": "query",
      "description": "Data format for response."
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    }
  }
}

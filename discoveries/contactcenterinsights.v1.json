{
  "name": "contactcenterinsights",
  "schemas": {
    "GoogleCloudContactcenterinsightsV1FaqAnswerData": {
      "properties": {
        "answer": {
          "description": "The piece of text from the `source` knowledge base document.",
          "type": "string"
        },
        "question": {
          "type": "string",
          "description": "The corresponding FAQ question."
        },
        "source": {
          "type": "string",
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}."
        },
        "metadata": {
          "description": "Map that contains metadata about the FAQ answer and the document that it originates from.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "queryRecord": {
          "type": "string",
          "description": "Name of the query record. Format: projects/{project}/locations/{location}/queryRecords/{query_record}."
        },
        "confidenceScore": {
          "format": "float",
          "type": "number",
          "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        }
      },
      "type": "object",
      "description": "Agent Assist frequently-asked-question answer data.",
      "id": "GoogleCloudContactcenterinsightsV1FaqAnswerData"
    },
    "GoogleCloudContactcenterinsightsV1EntityMentionData": {
      "properties": {
        "sentiment": {
          "description": "Sentiment expressed for this mention of the entity.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "type": {
          "description": "The type of the entity mention.",
          "enumDescriptions": [
            "Unspecified.",
            "Proper noun.",
            "Common noun (or noun compound)."
          ],
          "type": "string",
          "enum": [
            "MENTION_TYPE_UNSPECIFIED",
            "PROPER",
            "COMMON"
          ]
        },
        "entityUniqueId": {
          "type": "string",
          "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1EntityMentionData",
      "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Entity": {
      "type": "object",
      "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.",
      "properties": {
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "The aggregate sentiment expressed for this entity in the conversation."
        },
        "salience": {
          "format": "float",
          "type": "number",
          "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient."
        },
        "type": {
          "enumDescriptions": [
            "Unspecified.",
            "Person.",
            "Location.",
            "Organization.",
            "Event.",
            "Artwork.",
            "Consumer product.",
            "Other types of entities.",
            "Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.",
            "Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.",
            "Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.",
            "Number. The metadata is the number itself.",
            "Price. The metadata identifies the `value` and `currency`."
          ],
          "type": "string",
          "description": "The entity type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSON",
            "LOCATION",
            "ORGANIZATION",
            "EVENT",
            "WORK_OF_ART",
            "CONSUMER_GOOD",
            "OTHER",
            "PHONE_NUMBER",
            "ADDRESS",
            "DATE",
            "NUMBER",
            "PRICE"
          ]
        },
        "displayName": {
          "description": "The representative name for the entity.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1Entity"
    },
    "GoogleCloudContactcenterinsightsV1Issue": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1Issue",
      "properties": {
        "name": {
          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the issue."
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The most recent time that this issue was updated.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which this issue was created.",
          "type": "string"
        }
      },
      "description": "The issue resource."
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest": {
      "description": "The request to undeploy an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest",
      "properties": {
        "name": {
          "description": "Required. The issue model to undeploy.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats": {
      "type": "object",
      "description": "Aggregated statistics about an issue model.",
      "properties": {
        "issueStats": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats"
          },
          "description": "Statistics on each issue. Key is the issue's resource name.",
          "type": "object"
        },
        "analyzedConversationsCount": {
          "format": "int64",
          "description": "Number of conversations the issue model has analyzed at this point in time.",
          "type": "string"
        },
        "unclassifiedConversationsCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats"
    },
    "GoogleLongrunningListOperationsResponse": {
      "id": "GoogleLongrunningListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "type": "array"
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata": {
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest",
          "description": "The original request for deletion."
        },
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata",
      "description": "Metadata for deleting an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest",
      "properties": {
        "name": {
          "description": "Required. The issue model to undeploy.",
          "type": "string"
        }
      },
      "description": "The request to undeploy an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval": {
      "properties": {
        "startTime": {
          "type": "string",
          "description": "The start time of this interval.",
          "format": "google-datetime"
        },
        "conversationCount": {
          "description": "The number of conversations created in this interval.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "A single interval in a time series.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval"
    },
    "GoogleCloudContactcenterinsightsV1ConversationDataSource": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationDataSource",
      "description": "The conversation source, which is a combination of transcript and audio.",
      "type": "object",
      "properties": {
        "dialogflowSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowSource",
          "description": "The source when the conversation comes from Dialogflow."
        },
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1GcsSource",
          "description": "A Cloud Storage location specification for the audio and transcript."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
      "properties": {
        "smartReplyAllowlistCovered": {
          "type": "boolean",
          "description": "Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist."
        }
      },
      "description": "Metadata from Dialogflow relating to the current transcript segment."
    },
    "GoogleCloudContactcenterinsightsV1DialogflowSource": {
      "properties": {
        "dialogflowConversation": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}"
        },
        "audioUri": {
          "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DialogflowSource",
      "type": "object",
      "description": "A Dialogflow source of conversation data."
    },
    "GoogleCloudContactcenterinsightsV1GcsSource": {
      "properties": {
        "audioUri": {
          "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
          "type": "string"
        },
        "transcriptUri": {
          "type": "string",
          "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript."
        }
      },
      "description": "A Cloud Storage source of conversation data.",
      "id": "GoogleCloudContactcenterinsightsV1GcsSource",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1AnswerFeedback": {
      "id": "GoogleCloudContactcenterinsightsV1AnswerFeedback",
      "properties": {
        "clicked": {
          "description": "Indicates whether an answer or item was clicked by the human agent.",
          "type": "boolean"
        },
        "correctnessLevel": {
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ],
          "description": "The correctness level of an answer.",
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ],
          "type": "string"
        },
        "displayed": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI."
        }
      },
      "type": "object",
      "description": "The feedback that the customer has about a certain answer in the conversation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination": {
      "properties": {
        "table": {
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        },
        "projectId": {
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.",
          "type": "string"
        },
        "dataset": {
          "type": "string",
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination",
      "description": "A BigQuery Table Reference.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse",
      "properties": {
        "currentStats": {
          "description": "The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats"
        }
      },
      "description": "Response of querying an issue model's statistics."
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats": {
      "type": "object",
      "description": "Aggregated statistics about an issue.",
      "properties": {
        "issue": {
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
          "type": "string"
        },
        "labeledConversationsCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of conversations attached to the issue at this point in time."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest",
      "description": "The request to deploy an issue model.",
      "properties": {
        "name": {
          "description": "Required. The issue model to deploy.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata": {
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest",
          "description": "The original request for deployment."
        },
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Metadata for deploying an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResult": {
      "type": "object",
      "description": "The result of an analysis.",
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResult",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time at which the analysis ended."
        },
        "callAnalysisMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata",
          "description": "Call-specific metadata created by the analysis."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatcher": {
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatcher",
      "description": "The phrase matcher resource.",
      "type": "object",
      "properties": {
        "revisionCreateTime": {
          "description": "Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the phrase matcher."
        },
        "type": {
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rule groups or there is no match.",
            "If any of the phrase match rule groups are met, there is a match."
          ],
          "description": "Required. The type of this phrase matcher.",
          "type": "string",
          "enum": [
            "PHRASE_MATCHER_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ]
        },
        "name": {
          "type": "string",
          "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}"
        },
        "roleMatch": {
          "type": "string",
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "description": "The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript."
        },
        "activationUpdateTime": {
          "description": "Output only. The most recent time at which the activation status was updated.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The most recent time at which the phrase matcher was updated."
        },
        "versionTag": {
          "type": "string",
          "description": "The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`."
        },
        "active": {
          "description": "Applies the phrase matcher only when it is active.",
          "type": "boolean"
        },
        "revisionId": {
          "description": "Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567",
          "readOnly": true,
          "type": "string"
        },
        "phraseMatchRuleGroups": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup"
          },
          "description": "A list of phase match rule groups that are included in this matcher."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1SentimentData": {
      "id": "GoogleCloudContactcenterinsightsV1SentimentData",
      "properties": {
        "magnitude": {
          "type": "number",
          "format": "float",
          "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score."
        },
        "score": {
          "description": "The sentiment score between -1.0 (negative) and 1.0 (positive).",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object",
      "description": "The data for a sentiment annotation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest": {
      "description": "The request to delete an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name of the issue model to delete."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse",
      "properties": {},
      "type": "object",
      "description": "Response for an export insights operation."
    },
    "GoogleCloudContactcenterinsightsV1IssueModel": {
      "description": "The issue model resource.",
      "id": "GoogleCloudContactcenterinsightsV1IssueModel",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The representative name for the issue model."
        },
        "trainingStats": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
          "description": "Output only. Immutable. The issue model's label statistics on its training data.",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time at which this issue model was created.",
          "format": "google-datetime"
        },
        "state": {
          "description": "Output only. State of the model.",
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ],
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ]
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The most recent time at which the issue model was updated."
        },
        "inputDataConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig",
          "description": "Configs for the input data that used to create the issue model."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Settings": {
      "id": "GoogleCloudContactcenterinsightsV1Settings",
      "description": "The settings resource.",
      "type": "object",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which the settings was created.",
          "type": "string",
          "readOnly": true
        },
        "conversationTtl": {
          "description": "The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.",
          "format": "google-duration",
          "type": "string"
        },
        "name": {
          "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings",
          "type": "string"
        },
        "languageCode": {
          "description": "A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to \"en-US\" if it is neither specified on the segment nor here.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The time at which the settings were last updated.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "pubsubNotificationSettings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * \"all-triggers\": Notify each time any of the supported triggers occurs. * \"create-analysis\": Notify each time an analysis is created. * \"create-conversation\": Notify each time a conversation is created. * \"export-insights-data\": Notify each time an export is complete. * \"update-conversation\": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}"
        },
        "analysisConfig": {
          "description": "Default analysis settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse": {
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse",
      "type": "object",
      "properties": {},
      "description": "Response for an export insights operation."
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup",
      "properties": {
        "type": {
          "type": "string",
          "description": "Required. The type of this phrase match rule group.",
          "enum": [
            "PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rules or there is no match.",
            "If any of the phrase match rules are met, there is a match."
          ]
        },
        "phraseMatchRules": {
          "type": "array",
          "description": "A list of phase match rules that are included in this group.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRule"
          }
        }
      },
      "description": "A message representing a rule in the phrase matcher."
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest": {
      "type": "object",
      "description": "The request to delete an issue model.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name of the issue model to delete."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest",
          "description": "The original request for deletion."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata",
      "description": "Metadata for deleting an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata",
      "type": "object",
      "description": "Metadata for an export insights operation.",
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest",
          "description": "The original request for export."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        },
        "partialErrors": {
          "description": "Partial errors during export operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1RuntimeAnnotation": {
      "type": "object",
      "properties": {
        "faqAnswer": {
          "description": "Agent Assist FAQ answer data.",
          "$ref": "GoogleCloudContactcenterinsightsV1FaqAnswerData"
        },
        "dialogflowInteraction": {
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData",
          "description": "Dialogflow interaction data."
        },
        "annotationId": {
          "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}",
          "type": "string"
        },
        "answerFeedback": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnswerFeedback",
          "description": "The feedback that the customer has about the answer in `data`."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time at which this annotation was created."
        },
        "endBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        },
        "startBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        },
        "articleSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData",
          "description": "Agent Assist Article Suggestion data."
        },
        "smartReply": {
          "$ref": "GoogleCloudContactcenterinsightsV1SmartReplyData",
          "description": "Agent Assist Smart Reply data."
        },
        "smartComposeSuggestion": {
          "description": "Agent Assist Smart Compose suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation",
      "description": "An annotation that was generated during the customer and agent interaction."
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscript": {
      "description": "A message representing the transcript of a conversation.",
      "properties": {
        "transcriptSegments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment"
          },
          "description": "A list of sequential transcript segments that comprise the conversation."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscript"
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata": {
      "properties": {
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "conversation": {
          "type": "string",
          "description": "Output only. The Conversation that this Analysis Operation belongs to.",
          "readOnly": true
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata",
      "description": "Metadata for a create analysis operation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment",
      "properties": {
        "words": {
          "description": "A list of the word-specific information for each word in the segment.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo"
          }
        },
        "messageTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time that the message occurred, if provided."
        },
        "dialogflowSegmentMetadata": {
          "description": "CCAI metadata relating to the current transcript segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata"
        },
        "languageCode": {
          "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".",
          "type": "string"
        },
        "text": {
          "type": "string",
          "description": "The text of this segment."
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset."
        },
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "The sentiment for this transcript segment."
        },
        "channelTag": {
          "type": "integer",
          "format": "int32",
          "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono."
        },
        "segmentParticipant": {
          "description": "The participant of this segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationParticipant"
        }
      },
      "description": "A segment of a full transcript.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Analysis": {
      "description": "The analysis resource.",
      "id": "GoogleCloudContactcenterinsightsV1Analysis",
      "properties": {
        "requestTime": {
          "readOnly": true,
          "description": "Output only. The time at which the analysis was requested.",
          "type": "string",
          "format": "google-datetime"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes.",
          "format": "google-datetime",
          "readOnly": true
        },
        "analysisResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResult",
          "description": "Output only. The result of the analysis, which is populated when the analysis finishes.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata": {
      "description": "Metadata for a create analysis operation.",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "conversation": {
          "type": "string",
          "description": "Output only. The Conversation that this Analysis Operation belongs to.",
          "readOnly": true
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest",
      "properties": {
        "bigQueryDestination": {
          "description": "Specified if sink is a BigQuery table.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination"
        },
        "kmsKey": {
          "type": "string",
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}"
        },
        "parent": {
          "description": "Required. The parent resource to export data from.",
          "type": "string"
        },
        "filter": {
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The request to export insights."
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata": {
      "type": "object",
      "properties": {
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "request": {
          "description": "The original request for undeployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata",
      "description": "Metadata for undeploying an issue model."
    },
    "GoogleLongrunningOperation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        }
      },
      "id": "GoogleLongrunningOperation"
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse": {
      "description": "The response to undeploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationParticipant": {
      "description": "The call participant speaking for a given utterance.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationParticipant",
      "properties": {
        "userId": {
          "description": "A user-specified ID representing the participant.",
          "type": "string"
        },
        "dialogflowParticipant": {
          "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "type": "string"
        },
        "obfuscatedExternalUserId": {
          "description": "Obfuscated user ID from Dialogflow.",
          "type": "string"
        },
        "dialogflowParticipantName": {
          "type": "string",
          "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}"
        },
        "role": {
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "type": "string",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "description": "The role of the participant."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationCallMetadata": {
      "description": "Call-specific metadata.",
      "properties": {
        "agentChannel": {
          "format": "int32",
          "type": "integer",
          "description": "The audio channel that contains the agent."
        },
        "customerChannel": {
          "description": "The audio channel that contains the customer.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Intent": {
      "properties": {
        "id": {
          "description": "The unique identifier of the intent.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the intent."
        }
      },
      "type": "object",
      "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.",
      "id": "GoogleCloudContactcenterinsightsV1Intent"
    },
    "GoogleProtobufEmpty": {
      "type": "object",
      "properties": {},
      "id": "GoogleProtobufEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse": {
      "properties": {},
      "description": "The response to deploy an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse"
    },
    "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData": {
      "description": "Agent Assist Smart Compose suggestion data.",
      "id": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData",
      "type": "object",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates.",
          "type": "object"
        },
        "confidenceScore": {
          "type": "number",
          "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "double"
        },
        "suggestion": {
          "description": "The content of the suggestion.",
          "type": "string"
        },
        "queryRecord": {
          "description": "Name of the query record. Format: projects/{project}/locations/{location}/queryRecords/{query_record}",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IssueModelResult": {
      "description": "Issue Modeling result on a conversation.",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelResult",
      "type": "object",
      "properties": {
        "issues": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment"
          },
          "type": "array",
          "description": "All the matched issues."
        },
        "issueModel": {
          "description": "Issue model that generates the result.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata": {
      "description": "Metadata for creating an issue model.",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest",
          "description": "The original request for creation."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CallAnnotation": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CallAnnotation",
      "properties": {
        "channelTag": {
          "type": "integer",
          "format": "int32",
          "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated."
        },
        "holdData": {
          "description": "Data specifying a hold.",
          "$ref": "GoogleCloudContactcenterinsightsV1HoldData"
        },
        "annotationStartBoundary": {
          "description": "The boundary in the conversation where the annotation starts, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "intentMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1IntentMatchData",
          "description": "Data specifying an intent match."
        },
        "annotationEndBoundary": {
          "description": "The boundary in the conversation where the annotation ends, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "interruptionData": {
          "description": "Data specifying an interruption.",
          "$ref": "GoogleCloudContactcenterinsightsV1InterruptionData"
        },
        "sentimentData": {
          "description": "Data specifying sentiment.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "silenceData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SilenceData",
          "description": "Data specifying silence."
        },
        "phraseMatchData": {
          "description": "Data specifying a phrase match.",
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
        },
        "entityMentionData": {
          "description": "Data specifying an entity mention.",
          "$ref": "GoogleCloudContactcenterinsightsV1EntityMentionData"
        }
      },
      "description": "A piece of metadata that applies to a window of a call."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats": {
      "properties": {
        "labeledConversationsCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of conversations attached to the issue at this point in time."
        },
        "issue": {
          "type": "string",
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        }
      },
      "type": "object",
      "description": "Aggregated statistics about an issue.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats"
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest": {
      "description": "The request to create an issue model.",
      "properties": {
        "issueModel": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModel",
          "description": "Required. The issue model to create."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the issue model."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1SmartReplyData": {
      "properties": {
        "confidenceScore": {
          "format": "double",
          "type": "number",
          "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "queryRecord": {
          "description": "Name of the query record. Format: projects/{project}/locations/{location}/queryRecords/{query_record}",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "description": "Map that contains metadata about the Smart Reply and the document from which it originates.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "reply": {
          "type": "string",
          "description": "The content of the reply."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1SmartReplyData",
      "description": "Agent Assist Smart Reply data.",
      "type": "object"
    },
    "GoogleRpcStatus": {
      "properties": {
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "GoogleRpcStatus",
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig": {
      "description": "Configs for the input data used to create the issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig",
      "properties": {
        "trainingConversationsCount": {
          "format": "int64",
          "type": "string",
          "description": "Output only. Number of conversations used in training. Output only.",
          "readOnly": true
        },
        "filter": {
          "description": "A filter to reduce the conversations used for training the model to a specific subset.",
          "type": "string"
        },
        "medium": {
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1InterruptionData": {
      "id": "GoogleCloudContactcenterinsightsV1InterruptionData",
      "description": "The data for an interruption annotation.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata": {
      "properties": {
        "request": {
          "description": "The original request for deployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        }
      },
      "description": "Metadata for deploying an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModel": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The representative name for the issue model."
        },
        "trainingStats": {
          "readOnly": true,
          "description": "Output only. Immutable. The issue model's label statistics on its training data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats"
        },
        "createTime": {
          "description": "Output only. The time at which this issue model was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ],
          "description": "Output only. State of the model.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ]
        },
        "name": {
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the issue model was updated.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "inputDataConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig",
          "description": "Configs for the input data that used to create the issue model."
        }
      },
      "description": "The issue model resource.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModel",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination": {
      "properties": {
        "table": {
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        },
        "projectId": {
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.",
          "type": "string"
        },
        "dataset": {
          "type": "string",
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination",
      "description": "A BigQuery Table Reference."
    },
    "GoogleCloudContactcenterinsightsV1ExactMatchConfig": {
      "type": "object",
      "properties": {
        "caseSensitive": {
          "type": "boolean",
          "description": "Whether to consider case sensitivity when performing an exact match."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ExactMatchConfig",
      "description": "Exact match configuration."
    },
    "GoogleCloudContactcenterinsightsV1DialogflowInteractionData": {
      "id": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData",
      "type": "object",
      "properties": {
        "confidence": {
          "type": "number",
          "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float"
        },
        "dialogflowIntentId": {
          "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}",
          "type": "string"
        }
      },
      "description": "Dialogflow interaction data."
    },
    "GoogleCloudContactcenterinsightsV1SilenceData": {
      "properties": {},
      "type": "object",
      "description": "The data for a silence annotation.",
      "id": "GoogleCloudContactcenterinsightsV1SilenceData"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata",
      "type": "object",
      "properties": {
        "partialErrors": {
          "type": "array",
          "description": "Partial errors during export operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true
        },
        "request": {
          "description": "The original request for export.",
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
        }
      },
      "description": "Metadata for an export insights operation."
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries": {
      "type": "object",
      "properties": {
        "points": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval"
          },
          "description": "An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window.",
          "type": "array"
        },
        "intervalDuration": {
          "description": "The duration of each interval.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries",
      "description": "A time series representing conversations over time."
    },
    "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse",
      "properties": {
        "issueModels": {
          "description": "The issue models that match the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
          }
        }
      },
      "description": "The response of listing issue models."
    },
    "GoogleCloudContactcenterinsightsV1HoldData": {
      "id": "GoogleCloudContactcenterinsightsV1HoldData",
      "properties": {},
      "description": "The data for a hold annotation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse",
      "description": "The response for calculating conversation statistics.",
      "properties": {
        "averageDuration": {
          "type": "string",
          "format": "google-duration",
          "description": "The average duration of all conversations. The average is calculated using only conversations that have a time duration."
        },
        "issueMatches": {
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead."
        },
        "customHighlighterMatches": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          },
          "description": "A map associating each custom highlighter resource name with its respective number of matches in the set of conversations."
        },
        "smartHighlighterMatches": {
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "type": "object",
          "description": "A map associating each smart highlighter display name with its respective number of matches in the set of conversations."
        },
        "averageTurnCount": {
          "description": "The average number of turns per conversation.",
          "format": "int32",
          "type": "integer"
        },
        "conversationCountTimeSeries": {
          "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries",
          "description": "A time series representing the count of conversations created over time that match that requested filter criteria."
        },
        "conversationCount": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of conversations."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueAssignment": {
      "description": "Information about the issue.",
      "id": "GoogleCloudContactcenterinsightsV1IssueAssignment",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.",
          "type": "string"
        },
        "issue": {
          "type": "string",
          "description": "Resource name of the assigned issue."
        },
        "score": {
          "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1].",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig": {
      "description": "Configs for the input data used to create the issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig",
      "properties": {
        "medium": {
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "type": "string"
        },
        "trainingConversationsCount": {
          "description": "Output only. Number of conversations used in training. Output only.",
          "type": "string",
          "readOnly": true,
          "format": "int64"
        },
        "filter": {
          "description": "A filter to reduce the conversations used for training the model to a specific subset.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1DialogflowIntent": {
      "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DialogflowIntent"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchData": {
      "type": "object",
      "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchData",
      "properties": {
        "phraseMatcher": {
          "type": "string",
          "description": "The unique identifier (the resource name) of the phrase matcher."
        },
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the phrase matcher."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest": {
      "properties": {
        "kmsKey": {
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}",
          "type": "string"
        },
        "filter": {
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.",
          "type": "string"
        },
        "bigQueryDestination": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination",
          "description": "Specified if sink is a BigQuery table."
        },
        "parent": {
          "description": "Required. The parent resource to export data from.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The request to export insights.",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
    },
    "GoogleCloudContactcenterinsightsV1ListAnalysesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "analyses": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
          },
          "description": "The analyses that match the request.",
          "type": "array"
        }
      },
      "description": "The response to list analyses.",
      "id": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IntentMatchData": {
      "type": "object",
      "properties": {
        "intentUniqueId": {
          "type": "string",
          "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information."
        }
      },
      "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.",
      "id": "GoogleCloudContactcenterinsightsV1IntentMatchData"
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata": {
      "description": "Call-specific metadata created during analysis.",
      "properties": {
        "annotations": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CallAnnotation"
          },
          "type": "array",
          "description": "A list of call annotations that apply to this call."
        },
        "intents": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Intent"
          },
          "description": "All the matched intents in the call.",
          "type": "object"
        },
        "sentiments": {
          "description": "Overall conversation-level sentiment for each channel of the call.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment"
          }
        },
        "entities": {
          "description": "All the entities in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Entity"
          },
          "type": "object"
        },
        "issueModelResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelResult",
          "description": "Overall conversation-level issue modeling result."
        },
        "phraseMatchers": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
          },
          "type": "object",
          "description": "All the matched phrase matchers in the call."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata"
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest": {
      "type": "object",
      "description": "The request to deploy an issue model.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The issue model to deploy."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo": {
      "description": "Word-level info for words in a transcript.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo",
      "type": "object",
      "properties": {
        "endOffset": {
          "format": "google-duration",
          "type": "string",
          "description": "Time offset of the end of this word relative to the beginning of the total conversation."
        },
        "startOffset": {
          "description": "Time offset of the start of this word relative to the beginning of the total conversation.",
          "format": "google-duration",
          "type": "string"
        },
        "confidence": {
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.",
          "format": "float",
          "type": "number"
        },
        "word": {
          "type": "string",
          "description": "The word itself. Includes punctuation marks that surround the word."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest",
      "properties": {
        "issueModel": {
          "description": "Required. The issue model to create.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the issue model."
        }
      },
      "description": "The request to create an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ListIssuesResponse": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListIssuesResponse",
      "properties": {
        "issues": {
          "type": "array",
          "description": "The issues that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Issue"
          }
        }
      },
      "description": "The response of listing issues."
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStats": {
      "description": "Aggregated statistics about an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
      "properties": {
        "unclassifiedConversationsCount": {
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time.",
          "format": "int64",
          "type": "string"
        },
        "analyzedConversationsCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of conversations the issue model has analyzed at this point in time."
        },
        "issueStats": {
          "type": "object",
          "description": "Statistics on each issue. Key is the issue's resource name.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          }
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse": {
      "description": "The response to deploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRule": {
      "type": "object",
      "description": "The data for a phrase match rule.",
      "properties": {
        "negated": {
          "type": "boolean",
          "description": "Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment."
        },
        "query": {
          "type": "string",
          "description": "Required. The phrase to be matched."
        },
        "config": {
          "description": "Provides additional information about the rule that specifies how to apply the rule.",
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRule"
    },
    "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment": {
      "description": "One channel of conversation-level sentiment data.",
      "properties": {
        "sentimentData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "Data specifying sentiment."
        },
        "channelTag": {
          "type": "integer",
          "description": "The channel of the audio that the data applies to.",
          "format": "int32"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata": {
      "description": "Metadata for undeploying an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "request": {
          "description": "The original request for undeployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest"
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse",
      "description": "The response to undeploy an issue model.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Conversation": {
      "properties": {
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time at which the conversation was created."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry."
        },
        "duration": {
          "type": "string",
          "readOnly": true,
          "format": "google-duration",
          "description": "Output only. The duration of the conversation."
        },
        "callMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata",
          "description": "Call-specific metadata."
        },
        "latestAnalysis": {
          "$ref": "GoogleCloudContactcenterinsightsV1Analysis",
          "readOnly": true,
          "description": "Output only. The conversation's latest analysis, if one exists."
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The most recent time at which the conversation was updated."
        },
        "dialogflowIntents": {
          "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}",
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1DialogflowIntent"
          }
        },
        "runtimeAnnotations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation"
          },
          "description": "Output only. The annotations that were generated during the customer and agent interaction."
        },
        "dataSource": {
          "description": "The source of the audio and transcription for the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationDataSource"
        },
        "agentId": {
          "type": "string",
          "description": "An opaque, user-specified string representing the human agent who handled the conversation."
        },
        "languageCode": {
          "type": "string",
          "description": "A user-specified language code for the conversation."
        },
        "ttl": {
          "type": "string",
          "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.",
          "format": "google-duration"
        },
        "expireTime": {
          "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.",
          "type": "string",
          "format": "google-datetime"
        },
        "transcript": {
          "description": "Output only. The conversation transcript.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscript"
        },
        "name": {
          "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "type": "string"
        },
        "medium": {
          "description": "Immutable. The conversation medium, if unspecified will default to PHONE_CALL.",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "type": "string",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ]
        },
        "startTime": {
          "format": "google-datetime",
          "description": "The time at which the conversation started.",
          "type": "string"
        },
        "turnCount": {
          "format": "int32",
          "description": "Output only. The number of turns in the conversation.",
          "type": "integer",
          "readOnly": true
        }
      },
      "description": "The conversation resource.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1Conversation"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig": {
      "properties": {
        "exactMatchConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExactMatchConfig",
          "description": "The configuration for the exact match rule."
        }
      },
      "type": "object",
      "description": "Configuration information of a phrase match rule.",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig"
    },
    "GoogleCloudContactcenterinsightsV1ListConversationsResponse": {
      "properties": {
        "conversations": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
          },
          "type": "array",
          "description": "The conversations that match the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available."
        }
      },
      "description": "The response of listing conversations.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListConversationsResponse"
    },
    "GoogleCloudContactcenterinsightsV1AnnotationBoundary": {
      "properties": {
        "transcriptIndex": {
          "format": "int32",
          "type": "integer",
          "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero."
        },
        "wordIndex": {
          "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
      "type": "object",
      "description": "A point in a conversation that marks the start or the end of an annotation."
    },
    "GoogleCloudContactcenterinsightsV1ArticleSuggestionData": {
      "description": "Agent Assist Article Suggestion data.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Article URI."
        },
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}",
          "type": "string"
        },
        "queryRecord": {
          "description": "Name of the query record. Format: projects/{project}/locations/{location}/queryRecords/{query_record}",
          "type": "string"
        },
        "metadata": {
          "description": "Map that contains metadata about the Article Suggestion and the document that it originates from.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "confidenceScore": {
          "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float",
          "type": "number"
        },
        "title": {
          "type": "string",
          "description": "Article title."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata": {
      "description": "Metadata for creating an issue model.",
      "properties": {
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "request": {
          "description": "The original request for creation.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig": {
      "properties": {
        "runtimeIntegrationAnalysisPercentage": {
          "description": "Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].",
          "type": "number",
          "format": "double"
        }
      },
      "description": "Default configuration when creating Analyses in Insights.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig"
    },
    "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse": {
      "description": "The response of listing phrase matchers.",
      "id": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "phraseMatchers": {
          "description": "The phrase matchers that match the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
          }
        }
      }
    }
  },
  "protocol": "rest",
  "documentationLink": "https://cloud.google.com/contact-center/insights/docs",
  "version": "v1",
  "revision": "20211002",
  "batchPath": "batch",
  "parameters": {
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "alt": {
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response."
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "rootUrl": "https://contactcenterinsights.googleapis.com/",
  "ownerName": "Google",
  "canonicalName": "Contactcenterinsights",
  "servicePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "version_module": true,
  "discoveryVersion": "v1",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "conversations": {
              "methods": {
                "create": {
                  "id": "contactcenterinsights.projects.locations.conversations.create",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent resource of the conversation.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "conversationId": {
                      "type": "string",
                      "location": "query",
                      "description": "A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-32 characters and must match the regular expression /^[a-z0-9-]{4,32}$/. Valid characters are /a-z-/"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations",
                  "httpMethod": "POST",
                  "description": "Creates a conversation.",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/conversations"
                },
                "list": {
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListConversationsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.list",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent resource of the conversation."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of conversations to return in the response. A valid page size ranges from 0 to 1,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The value returned by the last `ListConversationsResponse`. This value indicates that this is a continuation of a prior `ListConversations` call and that the system should return the next page of data."
                    },
                    "view": {
                      "enumDescriptions": [
                        "Not specified. Defaults to FULL on GetConversationRequest and BASIC for ListConversationsRequest.",
                        "Transcript field is not populated in the response.",
                        "All fields are populated."
                      ],
                      "type": "string",
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "location": "query",
                      "description": "The level of details of the conversation. Default is `BASIC`."
                    }
                  },
                  "description": "Lists conversations.",
                  "path": "v1/{+parent}/conversations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "location": "path",
                      "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}"
                    },
                    "updateMask": {
                      "location": "query",
                      "description": "The list of fields to be updated.",
                      "format": "google-fieldmask",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "id": "contactcenterinsights.projects.locations.conversations.patch",
                  "httpMethod": "PATCH",
                  "description": "Updates a conversation.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  }
                },
                "delete": {
                  "description": "Deletes a conversation.",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "force": {
                      "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "name": {
                      "required": true,
                      "description": "Required. The name of the conversation to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.delete"
                },
                "calculateStats": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets conversation statistics.",
                  "httpMethod": "GET",
                  "parameters": {
                    "location": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The location of the conversations.",
                      "location": "path",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "A filter to reduce results to a specific subset. This field is useful for getting statistics about conversations with specific properties."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats",
                  "id": "contactcenterinsights.projects.locations.conversations.calculateStats",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse"
                  },
                  "parameterOrder": [
                    "location"
                  ],
                  "path": "v1/{+location}/conversations:calculateStats"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.get",
                  "path": "v1/{+name}",
                  "parameters": {
                    "view": {
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "Not specified. Defaults to FULL on GetConversationRequest and BASIC for ListConversationsRequest.",
                        "Transcript field is not populated in the response.",
                        "All fields are populated."
                      ],
                      "location": "query",
                      "description": "The level of details of the conversation. Default is `FULL`."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the conversation to get.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Gets a conversation.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              },
              "resources": {
                "analyses": {
                  "methods": {
                    "delete": {
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The name of the analysis to delete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.delete",
                      "httpMethod": "DELETE",
                      "description": "Deletes an analysis.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "create": {
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent resource of the analysis.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "httpMethod": "POST",
                      "description": "Creates an analysis. The long running operation is done when the analysis has completed.",
                      "path": "v1/{+parent}/analyses"
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets an analysis.",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the analysis to get.",
                          "location": "path"
                        }
                      },
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "httpMethod": "GET",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.get"
                    },
                    "list": {
                      "path": "v1/{+parent}/analyses",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse"
                      },
                      "description": "Lists analyses.",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. The parent resource of the analyses.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "The value returned by the last `ListAnalysesResponse`; indicates that this is a continuation of a prior `ListAnalyses` call and the system should return the next page of data.",
                          "type": "string"
                        },
                        "filter": {
                          "location": "query",
                          "type": "string",
                          "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties."
                        },
                        "pageSize": {
                          "description": "The maximum number of analyses to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses"
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "required": true
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.operations.get"
                },
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "description": "The standard list page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation's parent resource."
                    }
                  },
                  "path": "v1/{+name}/operations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "id": "contactcenterinsights.projects.locations.operations.list",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  }
                },
                "cancel": {
                  "path": "v1/{+name}:cancel",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "httpMethod": "POST",
                  "id": "contactcenterinsights.projects.locations.operations.cancel",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel"
                }
              }
            },
            "insightsdata": {
              "methods": {
                "export": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
                  },
                  "description": "Export insights data to a destination defined in the request body.",
                  "path": "v1/{+parent}/insightsdata:export",
                  "id": "contactcenterinsights.projects.locations.insightsdata.export",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent resource to export data from.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                }
              }
            },
            "phraseMatchers": {
              "methods": {
                "delete": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the phrase matcher to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "description": "Deletes a phrase matcher.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.delete"
                },
                "get": {
                  "description": "Gets a phrase matcher.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the phrase matcher to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "httpMethod": "GET",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.get",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the phrase matcher.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of phrase matchers to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                      "location": "query"
                    },
                    "filter": {
                      "description": "A filter to reduce results to a specific subset. Useful for querying phrase matchers with specific properties.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The value returned by the last `ListPhraseMatchersResponse`. This value indicates that this is a continuation of a prior `ListPhraseMatchers` call and that the system should return the next page of data."
                    }
                  },
                  "path": "v1/{+parent}/phraseMatchers",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.list",
                  "description": "Lists phrase matchers.",
                  "httpMethod": "GET"
                },
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a phrase matcher.",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.create",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the phrase matcher. Required. The location to create a phrase matcher for. Format: `projects//locations/` or `projects//locations/`",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/phraseMatchers"
                }
              }
            },
            "issueModels": {
              "resources": {
                "issues": {
                  "methods": {
                    "list": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues",
                      "path": "v1/{+parent}/issues",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists issues.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListIssuesResponse"
                      },
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.list",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "description": "Required. The parent resource of the issue.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                          "location": "path"
                        }
                      },
                      "httpMethod": "GET"
                    },
                    "patch": {
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$",
                          "type": "string",
                          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
                          "location": "path"
                        },
                        "updateMask": {
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask",
                          "description": "The list of fields to be updated."
                        }
                      },
                      "description": "Updates an issue.",
                      "path": "v1/{+name}",
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.patch",
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "httpMethod": "PATCH",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "path": "v1/{+name}",
                      "description": "Gets an issue.",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the issue to get.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$"
                        }
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.get"
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists issue models.",
                  "id": "contactcenterinsights.projects.locations.issueModels.list",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent resource of the issue model.",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels",
                  "path": "v1/{+parent}/issueModels"
                },
                "deploy": {
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The issue model to deploy.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy",
                  "path": "v1/{+name}:deploy",
                  "id": "contactcenterinsights.projects.locations.issueModels.deploy"
                },
                "get": {
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "id": "contactcenterinsights.projects.locations.issueModels.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "description": "Gets an issue model.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the issue model to get.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "undeploy": {
                  "id": "contactcenterinsights.projects.locations.issueModels.undeploy",
                  "path": "v1/{+name}:undeploy",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "description": "Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The issue model to undeploy.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  }
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Creates an issue model.",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the issue model.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.create",
                  "path": "v1/{+parent}/issueModels",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels"
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the issue model to delete.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                    }
                  },
                  "description": "Deletes an issue model.",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+name}",
                  "id": "contactcenterinsights.projects.locations.issueModels.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to be updated.",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                    }
                  },
                  "description": "Updates an issue model.",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.patch",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  }
                },
                "calculateIssueModelStats": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "issueModel"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets an issue model's statistics.",
                  "parameters": {
                    "issueModel": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "location": "path",
                      "description": "Required. The resource name of the issue model to query against."
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats",
                  "path": "v1/{+issueModel}:calculateIssueModelStats"
                }
              }
            }
          },
          "methods": {
            "updateSettings": {
              "request": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "id": "contactcenterinsights.projects.locations.updateSettings",
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Required. The list of fields to be updated.",
                  "type": "string"
                },
                "name": {
                  "location": "path",
                  "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "required": true
                }
              },
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "description": "Updates project-level settings."
            },
            "getSettings": {
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "description": "Required. The name of the settings resource to get.",
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "contactcenterinsights.projects.locations.getSettings",
              "description": "Gets project-level settings.",
              "path": "v1/{+name}"
            }
          }
        }
      }
    }
  },
  "baseUrl": "https://contactcenterinsights.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "id": "contactcenterinsights:v1",
  "mtlsRootUrl": "https://contactcenterinsights.mtls.googleapis.com/",
  "description": "",
  "kind": "discovery#restDescription",
  "title": "Contact Center AI Insights API",
  "basePath": ""
}

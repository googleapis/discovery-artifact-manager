{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "rootUrl": "https://contactcenterinsights.googleapis.com/",
  "documentationLink": "https://cloud.google.com/contact-center/insights/docs",
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "alt": {
      "description": "Data format for response.",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query",
      "type": "boolean"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "description": "V1 error format."
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    }
  },
  "title": "Contact Center AI Insights API",
  "id": "contactcenterinsights:v1",
  "name": "contactcenterinsights",
  "servicePath": "",
  "revision": "20230312",
  "canonicalName": "Contactcenterinsights",
  "baseUrl": "https://contactcenterinsights.googleapis.com/",
  "schemas": {
    "GoogleCloudContactcenterinsightsV1Issue": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        },
        "displayName": {
          "description": "The representative name for the issue.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The most recent time that this issue was updated.",
          "readOnly": true,
          "type": "string"
        },
        "sampleUtterances": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Resource names of the sample representative utterances that match to this issue."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which this issue was created."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1Issue",
      "description": "The issue resource.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ListAnalysesResponse": {
      "description": "The response to list analyses.",
      "id": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse",
      "properties": {
        "analyses": {
          "description": "The analyses that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueModel": {
      "properties": {
        "inputDataConfig": {
          "description": "Configs for the input data that used to create the issue model.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig"
        },
        "issueCount": {
          "format": "int64",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Number of issues in this issue model."
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the issue model."
        },
        "trainingStats": {
          "description": "Output only. Immutable. The issue model's label statistics on its training data.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The most recent time at which the issue model was updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time at which this issue model was created.",
          "format": "google-datetime"
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ],
          "description": "Output only. State of the model.",
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IssueModel",
      "description": "The issue model resource."
    },
    "GoogleCloudContactcenterinsightsV1ListIssuesResponse": {
      "properties": {
        "issues": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Issue"
          },
          "type": "array",
          "description": "The issues that match the request."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ListIssuesResponse",
      "type": "object",
      "description": "The response of listing issues."
    },
    "GoogleCloudContactcenterinsightsV1DialogflowInteractionData": {
      "type": "object",
      "properties": {
        "confidence": {
          "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float",
          "type": "number"
        },
        "dialogflowIntentId": {
          "type": "string",
          "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}"
        }
      },
      "description": "Dialogflow interaction data.",
      "id": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination": {
      "description": "A BigQuery Table Reference.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination",
      "properties": {
        "table": {
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used."
        },
        "dataset": {
          "type": "string",
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest": {
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the issue model."
        },
        "issueModel": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModel",
          "description": "Required. The issue model to create."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest",
      "description": "The request to create an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig": {
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig",
      "properties": {
        "agentId": {
          "description": "An opaque, user-specified string representing the human agent who handled the conversations.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Configuration that applies to all conversations."
    },
    "GoogleCloudContactcenterinsightsV1ListViewsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "views": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1View"
          },
          "description": "The views that match the request.",
          "type": "array"
        }
      },
      "description": "The response of listing views.",
      "id": "GoogleCloudContactcenterinsightsV1ListViewsResponse",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata",
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest",
          "description": "The original request for creation."
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Metadata for creating an issue model."
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata": {
      "description": "Metadata for deleting an issue model.",
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "request": {
          "description": "The original request for deletion.",
          "$ref": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1AnswerFeedback": {
      "description": "The feedback that the customer has about a certain answer in the conversation.",
      "id": "GoogleCloudContactcenterinsightsV1AnswerFeedback",
      "properties": {
        "correctnessLevel": {
          "description": "The correctness level of an answer.",
          "type": "string",
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ],
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ]
        },
        "clicked": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was clicked by the human agent."
        },
        "displayed": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelResult": {
      "id": "GoogleCloudContactcenterinsightsV1IssueModelResult",
      "description": "Issue Modeling result on a conversation.",
      "type": "object",
      "properties": {
        "issueModel": {
          "type": "string",
          "description": "Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
        },
        "issues": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment"
          },
          "type": "array",
          "description": "All the matched issues."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IssueMatchData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IssueMatchData",
      "description": "The data for an issue match annotation.",
      "properties": {
        "issueAssignment": {
          "description": "Information about the issue's assignment.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata": {
      "description": "The metadata for an IngestConversations operation.",
      "type": "object",
      "properties": {
        "request": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest",
          "description": "Output only. The original request for ingest."
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created."
        },
        "ingestConversationsStats": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats",
          "description": "Output only. Statistics for IngestConversations operation.",
          "readOnly": true
        },
        "partialErrors": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Output only. Partial errors during ingest operation that might cause the operation output to be incomplete."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata"
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest": {
      "properties": {
        "filter": {
          "type": "string",
          "description": "Required. Filter used to select the subset of conversations to analyze."
        },
        "analysisPercentage": {
          "format": "float",
          "type": "number",
          "description": "Required. Percentage of selected conversation to analyze, between [0, 100]."
        },
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
        },
        "parent": {
          "description": "Required. The parent resource to create analyses in.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The request to analyze conversations in bulk.",
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest"
    },
    "GoogleCloudContactcenterinsightsV1DialogflowIntent": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1DialogflowIntent",
      "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the intent."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata": {
      "description": "Metadata for deleting an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata",
      "properties": {
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "request": {
          "description": "The original request for deletion.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsResponse": {
      "description": "The response to an IngestConversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsResponse",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig": {
      "properties": {
        "runtimeIntegrationAnalysisPercentage": {
          "type": "number",
          "format": "double",
          "description": "Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100]."
        },
        "uploadConversationAnalysisPercentage": {
          "description": "Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100].",
          "format": "double",
          "type": "number"
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig",
      "description": "Default configuration when creating Analyses in Insights.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata",
      "description": "Metadata for creating an issue model.",
      "properties": {
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "request": {
          "description": "The original request for creation.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResult": {
      "type": "object",
      "properties": {
        "callAnalysisMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata",
          "description": "Call-specific metadata created by the analysis."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time at which the analysis ended.",
          "type": "string"
        }
      },
      "description": "The result of an analysis.",
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResult"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats": {
      "description": "Aggregated statistics about an issue.",
      "type": "object",
      "properties": {
        "labeledConversationsCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of conversations attached to the issue at this point in time."
        },
        "issue": {
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of the issue.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
    },
    "GoogleCloudContactcenterinsightsV1ArticleSuggestionData": {
      "id": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData",
      "type": "object",
      "description": "Agent Assist Article Suggestion data.",
      "properties": {
        "confidenceScore": {
          "type": "number",
          "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float"
        },
        "source": {
          "type": "string",
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}"
        },
        "title": {
          "description": "Article title.",
          "type": "string"
        },
        "uri": {
          "description": "Article URI.",
          "type": "string"
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "metadata": {
          "description": "Map that contains metadata about the Article Suggestion and the document that it originates from.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1AnnotationBoundary": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
      "properties": {
        "wordIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero."
        },
        "transcriptIndex": {
          "format": "int32",
          "type": "integer",
          "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero."
        }
      },
      "description": "A point in a conversation that marks the start or the end of an annotation."
    },
    "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse": {
      "properties": {
        "issueModels": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
          },
          "description": "The issue models that match the request."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse",
      "type": "object",
      "description": "The response of listing issue models."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig": {
      "description": "Configuration for processing transcript objects.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig",
      "properties": {
        "medium": {
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "type": "string",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "description": "Required. The medium transcript objects represent."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata",
      "type": "object",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "description": "The time the operation finished running.",
          "type": "string"
        },
        "completedAnalysesCount": {
          "description": "The number of requested analyses that have completed successfully so far.",
          "type": "integer",
          "format": "int32"
        },
        "request": {
          "description": "The original request for bulk analyze.",
          "$ref": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest"
        },
        "failedAnalysesCount": {
          "type": "integer",
          "description": "The number of requested analyses that have failed so far.",
          "format": "int32"
        },
        "createTime": {
          "type": "string",
          "description": "The time the operation was created.",
          "format": "google-datetime"
        },
        "totalRequestedAnalysesCount": {
          "type": "integer",
          "description": "Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.",
          "format": "int32"
        }
      },
      "description": "The metadata for a bulk analyze conversations operation."
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequest": {
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest",
      "type": "object",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource",
          "description": "A cloud storage bucket source."
        },
        "transcriptObjectConfig": {
          "description": "Configuration for when `source` contains conversation transcripts.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig"
        },
        "conversationConfig": {
          "description": "Configuration that applies to all conversations.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig"
        },
        "parent": {
          "description": "Required. The parent resource for new conversations.",
          "type": "string"
        }
      },
      "description": "The request to ingest conversations."
    },
    "GoogleCloudContactcenterinsightsV1ConversationCallMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata",
      "description": "Call-specific metadata.",
      "type": "object",
      "properties": {
        "agentChannel": {
          "description": "The audio channel that contains the agent.",
          "type": "integer",
          "format": "int32"
        },
        "customerChannel": {
          "type": "integer",
          "format": "int32",
          "description": "The audio channel that contains the customer."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1GcsSource": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1GcsSource",
      "properties": {
        "transcriptUri": {
          "type": "string",
          "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript."
        },
        "audioUri": {
          "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
          "type": "string"
        }
      },
      "description": "A Cloud Storage source of conversation data."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats": {
      "properties": {
        "unclassifiedConversationsCount": {
          "format": "int64",
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time.",
          "type": "string"
        },
        "analyzedConversationsCount": {
          "description": "Number of conversations the issue model has analyzed at this point in time.",
          "format": "int64",
          "type": "string"
        },
        "issueStats": {
          "type": "object",
          "description": "Statistics on each issue. Key is the issue's resource name.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats"
          }
        }
      },
      "type": "object",
      "description": "Aggregated statistics about an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats"
    },
    "GoogleCloudContactcenterinsightsV1Entity": {
      "id": "GoogleCloudContactcenterinsightsV1Entity",
      "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The representative name for the entity."
        },
        "type": {
          "description": "The entity type.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Person.",
            "Location.",
            "Organization.",
            "Event.",
            "Artwork.",
            "Consumer product.",
            "Other types of entities.",
            "Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.",
            "Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.",
            "Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.",
            "Number. The metadata is the number itself.",
            "Price. The metadata identifies the `value` and `currency`."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSON",
            "LOCATION",
            "ORGANIZATION",
            "EVENT",
            "WORK_OF_ART",
            "CONSUMER_GOOD",
            "OTHER",
            "PHONE_NUMBER",
            "ADDRESS",
            "DATE",
            "NUMBER",
            "PRICE"
          ]
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below."
        },
        "sentiment": {
          "description": "The aggregate sentiment expressed for this entity in the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "salience": {
          "format": "float",
          "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ListConversationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available."
        },
        "conversations": {
          "description": "The conversations that match the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
          }
        }
      },
      "description": "The response of listing conversations.",
      "id": "GoogleCloudContactcenterinsightsV1ListConversationsResponse",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata": {
      "properties": {
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest",
          "description": "The original request for deployment."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        }
      },
      "description": "Metadata for deploying an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscript": {
      "description": "A message representing the transcript of a conversation.",
      "type": "object",
      "properties": {
        "transcriptSegments": {
          "description": "A list of sequential transcript segments that comprise the conversation.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscript"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo",
      "properties": {
        "endOffset": {
          "type": "string",
          "format": "google-duration",
          "description": "Time offset of the end of this word relative to the beginning of the total conversation."
        },
        "word": {
          "description": "The word itself. Includes punctuation marks that surround the word.",
          "type": "string"
        },
        "startOffset": {
          "format": "google-duration",
          "type": "string",
          "description": "Time offset of the start of this word relative to the beginning of the total conversation."
        },
        "confidence": {
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.",
          "type": "number",
          "format": "float"
        }
      },
      "type": "object",
      "description": "Word-level info for words in a transcript."
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatcher": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}"
        },
        "type": {
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rule groups or there is no match.",
            "If any of the phrase match rule groups are met, there is a match."
          ],
          "enum": [
            "PHRASE_MATCHER_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ],
          "description": "Required. The type of this phrase matcher.",
          "type": "string"
        },
        "displayName": {
          "description": "The human-readable name of the phrase matcher.",
          "type": "string"
        },
        "phraseMatchRuleGroups": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup"
          },
          "type": "array",
          "description": "A list of phase match rule groups that are included in this matcher."
        },
        "active": {
          "description": "Applies the phrase matcher only when it is active.",
          "type": "boolean"
        },
        "activationUpdateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The most recent time at which the activation status was updated.",
          "type": "string"
        },
        "versionTag": {
          "description": "The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.",
          "type": "string"
        },
        "revisionId": {
          "description": "Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567",
          "type": "string",
          "readOnly": true
        },
        "revisionCreateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The most recent time at which the phrase matcher was updated.",
          "readOnly": true
        },
        "roleMatch": {
          "type": "string",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "description": "The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript."
        }
      },
      "description": "The phrase matcher resource.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest",
      "properties": {
        "name": {
          "description": "Required. The issue model to deploy.",
          "type": "string"
        }
      },
      "description": "The request to deploy an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest": {
      "description": "The request to undeploy an issue model.",
      "properties": {
        "name": {
          "description": "Required. The issue model to undeploy.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse",
      "type": "object",
      "description": "The response to an IngestConversations operation.",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination": {
      "description": "A BigQuery Table Reference.",
      "properties": {
        "projectId": {
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.",
          "type": "string"
        },
        "dataset": {
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        },
        "table": {
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStats": {
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
      "properties": {
        "analyzedConversationsCount": {
          "description": "Number of conversations the issue model has analyzed at this point in time.",
          "format": "int64",
          "type": "string"
        },
        "unclassifiedConversationsCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time."
        },
        "issueStats": {
          "description": "Statistics on each issue. Key is the issue's resource name.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          }
        }
      },
      "description": "Aggregated statistics about an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats": {
      "description": "Statistics for IngestConversations operation.",
      "properties": {
        "duplicatesSkippedCount": {
          "readOnly": true,
          "format": "int32",
          "type": "integer",
          "description": "Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested."
        },
        "processedObjectCount": {
          "description": "Output only. The number of objects processed during the ingest operation.",
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "failedIngestCount": {
          "format": "int32",
          "type": "integer",
          "description": "Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.",
          "readOnly": true
        },
        "successfulIngestCount": {
          "readOnly": true,
          "description": "Output only. The number of new conversations added during this ingest operation.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata": {
      "description": "Metadata for a create analysis operation.",
      "id": "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata",
      "properties": {
        "conversation": {
          "readOnly": true,
          "description": "Output only. The Conversation that this Analysis Operation belongs to.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        },
        "annotatorSelector": {
          "readOnly": true,
          "description": "Output only. The annotator selector used for the analysis (if any).",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1SentimentData": {
      "description": "The data for a sentiment annotation.",
      "id": "GoogleCloudContactcenterinsightsV1SentimentData",
      "type": "object",
      "properties": {
        "magnitude": {
          "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.",
          "format": "float",
          "type": "number"
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "The sentiment score between -1.0 (negative) and 1.0 (positive)."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest": {
      "description": "The request to delete an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name of the issue model to delete."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1Settings": {
      "type": "object",
      "properties": {
        "conversationTtl": {
          "format": "google-duration",
          "description": "The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings"
        },
        "pubsubNotificationSettings": {
          "type": "object",
          "description": "A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * \"all-triggers\": Notify each time any of the supported triggers occurs. * \"create-analysis\": Notify each time an analysis is created. * \"create-conversation\": Notify each time a conversation is created. * \"export-insights-data\": Notify each time an export is complete. * \"update-conversation\": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "analysisConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig",
          "description": "Default analysis settings."
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which the settings were last updated.",
          "type": "string"
        },
        "languageCode": {
          "description": "A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to \"en-US\" if it is neither specified on the segment nor here.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which the settings was created.",
          "type": "string"
        }
      },
      "description": "The settings resource.",
      "id": "GoogleCloudContactcenterinsightsV1Settings"
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse": {
      "description": "The response to deploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1AnnotatorSelector": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
      "properties": {
        "runEntityAnnotator": {
          "description": "Whether to run the entity annotator.",
          "type": "boolean"
        },
        "runSentimentAnnotator": {
          "type": "boolean",
          "description": "Whether to run the sentiment annotator."
        },
        "issueModels": {
          "description": "The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "phraseMatchers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}"
        },
        "runIssueModelAnnotator": {
          "type": "boolean",
          "description": "Whether to run the issue model annotator. A model should have already been deployed for this to take effect."
        },
        "runIntentAnnotator": {
          "description": "Whether to run the intent annotator.",
          "type": "boolean"
        },
        "runSilenceAnnotator": {
          "type": "boolean",
          "description": "Whether to run the silence annotator."
        },
        "runPhraseMatcherAnnotator": {
          "description": "Whether to run the active phrase matcher annotator(s).",
          "type": "boolean"
        },
        "runInterruptionAnnotator": {
          "description": "Whether to run the interruption annotator.",
          "type": "boolean"
        }
      },
      "description": "Selector of all available annotators and phrase matchers to run."
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource": {
      "properties": {
        "bucketUri": {
          "type": "string",
          "description": "Required. The Cloud Storage bucket containing source objects."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource",
      "type": "object",
      "description": "Configuration for Cloud Storage bucket sources."
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup": {
      "type": "object",
      "description": "A message representing a rule in the phrase matcher.",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rules or there is no match.",
            "If any of the phrase match rules are met, there is a match."
          ],
          "type": "string",
          "description": "Required. The type of this phrase match rule group.",
          "enum": [
            "PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ]
        },
        "phraseMatchRules": {
          "type": "array",
          "description": "A list of phase match rules that are included in this group.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRule"
          }
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse",
      "properties": {
        "successfulAnalysisCount": {
          "format": "int32",
          "description": "Count of successful analyses.",
          "type": "integer"
        },
        "failedAnalysisCount": {
          "format": "int32",
          "description": "Count of failed analyses.",
          "type": "integer"
        }
      },
      "description": "The response for a bulk analyze conversations operation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The issue model to undeploy."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest",
      "description": "The request to undeploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata",
      "type": "object",
      "properties": {
        "annotatorSelector": {
          "readOnly": true,
          "description": "Output only. The annotator selector used for the analysis (if any).",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector"
        },
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true
        },
        "conversation": {
          "description": "Output only. The Conversation that this Analysis Operation belongs to.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Metadata for a create analysis operation."
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "GoogleRpcStatus",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        }
      }
    },
    "GoogleLongrunningListOperationsResponse": {
      "id": "GoogleLongrunningListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModel": {
      "properties": {
        "state": {
          "description": "Output only. State of the model.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ],
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ]
        },
        "trainingStats": {
          "readOnly": true,
          "description": "Output only. Immutable. The issue model's label statistics on its training data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats"
        },
        "issueCount": {
          "type": "string",
          "format": "int64",
          "description": "Output only. Number of issues in this issue model.",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which this issue model was created."
        },
        "displayName": {
          "description": "The representative name for the issue model.",
          "type": "string"
        },
        "name": {
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        },
        "inputDataConfig": {
          "description": "Configs for the input data that used to create the issue model.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The most recent time at which the issue model was updated."
        }
      },
      "description": "The issue model resource.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModel",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest",
      "type": "object",
      "description": "The request to delete an issue model.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name of the issue model to delete."
        }
      }
    },
    "GoogleProtobufEmpty": {
      "id": "GoogleProtobufEmpty",
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig",
      "properties": {
        "agentId": {
          "type": "string",
          "description": "An opaque, user-specified string representing the human agent who handled the conversations."
        }
      },
      "type": "object",
      "description": "Configuration that applies to all conversations."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig": {
      "description": "Configs for the input data used to create the issue model.",
      "type": "object",
      "properties": {
        "trainingConversationsCount": {
          "format": "int64",
          "description": "Output only. Number of conversations used in training. Output only.",
          "type": "string",
          "readOnly": true
        },
        "filter": {
          "description": "A filter to reduce the conversations used for training the model to a specific subset.",
          "type": "string"
        },
        "medium": {
          "type": "string",
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ]
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse": {
      "description": "Response for an export insights operation.",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment",
      "description": "A segment of a full transcript.",
      "type": "object",
      "properties": {
        "channelTag": {
          "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.",
          "type": "integer",
          "format": "int32"
        },
        "messageTime": {
          "format": "google-datetime",
          "description": "The time that the message occurred, if provided.",
          "type": "string"
        },
        "sentiment": {
          "description": "The sentiment for this transcript segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset."
        },
        "words": {
          "description": "A list of the word-specific information for each word in the segment.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo"
          },
          "type": "array"
        },
        "segmentParticipant": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationParticipant",
          "description": "The participant of this segment."
        },
        "languageCode": {
          "type": "string",
          "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\"."
        },
        "text": {
          "description": "The text of this segment.",
          "type": "string"
        },
        "dialogflowSegmentMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
          "description": "CCAI metadata relating to the current transcript segment."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "phraseMatchers": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
          },
          "type": "array",
          "description": "The phrase matchers that match the request."
        }
      },
      "type": "object",
      "description": "The response of listing phrase matchers.",
      "id": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource": {
      "properties": {
        "bucketUri": {
          "description": "Required. The Cloud Storage bucket containing source objects.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource",
      "type": "object",
      "description": "Configuration for Cloud Storage bucket sources."
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadata",
      "description": "The metadata for an IngestConversations operation.",
      "properties": {
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        },
        "ingestConversationsStats": {
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats",
          "description": "Output only. Statistics for IngestConversations operation.",
          "readOnly": true
        },
        "request": {
          "readOnly": true,
          "description": "Output only. The original request for ingest.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest"
        },
        "partialErrors": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest",
      "properties": {
        "name": {
          "description": "Required. The issue model to deploy.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The request to deploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1SilenceData": {
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1SilenceData",
      "type": "object",
      "description": "The data for a silence annotation."
    },
    "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData": {
      "properties": {
        "suggestion": {
          "type": "string",
          "description": "The content of the suggestion."
        },
        "confidenceScore": {
          "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "double",
          "type": "number"
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData",
      "description": "Agent Assist Smart Compose suggestion data.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse": {
      "description": "Response for an export insights operation.",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest": {
      "description": "The request to analyze conversations in bulk.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to create analyses in."
        },
        "filter": {
          "description": "Required. Filter used to select the subset of conversations to analyze.",
          "type": "string"
        },
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector"
        },
        "analysisPercentage": {
          "description": "Required. Percentage of selected conversation to analyze, between [0, 100].",
          "format": "float",
          "type": "number"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1CallAnnotation": {
      "type": "object",
      "properties": {
        "silenceData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SilenceData",
          "description": "Data specifying silence."
        },
        "interruptionData": {
          "$ref": "GoogleCloudContactcenterinsightsV1InterruptionData",
          "description": "Data specifying an interruption."
        },
        "holdData": {
          "$ref": "GoogleCloudContactcenterinsightsV1HoldData",
          "description": "Data specifying a hold."
        },
        "channelTag": {
          "type": "integer",
          "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.",
          "format": "int32"
        },
        "sentimentData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "Data specifying sentiment."
        },
        "issueMatchData": {
          "description": "Data specifying an issue match.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueMatchData"
        },
        "phraseMatchData": {
          "description": "Data specifying a phrase match.",
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
        },
        "intentMatchData": {
          "description": "Data specifying an intent match.",
          "$ref": "GoogleCloudContactcenterinsightsV1IntentMatchData"
        },
        "entityMentionData": {
          "description": "Data specifying an entity mention.",
          "$ref": "GoogleCloudContactcenterinsightsV1EntityMentionData"
        },
        "annotationStartBoundary": {
          "description": "The boundary in the conversation where the annotation starts, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "annotationEndBoundary": {
          "description": "The boundary in the conversation where the annotation ends, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        }
      },
      "description": "A piece of metadata that applies to a window of a call.",
      "id": "GoogleCloudContactcenterinsightsV1CallAnnotation"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata": {
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string"
        },
        "request": {
          "description": "The original request for undeployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest"
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        }
      },
      "description": "Metadata for undeploying an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1IntentMatchData": {
      "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.",
      "properties": {
        "intentUniqueId": {
          "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1IntentMatchData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest",
      "properties": {
        "writeDisposition": {
          "enum": [
            "WRITE_DISPOSITION_UNSPECIFIED",
            "WRITE_TRUNCATE",
            "WRITE_APPEND"
          ],
          "type": "string",
          "description": "Options for what to do if the destination table already exists.",
          "enumDescriptions": [
            "Write disposition is not specified. Defaults to WRITE_TRUNCATE.",
            "If the table already exists, BigQuery will overwrite the table data and use the schema from the load.",
            "If the table already exists, BigQuery will append data to the table."
          ]
        },
        "kmsKey": {
          "type": "string",
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}"
        },
        "filter": {
          "type": "string",
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties."
        },
        "bigQueryDestination": {
          "description": "Specified if sink is a BigQuery table.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to export data from."
        }
      },
      "description": "The request to export insights."
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata",
      "description": "Metadata for an export insights operation.",
      "properties": {
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest",
          "description": "The original request for export."
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Partial errors during export operation that might cause the operation output to be incomplete."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1EntityMentionData": {
      "id": "GoogleCloudContactcenterinsightsV1EntityMentionData",
      "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of the entity mention.",
          "enum": [
            "MENTION_TYPE_UNSPECIFIED",
            "PROPER",
            "COMMON"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Proper noun.",
            "Common noun (or noun compound)."
          ],
          "type": "string"
        },
        "sentiment": {
          "description": "Sentiment expressed for this mention of the entity.",
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData"
        },
        "entityUniqueId": {
          "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1View": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable display name of the view."
        },
        "name": {
          "description": "Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The most recent time at which the view was updated."
        },
        "value": {
          "description": "String with specific view properties, must be non-empty.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time at which this view was created.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1View",
      "description": "The View resource.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse": {
      "description": "The response to undeploy an issue model.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse"
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponse": {
      "type": "object",
      "description": "The response for calculating conversation statistics.",
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse",
      "properties": {
        "conversationCount": {
          "type": "integer",
          "description": "The total number of conversations.",
          "format": "int32"
        },
        "conversationCountTimeSeries": {
          "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries",
          "description": "A time series representing the count of conversations created over time that match that requested filter criteria."
        },
        "smartHighlighterMatches": {
          "description": "A map associating each smart highlighter display name with its respective number of matches in the set of conversations.",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "type": "object"
        },
        "customHighlighterMatches": {
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          },
          "type": "object",
          "description": "A map associating each custom highlighter resource name with its respective number of matches in the set of conversations."
        },
        "averageDuration": {
          "type": "string",
          "format": "google-duration",
          "description": "The average duration of all conversations. The average is calculated using only conversations that have a time duration."
        },
        "issueMatchesStats": {
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          },
          "type": "object"
        },
        "issueMatches": {
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "averageTurnCount": {
          "description": "The average number of turns per conversation.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest",
      "properties": {
        "issueModel": {
          "description": "Required. The issue model to create.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModel"
        },
        "parent": {
          "description": "Required. The parent resource of the issue model.",
          "type": "string"
        }
      },
      "description": "The request to create an issue model."
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchData": {
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchData",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the phrase matcher.",
          "type": "string"
        },
        "phraseMatcher": {
          "type": "string",
          "description": "The unique identifier (the resource name) of the phrase matcher."
        }
      },
      "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata",
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest",
          "description": "The original request for export."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        },
        "partialErrors": {
          "type": "array",
          "description": "Partial errors during export operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Metadata for an export insights operation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1InterruptionData": {
      "type": "object",
      "description": "The data for an interruption annotation.",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1InterruptionData"
    },
    "GoogleCloudContactcenterinsightsV1ConversationParticipant": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationParticipant",
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "A user-specified ID representing the participant."
        },
        "dialogflowParticipantName": {
          "type": "string",
          "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}"
        },
        "dialogflowParticipant": {
          "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "type": "string"
        },
        "obfuscatedExternalUserId": {
          "description": "Obfuscated user ID from Dialogflow.",
          "type": "string"
        },
        "role": {
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "description": "The role of the participant.",
          "type": "string"
        }
      },
      "description": "The call participant speaking for a given utterance."
    },
    "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment": {
      "description": "One channel of conversation-level sentiment data.",
      "properties": {
        "channelTag": {
          "format": "int32",
          "description": "The channel of the audio that the data applies to.",
          "type": "integer"
        },
        "sentimentData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "Data specifying sentiment."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata": {
      "type": "object",
      "description": "Metadata for deploying an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest",
          "description": "The original request for deployment."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse",
      "type": "object",
      "properties": {
        "failedAnalysisCount": {
          "format": "int32",
          "type": "integer",
          "description": "Count of failed analyses."
        },
        "successfulAnalysisCount": {
          "description": "Count of successful analyses.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "The response for a bulk analyze conversations operation."
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata": {
      "type": "object",
      "properties": {
        "endTime": {
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "request": {
          "description": "The original request for undeployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata",
      "description": "Metadata for undeploying an issue model."
    },
    "GoogleCloudContactcenterinsightsV1SmartReplyData": {
      "description": "Agent Assist Smart Reply data.",
      "id": "GoogleCloudContactcenterinsightsV1SmartReplyData",
      "properties": {
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "reply": {
          "type": "string",
          "description": "The content of the reply."
        },
        "metadata": {
          "description": "Map that contains metadata about the Smart Reply and the document from which it originates.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig": {
      "properties": {
        "medium": {
          "type": "string",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "description": "Required. The medium transcript objects represent."
        }
      },
      "description": "Configuration for processing transcript objects.",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Analysis": {
      "description": "The analysis resource.",
      "properties": {
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        },
        "requestTime": {
          "readOnly": true,
          "description": "Output only. The time at which the analysis was requested.",
          "format": "google-datetime",
          "type": "string"
        },
        "analysisResult": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResult",
          "description": "Output only. The result of the analysis, which is populated when the analysis finishes."
        },
        "name": {
          "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1Analysis"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the issue."
        },
        "issue": {
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
          "type": "string"
        },
        "labeledConversationsCount": {
          "description": "Number of conversations attached to the issue at this point in time.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats",
      "description": "Aggregated statistics about an issue.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse": {
      "properties": {},
      "description": "The response to undeploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest": {
      "description": "The request to export insights.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest",
      "properties": {
        "filter": {
          "type": "string",
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties."
        },
        "writeDisposition": {
          "type": "string",
          "enumDescriptions": [
            "Write disposition is not specified. Defaults to WRITE_TRUNCATE.",
            "If the table already exists, BigQuery will overwrite the table data and use the schema from the load.",
            "If the table already exists, BigQuery will append data to the table."
          ],
          "enum": [
            "WRITE_DISPOSITION_UNSPECIFIED",
            "WRITE_TRUNCATE",
            "WRITE_APPEND"
          ],
          "description": "Options for what to do if the destination table already exists."
        },
        "kmsKey": {
          "type": "string",
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to export data from."
        },
        "bigQueryDestination": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination",
          "description": "Specified if sink is a BigQuery table."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1RuntimeAnnotation": {
      "description": "An annotation that was generated during the customer and agent interaction.",
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which this annotation was created."
        },
        "faqAnswer": {
          "description": "Agent Assist FAQ answer data.",
          "$ref": "GoogleCloudContactcenterinsightsV1FaqAnswerData"
        },
        "smartComposeSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData",
          "description": "Agent Assist Smart Compose suggestion data."
        },
        "dialogflowInteraction": {
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData",
          "description": "Dialogflow interaction data."
        },
        "smartReply": {
          "$ref": "GoogleCloudContactcenterinsightsV1SmartReplyData",
          "description": "Agent Assist Smart Reply data."
        },
        "articleSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData",
          "description": "Agent Assist Article Suggestion data."
        },
        "annotationId": {
          "type": "string",
          "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}"
        },
        "endBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        },
        "startBoundary": {
          "description": "The boundary in the conversation where the annotation starts, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "answerFeedback": {
          "description": "The feedback that the customer has about the answer in `data`.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnswerFeedback"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation"
    },
    "GoogleCloudContactcenterinsightsV1DialogflowSource": {
      "properties": {
        "dialogflowConversation": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}"
        },
        "audioUri": {
          "type": "string",
          "description": "Cloud Storage URI that points to a file that contains the conversation audio."
        }
      },
      "description": "A Dialogflow source of conversation data.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1DialogflowSource"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats": {
      "properties": {
        "duplicatesSkippedCount": {
          "format": "int32",
          "readOnly": true,
          "description": "Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.",
          "type": "integer"
        },
        "successfulIngestCount": {
          "description": "Output only. The number of new conversations added during this ingest operation.",
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        },
        "processedObjectCount": {
          "type": "integer",
          "description": "Output only. The number of objects processed during the ingest operation.",
          "format": "int32",
          "readOnly": true
        },
        "failedIngestCount": {
          "readOnly": true,
          "description": "Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats",
      "type": "object",
      "description": "Statistics for IngestConversations operation."
    },
    "GoogleCloudContactcenterinsightsV1HoldData": {
      "type": "object",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1HoldData",
      "description": "The data for a hold annotation."
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata": {
      "type": "object",
      "properties": {
        "smartReplyAllowlistCovered": {
          "description": "Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata",
      "description": "Metadata from Dialogflow relating to the current transcript segment."
    },
    "GoogleCloudContactcenterinsightsV1ConversationDataSource": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationDataSource",
      "description": "The conversation source, which is a combination of transcript and audio.",
      "type": "object",
      "properties": {
        "dialogflowSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowSource",
          "description": "The source when the conversation comes from Dialogflow."
        },
        "gcsSource": {
          "description": "A Cloud Storage location specification for the audio and transcript.",
          "$ref": "GoogleCloudContactcenterinsightsV1GcsSource"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector": {
      "description": "Selector of all available annotators and phrase matchers to run.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
      "properties": {
        "runEntityAnnotator": {
          "type": "boolean",
          "description": "Whether to run the entity annotator."
        },
        "runInterruptionAnnotator": {
          "description": "Whether to run the interruption annotator.",
          "type": "boolean"
        },
        "runSilenceAnnotator": {
          "type": "boolean",
          "description": "Whether to run the silence annotator."
        },
        "runIssueModelAnnotator": {
          "type": "boolean",
          "description": "Whether to run the issue model annotator. A model should have already been deployed for this to take effect."
        },
        "phraseMatchers": {
          "items": {
            "type": "string"
          },
          "description": "The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
          "type": "array"
        },
        "issueModels": {
          "description": "The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "runPhraseMatcherAnnotator": {
          "description": "Whether to run the active phrase matcher annotator(s).",
          "type": "boolean"
        },
        "runSentimentAnnotator": {
          "description": "Whether to run the sentiment annotator.",
          "type": "boolean"
        },
        "runIntentAnnotator": {
          "description": "Whether to run the intent annotator.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Intent": {
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the intent."
        }
      },
      "type": "object",
      "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.",
      "id": "GoogleCloudContactcenterinsightsV1Intent"
    },
    "GoogleCloudContactcenterinsightsV1Conversation": {
      "id": "GoogleCloudContactcenterinsightsV1Conversation",
      "type": "object",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "A user-specified language code for the conversation."
        },
        "medium": {
          "description": "Immutable. The conversation medium, if unspecified will default to PHONE_CALL.",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "type": "string"
        },
        "obfuscatedUserId": {
          "description": "Obfuscated user ID which the customer sent to us.",
          "type": "string"
        },
        "latestAnalysis": {
          "description": "Output only. The conversation's latest analysis, if one exists.",
          "$ref": "GoogleCloudContactcenterinsightsV1Analysis",
          "readOnly": true
        },
        "agentId": {
          "type": "string",
          "description": "An opaque, user-specified string representing the human agent who handled the conversation."
        },
        "startTime": {
          "format": "google-datetime",
          "description": "The time at which the conversation started.",
          "type": "string"
        },
        "transcript": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscript",
          "description": "Output only. The conversation transcript."
        },
        "dialogflowIntents": {
          "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1DialogflowIntent"
          },
          "readOnly": true,
          "type": "object"
        },
        "expireTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted."
        },
        "callMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata",
          "description": "Call-specific metadata."
        },
        "turnCount": {
          "description": "Output only. The number of turns in the conversation.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "duration": {
          "type": "string",
          "description": "Output only. The duration of the conversation.",
          "readOnly": true,
          "format": "google-duration"
        },
        "createTime": {
          "description": "Output only. The time at which the conversation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "dataSource": {
          "description": "The source of the audio and transcription for the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationDataSource"
        },
        "runtimeAnnotations": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. The annotations that were generated during the customer and agent interaction."
        },
        "labels": {
          "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the conversation was updated.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "ttl": {
          "type": "string",
          "format": "google-duration",
          "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}"
        }
      },
      "description": "The conversation resource."
    },
    "GoogleLongrunningOperation": {
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "id": "GoogleLongrunningOperation"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse",
      "type": "object",
      "description": "The response to deploy an issue model.",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse": {
      "properties": {
        "currentStats": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
          "description": "The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse",
      "type": "object",
      "description": "Response of querying an issue model's statistics."
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries": {
      "description": "A time series representing conversations over time.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries",
      "properties": {
        "points": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval"
          },
          "description": "An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window.",
          "type": "array"
        },
        "intervalDuration": {
          "description": "The duration of each interval.",
          "format": "google-duration",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata",
      "description": "The metadata for a bulk analyze conversations operation.",
      "properties": {
        "failedAnalysesCount": {
          "description": "The number of requested analyses that have failed so far.",
          "format": "int32",
          "type": "integer"
        },
        "totalRequestedAnalysesCount": {
          "format": "int32",
          "description": "Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.",
          "type": "integer"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation finished running."
        },
        "request": {
          "description": "The original request for bulk analyze.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest"
        },
        "completedAnalysesCount": {
          "description": "The number of requested analyses that have completed successfully so far.",
          "type": "integer",
          "format": "int32"
        },
        "createTime": {
          "description": "The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueAssignment": {
      "id": "GoogleCloudContactcenterinsightsV1IssueAssignment",
      "description": "Information about the issue.",
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1].",
          "format": "double"
        },
        "issue": {
          "description": "Resource name of the assigned issue.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1FaqAnswerData": {
      "properties": {
        "source": {
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.",
          "type": "string"
        },
        "question": {
          "description": "The corresponding FAQ question.",
          "type": "string"
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "confidenceScore": {
          "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float",
          "type": "number"
        },
        "metadata": {
          "description": "Map that contains metadata about the FAQ answer and the document that it originates from.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "answer": {
          "type": "string",
          "description": "The piece of text from the `source` knowledge base document."
        }
      },
      "type": "object",
      "description": "Agent Assist frequently-asked-question answer data.",
      "id": "GoogleCloudContactcenterinsightsV1FaqAnswerData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource for new conversations."
        },
        "transcriptObjectConfig": {
          "description": "Configuration for when `source` contains conversation transcripts.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig"
        },
        "conversationConfig": {
          "description": "Configuration that applies to all conversations.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig"
        },
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource",
          "description": "A cloud storage bucket source."
        }
      },
      "description": "The request to ingest conversations.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig",
      "properties": {
        "exactMatchConfig": {
          "description": "The configuration for the exact match rule.",
          "$ref": "GoogleCloudContactcenterinsightsV1ExactMatchConfig"
        }
      },
      "description": "Configuration information of a phrase match rule."
    },
    "GoogleCloudContactcenterinsightsV1ExactMatchConfig": {
      "id": "GoogleCloudContactcenterinsightsV1ExactMatchConfig",
      "description": "Exact match configuration.",
      "type": "object",
      "properties": {
        "caseSensitive": {
          "type": "boolean",
          "description": "Whether to consider case sensitivity when performing an exact match."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval": {
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval",
      "description": "A single interval in a time series.",
      "properties": {
        "conversationCount": {
          "description": "The number of conversations created in this interval.",
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The start time of this interval."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig": {
      "properties": {
        "medium": {
          "type": "string",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`."
        },
        "trainingConversationsCount": {
          "readOnly": true,
          "format": "int64",
          "type": "string",
          "description": "Output only. Number of conversations used in training. Output only."
        },
        "filter": {
          "description": "A filter to reduce the conversations used for training the model to a specific subset.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig",
      "description": "Configs for the input data used to create the issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRule": {
      "type": "object",
      "description": "The data for a phrase match rule.",
      "properties": {
        "config": {
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig",
          "description": "Provides additional information about the rule that specifies how to apply the rule."
        },
        "negated": {
          "type": "boolean",
          "description": "Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment."
        },
        "query": {
          "description": "Required. The phrase to be matched.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRule"
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata",
      "description": "Call-specific metadata created during analysis.",
      "type": "object",
      "properties": {
        "intents": {
          "description": "All the matched intents in the call.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Intent"
          }
        },
        "phraseMatchers": {
          "description": "All the matched phrase matchers in the call.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
          }
        },
        "issueModelResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelResult",
          "description": "Overall conversation-level issue modeling result."
        },
        "annotations": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CallAnnotation"
          },
          "type": "array",
          "description": "A list of call annotations that apply to this call."
        },
        "sentiments": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment"
          },
          "description": "Overall conversation-level sentiment for each channel of the call.",
          "type": "array"
        },
        "entities": {
          "type": "object",
          "description": "All the entities in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Entity"
          }
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "operations": {
              "methods": {
                "cancel": {
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "id": "contactcenterinsights.projects.locations.operations.cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}:cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "httpMethod": "POST"
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "The standard list page size.",
                      "type": "integer"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation's parent resource.",
                      "required": true
                    },
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list page token."
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.operations.list",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "httpMethod": "GET",
                  "path": "v1/{+name}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`."
                },
                "get": {
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "contactcenterinsights.projects.locations.operations.get"
                }
              }
            },
            "issueModels": {
              "methods": {
                "create": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.create",
                  "description": "Creates an issue model.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent resource of the issue model."
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/issueModels"
                },
                "patch": {
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.patch",
                  "description": "Updates an issue model.",
                  "path": "v1/{+name}",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The list of fields to be updated.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                    }
                  }
                },
                "list": {
                  "id": "contactcenterinsights.projects.locations.issueModels.list",
                  "path": "v1/{+parent}/issueModels",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse"
                  },
                  "description": "Lists issue models.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent resource of the issue model.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  }
                },
                "deploy": {
                  "id": "contactcenterinsights.projects.locations.issueModels.deploy",
                  "path": "v1/{+name}:deploy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The issue model to deploy.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest"
                  }
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "description": "Required. The name of the issue model to delete.",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes an issue model.",
                  "id": "contactcenterinsights.projects.locations.issueModels.delete",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "path": "v1/{+name}"
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.get",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the issue model to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets an issue model."
                },
                "undeploy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy",
                  "path": "v1/{+name}:undeploy",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.undeploy",
                  "description": "Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The issue model to undeploy."
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST"
                },
                "calculateIssueModelStats": {
                  "parameters": {
                    "issueModel": {
                      "description": "Required. The resource name of the issue model to query against.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets an issue model's statistics.",
                  "parameterOrder": [
                    "issueModel"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats",
                  "path": "v1/{+issueModel}:calculateIssueModelStats",
                  "httpMethod": "GET"
                }
              },
              "resources": {
                "issues": {
                  "methods": {
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the issue to get.",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.get",
                      "description": "Gets an issue.",
                      "path": "v1/{+name}"
                    },
                    "list": {
                      "path": "v1/{+parent}/issues",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.list",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "description": "Required. The parent resource of the issue.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                        }
                      },
                      "description": "Lists issues.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListIssuesResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "patch": {
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.patch",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "parameters": {
                        "updateMask": {
                          "location": "query",
                          "format": "google-fieldmask",
                          "description": "The list of fields to be updated.",
                          "type": "string"
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$",
                          "location": "path",
                          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "path": "v1/{+name}",
                      "httpMethod": "PATCH",
                      "description": "Updates an issue.",
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "delete": {
                      "path": "v1/{+name}",
                      "description": "Deletes an issue.",
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.delete",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. The name of the issue to delete.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      }
                    }
                  }
                }
              }
            },
            "insightsdata": {
              "methods": {
                "export": {
                  "id": "contactcenterinsights.projects.locations.insightsdata.export",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/insightsdata:export",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export",
                  "description": "Export insights data to a destination defined in the request body.",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent resource to export data from.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
                  }
                }
              }
            },
            "phraseMatchers": {
              "methods": {
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.get",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the phrase matcher to get."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "description": "Gets a phrase matcher."
                },
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "The list of fields to be updated.",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "required": true,
                      "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "description": "Updates a phrase matcher.",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "description": "Required. The name of the phrase matcher to delete.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "httpMethod": "DELETE",
                  "description": "Deletes a phrase matcher.",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.delete"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/phraseMatchers",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of phrase matchers to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "filter": {
                      "location": "query",
                      "description": "A filter to reduce results to a specific subset. Useful for querying phrase matchers with specific properties.",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The value returned by the last `ListPhraseMatchersResponse`. This value indicates that this is a continuation of a prior `ListPhraseMatchers` call and that the system should return the next page of data."
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the phrase matcher.",
                      "type": "string"
                    }
                  },
                  "description": "Lists phrase matchers.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET"
                },
                "create": {
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a phrase matcher.",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent resource of the phrase matcher. Required. The location to create a phrase matcher for. Format: `projects//locations/` or `projects//locations/`"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.create",
                  "path": "v1/{+parent}/phraseMatchers",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers"
                }
              }
            },
            "views": {
              "methods": {
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "description": "Deletes a view.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "id": "contactcenterinsights.projects.locations.views.delete",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the view to delete.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}"
                },
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent resource of the view. Required. The location to create a view for. Format: `projects//locations/` or `projects//locations/`"
                    }
                  },
                  "path": "v1/{+parent}/views",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "httpMethod": "POST",
                  "id": "contactcenterinsights.projects.locations.views.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "description": "Creates a view."
                },
                "get": {
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "id": "contactcenterinsights.projects.locations.views.get",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the view to get.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a view.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "path": "v1/{+name}",
                  "description": "Updates a view.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to be updated.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.views.patch",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH"
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists views.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/views",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of views to return in the response. If this value is zero, the service will select a default size. A call may return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListViewsResponse`; indicates that this is a continuation of a prior `ListViews` call and the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The parent resource of the views.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.views.list",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListViewsResponse"
                  },
                  "httpMethod": "GET"
                }
              }
            },
            "conversations": {
              "resources": {
                "analyses": {
                  "methods": {
                    "get": {
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the analysis to get.",
                          "location": "path"
                        }
                      },
                      "description": "Gets an analysis.",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.get"
                    },
                    "create": {
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.create",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent resource of the analysis.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+parent}/analyses",
                      "description": "Creates an analysis. The long running operation is done when the analysis has completed.",
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "httpMethod": "GET",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.list",
                      "parameters": {
                        "filter": {
                          "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "The value returned by the last `ListAnalysesResponse`; indicates that this is a continuation of a prior `ListAnalyses` call and the system should return the next page of data."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "required": true,
                          "description": "Required. The parent resource of the analyses.",
                          "location": "path",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of analyses to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                          "type": "integer",
                          "location": "query",
                          "format": "int32"
                        }
                      },
                      "path": "v1/{+parent}/analyses",
                      "description": "Lists analyses.",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "delete": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}",
                      "description": "Deletes an analysis.",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the analysis to delete."
                        }
                      },
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.delete",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "path": "v1/{+name}"
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "description": "Gets a conversation.",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "description": "Required. The name of the conversation to get.",
                      "required": true,
                      "type": "string"
                    },
                    "view": {
                      "type": "string",
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "FULL",
                        "BASIC"
                      ],
                      "enumDescriptions": [
                        "The conversation view is not specified. * Defaults to `FULL` in `GetConversationRequest`. * Defaults to `BASIC` in `ListConversationsRequest`.",
                        "Populates all fields in the conversation.",
                        "Populates all fields in the conversation except the transcript."
                      ],
                      "description": "The level of details of the conversation. Default is `FULL`.",
                      "location": "query"
                    }
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "id": "contactcenterinsights.projects.locations.conversations.get"
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "The value returned by the last `ListConversationsResponse`. This value indicates that this is a continuation of a prior `ListConversations` call and that the system should return the next page of data.",
                      "location": "query"
                    },
                    "filter": {
                      "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties.",
                      "type": "string",
                      "location": "query"
                    },
                    "view": {
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "FULL",
                        "BASIC"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "The conversation view is not specified. * Defaults to `FULL` in `GetConversationRequest`. * Defaults to `BASIC` in `ListConversationsRequest`.",
                        "Populates all fields in the conversation.",
                        "Populates all fields in the conversation except the transcript."
                      ],
                      "location": "query",
                      "description": "The level of details of the conversation. Default is `BASIC`."
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent resource of the conversation.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of conversations to return in the response. A valid page size ranges from 0 to 1,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size."
                    }
                  },
                  "description": "Lists conversations.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations",
                  "id": "contactcenterinsights.projects.locations.conversations.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/conversations",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListConversationsResponse"
                  },
                  "httpMethod": "GET"
                },
                "calculateStats": {
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats",
                  "description": "Gets conversation statistics.",
                  "id": "contactcenterinsights.projects.locations.conversations.calculateStats",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "A filter to reduce results to a specific subset. This field is useful for getting statistics about conversations with specific properties."
                    },
                    "location": {
                      "description": "Required. The location of the conversations.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "location"
                  ],
                  "path": "v1/{+location}/conversations:calculateStats",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse"
                  }
                },
                "ingest": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest",
                  "path": "v1/{+parent}/conversations:ingest",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource for new conversations.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.conversations.ingest",
                  "description": "Imports conversations and processes them according to the user's configuration."
                },
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations",
                  "id": "contactcenterinsights.projects.locations.conversations.create",
                  "description": "Creates a conversation.",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the conversation.",
                      "location": "path",
                      "type": "string"
                    },
                    "conversationId": {
                      "location": "query",
                      "type": "string",
                      "description": "A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/conversations",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "delete": {
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a conversation.",
                  "id": "contactcenterinsights.projects.locations.conversations.delete",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the conversation to delete.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "force": {
                      "type": "boolean",
                      "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses.",
                      "location": "query"
                    }
                  }
                },
                "bulkAnalyze": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze",
                  "id": "contactcenterinsights.projects.locations.conversations.bulkAnalyze",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource to create analyses in."
                    }
                  },
                  "path": "v1/{+parent}/conversations:bulkAnalyze",
                  "description": "Analyzes multiple conversations in a single request.",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "id": "contactcenterinsights.projects.locations.conversations.patch",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "description": "Updates a conversation.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "The list of fields to be updated.",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  }
                }
              }
            }
          },
          "methods": {
            "getSettings": {
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets project-level settings.",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. The name of the settings resource to get.",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$"
                }
              },
              "path": "v1/{+name}",
              "id": "contactcenterinsights.projects.locations.getSettings"
            },
            "updateSettings": {
              "httpMethod": "PATCH",
              "path": "v1/{+name}",
              "id": "contactcenterinsights.projects.locations.updateSettings",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$"
                },
                "updateMask": {
                  "description": "Required. The list of fields to be updated.",
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query"
                }
              },
              "request": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "description": "Updates project-level settings.",
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        }
      }
    }
  },
  "ownerName": "Google",
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "batchPath": "batch",
  "mtlsRootUrl": "https://contactcenterinsights.mtls.googleapis.com/",
  "kind": "discovery#restDescription",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "version": "v1",
  "protocol": "rest",
  "description": "",
  "version_module": true,
  "basePath": ""
}

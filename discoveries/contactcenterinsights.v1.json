{
  "revision": "20230621",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "issueModels": {
              "resources": {
                "issues": {
                  "methods": {
                    "list": {
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                          "required": true,
                          "description": "Required. The parent resource of the issue.",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.list",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues",
                      "path": "v1/{+parent}/issues",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListIssuesResponse"
                      },
                      "httpMethod": "GET",
                      "description": "Lists issues.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "path": "v1/{+name}",
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.get",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "description": "Gets an issue.",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$",
                          "description": "Required. The name of the issue to get.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}"
                    },
                    "patch": {
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Issue"
                      },
                      "description": "Updates an issue.",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.patch",
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$",
                          "type": "string"
                        },
                        "updateMask": {
                          "type": "string",
                          "location": "query",
                          "description": "The list of fields to be updated.",
                          "format": "google-fieldmask"
                        }
                      },
                      "httpMethod": "PATCH",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the issue to delete."
                        }
                      },
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "id": "contactcenterinsights.projects.locations.issueModels.issues.delete",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes an issue.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}",
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "description": "Required. The name of the issue model to get."
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "path": "v1/{+name}",
                  "description": "Gets an issue model."
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.list",
                  "path": "v1/{+parent}/issueModels",
                  "description": "Lists issue models.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the issue model.",
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "calculateIssueModelStats": {
                  "httpMethod": "GET",
                  "parameters": {
                    "issueModel": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "location": "path",
                      "description": "Required. The resource name of the issue model to query against."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats",
                  "parameterOrder": [
                    "issueModel"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats",
                  "path": "v1/{+issueModel}:calculateIssueModelStats",
                  "description": "Gets an issue model's statistics.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates an issue model.",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "location": "path",
                      "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
                      "required": true
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The list of fields to be updated.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.patch",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "path": "v1/{+name}"
                },
                "deploy": {
                  "httpMethod": "POST",
                  "description": "Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.",
                  "id": "contactcenterinsights.projects.locations.issueModels.deploy",
                  "parameters": {
                    "name": {
                      "description": "Required. The issue model to deploy.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+name}:deploy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels",
                  "description": "Creates an issue model.",
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/issueModels",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent resource of the issue model.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.issueModels.create",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The name of the issue model to delete.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+name}",
                  "description": "Deletes an issue model.",
                  "id": "contactcenterinsights.projects.locations.issueModels.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}"
                },
                "undeploy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}:undeploy",
                  "description": "Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest"
                  },
                  "id": "contactcenterinsights.projects.locations.issueModels.undeploy",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The issue model to undeploy.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy"
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "id": "contactcenterinsights.projects.locations.operations.cancel",
                  "path": "v1/{+name}:cancel",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "id": "contactcenterinsights.projects.locations.operations.list",
                  "path": "v1/{+name}/operations",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "The standard list page size.",
                      "format": "int32"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The name of the operation's parent resource.",
                      "required": true,
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    },
                    "filter": {
                      "location": "query",
                      "description": "The standard list filter.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  }
                },
                "get": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenterinsights.projects.locations.operations.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "path": "v1/{+name}",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                }
              }
            },
            "conversations": {
              "methods": {
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "id": "contactcenterinsights.projects.locations.conversations.get",
                  "description": "Gets a conversation.",
                  "parameters": {
                    "view": {
                      "description": "The level of details of the conversation. Default is `FULL`.",
                      "location": "query",
                      "enumDescriptions": [
                        "The conversation view is not specified. * Defaults to `FULL` in `GetConversationRequest`. * Defaults to `BASIC` in `ListConversationsRequest`.",
                        "Populates all fields in the conversation.",
                        "Populates all fields in the conversation except the transcript."
                      ],
                      "type": "string",
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "FULL",
                        "BASIC"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the conversation to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$"
                    }
                  },
                  "httpMethod": "GET"
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the conversation to delete.",
                      "type": "string",
                      "required": true
                    },
                    "force": {
                      "description": "If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses.",
                      "type": "boolean",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.delete",
                  "description": "Deletes a conversation."
                },
                "ingest": {
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Imports conversations and processes them according to the user's configuration.",
                  "path": "v1/{+parent}/conversations:ingest",
                  "id": "contactcenterinsights.projects.locations.conversations.ingest",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource for new conversations.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest"
                },
                "create": {
                  "path": "v1/{+parent}/conversations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "conversationId": {
                      "description": "A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent resource of the conversation.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "id": "contactcenterinsights.projects.locations.conversations.create",
                  "description": "Creates a conversation.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "calculateStats": {
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse"
                  },
                  "path": "v1/{+location}/conversations:calculateStats",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "A filter to reduce results to a specific subset. This field is useful for getting statistics about conversations with specific properties."
                    },
                    "location": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The location of the conversations.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "location"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats",
                  "id": "contactcenterinsights.projects.locations.conversations.calculateStats",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets conversation statistics."
                },
                "list": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent resource of the conversation.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The value returned by the last `ListConversationsResponse`. This value indicates that this is a continuation of a prior `ListConversations` call and that the system should return the next page of data."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of conversations to return in the response. A valid page size ranges from 0 to 1,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size.",
                      "location": "query",
                      "type": "integer"
                    },
                    "view": {
                      "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "FULL",
                        "BASIC"
                      ],
                      "type": "string",
                      "description": "The level of details of the conversation. Default is `BASIC`.",
                      "location": "query",
                      "enumDescriptions": [
                        "The conversation view is not specified. * Defaults to `FULL` in `GetConversationRequest`. * Defaults to `BASIC` in `ListConversationsRequest`.",
                        "Populates all fields in the conversation.",
                        "Populates all fields in the conversation except the transcript."
                      ]
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/conversations",
                  "description": "Lists conversations.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListConversationsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations",
                  "id": "contactcenterinsights.projects.locations.conversations.list"
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "id": "contactcenterinsights.projects.locations.conversations.patch",
                  "description": "Updates a conversation.",
                  "parameters": {
                    "name": {
                      "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$"
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "The list of fields to be updated."
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "upload": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent resource of the conversation.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1UploadConversationRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.conversations.upload",
                  "path": "v1/{+parent}/conversations:upload",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:upload",
                  "description": "Create a longrunning conversation upload operation. This method differs from CreateConversation by allowing audio transcription and optional DLP redaction.",
                  "httpMethod": "POST"
                },
                "bulkAnalyze": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze",
                  "id": "contactcenterinsights.projects.locations.conversations.bulkAnalyze",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource to create analyses in.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/conversations:bulkAnalyze",
                  "description": "Analyzes multiple conversations in a single request.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                }
              },
              "resources": {
                "analyses": {
                  "methods": {
                    "delete": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the analysis to delete.",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+name}",
                      "httpMethod": "DELETE",
                      "description": "Deletes an analysis.",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.delete",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      }
                    },
                    "get": {
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.get",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the analysis to get.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "description": "Gets an analysis.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}"
                    },
                    "create": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.create",
                      "description": "Creates an analysis. The long running operation is done when the analysis has completed.",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "description": "Required. The parent resource of the analysis.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "path": "v1/{+parent}/analyses"
                    },
                    "list": {
                      "path": "v1/{+parent}/analyses",
                      "response": {
                        "$ref": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse"
                      },
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses",
                      "description": "Lists analyses.",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "The value returned by the last `ListAnalysesResponse`; indicates that this is a continuation of a prior `ListAnalyses` call and the system should return the next page of data.",
                          "location": "query"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "A filter to reduce results to a specific subset. Useful for querying conversations with specific properties."
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "description": "The maximum number of analyses to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The parent resource of the analyses."
                        }
                      },
                      "id": "contactcenterinsights.projects.locations.conversations.analyses.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                }
              }
            },
            "insightsdata": {
              "methods": {
                "export": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
                  },
                  "path": "v1/{+parent}/insightsdata:export",
                  "httpMethod": "POST",
                  "description": "Export insights data to a destination defined in the request body.",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent resource to export data from.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "id": "contactcenterinsights.projects.locations.insightsdata.export",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                }
              }
            },
            "views": {
              "methods": {
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "description": "Creates a view.",
                  "id": "contactcenterinsights.projects.locations.views.create",
                  "path": "v1/{+parent}/views",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent resource of the view. Required. The location to create a view for. Format: `projects//locations/` or `projects//locations/`"
                    }
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the view to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$"
                    }
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "description": "Gets a view.",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "id": "contactcenterinsights.projects.locations.views.get"
                },
                "list": {
                  "id": "contactcenterinsights.projects.locations.views.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views",
                  "path": "v1/{+parent}/views",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The value returned by the last `ListViewsResponse`; indicates that this is a continuation of a prior `ListViews` call and the system should return the next page of data."
                    },
                    "parent": {
                      "description": "Required. The parent resource of the views.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "description": "The maximum number of views to return in the response. If this value is zero, the service will select a default size. A call may return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListViewsResponse"
                  },
                  "description": "Lists views."
                },
                "patch": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}",
                      "location": "path"
                    },
                    "updateMask": {
                      "description": "The list of fields to be updated.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  },
                  "path": "v1/{+name}",
                  "id": "contactcenterinsights.projects.locations.views.patch",
                  "description": "Updates a view.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1View"
                  }
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/views/[^/]+$",
                      "description": "Required. The name of the view to delete.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "description": "Deletes a view.",
                  "id": "contactcenterinsights.projects.locations.views.delete",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "phraseMatchers": {
              "methods": {
                "patch": {
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.patch",
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "required": true,
                      "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
                      "location": "path"
                    },
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "The list of fields to be updated."
                    }
                  },
                  "description": "Updates a phrase matcher."
                },
                "list": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the phrase matcher."
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "A filter to reduce results to a specific subset. Useful for querying phrase matchers with specific properties."
                    },
                    "pageSize": {
                      "description": "The maximum number of phrase matchers to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The value returned by the last `ListPhraseMatchersResponse`. This value indicates that this is a continuation of a prior `ListPhraseMatchers` call and that the system should return the next page of data."
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Lists phrase matchers.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.list",
                  "path": "v1/{+parent}/phraseMatchers",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the phrase matcher to get.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "description": "Gets a phrase matcher.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.get"
                },
                "create": {
                  "response": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers",
                  "request": {
                    "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the phrase matcher. Required. The location to create a phrase matcher for. Format: `projects//locations/` or `projects//locations/`",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/phraseMatchers",
                  "description": "Creates a phrase matcher.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}",
                  "description": "Deletes a phrase matcher.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the phrase matcher to delete."
                    }
                  },
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "id": "contactcenterinsights.projects.locations.phraseMatchers.delete"
                }
              }
            }
          },
          "methods": {
            "updateSettings": {
              "httpMethod": "PATCH",
              "description": "Updates project-level settings.",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings",
                  "location": "path",
                  "type": "string"
                },
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "description": "Required. The list of fields to be updated.",
                  "format": "google-fieldmask"
                }
              },
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "id": "contactcenterinsights.projects.locations.updateSettings"
            },
            "getSettings": {
              "id": "contactcenterinsights.projects.locations.getSettings",
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the settings resource to get.",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudContactcenterinsightsV1Settings"
              },
              "description": "Gets project-level settings."
            }
          }
        }
      }
    }
  },
  "title": "Contact Center AI Insights API",
  "name": "contactcenterinsights",
  "version": "v1",
  "id": "contactcenterinsights:v1",
  "mtlsRootUrl": "https://contactcenterinsights.mtls.googleapis.com/",
  "rootUrl": "https://contactcenterinsights.googleapis.com/",
  "servicePath": "",
  "version_module": true,
  "canonicalName": "Contactcenterinsights",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "discoveryVersion": "v1",
  "baseUrl": "https://contactcenterinsights.googleapis.com/",
  "schemas": {
    "GoogleCloudContactcenterinsightsV1IngestConversationsResponse": {
      "type": "object",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsResponse",
      "description": "The response to an IngestConversations operation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource": {
      "properties": {
        "dialogflowConversation": {
          "readOnly": true,
          "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "type": "string"
        },
        "audioUri": {
          "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource",
      "description": "A Dialogflow source of conversation data."
    },
    "GoogleCloudContactcenterinsightsV1alpha1HoldData": {
      "description": "The data for a hold annotation.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1HoldData"
    },
    "GoogleCloudContactcenterinsightsV1IssueModel": {
      "description": "The issue model resource.",
      "id": "GoogleCloudContactcenterinsightsV1IssueModel",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. State of the model."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}"
        },
        "displayName": {
          "description": "The representative name for the issue model.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time at which this issue model was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "inputDataConfig": {
          "description": "Configs for the input data that used to create the issue model.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig"
        },
        "issueCount": {
          "format": "int64",
          "readOnly": true,
          "description": "Output only. Number of issues in this issue model.",
          "type": "string"
        },
        "trainingStats": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
          "description": "Output only. Immutable. The issue model's label statistics on its training data."
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The most recent time at which the issue model was updated."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData": {
      "type": "object",
      "description": "Conversation summarization suggestion data.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData",
      "properties": {
        "textSections": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value."
        },
        "answerRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "conversationModel": {
          "type": "string",
          "description": "The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "A map that contains metadata about the summarization and the document from which it originates."
        },
        "confidence": {
          "type": "number",
          "description": "The confidence score of the summarization.",
          "format": "float"
        },
        "text": {
          "description": "The summarization content that is concatenated into one string.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData": {
      "description": "Agent Assist Article Suggestion data.",
      "properties": {
        "confidenceScore": {
          "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float",
          "type": "number"
        },
        "source": {
          "type": "string",
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}"
        },
        "uri": {
          "type": "string",
          "description": "Article URI."
        },
        "title": {
          "type": "string",
          "description": "Article title."
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the Article Suggestion and the document that it originates from."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData"
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse": {
      "properties": {},
      "description": "The response to deploy an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelResponse"
    },
    "GoogleCloudContactcenterinsightsV1ListAnalysesResponse": {
      "description": "The response to list analyses.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListAnalysesResponse",
      "properties": {
        "analyses": {
          "description": "The analyses that match the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Analysis"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1SentimentData": {
      "description": "The data for a sentiment annotation.",
      "type": "object",
      "properties": {
        "score": {
          "description": "The sentiment score between -1.0 (negative) and 1.0 (positive).",
          "format": "float",
          "type": "number"
        },
        "magnitude": {
          "type": "number",
          "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.",
          "format": "float"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource": {
      "description": "The conversation source, which is a combination of transcript and audio.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1GcsSource",
          "description": "A Cloud Storage location specification for the audio and transcript."
        },
        "dialogflowSource": {
          "description": "The source when the conversation comes from Dialogflow.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowSource"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource"
    },
    "GoogleCloudContactcenterinsightsV1alpha1Entity": {
      "type": "object",
      "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1Entity",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The representative name for the entity."
        },
        "metadata": {
          "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "salience": {
          "type": "number",
          "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.",
          "format": "float"
        },
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
          "description": "The aggregate sentiment expressed for this entity in the conversation."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Person.",
            "Location.",
            "Organization.",
            "Event.",
            "Artwork.",
            "Consumer product.",
            "Other types of entities.",
            "Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.",
            "Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.",
            "Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.",
            "Number. The metadata is the number itself.",
            "Price. The metadata identifies the `value` and `currency`."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSON",
            "LOCATION",
            "ORGANIZATION",
            "EVENT",
            "WORK_OF_ART",
            "CONSUMER_GOOD",
            "OTHER",
            "PHONE_NUMBER",
            "ADDRESS",
            "DATE",
            "NUMBER",
            "PRICE"
          ],
          "description": "The entity type."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1Issue": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which this issue was created.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the issue."
        },
        "sampleUtterances": {
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. Resource names of the sample representative utterances that match to this issue."
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The most recent time that this issue was updated."
        }
      },
      "description": "The issue resource.",
      "id": "GoogleCloudContactcenterinsightsV1Issue"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment": {
      "properties": {
        "sentimentData": {
          "description": "Data specifying sentiment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData"
        },
        "channelTag": {
          "format": "int32",
          "description": "The channel of the audio that the data applies to.",
          "type": "integer"
        }
      },
      "description": "One channel of conversation-level sentiment data.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment"
    },
    "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse": {
      "id": "GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse",
      "description": "The response of listing phrase matchers.",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "phraseMatchers": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatcher"
          },
          "description": "The phrase matchers that match the request."
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo": {
      "properties": {
        "word": {
          "description": "The word itself. Includes punctuation marks that surround the word.",
          "type": "string"
        },
        "endOffset": {
          "type": "string",
          "format": "google-duration",
          "description": "Time offset of the end of this word relative to the beginning of the total conversation."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset."
        },
        "startOffset": {
          "format": "google-duration",
          "type": "string",
          "description": "Time offset of the start of this word relative to the beginning of the total conversation."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo",
      "description": "Word-level info for words in a transcript.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1UploadConversationMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1UploadConversationMetadata",
      "type": "object",
      "description": "The metadata for an UploadConversation operation.",
      "properties": {
        "request": {
          "readOnly": true,
          "description": "Output only. The original request.",
          "$ref": "GoogleCloudContactcenterinsightsV1UploadConversationRequest"
        },
        "analysisOperation": {
          "readOnly": true,
          "description": "Output only. The operation name for a successfully created analysis operation, if any.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "appliedRedactionConfig": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig",
          "description": "Output only. The redaction config applied to the uploaded conversation."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData",
      "description": "Agent Assist Smart Compose suggestion data.",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates."
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "suggestion": {
          "type": "string",
          "description": "The content of the suggestion."
        },
        "confidenceScore": {
          "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination",
      "properties": {
        "table": {
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        },
        "dataset": {
          "type": "string",
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error."
        },
        "projectId": {
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.",
          "type": "string"
        }
      },
      "description": "A BigQuery Table Reference."
    },
    "GoogleCloudContactcenterinsightsV1SmartReplyData": {
      "type": "object",
      "properties": {
        "reply": {
          "description": "The content of the reply.",
          "type": "string"
        },
        "confidenceScore": {
          "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "double"
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the Smart Reply and the document from which it originates."
        }
      },
      "description": "Agent Assist Smart Reply data.",
      "id": "GoogleCloudContactcenterinsightsV1SmartReplyData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1SilenceData": {
      "type": "object",
      "description": "The data for a silence annotation.",
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1alpha1SilenceData"
    },
    "GoogleCloudContactcenterinsightsV1FaqAnswerData": {
      "description": "Agent Assist frequently-asked-question answer data.",
      "type": "object",
      "properties": {
        "answer": {
          "description": "The piece of text from the `source` knowledge base document.",
          "type": "string"
        },
        "question": {
          "description": "The corresponding FAQ question.",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "description": "Map that contains metadata about the FAQ answer and the document that it originates from.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "source": {
          "type": "string",
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}."
        },
        "confidenceScore": {
          "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1FaqAnswerData"
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The issue model to undeploy."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest",
      "description": "The request to undeploy an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation": {
      "properties": {
        "conversationSummarizationSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData",
          "description": "Conversation summarization suggestion data."
        },
        "smartReply": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData",
          "description": "Agent Assist Smart Reply data."
        },
        "faqAnswer": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData",
          "description": "Agent Assist FAQ answer data."
        },
        "answerFeedback": {
          "description": "The feedback that the customer has about the answer in `data`.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback"
        },
        "annotationId": {
          "type": "string",
          "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}"
        },
        "articleSuggestion": {
          "description": "Agent Assist Article Suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which this annotation was created."
        },
        "startBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        },
        "endBoundary": {
          "description": "The boundary in the conversation where the annotation ends, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary"
        },
        "dialogflowInteraction": {
          "description": "Dialogflow interaction data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData"
        },
        "smartComposeSuggestion": {
          "description": "Agent Assist Smart Compose suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation",
      "type": "object",
      "description": "An annotation that was generated during the customer and agent interaction."
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest": {
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to create analyses in."
        },
        "filter": {
          "type": "string",
          "description": "Required. Filter used to select the subset of conversations to analyze."
        },
        "analysisPercentage": {
          "format": "float",
          "type": "number",
          "description": "Required. Percentage of selected conversation to analyze, between [0, 100]."
        },
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest",
      "description": "The request to analyze conversations in bulk.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest": {
      "description": "The request to delete an issue model.",
      "properties": {
        "name": {
          "description": "Required. The name of the issue model to delete.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment": {
      "type": "object",
      "description": "A segment of a full transcript.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment",
      "properties": {
        "dialogflowSegmentMetadata": {
          "description": "CCAI metadata relating to the current transcript segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata"
        },
        "text": {
          "type": "string",
          "description": "The text of this segment."
        },
        "channelTag": {
          "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.",
          "format": "int32",
          "type": "integer"
        },
        "messageTime": {
          "type": "string",
          "description": "The time that the message occurred, if provided.",
          "format": "google-datetime"
        },
        "words": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo"
          },
          "description": "A list of the word-specific information for each word in the segment."
        },
        "segmentParticipant": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationParticipant",
          "description": "The participant of this segment."
        },
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "The sentiment for this transcript segment."
        },
        "languageCode": {
          "type": "string",
          "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\"."
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset."
        }
      }
    },
    "GoogleProtobufEmpty": {
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "GoogleProtobufEmpty",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats": {
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats",
      "type": "object",
      "description": "Aggregated statistics about an issue.",
      "properties": {
        "issue": {
          "type": "string",
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        },
        "displayName": {
          "description": "Display name of the issue.",
          "type": "string"
        },
        "labeledConversationsCount": {
          "description": "Number of conversations attached to the issue at this point in time.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig": {
      "properties": {
        "uploadConversationAnalysisPercentage": {
          "format": "double",
          "description": "Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100].",
          "type": "number"
        },
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
        },
        "runtimeIntegrationAnalysisPercentage": {
          "type": "number",
          "format": "double",
          "description": "Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100]."
        }
      },
      "description": "Default configuration when creating Analyses in Insights.",
      "id": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest": {
      "description": "The request to deploy an issue model.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The issue model to deploy."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries": {
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries",
      "type": "object",
      "description": "A time series representing conversations over time.",
      "properties": {
        "intervalDuration": {
          "description": "The duration of each interval.",
          "type": "string",
          "format": "google-duration"
        },
        "points": {
          "description": "An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval"
          }
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1GcsSource": {
      "id": "GoogleCloudContactcenterinsightsV1GcsSource",
      "type": "object",
      "description": "A Cloud Storage source of conversation data.",
      "properties": {
        "audioUri": {
          "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
          "type": "string"
        },
        "transcriptUri": {
          "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata",
      "description": "Call-specific metadata created during analysis.",
      "properties": {
        "annotations": {
          "description": "A list of call annotations that apply to this call.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1CallAnnotation"
          },
          "type": "array"
        },
        "issueModelResult": {
          "description": "Overall conversation-level issue modeling result.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelResult"
        },
        "intents": {
          "type": "object",
          "description": "All the matched intents in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Intent"
          }
        },
        "sentiments": {
          "description": "Overall conversation-level sentiment for each channel of the call.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment"
          },
          "type": "array"
        },
        "entities": {
          "description": "All the entities in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1Entity"
          },
          "type": "object"
        },
        "phraseMatchers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData"
          },
          "description": "All the matched phrase matchers in the call."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata": {
      "description": "Metadata for deploying an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1DeployIssueModelRequest",
          "description": "The original request for deployment."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata": {
      "type": "object",
      "description": "The metadata for a bulk analyze conversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "description": "The time the operation finished running.",
          "type": "string"
        },
        "totalRequestedAnalysesCount": {
          "format": "int32",
          "description": "Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.",
          "type": "integer"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time the operation was created.",
          "type": "string"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest",
          "description": "The original request for bulk analyze."
        },
        "failedAnalysesCount": {
          "format": "int32",
          "description": "The number of requested analyses that have failed so far.",
          "type": "integer"
        },
        "completedAnalysesCount": {
          "format": "int32",
          "description": "The number of requested analyses that have completed successfully so far.",
          "type": "integer"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig": {
      "description": "Configuration for processing transcript objects.",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig",
      "type": "object",
      "properties": {
        "medium": {
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "description": "Required. The medium transcript objects represent.",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse": {
      "properties": {},
      "type": "object",
      "description": "The response to deploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment": {
      "properties": {
        "score": {
          "type": "number",
          "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1].",
          "format": "double"
        },
        "issue": {
          "type": "string",
          "description": "Resource name of the assigned issue."
        },
        "displayName": {
          "type": "string",
          "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment",
      "description": "Information about the issue."
    },
    "GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata",
      "type": "object",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        },
        "appliedRedactionConfig": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig",
          "description": "Output only. The redaction config applied to the uploaded conversation."
        },
        "request": {
          "description": "Output only. The original request.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest"
        },
        "analysisOperation": {
          "readOnly": true,
          "description": "Output only. The operation name for a successfully created analysis operation, if any.",
          "type": "string"
        }
      },
      "description": "The metadata for an UploadConversation operation."
    },
    "GoogleCloudContactcenterinsightsV1View": {
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The most recent time at which the view was updated.",
          "readOnly": true
        },
        "displayName": {
          "description": "The human-readable display name of the view.",
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "String with specific view properties, must be non-empty."
        },
        "name": {
          "description": "Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time at which this view was created."
        }
      },
      "description": "The View resource.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1View"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest",
      "description": "The request to export insights.",
      "properties": {
        "writeDisposition": {
          "enum": [
            "WRITE_DISPOSITION_UNSPECIFIED",
            "WRITE_TRUNCATE",
            "WRITE_APPEND"
          ],
          "enumDescriptions": [
            "Write disposition is not specified. Defaults to WRITE_TRUNCATE.",
            "If the table already exists, BigQuery will overwrite the table data and use the schema from the load.",
            "If the table already exists, BigQuery will append data to the table."
          ],
          "description": "Options for what to do if the destination table already exists.",
          "type": "string"
        },
        "kmsKey": {
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}",
          "type": "string"
        },
        "bigQueryDestination": {
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination",
          "description": "Specified if sink is a BigQuery table."
        },
        "parent": {
          "description": "Required. The parent resource to export data from.",
          "type": "string"
        },
        "filter": {
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1EntityMentionData": {
      "type": "object",
      "properties": {
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "Sentiment expressed for this mention of the entity."
        },
        "type": {
          "enum": [
            "MENTION_TYPE_UNSPECIFIED",
            "PROPER",
            "COMMON"
          ],
          "description": "The type of the entity mention.",
          "enumDescriptions": [
            "Unspecified.",
            "Proper noun.",
            "Common noun (or noun compound)."
          ],
          "type": "string"
        },
        "entityUniqueId": {
          "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.",
          "type": "string"
        }
      },
      "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.",
      "id": "GoogleCloudContactcenterinsightsV1EntityMentionData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse": {
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse",
      "type": "object",
      "description": "Response for an export insights operation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse",
      "description": "The response to an IngestConversations operation.",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata": {
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "conversation": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The Conversation that this Analysis Operation belongs to."
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime"
        },
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
          "readOnly": true,
          "description": "Output only. The annotator selector used for the analysis (if any)."
        }
      },
      "type": "object",
      "description": "Metadata for a create analysis operation.",
      "id": "GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData",
      "description": "Conversation summarization suggestion data.",
      "properties": {
        "textSections": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value."
        },
        "text": {
          "description": "The summarization content that is concatenated into one string.",
          "type": "string"
        },
        "conversationModel": {
          "type": "string",
          "description": "The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}"
        },
        "confidence": {
          "format": "float",
          "description": "The confidence score of the summarization.",
          "type": "number"
        },
        "answerRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "metadata": {
          "description": "A map that contains metadata about the summarization and the document from which it originates.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig": {
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig",
      "properties": {
        "agentId": {
          "description": "An opaque, user-specified string representing the human agent who handled the conversations.",
          "type": "string"
        }
      },
      "description": "Configuration that applies to all conversations.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequest": {
      "properties": {
        "gcsSource": {
          "description": "A cloud storage bucket source.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource for new conversations."
        },
        "transcriptObjectConfig": {
          "description": "Configuration for when `source` contains conversation transcripts.",
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig"
        },
        "conversationConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig",
          "description": "Configuration that applies to all conversations."
        }
      },
      "description": "The request to ingest conversations.",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData": {
      "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.",
      "type": "object",
      "properties": {
        "intentUniqueId": {
          "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData"
    },
    "GoogleCloudContactcenterinsightsV1ExactMatchConfig": {
      "type": "object",
      "description": "Exact match configuration.",
      "id": "GoogleCloudContactcenterinsightsV1ExactMatchConfig",
      "properties": {
        "caseSensitive": {
          "description": "Whether to consider case sensitivity when performing an exact match.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IssueMatchData": {
      "properties": {
        "issueAssignment": {
          "description": "Information about the issue's assignment.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueMatchData",
      "type": "object",
      "description": "The data for an issue match annotation."
    },
    "GoogleCloudContactcenterinsightsV1InterruptionData": {
      "id": "GoogleCloudContactcenterinsightsV1InterruptionData",
      "properties": {},
      "type": "object",
      "description": "The data for an interruption annotation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata": {
      "description": "Call-specific metadata created during analysis.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata",
      "properties": {
        "issueModelResult": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult",
          "description": "Overall conversation-level issue modeling result."
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation"
          },
          "description": "A list of call annotations that apply to this call."
        },
        "sentiments": {
          "type": "array",
          "description": "Overall conversation-level sentiment for each channel of the call.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment"
          }
        },
        "entities": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1Entity"
          },
          "description": "All the entities in the call."
        },
        "phraseMatchers": {
          "type": "object",
          "description": "All the matched phrase matchers in the call.",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData"
          }
        },
        "intents": {
          "description": "All the matched intents in the call.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1Intent"
          }
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest": {
      "type": "object",
      "properties": {
        "issueModel": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModel",
          "description": "Required. The issue model to create."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the issue model."
        }
      },
      "description": "The request to create an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData": {
      "type": "object",
      "description": "Agent Assist frequently-asked-question answer data.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData",
      "properties": {
        "answer": {
          "type": "string",
          "description": "The piece of text from the `source` knowledge base document."
        },
        "source": {
          "type": "string",
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}."
        },
        "question": {
          "description": "The corresponding FAQ question.",
          "type": "string"
        },
        "confidenceScore": {
          "type": "number",
          "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float"
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the FAQ answer and the document that it originates from.",
          "type": "object"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData": {
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified.",
            "Proper noun.",
            "Common noun (or noun compound)."
          ],
          "type": "string",
          "description": "The type of the entity mention.",
          "enum": [
            "MENTION_TYPE_UNSPECIFIED",
            "PROPER",
            "COMMON"
          ]
        },
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
          "description": "Sentiment expressed for this mention of the entity."
        },
        "entityUniqueId": {
          "type": "string",
          "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to."
        }
      },
      "type": "object",
      "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData"
    },
    "GoogleCloudContactcenterinsightsV1SilenceData": {
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1SilenceData",
      "description": "The data for a silence annotation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval": {
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval",
      "properties": {
        "conversationCount": {
          "format": "int32",
          "description": "The number of conversations created in this interval.",
          "type": "integer"
        },
        "startTime": {
          "description": "The start time of this interval.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "A single interval in a time series."
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest": {
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest",
      "description": "The request to analyze conversations in bulk.",
      "type": "object",
      "properties": {
        "annotatorSelector": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector",
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run."
        },
        "parent": {
          "description": "Required. The parent resource to create analyses in.",
          "type": "string"
        },
        "filter": {
          "type": "string",
          "description": "Required. Filter used to select the subset of conversations to analyze."
        },
        "analysisPercentage": {
          "format": "float",
          "description": "Required. Percentage of selected conversation to analyze, between [0, 100].",
          "type": "number"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData": {
      "type": "object",
      "description": "Agent Assist Smart Reply data.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1SmartReplyData",
      "properties": {
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "queryRecord": {
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the Smart Reply and the document from which it originates."
        },
        "reply": {
          "description": "The content of the reply.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo": {
      "description": "Word-level info for words in a transcript.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo",
      "properties": {
        "startOffset": {
          "description": "Time offset of the start of this word relative to the beginning of the total conversation.",
          "format": "google-duration",
          "type": "string"
        },
        "word": {
          "type": "string",
          "description": "The word itself. Includes punctuation marks that surround the word."
        },
        "endOffset": {
          "type": "string",
          "description": "Time offset of the end of this word relative to the beginning of the total conversation.",
          "format": "google-duration"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig": {
      "properties": {
        "trainingConversationsCount": {
          "description": "Output only. Number of conversations used in training. Output only.",
          "format": "int64",
          "readOnly": true,
          "type": "string"
        },
        "medium": {
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.",
          "type": "string"
        },
        "filter": {
          "type": "string",
          "description": "A filter to reduce the conversations used for training the model to a specific subset."
        }
      },
      "description": "Configs for the input data used to create the issue model.",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Entity": {
      "properties": {
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "The aggregate sentiment expressed for this entity in the conversation."
        },
        "salience": {
          "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.",
          "type": "number",
          "format": "float"
        },
        "type": {
          "description": "The entity type.",
          "enumDescriptions": [
            "Unspecified.",
            "Person.",
            "Location.",
            "Organization.",
            "Event.",
            "Artwork.",
            "Consumer product.",
            "Other types of entities.",
            "Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.",
            "Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.",
            "Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.",
            "Number. The metadata is the number itself.",
            "Price. The metadata identifies the `value` and `currency`."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSON",
            "LOCATION",
            "ORGANIZATION",
            "EVENT",
            "WORK_OF_ART",
            "CONSUMER_GOOD",
            "OTHER",
            "PHONE_NUMBER",
            "ADDRESS",
            "DATE",
            "NUMBER",
            "PRICE"
          ],
          "type": "string"
        },
        "displayName": {
          "description": "The representative name for the entity.",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1Entity",
      "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location."
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult": {
      "description": "The result of an analysis.",
      "type": "object",
      "properties": {
        "callAnalysisMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata",
          "description": "Call-specific metadata created by the analysis."
        },
        "endTime": {
          "description": "The time at which the analysis ended.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult"
    },
    "GoogleCloudContactcenterinsightsV1RedactionConfig": {
      "description": "DLP resources used for redaction while ingesting conversations.",
      "id": "GoogleCloudContactcenterinsightsV1RedactionConfig",
      "properties": {
        "inspectTemplate": {
          "description": "The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`",
          "type": "string"
        },
        "deidentifyTemplate": {
          "type": "string",
          "description": "The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant": {
      "description": "The call participant speaking for a given utterance.",
      "type": "object",
      "properties": {
        "userId": {
          "description": "A user-specified ID representing the participant.",
          "type": "string"
        },
        "obfuscatedExternalUserId": {
          "type": "string",
          "description": "Obfuscated user ID from Dialogflow."
        },
        "dialogflowParticipantName": {
          "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "type": "string"
        },
        "dialogflowParticipant": {
          "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "type": "string"
        },
        "role": {
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ],
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "description": "The role of the participant.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant"
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata": {
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest",
          "description": "The original request for creation."
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata",
      "description": "Metadata for creating an issue model."
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatcher": {
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatcher",
      "properties": {
        "activationUpdateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The most recent time at which the activation status was updated.",
          "type": "string"
        },
        "versionTag": {
          "type": "string",
          "description": "The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`."
        },
        "revisionId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567"
        },
        "phraseMatchRuleGroups": {
          "description": "A list of phase match rule groups that are included in this matcher.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup"
          },
          "type": "array"
        },
        "revisionCreateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added."
        },
        "active": {
          "description": "Applies the phrase matcher only when it is active.",
          "type": "boolean"
        },
        "roleMatch": {
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "type": "string",
          "description": "The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ]
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the phrase matcher was updated.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the phrase matcher."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rule groups or there is no match.",
            "If any of the phrase match rule groups are met, there is a match."
          ],
          "description": "Required. The type of this phrase matcher.",
          "enum": [
            "PHRASE_MATCHER_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ]
        }
      },
      "type": "object",
      "description": "The phrase matcher resource."
    },
    "GoogleCloudContactcenterinsightsV1ConversationDataSource": {
      "type": "object",
      "properties": {
        "gcsSource": {
          "description": "A Cloud Storage location specification for the audio and transcript.",
          "$ref": "GoogleCloudContactcenterinsightsV1GcsSource"
        },
        "dialogflowSource": {
          "description": "The source when the conversation comes from Dialogflow.",
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowSource"
        }
      },
      "description": "The conversation source, which is a combination of transcript and audio.",
      "id": "GoogleCloudContactcenterinsightsV1ConversationDataSource"
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscript": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscript",
      "description": "A message representing the transcript of a conversation.",
      "type": "object",
      "properties": {
        "transcriptSegments": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment"
          },
          "description": "A list of sequential transcript segments that comprise the conversation.",
          "type": "array"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse": {
      "description": "The response to undeploy an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse",
      "properties": {}
    },
    "GoogleCloudContactcenterinsightsV1ListIssuesResponse": {
      "description": "The response of listing issues.",
      "properties": {
        "issues": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Issue"
          },
          "type": "array",
          "description": "The issues that match the request."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ListIssuesResponse",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata": {
      "properties": {
        "customerChannel": {
          "type": "integer",
          "format": "int32",
          "description": "The audio channel that contains the customer."
        },
        "agentChannel": {
          "format": "int32",
          "description": "The audio channel that contains the agent.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata",
      "description": "Call-specific metadata.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata": {
      "properties": {
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "request": {
          "description": "The original request for deployment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest"
        }
      },
      "description": "Metadata for deploying an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name of the issue model to delete."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest",
      "type": "object",
      "description": "The request to delete an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata",
      "type": "object",
      "description": "Metadata for an export insights operation.",
      "properties": {
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest",
          "description": "The original request for export."
        },
        "partialErrors": {
          "description": "Partial errors during export operation that might cause the operation output to be incomplete.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse": {
      "description": "The response for a bulk analyze conversations operation.",
      "properties": {
        "successfulAnalysisCount": {
          "description": "Count of successful analyses.",
          "format": "int32",
          "type": "integer"
        },
        "failedAnalysisCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of failed analyses."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse": {
      "type": "object",
      "properties": {
        "issueModels": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModel"
          },
          "description": "The issue models that match the request.",
          "type": "array"
        }
      },
      "description": "The response of listing issue models.",
      "id": "GoogleCloudContactcenterinsightsV1ListIssueModelsResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary": {
      "properties": {
        "wordIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero."
        },
        "transcriptIndex": {
          "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "A point in a conversation that marks the start or the end of an annotation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary"
    },
    "GoogleCloudContactcenterinsightsV1AnnotatorSelector": {
      "description": "Selector of all available annotators and phrase matchers to run.",
      "properties": {
        "summarizationConfig": {
          "description": "Configuration for the summarization annotator.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig"
        },
        "runSentimentAnnotator": {
          "type": "boolean",
          "description": "Whether to run the sentiment annotator."
        },
        "runSilenceAnnotator": {
          "type": "boolean",
          "description": "Whether to run the silence annotator."
        },
        "runIssueModelAnnotator": {
          "type": "boolean",
          "description": "Whether to run the issue model annotator. A model should have already been deployed for this to take effect."
        },
        "runPhraseMatcherAnnotator": {
          "description": "Whether to run the active phrase matcher annotator(s).",
          "type": "boolean"
        },
        "phraseMatchers": {
          "description": "The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "runInterruptionAnnotator": {
          "type": "boolean",
          "description": "Whether to run the interruption annotator."
        },
        "runEntityAnnotator": {
          "description": "Whether to run the entity annotator.",
          "type": "boolean"
        },
        "runSummarizationAnnotator": {
          "type": "boolean",
          "description": "Whether to run the summarization annotator."
        },
        "issueModels": {
          "type": "array",
          "description": "The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.",
          "items": {
            "type": "string"
          }
        },
        "runIntentAnnotator": {
          "type": "boolean",
          "description": "Whether to run the intent annotator."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig": {
      "description": "Configuration information of a phrase match rule.",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig",
      "type": "object",
      "properties": {
        "exactMatchConfig": {
          "description": "The configuration for the exact match rule.",
          "$ref": "GoogleCloudContactcenterinsightsV1ExactMatchConfig"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1IssueModelResult": {
      "properties": {
        "issues": {
          "description": "All the matched issues.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueAssignment"
          },
          "type": "array"
        },
        "issueModel": {
          "description": "Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IssueModelResult",
      "type": "object",
      "description": "Issue Modeling result on a conversation."
    },
    "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig": {
      "properties": {
        "conversationProfile": {
          "type": "string",
          "description": "Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}"
        },
        "summarizationModel": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified summarization model.",
            "The Insights baseline model."
          ],
          "enum": [
            "SUMMARIZATION_MODEL_UNSPECIFIED",
            "BASELINE_MODEL"
          ],
          "description": "Default summarization model to be used."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig",
      "description": "Configuration for summarization."
    },
    "GoogleCloudContactcenterinsightsV1ListViewsResponse": {
      "description": "The response of listing views.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ListViewsResponse",
      "properties": {
        "views": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1View"
          },
          "description": "The views that match the request.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata",
      "properties": {
        "endTime": {
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "type": "string"
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Partial errors during export operation that might cause the operation output to be incomplete."
        },
        "request": {
          "description": "The original request for export.",
          "$ref": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "Metadata for an export insights operation."
    },
    "GoogleCloudContactcenterinsightsV1alpha1InterruptionData": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1InterruptionData",
      "description": "The data for an interruption annotation.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData": {
      "properties": {
        "suggestion": {
          "description": "The content of the suggestion.",
          "type": "string"
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates."
        },
        "confidenceScore": {
          "format": "double",
          "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        }
      },
      "description": "Agent Assist Smart Compose suggestion data.",
      "id": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1HoldData": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1HoldData",
      "properties": {},
      "description": "The data for a hold annotation."
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRule": {
      "description": "The data for a phrase match rule.",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRule",
      "type": "object",
      "properties": {
        "config": {
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig",
          "description": "Provides additional information about the rule that specifies how to apply the rule."
        },
        "negated": {
          "type": "boolean",
          "description": "Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment."
        },
        "query": {
          "description": "Required. The phrase to be matched.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata": {
      "description": "Metadata from Dialogflow relating to the current transcript segment.",
      "properties": {
        "smartReplyAllowlistCovered": {
          "description": "Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData": {
      "description": "Dialogflow interaction data.",
      "properties": {
        "dialogflowIntentId": {
          "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}",
          "type": "string"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain)."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats",
      "type": "object",
      "properties": {
        "labeledConversationsCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of conversations attached to the issue at this point in time."
        },
        "displayName": {
          "description": "Display name of the issue.",
          "type": "string"
        },
        "issue": {
          "type": "string",
          "description": "Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}"
        }
      },
      "description": "Aggregated statistics about an issue."
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats": {
      "description": "Statistics for IngestConversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats",
      "type": "object",
      "properties": {
        "processedObjectCount": {
          "description": "Output only. The number of objects processed during the ingest operation.",
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        },
        "successfulIngestCount": {
          "format": "int32",
          "description": "Output only. The number of new conversations added during this ingest operation.",
          "readOnly": true,
          "type": "integer"
        },
        "duplicatesSkippedCount": {
          "type": "integer",
          "description": "Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.",
          "readOnly": true,
          "format": "int32"
        },
        "failedIngestCount": {
          "description": "Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchData": {
      "properties": {
        "phraseMatcher": {
          "description": "The unique identifier (the resource name) of the phrase matcher.",
          "type": "string"
        },
        "displayName": {
          "description": "The human-readable name of the phrase matcher.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchData",
      "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match."
    },
    "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation": {
      "properties": {
        "silenceData": {
          "description": "Data specifying silence.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SilenceData"
        },
        "sentimentData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
          "description": "Data specifying sentiment."
        },
        "phraseMatchData": {
          "description": "Data specifying a phrase match.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData"
        },
        "issueMatchData": {
          "description": "Data specifying an issue match.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData"
        },
        "channelTag": {
          "format": "int32",
          "type": "integer",
          "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated."
        },
        "annotationEndBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        },
        "holdData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1HoldData",
          "description": "Data specifying a hold."
        },
        "entityMentionData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1EntityMentionData",
          "description": "Data specifying an entity mention."
        },
        "interruptionData": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1InterruptionData",
          "description": "Data specifying an interruption."
        },
        "annotationStartBoundary": {
          "description": "The boundary in the conversation where the annotation starts, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary"
        },
        "intentMatchData": {
          "description": "Data specifying an intent match.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IntentMatchData"
        }
      },
      "description": "A piece of metadata that applies to a window of a call.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1CallAnnotation"
    },
    "GoogleCloudContactcenterinsightsV1UploadConversationRequest": {
      "description": "Request to upload a conversation.",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the conversation."
        },
        "conversationId": {
          "description": "Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`",
          "type": "string"
        },
        "conversation": {
          "$ref": "GoogleCloudContactcenterinsightsV1Conversation",
          "description": "Required. The conversation resource to create."
        },
        "redactionConfig": {
          "description": "Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1UploadConversationRequest"
    },
    "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest": {
      "description": "The request to create an issue model.",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent resource of the issue model."
        },
        "issueModel": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModel",
          "description": "Required. The issue model to create."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1CreateIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1AnnotationBoundary": {
      "description": "A point in a conversation that marks the start or the end of an annotation.",
      "type": "object",
      "properties": {
        "transcriptIndex": {
          "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.",
          "type": "integer",
          "format": "int32"
        },
        "wordIndex": {
          "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
    },
    "GoogleCloudContactcenterinsightsV1alpha1GcsSource": {
      "type": "object",
      "description": "A Cloud Storage source of conversation data.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1GcsSource",
      "properties": {
        "audioUri": {
          "type": "string",
          "description": "Cloud Storage URI that points to a file that contains the conversation audio."
        },
        "transcriptUri": {
          "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.",
          "type": "string"
        }
      }
    },
    "GoogleLongrunningListOperationsResponse": {
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleCloudContactcenterinsightsV1DialogflowIntent": {
      "type": "object",
      "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.",
      "id": "GoogleCloudContactcenterinsightsV1DialogflowIntent",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the intent."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModel": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModel",
      "description": "The issue model resource.",
      "properties": {
        "name": {
          "description": "Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        },
        "trainingStats": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats",
          "description": "Output only. Immutable. The issue model's label statistics on its training data.",
          "readOnly": true
        },
        "inputDataConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig",
          "description": "Configs for the input data that used to create the issue model."
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the issue model was updated.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The representative name for the issue model."
        },
        "issueCount": {
          "readOnly": true,
          "description": "Output only. Number of issues in this issue model.",
          "type": "string",
          "format": "int64"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time at which this issue model was created.",
          "format": "google-datetime"
        },
        "state": {
          "enumDescriptions": [
            "Unspecified.",
            "Model is not deployed but is ready to deploy.",
            "Model is being deployed.",
            "Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.",
            "Model is being undeployed.",
            "Model is being deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING"
          ],
          "readOnly": true,
          "description": "Output only. State of the model.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1SentimentData": {
      "type": "object",
      "description": "The data for a sentiment annotation.",
      "id": "GoogleCloudContactcenterinsightsV1SentimentData",
      "properties": {
        "magnitude": {
          "type": "number",
          "format": "float",
          "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score."
        },
        "score": {
          "description": "The sentiment score between -1.0 (negative) and 1.0 (positive).",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1AnalysisResult": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnalysisResult",
      "description": "The result of an analysis.",
      "properties": {
        "callAnalysisMetadata": {
          "description": "Call-specific metadata created by the analysis.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata"
        },
        "endTime": {
          "type": "string",
          "description": "The time at which the analysis ended.",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent": {
      "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1Settings": {
      "properties": {
        "analysisConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig",
          "description": "Default analysis settings."
        },
        "pubsubNotificationSettings": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * \"all-triggers\": Notify each time any of the supported triggers occurs. * \"create-analysis\": Notify each time an analysis is created. * \"create-conversation\": Notify each time a conversation is created. * \"export-insights-data\": Notify each time an export is complete. * \"update-conversation\": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}",
          "type": "object"
        },
        "updateTime": {
          "description": "Output only. The time at which the settings were last updated.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "conversationTtl": {
          "description": "The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.",
          "format": "google-duration",
          "type": "string"
        },
        "languageCode": {
          "description": "A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to \"en-US\" if it is neither specified on the segment nor here.",
          "type": "string"
        },
        "redactionConfig": {
          "description": "Default DLP redaction resources to be applied while ingesting conversations.",
          "$ref": "GoogleCloudContactcenterinsightsV1RedactionConfig"
        },
        "name": {
          "description": "Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time at which the settings was created.",
          "readOnly": true,
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "The settings resource.",
      "id": "GoogleCloudContactcenterinsightsV1Settings"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript": {
      "properties": {
        "transcriptSegments": {
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment"
          },
          "description": "A list of sequential transcript segments that comprise the conversation.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "A message representing the transcript of a conversation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig": {
      "properties": {
        "agentId": {
          "type": "string",
          "description": "An opaque, user-specified string representing the human agent who handled the conversations."
        }
      },
      "type": "object",
      "description": "Configuration that applies to all conversations.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig"
    },
    "GoogleCloudContactcenterinsightsV1ListConversationsResponse": {
      "type": "object",
      "properties": {
        "conversations": {
          "type": "array",
          "description": "The conversations that match the request.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1Conversation"
          }
        },
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available.",
          "type": "string"
        }
      },
      "description": "The response of listing conversations.",
      "id": "GoogleCloudContactcenterinsightsV1ListConversationsResponse"
    },
    "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig": {
      "description": "DLP resources used for redaction while ingesting conversations.",
      "properties": {
        "inspectTemplate": {
          "type": "string",
          "description": "The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`"
        },
        "deidentifyTemplate": {
          "description": "The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata": {
      "description": "Metadata for a create analysis operation.",
      "properties": {
        "conversation": {
          "description": "Output only. The Conversation that this Analysis Operation belongs to.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "annotatorSelector": {
          "description": "Output only. The annotator selector used for the analysis (if any).",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
          "readOnly": true
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1CallAnnotation": {
      "id": "GoogleCloudContactcenterinsightsV1CallAnnotation",
      "type": "object",
      "properties": {
        "channelTag": {
          "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.",
          "format": "int32",
          "type": "integer"
        },
        "sentimentData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "Data specifying sentiment."
        },
        "annotationEndBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation ends, inclusive."
        },
        "annotationStartBoundary": {
          "description": "The boundary in the conversation where the annotation starts, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "holdData": {
          "description": "Data specifying a hold.",
          "$ref": "GoogleCloudContactcenterinsightsV1HoldData"
        },
        "issueMatchData": {
          "description": "Data specifying an issue match.",
          "$ref": "GoogleCloudContactcenterinsightsV1IssueMatchData"
        },
        "intentMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1IntentMatchData",
          "description": "Data specifying an intent match."
        },
        "interruptionData": {
          "description": "Data specifying an interruption.",
          "$ref": "GoogleCloudContactcenterinsightsV1InterruptionData"
        },
        "phraseMatchData": {
          "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchData",
          "description": "Data specifying a phrase match."
        },
        "entityMentionData": {
          "description": "Data specifying an entity mention.",
          "$ref": "GoogleCloudContactcenterinsightsV1EntityMentionData"
        },
        "silenceData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SilenceData",
          "description": "Data specifying silence."
        }
      },
      "description": "A piece of metadata that applies to a window of a call."
    },
    "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup": {
      "id": "GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup",
      "properties": {
        "phraseMatchRules": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1PhraseMatchRule"
          },
          "description": "A list of phrase match rules that are included in this group."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Must meet all phrase match rules or there is no match.",
            "If any of the phrase match rules are met, there is a match."
          ],
          "description": "Required. The type of this phrase match rule group.",
          "enum": [
            "PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED",
            "ALL_OF",
            "ANY_OF"
          ]
        }
      },
      "type": "object",
      "description": "A message representing a rule in the phrase matcher."
    },
    "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse",
      "type": "object",
      "description": "Response of querying an issue model's statistics.",
      "properties": {
        "currentStats": {
          "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats",
          "description": "The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ConversationParticipant": {
      "description": "The call participant speaking for a given utterance.",
      "properties": {
        "dialogflowParticipant": {
          "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
          "type": "string"
        },
        "role": {
          "enumDescriptions": [
            "Participant's role is not set.",
            "Participant is a human agent.",
            "Participant is an automated agent.",
            "Participant is an end user who conversed with the contact center.",
            "Participant is either a human or automated agent."
          ],
          "type": "string",
          "description": "The role of the participant.",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER",
            "ANY_AGENT"
          ]
        },
        "userId": {
          "type": "string",
          "description": "A user-specified ID representing the participant."
        },
        "obfuscatedExternalUserId": {
          "description": "Obfuscated user ID from Dialogflow.",
          "type": "string"
        },
        "dialogflowParticipantName": {
          "type": "string",
          "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ConversationParticipant",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IssueAssignment": {
      "type": "object",
      "description": "Information about the issue.",
      "id": "GoogleCloudContactcenterinsightsV1IssueAssignment",
      "properties": {
        "score": {
          "type": "number",
          "format": "double",
          "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1]."
        },
        "issue": {
          "description": "Resource name of the assigned issue.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata": {
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest",
          "description": "The original request for deletion."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata",
      "description": "Metadata for deleting an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData": {
      "properties": {
        "issueAssignment": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment",
          "description": "Information about the issue's assignment."
        }
      },
      "type": "object",
      "description": "The data for an issue match annotation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueMatchData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest": {
      "properties": {
        "name": {
          "description": "Required. The issue model to undeploy.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The request to undeploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest"
    },
    "GoogleCloudContactcenterinsightsV1CalculateStatsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1CalculateStatsResponse",
      "properties": {
        "conversationCount": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of conversations."
        },
        "averageDuration": {
          "description": "The average duration of all conversations. The average is calculated using only conversations that have a time duration.",
          "format": "google-duration",
          "type": "string"
        },
        "issueMatchesStats": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          },
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`",
          "type": "object"
        },
        "issueMatches": {
          "description": "A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.",
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        },
        "conversationCountTimeSeries": {
          "description": "A time series representing the count of conversations created over time that match that requested filter criteria.",
          "$ref": "GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries"
        },
        "smartHighlighterMatches": {
          "description": "A map associating each smart highlighter display name with its respective number of matches in the set of conversations.",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "type": "object"
        },
        "customHighlighterMatches": {
          "type": "object",
          "description": "A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        },
        "averageTurnCount": {
          "description": "The average number of turns per conversation.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "The response for calculating conversation statistics.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata": {
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest",
          "description": "The original request for undeployment."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "description": "Metadata for undeploying an issue model.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata"
    },
    "GoogleCloudContactcenterinsightsV1AnswerFeedback": {
      "description": "The feedback that the customer has about a certain answer in the conversation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1AnswerFeedback",
      "properties": {
        "correctnessLevel": {
          "type": "string",
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ],
          "description": "The correctness level of an answer.",
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ]
        },
        "clicked": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was clicked by the human agent."
        },
        "displayed": {
          "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1Analysis": {
      "description": "The analysis resource.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1Analysis",
      "properties": {
        "analysisResult": {
          "description": "Output only. The result of the analysis, which is populated when the analysis finishes.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnalysisResult"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes.",
          "readOnly": true,
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time at which the analysis was requested.",
          "format": "google-datetime"
        },
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata",
      "type": "object",
      "description": "The metadata for a bulk analyze conversations operation.",
      "properties": {
        "failedAnalysesCount": {
          "format": "int32",
          "description": "The number of requested analyses that have failed so far.",
          "type": "integer"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time the operation was created.",
          "type": "string"
        },
        "totalRequestedAnalysesCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request."
        },
        "request": {
          "description": "The original request for bulk analyze.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest"
        },
        "endTime": {
          "description": "The time the operation finished running.",
          "format": "google-datetime",
          "type": "string"
        },
        "completedAnalysesCount": {
          "description": "The number of requested analyses that have completed successfully so far.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource": {
      "description": "Configuration for Cloud Storage bucket sources.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource",
      "properties": {
        "bucketUri": {
          "description": "Required. The Cloud Storage bucket containing source objects.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IntentMatchData": {
      "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.",
      "type": "object",
      "properties": {
        "intentUniqueId": {
          "type": "string",
          "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1IntentMatchData"
    },
    "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata",
      "type": "object",
      "properties": {
        "endTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest",
          "description": "The original request for creation."
        }
      },
      "description": "Metadata for creating an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest": {
      "properties": {
        "bigQueryDestination": {
          "description": "Specified if sink is a BigQuery table.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination"
        },
        "filter": {
          "description": "A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.",
          "type": "string"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent resource to export data from."
        },
        "kmsKey": {
          "type": "string",
          "description": "A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}"
        },
        "writeDisposition": {
          "enum": [
            "WRITE_DISPOSITION_UNSPECIFIED",
            "WRITE_TRUNCATE",
            "WRITE_APPEND"
          ],
          "type": "string",
          "description": "Options for what to do if the destination table already exists.",
          "enumDescriptions": [
            "Write disposition is not specified. Defaults to WRITE_TRUNCATE.",
            "If the table already exists, BigQuery will overwrite the table data and use the schema from the load.",
            "If the table already exists, BigQuery will append data to the table."
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest",
      "description": "The request to export insights."
    },
    "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse": {
      "description": "The response to undeploy an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback": {
      "properties": {
        "displayed": {
          "type": "boolean",
          "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI."
        },
        "correctnessLevel": {
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ],
          "description": "The correctness level of an answer.",
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ],
          "type": "string"
        },
        "clicked": {
          "description": "Indicates whether an answer or item was clicked by the human agent.",
          "type": "boolean"
        }
      },
      "description": "The feedback that the customer has about a certain answer in the conversation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1Intent": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1Intent",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identifier of the intent.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The human-readable name of the intent."
        }
      },
      "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE."
    },
    "GoogleCloudContactcenterinsightsV1DialogflowInteractionData": {
      "description": "Dialogflow interaction data.",
      "id": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData",
      "properties": {
        "confidence": {
          "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float",
          "type": "number"
        },
        "dialogflowIntentId": {
          "type": "string",
          "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment",
      "description": "One channel of conversation-level sentiment data.",
      "properties": {
        "sentimentData": {
          "$ref": "GoogleCloudContactcenterinsightsV1SentimentData",
          "description": "Data specifying sentiment."
        },
        "channelTag": {
          "format": "int32",
          "description": "The channel of the audio that the data applies to.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1DialogflowSource": {
      "properties": {
        "dialogflowConversation": {
          "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "readOnly": true,
          "type": "string"
        },
        "audioUri": {
          "type": "string",
          "description": "Cloud Storage URI that points to a file that contains the conversation audio."
        }
      },
      "type": "object",
      "description": "A Dialogflow source of conversation data.",
      "id": "GoogleCloudContactcenterinsightsV1DialogflowSource"
    },
    "GoogleCloudContactcenterinsightsV1RuntimeAnnotation": {
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation",
      "description": "An annotation that was generated during the customer and agent interaction.",
      "properties": {
        "endBoundary": {
          "description": "The boundary in the conversation where the annotation ends, inclusive.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary"
        },
        "annotationId": {
          "type": "string",
          "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}"
        },
        "smartComposeSuggestion": {
          "description": "Agent Assist Smart Compose suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData"
        },
        "conversationSummarizationSuggestion": {
          "description": "Conversation summarization suggestion data.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData"
        },
        "smartReply": {
          "description": "Agent Assist Smart Reply data.",
          "$ref": "GoogleCloudContactcenterinsightsV1SmartReplyData"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which this annotation was created."
        },
        "articleSuggestion": {
          "$ref": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData",
          "description": "Agent Assist Article Suggestion data."
        },
        "answerFeedback": {
          "description": "The feedback that the customer has about the answer in `data`.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnswerFeedback"
        },
        "dialogflowInteraction": {
          "$ref": "GoogleCloudContactcenterinsightsV1DialogflowInteractionData",
          "description": "Dialogflow interaction data."
        },
        "faqAnswer": {
          "description": "Agent Assist FAQ answer data.",
          "$ref": "GoogleCloudContactcenterinsightsV1FaqAnswerData"
        },
        "startBoundary": {
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotationBoundary",
          "description": "The boundary in the conversation where the annotation starts, inclusive."
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest": {
      "properties": {
        "name": {
          "description": "Required. The issue model to deploy.",
          "type": "string"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest",
      "type": "object",
      "description": "The request to deploy an issue model."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats": {
      "properties": {
        "duplicatesSkippedCount": {
          "readOnly": true,
          "format": "int32",
          "description": "Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.",
          "type": "integer"
        },
        "successfulIngestCount": {
          "format": "int32",
          "readOnly": true,
          "description": "Output only. The number of new conversations added during this ingest operation.",
          "type": "integer"
        },
        "failedIngestCount": {
          "readOnly": true,
          "description": "Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.",
          "format": "int32",
          "type": "integer"
        },
        "processedObjectCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Output only. The number of objects processed during the ingest operation."
        }
      },
      "description": "Statistics for IngestConversations operation.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource": {
      "description": "Configuration for Cloud Storage bucket sources.",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource",
      "properties": {
        "bucketUri": {
          "description": "Required. The Cloud Storage bucket containing source objects.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig": {
      "type": "object",
      "description": "Configuration for summarization.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig",
      "properties": {
        "summarizationModel": {
          "enumDescriptions": [
            "Unspecified summarization model.",
            "The Insights baseline model."
          ],
          "type": "string",
          "description": "Default summarization model to be used.",
          "enum": [
            "SUMMARIZATION_MODEL_UNSPECIFIED",
            "BASELINE_MODEL"
          ]
        },
        "conversationProfile": {
          "type": "string",
          "description": "Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ArticleSuggestionData": {
      "properties": {
        "uri": {
          "description": "Article URI.",
          "type": "string"
        },
        "metadata": {
          "description": "Map that contains metadata about the Article Suggestion and the document that it originates from.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "queryRecord": {
          "type": "string",
          "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}"
        },
        "title": {
          "description": "Article title.",
          "type": "string"
        },
        "confidenceScore": {
          "format": "float",
          "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        },
        "source": {
          "type": "string",
          "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1ArticleSuggestionData",
      "type": "object",
      "description": "Agent Assist Article Suggestion data."
    },
    "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData": {
      "properties": {
        "displayName": {
          "description": "The human-readable name of the phrase matcher.",
          "type": "string"
        },
        "phraseMatcher": {
          "type": "string",
          "description": "The unique identifier (the resource name) of the phrase matcher."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData",
      "type": "object",
      "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match."
    },
    "GoogleCloudContactcenterinsightsV1Analysis": {
      "type": "object",
      "description": "The analysis resource.",
      "id": "GoogleCloudContactcenterinsightsV1Analysis",
      "properties": {
        "analysisResult": {
          "readOnly": true,
          "description": "Output only. The result of the analysis, which is populated when the analysis finishes.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnalysisResult"
        },
        "annotatorSelector": {
          "description": "To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.",
          "$ref": "GoogleCloudContactcenterinsightsV1AnnotatorSelector"
        },
        "createTime": {
          "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}"
        },
        "requestTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which the analysis was requested.",
          "type": "string"
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination": {
      "properties": {
        "projectId": {
          "type": "string",
          "description": "A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used."
        },
        "dataset": {
          "type": "string",
          "description": "Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error."
        },
        "table": {
          "type": "string",
          "description": "The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error."
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination",
      "description": "A BigQuery Table Reference."
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest",
      "type": "object",
      "properties": {
        "gcsSource": {
          "description": "A cloud storage bucket source.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource"
        },
        "conversationConfig": {
          "description": "Configuration that applies to all conversations.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig"
        },
        "parent": {
          "description": "Required. The parent resource for new conversations.",
          "type": "string"
        },
        "transcriptObjectConfig": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig",
          "description": "Configuration for when `source` contains conversation transcripts."
        }
      },
      "description": "The request to ingest conversations."
    },
    "GoogleCloudContactcenterinsightsV1IssueModelLabelStats": {
      "properties": {
        "analyzedConversationsCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of conversations the issue model has analyzed at this point in time."
        },
        "issueStats": {
          "description": "Statistics on each issue. Key is the issue's resource name.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats"
          }
        },
        "unclassifiedConversationsCount": {
          "type": "string",
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time.",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "Aggregated statistics about an issue model.",
      "id": "GoogleCloudContactcenterinsightsV1IssueModelLabelStats"
    },
    "GoogleLongrunningOperation": {
      "id": "GoogleLongrunningOperation",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata",
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest",
          "description": "The original request for deletion."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created."
        }
      },
      "description": "Metadata for deleting an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ConversationCallMetadata": {
      "id": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata",
      "type": "object",
      "properties": {
        "customerChannel": {
          "type": "integer",
          "format": "int32",
          "description": "The audio channel that contains the customer."
        },
        "agentChannel": {
          "type": "integer",
          "description": "The audio channel that contains the agent.",
          "format": "int32"
        }
      },
      "description": "Call-specific metadata."
    },
    "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest": {
      "type": "object",
      "properties": {
        "conversation": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1Conversation",
          "description": "Required. The conversation resource to create."
        },
        "parent": {
          "description": "Required. The parent resource of the conversation.",
          "type": "string"
        },
        "redactionConfig": {
          "description": "Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1RedactionConfig"
        },
        "conversationId": {
          "type": "string",
          "description": "Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`"
        }
      },
      "description": "Request to upload a conversation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata": {
      "properties": {
        "smartReplyAllowlistCovered": {
          "description": "Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.",
          "type": "boolean"
        }
      },
      "description": "Metadata from Dialogflow relating to the current transcript segment.",
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata": {
      "properties": {
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        },
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest",
          "description": "The original request for undeployment."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata",
      "description": "Metadata for undeploying an issue model.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1Conversation": {
      "description": "The conversation resource.",
      "properties": {
        "duration": {
          "readOnly": true,
          "type": "string",
          "format": "google-duration",
          "description": "Output only. The duration of the conversation."
        },
        "obfuscatedUserId": {
          "description": "Obfuscated user ID which the customer sent to us.",
          "type": "string"
        },
        "dialogflowIntents": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent"
          },
          "type": "object",
          "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}",
          "readOnly": true
        },
        "languageCode": {
          "type": "string",
          "description": "A user-specified language code for the conversation."
        },
        "callMetadata": {
          "description": "Call-specific metadata.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata"
        },
        "latestAnalysis": {
          "description": "Output only. The conversation's latest analysis, if one exists.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1Analysis"
        },
        "expireTime": {
          "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "The time at which the conversation started.",
          "type": "string",
          "format": "google-datetime"
        },
        "transcript": {
          "description": "Output only. The conversation transcript.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript"
        },
        "turnCount": {
          "readOnly": true,
          "description": "Output only. The number of turns in the conversation.",
          "format": "int32",
          "type": "integer"
        },
        "createTime": {
          "description": "Output only. The time at which the conversation was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}"
        },
        "labels": {
          "type": "object",
          "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "latestSummary": {
          "description": "Output only. Latest summary of the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData",
          "readOnly": true
        },
        "updateTime": {
          "description": "Output only. The most recent time at which the conversation was updated.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "dataSource": {
          "description": "The source of the audio and transcription for the conversation.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource"
        },
        "ttl": {
          "type": "string",
          "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.",
          "format": "google-duration"
        },
        "runtimeAnnotations": {
          "description": "Output only. The annotations that were generated during the customer and agent interaction.",
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation"
          },
          "type": "array"
        },
        "agentId": {
          "type": "string",
          "description": "An opaque, user-specified string representing the human agent who handled the conversation."
        },
        "medium": {
          "type": "string",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "description": "Immutable. The conversation medium, if unspecified will default to PHONE_CALL."
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1Conversation",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse": {
      "properties": {},
      "id": "GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse",
      "description": "Response for an export insights operation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata": {
      "properties": {
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "partialErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. Partial errors during ingest operation that might cause the operation output to be incomplete."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "ingestConversationsStats": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats",
          "readOnly": true,
          "description": "Output only. Statistics for IngestConversations operation."
        },
        "request": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest",
          "description": "Output only. The original request for ingest."
        }
      },
      "description": "The metadata for an IngestConversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats": {
      "description": "Aggregated statistics about an issue model.",
      "properties": {
        "unclassifiedConversationsCount": {
          "type": "string",
          "description": "Number of analyzed conversations for which no issue was applicable at this point in time.",
          "format": "int64"
        },
        "analyzedConversationsCount": {
          "description": "Number of conversations the issue model has analyzed at this point in time.",
          "format": "int64",
          "type": "string"
        },
        "issueStats": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats"
          },
          "description": "Statistics on each issue. Key is the issue's resource name.",
          "type": "object"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig": {
      "description": "Configuration for processing transcript objects.",
      "properties": {
        "medium": {
          "type": "string",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "description": "Required. The medium transcript objects represent.",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig"
    },
    "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse": {
      "id": "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse",
      "properties": {
        "failedAnalysisCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of failed analyses."
        },
        "successfulAnalysisCount": {
          "description": "Count of successful analyses.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "The response for a bulk analyze conversations operation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1IngestConversationsMetadata": {
      "properties": {
        "request": {
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsRequest",
          "readOnly": true,
          "description": "Output only. The original request for ingest."
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "ingestConversationsStats": {
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats",
          "description": "Output only. Statistics for IngestConversations operation."
        },
        "partialErrors": {
          "readOnly": true,
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Output only. Partial errors during ingest operation that might cause the operation output to be incomplete."
        }
      },
      "type": "object",
      "description": "The metadata for an IngestConversations operation.",
      "id": "GoogleCloudContactcenterinsightsV1IngestConversationsMetadata"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig",
      "description": "Configs for the input data used to create the issue model.",
      "type": "object",
      "properties": {
        "filter": {
          "type": "string",
          "description": "A filter to reduce the conversations used for training the model to a specific subset."
        },
        "trainingConversationsCount": {
          "description": "Output only. Number of conversations used in training. Output only.",
          "readOnly": true,
          "format": "int64",
          "type": "string"
        },
        "medium": {
          "type": "string",
          "description": "Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.",
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ]
        }
      }
    },
    "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector": {
      "description": "Selector of all available annotators and phrase matchers to run.",
      "properties": {
        "runEntityAnnotator": {
          "description": "Whether to run the entity annotator.",
          "type": "boolean"
        },
        "phraseMatchers": {
          "description": "The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "runSilenceAnnotator": {
          "type": "boolean",
          "description": "Whether to run the silence annotator."
        },
        "runPhraseMatcherAnnotator": {
          "type": "boolean",
          "description": "Whether to run the active phrase matcher annotator(s)."
        },
        "runSentimentAnnotator": {
          "description": "Whether to run the sentiment annotator.",
          "type": "boolean"
        },
        "issueModels": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference."
        },
        "runInterruptionAnnotator": {
          "description": "Whether to run the interruption annotator.",
          "type": "boolean"
        },
        "runIntentAnnotator": {
          "type": "boolean",
          "description": "Whether to run the intent annotator."
        },
        "summarizationConfig": {
          "description": "Configuration for the summarization annotator.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig"
        },
        "runIssueModelAnnotator": {
          "type": "boolean",
          "description": "Whether to run the issue model annotator. A model should have already been deployed for this to take effect."
        },
        "runSummarizationAnnotator": {
          "description": "Whether to run the summarization annotator.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment": {
      "properties": {
        "channelTag": {
          "type": "integer",
          "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.",
          "format": "int32"
        },
        "sentiment": {
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1SentimentData",
          "description": "The sentiment for this transcript segment."
        },
        "dialogflowSegmentMetadata": {
          "description": "CCAI metadata relating to the current transcript segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata"
        },
        "text": {
          "type": "string",
          "description": "The text of this segment."
        },
        "languageCode": {
          "type": "string",
          "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\"."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset."
        },
        "segmentParticipant": {
          "description": "The participant of this segment.",
          "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant"
        },
        "words": {
          "type": "array",
          "description": "A list of the word-specific information for each word in the segment.",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo"
          }
        },
        "messageTime": {
          "type": "string",
          "description": "The time that the message occurred, if provided.",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment",
      "description": "A segment of a full transcript."
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult": {
      "id": "GoogleCloudContactcenterinsightsV1alpha1IssueModelResult",
      "properties": {
        "issueModel": {
          "description": "Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
          "type": "string"
        },
        "issues": {
          "description": "All the matched issues.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1alpha1IssueAssignment"
          }
        }
      },
      "description": "Issue Modeling result on a conversation.",
      "type": "object"
    },
    "GoogleCloudContactcenterinsightsV1Intent": {
      "id": "GoogleCloudContactcenterinsightsV1Intent",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The human-readable name of the intent.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the intent."
        }
      },
      "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE."
    },
    "GoogleCloudContactcenterinsightsV1Conversation": {
      "properties": {
        "medium": {
          "description": "Immutable. The conversation medium, if unspecified will default to PHONE_CALL.",
          "enumDescriptions": [
            "Default value, if unspecified will default to PHONE_CALL.",
            "The format for conversations that took place over the phone.",
            "The format for conversations that took place over chat."
          ],
          "enum": [
            "MEDIUM_UNSPECIFIED",
            "PHONE_CALL",
            "CHAT"
          ],
          "type": "string"
        },
        "expireTime": {
          "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.",
          "format": "google-datetime",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry."
        },
        "latestSummary": {
          "description": "Output only. Latest summary of the conversation.",
          "readOnly": true,
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData"
        },
        "latestAnalysis": {
          "$ref": "GoogleCloudContactcenterinsightsV1Analysis",
          "description": "Output only. The conversation's latest analysis, if one exists.",
          "readOnly": true
        },
        "startTime": {
          "format": "google-datetime",
          "description": "The time at which the conversation started.",
          "type": "string"
        },
        "ttl": {
          "format": "google-duration",
          "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.",
          "type": "string"
        },
        "runtimeAnnotations": {
          "description": "Output only. The annotations that were generated during the customer and agent interaction.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudContactcenterinsightsV1RuntimeAnnotation"
          }
        },
        "obfuscatedUserId": {
          "description": "Obfuscated user ID which the customer sent to us.",
          "type": "string"
        },
        "callMetadata": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationCallMetadata",
          "description": "Call-specific metadata."
        },
        "dataSource": {
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationDataSource",
          "description": "The source of the audio and transcription for the conversation."
        },
        "dialogflowIntents": {
          "additionalProperties": {
            "$ref": "GoogleCloudContactcenterinsightsV1DialogflowIntent"
          },
          "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}",
          "type": "object",
          "readOnly": true
        },
        "languageCode": {
          "type": "string",
          "description": "A user-specified language code for the conversation."
        },
        "name": {
          "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time at which the conversation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The most recent time at which the conversation was updated.",
          "format": "google-datetime",
          "readOnly": true
        },
        "duration": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The duration of the conversation.",
          "format": "google-duration"
        },
        "transcript": {
          "readOnly": true,
          "description": "Output only. The conversation transcript.",
          "$ref": "GoogleCloudContactcenterinsightsV1ConversationTranscript"
        },
        "turnCount": {
          "readOnly": true,
          "description": "Output only. The number of turns in the conversation.",
          "format": "int32",
          "type": "integer"
        },
        "agentId": {
          "description": "An opaque, user-specified string representing the human agent who handled the conversation.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The conversation resource.",
      "id": "GoogleCloudContactcenterinsightsV1Conversation"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "protocol": "rest",
  "basePath": "",
  "ownerName": "Google",
  "ownerDomain": "google.com",
  "parameters": {
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "alt": {
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    }
  },
  "documentationLink": "https://cloud.google.com/contact-center/insights/docs",
  "description": "",
  "kind": "discovery#restDescription",
  "fullyEncodeReservedExpansion": true,
  "batchPath": "batch"
}

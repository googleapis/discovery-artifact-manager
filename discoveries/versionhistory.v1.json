{
  "version": "v1",
  "rootUrl": "https://versionhistory.googleapis.com/",
  "version_module": true,
  "basePath": "",
  "protocol": "rest",
  "batchPath": "batch",
  "name": "versionhistory",
  "discoveryVersion": "v1",
  "revision": "20211011",
  "title": "Version History API",
  "documentationLink": "https://developers.chrome.com/versionhistory",
  "ownerDomain": "google.com",
  "schemas": {
    "ListVersionsResponse": {
      "description": "Response message for ListVersions.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "versions": {
          "items": {
            "$ref": "Version"
          },
          "description": "The list of versions.",
          "type": "array"
        }
      },
      "id": "ListVersionsResponse"
    },
    "Release": {
      "id": "Release",
      "description": "A Release is owned by a Version. A Release contains information about the release(s) of its parent version. This includes when the release began and ended, as well as what percentage it was released at. If the version is released again, or if the serving percentage changes, it will create another release under the version.",
      "properties": {
        "serving": {
          "$ref": "Interval",
          "description": "Timestamp interval of when the release was live. If end_time is unspecified, the release is currently live."
        },
        "name": {
          "type": "string",
          "description": "Release name. Format is \"{product}/platforms/{platform}/channels/{channel}/versions/{version}/releases/{release}\""
        },
        "fraction": {
          "type": "number",
          "format": "double",
          "description": "Rollout fraction. This fraction indicates the fraction of people that should receive this version in this release. If the fraction is not specified in ReleaseManager, the API will assume fraction is 1."
        },
        "version": {
          "description": "String containing just the version number. e.g. \"84.0.4147.38\"",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListReleasesResponse": {
      "type": "object",
      "id": "ListReleasesResponse",
      "properties": {
        "releases": {
          "type": "array",
          "description": "The list of releases.",
          "items": {
            "$ref": "Release"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "description": "Response message for ListReleases."
    },
    "Version": {
      "description": "Each Version is owned by a Channel. A Version only displays the Version number (e.g. 84.0.4147.38). A Version owns a collection of releases.",
      "id": "Version",
      "properties": {
        "name": {
          "type": "string",
          "description": "Version name. Format is \"{product}/platforms/{platform}/channels/{channel}/versions/{version}\" e.g. \"chrome/platforms/win/channels/beta/versions/84.0.4147.38\""
        },
        "version": {
          "type": "string",
          "description": "String containing just the version number. e.g. \"84.0.4147.38\""
        }
      },
      "type": "object"
    },
    "ListPlatformsResponse": {
      "id": "ListPlatformsResponse",
      "type": "object",
      "properties": {
        "platforms": {
          "items": {
            "$ref": "Platform"
          },
          "type": "array",
          "description": "The list of platforms."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "description": "Response message for ListPlatforms."
    },
    "Interval": {
      "description": "Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.",
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Optional. Exclusive end of the interval. If specified, a Timestamp matching this interval will have to be before the end."
        },
        "startTime": {
          "description": "Optional. Inclusive start of the interval. If specified, a Timestamp matching this interval will have to be the same or after the start.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "Interval"
    },
    "Channel": {
      "properties": {
        "channelType": {
          "enum": [
            "CHANNEL_TYPE_UNSPECIFIED",
            "STABLE",
            "BETA",
            "DEV",
            "CANARY",
            "CANARY_ASAN",
            "ALL",
            "EXTENDED"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "Type of channel."
        },
        "name": {
          "type": "string",
          "description": "Channel name. Format is \"{product}/platforms/{platform}/channels/{channel}\""
        }
      },
      "description": "Each Channel is owned by a Platform and owns a collection of versions. Possible Channels are listed in the Channel enum below. Not all Channels are available for every Platform (e.g. CANARY does not exist for LINUX).",
      "id": "Channel",
      "type": "object"
    },
    "ListChannelsResponse": {
      "id": "ListChannelsResponse",
      "properties": {
        "channels": {
          "items": {
            "$ref": "Channel"
          },
          "type": "array",
          "description": "The list of channels."
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "description": "Response message for ListChannels.",
      "type": "object"
    },
    "Platform": {
      "properties": {
        "platformType": {
          "type": "string",
          "enum": [
            "PLATFORM_TYPE_UNSPECIFIED",
            "WIN",
            "WIN64",
            "MAC",
            "LINUX",
            "ANDROID",
            "WEBVIEW",
            "IOS",
            "ALL",
            "MAC_ARM64",
            "LACROS",
            "LACROS_ARM32"
          ],
          "description": "Type of platform.",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "name": {
          "type": "string",
          "description": "Platform name. Format is \"{product}/platforms/{platform}\""
        }
      },
      "description": "Each Platform is owned by a Product and owns a collection of channels. Available platforms are listed in Platform enum below. Not all Channels are available for every Platform (e.g. CANARY does not exist for LINUX).",
      "type": "object",
      "id": "Platform"
    }
  },
  "resources": {
    "platforms": {
      "resources": {
        "channels": {
          "methods": {
            "list": {
              "response": {
                "$ref": "ListChannelsResponse"
              },
              "flatPath": "v1/{v1Id}/platforms/{platformsId}/channels",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "Optional. A page token, received from a previous `ListChannels` call. Provide this to retrieve the subsequent page.",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Optional. Optional limit on the number of channels to include in the response. If unspecified, the server will pick an appropriate default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "parent": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^[^/]+/platforms/[^/]+$",
                  "description": "Required. The platform, which owns this collection of channels. Format: {product}/platforms/{platform}"
                }
              },
              "path": "v1/{+parent}/channels",
              "id": "versionhistory.platforms.channels.list",
              "description": "Returns list of channels that are available for a given platform."
            }
          },
          "resources": {
            "versions": {
              "resources": {
                "releases": {
                  "methods": {
                    "list": {
                      "path": "v1/{+parent}/releases",
                      "httpMethod": "GET",
                      "id": "versionhistory.platforms.channels.versions.releases.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListReleasesResponse"
                      },
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. A page token, received from a previous `ListReleases` call. Provide this to retrieve the subsequent page."
                        },
                        "orderBy": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Ordering string. Valid order_by strings are \"version\", \"name\", \"starttime\", \"endtime\", \"platform\", \"channel\", and \"fraction\". Optionally, you can append \"desc\" or \"asc\" to specify the sorting order. Multiple order_by strings can be used in a comma separated list. Ordering by channel will sort by distance from the stable channel (not alphabetically). A list of channels sorted in this order is: stable, beta, dev, canary, and canary_asan. Sorting by name may cause unexpected behaviour as it is a naive string sort. For example, 1.0.0.8 will be before 1.0.0.10 in descending order. If order_by is not specified the response will be sorted by starttime in descending order. Ex) \"...?order_by=starttime asc\" Ex) \"...?order_by=platform desc, channel, startime desc\""
                        },
                        "parent": {
                          "type": "string",
                          "description": "Required. The version, which owns this collection of releases. Format: {product}/platforms/{platform}/channels/{channel}/versions/{version}",
                          "location": "path",
                          "pattern": "^[^/]+/platforms/[^/]+/channels/[^/]+/versions/[^/]+$",
                          "required": true
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "description": "Optional. Optional limit on the number of releases to include in the response. If unspecified, the server will pick an appropriate default.",
                          "type": "integer"
                        },
                        "filter": {
                          "description": "Optional. Filter string. Format is a comma separated list of All comma separated filter clauses are conjoined with a logical \"and\". Valid field_names are \"version\", \"name\", \"platform\", \"channel\", \"fraction\" \"starttime\", and \"endtime\". Valid operators are \"\u003c\", \"\u003c=\", \"=\", \"\u003e=\", and \"\u003e\". Channel comparison is done by distance from stable. must be a valid channel when filtering by channel. Ex) stable \u003c beta, beta \u003c dev, canary \u003c canary_asan. Version comparison is done numerically. Ex) 1.0.0.8 \u003c 1.0.0.10. If version is not entirely written, the version will be appended with 0 for the missing fields. Ex) version \u003e 80 becoms version \u003e 80.0.0.0 When filtering by starttime or endtime, string must be in RFC 3339 date string format. Name and platform are filtered by string comparison. Ex) \"...?filter=channel\u003c=beta, version \u003e= 80 Ex) \"...?filter=version \u003e 80, version \u003c 81 Ex) \"...?filter=starttime\u003e2020-01-01T00:00:00Z",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "description": "Returns list of releases of the given version.",
                      "flatPath": "v1/{v1Id}/platforms/{platformsId}/channels/{channelsId}/versions/{versionsId}/releases"
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "path": "v1/{+parent}/versions",
                  "flatPath": "v1/{v1Id}/platforms/{platformsId}/channels/{channelsId}/versions",
                  "response": {
                    "$ref": "ListVersionsResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A page token, received from a previous `ListVersions` call. Provide this to retrieve the subsequent page."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Filter string. Format is a comma separated list of All comma separated filter clauses are conjoined with a logical \"and\". Valid field_names are \"version\", \"name\", \"platform\", and \"channel\". Valid operators are \"\u003c\", \"\u003c=\", \"=\", \"\u003e=\", and \"\u003e\". Channel comparison is done by distance from stable. Ex) stable \u003c beta, beta \u003c dev, canary \u003c canary_asan. Version comparison is done numerically. If version is not entirely written, the version will be appended with 0 in missing fields. Ex) version \u003e 80 becoms version \u003e 80.0.0.0 Name and platform are filtered by string comparison. Ex) \"...?filter=channel\u003c=beta, version \u003e= 80 Ex) \"...?filter=version \u003e 80, version \u003c 81"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Ordering string. Valid order_by strings are \"version\", \"name\", \"platform\", and \"channel\". Optionally, you can append \" desc\" or \" asc\" to specify the sorting order. Multiple order_by strings can be used in a comma separated list. Ordering by channel will sort by distance from the stable channel (not alphabetically). A list of channels sorted in this order is: stable, beta, dev, canary, and canary_asan. Sorting by name may cause unexpected behaviour as it is a naive string sort. For example, 1.0.0.8 will be before 1.0.0.10 in descending order. If order_by is not specified the response will be sorted by version in descending order. Ex) \"...?order_by=version asc\" Ex) \"...?order_by=platform desc, channel, version\""
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^[^/]+/platforms/[^/]+/channels/[^/]+$",
                      "location": "path",
                      "description": "Required. The channel, which owns this collection of versions. Format: {product}/platforms/{platform}/channels/{channel}"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Optional. Optional limit on the number of versions to include in the response. If unspecified, the server will pick an appropriate default.",
                      "location": "query",
                      "format": "int32"
                    }
                  },
                  "id": "versionhistory.platforms.channels.versions.list",
                  "description": "Returns list of version for the given platform/channel.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            }
          }
        }
      },
      "methods": {
        "list": {
          "parameterOrder": [
            "parent"
          ],
          "httpMethod": "GET",
          "flatPath": "v1/{v1Id}/platforms",
          "path": "v1/{+parent}/platforms",
          "description": "Returns list of platforms that are available for a given product. The resource \"product\" has no resource name in its name.",
          "id": "versionhistory.platforms.list",
          "parameters": {
            "parent": {
              "pattern": "^[^/]+$",
              "description": "Required. The product, which owns this collection of platforms. Format: {product}",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "pageSize": {
              "format": "int32",
              "location": "query",
              "description": "Optional. Optional limit on the number of channels to include in the response. If unspecified, the server will pick an appropriate default.",
              "type": "integer"
            },
            "pageToken": {
              "description": "Optional. A page token, received from a previous `ListChannels` call. Provide this to retrieve the subsequent page.",
              "location": "query",
              "type": "string"
            }
          },
          "response": {
            "$ref": "ListPlatformsResponse"
          }
        }
      }
    }
  },
  "canonicalName": "Version History",
  "baseUrl": "https://versionhistory.googleapis.com/",
  "servicePath": "",
  "id": "versionhistory:v1",
  "fullyEncodeReservedExpansion": true,
  "kind": "discovery#restDescription",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "parameters": {
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query",
      "default": "true"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "alt": {
      "default": "json",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    }
  },
  "mtlsRootUrl": "https://versionhistory.mtls.googleapis.com/",
  "ownerName": "Google",
  "description": "Version History API - Prod"
}

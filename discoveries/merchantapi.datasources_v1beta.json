{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/content": {
          "description": "Manage your product listings and accounts for Google Shopping"
        }
      }
    }
  },
  "rootUrl": "https://merchantapi.googleapis.com/",
  "discoveryVersion": "v1",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "name": "merchantapi",
  "version": "datasources_v1beta",
  "fullyEncodeReservedExpansion": true,
  "ownerDomain": "google.com",
  "resources": {
    "accounts": {
      "resources": {
        "dataSources": {
          "methods": {
            "get": {
              "id": "merchantapi.accounts.dataSources.get",
              "path": "datasources/v1beta/{+name}",
              "flatPath": "datasources/v1beta/accounts/{accountsId}/dataSources/{dataSourcesId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. The name of the data source to retrieve. Format: `accounts/{account}/dataSources/{datasource}`",
                  "pattern": "^accounts/[^/]+/dataSources/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "DataSource"
              },
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "description": "Retrieves the data source configuration for the given account."
            },
            "list": {
              "id": "merchantapi.accounts.dataSources.list",
              "path": "datasources/v1beta/{+parent}/dataSources",
              "flatPath": "datasources/v1beta/accounts/{accountsId}/dataSources",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "Required. The account to list data sources for. Format: `accounts/{account}`",
                  "pattern": "^accounts/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "pageSize": {
                  "description": "Optional. The maximum number of data sources to return. The service may return fewer than this value. The maximum value is 1000; values above 1000 will be coerced to 1000. If unspecified, the maximum number of data sources will be returned.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Optional. A page token, received from a previous `ListDataSources` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDataSources` must match the call that provided the page token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListDataSourcesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "description": "Lists the configurations for data sources for the given account."
            },
            "create": {
              "id": "merchantapi.accounts.dataSources.create",
              "path": "datasources/v1beta/{+parent}/dataSources",
              "flatPath": "datasources/v1beta/accounts/{accountsId}/dataSources",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The account where this data source will be created. Format: `accounts/{account}`",
                  "pattern": "^accounts/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "DataSource"
              },
              "response": {
                "$ref": "DataSource"
              },
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "description": "Creates the new data source configuration for the given account."
            },
            "patch": {
              "id": "merchantapi.accounts.dataSources.patch",
              "path": "datasources/v1beta/{+name}",
              "flatPath": "datasources/v1beta/accounts/{accountsId}/dataSources/{dataSourcesId}",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "Identifier. The name of the data source. Format: `{datasource.name=accounts/{account}/dataSources/{datasource}}`",
                  "pattern": "^accounts/[^/]+/dataSources/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "updateMask": {
                  "description": "Required. The list of data source fields to be updated. Fields specified in the update mask without a value specified in the body will be deleted from the data source. Providing special \"*\" value for full data source replacement is not supported.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "DataSource"
              },
              "response": {
                "$ref": "DataSource"
              },
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "description": "Updates the existing data source configuration. The fields that are set in the update mask but not provided in the resource will be deleted."
            },
            "delete": {
              "id": "merchantapi.accounts.dataSources.delete",
              "path": "datasources/v1beta/{+name}",
              "flatPath": "datasources/v1beta/accounts/{accountsId}/dataSources/{dataSourcesId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "Required. The name of the data source to delete. Format: `accounts/{account}/dataSources/{datasource}`",
                  "pattern": "^accounts/[^/]+/dataSources/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "description": "Deletes a data source from your Merchant Center account."
            },
            "fetch": {
              "id": "merchantapi.accounts.dataSources.fetch",
              "path": "datasources/v1beta/{+name}:fetch",
              "flatPath": "datasources/v1beta/accounts/{accountsId}/dataSources/{dataSourcesId}:fetch",
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "description": "Required. The name of the data source resource to fetch. Format: `accounts/{account}/dataSources/{datasource}`",
                  "pattern": "^accounts/[^/]+/dataSources/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "FetchDataSourceRequest"
              },
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "description": "Performs the data fetch immediately (even outside fetch schedule) on a data source from your Merchant Center Account. If you need to call this method more than once per day, you should use the Products service to update your product data instead. This method only works on data sources with a file input set."
            }
          }
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "mtlsRootUrl": "https://merchantapi.mtls.googleapis.com/",
  "version_module": true,
  "batchPath": "batch",
  "protocol": "rest",
  "title": "Merchant API",
  "id": "merchantapi:datasources_v1beta",
  "revision": "20240611",
  "basePath": "",
  "servicePath": "",
  "documentationLink": "https://developers.devsite.corp.google.com/merchant/api",
  "schemas": {
    "DataSource": {
      "id": "DataSource",
      "description": "The [data source](https://support.google.com/merchants/answer/7439058) for the Merchant Center account.",
      "type": "object",
      "properties": {
        "primaryProductDataSource": {
          "description": "Required. The [primary data source](https://support.google.com/merchants/answer/7439058) for local and online products.",
          "$ref": "PrimaryProductDataSource"
        },
        "supplementalProductDataSource": {
          "description": "Required. The [supplemental data source](https://support.google.com/merchants/answer/7439058) for local and online products.",
          "$ref": "SupplementalProductDataSource"
        },
        "localInventoryDataSource": {
          "description": "Required. The [local inventory](https://support.google.com/merchants/answer/7023001) data source.",
          "$ref": "LocalInventoryDataSource"
        },
        "regionalInventoryDataSource": {
          "description": "Required. The [regional inventory](https://support.google.com/merchants/answer/7439058) data source.",
          "$ref": "RegionalInventoryDataSource"
        },
        "promotionDataSource": {
          "description": "Required. The [promotion](https://support.google.com/merchants/answer/2906014) data source.",
          "$ref": "PromotionDataSource"
        },
        "name": {
          "description": "Identifier. The name of the data source. Format: `{datasource.name=accounts/{account}/dataSources/{datasource}}`",
          "type": "string"
        },
        "dataSourceId": {
          "description": "Output only. The data source id.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "displayName": {
          "description": "Required. The displayed data source name in the Merchant Center UI.",
          "type": "string"
        },
        "input": {
          "description": "Output only. Determines the type of input to the data source. Based on the input some settings might not work. Only generic data sources can be created through the API.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Input unspecified.",
            "Represents data sources for which the data is primarily provided through the API.",
            "Represents data sources for which the data is primarily provided through file input. Data can still be provided through the API.",
            "The data source for products added directly in Merchant Center. This type of data source can not be created or updated through this API, only by Merchant Center UI. This type of data source is read only.",
            "This is also known as [Automated feeds](https://support.google.com/merchants/answer/12158480) used to automatically build your product data. This type of data source can be enabled or disabled through the Accounts bundle."
          ],
          "enum": [
            "INPUT_UNSPECIFIED",
            "API",
            "FILE",
            "UI",
            "AUTOFEED"
          ]
        },
        "fileInput": {
          "description": "Optional. The field is used only when data is managed through a file.",
          "$ref": "FileInput"
        }
      }
    },
    "PrimaryProductDataSource": {
      "id": "PrimaryProductDataSource",
      "description": "The primary data source for local and online products.",
      "type": "object",
      "properties": {
        "channel": {
          "description": "Required. Immutable. Specifies the type of data source channel.",
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Online product.",
            "Local product.",
            "Unified data source for both local and online products."
          ],
          "enum": [
            "CHANNEL_UNSPECIFIED",
            "ONLINE_PRODUCTS",
            "LOCAL_PRODUCTS",
            "PRODUCTS"
          ]
        },
        "feedLabel": {
          "description": "Optional. Immutable. The feed label that is specified on the data source level. Must be less than or equal to 20 uppercase letters (A-Z), numbers (0-9), and dashes (-). See also [migration to feed labels](https://developers.google.com/shopping-content/guides/products/feed-labels). `feedLabel` and `contentLanguage` must be either both set or unset for data sources with product content type. They must be set for data sources with a file input. If set, the data source will only accept products matching this combination. If unset, the data source will accept products without that restriction.",
          "type": "string"
        },
        "contentLanguage": {
          "description": "Optional. Immutable. The two-letter ISO 639-1 language of the items in the data source. `feedLabel` and `contentLanguage` must be either both set or unset. The fields can only be unset for data sources without file input. If set, the data source will only accept products matching this combination. If unset, the data source will accept products without that restriction.",
          "type": "string"
        },
        "countries": {
          "description": "Optional. The countries where the items may be displayed. Represented as a [CLDR territory code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SupplementalProductDataSource": {
      "id": "SupplementalProductDataSource",
      "description": "The supplemental data source for local and online products.",
      "type": "object",
      "properties": {
        "feedLabel": {
          "description": "Optional. Immutable. The feed label that is specified on the data source level. Must be less than or equal to 20 uppercase letters (A-Z), numbers (0-9), and dashes (-). See also [migration to feed labels](https://developers.google.com/shopping-content/guides/products/feed-labels). `feedLabel` and `contentLanguage` must be either both set or unset for data sources with product content type. They must be set for data sources with a file input. If set, the data source will only accept products matching this combination. If unset, the data source will accept produts without that restriction.",
          "type": "string"
        },
        "contentLanguage": {
          "description": "Optional. Immutable. The two-letter ISO 639-1 language of the items in the data source. `feedLabel` and `contentLanguage` must be either both set or unset. The fields can only be unset for data sources without file input. If set, the data source will only accept products matching this combination. If unset, the data source will accept produts without that restriction.",
          "type": "string"
        }
      }
    },
    "LocalInventoryDataSource": {
      "id": "LocalInventoryDataSource",
      "description": "The local inventory data source.",
      "type": "object",
      "properties": {
        "feedLabel": {
          "description": "Required. Immutable. The feed label of the offers to which the local inventory is provided. Must be less than or equal to 20 uppercase letters (A-Z), numbers (0-9), and dashes (-). See also [migration to feed labels](https://developers.google.com/shopping-content/guides/products/feed-labels).",
          "type": "string"
        },
        "contentLanguage": {
          "description": "Required. Immutable. The two-letter ISO 639-1 language of the items to which the local inventory is provided.",
          "type": "string"
        }
      }
    },
    "RegionalInventoryDataSource": {
      "id": "RegionalInventoryDataSource",
      "description": "The regional inventory data source.",
      "type": "object",
      "properties": {
        "feedLabel": {
          "description": "Required. Immutable. The feed label of the offers to which the regional inventory is provided. Must be less than or equal to 20 uppercase letters (A-Z), numbers (0-9), and dashes (-). See also [migration to feed labels](https://developers.google.com/shopping-content/guides/products/feed-labels).",
          "type": "string"
        },
        "contentLanguage": {
          "description": "Required. Immutable. The two-letter ISO 639-1 language of the items to which the regional inventory is provided.",
          "type": "string"
        }
      }
    },
    "PromotionDataSource": {
      "id": "PromotionDataSource",
      "description": "The promotion data source.",
      "type": "object",
      "properties": {
        "targetCountry": {
          "description": "Required. Immutable. The target country used as part of the unique identifier. Represented as a [CLDR territory code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml). Promotions are only available in selected [countries](https://support.google.com/merchants/answer/4588460).",
          "type": "string"
        },
        "contentLanguage": {
          "description": "Required. Immutable. The two-letter ISO 639-1 language of the items in the data source.",
          "type": "string"
        }
      }
    },
    "FileInput": {
      "id": "FileInput",
      "description": "The data specific for file data sources. This field is empty for other data source inputs.",
      "type": "object",
      "properties": {
        "fetchSettings": {
          "description": "Optional. Fetch details to deliver the data source. It contains settings for `FETCH` and `GOOGLE_SHEETS` file input types. The required fields vary based on the frequency of fetching.",
          "$ref": "FetchSettings"
        },
        "fileName": {
          "description": "Optional. The file name of the data source. Required for `UPLOAD` file input type.",
          "type": "string"
        },
        "fileInputType": {
          "description": "Output only. The type of file input.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "File input type unspecified.",
            "The file is uploaded through SFTP, Google Cloud Storage or manually in the Merchant Center.",
            "The file is fetched from the configured fetch_uri.",
            "The file is fetched from Google Sheets specified in the fetch_uri."
          ],
          "enum": [
            "FILE_INPUT_TYPE_UNSPECIFIED",
            "UPLOAD",
            "FETCH",
            "GOOGLE_SHEETS"
          ]
        }
      }
    },
    "FetchSettings": {
      "id": "FetchSettings",
      "description": "Fetch details to deliver the data source.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Optional. Enables or pauses the fetch schedule.",
          "type": "boolean"
        },
        "dayOfMonth": {
          "description": "Optional. The day of the month when the data source file should be fetched (1-31). This field can only be set for monthly frequency.",
          "type": "integer",
          "format": "int32"
        },
        "timeOfDay": {
          "description": "Optional. The hour of the day when the data source file should be fetched. Minutes and seconds are not supported and will be ignored.",
          "$ref": "TimeOfDay"
        },
        "dayOfWeek": {
          "description": "Optional. The day of the week when the data source file should be fetched. This field can only be set for weekly frequency.",
          "type": "string",
          "enumDescriptions": [
            "The day of the week is unspecified.",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        },
        "timeZone": {
          "description": "Optional. [Time zone](https://cldr.unicode.org) used for schedule. UTC by default. For example, \"America/Los_Angeles\".",
          "type": "string"
        },
        "frequency": {
          "description": "Required. The frequency describing fetch schedule.",
          "type": "string",
          "enumDescriptions": [
            "Frequency unspecified.",
            "The fetch happens every day.",
            "The fetch happens every week.",
            "The fetch happens every month."
          ],
          "enum": [
            "FREQUENCY_UNSPECIFIED",
            "FREQUENCY_DAILY",
            "FREQUENCY_WEEKLY",
            "FREQUENCY_MONTHLY"
          ]
        },
        "fetchUri": {
          "description": "Optional. The URL where the data source file can be fetched. Google Merchant Center supports automatic scheduled uploads using the HTTP, HTTPS or SFTP protocols, so the value will need to be a valid link using one of those three protocols. Immutable for Google Sheets files.",
          "type": "string"
        },
        "username": {
          "description": "Optional. An optional user name for fetch url. Used for [submitting data sources through SFTP](https://support.google.com/merchants/answer/13813117).",
          "type": "string"
        },
        "password": {
          "description": "Optional. An optional password for fetch url. Used for [submitting data sources through SFTP](https://support.google.com/merchants/answer/13813117).",
          "type": "string"
        }
      }
    },
    "TimeOfDay": {
      "id": "TimeOfDay",
      "description": "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
      "type": "object",
      "properties": {
        "hours": {
          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "type": "integer",
          "format": "int32"
        },
        "minutes": {
          "description": "Minutes of hour of day. Must be from 0 to 59.",
          "type": "integer",
          "format": "int32"
        },
        "seconds": {
          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
          "type": "integer",
          "format": "int32"
        },
        "nanos": {
          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListDataSourcesResponse": {
      "id": "ListDataSourcesResponse",
      "description": "Response message for the ListDataSources method.",
      "type": "object",
      "properties": {
        "dataSources": {
          "description": "The data sources from the specified account.",
          "type": "array",
          "items": {
            "$ref": "DataSource"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {}
    },
    "FetchDataSourceRequest": {
      "id": "FetchDataSourceRequest",
      "description": "Request message for the FetchDataSource method.",
      "type": "object",
      "properties": {}
    },
    "ProductStatusChangeMessage": {
      "id": "ProductStatusChangeMessage",
      "description": "The message that the merchant will receive to notify about product status change event",
      "type": "object",
      "properties": {
        "account": {
          "description": "The target account that owns the entity that changed. Format : `accounts/{merchant_id}`",
          "type": "string"
        },
        "managingAccount": {
          "description": "The account that manages the merchant's account. can be the same as merchant id if it is standalone account. Format : `accounts/{service_provider_id}`",
          "type": "string"
        },
        "resourceType": {
          "description": "The resource that changed, in this case it will always be `Product`.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified resource",
            "Resource type : product"
          ],
          "enum": [
            "RESOURCE_UNSPECIFIED",
            "PRODUCT"
          ]
        },
        "attribute": {
          "description": "The attribute in the resource that changed, in this case it will be always `Status`.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified attribute",
            "Status of the changed entity"
          ],
          "enum": [
            "ATTRIBUTE_UNSPECIFIED",
            "STATUS"
          ]
        },
        "changes": {
          "description": "A message to describe the change that happened to the product",
          "type": "array",
          "items": {
            "$ref": "ProductChange"
          }
        },
        "resourceId": {
          "description": "The product id.",
          "type": "string"
        },
        "resource": {
          "description": "The product name. Format: `{product.name=accounts/{account}/products/{product}}`",
          "type": "string"
        }
      }
    },
    "ProductChange": {
      "id": "ProductChange",
      "description": "The change that happened to the product including old value, new value, country code as the region code and reporting context.",
      "type": "object",
      "properties": {
        "oldValue": {
          "description": "The old value of the changed resource or attribute.",
          "type": "string"
        },
        "newValue": {
          "description": "The new value of the changed resource or attribute.",
          "type": "string"
        },
        "regionCode": {
          "description": "Countries that have the change (if applicable)",
          "type": "string"
        },
        "reportingContext": {
          "description": "Reporting contexts that have the change (if applicable)",
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "[Shopping ads](https://support.google.com/merchants/answer/6149970).",
            "Deprecated: Use `DEMAND_GEN_ADS` instead. [Discovery and Demand Gen ads](https://support.google.com/merchants/answer/13389785).",
            "[Demand Gen ads](https://support.google.com/merchants/answer/13389785).",
            "[Demand Gen ads on Discover surface](https://support.google.com/merchants/answer/13389785).",
            "[Video ads](https://support.google.com/google-ads/answer/6340491).",
            "[Display ads](https://support.google.com/merchants/answer/6069387).",
            "[Local inventory ads](https://support.google.com/merchants/answer/3271956).",
            "[Vehicle inventory ads](https://support.google.com/merchants/answer/11544533).",
            "[Free product listings](https://support.google.com/merchants/answer/9199328).",
            "[Free local product listings](https://support.google.com/merchants/answer/9825611).",
            "[Free local vehicle listings](https://support.google.com/merchants/answer/11544533).",
            "[YouTube Shopping](https://support.google.com/merchants/answer/13478370).",
            "[Cloud retail](https://cloud.google.com/solutions/retail).",
            "[Local cloud retail](https://cloud.google.com/solutions/retail)."
          ],
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "enum": [
            "REPORTING_CONTEXT_ENUM_UNSPECIFIED",
            "SHOPPING_ADS",
            "DISCOVERY_ADS",
            "DEMAND_GEN_ADS",
            "DEMAND_GEN_ADS_DISCOVER_SURFACE",
            "VIDEO_ADS",
            "DISPLAY_ADS",
            "LOCAL_INVENTORY_ADS",
            "VEHICLE_INVENTORY_ADS",
            "FREE_LISTINGS",
            "FREE_LOCAL_LISTINGS",
            "FREE_LOCAL_VEHICLE_LISTINGS",
            "YOUTUBE_SHOPPING",
            "CLOUD_RETAIL",
            "LOCAL_CLOUD_RETAIL"
          ]
        }
      }
    }
  },
  "description": "Programmatically manage your Merchant Center Accounts.",
  "ownerName": "Google",
  "baseUrl": "https://merchantapi.googleapis.com/",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "canonicalName": "Merchant"
}

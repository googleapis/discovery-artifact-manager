{
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "id": "workspaceevents:v1",
  "baseUrl": "https://workspaceevents.googleapis.com/",
  "parameters": {
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "default": "json",
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    }
  },
  "canonicalName": "Workspace Events",
  "version": "v1",
  "rootUrl": "https://workspaceevents.googleapis.com/",
  "schemas": {
    "Status": {
      "id": "Status",
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        }
      }
    },
    "Operation": {
      "type": "object",
      "properties": {
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        }
      },
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "NotificationEndpoint": {
      "description": "The endpoint where the subscription delivers events.",
      "properties": {
        "pubsubTopic": {
          "type": "string",
          "description": "Immutable. The Cloud Pub/Sub topic that receives events for the subscription. Format: `projects/{project}/topics/{topic}` You must create the topic in the same Google Cloud project where you create this subscription. When the topic receives events, the events are encoded as Cloud Pub/Sub messages. For details, see the [Google Cloud Pub/Sub Protocol Binding for CloudEvents](https://github.com/googleapis/google-cloudevents/blob/main/docs/spec/pubsub.md)."
        }
      },
      "id": "NotificationEndpoint",
      "type": "object"
    },
    "PayloadOptions": {
      "id": "PayloadOptions",
      "properties": {
        "includeResource": {
          "type": "boolean",
          "description": "Optional. Whether the event payload includes data about the resource that changed. For example, for an event where a Google Chat message was created, whether the payload contains data about the [`Message`](https://developers.google.com/chat/api/reference/rest/v1/spaces.messages) resource. If false, the event payload only includes the name of the changed resource."
        },
        "fieldMask": {
          "description": "Optional. If `include_resource` is set to `true`, the list of fields to include in the event payload. Separate fields with a comma. For example, to include a Google Chat message's sender and create time, enter `message.sender,message.createTime`. If omitted, the payload includes all fields for the resource. If you specify a field that doesn't exist for the resource, the system ignores the field.",
          "format": "google-fieldmask",
          "type": "string"
        }
      },
      "description": "Options about what data to include in the event payload. Only supported for Google Chat events.",
      "type": "object"
    },
    "ReactivateSubscriptionRequest": {
      "properties": {},
      "description": "The request message for SubscriptionsService.ReactivateSubscription.",
      "id": "ReactivateSubscriptionRequest",
      "type": "object"
    },
    "Subscription": {
      "id": "Subscription",
      "type": "object",
      "description": "[Developer Preview](https://developers.google.com/workspace/preview). A subscription to receive events about a Google Workspace resource. To learn more about subscriptions, see the [Google Workspace Events API overview](https://developers.google.com/workspace/events/guides).",
      "properties": {
        "state": {
          "description": "Output only. The state of the subscription. Determines whether the subscription can receive events and deliver them to the notification endpoint.",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The subscription is active and can receive and deliver events to its notification endpoint.",
            "The subscription is unable to receive events due to an error. To identify the error, see the `suspension_reason` field.",
            "The subscription is deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "SUSPENDED",
            "DELETED"
          ],
          "readOnly": true,
          "type": "string"
        },
        "notificationEndpoint": {
          "$ref": "NotificationEndpoint",
          "description": "Required. Immutable. The endpoint where the subscription delivers events, such as a Pub/Sub topic."
        },
        "name": {
          "description": "Optional. Immutable. Identifier. Resource name of the subscription. Format: `subscriptions/{subscription}`",
          "type": "string"
        },
        "expireTime": {
          "format": "google-datetime",
          "description": "Non-empty default. The timestamp in UTC when the subscription expires. Always displayed on output, regardless of what was used on input.",
          "type": "string"
        },
        "ttl": {
          "type": "string",
          "description": "Input only. The time-to-live (TTL) or duration for the subscription. If unspecified or set to `0`, uses the maximum possible duration.",
          "format": "google-duration"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time when the subscription is created.",
          "readOnly": true
        },
        "uid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. System-assigned unique identifier for the subscription."
        },
        "eventTypes": {
          "description": "Required. Immutable. Unordered list. Input for creating a subscription. Otherwise, output only. One or more types of events to receive about the target resource. Formatted according to the CloudEvents specification. For a list of supported event types, see the following documentation: * [Google Chat events](https://developers.google.com/workspace/events/guides/events-chat) * [Google Meet events](https://developers.google.com/workspace/events/guides/events-meet) By default, you also receive events about the [lifecycle of your subscription](https://developers.google.com/workspace/events/guides/events-lifecycle). You don't need to specify lifecycle events for this field. If you specify an event type that doesn't exist for the target resource, the request returns an HTTP `400 Bad Request` status code.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reconciling": {
          "type": "boolean",
          "description": "Output only. If `true`, the subscription is in the process of being updated.",
          "readOnly": true
        },
        "payloadOptions": {
          "description": "Optional. Options about what data to include in the event payload. Only supported for Google Chat events.",
          "$ref": "PayloadOptions"
        },
        "suspensionReason": {
          "enum": [
            "ERROR_TYPE_UNSPECIFIED",
            "USER_SCOPE_REVOKED",
            "RESOURCE_DELETED",
            "USER_AUTHORIZATION_FAILURE",
            "ENDPOINT_PERMISSION_DENIED",
            "ENDPOINT_NOT_FOUND",
            "ENDPOINT_RESOURCE_EXHAUSTED",
            "OTHER"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The authorizing user has revoked the grant of one or more OAuth scopes. To learn more about authorization for Google Workspace, see [Configure the OAuth consent screen](https://developers.google.com/workspace/guides/configure-oauth-consent#choose-scopes).",
            "The target resource for the subscription no longer exists.",
            "The user that authorized the creation of the subscription no longer has access to the subscription's target resource.",
            "The Google Workspace application doesn't have access to deliver events to your subscription's notification endpoint.",
            "The subscription's notification endpoint doesn't exist, or the endpoint can't be found in the Google Cloud project where you created the subscription.",
            "The subscription's notification endpoint failed to receive events due to insufficient quota or reaching rate limiting.",
            "An unidentified error has occurred."
          ],
          "description": "Output only. The error that suspended the subscription. To reactivate the subscription, resolve the error and call the `ReactivateSubscription` method.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Optional. This checksum is computed by the server based on the value of other fields, and might be sent on update requests to ensure the client has an up-to-date value before proceeding."
        },
        "authority": {
          "description": "Output only. The user who authorized the creation of the subscription. Format: `users/{user}` For Google Workspace users, the `{user}` value is the [`user.id`](https://developers.google.com/admin-sdk/directory/reference/rest/v1/users#User.FIELDS.ids) field from the Directory API.",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "description": "Output only. The last time that the subscription is updated.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "targetResource": {
          "type": "string",
          "description": "Required. Immutable. The Google Workspace resource that's monitored for events, formatted as the [full resource name](https://google.aip.dev/122#full-resource-names). To learn about target resources, see [Supported Google Workspace resources](https://developers.google.com/workspace/events/guides#supported-resources). A user can only authorize your app to create one subscription for a given target resource. If your app tries to create another subscription with the same user credentials, the request returns an `ALREADY_EXISTS` error."
        }
      }
    },
    "ListSubscriptionsResponse": {
      "type": "object",
      "id": "ListSubscriptionsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "subscriptions": {
          "description": "List of subscriptions.",
          "items": {
            "$ref": "Subscription"
          },
          "type": "array"
        }
      },
      "description": "The response message for SubscriptionsService.ListSubscriptions."
    }
  },
  "ownerDomain": "google.com",
  "resources": {
    "operations": {
      "methods": {
        "get": {
          "parameters": {
            "name": {
              "pattern": "^operations/.*$",
              "location": "path",
              "type": "string",
              "description": "The name of the operation resource.",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/chat.bot",
            "https://www.googleapis.com/auth/chat.memberships",
            "https://www.googleapis.com/auth/chat.memberships.readonly",
            "https://www.googleapis.com/auth/chat.messages",
            "https://www.googleapis.com/auth/chat.messages.reactions",
            "https://www.googleapis.com/auth/chat.messages.reactions.readonly",
            "https://www.googleapis.com/auth/chat.messages.readonly",
            "https://www.googleapis.com/auth/chat.spaces",
            "https://www.googleapis.com/auth/chat.spaces.readonly"
          ],
          "response": {
            "$ref": "Operation"
          },
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "id": "workspaceevents.operations.get",
          "httpMethod": "GET",
          "flatPath": "v1/operations/{operationsId}",
          "parameterOrder": [
            "name"
          ],
          "path": "v1/{+name}"
        }
      }
    },
    "subscriptions": {
      "methods": {
        "get": {
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^subscriptions/[^/]+$",
              "type": "string",
              "required": true,
              "description": "Required. Resource name of the subscription. Format: `subscriptions/{subscription}`"
            }
          },
          "description": "[Developer Preview](https://developers.google.com/workspace/preview): Gets details about a Google Workspace subscription. To learn how to use this method, see [Get details about a Google Workspace subscription](https://developers.google.com/workspace/events/guides/get-subscription).",
          "id": "workspaceevents.subscriptions.get",
          "scopes": [
            "https://www.googleapis.com/auth/chat.bot",
            "https://www.googleapis.com/auth/chat.memberships",
            "https://www.googleapis.com/auth/chat.memberships.readonly",
            "https://www.googleapis.com/auth/chat.messages",
            "https://www.googleapis.com/auth/chat.messages.reactions",
            "https://www.googleapis.com/auth/chat.messages.reactions.readonly",
            "https://www.googleapis.com/auth/chat.messages.readonly",
            "https://www.googleapis.com/auth/chat.spaces",
            "https://www.googleapis.com/auth/chat.spaces.readonly"
          ],
          "response": {
            "$ref": "Subscription"
          },
          "path": "v1/{+name}",
          "httpMethod": "GET",
          "flatPath": "v1/subscriptions/{subscriptionsId}"
        },
        "reactivate": {
          "parameters": {
            "name": {
              "pattern": "^subscriptions/[^/]+$",
              "type": "string",
              "location": "path",
              "description": "Required. Resource name of the subscription. Format: `subscriptions/{subscription}`",
              "required": true
            }
          },
          "description": "[Developer Preview](https://developers.google.com/workspace/preview): Reactivates a suspended Google Workspace subscription. This method resets your subscription's `State` field to `ACTIVE`. Before you use this method, you must fix the error that suspended the subscription. To learn how to use this method, see [Reactivate a Google Workspace subscription](https://developers.google.com/workspace/events/guides/reactivate-subscription).",
          "request": {
            "$ref": "ReactivateSubscriptionRequest"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/chat.memberships",
            "https://www.googleapis.com/auth/chat.memberships.readonly",
            "https://www.googleapis.com/auth/chat.messages",
            "https://www.googleapis.com/auth/chat.messages.reactions",
            "https://www.googleapis.com/auth/chat.messages.reactions.readonly",
            "https://www.googleapis.com/auth/chat.messages.readonly",
            "https://www.googleapis.com/auth/chat.spaces",
            "https://www.googleapis.com/auth/chat.spaces.readonly"
          ],
          "flatPath": "v1/subscriptions/{subscriptionsId}:reactivate",
          "response": {
            "$ref": "Operation"
          },
          "id": "workspaceevents.subscriptions.reactivate",
          "parameterOrder": [
            "name"
          ],
          "path": "v1/{+name}:reactivate"
        },
        "patch": {
          "id": "workspaceevents.subscriptions.patch",
          "flatPath": "v1/subscriptions/{subscriptionsId}",
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "PATCH",
          "request": {
            "$ref": "Subscription"
          },
          "path": "v1/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/chat.memberships",
            "https://www.googleapis.com/auth/chat.memberships.readonly",
            "https://www.googleapis.com/auth/chat.messages",
            "https://www.googleapis.com/auth/chat.messages.reactions",
            "https://www.googleapis.com/auth/chat.messages.reactions.readonly",
            "https://www.googleapis.com/auth/chat.messages.readonly",
            "https://www.googleapis.com/auth/chat.spaces",
            "https://www.googleapis.com/auth/chat.spaces.readonly"
          ],
          "description": "[Developer Preview](https://developers.google.com/workspace/preview): Updates or renews a Google Workspace subscription. To learn how to use this method, see [Update or renew a Google Workspace subscription](https://developers.google.com/workspace/events/guides/update-subscription).",
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^subscriptions/[^/]+$",
              "description": "Optional. Immutable. Identifier. Resource name of the subscription. Format: `subscriptions/{subscription}`",
              "type": "string",
              "required": true
            },
            "updateMask": {
              "location": "query",
              "type": "string",
              "format": "google-fieldmask",
              "description": "Optional. Required. The field to update. You can update one of the following fields in a subscription: * `expire_time`: The timestamp when the subscription expires. * `ttl`: The time-to-live (TTL) or duration of the subscription."
            },
            "validateOnly": {
              "type": "boolean",
              "description": "Optional. If set to `true`, validates and previews the request, but doesn't update the subscription.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "Operation"
          }
        },
        "list": {
          "flatPath": "v1/subscriptions",
          "response": {
            "$ref": "ListSubscriptionsResponse"
          },
          "id": "workspaceevents.subscriptions.list",
          "parameterOrder": [],
          "parameters": {
            "pageSize": {
              "description": "Optional. The maximum number of subscriptions to return. The service might return fewer than this value. If unspecified or set to `0`, up to 50 subscriptions are returned. The maximum value is 100. If you specify a value more than 100, the system only returns 100 subscriptions.",
              "location": "query",
              "format": "int32",
              "type": "integer"
            },
            "filter": {
              "location": "query",
              "description": "Required. A query filter. You can filter subscriptions by event type (`event_types`) and target resource (`target_resource`). You must specify at least one event type in your query. To filter for multiple event types, use the `OR` operator. To filter by both event type and target resource, use the `AND` operator and specify the full resource name, such as `//chat.googleapis.com/spaces/{space}`. For example, the following queries are valid: ``` event_types:\"google.workspace.chat.membership.v1.updated\" OR event_types:\"google.workspace.chat.message.v1.created\" event_types:\"google.workspace.chat.message.v1.created\" AND target_resource=\"//chat.googleapis.com/spaces/{space}\" ( event_types:\"google.workspace.chat.membership.v1.updated\" OR event_types:\"google.workspace.chat.message.v1.created\" ) AND target_resource=\"//chat.googleapis.com/spaces/{space}\" ``` The server rejects invalid queries with an `INVALID_ARGUMENT` error.",
              "type": "string"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Optional. A page token, received from a previous list subscriptions call. Provide this parameter to retrieve the subsequent page. When paginating, the filter value should match the call that provided the page token. Passing a different value might lead to unexpected results."
            }
          },
          "description": "[Developer Preview](https://developers.google.com/workspace/preview): Lists Google Workspace subscriptions. To learn how to use this method, see [List Google Workspace subscriptions](https://developers.google.com/workspace/events/guides/list-subscriptions).",
          "scopes": [
            "https://www.googleapis.com/auth/chat.bot",
            "https://www.googleapis.com/auth/chat.memberships",
            "https://www.googleapis.com/auth/chat.memberships.readonly",
            "https://www.googleapis.com/auth/chat.messages",
            "https://www.googleapis.com/auth/chat.messages.reactions",
            "https://www.googleapis.com/auth/chat.messages.reactions.readonly",
            "https://www.googleapis.com/auth/chat.messages.readonly",
            "https://www.googleapis.com/auth/chat.spaces",
            "https://www.googleapis.com/auth/chat.spaces.readonly"
          ],
          "httpMethod": "GET",
          "path": "v1/subscriptions"
        },
        "create": {
          "scopes": [
            "https://www.googleapis.com/auth/chat.memberships",
            "https://www.googleapis.com/auth/chat.memberships.readonly",
            "https://www.googleapis.com/auth/chat.messages",
            "https://www.googleapis.com/auth/chat.messages.reactions",
            "https://www.googleapis.com/auth/chat.messages.reactions.readonly",
            "https://www.googleapis.com/auth/chat.messages.readonly",
            "https://www.googleapis.com/auth/chat.spaces",
            "https://www.googleapis.com/auth/chat.spaces.readonly"
          ],
          "parameterOrder": [],
          "id": "workspaceevents.subscriptions.create",
          "path": "v1/subscriptions",
          "request": {
            "$ref": "Subscription"
          },
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "validateOnly": {
              "location": "query",
              "description": "Optional. If set to `true`, validates and previews the request, but doesn't create the subscription.",
              "type": "boolean"
            }
          },
          "description": "[Developer Preview](https://developers.google.com/workspace/preview): Creates a Google Workspace subscription. To learn how to use this method, see [Create a Google Workspace subscription](https://developers.google.com/workspace/events/guides/create-subscription).",
          "flatPath": "v1/subscriptions",
          "httpMethod": "POST"
        },
        "delete": {
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "DELETE",
          "response": {
            "$ref": "Operation"
          },
          "id": "workspaceevents.subscriptions.delete",
          "parameters": {
            "name": {
              "required": true,
              "pattern": "^subscriptions/[^/]+$",
              "description": "Required. Resource name of the subscription to delete. Format: `subscriptions/{subscription}`",
              "location": "path",
              "type": "string"
            },
            "allowMissing": {
              "type": "boolean",
              "location": "query",
              "description": "Optional. If set to `true` and the subscription isn't found, the request succeeds but doesn't delete the subscription."
            },
            "validateOnly": {
              "location": "query",
              "type": "boolean",
              "description": "Optional. If set to `true`, validates and previews the request, but doesn't delete the subscription."
            },
            "etag": {
              "location": "query",
              "type": "string",
              "description": "Optional. Etag of the subscription. If present, it must match with the server's etag. Otherwise, request fails with the status `ABORTED`."
            }
          },
          "description": "[Developer Preview](https://developers.google.com/workspace/preview): Deletes a Google Workspace subscription. To learn how to use this method, see [Delete a Google Workspace subscription](https://developers.google.com/workspace/events/guides/delete-subscription).",
          "scopes": [
            "https://www.googleapis.com/auth/chat.bot",
            "https://www.googleapis.com/auth/chat.memberships",
            "https://www.googleapis.com/auth/chat.memberships.readonly",
            "https://www.googleapis.com/auth/chat.messages",
            "https://www.googleapis.com/auth/chat.messages.reactions",
            "https://www.googleapis.com/auth/chat.messages.reactions.readonly",
            "https://www.googleapis.com/auth/chat.messages.readonly",
            "https://www.googleapis.com/auth/chat.spaces",
            "https://www.googleapis.com/auth/chat.spaces.readonly"
          ],
          "path": "v1/{+name}",
          "flatPath": "v1/subscriptions/{subscriptionsId}"
        }
      }
    }
  },
  "title": "Google Workspace Events API",
  "kind": "discovery#restDescription",
  "ownerName": "Google",
  "revision": "20240213",
  "version_module": true,
  "batchPath": "batch",
  "discoveryVersion": "v1",
  "name": "workspaceevents",
  "documentationLink": "https://developers.google.com/workspace/events",
  "protocol": "rest",
  "basePath": "",
  "servicePath": "",
  "fullyEncodeReservedExpansion": true,
  "description": "The Google Workspace Events API lets you subscribe to events and manage change notifications across Google Workspace applications.",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/chat.bot": {
          "description": "Private Service: https://www.googleapis.com/auth/chat.bot"
        },
        "https://www.googleapis.com/auth/chat.messages": {
          "description": "View, compose, send, update, and delete messages, and add, view, and delete reactions to messages."
        },
        "https://www.googleapis.com/auth/chat.messages.readonly": {
          "description": "View messages and reactions in Google Chat"
        },
        "https://www.googleapis.com/auth/chat.memberships.readonly": {
          "description": "View members in Google Chat conversations."
        },
        "https://www.googleapis.com/auth/chat.memberships": {
          "description": "View, add, and remove members from conversations in Google Chat"
        },
        "https://www.googleapis.com/auth/chat.spaces.readonly": {
          "description": "View chat and spaces in Google Chat"
        },
        "https://www.googleapis.com/auth/chat.messages.reactions.readonly": {
          "description": "View reactions to messages in Google Chat"
        },
        "https://www.googleapis.com/auth/chat.spaces": {
          "description": "Create conversations and spaces and see or edit metadata (including history settings and access settings) in Google Chat"
        },
        "https://www.googleapis.com/auth/chat.messages.reactions": {
          "description": "View, add, and delete reactions to messages in Google Chat"
        }
      }
    }
  },
  "mtlsRootUrl": "https://workspaceevents.mtls.googleapis.com/"
}

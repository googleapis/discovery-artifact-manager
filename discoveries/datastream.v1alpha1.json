{
  "canonicalName": "Datastream",
  "description": "",
  "baseUrl": "https://datastream.googleapis.com/",
  "ownerDomain": "google.com",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "streams": {
              "methods": {
                "fetchErrors": {
                  "parameterOrder": [
                    "stream"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+stream}:fetchErrors",
                  "parameters": {
                    "stream": {
                      "type": "string",
                      "description": "Name of the Stream resource for which to fetch any errors.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "deprecated": true,
                  "description": "Use this method to fetch any errors associated with a stream.",
                  "id": "datastream.projects.locations.streams.fetchErrors",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}:fetchErrors",
                  "request": {
                    "$ref": "FetchErrorsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "request": {
                    "$ref": "Stream"
                  },
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/streams",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent that owns the collection of streams.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "streamId": {
                      "description": "Required. The stream identifier.",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "description": "Optional. Create the stream without validating it.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Optional. Only validate the stream, but do not create any resources. The default is false.",
                      "location": "query"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "deprecated": true,
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams",
                  "description": "Use this method to create a stream.",
                  "id": "datastream.projects.locations.streams.create"
                },
                "patch": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the stream resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. Only validate the stream with the changes, without actually updating it. The default is false.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Output only. The stream's name.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "force": {
                      "description": "Optional. Execute the update without validating it.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Stream"
                  },
                  "deprecated": true,
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "description": "Use this method to update the configuration of a stream.",
                  "id": "datastream.projects.locations.streams.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "deprecated": true,
                  "httpMethod": "DELETE",
                  "description": "Use this method to delete a stream.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the stream resource to delete.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "location": "path"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "id": "datastream.projects.locations.streams.delete"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the stream resource to get.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "description": "Use this method to get details about a stream.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "path": "v1alpha1/{+name}",
                  "id": "datastream.projects.locations.streams.get",
                  "response": {
                    "$ref": "Stream"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "deprecated": true,
                  "httpMethod": "GET"
                },
                "list": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent that owns the collection of streams."
                    },
                    "orderBy": {
                      "description": "Order by fields for the result.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filter request."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Maximum number of streams to return. If unspecified, at most 50 streams will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Page token received from a previous `ListStreams` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListStreams` must match the call that provided the page token.",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+parent}/streams",
                  "httpMethod": "GET",
                  "description": "Use this method to list streams in a project and location.",
                  "response": {
                    "$ref": "ListStreamsResponse"
                  },
                  "id": "datastream.projects.locations.streams.list",
                  "deprecated": true,
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ]
                }
              },
              "resources": {
                "objects": {
                  "methods": {
                    "get": {
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}",
                      "description": "Use this method to get details about a stream object.",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. The name of the stream object resource to get.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "deprecated": true,
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1alpha1/{+name}",
                      "response": {
                        "$ref": "StreamObject"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "datastream.projects.locations.streams.objects.get"
                    },
                    "list": {
                      "path": "v1alpha1/{+parent}/objects",
                      "response": {
                        "$ref": "ListStreamObjectsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "id": "datastream.projects.locations.streams.objects.list",
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "description": "Maximum number of objects to return. Default is 50. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "format": "int32",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "description": "Required. The parent stream that owns the collection of objects.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Page token received from a previous `ListStreamObjectsRequest` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListStreamObjectsRequest` must match the call that provided the page token."
                        }
                      },
                      "description": "Use this method to list the objects of a specific stream.",
                      "deprecated": true,
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects"
                    },
                    "startBackfillJob": {
                      "description": "Starts backfill job for the specified stream object.",
                      "httpMethod": "POST",
                      "id": "datastream.projects.locations.streams.objects.startBackfillJob",
                      "parameters": {
                        "object": {
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$",
                          "description": "Required. The name of the stream object resource to start a backfill job for.",
                          "location": "path"
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:startBackfillJob",
                      "path": "v1alpha1/{+object}:startBackfillJob",
                      "parameterOrder": [
                        "object"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "deprecated": true,
                      "response": {
                        "$ref": "StartBackfillJobResponse"
                      }
                    },
                    "stopBackfillJob": {
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:stopBackfillJob",
                      "path": "v1alpha1/{+object}:stopBackfillJob",
                      "id": "datastream.projects.locations.streams.objects.stopBackfillJob",
                      "parameters": {
                        "object": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$",
                          "required": true,
                          "description": "Required. The name of the stream object resource to stop the backfill job for.",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Stops the backfill job for the specified stream object.",
                      "response": {
                        "$ref": "StopBackfillJobResponse"
                      },
                      "deprecated": true,
                      "parameterOrder": [
                        "object"
                      ],
                      "httpMethod": "POST"
                    }
                  }
                }
              }
            },
            "connectionProfiles": {
              "methods": {
                "discover": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the ConnectionProfile type. Must be in the format `projects/*/locations/*`."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles:discover",
                  "path": "v1alpha1/{+parent}/connectionProfiles:discover",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "DiscoverConnectionProfileResponse"
                  },
                  "deprecated": true,
                  "request": {
                    "$ref": "DiscoverConnectionProfileRequest"
                  },
                  "id": "datastream.projects.locations.connectionProfiles.discover",
                  "description": "Use this method to discover a connection profile. The discover API call exposes the data objects and metadata belonging to the profile. Typically, a request returns children data objects under a parent data object that's optionally supplied in the request."
                },
                "get": {
                  "response": {
                    "$ref": "ConnectionProfile"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}",
                  "deprecated": true,
                  "httpMethod": "GET",
                  "id": "datastream.projects.locations.connectionProfiles.get",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to get details about a connection profile.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "description": "Required. The name of the connection profile resource to get.",
                      "required": true,
                      "type": "string"
                    }
                  }
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "deprecated": true,
                  "path": "v1alpha1/{+parent}/connectionProfiles",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "datastream.projects.locations.connectionProfiles.create",
                  "description": "Use this method to create a connection profile in a project and location.",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "parent": {
                      "description": "Required. The parent that owns the collection of ConnectionProfiles.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "connectionProfileId": {
                      "location": "query",
                      "description": "Required. The connection profile identifier.",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "httpMethod": "POST"
                },
                "delete": {
                  "id": "datastream.projects.locations.connectionProfiles.delete",
                  "description": "Use this method to delete a connection profile..",
                  "parameterOrder": [
                    "name"
                  ],
                  "deprecated": true,
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "description": "Required. The name of the connection profile resource to delete."
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  }
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "deprecated": true,
                  "parameters": {
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Optional. Only validate the connection profile, but do not update any resources. The default is false.",
                      "location": "query"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the ConnectionProfile resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Output only. The resource's name.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "id": "datastream.projects.locations.connectionProfiles.patch",
                  "httpMethod": "PATCH",
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Use this method to update the parameters of a connection profile."
                },
                "list": {
                  "id": "datastream.projects.locations.connectionProfiles.list",
                  "deprecated": true,
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "path": "v1alpha1/{+parent}/connectionProfiles",
                  "description": "Use this method to list connection profiles created in a project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "filter": {
                      "description": "Filter request.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Order by fields for the result.",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Page token received from a previous `ListConnectionProfiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListConnectionProfiles` must match the call that provided the page token."
                    },
                    "pageSize": {
                      "description": "Maximum number of connection profiles to return. If unspecified, at most 50 connection profiles will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "parent": {
                      "description": "Required. The parent that owns the collection of connection profiles.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "ListConnectionProfilesResponse"
                  }
                }
              }
            },
            "privateConnections": {
              "resources": {
                "routes": {
                  "methods": {
                    "get": {
                      "description": "Use this method to get details about a route.",
                      "response": {
                        "$ref": "Route"
                      },
                      "httpMethod": "GET",
                      "id": "datastream.projects.locations.privateConnections.routes.get",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1alpha1/{+name}",
                      "deprecated": true,
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the Route resource to get.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "create": {
                      "description": "Use this method to create a route for a private connectivity in a project and location.",
                      "deprecated": true,
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "datastream.projects.locations.privateConnections.routes.create",
                      "httpMethod": "POST",
                      "path": "v1alpha1/{+parent}/routes",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                          "location": "path",
                          "description": "Required. The parent that owns the collection of Routes.",
                          "required": true
                        },
                        "requestId": {
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string",
                          "location": "query"
                        },
                        "routeId": {
                          "description": "Required. The Route identifier.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "request": {
                        "$ref": "Route"
                      }
                    },
                    "list": {
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent that owns the collection of Routess.",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Page token received from a previous `ListRoutes` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRoutes` must match the call that provided the page token.",
                          "type": "string"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Filter request."
                        },
                        "orderBy": {
                          "type": "string",
                          "location": "query",
                          "description": "Order by fields for the result."
                        },
                        "pageSize": {
                          "description": "Maximum number of Routes to return. The service may return fewer than this value. If unspecified, at most 50 Routes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "path": "v1alpha1/{+parent}/routes",
                      "httpMethod": "GET",
                      "deprecated": true,
                      "description": "Use this method to list routes created for a private connectivity in a project and location.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListRoutesResponse"
                      },
                      "id": "datastream.projects.locations.privateConnections.routes.list"
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Use this method to delete a route.",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}",
                      "deprecated": true,
                      "id": "datastream.projects.locations.privateConnections.routes.delete",
                      "parameters": {
                        "requestId": {
                          "type": "string",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        },
                        "name": {
                          "required": true,
                          "description": "Required. The name of the Route resource to delete.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$",
                          "type": "string"
                        }
                      },
                      "path": "v1alpha1/{+name}"
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the private connectivity configuration to get.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "PrivateConnection"
                  },
                  "deprecated": true,
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to get details about a private connectivity configuration.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "datastream.projects.locations.privateConnections.get"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "description": "Required. The name of the private connectivity configuration to delete."
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "force": {
                      "location": "query",
                      "description": "Optional. If set to true, any child routes that belong to this PrivateConnection will also be deleted.",
                      "type": "boolean"
                    }
                  },
                  "description": "Use this method to delete a private connectivity configuration.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "deprecated": true,
                  "id": "datastream.projects.locations.privateConnections.delete",
                  "path": "v1alpha1/{+name}"
                },
                "create": {
                  "deprecated": true,
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/privateConnections",
                  "httpMethod": "POST",
                  "description": "Use this method to create a private connectivity configuration.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "datastream.projects.locations.privateConnections.create",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "privateConnectionId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. The private connectivity identifier."
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent that owns the collection of PrivateConnections.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "PrivateConnection"
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "datastream.projects.locations.privateConnections.list",
                  "deprecated": true,
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "path": "v1alpha1/{+parent}/privateConnections",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListPrivateConnectionsResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Page token received from a previous `ListPrivateConnections` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPrivateConnections` must match the call that provided the page token."
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent that owns the collection of private connectivity configurations."
                    },
                    "orderBy": {
                      "description": "Order by fields for the result.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Maximum number of private connectivity configurations to return. If unspecified, at most 50 private connectivity configurations that will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    },
                    "filter": {
                      "description": "Filter request.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "description": "Use this method to list private connectivity configurations in a project and location."
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "id": "datastream.projects.locations.operations.cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+name}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "datastream.projects.locations.operations.delete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation resource to be deleted.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "httpMethod": "DELETE"
                },
                "list": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "id": "datastream.projects.locations.operations.list",
                  "path": "v1alpha1/{+name}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    },
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET"
                },
                "get": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "datastream.projects.locations.operations.get",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "list": {
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true
                }
              },
              "description": "Lists information about the supported locations for this service.",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "id": "datastream.projects.locations.list",
              "httpMethod": "GET",
              "path": "v1alpha1/{+name}/locations"
            },
            "get": {
              "httpMethod": "GET",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "response": {
                "$ref": "Location"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Resource name for the location.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "datastream.projects.locations.get",
              "description": "Gets information about a location.",
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ]
            },
            "fetchStaticIps": {
              "parameterOrder": [
                "name"
              ],
              "description": "The FetchStaticIps API call exposes the static IP addresses used by Datastream.",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "description": "Required. The name resource of the Response type. Must be in the format `projects/*/locations/*`.",
                  "required": true
                },
                "pageToken": {
                  "description": "A page token, received from a previous `ListStaticIps` call. will likely not be specified.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Maximum number of Ips to return, will likely not be specified.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                }
              },
              "deprecated": true,
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "FetchStaticIpsResponse"
              },
              "path": "v1alpha1/{+name}:fetchStaticIps",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}:fetchStaticIps",
              "id": "datastream.projects.locations.fetchStaticIps",
              "httpMethod": "GET"
            }
          }
        }
      }
    }
  },
  "schemas": {
    "StaticServiceIpConnectivity": {
      "id": "StaticServiceIpConnectivity",
      "description": "Static IP address connectivity.",
      "type": "object",
      "properties": {}
    },
    "OracleObjectIdentifier": {
      "type": "object",
      "description": "Oracle data source object identifier.",
      "id": "OracleObjectIdentifier",
      "properties": {
        "schema": {
          "description": "Required. The schema name.",
          "type": "string"
        },
        "table": {
          "type": "string",
          "description": "Required. The table name."
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object"
    },
    "PrivateConnectivity": {
      "description": "Private Connectivity",
      "type": "object",
      "id": "PrivateConnectivity",
      "properties": {
        "privateConnectionName": {
          "type": "string"
        }
      }
    },
    "ConnectionProfile": {
      "id": "ConnectionProfile",
      "type": "object",
      "properties": {
        "updateTime": {
          "description": "Output only. The update time of the resource.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The create time of the resource.",
          "readOnly": true,
          "type": "string"
        },
        "forwardSshConnectivity": {
          "$ref": "ForwardSshTunnelConnectivity",
          "description": "Forward SSH tunnel connectivity."
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "privateConnectivity": {
          "$ref": "PrivateConnectivity",
          "description": "Private connectivity."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource's name.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels."
        },
        "oracleProfile": {
          "description": "Oracle ConnectionProfile configuration.",
          "$ref": "OracleProfile"
        },
        "mysqlProfile": {
          "$ref": "MysqlProfile",
          "description": "MySQL ConnectionProfile configuration."
        },
        "noConnectivity": {
          "$ref": "NoConnectivitySettings",
          "description": "No connectivity option chosen."
        },
        "gcsProfile": {
          "description": "Cloud Storage ConnectionProfile configuration.",
          "$ref": "GcsProfile"
        },
        "staticServiceIpConnectivity": {
          "description": "Static Service IP connectivity.",
          "$ref": "StaticServiceIpConnectivity"
        }
      }
    },
    "GcsProfile": {
      "properties": {
        "bucketName": {
          "type": "string",
          "description": "Required. The full project and resource path for Cloud Storage bucket including the name."
        },
        "rootPath": {
          "type": "string",
          "description": "The root path inside the Cloud Storage bucket."
        }
      },
      "type": "object",
      "description": "Cloud Storage bucket profile.",
      "id": "GcsProfile"
    },
    "MysqlDatabase": {
      "id": "MysqlDatabase",
      "properties": {
        "databaseName": {
          "type": "string",
          "description": "Database name."
        },
        "mysqlTables": {
          "description": "Tables in the database.",
          "type": "array",
          "items": {
            "$ref": "MysqlTable"
          }
        }
      },
      "type": "object",
      "description": "MySQL database."
    },
    "OracleRdbms": {
      "type": "object",
      "properties": {
        "oracleSchemas": {
          "items": {
            "$ref": "OracleSchema"
          },
          "description": "Oracle schemas/databases in the database server.",
          "type": "array"
        }
      },
      "description": "Oracle database structure.",
      "id": "OracleRdbms"
    },
    "ValidationMessage": {
      "description": "Represent user-facing validation result message.",
      "id": "ValidationMessage",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional metadata related to the result.",
          "type": "object"
        },
        "message": {
          "description": "The result of the validation.",
          "type": "string"
        },
        "level": {
          "enumDescriptions": [
            "Unspecified level.",
            "Potentially cause issues with the Stream.",
            "Definitely cause issues with the Stream."
          ],
          "type": "string",
          "description": "Message severity level (warning or error).",
          "enum": [
            "LEVEL_UNSPECIFIED",
            "WARNING",
            "ERROR"
          ]
        },
        "code": {
          "type": "string",
          "description": "A custom code identifying this specific message."
        }
      },
      "type": "object"
    },
    "ListStreamObjectsResponse": {
      "description": "Response containing the objects for a stream.",
      "type": "object",
      "id": "ListStreamObjectsResponse",
      "properties": {
        "streamObjects": {
          "description": "List of stream objects.",
          "items": {
            "$ref": "StreamObject"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page."
        }
      }
    },
    "FetchErrorsRequest": {
      "type": "object",
      "description": "Request message for 'FetchErrors' request.",
      "id": "FetchErrorsRequest",
      "properties": {}
    },
    "OracleSourceConfig": {
      "properties": {
        "allowlist": {
          "$ref": "OracleRdbms",
          "description": "Oracle objects to include in the stream."
        },
        "dropLargeObjects": {
          "description": "Drop large object values.",
          "$ref": "DropLargeObjects"
        },
        "rejectlist": {
          "description": "Oracle objects to exclude from the stream.",
          "$ref": "OracleRdbms"
        }
      },
      "type": "object",
      "id": "OracleSourceConfig",
      "description": "Oracle data source configuration"
    },
    "MysqlTable": {
      "type": "object",
      "description": "MySQL table.",
      "id": "MysqlTable",
      "properties": {
        "tableName": {
          "type": "string",
          "description": "Table name."
        },
        "mysqlColumns": {
          "description": "MySQL columns in the database. When unspecified as part of include/exclude lists, includes/excludes everything.",
          "type": "array",
          "items": {
            "$ref": "MysqlColumn"
          }
        }
      }
    },
    "ListLocationsResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations."
    },
    "SourceConfig": {
      "id": "SourceConfig",
      "properties": {
        "mysqlSourceConfig": {
          "$ref": "MysqlSourceConfig",
          "description": "MySQL data source configuration"
        },
        "sourceConnectionProfileName": {
          "type": "string",
          "description": "Required. Source connection profile identifier."
        },
        "oracleSourceConfig": {
          "description": "Oracle data source configuration",
          "$ref": "OracleSourceConfig"
        }
      },
      "description": "The configuration of the stream source.",
      "type": "object"
    },
    "ListOperationsResponse": {
      "properties": {
        "operations": {
          "type": "array",
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListOperationsResponse",
      "type": "object",
      "description": "The response message for Operations.ListOperations."
    },
    "StreamObject": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "sourceObject": {
          "$ref": "SourceObjectIdentifier",
          "description": "The object identifier in the data source."
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The last update time of the object.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The creation time of the object.",
          "format": "google-datetime"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The object's name.",
          "type": "string"
        },
        "backfillJob": {
          "$ref": "BackfillJob",
          "description": "The latest backfill job that was initiated for the stream object."
        },
        "errors": {
          "items": {
            "$ref": "Error"
          },
          "description": "Output only. Active errors on the object.",
          "readOnly": true,
          "type": "array"
        }
      },
      "description": "A specific stream object (e.g a specific DB table).",
      "id": "StreamObject",
      "type": "object"
    },
    "StopBackfillJobResponse": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "StreamObject",
          "description": "The stream object resource the backfill job was stopped for."
        }
      },
      "id": "StopBackfillJobResponse",
      "description": "Response for manually stop a backfill job for a specific stream object."
    },
    "ValidationResult": {
      "id": "ValidationResult",
      "description": "Contains the current validation results.",
      "type": "object",
      "properties": {
        "validations": {
          "description": "A list of validations (includes both executed as well as not executed validations).",
          "type": "array",
          "items": {
            "$ref": "Validation"
          }
        }
      }
    },
    "MysqlSslConfig": {
      "description": "MySQL SSL configuration information.",
      "properties": {
        "clientKeySet": {
          "readOnly": true,
          "description": "Output only. Indicates whether the client_key field is set.",
          "type": "boolean"
        },
        "clientKey": {
          "type": "string",
          "description": "Input only. PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' and the 'ca_certificate' fields are mandatory."
        },
        "caCertificateSet": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Indicates whether the ca_certificate field is set."
        },
        "clientCertificateSet": {
          "type": "boolean",
          "description": "Output only. Indicates whether the client_certificate field is set.",
          "readOnly": true
        },
        "caCertificate": {
          "type": "string",
          "description": "Input only. PEM-encoded certificate of the CA that signed the source database server's certificate."
        },
        "clientCertificate": {
          "type": "string",
          "description": "Input only. PEM-encoded certificate that will be used by the replica to authenticate against the source database server. If this field is used then the 'client_key' and the 'ca_certificate' fields are mandatory."
        }
      },
      "type": "object",
      "id": "MysqlSslConfig"
    },
    "Location": {
      "id": "Location",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        }
      },
      "description": "A resource that represents Google Cloud Platform location."
    },
    "PrivateConnection": {
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The create time of the resource.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The update time of the resource.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "labels": {
          "description": "Labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "FAILED",
            "DELETING",
            "FAILED_TO_DELETE"
          ],
          "enumDescriptions": [
            "",
            "The private connection is in creation state - creating resources.",
            "The private connection has been created with all of its resources.",
            "The private connection creation has failed.",
            "The private connection is being deleted.",
            "Delete request has failed, resource is in invalid state."
          ],
          "description": "Output only. The state of the Private Connection.",
          "readOnly": true,
          "type": "string"
        },
        "error": {
          "readOnly": true,
          "description": "Output only. In case of error, the details of the error in a user-friendly format.",
          "$ref": "Error"
        },
        "vpcPeeringConfig": {
          "description": "VPC Peering Config",
          "$ref": "VpcPeeringConfig"
        },
        "name": {
          "description": "Output only. The resource's name.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "The PrivateConnection resource is used to establish private connectivity between Datastream and a customer's network.",
      "id": "PrivateConnection"
    },
    "ListPrivateConnectionsResponse": {
      "type": "object",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "privateConnections": {
          "type": "array",
          "items": {
            "$ref": "PrivateConnection"
          },
          "description": "List of private connectivity configurations."
        }
      },
      "id": "ListPrivateConnectionsResponse"
    },
    "MysqlProfile": {
      "type": "object",
      "description": "MySQL database profile.",
      "properties": {
        "sslConfig": {
          "$ref": "MysqlSslConfig",
          "description": "SSL configuration for the MySQL connection."
        },
        "port": {
          "description": "Port for the MySQL connection, default value is 3306.",
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "description": "Required. Username for the MySQL connection.",
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "Required. Input only. Password for the MySQL connection."
        },
        "hostname": {
          "type": "string",
          "description": "Required. Hostname for the MySQL connection."
        }
      },
      "id": "MysqlProfile"
    },
    "NoConnectivitySettings": {
      "description": "No connectivity settings.",
      "id": "NoConnectivitySettings",
      "type": "object",
      "properties": {}
    },
    "DiscoverConnectionProfileResponse": {
      "id": "DiscoverConnectionProfileResponse",
      "properties": {
        "mysqlRdbms": {
          "$ref": "MysqlRdbms",
          "description": "Enriched MySQL RDBMS object."
        },
        "oracleRdbms": {
          "description": "Enriched Oracle RDBMS object.",
          "$ref": "OracleRdbms"
        }
      },
      "type": "object"
    },
    "JsonFileFormat": {
      "id": "JsonFileFormat",
      "type": "object",
      "properties": {
        "compression": {
          "description": "Compression of the loaded JSON file.",
          "enum": [
            "JSON_COMPRESSION_UNSPECIFIED",
            "NO_COMPRESSION",
            "GZIP"
          ],
          "enumDescriptions": [
            "Unspecified json file compression.",
            "Do not compress JSON file.",
            "Gzip compression."
          ],
          "type": "string"
        },
        "schemaFileFormat": {
          "enum": [
            "SCHEMA_FILE_FORMAT_UNSPECIFIED",
            "NO_SCHEMA_FILE",
            "AVRO_SCHEMA_FILE"
          ],
          "enumDescriptions": [
            "Unspecified schema file format.",
            "Do not attach schema file.",
            "Avro schema format."
          ],
          "description": "The schema file format along JSON data files.",
          "type": "string"
        }
      },
      "description": "JSON file format configuration."
    },
    "MysqlObjectIdentifier": {
      "description": "Mysql data source object identifier.",
      "properties": {
        "table": {
          "type": "string",
          "description": "Required. The table name."
        },
        "database": {
          "type": "string",
          "description": "Required. The database name."
        }
      },
      "type": "object",
      "id": "MysqlObjectIdentifier"
    },
    "GcsDestinationConfig": {
      "id": "GcsDestinationConfig",
      "type": "object",
      "properties": {
        "avroFileFormat": {
          "description": "AVRO file format configuration.",
          "$ref": "AvroFileFormat"
        },
        "fileRotationMb": {
          "format": "int32",
          "description": "The maximum file size to be saved in the bucket.",
          "type": "integer"
        },
        "gcsFileFormat": {
          "description": "File format that data should be written in. Deprecated field (b/169501737) - use file_format instead.",
          "enumDescriptions": [
            "Unspecified Cloud Storage file format.",
            "Avro file format"
          ],
          "enum": [
            "GCS_FILE_FORMAT_UNSPECIFIED",
            "AVRO"
          ],
          "type": "string"
        },
        "fileRotationInterval": {
          "format": "google-duration",
          "type": "string",
          "description": "The maximum duration for which new events are added before a file is closed and a new file is created."
        },
        "path": {
          "type": "string",
          "description": "Path inside the Cloud Storage bucket to write data to."
        },
        "jsonFileFormat": {
          "description": "JSON file format configuration.",
          "$ref": "JsonFileFormat"
        }
      },
      "description": "Google Cloud Storage destination configuration"
    },
    "DestinationConfig": {
      "id": "DestinationConfig",
      "description": "The configuration of the stream destination.",
      "properties": {
        "gcsDestinationConfig": {
          "$ref": "GcsDestinationConfig",
          "description": "GCS destination configuration."
        },
        "destinationConnectionProfileName": {
          "description": "Required. Destination connection profile identifier.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FetchErrorsResponse": {
      "properties": {
        "errors": {
          "description": "The list of errors on the Stream.",
          "type": "array",
          "items": {
            "$ref": "Error"
          }
        }
      },
      "id": "FetchErrorsResponse",
      "type": "object",
      "description": "Response message for a 'FetchErrors' response."
    },
    "MysqlColumn": {
      "description": "MySQL Column.",
      "properties": {
        "columnName": {
          "type": "string",
          "description": "Column name."
        },
        "dataType": {
          "type": "string",
          "description": "The MySQL data type. Full data types list can be found here: https://dev.mysql.com/doc/refman/8.0/en/data-types.html"
        },
        "primaryKey": {
          "type": "boolean",
          "description": "Whether or not the column represents a primary key."
        },
        "collation": {
          "description": "Column collation.",
          "type": "string"
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Column length."
        },
        "nullable": {
          "description": "Whether or not the column can accept a null value.",
          "type": "boolean"
        },
        "ordinalPosition": {
          "description": "The ordinal position of the column in the table.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "MysqlColumn",
      "type": "object"
    },
    "OperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "id": "OperationMetadata",
      "type": "object",
      "properties": {
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "validationResult": {
          "description": "Output only. Results of executed validations if there are any.",
          "readOnly": true,
          "$ref": "ValidationResult"
        },
        "requestedCancellation": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "statusMessage": {
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true
        },
        "apiVersion": {
          "readOnly": true,
          "description": "Output only. API version used to start the operation.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "type": "string"
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        }
      }
    },
    "OracleProfile": {
      "type": "object",
      "id": "OracleProfile",
      "properties": {
        "username": {
          "type": "string",
          "description": "Required. Username for the Oracle connection."
        },
        "databaseService": {
          "description": "Required. Database for the Oracle connection.",
          "type": "string"
        },
        "password": {
          "description": "Required. Password for the Oracle connection.",
          "type": "string"
        },
        "hostname": {
          "description": "Required. Hostname for the Oracle connection.",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "description": "Port for the Oracle connection, default value is 1521.",
          "type": "integer"
        },
        "connectionAttributes": {
          "description": "Connection string attributes",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "Oracle database profile."
    },
    "AvroFileFormat": {
      "type": "object",
      "id": "AvroFileFormat",
      "description": "AVRO file format configuration.",
      "properties": {}
    },
    "OracleColumn": {
      "id": "OracleColumn",
      "description": "Oracle Column.",
      "type": "object",
      "properties": {
        "encoding": {
          "description": "Column encoding.",
          "type": "string"
        },
        "precision": {
          "type": "integer",
          "format": "int32",
          "description": "Column precision."
        },
        "columnName": {
          "type": "string",
          "description": "Column name."
        },
        "dataType": {
          "description": "The Oracle data type.",
          "type": "string"
        },
        "length": {
          "format": "int32",
          "description": "Column length.",
          "type": "integer"
        },
        "scale": {
          "type": "integer",
          "format": "int32",
          "description": "Column scale."
        },
        "nullable": {
          "description": "Whether or not the column can accept a null value.",
          "type": "boolean"
        },
        "primaryKey": {
          "type": "boolean",
          "description": "Whether or not the column represents a primary key."
        },
        "ordinalPosition": {
          "description": "The ordinal position of the column in the table.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Stream": {
      "type": "object",
      "id": "Stream",
      "properties": {
        "backfillNone": {
          "$ref": "BackfillNoneStrategy",
          "description": "Do not automatically backfill any objects."
        },
        "state": {
          "description": "The state of the stream.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "PAUSED",
            "MAINTENANCE",
            "FAILED",
            "FAILED_PERMANENTLY",
            "STARTING",
            "DRAINING"
          ],
          "enumDescriptions": [
            "Unspecified stream state.",
            "The stream has been created.",
            "The stream is running.",
            "The stream is paused.",
            "The stream is in maintenance mode. Updates are rejected on the resource in this state.",
            "The stream is experiencing an error that is preventing data from being streamed.",
            "The stream has experienced a terminal failure.",
            "The stream is starting, but not yet running.",
            "The Stream is no longer reading new events, but still writing events in the buffer."
          ],
          "type": "string"
        },
        "destinationConfig": {
          "$ref": "DestinationConfig",
          "description": "Required. Destination connection profile configuration."
        },
        "errors": {
          "readOnly": true,
          "items": {
            "$ref": "Error"
          },
          "type": "array",
          "description": "Output only. Errors on the Stream."
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The last update time of the stream.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "backfillAll": {
          "description": "Automatically backfill objects included in the stream source configuration. Specific objects can be excluded.",
          "$ref": "BackfillAllStrategy"
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The creation time of the stream."
        },
        "customerManagedEncryptionKey": {
          "type": "string",
          "description": "Immutable. A reference to a KMS encryption key. If provided, it will be used to encrypt the data. If left blank, data will be encrypted using an internal Stream-specific encryption key provisioned through KMS."
        },
        "sourceConfig": {
          "description": "Required. Source connection profile configuration.",
          "$ref": "SourceConfig"
        },
        "name": {
          "description": "Output only. The stream's name.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ForwardSshTunnelConnectivity": {
      "description": "Forward SSH Tunnel connectivity.",
      "type": "object",
      "properties": {
        "username": {
          "description": "Required. Username for the SSH tunnel.",
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "Input only. SSH password."
        },
        "port": {
          "format": "int32",
          "type": "integer",
          "description": "Port for the SSH tunnel, default value is 22."
        },
        "privateKey": {
          "description": "Input only. SSH private key.",
          "type": "string"
        },
        "hostname": {
          "description": "Required. Hostname for the SSH tunnel.",
          "type": "string"
        }
      },
      "id": "ForwardSshTunnelConnectivity"
    },
    "ListConnectionProfilesResponse": {
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "connectionProfiles": {
          "description": "List of connection profiles.",
          "items": {
            "$ref": "ConnectionProfile"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "type": "object",
      "id": "ListConnectionProfilesResponse"
    },
    "Validation": {
      "id": "Validation",
      "properties": {
        "message": {
          "type": "array",
          "items": {
            "$ref": "ValidationMessage"
          },
          "description": "Messages reflecting the validation results."
        },
        "status": {
          "description": "Validation execution status.",
          "enum": [
            "STATUS_UNSPECIFIED",
            "NOT_EXECUTED",
            "FAILED",
            "PASSED"
          ],
          "enumDescriptions": [
            "Unspecified status.",
            "Validation did not execute.",
            "Validation failed.",
            "Validation passed."
          ],
          "type": "string"
        },
        "code": {
          "description": "A custom code identifying this validation.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the validation.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Status": {
      "type": "object",
      "id": "Status",
      "properties": {
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "BackfillAllStrategy": {
      "id": "BackfillAllStrategy",
      "type": "object",
      "description": "Backfill strategy to automatically backfill the Stream's objects. Specific objects can be excluded.",
      "properties": {
        "mysqlExcludedObjects": {
          "description": "MySQL data source objects to avoid backfilling.",
          "$ref": "MysqlRdbms"
        },
        "oracleExcludedObjects": {
          "$ref": "OracleRdbms",
          "description": "Oracle data source objects to avoid backfilling."
        }
      }
    },
    "Route": {
      "id": "Route",
      "description": "The Route resource is the child of the PrivateConnection resource. It used to define a route for a PrivateConnection setup.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource's name.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The create time of the resource.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "destinationPort": {
          "type": "integer",
          "description": "Destination port for connection",
          "format": "int32"
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The update time of the resource.",
          "format": "google-datetime",
          "type": "string"
        },
        "destinationAddress": {
          "description": "Required. Destination address for connection",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels."
        }
      }
    },
    "BackfillJob": {
      "id": "BackfillJob",
      "description": "Represents a backfill job on a specific stream object.",
      "type": "object",
      "properties": {
        "errors": {
          "readOnly": true,
          "description": "Output only. Errors which caused the backfill job to fail.",
          "type": "array",
          "items": {
            "$ref": "Error"
          }
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_STARTED",
            "PENDING",
            "ACTIVE",
            "STOPPED",
            "FAILED",
            "COMPLETED",
            "UNSUPPORTED"
          ],
          "enumDescriptions": [
            "Default value.",
            "Backfill job was never started for the stream object (stream has backfill strategy defined as manual or object was explicitly excluded from automatic backfill).",
            "Backfill job will start pending available resources.",
            "Backfill job is running.",
            "Backfill job stopped (next job run will start from beginning).",
            "Backfill job failed (due to an error).",
            "Backfill completed successfully.",
            "Backfill job failed since the table structure is currently unsupported for backfill."
          ],
          "description": "Backfill job state."
        },
        "lastEndTime": {
          "type": "string",
          "description": "Output only. Backfill job's end time.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "lastStartTime": {
          "description": "Output only. Backfill job's start time.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "trigger": {
          "description": "Backfill job's triggering reason.",
          "enumDescriptions": [
            "Default value.",
            "Object backfill job was triggered automatically according to the stream's backfill strategy.",
            "Object backfill job was triggered manually using the dedicated API."
          ],
          "enum": [
            "TRIGGER_UNSPECIFIED",
            "AUTOMATIC",
            "MANUAL"
          ],
          "type": "string"
        }
      }
    },
    "StartBackfillJobResponse": {
      "description": "Response for manually initiating a backfill job for a specific stream object.",
      "type": "object",
      "properties": {
        "object": {
          "description": "The stream object resource a backfill job was started for.",
          "$ref": "StreamObject"
        }
      },
      "id": "StartBackfillJobResponse"
    },
    "MysqlRdbms": {
      "description": "MySQL database structure",
      "type": "object",
      "properties": {
        "mysqlDatabases": {
          "type": "array",
          "description": "Mysql databases on the server",
          "items": {
            "$ref": "MysqlDatabase"
          }
        }
      },
      "id": "MysqlRdbms"
    },
    "MysqlSourceConfig": {
      "id": "MysqlSourceConfig",
      "properties": {
        "allowlist": {
          "description": "MySQL objects to retrieve from the source.",
          "$ref": "MysqlRdbms"
        },
        "rejectlist": {
          "$ref": "MysqlRdbms",
          "description": "MySQL objects to exclude from the stream."
        }
      },
      "type": "object",
      "description": "MySQL source configuration"
    },
    "ListRoutesResponse": {
      "description": "route list response",
      "id": "ListRoutesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "routes": {
          "description": "List of Routes.",
          "type": "array",
          "items": {
            "$ref": "Route"
          }
        }
      }
    },
    "BackfillNoneStrategy": {
      "type": "object",
      "properties": {},
      "id": "BackfillNoneStrategy",
      "description": "Backfill strategy to disable automatic backfill for the Stream's objects."
    },
    "OracleSchema": {
      "type": "object",
      "properties": {
        "schemaName": {
          "type": "string",
          "description": "Schema name."
        },
        "oracleTables": {
          "type": "array",
          "items": {
            "$ref": "OracleTable"
          },
          "description": "Tables in the schema."
        }
      },
      "description": "Oracle schema.",
      "id": "OracleSchema"
    },
    "CancelOperationRequest": {
      "properties": {},
      "description": "The request message for Operations.CancelOperation.",
      "id": "CancelOperationRequest",
      "type": "object"
    },
    "ListStreamsResponse": {
      "type": "object",
      "id": "ListStreamsResponse",
      "properties": {
        "streams": {
          "type": "array",
          "items": {
            "$ref": "Stream"
          },
          "description": "List of streams"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "DropLargeObjects": {
      "description": "Configuration to drop large object values.",
      "type": "object",
      "properties": {},
      "id": "DropLargeObjects"
    },
    "SourceObjectIdentifier": {
      "properties": {
        "mysqlIdentifier": {
          "description": "Mysql data source object identifier.",
          "$ref": "MysqlObjectIdentifier"
        },
        "oracleIdentifier": {
          "$ref": "OracleObjectIdentifier",
          "description": "Oracle data source object identifier."
        }
      },
      "type": "object",
      "description": "Represents an identifier of an object in the data source.",
      "id": "SourceObjectIdentifier"
    },
    "OracleTable": {
      "type": "object",
      "description": "Oracle table.",
      "properties": {
        "oracleColumns": {
          "items": {
            "$ref": "OracleColumn"
          },
          "type": "array",
          "description": "Oracle columns in the schema. When unspecified as part of inclue/exclude lists, includes/excludes everything."
        },
        "tableName": {
          "type": "string",
          "description": "Table name."
        }
      },
      "id": "OracleTable"
    },
    "VpcPeeringConfig": {
      "type": "object",
      "description": "The VPC Peering configuration is used to create VPC peering between Datastream and the consumer's VPC.",
      "properties": {
        "subnet": {
          "type": "string",
          "description": "Required. A free subnet for peering. (CIDR of /29)"
        },
        "vpcName": {
          "description": "Required. fully qualified name of the VPC Datastream will peer to.",
          "type": "string"
        }
      },
      "id": "VpcPeeringConfig"
    },
    "FetchStaticIpsResponse": {
      "id": "FetchStaticIpsResponse",
      "description": "Response message for a 'FetchStaticIps' response.",
      "properties": {
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "staticIps": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "list of static ips by account"
        }
      },
      "type": "object"
    },
    "DiscoverConnectionProfileRequest": {
      "id": "DiscoverConnectionProfileRequest",
      "type": "object",
      "properties": {
        "recursive": {
          "description": "Whether to retrieve the full hierarchy of data objects (TRUE) or only the current level (FALSE).",
          "type": "boolean"
        },
        "oracleRdbms": {
          "description": "Oracle RDBMS to enrich with child data objects and metadata.",
          "$ref": "OracleRdbms"
        },
        "mysqlRdbms": {
          "description": "MySQL RDBMS to enrich with child data objects and metadata.",
          "$ref": "MysqlRdbms"
        },
        "connectionProfile": {
          "$ref": "ConnectionProfile",
          "description": "An ad-hoc ConnectionProfile configuration."
        },
        "recursionDepth": {
          "format": "int32",
          "description": "The number of hierarchy levels below the current level to be retrieved.",
          "type": "integer"
        },
        "connectionProfileName": {
          "description": "A reference to an existing ConnectionProfile.",
          "type": "string"
        }
      },
      "description": "Request message for 'discover' ConnectionProfile request."
    },
    "Empty": {
      "type": "object",
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "Error": {
      "properties": {
        "reason": {
          "description": "A title that explains the reason for the error.",
          "type": "string"
        },
        "errorUuid": {
          "type": "string",
          "description": "A unique identifier for this specific error, allowing it to be traced throughout the system in logs and API responses."
        },
        "message": {
          "description": "A message containing more information about the error that occurred.",
          "type": "string"
        },
        "details": {
          "type": "object",
          "description": "Additional information about the error.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "errorTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the error occurred."
        }
      },
      "type": "object",
      "id": "Error",
      "description": "Represent a user-facing Error."
    }
  },
  "fullyEncodeReservedExpansion": true,
  "id": "datastream:v1alpha1",
  "parameters": {
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response.",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query",
      "default": "true"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    }
  },
  "documentationLink": "https://cloud.google.com/datastream/",
  "basePath": "",
  "name": "datastream",
  "servicePath": "",
  "title": "Datastream API",
  "mtlsRootUrl": "https://datastream.mtls.googleapis.com/",
  "rootUrl": "https://datastream.googleapis.com/",
  "version": "v1alpha1",
  "version_module": true,
  "revision": "20230410",
  "kind": "discovery#restDescription",
  "batchPath": "batch",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "protocol": "rest",
  "discoveryVersion": "v1",
  "ownerName": "Google"
}

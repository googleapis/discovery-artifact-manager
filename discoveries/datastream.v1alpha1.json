{
  "baseUrl": "https://datastream.googleapis.com/",
  "name": "datastream",
  "basePath": "",
  "fullyEncodeReservedExpansion": true,
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "ownerDomain": "google.com",
  "schemas": {
    "OracleProfile": {
      "properties": {
        "port": {
          "format": "int32",
          "description": "Port for the Oracle connection, default value is 1521.",
          "type": "integer"
        },
        "hostname": {
          "type": "string",
          "description": "Required. Hostname for the Oracle connection."
        },
        "username": {
          "type": "string",
          "description": "Required. Username for the Oracle connection."
        },
        "databaseService": {
          "type": "string",
          "description": "Required. Database for the Oracle connection."
        },
        "password": {
          "description": "Required. Password for the Oracle connection.",
          "type": "string"
        },
        "connectionAttributes": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Connection string attributes"
        }
      },
      "description": "Oracle database profile.",
      "id": "OracleProfile",
      "type": "object"
    },
    "FetchStaticIpsResponse": {
      "type": "object",
      "id": "FetchStaticIpsResponse",
      "description": "Response message for a 'FetchStaticIps' response.",
      "properties": {
        "staticIps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "list of static ips by account"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "ValidationMessage": {
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional metadata related to the result.",
          "type": "object"
        },
        "message": {
          "description": "The result of the validation.",
          "type": "string"
        },
        "code": {
          "description": "A custom code identifying this specific message.",
          "type": "string"
        },
        "level": {
          "description": "Message severity level (warning or error).",
          "enumDescriptions": [
            "Unspecified level.",
            "Potentially cause issues with the Stream.",
            "Definitely cause issues with the Stream."
          ],
          "enum": [
            "LEVEL_UNSPECIFIED",
            "WARNING",
            "ERROR"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "id": "ValidationMessage",
      "description": "Represent user-facing validation result message."
    },
    "PrivateConnectivity": {
      "type": "object",
      "id": "PrivateConnectivity",
      "description": "Private Connectivity",
      "properties": {
        "privateConnectionName": {
          "type": "string"
        }
      }
    },
    "BackfillAllStrategy": {
      "id": "BackfillAllStrategy",
      "type": "object",
      "properties": {
        "oracleExcludedObjects": {
          "description": "Oracle data source objects to avoid backfilling.",
          "$ref": "OracleRdbms"
        },
        "mysqlExcludedObjects": {
          "description": "MySQL data source objects to avoid backfilling.",
          "$ref": "MysqlRdbms"
        }
      },
      "description": "Backfill strategy to automatically backfill the Stream's objects. Specific objects can be excluded."
    },
    "StreamObject": {
      "type": "object",
      "properties": {
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The creation time of the object.",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The last update time of the object.",
          "type": "string"
        },
        "errors": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Error"
          },
          "description": "Output only. Active errors on the object."
        },
        "backfillJob": {
          "description": "The latest backfill job that was initiated for the stream object.",
          "$ref": "BackfillJob"
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "name": {
          "type": "string",
          "description": "Output only. The object's name.",
          "readOnly": true
        },
        "sourceObject": {
          "$ref": "SourceObjectIdentifier",
          "description": "The object identifier in the data source."
        }
      },
      "id": "StreamObject",
      "description": "A specific stream object (e.g a specific DB table)."
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "properties": {},
      "id": "CancelOperationRequest",
      "type": "object"
    },
    "Status": {
      "properties": {
        "details": {
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "Status"
    },
    "ForwardSshTunnelConnectivity": {
      "description": "Forward SSH Tunnel connectivity.",
      "properties": {
        "privateKey": {
          "type": "string",
          "description": "Input only. SSH private key."
        },
        "username": {
          "description": "Required. Username for the SSH tunnel.",
          "type": "string"
        },
        "hostname": {
          "type": "string",
          "description": "Required. Hostname for the SSH tunnel."
        },
        "port": {
          "format": "int32",
          "description": "Port for the SSH tunnel, default value is 22.",
          "type": "integer"
        },
        "password": {
          "description": "Input only. SSH password.",
          "type": "string"
        }
      },
      "id": "ForwardSshTunnelConnectivity",
      "type": "object"
    },
    "ListPrivateConnectionsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "privateConnections": {
          "description": "List of private connectivity configurations.",
          "items": {
            "$ref": "PrivateConnection"
          },
          "type": "array"
        }
      },
      "id": "ListPrivateConnectionsResponse",
      "type": "object"
    },
    "OracleRdbms": {
      "id": "OracleRdbms",
      "type": "object",
      "properties": {
        "oracleSchemas": {
          "type": "array",
          "items": {
            "$ref": "OracleSchema"
          },
          "description": "Oracle schemas/databases in the database server."
        }
      },
      "description": "Oracle database structure."
    },
    "JsonFileFormat": {
      "type": "object",
      "id": "JsonFileFormat",
      "properties": {
        "compression": {
          "description": "Compression of the loaded JSON file.",
          "enumDescriptions": [
            "Unspecified json file compression.",
            "Do not compress JSON file.",
            "Gzip compression."
          ],
          "type": "string",
          "enum": [
            "JSON_COMPRESSION_UNSPECIFIED",
            "NO_COMPRESSION",
            "GZIP"
          ]
        },
        "schemaFileFormat": {
          "enumDescriptions": [
            "Unspecified schema file format.",
            "Do not attach schema file.",
            "Avro schema format."
          ],
          "enum": [
            "SCHEMA_FILE_FORMAT_UNSPECIFIED",
            "NO_SCHEMA_FILE",
            "AVRO_SCHEMA_FILE"
          ],
          "type": "string",
          "description": "The schema file format along JSON data files."
        }
      },
      "description": "JSON file format configuration."
    },
    "VpcPeeringConfig": {
      "properties": {
        "subnet": {
          "type": "string",
          "description": "Required. A free subnet for peering. (CIDR of /29)"
        },
        "vpcName": {
          "type": "string",
          "description": "Required. fully qualified name of the VPC Datastream will peer to."
        }
      },
      "id": "VpcPeeringConfig",
      "description": "The VPC Peering configuration is used to create VPC peering between Datastream and the consumer's VPC.",
      "type": "object"
    },
    "MysqlTable": {
      "id": "MysqlTable",
      "properties": {
        "mysqlColumns": {
          "type": "array",
          "items": {
            "$ref": "MysqlColumn"
          },
          "description": "MySQL columns in the database. When unspecified as part of include/exclude lists, includes/excludes everything."
        },
        "tableName": {
          "description": "Table name.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "MySQL table."
    },
    "NoConnectivitySettings": {
      "id": "NoConnectivitySettings",
      "properties": {},
      "description": "No connectivity settings.",
      "type": "object"
    },
    "GcsProfile": {
      "id": "GcsProfile",
      "properties": {
        "rootPath": {
          "type": "string",
          "description": "The root path inside the Cloud Storage bucket."
        },
        "bucketName": {
          "type": "string",
          "description": "Required. The full project and resource path for Cloud Storage bucket including the name."
        }
      },
      "description": "Cloud Storage bucket profile.",
      "type": "object"
    },
    "FetchErrorsRequest": {
      "description": "Request message for 'FetchErrors' request.",
      "properties": {},
      "id": "FetchErrorsRequest",
      "type": "object"
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "properties": {
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "verb": {
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        },
        "validationResult": {
          "readOnly": true,
          "description": "Output only. Results of executed validations if there are any.",
          "$ref": "ValidationResult"
        }
      },
      "type": "object",
      "description": "Represents the metadata of the long-running operation."
    },
    "SourceConfig": {
      "properties": {
        "mysqlSourceConfig": {
          "description": "MySQL data source configuration",
          "$ref": "MysqlSourceConfig"
        },
        "oracleSourceConfig": {
          "$ref": "OracleSourceConfig",
          "description": "Oracle data source configuration"
        },
        "sourceConnectionProfileName": {
          "description": "Required. Source connection profile identifier.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The configuration of the stream source.",
      "id": "SourceConfig"
    },
    "OracleTable": {
      "id": "OracleTable",
      "properties": {
        "tableName": {
          "type": "string",
          "description": "Table name."
        },
        "oracleColumns": {
          "type": "array",
          "description": "Oracle columns in the schema. When unspecified as part of inclue/exclude lists, includes/excludes everything.",
          "items": {
            "$ref": "OracleColumn"
          }
        }
      },
      "type": "object",
      "description": "Oracle table."
    },
    "DropLargeObjects": {
      "description": "Configuration to drop large object values.",
      "properties": {},
      "type": "object",
      "id": "DropLargeObjects"
    },
    "ListStreamsResponse": {
      "id": "ListStreamsResponse",
      "type": "object",
      "properties": {
        "streams": {
          "type": "array",
          "items": {
            "$ref": "Stream"
          },
          "description": "List of streams"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "BackfillJob": {
      "id": "BackfillJob",
      "properties": {
        "lastEndTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Backfill job's end time.",
          "type": "string"
        },
        "lastStartTime": {
          "description": "Output only. Backfill job's start time.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "errors": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. Errors which caused the backfill job to fail.",
          "items": {
            "$ref": "Error"
          }
        },
        "trigger": {
          "type": "string",
          "enum": [
            "TRIGGER_UNSPECIFIED",
            "AUTOMATIC",
            "MANUAL"
          ],
          "description": "Backfill job's triggering reason.",
          "enumDescriptions": [
            "Default value.",
            "Object backfill job was triggered automatically according to the stream's backfill strategy.",
            "Object backfill job was triggered manually using the dedicated API."
          ]
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Backfill job was never started for the stream object (stream has backfill strategy defined as manual or object was explicitly excluded from automatic backfill).",
            "Backfill job will start pending available resources.",
            "Backfill job is running.",
            "Backfill job stopped (next job run will start from beginning).",
            "Backfill job failed (due to an error).",
            "Backfill completed successfully.",
            "Backfill job failed since the table structure is currently unsupported for backfill."
          ],
          "description": "Backfill job state.",
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_STARTED",
            "PENDING",
            "ACTIVE",
            "STOPPED",
            "FAILED",
            "COMPLETED",
            "UNSUPPORTED"
          ]
        }
      },
      "type": "object",
      "description": "Represents a backfill job on a specific stream object."
    },
    "OracleSchema": {
      "id": "OracleSchema",
      "type": "object",
      "description": "Oracle schema.",
      "properties": {
        "oracleTables": {
          "description": "Tables in the schema.",
          "items": {
            "$ref": "OracleTable"
          },
          "type": "array"
        },
        "schemaName": {
          "type": "string",
          "description": "Schema name."
        }
      }
    },
    "MysqlObjectIdentifier": {
      "id": "MysqlObjectIdentifier",
      "properties": {
        "table": {
          "description": "Required. The table name.",
          "type": "string"
        },
        "database": {
          "description": "Required. The database name.",
          "type": "string"
        }
      },
      "description": "Mysql data source object identifier.",
      "type": "object"
    },
    "Validation": {
      "properties": {
        "description": {
          "description": "A short description of the validation.",
          "type": "string"
        },
        "code": {
          "type": "string",
          "description": "A custom code identifying this validation."
        },
        "status": {
          "enum": [
            "STATUS_UNSPECIFIED",
            "NOT_EXECUTED",
            "FAILED",
            "PASSED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified status.",
            "Validation did not execute.",
            "Validation failed.",
            "Validation passed."
          ],
          "description": "Validation execution status."
        },
        "message": {
          "type": "array",
          "items": {
            "$ref": "ValidationMessage"
          },
          "description": "Messages reflecting the validation results."
        }
      },
      "type": "object",
      "id": "Validation"
    },
    "DiscoverConnectionProfileResponse": {
      "properties": {
        "oracleRdbms": {
          "description": "Enriched Oracle RDBMS object.",
          "$ref": "OracleRdbms"
        },
        "mysqlRdbms": {
          "description": "Enriched MySQL RDBMS object.",
          "$ref": "MysqlRdbms"
        }
      },
      "id": "DiscoverConnectionProfileResponse",
      "type": "object"
    },
    "MysqlSslConfig": {
      "type": "object",
      "properties": {
        "clientKey": {
          "description": "Input only. PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' and the 'ca_certificate' fields are mandatory.",
          "type": "string"
        },
        "caCertificateSet": {
          "type": "boolean",
          "description": "Output only. Indicates whether the ca_certificate field is set.",
          "readOnly": true
        },
        "clientCertificate": {
          "type": "string",
          "description": "Input only. PEM-encoded certificate that will be used by the replica to authenticate against the source database server. If this field is used then the 'client_key' and the 'ca_certificate' fields are mandatory."
        },
        "clientCertificateSet": {
          "type": "boolean",
          "description": "Output only. Indicates whether the client_certificate field is set.",
          "readOnly": true
        },
        "caCertificate": {
          "description": "Input only. PEM-encoded certificate of the CA that signed the source database server's certificate.",
          "type": "string"
        },
        "clientKeySet": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Indicates whether the client_key field is set."
        }
      },
      "description": "MySQL SSL configuration information.",
      "id": "MysqlSslConfig"
    },
    "ConnectionProfile": {
      "type": "object",
      "properties": {
        "noConnectivity": {
          "$ref": "NoConnectivitySettings",
          "description": "No connectivity option chosen."
        },
        "gcsProfile": {
          "$ref": "GcsProfile",
          "description": "Cloud Storage ConnectionProfile configuration."
        },
        "oracleProfile": {
          "description": "Oracle ConnectionProfile configuration.",
          "$ref": "OracleProfile"
        },
        "staticServiceIpConnectivity": {
          "$ref": "StaticServiceIpConnectivity",
          "description": "Static Service IP connectivity."
        },
        "updateTime": {
          "description": "Output only. The update time of the resource.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "mysqlProfile": {
          "$ref": "MysqlProfile",
          "description": "MySQL ConnectionProfile configuration."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels."
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "privateConnectivity": {
          "description": "Private connectivity.",
          "$ref": "PrivateConnectivity"
        },
        "name": {
          "description": "Output only. The resource's name.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The create time of the resource.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "forwardSshConnectivity": {
          "description": "Forward SSH tunnel connectivity.",
          "$ref": "ForwardSshTunnelConnectivity"
        }
      },
      "id": "ConnectionProfile"
    },
    "GcsDestinationConfig": {
      "type": "object",
      "properties": {
        "gcsFileFormat": {
          "enumDescriptions": [
            "Unspecified Cloud Storage file format.",
            "Avro file format"
          ],
          "description": "File format that data should be written in. Deprecated field (b/169501737) - use file_format instead.",
          "type": "string",
          "enum": [
            "GCS_FILE_FORMAT_UNSPECIFIED",
            "AVRO"
          ]
        },
        "jsonFileFormat": {
          "$ref": "JsonFileFormat",
          "description": "JSON file format configuration."
        },
        "avroFileFormat": {
          "$ref": "AvroFileFormat",
          "description": "AVRO file format configuration."
        },
        "path": {
          "description": "Path inside the Cloud Storage bucket to write data to.",
          "type": "string"
        },
        "fileRotationInterval": {
          "type": "string",
          "format": "google-duration",
          "description": "The maximum duration for which new events are added before a file is closed and a new file is created."
        },
        "fileRotationMb": {
          "format": "int32",
          "description": "The maximum file size to be saved in the bucket.",
          "type": "integer"
        }
      },
      "description": "Google Cloud Storage destination configuration",
      "id": "GcsDestinationConfig"
    },
    "Stream": {
      "type": "object",
      "id": "Stream",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels."
        },
        "backfillNone": {
          "description": "Do not automatically backfill any objects.",
          "$ref": "BackfillNoneStrategy"
        },
        "state": {
          "description": "The state of the stream.",
          "enumDescriptions": [
            "Unspecified stream state.",
            "The stream has been created.",
            "The stream is running.",
            "The stream is paused.",
            "The stream is in maintenance mode. Updates are rejected on the resource in this state.",
            "The stream is experiencing an error that is preventing data from being streamed.",
            "The stream has experienced a terminal failure.",
            "The stream is starting, but not yet running.",
            "The Stream is no longer reading new events, but still writing events in the buffer."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "PAUSED",
            "MAINTENANCE",
            "FAILED",
            "FAILED_PERMANENTLY",
            "STARTING",
            "DRAINING"
          ],
          "type": "string"
        },
        "errors": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Error"
          },
          "description": "Output only. Errors on the Stream."
        },
        "customerManagedEncryptionKey": {
          "description": "Immutable. A reference to a KMS encryption key. If provided, it will be used to encrypt the data. If left blank, data will be encrypted using an internal Stream-specific encryption key provisioned through KMS.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The stream's name."
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The creation time of the stream."
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "backfillAll": {
          "description": "Automatically backfill objects included in the stream source configuration. Specific objects can be excluded.",
          "$ref": "BackfillAllStrategy"
        },
        "sourceConfig": {
          "$ref": "SourceConfig",
          "description": "Required. Source connection profile configuration."
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The last update time of the stream.",
          "type": "string"
        },
        "destinationConfig": {
          "description": "Required. Destination connection profile configuration.",
          "$ref": "DestinationConfig"
        }
      }
    },
    "ListLocationsResponse": {
      "type": "object",
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "properties": {
        "locations": {
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "BackfillNoneStrategy": {
      "id": "BackfillNoneStrategy",
      "description": "Backfill strategy to disable automatic backfill for the Stream's objects.",
      "properties": {},
      "type": "object"
    },
    "DiscoverConnectionProfileRequest": {
      "id": "DiscoverConnectionProfileRequest",
      "properties": {
        "mysqlRdbms": {
          "$ref": "MysqlRdbms",
          "description": "MySQL RDBMS to enrich with child data objects and metadata."
        },
        "connectionProfile": {
          "$ref": "ConnectionProfile",
          "description": "An ad-hoc ConnectionProfile configuration."
        },
        "oracleRdbms": {
          "$ref": "OracleRdbms",
          "description": "Oracle RDBMS to enrich with child data objects and metadata."
        },
        "recursive": {
          "description": "Whether to retrieve the full hierarchy of data objects (TRUE) or only the current level (FALSE).",
          "type": "boolean"
        },
        "recursionDepth": {
          "description": "The number of hierarchy levels below the current level to be retrieved.",
          "format": "int32",
          "type": "integer"
        },
        "connectionProfileName": {
          "type": "string",
          "description": "A reference to an existing ConnectionProfile."
        }
      },
      "type": "object",
      "description": "Request message for 'discover' ConnectionProfile request."
    },
    "SourceObjectIdentifier": {
      "type": "object",
      "id": "SourceObjectIdentifier",
      "description": "Represents an identifier of an object in the data source.",
      "properties": {
        "mysqlIdentifier": {
          "$ref": "MysqlObjectIdentifier",
          "description": "Mysql data source object identifier."
        },
        "oracleIdentifier": {
          "$ref": "OracleObjectIdentifier",
          "description": "Oracle data source object identifier."
        }
      }
    },
    "ListStreamObjectsResponse": {
      "type": "object",
      "description": "Response containing the objects for a stream.",
      "id": "ListStreamObjectsResponse",
      "properties": {
        "streamObjects": {
          "items": {
            "$ref": "StreamObject"
          },
          "type": "array",
          "description": "List of stream objects."
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page.",
          "type": "string"
        }
      }
    },
    "OracleObjectIdentifier": {
      "description": "Oracle data source object identifier.",
      "type": "object",
      "id": "OracleObjectIdentifier",
      "properties": {
        "schema": {
          "description": "Required. The schema name.",
          "type": "string"
        },
        "table": {
          "description": "Required. The table name.",
          "type": "string"
        }
      }
    },
    "MysqlRdbms": {
      "description": "MySQL database structure",
      "properties": {
        "mysqlDatabases": {
          "items": {
            "$ref": "MysqlDatabase"
          },
          "type": "array",
          "description": "Mysql databases on the server"
        }
      },
      "type": "object",
      "id": "MysqlRdbms"
    },
    "Error": {
      "description": "Represent a user-facing Error.",
      "type": "object",
      "properties": {
        "errorUuid": {
          "type": "string",
          "description": "A unique identifier for this specific error, allowing it to be traced throughout the system in logs and API responses."
        },
        "errorTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the error occurred."
        },
        "reason": {
          "type": "string",
          "description": "A title that explains the reason for the error."
        },
        "message": {
          "type": "string",
          "description": "A message containing more information about the error that occurred."
        },
        "details": {
          "description": "Additional information about the error.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "id": "Error"
    },
    "FetchErrorsResponse": {
      "id": "FetchErrorsResponse",
      "description": "Response message for a 'FetchErrors' response.",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "Error"
          },
          "description": "The list of errors on the Stream."
        }
      },
      "type": "object"
    },
    "ListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        }
      },
      "id": "ListOperationsResponse",
      "type": "object",
      "description": "The response message for Operations.ListOperations."
    },
    "MysqlSourceConfig": {
      "id": "MysqlSourceConfig",
      "type": "object",
      "properties": {
        "rejectlist": {
          "$ref": "MysqlRdbms",
          "description": "MySQL objects to exclude from the stream."
        },
        "allowlist": {
          "description": "MySQL objects to retrieve from the source.",
          "$ref": "MysqlRdbms"
        }
      },
      "description": "MySQL source configuration"
    },
    "OracleSourceConfig": {
      "type": "object",
      "description": "Oracle data source configuration",
      "id": "OracleSourceConfig",
      "properties": {
        "allowlist": {
          "$ref": "OracleRdbms",
          "description": "Oracle objects to include in the stream."
        },
        "dropLargeObjects": {
          "description": "Drop large object values.",
          "$ref": "DropLargeObjects"
        },
        "rejectlist": {
          "description": "Oracle objects to exclude from the stream.",
          "$ref": "OracleRdbms"
        }
      }
    },
    "Location": {
      "id": "Location",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        }
      },
      "type": "object",
      "description": "A resource that represents a Google Cloud location."
    },
    "StartBackfillJobResponse": {
      "type": "object",
      "description": "Response for manually initiating a backfill job for a specific stream object.",
      "properties": {
        "object": {
          "description": "The stream object resource a backfill job was started for.",
          "$ref": "StreamObject"
        }
      },
      "id": "StartBackfillJobResponse"
    },
    "OracleColumn": {
      "type": "object",
      "id": "OracleColumn",
      "properties": {
        "precision": {
          "type": "integer",
          "description": "Column precision.",
          "format": "int32"
        },
        "encoding": {
          "description": "Column encoding.",
          "type": "string"
        },
        "nullable": {
          "description": "Whether or not the column can accept a null value.",
          "type": "boolean"
        },
        "columnName": {
          "description": "Column name.",
          "type": "string"
        },
        "length": {
          "description": "Column length.",
          "type": "integer",
          "format": "int32"
        },
        "dataType": {
          "description": "The Oracle data type.",
          "type": "string"
        },
        "primaryKey": {
          "type": "boolean",
          "description": "Whether or not the column represents a primary key."
        },
        "ordinalPosition": {
          "format": "int32",
          "description": "The ordinal position of the column in the table.",
          "type": "integer"
        },
        "scale": {
          "format": "int32",
          "description": "Column scale.",
          "type": "integer"
        }
      },
      "description": "Oracle Column."
    },
    "AvroFileFormat": {
      "id": "AvroFileFormat",
      "type": "object",
      "properties": {},
      "description": "AVRO file format configuration."
    },
    "Route": {
      "id": "Route",
      "description": "The Route resource is the child of the PrivateConnection resource. It used to define a route for a PrivateConnection setup.",
      "properties": {
        "destinationAddress": {
          "description": "Required. Destination address for connection",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels."
        },
        "destinationPort": {
          "type": "integer",
          "format": "int32",
          "description": "Destination port for connection"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The update time of the resource.",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The create time of the resource."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource's name.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        }
      },
      "type": "object"
    },
    "ValidationResult": {
      "type": "object",
      "id": "ValidationResult",
      "properties": {
        "validations": {
          "items": {
            "$ref": "Validation"
          },
          "description": "A list of validations (includes both executed as well as not executed validations).",
          "type": "array"
        }
      },
      "description": "Contains the current validation results."
    },
    "Empty": {
      "id": "Empty",
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        }
      },
      "id": "Operation",
      "type": "object"
    },
    "MysqlColumn": {
      "properties": {
        "columnName": {
          "type": "string",
          "description": "Column name."
        },
        "length": {
          "format": "int32",
          "type": "integer",
          "description": "Column length."
        },
        "nullable": {
          "description": "Whether or not the column can accept a null value.",
          "type": "boolean"
        },
        "primaryKey": {
          "description": "Whether or not the column represents a primary key.",
          "type": "boolean"
        },
        "dataType": {
          "type": "string",
          "description": "The MySQL data type. Full data types list can be found here: https://dev.mysql.com/doc/refman/8.0/en/data-types.html"
        },
        "ordinalPosition": {
          "format": "int32",
          "description": "The ordinal position of the column in the table.",
          "type": "integer"
        },
        "collation": {
          "type": "string",
          "description": "Column collation."
        }
      },
      "description": "MySQL Column.",
      "id": "MysqlColumn",
      "type": "object"
    },
    "StopBackfillJobResponse": {
      "id": "StopBackfillJobResponse",
      "description": "Response for manually stop a backfill job for a specific stream object.",
      "type": "object",
      "properties": {
        "object": {
          "description": "The stream object resource the backfill job was stopped for.",
          "$ref": "StreamObject"
        }
      }
    },
    "DestinationConfig": {
      "type": "object",
      "properties": {
        "gcsDestinationConfig": {
          "description": "GCS destination configuration.",
          "$ref": "GcsDestinationConfig"
        },
        "destinationConnectionProfileName": {
          "description": "Required. Destination connection profile identifier.",
          "type": "string"
        }
      },
      "id": "DestinationConfig",
      "description": "The configuration of the stream destination."
    },
    "PrivateConnection": {
      "type": "object",
      "description": "The PrivateConnection resource is used to establish private connectivity between Datastream and a customer's network.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The resource's name.",
          "readOnly": true
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "error": {
          "description": "Output only. In case of error, the details of the error in a user-friendly format.",
          "readOnly": true,
          "$ref": "Error"
        },
        "state": {
          "description": "Output only. The state of the Private Connection.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "FAILED",
            "DELETING",
            "FAILED_TO_DELETE"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "The private connection is in creation state - creating resources.",
            "The private connection has been created with all of its resources.",
            "The private connection creation has failed.",
            "The private connection is being deleted.",
            "Delete request has failed, resource is in invalid state."
          ],
          "readOnly": true
        },
        "vpcPeeringConfig": {
          "$ref": "VpcPeeringConfig",
          "description": "VPC Peering Config"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The create time of the resource.",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "updateTime": {
          "description": "Output only. The update time of the resource.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        }
      },
      "id": "PrivateConnection"
    },
    "ListRoutesResponse": {
      "id": "ListRoutesResponse",
      "description": "route list response",
      "properties": {
        "routes": {
          "description": "List of Routes.",
          "type": "array",
          "items": {
            "$ref": "Route"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MysqlDatabase": {
      "description": "MySQL database.",
      "properties": {
        "databaseName": {
          "description": "Database name.",
          "type": "string"
        },
        "mysqlTables": {
          "description": "Tables in the database.",
          "items": {
            "$ref": "MysqlTable"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "MysqlDatabase"
    },
    "MysqlProfile": {
      "properties": {
        "hostname": {
          "description": "Required. Hostname for the MySQL connection.",
          "type": "string"
        },
        "port": {
          "description": "Port for the MySQL connection, default value is 3306.",
          "type": "integer",
          "format": "int32"
        },
        "password": {
          "description": "Required. Input only. Password for the MySQL connection.",
          "type": "string"
        },
        "sslConfig": {
          "description": "SSL configuration for the MySQL connection.",
          "$ref": "MysqlSslConfig"
        },
        "username": {
          "description": "Required. Username for the MySQL connection.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "MySQL database profile.",
      "id": "MysqlProfile"
    },
    "ListConnectionProfilesResponse": {
      "type": "object",
      "id": "ListConnectionProfilesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "connectionProfiles": {
          "items": {
            "$ref": "ConnectionProfile"
          },
          "type": "array",
          "description": "List of connection profiles."
        }
      }
    },
    "StaticServiceIpConnectivity": {
      "type": "object",
      "id": "StaticServiceIpConnectivity",
      "properties": {},
      "description": "Static IP address connectivity."
    }
  },
  "revision": "20230517",
  "ownerName": "Google",
  "mtlsRootUrl": "https://datastream.mtls.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "protocol": "rest",
  "documentationLink": "https://cloud.google.com/datastream/",
  "servicePath": "",
  "batchPath": "batch",
  "id": "datastream:v1alpha1",
  "kind": "discovery#restDescription",
  "title": "Datastream API",
  "version": "v1alpha1",
  "canonicalName": "Datastream",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "privateConnections": {
              "resources": {
                "routes": {
                  "methods": {
                    "create": {
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "request": {
                        "$ref": "Route"
                      },
                      "deprecated": true,
                      "parameters": {
                        "requestId": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        },
                        "routeId": {
                          "location": "query",
                          "description": "Required. The Route identifier.",
                          "type": "string"
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. The parent that owns the collection of Routes.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes",
                      "path": "v1alpha1/{+parent}/routes",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "datastream.projects.locations.privateConnections.routes.create",
                      "description": "Use this method to create a route for a private connectivity in a project and location."
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The name of the Route resource to delete.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$",
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "deprecated": true,
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Use this method to delete a route.",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1alpha1/{+name}",
                      "id": "datastream.projects.locations.privateConnections.routes.delete"
                    },
                    "get": {
                      "deprecated": true,
                      "id": "datastream.projects.locations.privateConnections.routes.get",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$",
                          "description": "Required. The name of the Route resource to get."
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}",
                      "description": "Use this method to get details about a route.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Route"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "deprecated": true,
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes",
                      "response": {
                        "$ref": "ListRoutesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "id": "datastream.projects.locations.privateConnections.routes.list",
                      "path": "v1alpha1/{+parent}/routes",
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "type": "integer",
                          "description": "Maximum number of Routes to return. The service may return fewer than this value. If unspecified, at most 50 Routes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                        },
                        "orderBy": {
                          "description": "Order by fields for the result.",
                          "type": "string",
                          "location": "query"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Filter request."
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Page token received from a previous `ListRoutes` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRoutes` must match the call that provided the page token.",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "Required. The parent that owns the collection of Routess."
                        }
                      },
                      "description": "Use this method to list routes created for a private connectivity in a project and location."
                    }
                  },
                  "deprecated": true
                }
              },
              "methods": {
                "list": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "deprecated": true,
                  "response": {
                    "$ref": "ListPrivateConnectionsResponse"
                  },
                  "description": "Use this method to list private connectivity configurations in a project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "orderBy": {
                      "description": "Order by fields for the result.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The parent that owns the collection of private connectivity configurations.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "filter": {
                      "description": "Filter request.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Maximum number of private connectivity configurations to return. If unspecified, at most 50 private connectivity configurations that will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Page token received from a previous `ListPrivateConnections` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPrivateConnections` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/privateConnections",
                  "id": "datastream.projects.locations.privateConnections.list"
                },
                "get": {
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the private connectivity configuration to get.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$"
                    }
                  },
                  "description": "Use this method to get details about a private connectivity configuration.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "deprecated": true,
                  "id": "datastream.projects.locations.privateConnections.get",
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "PrivateConnection"
                  }
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "PrivateConnection"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "deprecated": true,
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/privateConnections",
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The parent that owns the collection of PrivateConnections.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "privateConnectionId": {
                      "description": "Required. The private connectivity identifier.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "id": "datastream.projects.locations.privateConnections.create",
                  "httpMethod": "POST",
                  "description": "Use this method to create a private connectivity configuration."
                },
                "delete": {
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the private connectivity configuration to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$"
                    },
                    "force": {
                      "type": "boolean",
                      "description": "Optional. If set to true, any child routes that belong to this PrivateConnection will also be deleted.",
                      "location": "query"
                    }
                  },
                  "description": "Use this method to delete a private connectivity configuration.",
                  "path": "v1alpha1/{+name}",
                  "deprecated": true,
                  "httpMethod": "DELETE",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "id": "datastream.projects.locations.privateConnections.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "path": "v1alpha1/{+name}:cancel",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "id": "datastream.projects.locations.operations.cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                },
                "delete": {
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "datastream.projects.locations.operations.delete",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation resource to be deleted.",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+name}"
                },
                "list": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "path": "v1alpha1/{+name}/operations",
                  "id": "datastream.projects.locations.operations.list",
                  "parameters": {
                    "pageSize": {
                      "description": "The standard list page size.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations"
                },
                "get": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "datastream.projects.locations.operations.get",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "path": "v1alpha1/{+name}",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation resource."
                    }
                  },
                  "httpMethod": "GET"
                }
              }
            },
            "connectionProfiles": {
              "methods": {
                "discover": {
                  "description": "Use this method to discover a connection profile. The discover API call exposes the data objects and metadata belonging to the profile. Typically, a request returns children data objects under a parent data object that's optionally supplied in the request.",
                  "id": "datastream.projects.locations.connectionProfiles.discover",
                  "path": "v1alpha1/{+parent}/connectionProfiles:discover",
                  "response": {
                    "$ref": "DiscoverConnectionProfileResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles:discover",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent resource of the ConnectionProfile type. Must be in the format `projects/*/locations/*`."
                    }
                  },
                  "request": {
                    "$ref": "DiscoverConnectionProfileRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "deprecated": true
                },
                "patch": {
                  "description": "Use this method to update the parameters of a connection profile.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "path": "v1alpha1/{+name}",
                  "id": "datastream.projects.locations.connectionProfiles.patch",
                  "deprecated": true,
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "parameters": {
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Optional. Only validate the connection profile, but do not update any resources. The default is false.",
                      "location": "query"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "description": "Output only. The resource's name.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$"
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the ConnectionProfile resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten."
                    }
                  }
                },
                "delete": {
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "deprecated": true,
                  "description": "Use this method to delete a connection profile..",
                  "id": "datastream.projects.locations.connectionProfiles.delete",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the connection profile resource to delete.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "response": {
                    "$ref": "ListConnectionProfilesResponse"
                  },
                  "path": "v1alpha1/{+parent}/connectionProfiles",
                  "id": "datastream.projects.locations.connectionProfiles.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "deprecated": true,
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "orderBy": {
                      "location": "query",
                      "description": "Order by fields for the result.",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "Page token received from a previous `ListConnectionProfiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListConnectionProfiles` must match the call that provided the page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filter request."
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Maximum number of connection profiles to return. If unspecified, at most 50 connection profiles will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "format": "int32"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent that owns the collection of connection profiles.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Use this method to list connection profiles created in a project and location."
                },
                "create": {
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "id": "datastream.projects.locations.connectionProfiles.create",
                  "parameters": {
                    "connectionProfileId": {
                      "location": "query",
                      "description": "Required. The connection profile identifier.",
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent that owns the collection of ConnectionProfiles."
                    }
                  },
                  "description": "Use this method to create a connection profile in a project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "deprecated": true,
                  "path": "v1alpha1/{+parent}/connectionProfiles",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "get": {
                  "id": "datastream.projects.locations.connectionProfiles.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the connection profile resource to get.",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ConnectionProfile"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "description": "Use this method to get details about a connection profile.",
                  "httpMethod": "GET",
                  "deprecated": true
                }
              },
              "deprecated": true
            },
            "streams": {
              "methods": {
                "delete": {
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the stream resource to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "description": "Use this method to delete a stream.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "id": "datastream.projects.locations.streams.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "deprecated": true,
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}"
                },
                "patch": {
                  "deprecated": true,
                  "parameters": {
                    "force": {
                      "type": "boolean",
                      "description": "Optional. Execute the update without validating it.",
                      "location": "query"
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the stream resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. Only validate the stream with the changes, without actually updating it. The default is false."
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Output only. The stream's name.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$"
                    }
                  },
                  "description": "Use this method to update the configuration of a stream.",
                  "request": {
                    "$ref": "Stream"
                  },
                  "id": "datastream.projects.locations.streams.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH"
                },
                "list": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datastream.projects.locations.streams.list",
                  "deprecated": true,
                  "parameters": {
                    "orderBy": {
                      "location": "query",
                      "description": "Order by fields for the result.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "Maximum number of streams to return. If unspecified, at most 50 streams will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Page token received from a previous `ListStreams` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListStreams` must match the call that provided the page token.",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "description": "Filter request.",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent that owns the collection of streams."
                    }
                  },
                  "response": {
                    "$ref": "ListStreamsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/streams",
                  "httpMethod": "GET",
                  "description": "Use this method to list streams in a project and location."
                },
                "get": {
                  "httpMethod": "GET",
                  "description": "Use this method to get details about a stream.",
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The name of the stream resource to get.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "location": "path"
                    }
                  },
                  "id": "datastream.projects.locations.streams.get",
                  "deprecated": true,
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "response": {
                    "$ref": "Stream"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "fetchErrors": {
                  "path": "v1alpha1/{+stream}:fetchErrors",
                  "httpMethod": "POST",
                  "id": "datastream.projects.locations.streams.fetchErrors",
                  "request": {
                    "$ref": "FetchErrorsRequest"
                  },
                  "parameterOrder": [
                    "stream"
                  ],
                  "parameters": {
                    "stream": {
                      "location": "path",
                      "required": true,
                      "description": "Name of the Stream resource for which to fetch any errors.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$"
                    }
                  },
                  "description": "Use this method to fetch any errors associated with a stream.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}:fetchErrors",
                  "deprecated": true,
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "deprecated": true,
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Use this method to create a stream.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Stream"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "streamId": {
                      "location": "query",
                      "description": "Required. The stream identifier.",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. Only validate the stream, but do not create any resources. The default is false.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent that owns the collection of streams.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "force": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. Create the stream without validating it."
                    }
                  },
                  "id": "datastream.projects.locations.streams.create",
                  "path": "v1alpha1/{+parent}/streams",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              },
              "resources": {
                "objects": {
                  "methods": {
                    "startBackfillJob": {
                      "httpMethod": "POST",
                      "deprecated": true,
                      "parameterOrder": [
                        "object"
                      ],
                      "parameters": {
                        "object": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the stream object resource to start a backfill job for."
                        }
                      },
                      "id": "datastream.projects.locations.streams.objects.startBackfillJob",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:startBackfillJob",
                      "path": "v1alpha1/{+object}:startBackfillJob",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Starts backfill job for the specified stream object.",
                      "response": {
                        "$ref": "StartBackfillJobResponse"
                      }
                    },
                    "stopBackfillJob": {
                      "id": "datastream.projects.locations.streams.objects.stopBackfillJob",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "object"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:stopBackfillJob",
                      "response": {
                        "$ref": "StopBackfillJobResponse"
                      },
                      "path": "v1alpha1/{+object}:stopBackfillJob",
                      "deprecated": true,
                      "httpMethod": "POST",
                      "parameters": {
                        "object": {
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the stream object resource to stop the backfill job for.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$"
                        }
                      },
                      "description": "Stops the backfill job for the specified stream object."
                    },
                    "get": {
                      "id": "datastream.projects.locations.streams.objects.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1alpha1/{+name}",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}",
                      "response": {
                        "$ref": "StreamObject"
                      },
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the stream object resource to get.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$",
                          "location": "path"
                        }
                      },
                      "deprecated": true,
                      "description": "Use this method to get details about a stream object."
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageSize": {
                          "description": "Maximum number of objects to return. Default is 50. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. The parent stream that owns the collection of objects.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Page token received from a previous `ListStreamObjectsRequest` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListStreamObjectsRequest` must match the call that provided the page token.",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "ListStreamObjectsResponse"
                      },
                      "httpMethod": "GET",
                      "description": "Use this method to list the objects of a specific stream.",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1alpha1/{+parent}/objects",
                      "id": "datastream.projects.locations.streams.objects.list",
                      "deprecated": true
                    }
                  },
                  "deprecated": true
                }
              }
            }
          },
          "methods": {
            "list": {
              "id": "datastream.projects.locations.list",
              "path": "v1alpha1/{+name}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "parameters": {
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "fetchStaticIps": {
              "httpMethod": "GET",
              "id": "datastream.projects.locations.fetchStaticIps",
              "description": "The FetchStaticIps API call exposes the static IP addresses used by Datastream.",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name resource of the Response type. Must be in the format `projects/*/locations/*`.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "Maximum number of Ips to return, will likely not be specified."
                },
                "pageToken": {
                  "location": "query",
                  "description": "A page token, received from a previous `ListStaticIps` call. will likely not be specified.",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}:fetchStaticIps",
              "deprecated": true,
              "response": {
                "$ref": "FetchStaticIpsResponse"
              },
              "path": "v1alpha1/{+name}:fetchStaticIps",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "get": {
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Resource name for the location.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "id": "datastream.projects.locations.get",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "response": {
                "$ref": "Location"
              },
              "description": "Gets information about a location."
            }
          }
        }
      }
    }
  },
  "version_module": true,
  "parameters": {
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response."
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    }
  },
  "discoveryVersion": "v1",
  "description": "",
  "rootUrl": "https://datastream.googleapis.com/"
}

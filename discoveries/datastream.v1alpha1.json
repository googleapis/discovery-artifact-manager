{
  "documentationLink": "https://cloud.google.com/datastream/",
  "batchPath": "batch",
  "discoveryVersion": "v1",
  "schemas": {
    "VpcPeeringConfig": {
      "properties": {
        "subnet": {
          "type": "string",
          "description": "Required. A free subnet for peering. (CIDR of /29) TODO(b/172995841) add validators."
        },
        "vpcName": {
          "type": "string",
          "description": "Required. fully qualified name of the VPC Datastream will peer to."
        }
      },
      "id": "VpcPeeringConfig",
      "type": "object",
      "description": "The VPC Peering configuration is used to create VPC peering between Datastream and the consumer's VPC."
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running."
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean",
          "readOnly": true
        },
        "validationResult": {
          "$ref": "ValidationResult",
          "readOnly": true,
          "description": "Output only. Results of executed validations if there are any."
        },
        "statusMessage": {
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true
        }
      },
      "description": "Represents the metadata of the long-running operation."
    },
    "DiscoverConnectionProfileRequest": {
      "type": "object",
      "id": "DiscoverConnectionProfileRequest",
      "properties": {
        "connectionProfile": {
          "$ref": "ConnectionProfile",
          "description": "An ad-hoc ConnectionProfile configuration."
        },
        "recursive": {
          "type": "boolean",
          "description": "Whether to retrieve the full hierarchy of data objects (TRUE) or only the current level (FALSE)."
        },
        "mysqlRdbms": {
          "$ref": "MysqlRdbms",
          "description": "MySQL RDBMS to enrich with child data objects and metadata."
        },
        "recursionDepth": {
          "description": "The number of hierarchy levels below the current level to be retrieved.",
          "type": "integer",
          "format": "int32"
        },
        "connectionProfileName": {
          "type": "string",
          "description": "A reference to an existing ConnectionProfile."
        },
        "oracleRdbms": {
          "description": "Oracle RDBMS to enrich with child data objects and metadata.",
          "$ref": "OracleRdbms"
        }
      },
      "description": "Request message for 'discover' ConnectionProfile request."
    },
    "MysqlDatabase": {
      "properties": {
        "databaseName": {
          "description": "Database name.",
          "type": "string"
        },
        "mysqlTables": {
          "items": {
            "$ref": "MysqlTable"
          },
          "type": "array",
          "description": "Tables in the database."
        }
      },
      "description": "MySQL database.",
      "type": "object",
      "id": "MysqlDatabase"
    },
    "ListStreamsResponse": {
      "id": "ListStreamsResponse",
      "type": "object",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "streams": {
          "description": "List of streams",
          "type": "array",
          "items": {
            "$ref": "Stream"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "MysqlRdbms": {
      "type": "object",
      "description": "MySQL database structure",
      "id": "MysqlRdbms",
      "properties": {
        "mysqlDatabases": {
          "type": "array",
          "description": "Mysql databases on the server",
          "items": {
            "$ref": "MysqlDatabase"
          }
        }
      }
    },
    "Stream": {
      "type": "object",
      "properties": {
        "updateTime": {
          "description": "Output only. The last update time of the stream.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "backfillAll": {
          "$ref": "BackfillAllStrategy",
          "description": "Automatically backfill objects included in the stream source configuration. Specific objects can be excluded."
        },
        "state": {
          "enumDescriptions": [
            "Unspecified stream state.",
            "The stream has been created.",
            "The stream is running.",
            "The stream is paused.",
            "The stream is in maintenance mode. Updates are rejected on the resource in this state.",
            "The stream is experiencing an error that is preventing data from being streamed.",
            "The stream has experienced a terminal failure.",
            "The stream is starting, but not yet running.",
            "The Stream is no longer reading new events, but still writing events in the buffer."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "PAUSED",
            "MAINTENANCE",
            "FAILED",
            "FAILED_PERMANENTLY",
            "STARTING",
            "DRAINING"
          ],
          "type": "string",
          "description": "The state of the stream."
        },
        "destinationConfig": {
          "description": "Required. Destination connection profile configuration.",
          "$ref": "DestinationConfig"
        },
        "createTime": {
          "description": "Output only. The creation time of the stream.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "sourceConfig": {
          "description": "Required. Source connection profile configuration.",
          "$ref": "SourceConfig"
        },
        "errors": {
          "description": "Output only. Errors on the Stream.",
          "readOnly": true,
          "items": {
            "$ref": "Error"
          },
          "type": "array"
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "backfillNone": {
          "description": "Do not automatically backfill any objects.",
          "$ref": "BackfillNoneStrategy"
        },
        "name": {
          "description": "Output only. The stream's name.",
          "type": "string",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels."
        }
      },
      "id": "Stream"
    },
    "FetchErrorsRequest": {
      "description": "Request message for 'FetchErrors' request.",
      "id": "FetchErrorsRequest",
      "properties": {},
      "type": "object"
    },
    "SourceConfig": {
      "description": "The configuration of the stream source.",
      "type": "object",
      "properties": {
        "oracleSourceConfig": {
          "description": "Oracle data source configuration",
          "$ref": "OracleSourceConfig"
        },
        "mysqlSourceConfig": {
          "description": "MySQL data source configuration",
          "$ref": "MysqlSourceConfig"
        },
        "sourceConnectionProfileName": {
          "description": "Required. Source connection profile identifier.",
          "type": "string"
        }
      },
      "id": "SourceConfig"
    },
    "MysqlSslConfig": {
      "id": "MysqlSslConfig",
      "description": "MySQL SSL configuration information.",
      "properties": {
        "clientCertificateSet": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Indicates whether the client_certificate field is set."
        },
        "clientKey": {
          "type": "string",
          "description": "Input only. PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' and the 'ca_certificate' fields are mandatory."
        },
        "caCertificate": {
          "description": "Input only. PEM-encoded certificate of the CA that signed the source database server's certificate.",
          "type": "string"
        },
        "clientCertificate": {
          "description": "Input only. PEM-encoded certificate that will be used by the replica to authenticate against the source database server. If this field is used then the 'client_key' and the 'ca_certificate' fields are mandatory.",
          "type": "string"
        },
        "caCertificateSet": {
          "description": "Output only. Indicates whether the ca_certificate field is set.",
          "readOnly": true,
          "type": "boolean"
        },
        "clientKeySet": {
          "description": "Output only. Indicates whether the client_key field is set.",
          "type": "boolean",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "FetchStaticIpsResponse": {
      "properties": {
        "staticIps": {
          "items": {
            "type": "string"
          },
          "description": "list of static ips by account",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "description": "Response message for a 'FetchStaticIps' response.",
      "id": "FetchStaticIpsResponse",
      "type": "object"
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {}
    },
    "ValidationMessage": {
      "type": "object",
      "description": "Represent user-facing validation result message.",
      "id": "ValidationMessage",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Additional metadata related to the result.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "level": {
          "enum": [
            "LEVEL_UNSPECIFIED",
            "WARNING",
            "ERROR"
          ],
          "type": "string",
          "description": "Message severity level (warning or error).",
          "enumDescriptions": [
            "Unspecified level.",
            "Potentially cause issues with the Stream.",
            "Definitely cause issues with the Stream."
          ]
        },
        "code": {
          "description": "A custom code identifying this specific message.",
          "type": "string"
        },
        "message": {
          "type": "string",
          "description": "The result of the validation."
        }
      }
    },
    "StaticServiceIpConnectivity": {
      "type": "object",
      "id": "StaticServiceIpConnectivity",
      "properties": {},
      "description": "Static IP address connectivity."
    },
    "Route": {
      "properties": {
        "destinationAddress": {
          "type": "string",
          "description": "Required. Destination address for connection"
        },
        "labels": {
          "type": "object",
          "description": "Labels.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The create time of the resource.",
          "format": "google-datetime"
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The update time of the resource."
        },
        "destinationPort": {
          "type": "integer",
          "format": "int32",
          "description": "Destination port for connection"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource's name."
        }
      },
      "description": "The Route resource is the child of the PrivateConnection resource. It used to define a route for a PrivateConnection setup.",
      "id": "Route",
      "type": "object"
    },
    "PrivateConnectivity": {
      "id": "PrivateConnectivity",
      "description": "Private Connectivity",
      "type": "object",
      "properties": {
        "privateConnectionName": {
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        }
      },
      "description": "A resource that represents Google Cloud Platform location."
    },
    "BackfillAllStrategy": {
      "description": "Backfill strategy to automatically backfill the Stream's objects. Specific objects can be excluded.",
      "properties": {
        "mysqlExcludedObjects": {
          "$ref": "MysqlRdbms",
          "description": "MySQL data source objects to avoid backfilling."
        },
        "oracleExcludedObjects": {
          "description": "Oracle data source objects to avoid backfilling.",
          "$ref": "OracleRdbms"
        }
      },
      "type": "object",
      "id": "BackfillAllStrategy"
    },
    "ListPrivateConnectionsResponse": {
      "id": "ListPrivateConnectionsResponse",
      "type": "object",
      "properties": {
        "privateConnections": {
          "items": {
            "$ref": "PrivateConnection"
          },
          "description": "List of private connectivity configurations.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      }
    },
    "OracleColumn": {
      "id": "OracleColumn",
      "type": "object",
      "description": "Oracle Column.",
      "properties": {
        "nullable": {
          "description": "Whether or not the column can accept a null value.",
          "type": "boolean"
        },
        "columnName": {
          "type": "string",
          "description": "Column name."
        },
        "precision": {
          "description": "Column precision.",
          "format": "int32",
          "type": "integer"
        },
        "scale": {
          "description": "Column scale.",
          "format": "int32",
          "type": "integer"
        },
        "ordinalPosition": {
          "format": "int32",
          "type": "integer",
          "description": "The ordinal position of the column in the table."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Column length."
        },
        "encoding": {
          "description": "Column encoding.",
          "type": "string"
        },
        "dataType": {
          "type": "string",
          "description": "The Oracle data type."
        },
        "primaryKey": {
          "description": "Whether or not the column represents a primary key.",
          "type": "boolean"
        }
      }
    },
    "MysqlColumn": {
      "type": "object",
      "description": "MySQL Column.",
      "id": "MysqlColumn",
      "properties": {
        "ordinalPosition": {
          "description": "The ordinal position of the column in the table.",
          "format": "int32",
          "type": "integer"
        },
        "dataType": {
          "type": "string",
          "description": "The MySQL data type. Full data types list can be found here: https://dev.mysql.com/doc/refman/8.0/en/data-types.html"
        },
        "columnName": {
          "type": "string",
          "description": "Column name."
        },
        "length": {
          "description": "Column length.",
          "format": "int32",
          "type": "integer"
        },
        "primaryKey": {
          "type": "boolean",
          "description": "Whether or not the column represents a primary key."
        },
        "collation": {
          "description": "Column collation.",
          "type": "string"
        },
        "nullable": {
          "description": "Whether or not the column can accept a null value.",
          "type": "boolean"
        }
      }
    },
    "OracleTable": {
      "properties": {
        "oracleColumns": {
          "description": "Oracle columns in the schema. When unspecified as part of inclue/exclude lists, includes/excludes everything.",
          "type": "array",
          "items": {
            "$ref": "OracleColumn"
          }
        },
        "tableName": {
          "type": "string",
          "description": "Table name."
        }
      },
      "id": "OracleTable",
      "type": "object",
      "description": "Oracle table."
    },
    "ValidationResult": {
      "id": "ValidationResult",
      "properties": {
        "validations": {
          "description": "A list of validations (includes both executed as well as not executed validations).",
          "items": {
            "$ref": "Validation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Contains the current validation results."
    },
    "NoConnectivitySettings": {
      "id": "NoConnectivitySettings",
      "properties": {},
      "type": "object",
      "description": "No connectivity settings."
    },
    "MysqlSourceConfig": {
      "description": "MySQL source configuration",
      "properties": {
        "rejectlist": {
          "$ref": "MysqlRdbms",
          "description": "MySQL objects to exclude from the stream."
        },
        "allowlist": {
          "$ref": "MysqlRdbms",
          "description": "MySQL objects to retrieve from the source."
        }
      },
      "id": "MysqlSourceConfig",
      "type": "object"
    },
    "Error": {
      "properties": {
        "errorTime": {
          "description": "The time when the error occurred.",
          "type": "string",
          "format": "google-datetime"
        },
        "reason": {
          "type": "string",
          "description": "A title that explains the reason for the error."
        },
        "details": {
          "description": "Additional information about the error.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "errorUuid": {
          "description": "A unique identifier for this specific error, allowing it to be traced throughout the system in logs and API responses.",
          "type": "string"
        },
        "message": {
          "description": "A message containing more information about the error that occurred.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Error",
      "description": "Represent a user-facing Error."
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        }
      },
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "AvroFileFormat": {
      "description": "AVRO file format configuration.",
      "properties": {},
      "id": "AvroFileFormat",
      "type": "object"
    },
    "Operation": {
      "id": "Operation",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object"
    },
    "OracleSourceConfig": {
      "description": "Oracle data source configuration",
      "type": "object",
      "id": "OracleSourceConfig",
      "properties": {
        "allowlist": {
          "$ref": "OracleRdbms",
          "description": "Oracle objects to include in the stream."
        },
        "rejectlist": {
          "description": "Oracle objects to exclude from the stream.",
          "$ref": "OracleRdbms"
        }
      }
    },
    "FetchErrorsResponse": {
      "type": "object",
      "description": "Response message for a 'FetchErrors' response.",
      "id": "FetchErrorsResponse",
      "properties": {
        "errors": {
          "items": {
            "$ref": "Error"
          },
          "type": "array",
          "description": "The list of errors on the Stream."
        }
      }
    },
    "OracleRdbms": {
      "description": "Oracle database structure.",
      "id": "OracleRdbms",
      "type": "object",
      "properties": {
        "oracleSchemas": {
          "items": {
            "$ref": "OracleSchema"
          },
          "type": "array",
          "description": "Oracle schemas/databases in the database server."
        }
      }
    },
    "GcsProfile": {
      "description": "Cloud Storage bucket profile.",
      "properties": {
        "bucketName": {
          "description": "Required. The full project and resource path for Cloud Storage bucket including the name.",
          "type": "string"
        },
        "rootPath": {
          "type": "string",
          "description": "The root path inside the Cloud Storage bucket."
        }
      },
      "id": "GcsProfile",
      "type": "object"
    },
    "ForwardSshTunnelConnectivity": {
      "description": "Forward SSH Tunnel connectivity.",
      "type": "object",
      "id": "ForwardSshTunnelConnectivity",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port for the SSH tunnel, default value is 22."
        },
        "hostname": {
          "description": "Required. Hostname for the SSH tunnel.",
          "type": "string"
        },
        "privateKey": {
          "description": "Input only. SSH private key.",
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "Input only. SSH password."
        },
        "username": {
          "description": "Required. Username for the SSH tunnel.",
          "type": "string"
        }
      }
    },
    "MysqlProfile": {
      "type": "object",
      "properties": {
        "sslConfig": {
          "$ref": "MysqlSslConfig",
          "description": "SSL configuration for the MySQL connection."
        },
        "hostname": {
          "type": "string",
          "description": "Required. Hostname for the MySQL connection."
        },
        "password": {
          "type": "string",
          "description": "Required. Input only. Password for the MySQL connection."
        },
        "port": {
          "format": "int32",
          "type": "integer",
          "description": "Port for the MySQL connection, default value is 3306."
        },
        "username": {
          "description": "Required. Username for the MySQL connection.",
          "type": "string"
        }
      },
      "description": "MySQL database profile.",
      "id": "MysqlProfile"
    },
    "ListOperationsResponse": {
      "type": "object",
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      }
    },
    "DestinationConfig": {
      "properties": {
        "destinationConnectionProfileName": {
          "description": "Required. Destination connection profile identifier.",
          "type": "string"
        },
        "gcsDestinationConfig": {
          "$ref": "GcsDestinationConfig"
        }
      },
      "type": "object",
      "id": "DestinationConfig",
      "description": "The configuration of the stream destination."
    },
    "OracleSchema": {
      "description": "Oracle schema.",
      "type": "object",
      "id": "OracleSchema",
      "properties": {
        "schemaName": {
          "description": "Schema name.",
          "type": "string"
        },
        "oracleTables": {
          "description": "Tables in the schema.",
          "items": {
            "$ref": "OracleTable"
          },
          "type": "array"
        }
      }
    },
    "JsonFileFormat": {
      "id": "JsonFileFormat",
      "properties": {
        "schemaFileFormat": {
          "enum": [
            "SCHEMA_FILE_FORMAT_UNSPECIFIED",
            "NO_SCHEMA_FILE",
            "AVRO_SCHEMA_FILE"
          ],
          "type": "string",
          "description": "The schema file format along JSON data files.",
          "enumDescriptions": [
            "Unspecified schema file format.",
            "Do not attach schema file.",
            "Avro schema format."
          ]
        },
        "compression": {
          "description": "Compression of the loaded JSON file.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified json file compression.",
            "Do not compress JSON file.",
            "Gzip compression."
          ],
          "enum": [
            "JSON_COMPRESSION_UNSPECIFIED",
            "NO_COMPRESSION",
            "GZIP"
          ]
        }
      },
      "type": "object",
      "description": "JSON file format configuration."
    },
    "DiscoverConnectionProfileResponse": {
      "type": "object",
      "properties": {
        "oracleRdbms": {
          "$ref": "OracleRdbms",
          "description": "Enriched Oracle RDBMS object."
        },
        "mysqlRdbms": {
          "$ref": "MysqlRdbms",
          "description": "Enriched MySQL RDBMS object."
        }
      },
      "id": "DiscoverConnectionProfileResponse"
    },
    "Validation": {
      "id": "Validation",
      "type": "object",
      "properties": {
        "message": {
          "type": "array",
          "items": {
            "$ref": "ValidationMessage"
          },
          "description": "Messages reflecting the validation results."
        },
        "code": {
          "type": "string",
          "description": "A custom code identifying this validation."
        },
        "description": {
          "type": "string",
          "description": "A short description of the validation."
        },
        "status": {
          "enum": [
            "STATUS_UNSPECIFIED",
            "NOT_EXECUTED",
            "FAILED",
            "PASSED"
          ],
          "enumDescriptions": [
            "Unspecified status.",
            "Validation did not execute.",
            "Validation failed.",
            "Validation passed."
          ],
          "type": "string",
          "description": "Validation execution status."
        }
      }
    },
    "BackfillNoneStrategy": {
      "properties": {},
      "description": "Backfill strategy to disable automatic backfill for the Stream's objects.",
      "type": "object",
      "id": "BackfillNoneStrategy"
    },
    "ListLocationsResponse": {
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations."
    },
    "PrivateConnection": {
      "type": "object",
      "id": "PrivateConnection",
      "description": "The PrivateConnection resource is used to establish private connectivity between Datastream and a customer's network.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The create time of the resource."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource's name.",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The update time of the resource.",
          "type": "string"
        },
        "state": {
          "description": "Output only. The state of the Private Connection.",
          "enumDescriptions": [
            "",
            "The private connection is in creation state - creating resources.",
            "The private connection has been created with all of it's resources.",
            "The private connection creation has failed.",
            "The private connection is being deleted.",
            "Delete request has failed, resource is in invalid state."
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "FAILED",
            "DELETING",
            "FAILED_TO_DELETE"
          ]
        },
        "error": {
          "description": "Output only. In case of error, the details of the error in a user-friendly format.",
          "readOnly": true,
          "$ref": "Error"
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels."
        },
        "vpcPeeringConfig": {
          "description": "VPC Peering Config",
          "$ref": "VpcPeeringConfig"
        }
      }
    },
    "MysqlTable": {
      "description": "MySQL table.",
      "properties": {
        "tableName": {
          "description": "Table name.",
          "type": "string"
        },
        "mysqlColumns": {
          "type": "array",
          "items": {
            "$ref": "MysqlColumn"
          },
          "description": "MySQL columns in the database. When unspecified as part of include/exclude lists, includes/excludes everything."
        }
      },
      "id": "MysqlTable",
      "type": "object"
    },
    "Empty": {
      "type": "object",
      "id": "Empty",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "GcsDestinationConfig": {
      "properties": {
        "avroFileFormat": {
          "description": "AVRO file format configuration.",
          "$ref": "AvroFileFormat"
        },
        "fileRotationMb": {
          "description": "The maximum file size to be saved in the bucket.",
          "format": "int32",
          "type": "integer"
        },
        "jsonFileFormat": {
          "$ref": "JsonFileFormat",
          "description": "JSON file format configuration."
        },
        "fileRotationInterval": {
          "format": "google-duration",
          "description": "The maximum duration for which new events are added before a file is closed and a new file is created.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "Path inside the Cloud Storage bucket to write data to."
        },
        "gcsFileFormat": {
          "enumDescriptions": [
            "Unspecified Cloud Storage file format.",
            "Avro file format"
          ],
          "description": "File format that data should be written in. Deprecated field (b/169501737) - use file_format instead.",
          "type": "string",
          "enum": [
            "GCS_FILE_FORMAT_UNSPECIFIED",
            "AVRO"
          ]
        }
      },
      "id": "GcsDestinationConfig",
      "description": "Google Cloud Storage destination configuration",
      "type": "object"
    },
    "OracleProfile": {
      "description": "Oracle database profile.",
      "type": "object",
      "properties": {
        "connectionAttributes": {
          "description": "Connection string attributes",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "port": {
          "format": "int32",
          "type": "integer",
          "description": "Port for the Oracle connection, default value is 1521."
        },
        "hostname": {
          "description": "Required. Hostname for the Oracle connection.",
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "Required. Password for the Oracle connection."
        },
        "username": {
          "type": "string",
          "description": "Required. Username for the Oracle connection."
        },
        "databaseService": {
          "description": "Required. Database for the Oracle connection.",
          "type": "string"
        }
      },
      "id": "OracleProfile"
    },
    "ListRoutesResponse": {
      "description": "route list response",
      "id": "ListRoutesResponse",
      "type": "object",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "routes": {
          "description": "List of Routes.",
          "items": {
            "$ref": "Route"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "ConnectionProfile": {
      "id": "ConnectionProfile",
      "properties": {
        "staticServiceIpConnectivity": {
          "$ref": "StaticServiceIpConnectivity",
          "description": "Static Service IP connectivity."
        },
        "oracleProfile": {
          "description": "Oracle ConnectionProfile configuration.",
          "$ref": "OracleProfile"
        },
        "labels": {
          "description": "Labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "forwardSshConnectivity": {
          "$ref": "ForwardSshTunnelConnectivity",
          "description": "Forward SSH tunnel connectivity."
        },
        "noConnectivity": {
          "$ref": "NoConnectivitySettings",
          "description": "No connectivity option chosen."
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "privateConnectivity": {
          "description": "Private connectivity.",
          "$ref": "PrivateConnectivity"
        },
        "mysqlProfile": {
          "$ref": "MysqlProfile",
          "description": "MySQL ConnectionProfile configuration."
        },
        "createTime": {
          "description": "Output only. The create time of the resource.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The update time of the resource.",
          "format": "google-datetime"
        },
        "gcsProfile": {
          "description": "Cloud Storage ConnectionProfile configuration.",
          "$ref": "GcsProfile"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource's name."
        }
      },
      "type": "object"
    },
    "ListConnectionProfilesResponse": {
      "id": "ListConnectionProfilesResponse",
      "type": "object",
      "properties": {
        "connectionProfiles": {
          "items": {
            "$ref": "ConnectionProfile"
          },
          "description": "List of connection profiles.",
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    }
  },
  "rootUrl": "https://datastream.googleapis.com/",
  "mtlsRootUrl": "https://datastream.mtls.googleapis.com/",
  "name": "datastream",
  "canonicalName": "Datastream",
  "parameters": {
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ]
    }
  },
  "protocol": "rest",
  "ownerDomain": "google.com",
  "title": "Datastream API",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "servicePath": "",
  "id": "datastream:v1alpha1",
  "revision": "20211018",
  "version": "v1alpha1",
  "description": "",
  "fullyEncodeReservedExpansion": true,
  "basePath": "",
  "kind": "discovery#restDescription",
  "baseUrl": "https://datastream.googleapis.com/",
  "version_module": true,
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "fetchStaticIps": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "id": "datastream.projects.locations.fetchStaticIps",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}:fetchStaticIps",
              "path": "v1alpha1/{+name}:fetchStaticIps",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "A page token, received from a previous `ListStaticIps` call. will likely not be specified.",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "Maximum number of Ips to return, will likely not be specified."
                },
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name resource of the Response type. Must be in the format `projects/*/locations/*`."
                }
              },
              "response": {
                "$ref": "FetchStaticIpsResponse"
              },
              "description": "The FetchStaticIps API call exposes the static ips used by Datastream. Typically, a request returns children data objects under a parent data object that's optionally supplied in the request."
            },
            "get": {
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "description": "Gets information about a location.",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              },
              "path": "v1alpha1/{+name}",
              "id": "datastream.projects.locations.get",
              "response": {
                "$ref": "Location"
              }
            },
            "list": {
              "id": "datastream.projects.locations.list",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string"
                }
              },
              "description": "Lists information about the supported locations for this service.",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "path": "v1alpha1/{+name}/locations",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ]
            }
          },
          "resources": {
            "streams": {
              "methods": {
                "patch": {
                  "description": "Use this method to update the configuration of a stream.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "parameters": {
                    "force": {
                      "description": "Optional. Execute the update without validating it.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the stream resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. Only validate the stream with the changes, without actually updating it. The default is false.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "description": "Output only. The stream's name.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Stream"
                  },
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "datastream.projects.locations.streams.patch",
                  "httpMethod": "PATCH"
                },
                "create": {
                  "path": "v1alpha1/{+parent}/streams",
                  "request": {
                    "$ref": "Stream"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "streamId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The stream identifier."
                    },
                    "parent": {
                      "description": "Required. The parent that owns the collection of streams.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "force": {
                      "type": "boolean",
                      "description": "Optional. Create the stream without validating it.",
                      "location": "query"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. Only validate the stream, but do not create any resources. The default is false."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to create a stream.",
                  "id": "datastream.projects.locations.streams.create",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams"
                },
                "fetchErrors": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Use this method to fetch any errors associated with a stream.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}:fetchErrors",
                  "path": "v1alpha1/{+stream}:fetchErrors",
                  "httpMethod": "POST",
                  "parameters": {
                    "stream": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "description": "Name of the Stream resource for which to fetch any errors.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "stream"
                  ],
                  "request": {
                    "$ref": "FetchErrorsRequest"
                  },
                  "id": "datastream.projects.locations.streams.fetchErrors"
                },
                "list": {
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "Page token received from a previous `ListStreams` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListStreams` must match the call that provided the page token.",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. The parent that owns the collection of streams.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Order by fields for the result.",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of streams to return. If unspecified, at most 50 streams will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    },
                    "filter": {
                      "description": "Filter request.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams",
                  "response": {
                    "$ref": "ListStreamsResponse"
                  },
                  "path": "v1alpha1/{+parent}/streams",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Use this method to list streams in a project and location.",
                  "id": "datastream.projects.locations.streams.list"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Stream"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the stream resource to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "location": "path"
                    }
                  },
                  "id": "datastream.projects.locations.streams.get",
                  "description": "Use this method to get details about a stream.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the stream resource to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Use this method to delete a stream.",
                  "id": "datastream.projects.locations.streams.delete"
                }
              }
            },
            "operations": {
              "methods": {
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "path": "v1alpha1/{+name}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "datastream.projects.locations.operations.list",
                  "parameters": {
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "location": "path"
                    },
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    }
                  }
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "datastream.projects.locations.operations.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+name}"
                },
                "delete": {
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1alpha1/{+name}",
                  "id": "datastream.projects.locations.operations.delete",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be deleted.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE"
                },
                "cancel": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "datastream.projects.locations.operations.cancel",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}:cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "privateConnections": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListPrivateConnectionsResponse"
                  },
                  "path": "v1alpha1/{+parent}/privateConnections",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "description": "Use this method to list private connectivity configurations in a project and location.",
                  "id": "datastream.projects.locations.privateConnections.list",
                  "parameters": {
                    "pageToken": {
                      "description": "Page token received from a previous `ListPrivateConnections` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPrivateConnections` must match the call that provided the page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Maximum number of private connectivity configurations to return. If unspecified, at most 50 private connectivity configurations that will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    },
                    "filter": {
                      "description": "Filter request.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent that owns the collection of private connectivity configurations.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Order by fields for the result.",
                      "type": "string"
                    }
                  }
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "id": "datastream.projects.locations.privateConnections.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "PrivateConnection"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Use this method to create a private connectivity configuration.",
                  "path": "v1alpha1/{+parent}/privateConnections",
                  "parameters": {
                    "privateConnectionId": {
                      "location": "query",
                      "description": "Required. The private connectivity identifier.",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent that owns the collection of PrivateConnections.",
                      "location": "path"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  }
                },
                "get": {
                  "response": {
                    "$ref": "PrivateConnection"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "description": "Required. The name of the private connectivity configuration to get.",
                      "required": true
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "path": "v1alpha1/{+name}",
                  "description": "Use this method to get details about a private connectivity configuration.",
                  "httpMethod": "GET",
                  "id": "datastream.projects.locations.privateConnections.get"
                },
                "delete": {
                  "id": "datastream.projects.locations.privateConnections.delete",
                  "description": "Use this method to delete a private connectivity configuration.",
                  "parameters": {
                    "force": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. If set to true, any child routes that belong to this PrivateConnection will also be deleted."
                    },
                    "name": {
                      "description": "Required. The name of the private connectivity configuration to delete.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    }
                  },
                  "httpMethod": "DELETE",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                }
              },
              "resources": {
                "routes": {
                  "methods": {
                    "get": {
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$",
                          "type": "string",
                          "description": "Required. The name of the Route resource to get.",
                          "location": "path",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "Route"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Use this method to get details about a route.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1alpha1/{+name}",
                      "id": "datastream.projects.locations.privateConnections.routes.get",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}"
                    },
                    "list": {
                      "id": "datastream.projects.locations.privateConnections.routes.list",
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "Page token received from a previous `ListRoutes` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRoutes` must match the call that provided the page token.",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                          "type": "string",
                          "description": "Required. The parent that owns the collection of Routess.",
                          "location": "path"
                        },
                        "orderBy": {
                          "type": "string",
                          "description": "Order by fields for the result.",
                          "location": "query"
                        },
                        "filter": {
                          "location": "query",
                          "description": "Filter request.",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Maximum number of Routes to return. The service may return fewer than this value. If unspecified, at most 50 Routes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "type": "integer",
                          "location": "query",
                          "format": "int32"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1alpha1/{+parent}/routes",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes",
                      "description": "Use this method to list routes created for a private connectivity in a project and location.",
                      "response": {
                        "$ref": "ListRoutesResponse"
                      }
                    },
                    "create": {
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1alpha1/{+parent}/routes",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "Route"
                      },
                      "description": "Use this method to create a route for a private connectivity in a project and location.",
                      "parameters": {
                        "requestId": {
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string",
                          "location": "query"
                        },
                        "routeId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. The Route identifier."
                        },
                        "parent": {
                          "type": "string",
                          "description": "Required. The parent that owns the collection of Routes.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "id": "datastream.projects.locations.privateConnections.routes.create"
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "requestId": {
                          "location": "query",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$",
                          "description": "Required. The name of the Route resource to delete.",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1alpha1/{+name}",
                      "description": "Use this method to delete a route.",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}",
                      "id": "datastream.projects.locations.privateConnections.routes.delete"
                    }
                  }
                }
              }
            },
            "connectionProfiles": {
              "methods": {
                "list": {
                  "id": "datastream.projects.locations.connectionProfiles.list",
                  "response": {
                    "$ref": "ListConnectionProfilesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "path": "v1alpha1/{+parent}/connectionProfiles",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "description": "Page token received from a previous `ListConnectionProfiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListConnectionProfiles` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Maximum number of connection profiles to return. If unspecified, at most 50 connection profiles will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filter request."
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Order by fields for the result.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The parent that owns the collection of connection profiles.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "description": "Use this method to list connection profiles created in a project and location.",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "description": "Use this method to delete a connection profile..",
                  "path": "v1alpha1/{+name}",
                  "id": "datastream.projects.locations.connectionProfiles.delete",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "description": "Required. The name of the connection profile resource to delete.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "discover": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent resource of the ConnectionProfile type. Must be in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles:discover",
                  "id": "datastream.projects.locations.connectionProfiles.discover",
                  "request": {
                    "$ref": "DiscoverConnectionProfileRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to discover a connection profile. The discover API call exposes the data objects and metadata belonging to the profile. Typically, a request returns children data objects under a parent data object that's optionally supplied in the request.",
                  "response": {
                    "$ref": "DiscoverConnectionProfileResponse"
                  },
                  "path": "v1alpha1/{+parent}/connectionProfiles:discover"
                },
                "create": {
                  "id": "datastream.projects.locations.connectionProfiles.create",
                  "httpMethod": "POST",
                  "description": "Use this method to create a connection profile in a project and location.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "connectionProfileId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The connection profile identifier."
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent that owns the collection of ConnectionProfiles.",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+parent}/connectionProfiles"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to get details about a connection profile.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the connection profile resource to get.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "ConnectionProfile"
                  },
                  "id": "datastream.projects.locations.connectionProfiles.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "description": "Use this method to update the parameters of a connection profile.",
                  "httpMethod": "PATCH",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "path": "v1alpha1/{+name}",
                  "id": "datastream.projects.locations.connectionProfiles.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the ConnectionProfile resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "validateOnly": {
                      "description": "Optional. Only validate the connection profile, but do not update any resources. The default is false.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Output only. The resource's name.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "ownerName": "Google"
}

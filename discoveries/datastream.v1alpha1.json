{
  "ownerName": "Google",
  "documentationLink": "https://cloud.google.com/datastream/",
  "id": "datastream:v1alpha1",
  "kind": "discovery#restDescription",
  "parameters": {
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "location": "query"
    }
  },
  "description": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "discoveryVersion": "v1",
  "servicePath": "",
  "title": "Datastream API",
  "revision": "20211026",
  "mtlsRootUrl": "https://datastream.mtls.googleapis.com/",
  "version": "v1alpha1",
  "schemas": {
    "GcsDestinationConfig": {
      "id": "GcsDestinationConfig",
      "description": "Google Cloud Storage destination configuration",
      "properties": {
        "fileRotationInterval": {
          "description": "The maximum duration for which new events are added before a file is closed and a new file is created.",
          "type": "string",
          "format": "google-duration"
        },
        "gcsFileFormat": {
          "enumDescriptions": [
            "Unspecified Cloud Storage file format.",
            "Avro file format"
          ],
          "enum": [
            "GCS_FILE_FORMAT_UNSPECIFIED",
            "AVRO"
          ],
          "type": "string",
          "description": "File format that data should be written in. Deprecated field (b/169501737) - use file_format instead."
        },
        "path": {
          "type": "string",
          "description": "Path inside the Cloud Storage bucket to write data to."
        },
        "avroFileFormat": {
          "$ref": "AvroFileFormat",
          "description": "AVRO file format configuration."
        },
        "jsonFileFormat": {
          "$ref": "JsonFileFormat",
          "description": "JSON file format configuration."
        },
        "fileRotationMb": {
          "description": "The maximum file size to be saved in the bucket.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "OracleSourceConfig": {
      "type": "object",
      "description": "Oracle data source configuration",
      "id": "OracleSourceConfig",
      "properties": {
        "allowlist": {
          "$ref": "OracleRdbms",
          "description": "Oracle objects to include in the stream."
        },
        "rejectlist": {
          "description": "Oracle objects to exclude from the stream.",
          "$ref": "OracleRdbms"
        }
      }
    },
    "BackfillNoneStrategy": {
      "properties": {},
      "id": "BackfillNoneStrategy",
      "description": "Backfill strategy to disable automatic backfill for the Stream's objects.",
      "type": "object"
    },
    "MysqlColumn": {
      "type": "object",
      "description": "MySQL Column.",
      "id": "MysqlColumn",
      "properties": {
        "dataType": {
          "type": "string",
          "description": "The MySQL data type. Full data types list can be found here: https://dev.mysql.com/doc/refman/8.0/en/data-types.html"
        },
        "collation": {
          "description": "Column collation.",
          "type": "string"
        },
        "columnName": {
          "type": "string",
          "description": "Column name."
        },
        "primaryKey": {
          "description": "Whether or not the column represents a primary key.",
          "type": "boolean"
        },
        "length": {
          "description": "Column length.",
          "type": "integer",
          "format": "int32"
        },
        "ordinalPosition": {
          "description": "The ordinal position of the column in the table.",
          "type": "integer",
          "format": "int32"
        },
        "nullable": {
          "description": "Whether or not the column can accept a null value.",
          "type": "boolean"
        }
      }
    },
    "PrivateConnectivity": {
      "description": "Private Connectivity",
      "type": "object",
      "properties": {
        "privateConnectionName": {
          "type": "string"
        }
      },
      "id": "PrivateConnectivity"
    },
    "Error": {
      "description": "Represent a user-facing Error.",
      "type": "object",
      "id": "Error",
      "properties": {
        "errorTime": {
          "format": "google-datetime",
          "description": "The time when the error occurred.",
          "type": "string"
        },
        "reason": {
          "type": "string",
          "description": "A title that explains the reason for the error."
        },
        "details": {
          "type": "object",
          "description": "Additional information about the error.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "errorUuid": {
          "type": "string",
          "description": "A unique identifier for this specific error, allowing it to be traced throughout the system in logs and API responses."
        },
        "message": {
          "description": "A message containing more information about the error that occurred.",
          "type": "string"
        }
      }
    },
    "MysqlDatabase": {
      "properties": {
        "mysqlTables": {
          "description": "Tables in the database.",
          "items": {
            "$ref": "MysqlTable"
          },
          "type": "array"
        },
        "databaseName": {
          "description": "Database name.",
          "type": "string"
        }
      },
      "id": "MysqlDatabase",
      "description": "MySQL database.",
      "type": "object"
    },
    "OracleRdbms": {
      "id": "OracleRdbms",
      "description": "Oracle database structure.",
      "properties": {
        "oracleSchemas": {
          "items": {
            "$ref": "OracleSchema"
          },
          "description": "Oracle schemas/databases in the database server.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "Operation": {
      "properties": {
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation"
    },
    "CancelOperationRequest": {
      "properties": {},
      "type": "object",
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation."
    },
    "Empty": {
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "Empty"
    },
    "OracleTable": {
      "description": "Oracle table.",
      "properties": {
        "tableName": {
          "description": "Table name.",
          "type": "string"
        },
        "oracleColumns": {
          "type": "array",
          "items": {
            "$ref": "OracleColumn"
          },
          "description": "Oracle columns in the schema. When unspecified as part of inclue/exclude lists, includes/excludes everything."
        }
      },
      "type": "object",
      "id": "OracleTable"
    },
    "Route": {
      "id": "Route",
      "properties": {
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The update time of the resource.",
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The create time of the resource."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource's name."
        },
        "destinationAddress": {
          "description": "Required. Destination address for connection",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Labels.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "destinationPort": {
          "format": "int32",
          "description": "Destination port for connection",
          "type": "integer"
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The Route resource is the child of the PrivateConnection resource. It used to define a route for a PrivateConnection setup."
    },
    "MysqlRdbms": {
      "type": "object",
      "id": "MysqlRdbms",
      "properties": {
        "mysqlDatabases": {
          "type": "array",
          "items": {
            "$ref": "MysqlDatabase"
          },
          "description": "Mysql databases on the server"
        }
      },
      "description": "MySQL database structure"
    },
    "Location": {
      "description": "A resource that represents Google Cloud Platform location.",
      "id": "Location",
      "properties": {
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        }
      },
      "type": "object"
    },
    "SourceConfig": {
      "id": "SourceConfig",
      "description": "The configuration of the stream source.",
      "properties": {
        "mysqlSourceConfig": {
          "$ref": "MysqlSourceConfig",
          "description": "MySQL data source configuration"
        },
        "sourceConnectionProfileName": {
          "description": "Required. Source connection profile identifier.",
          "type": "string"
        },
        "oracleSourceConfig": {
          "$ref": "OracleSourceConfig",
          "description": "Oracle data source configuration"
        }
      },
      "type": "object"
    },
    "DiscoverConnectionProfileRequest": {
      "type": "object",
      "id": "DiscoverConnectionProfileRequest",
      "properties": {
        "recursionDepth": {
          "type": "integer",
          "description": "The number of hierarchy levels below the current level to be retrieved.",
          "format": "int32"
        },
        "oracleRdbms": {
          "$ref": "OracleRdbms",
          "description": "Oracle RDBMS to enrich with child data objects and metadata."
        },
        "connectionProfileName": {
          "description": "A reference to an existing ConnectionProfile.",
          "type": "string"
        },
        "mysqlRdbms": {
          "$ref": "MysqlRdbms",
          "description": "MySQL RDBMS to enrich with child data objects and metadata."
        },
        "connectionProfile": {
          "$ref": "ConnectionProfile",
          "description": "An ad-hoc ConnectionProfile configuration."
        },
        "recursive": {
          "description": "Whether to retrieve the full hierarchy of data objects (TRUE) or only the current level (FALSE).",
          "type": "boolean"
        }
      },
      "description": "Request message for 'discover' ConnectionProfile request."
    },
    "VpcPeeringConfig": {
      "properties": {
        "vpcName": {
          "type": "string",
          "description": "Required. fully qualified name of the VPC Datastream will peer to."
        },
        "subnet": {
          "type": "string",
          "description": "Required. A free subnet for peering. (CIDR of /29) TODO(b/172995841) add validators."
        }
      },
      "description": "The VPC Peering configuration is used to create VPC peering between Datastream and the consumer's VPC.",
      "type": "object",
      "id": "VpcPeeringConfig"
    },
    "GcsProfile": {
      "properties": {
        "rootPath": {
          "description": "The root path inside the Cloud Storage bucket.",
          "type": "string"
        },
        "bucketName": {
          "description": "Required. The full project and resource path for Cloud Storage bucket including the name.",
          "type": "string"
        }
      },
      "id": "GcsProfile",
      "description": "Cloud Storage bucket profile.",
      "type": "object"
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Validation": {
      "type": "object",
      "properties": {
        "code": {
          "description": "A custom code identifying this validation.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the validation.",
          "type": "string"
        },
        "status": {
          "description": "Validation execution status.",
          "enum": [
            "STATUS_UNSPECIFIED",
            "NOT_EXECUTED",
            "FAILED",
            "PASSED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified status.",
            "Validation did not execute.",
            "Validation failed.",
            "Validation passed."
          ]
        },
        "message": {
          "items": {
            "$ref": "ValidationMessage"
          },
          "description": "Messages reflecting the validation results.",
          "type": "array"
        }
      },
      "id": "Validation"
    },
    "PrivateConnection": {
      "id": "PrivateConnection",
      "description": "The PrivateConnection resource is used to establish private connectivity between Datastream and a customer's network.",
      "properties": {
        "createTime": {
          "description": "Output only. The create time of the resource.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "error": {
          "$ref": "Error",
          "readOnly": true,
          "description": "Output only. In case of error, the details of the error in a user-friendly format."
        },
        "labels": {
          "description": "Labels.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The update time of the resource.",
          "readOnly": true,
          "type": "string"
        },
        "vpcPeeringConfig": {
          "$ref": "VpcPeeringConfig",
          "description": "VPC Peering Config"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource's name.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "FAILED",
            "DELETING",
            "FAILED_TO_DELETE"
          ],
          "enumDescriptions": [
            "",
            "The private connection is in creation state - creating resources.",
            "The private connection has been created with all of it's resources.",
            "The private connection creation has failed.",
            "The private connection is being deleted.",
            "Delete request has failed, resource is in invalid state."
          ],
          "readOnly": true,
          "description": "Output only. The state of the Private Connection.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MysqlTable": {
      "description": "MySQL table.",
      "properties": {
        "tableName": {
          "type": "string",
          "description": "Table name."
        },
        "mysqlColumns": {
          "items": {
            "$ref": "MysqlColumn"
          },
          "description": "MySQL columns in the database. When unspecified as part of include/exclude lists, includes/excludes everything.",
          "type": "array"
        }
      },
      "id": "MysqlTable",
      "type": "object"
    },
    "BackfillAllStrategy": {
      "description": "Backfill strategy to automatically backfill the Stream's objects. Specific objects can be excluded.",
      "id": "BackfillAllStrategy",
      "properties": {
        "oracleExcludedObjects": {
          "$ref": "OracleRdbms",
          "description": "Oracle data source objects to avoid backfilling."
        },
        "mysqlExcludedObjects": {
          "$ref": "MysqlRdbms",
          "description": "MySQL data source objects to avoid backfilling."
        }
      },
      "type": "object"
    },
    "ListOperationsResponse": {
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        }
      }
    },
    "ListRoutesResponse": {
      "description": "route list response",
      "properties": {
        "routes": {
          "description": "List of Routes.",
          "type": "array",
          "items": {
            "$ref": "Route"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      },
      "type": "object",
      "id": "ListRoutesResponse"
    },
    "ListConnectionProfilesResponse": {
      "type": "object",
      "id": "ListConnectionProfilesResponse",
      "properties": {
        "connectionProfiles": {
          "items": {
            "$ref": "ConnectionProfile"
          },
          "type": "array",
          "description": "List of connection profiles."
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      }
    },
    "OracleProfile": {
      "id": "OracleProfile",
      "properties": {
        "password": {
          "type": "string",
          "description": "Required. Password for the Oracle connection."
        },
        "username": {
          "description": "Required. Username for the Oracle connection.",
          "type": "string"
        },
        "connectionAttributes": {
          "type": "object",
          "description": "Connection string attributes",
          "additionalProperties": {
            "type": "string"
          }
        },
        "databaseService": {
          "type": "string",
          "description": "Required. Database for the Oracle connection."
        },
        "port": {
          "description": "Port for the Oracle connection, default value is 1521.",
          "format": "int32",
          "type": "integer"
        },
        "hostname": {
          "description": "Required. Hostname for the Oracle connection.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Oracle database profile."
    },
    "ListPrivateConnectionsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "privateConnections": {
          "description": "List of private connectivity configurations.",
          "type": "array",
          "items": {
            "$ref": "PrivateConnection"
          }
        }
      },
      "id": "ListPrivateConnectionsResponse"
    },
    "OracleSchema": {
      "description": "Oracle schema.",
      "type": "object",
      "id": "OracleSchema",
      "properties": {
        "oracleTables": {
          "type": "array",
          "items": {
            "$ref": "OracleTable"
          },
          "description": "Tables in the schema."
        },
        "schemaName": {
          "description": "Schema name.",
          "type": "string"
        }
      }
    },
    "OperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "statusMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean",
          "readOnly": true
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true
        },
        "apiVersion": {
          "type": "string",
          "description": "Output only. API version used to start the operation.",
          "readOnly": true
        },
        "validationResult": {
          "readOnly": true,
          "description": "Output only. Results of executed validations if there are any.",
          "$ref": "ValidationResult"
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        }
      },
      "id": "OperationMetadata",
      "type": "object"
    },
    "MysqlSourceConfig": {
      "id": "MysqlSourceConfig",
      "description": "MySQL source configuration",
      "properties": {
        "allowlist": {
          "$ref": "MysqlRdbms",
          "description": "MySQL objects to retrieve from the source."
        },
        "rejectlist": {
          "$ref": "MysqlRdbms",
          "description": "MySQL objects to exclude from the stream."
        }
      },
      "type": "object"
    },
    "AvroFileFormat": {
      "id": "AvroFileFormat",
      "description": "AVRO file format configuration.",
      "properties": {},
      "type": "object"
    },
    "ForwardSshTunnelConnectivity": {
      "properties": {
        "privateKey": {
          "description": "Input only. SSH private key.",
          "type": "string"
        },
        "username": {
          "type": "string",
          "description": "Required. Username for the SSH tunnel."
        },
        "port": {
          "description": "Port for the SSH tunnel, default value is 22.",
          "type": "integer",
          "format": "int32"
        },
        "hostname": {
          "description": "Required. Hostname for the SSH tunnel.",
          "type": "string"
        },
        "password": {
          "description": "Input only. SSH password.",
          "type": "string"
        }
      },
      "id": "ForwardSshTunnelConnectivity",
      "type": "object",
      "description": "Forward SSH Tunnel connectivity."
    },
    "FetchErrorsRequest": {
      "properties": {},
      "type": "object",
      "id": "FetchErrorsRequest",
      "description": "Request message for 'FetchErrors' request."
    },
    "Stream": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "errors": {
          "readOnly": true,
          "description": "Output only. Errors on the Stream.",
          "items": {
            "$ref": "Error"
          },
          "type": "array"
        },
        "sourceConfig": {
          "$ref": "SourceConfig",
          "description": "Required. Source connection profile configuration."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The stream's name."
        },
        "labels": {
          "description": "Labels.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "state": {
          "enumDescriptions": [
            "Unspecified stream state.",
            "The stream has been created.",
            "The stream is running.",
            "The stream is paused.",
            "The stream is in maintenance mode. Updates are rejected on the resource in this state.",
            "The stream is experiencing an error that is preventing data from being streamed.",
            "The stream has experienced a terminal failure.",
            "The stream is starting, but not yet running.",
            "The Stream is no longer reading new events, but still writing events in the buffer."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "PAUSED",
            "MAINTENANCE",
            "FAILED",
            "FAILED_PERMANENTLY",
            "STARTING",
            "DRAINING"
          ],
          "description": "The state of the stream."
        },
        "destinationConfig": {
          "$ref": "DestinationConfig",
          "description": "Required. Destination connection profile configuration."
        },
        "customerManagedEncryptionKey": {
          "description": "Immutable. A reference to a KMS encryption key. If provided, it will be used to encrypt the data. If left blank, data will be encrypted using an internal Stream-specific encryption key provisioned through KMS.",
          "type": "string"
        },
        "backfillAll": {
          "description": "Automatically backfill objects included in the stream source configuration. Specific objects can be excluded.",
          "$ref": "BackfillAllStrategy"
        },
        "backfillNone": {
          "$ref": "BackfillNoneStrategy",
          "description": "Do not automatically backfill any objects."
        },
        "createTime": {
          "description": "Output only. The creation time of the stream.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The last update time of the stream."
        }
      },
      "type": "object",
      "id": "Stream"
    },
    "StaticServiceIpConnectivity": {
      "properties": {},
      "id": "StaticServiceIpConnectivity",
      "description": "Static IP address connectivity.",
      "type": "object"
    },
    "MysqlSslConfig": {
      "id": "MysqlSslConfig",
      "description": "MySQL SSL configuration information.",
      "properties": {
        "caCertificateSet": {
          "type": "boolean",
          "description": "Output only. Indicates whether the ca_certificate field is set.",
          "readOnly": true
        },
        "clientCertificate": {
          "description": "Input only. PEM-encoded certificate that will be used by the replica to authenticate against the source database server. If this field is used then the 'client_key' and the 'ca_certificate' fields are mandatory.",
          "type": "string"
        },
        "caCertificate": {
          "description": "Input only. PEM-encoded certificate of the CA that signed the source database server's certificate.",
          "type": "string"
        },
        "clientKey": {
          "type": "string",
          "description": "Input only. PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' and the 'ca_certificate' fields are mandatory."
        },
        "clientCertificateSet": {
          "description": "Output only. Indicates whether the client_certificate field is set.",
          "type": "boolean",
          "readOnly": true
        },
        "clientKeySet": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Indicates whether the client_key field is set."
        }
      },
      "type": "object"
    },
    "NoConnectivitySettings": {
      "type": "object",
      "properties": {},
      "id": "NoConnectivitySettings",
      "description": "No connectivity settings."
    },
    "OracleColumn": {
      "properties": {
        "encoding": {
          "description": "Column encoding.",
          "type": "string"
        },
        "scale": {
          "description": "Column scale.",
          "type": "integer",
          "format": "int32"
        },
        "primaryKey": {
          "description": "Whether or not the column represents a primary key.",
          "type": "boolean"
        },
        "nullable": {
          "type": "boolean",
          "description": "Whether or not the column can accept a null value."
        },
        "dataType": {
          "description": "The Oracle data type.",
          "type": "string"
        },
        "precision": {
          "format": "int32",
          "description": "Column precision.",
          "type": "integer"
        },
        "ordinalPosition": {
          "description": "The ordinal position of the column in the table.",
          "type": "integer",
          "format": "int32"
        },
        "columnName": {
          "description": "Column name.",
          "type": "string"
        },
        "length": {
          "format": "int32",
          "type": "integer",
          "description": "Column length."
        }
      },
      "type": "object",
      "description": "Oracle Column.",
      "id": "OracleColumn"
    },
    "ValidationResult": {
      "type": "object",
      "properties": {
        "validations": {
          "type": "array",
          "items": {
            "$ref": "Validation"
          },
          "description": "A list of validations (includes both executed as well as not executed validations)."
        }
      },
      "description": "Contains the current validation results.",
      "id": "ValidationResult"
    },
    "ListStreamsResponse": {
      "id": "ListStreamsResponse",
      "type": "object",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "streams": {
          "type": "array",
          "description": "List of streams",
          "items": {
            "$ref": "Stream"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "DestinationConfig": {
      "description": "The configuration of the stream destination.",
      "type": "object",
      "id": "DestinationConfig",
      "properties": {
        "destinationConnectionProfileName": {
          "description": "Required. Destination connection profile identifier.",
          "type": "string"
        },
        "gcsDestinationConfig": {
          "$ref": "GcsDestinationConfig"
        }
      }
    },
    "FetchErrorsResponse": {
      "description": "Response message for a 'FetchErrors' response.",
      "properties": {
        "errors": {
          "items": {
            "$ref": "Error"
          },
          "description": "The list of errors on the Stream.",
          "type": "array"
        }
      },
      "id": "FetchErrorsResponse",
      "type": "object"
    },
    "FetchStaticIpsResponse": {
      "id": "FetchStaticIpsResponse",
      "description": "Response message for a 'FetchStaticIps' response.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "staticIps": {
          "type": "array",
          "description": "list of static ips by account",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "ConnectionProfile": {
      "properties": {
        "gcsProfile": {
          "description": "Cloud Storage ConnectionProfile configuration.",
          "$ref": "GcsProfile"
        },
        "forwardSshConnectivity": {
          "description": "Forward SSH tunnel connectivity.",
          "$ref": "ForwardSshTunnelConnectivity"
        },
        "mysqlProfile": {
          "$ref": "MysqlProfile",
          "description": "MySQL ConnectionProfile configuration."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The create time of the resource.",
          "readOnly": true
        },
        "noConnectivity": {
          "$ref": "NoConnectivitySettings",
          "description": "No connectivity option chosen."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels."
        },
        "privateConnectivity": {
          "description": "Private connectivity.",
          "$ref": "PrivateConnectivity"
        },
        "staticServiceIpConnectivity": {
          "$ref": "StaticServiceIpConnectivity",
          "description": "Static Service IP connectivity."
        },
        "oracleProfile": {
          "$ref": "OracleProfile",
          "description": "Oracle ConnectionProfile configuration."
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The update time of the resource.",
          "format": "google-datetime"
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource's name."
        }
      },
      "id": "ConnectionProfile",
      "type": "object"
    },
    "DiscoverConnectionProfileResponse": {
      "type": "object",
      "id": "DiscoverConnectionProfileResponse",
      "properties": {
        "mysqlRdbms": {
          "$ref": "MysqlRdbms",
          "description": "Enriched MySQL RDBMS object."
        },
        "oracleRdbms": {
          "$ref": "OracleRdbms",
          "description": "Enriched Oracle RDBMS object."
        }
      }
    },
    "JsonFileFormat": {
      "properties": {
        "schemaFileFormat": {
          "enumDescriptions": [
            "Unspecified schema file format.",
            "Do not attach schema file.",
            "Avro schema format."
          ],
          "enum": [
            "SCHEMA_FILE_FORMAT_UNSPECIFIED",
            "NO_SCHEMA_FILE",
            "AVRO_SCHEMA_FILE"
          ],
          "type": "string",
          "description": "The schema file format along JSON data files."
        },
        "compression": {
          "type": "string",
          "enum": [
            "JSON_COMPRESSION_UNSPECIFIED",
            "NO_COMPRESSION",
            "GZIP"
          ],
          "description": "Compression of the loaded JSON file.",
          "enumDescriptions": [
            "Unspecified json file compression.",
            "Do not compress JSON file.",
            "Gzip compression."
          ]
        }
      },
      "description": "JSON file format configuration.",
      "type": "object",
      "id": "JsonFileFormat"
    },
    "MysqlProfile": {
      "id": "MysqlProfile",
      "description": "MySQL database profile.",
      "properties": {
        "hostname": {
          "type": "string",
          "description": "Required. Hostname for the MySQL connection."
        },
        "port": {
          "description": "Port for the MySQL connection, default value is 3306.",
          "format": "int32",
          "type": "integer"
        },
        "password": {
          "type": "string",
          "description": "Required. Input only. Password for the MySQL connection."
        },
        "sslConfig": {
          "description": "SSL configuration for the MySQL connection.",
          "$ref": "MysqlSslConfig"
        },
        "username": {
          "description": "Required. Username for the MySQL connection.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "id": "ListLocationsResponse",
      "properties": {
        "locations": {
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      }
    },
    "ValidationMessage": {
      "id": "ValidationMessage",
      "type": "object",
      "properties": {
        "level": {
          "enum": [
            "LEVEL_UNSPECIFIED",
            "WARNING",
            "ERROR"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified level.",
            "Potentially cause issues with the Stream.",
            "Definitely cause issues with the Stream."
          ],
          "description": "Message severity level (warning or error)."
        },
        "code": {
          "type": "string",
          "description": "A custom code identifying this specific message."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Additional metadata related to the result."
        },
        "message": {
          "description": "The result of the validation.",
          "type": "string"
        }
      },
      "description": "Represent user-facing validation result message."
    }
  },
  "name": "datastream",
  "canonicalName": "Datastream",
  "basePath": "",
  "batchPath": "batch",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "operations": {
              "methods": {
                "delete": {
                  "id": "datastream.projects.locations.operations.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be deleted.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1alpha1/{+name}"
                },
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "path": "v1alpha1/{+name}/operations",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "id": "datastream.projects.locations.operations.list",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "The standard list page size.",
                      "location": "query",
                      "format": "int32"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The name of the operation's parent resource.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  }
                },
                "cancel": {
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "id": "datastream.projects.locations.operations.cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "POST",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true
                    }
                  },
                  "path": "v1alpha1/{+name}:cancel",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel"
                },
                "get": {
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "datastream.projects.locations.operations.get"
                }
              }
            },
            "connectionProfiles": {
              "methods": {
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the connection profile resource to delete."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+name}",
                  "description": "Use this method to delete a connection profile..",
                  "id": "datastream.projects.locations.connectionProfiles.delete",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the ConnectionProfile resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "description": "Output only. The resource's name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. Only validate the connection profile, but do not update any resources. The default is false."
                    }
                  },
                  "description": "Use this method to update the parameters of a connection profile.",
                  "httpMethod": "PATCH",
                  "id": "datastream.projects.locations.connectionProfiles.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "id": "datastream.projects.locations.connectionProfiles.list",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Maximum number of connection profiles to return. If unspecified, at most 50 connection profiles will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Page token received from a previous `ListConnectionProfiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListConnectionProfiles` must match the call that provided the page token."
                    },
                    "filter": {
                      "location": "query",
                      "description": "Filter request.",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent that owns the collection of connection profiles."
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Order by fields for the result."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/connectionProfiles",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "response": {
                    "$ref": "ListConnectionProfilesResponse"
                  },
                  "description": "Use this method to list connection profiles created in a project and location.",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "get": {
                  "response": {
                    "$ref": "ConnectionProfile"
                  },
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the connection profile resource to get.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$"
                    }
                  },
                  "description": "Use this method to get details about a connection profile.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "id": "datastream.projects.locations.connectionProfiles.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "discover": {
                  "id": "datastream.projects.locations.connectionProfiles.discover",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "DiscoverConnectionProfileRequest"
                  },
                  "path": "v1alpha1/{+parent}/connectionProfiles:discover",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the ConnectionProfile type. Must be in the format `projects/*/locations/*`.",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "DiscoverConnectionProfileResponse"
                  },
                  "httpMethod": "POST",
                  "description": "Use this method to discover a connection profile. The discover API call exposes the data objects and metadata belonging to the profile. Typically, a request returns children data objects under a parent data object that's optionally supplied in the request.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles:discover"
                },
                "create": {
                  "id": "datastream.projects.locations.connectionProfiles.create",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "parameters": {
                    "connectionProfileId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. The connection profile identifier."
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent that owns the collection of ConnectionProfiles.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Use this method to create a connection profile in a project and location.",
                  "path": "v1alpha1/{+parent}/connectionProfiles"
                }
              }
            },
            "streams": {
              "methods": {
                "delete": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the stream resource to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "id": "datastream.projects.locations.streams.delete",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Use this method to delete a stream.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+name}",
                  "description": "Use this method to get details about a stream.",
                  "id": "datastream.projects.locations.streams.get",
                  "response": {
                    "$ref": "Stream"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the stream resource to get.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams",
                  "response": {
                    "$ref": "ListStreamsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/streams",
                  "description": "Use this method to list streams in a project and location.",
                  "id": "datastream.projects.locations.streams.list",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "Maximum number of streams to return. If unspecified, at most 50 streams will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Order by fields for the result."
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent that owns the collection of streams.",
                      "required": true,
                      "location": "path"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filter request."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Page token received from a previous `ListStreams` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListStreams` must match the call that provided the page token.",
                      "location": "query"
                    }
                  }
                },
                "patch": {
                  "request": {
                    "$ref": "Stream"
                  },
                  "id": "datastream.projects.locations.streams.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "validateOnly": {
                      "location": "query",
                      "description": "Optional. Only validate the stream with the changes, without actually updating it. The default is false.",
                      "type": "boolean"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "force": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. Execute the update without validating it."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Output only. The stream's name.",
                      "required": true
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the stream resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}",
                  "description": "Use this method to update the configuration of a stream.",
                  "httpMethod": "PATCH"
                },
                "fetchErrors": {
                  "request": {
                    "$ref": "FetchErrorsRequest"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}:fetchErrors",
                  "parameters": {
                    "stream": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "type": "string",
                      "description": "Name of the Stream resource for which to fetch any errors.",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "stream"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datastream.projects.locations.streams.fetchErrors",
                  "description": "Use this method to fetch any errors associated with a stream.",
                  "path": "v1alpha1/{+stream}:fetchErrors",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "create": {
                  "request": {
                    "$ref": "Stream"
                  },
                  "path": "v1alpha1/{+parent}/streams",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Use this method to create a stream.",
                  "id": "datastream.projects.locations.streams.create",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streams",
                  "parameters": {
                    "validateOnly": {
                      "location": "query",
                      "description": "Optional. Only validate the stream, but do not create any resources. The default is false.",
                      "type": "boolean"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent that owns the collection of streams.",
                      "location": "path",
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "streamId": {
                      "location": "query",
                      "description": "Required. The stream identifier.",
                      "type": "string"
                    },
                    "force": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. Create the stream without validating it."
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            },
            "privateConnections": {
              "resources": {
                "routes": {
                  "methods": {
                    "list": {
                      "id": "datastream.projects.locations.privateConnections.routes.list",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListRoutesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Use this method to list routes created for a private connectivity in a project and location.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes",
                      "path": "v1alpha1/{+parent}/routes",
                      "parameters": {
                        "pageSize": {
                          "description": "Maximum number of Routes to return. The service may return fewer than this value. If unspecified, at most 50 Routes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "format": "int32",
                          "location": "query",
                          "type": "integer"
                        },
                        "parent": {
                          "description": "Required. The parent that owns the collection of Routess.",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Page token received from a previous `ListRoutes` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRoutes` must match the call that provided the page token."
                        },
                        "filter": {
                          "description": "Filter request.",
                          "type": "string",
                          "location": "query"
                        },
                        "orderBy": {
                          "description": "Order by fields for the result.",
                          "location": "query",
                          "type": "string"
                        }
                      }
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the Route resource to get.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "path": "v1alpha1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}",
                      "description": "Use this method to get details about a route.",
                      "id": "datastream.projects.locations.privateConnections.routes.get",
                      "response": {
                        "$ref": "Route"
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The name of the Route resource to delete.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$",
                          "type": "string"
                        },
                        "requestId": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        }
                      },
                      "description": "Use this method to delete a route.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}",
                      "id": "datastream.projects.locations.privateConnections.routes.delete",
                      "path": "v1alpha1/{+name}",
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "create": {
                      "httpMethod": "POST",
                      "path": "v1alpha1/{+parent}/routes",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes",
                      "request": {
                        "$ref": "Route"
                      },
                      "id": "datastream.projects.locations.privateConnections.routes.create",
                      "parameters": {
                        "requestId": {
                          "location": "query",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        },
                        "routeId": {
                          "location": "query",
                          "description": "Required. The Route identifier.",
                          "type": "string"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                          "location": "path",
                          "description": "Required. The parent that owns the collection of Routes.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Use this method to create a route for a private connectivity in a project and location.",
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the private connectivity configuration to delete.",
                      "type": "string"
                    },
                    "force": {
                      "description": "Optional. If set to true, any child routes that belong to this PrivateConnection will also be deleted.",
                      "type": "boolean",
                      "location": "query"
                    }
                  },
                  "id": "datastream.projects.locations.privateConnections.delete",
                  "description": "Use this method to delete a private connectivity configuration."
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "description": "Page token received from a previous `ListPrivateConnections` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPrivateConnections` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Filter request.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The parent that owns the collection of private connectivity configurations.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "description": "Maximum number of private connectivity configurations to return. If unspecified, at most 50 private connectivity configurations that will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "orderBy": {
                      "description": "Order by fields for the result.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "description": "Use this method to list private connectivity configurations in a project and location.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListPrivateConnectionsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/privateConnections",
                  "httpMethod": "GET",
                  "id": "datastream.projects.locations.privateConnections.list"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the private connectivity configuration to get."
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "id": "datastream.projects.locations.privateConnections.get",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Use this method to get details about a private connectivity configuration.",
                  "response": {
                    "$ref": "PrivateConnection"
                  },
                  "httpMethod": "GET"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datastream.projects.locations.privateConnections.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+parent}/privateConnections",
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "description": "Use this method to create a private connectivity configuration.",
                  "parameters": {
                    "privateConnectionId": {
                      "location": "query",
                      "description": "Required. The private connectivity identifier.",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The parent that owns the collection of PrivateConnections.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "PrivateConnection"
                  }
                }
              }
            }
          },
          "methods": {
            "get": {
              "httpMethod": "GET",
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Resource name for the location.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true
                }
              },
              "id": "datastream.projects.locations.get",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "description": "Gets information about a location.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Location"
              }
            },
            "fetchStaticIps": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}:fetchStaticIps",
              "response": {
                "$ref": "FetchStaticIpsResponse"
              },
              "description": "The FetchStaticIps API call exposes the static ips used by Datastream. Typically, a request returns children data objects under a parent data object that's optionally supplied in the request.",
              "parameterOrder": [
                "name"
              ],
              "id": "datastream.projects.locations.fetchStaticIps",
              "path": "v1alpha1/{+name}:fetchStaticIps",
              "httpMethod": "GET",
              "parameters": {
                "pageSize": {
                  "description": "Maximum number of Ips to return, will likely not be specified.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "pageToken": {
                  "description": "A page token, received from a previous `ListStaticIps` call. will likely not be specified.",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "description": "Required. The name resource of the Response type. Must be in the format `projects/*/locations/*`.",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              }
            },
            "list": {
              "path": "v1alpha1/{+name}/locations",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "type": "integer",
                  "location": "query"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "id": "datastream.projects.locations.list",
              "httpMethod": "GET"
            }
          }
        }
      }
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "protocol": "rest",
  "rootUrl": "https://datastream.googleapis.com/",
  "version_module": true,
  "baseUrl": "https://datastream.googleapis.com/",
  "ownerDomain": "google.com",
  "fullyEncodeReservedExpansion": true
}

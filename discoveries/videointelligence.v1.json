{
  "version": "v1",
  "baseUrl": "https://videointelligence.googleapis.com/",
  "kind": "discovery#restDescription",
  "description": "Cloud Video Intelligence API.",
  "servicePath": "",
  "basePath": "",
  "revision": "20181003",
  "documentationLink": "https://cloud.google.com/video-intelligence/docs/",
  "id": "videointelligence:v1",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "GoogleCloudVideointelligenceV1p1beta1_VideoSegment": {
      "description": "Video segment.",
      "type": "object",
      "properties": {
        "endTimeOffset": {
          "description": "Time-offset, relative to the beginning of the video,\ncorresponding to the end of the segment (inclusive).",
          "format": "google-duration",
          "type": "string"
        },
        "startTimeOffset": {
          "description": "Time-offset, relative to the beginning of the video,\ncorresponding to the start of the segment (inclusive).",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1p1beta1_VideoSegment"
    },
    "GoogleCloudVideointelligenceV1_Entity": {
      "properties": {
        "languageCode": {
          "description": "Language code for `description` in BCP-47 format.",
          "type": "string"
        },
        "entityId": {
          "description": "Opaque entity ID. Some IDs may be available in\n[Google Knowledge Graph Search\nAPI](https://developers.google.com/knowledge-graph/).",
          "type": "string"
        },
        "description": {
          "description": "Textual description, e.g. `Fixed-gear bicycle`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1_Entity",
      "description": "Detected entity from video analysis.",
      "type": "object"
    },
    "GoogleCloudVideointelligenceV1beta2_VideoSegment": {
      "description": "Video segment.",
      "type": "object",
      "properties": {
        "endTimeOffset": {
          "description": "Time-offset, relative to the beginning of the video,\ncorresponding to the end of the segment (inclusive).",
          "format": "google-duration",
          "type": "string"
        },
        "startTimeOffset": {
          "description": "Time-offset, relative to the beginning of the video,\ncorresponding to the start of the segment (inclusive).",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta2_VideoSegment"
    },
    "GoogleCloudVideointelligenceV1_VideoAnnotationResults": {
      "description": "Annotation results for a single video.",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "GoogleRpc_Status",
          "description": "If set, indicates an error. Note that for a single `AnnotateVideoRequest`\nsome videos may succeed and some may fail."
        },
        "frameLabelAnnotations": {
          "description": "Label annotations on frame level.\nThere is exactly one element for each unique label.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1_LabelAnnotation"
          }
        },
        "inputUri": {
          "description": "Video file location in\n[Google Cloud Storage](https://cloud.google.com/storage/).",
          "type": "string"
        },
        "explicitAnnotation": {
          "$ref": "GoogleCloudVideointelligenceV1_ExplicitContentAnnotation",
          "description": "Explicit content annotation."
        },
        "segmentLabelAnnotations": {
          "description": "Label annotations on video level or user specified segment level.\nThere is exactly one element for each unique label.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1_LabelAnnotation"
          }
        },
        "shotAnnotations": {
          "description": "Shot annotations. Each shot is represented as a video segment.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1_VideoSegment"
          }
        },
        "shotLabelAnnotations": {
          "description": "Label annotations on shot level.\nThere is exactly one element for each unique label.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1_LabelAnnotation"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1_VideoAnnotationResults"
    },
    "GoogleCloudVideointelligenceV1beta2_AnnotateVideoResponse": {
      "description": "Video annotation response. Included in the `response`\nfield of the `Operation` returned by the `GetOperation`\ncall of the `google::longrunning::Operations` service.",
      "type": "object",
      "properties": {
        "annotationResults": {
          "description": "Annotation results for all videos specified in `AnnotateVideoRequest`.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta2_VideoAnnotationResults"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta2_AnnotateVideoResponse"
    },
    "GoogleCloudVideointelligenceV1p1beta1_Entity": {
      "description": "Detected entity from video analysis.",
      "type": "object",
      "properties": {
        "languageCode": {
          "description": "Language code for `description` in BCP-47 format.",
          "type": "string"
        },
        "entityId": {
          "description": "Opaque entity ID. Some IDs may be available in\n[Google Knowledge Graph Search\nAPI](https://developers.google.com/knowledge-graph/).",
          "type": "string"
        },
        "description": {
          "description": "Textual description, e.g. `Fixed-gear bicycle`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1p1beta1_Entity"
    },
    "GoogleRpc_Status": {
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        }
      },
      "id": "GoogleRpc_Status",
      "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
      "type": "object"
    },
    "GoogleCloudVideointelligenceV1p1beta1_VideoAnnotationResults": {
      "description": "Annotation results for a single video.",
      "type": "object",
      "properties": {
        "shotLabelAnnotations": {
          "description": "Label annotations on shot level.\nThere is exactly one element for each unique label.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p1beta1_LabelAnnotation"
          }
        },
        "error": {
          "$ref": "GoogleRpc_Status",
          "description": "If set, indicates an error. Note that for a single `AnnotateVideoRequest`\nsome videos may succeed and some may fail."
        },
        "speechTranscriptions": {
          "description": "Speech transcription.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p1beta1_SpeechTranscription"
          }
        },
        "frameLabelAnnotations": {
          "description": "Label annotations on frame level.\nThere is exactly one element for each unique label.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p1beta1_LabelAnnotation"
          }
        },
        "inputUri": {
          "description": "Video file location in\n[Google Cloud Storage](https://cloud.google.com/storage/).",
          "type": "string"
        },
        "segmentLabelAnnotations": {
          "description": "Label annotations on video level or user specified segment level.\nThere is exactly one element for each unique label.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p1beta1_LabelAnnotation"
          }
        },
        "explicitAnnotation": {
          "description": "Explicit content annotation.",
          "$ref": "GoogleCloudVideointelligenceV1p1beta1_ExplicitContentAnnotation"
        },
        "shotAnnotations": {
          "description": "Shot annotations. Each shot is represented as a video segment.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p1beta1_VideoSegment"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1p1beta1_VideoAnnotationResults"
    },
    "GoogleCloudVideointelligenceV1p2beta1_AnnotateVideoResponse": {
      "description": "Video annotation response. Included in the `response`\nfield of the `Operation` returned by the `GetOperation`\ncall of the `google::longrunning::Operations` service.",
      "type": "object",
      "properties": {
        "annotationResults": {
          "description": "Annotation results for all videos specified in `AnnotateVideoRequest`.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_AnnotateVideoResponse"
    },
    "GoogleCloudVideointelligenceV1_LabelFrame": {
      "description": "Video frame level annotation results for label detection.",
      "type": "object",
      "properties": {
        "confidence": {
          "description": "Confidence that the label is accurate. Range: [0, 1].",
          "format": "float",
          "type": "number"
        },
        "timeOffset": {
          "description": "Time-offset, relative to the beginning of the video, corresponding to the\nvideo frame for this location.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1_LabelFrame"
    },
    "GoogleCloudVideointelligenceV1p1beta1_VideoAnnotationProgress": {
      "description": "Annotation progress for a single video.",
      "type": "object",
      "properties": {
        "inputUri": {
          "description": "Video file location in\n[Google Cloud Storage](https://cloud.google.com/storage/).",
          "type": "string"
        },
        "progressPercent": {
          "description": "Approximate percentage processed thus far. Guaranteed to be\n100 when fully processed.",
          "format": "int32",
          "type": "integer"
        },
        "updateTime": {
          "description": "Time of the most recent update.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "Time when the request was received.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1p1beta1_VideoAnnotationProgress"
    },
    "GoogleCloudVideointelligenceV1p2beta1_LabelSegment": {
      "properties": {
        "confidence": {
          "description": "Confidence that the label is accurate. Range: [0, 1].",
          "format": "float",
          "type": "number"
        },
        "segment": {
          "description": "Video segment where a label was detected.",
          "$ref": "GoogleCloudVideointelligenceV1p2beta1_VideoSegment"
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_LabelSegment",
      "description": "Video segment level annotation results for label detection.",
      "type": "object"
    },
    "GoogleCloudVideointelligenceV1p1beta1_ExplicitContentFrame": {
      "description": "Video frame level annotation results for explicit content.",
      "type": "object",
      "properties": {
        "pornographyLikelihood": {
          "enumDescriptions": [
            "Unspecified likelihood.",
            "Very unlikely.",
            "Unlikely.",
            "Possible.",
            "Likely.",
            "Very likely."
          ],
          "enum": [
            "LIKELIHOOD_UNSPECIFIED",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood of the pornography content..",
          "type": "string"
        },
        "timeOffset": {
          "description": "Time-offset, relative to the beginning of the video, corresponding to the\nvideo frame for this location.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1p1beta1_ExplicitContentFrame"
    },
    "GoogleCloudVideointelligenceV1p1beta1_LabelFrame": {
      "properties": {
        "confidence": {
          "description": "Confidence that the label is accurate. Range: [0, 1].",
          "format": "float",
          "type": "number"
        },
        "timeOffset": {
          "description": "Time-offset, relative to the beginning of the video, corresponding to the\nvideo frame for this location.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1p1beta1_LabelFrame",
      "description": "Video frame level annotation results for label detection.",
      "type": "object"
    },
    "GoogleCloudVideointelligenceV1beta2_ExplicitContentAnnotation": {
      "description": "Explicit content annotation (based on per-frame visual signals only).\nIf no explicit content has been detected in a frame, no annotations are\npresent for that frame.",
      "type": "object",
      "properties": {
        "frames": {
          "description": "All video frames where explicit content was detected.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta2_ExplicitContentFrame"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta2_ExplicitContentAnnotation"
    },
    "GoogleCloudVideointelligenceV1p1beta1_SpeechTranscription": {
      "description": "A speech recognition result corresponding to a portion of the audio.",
      "type": "object",
      "properties": {
        "languageCode": {
          "description": "Output only. The\n[BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag of the\nlanguage in this result. This language code was detected to have the most\nlikelihood of being spoken in the audio.",
          "type": "string"
        },
        "alternatives": {
          "description": "May contain one or more recognition hypotheses (up to the maximum specified\nin `max_alternatives`).  These alternatives are ordered in terms of\naccuracy, with the top (first) alternative being the most probable, as\nranked by the recognizer.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p1beta1_SpeechRecognitionAlternative"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1p1beta1_SpeechTranscription"
    },
    "GoogleCloudVideointelligenceV1beta2_LabelFrame": {
      "description": "Video frame level annotation results for label detection.",
      "type": "object",
      "properties": {
        "confidence": {
          "description": "Confidence that the label is accurate. Range: [0, 1].",
          "format": "float",
          "type": "number"
        },
        "timeOffset": {
          "description": "Time-offset, relative to the beginning of the video, corresponding to the\nvideo frame for this location.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta2_LabelFrame"
    },
    "GoogleCloudVideointelligenceV1p2beta1_ObjectTrackingFrame": {
      "description": "Video frame level annotations for object detection and tracking. This field\nstores per frame location, time offset, and confidence.",
      "type": "object",
      "properties": {
        "normalizedBoundingBox": {
          "$ref": "GoogleCloudVideointelligenceV1p2beta1_NormalizedBoundingBox",
          "description": "The normalized bounding box location of this object track for the frame."
        },
        "timeOffset": {
          "description": "The timestamp of the frame in microseconds.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_ObjectTrackingFrame"
    },
    "GoogleCloudVideointelligenceV1p2beta1_NormalizedBoundingBox": {
      "properties": {
        "right": {
          "description": "Right X coordinate.",
          "format": "float",
          "type": "number"
        },
        "bottom": {
          "description": "Bottom Y coordinate.",
          "format": "float",
          "type": "number"
        },
        "top": {
          "description": "Top Y coordinate.",
          "format": "float",
          "type": "number"
        },
        "left": {
          "description": "Left X coordinate.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_NormalizedBoundingBox",
      "description": "Normalized bounding box.\nThe normalized vertex coordinates are relative to the original image.\nRange: [0, 1].",
      "type": "object"
    },
    "GoogleProtobuf_Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "GoogleProtobuf_Empty"
    },
    "GoogleCloudVideointelligenceV1p1beta1_LabelSegment": {
      "description": "Video segment level annotation results for label detection.",
      "type": "object",
      "properties": {
        "segment": {
          "$ref": "GoogleCloudVideointelligenceV1p1beta1_VideoSegment",
          "description": "Video segment where a label was detected."
        },
        "confidence": {
          "description": "Confidence that the label is accurate. Range: [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVideointelligenceV1p1beta1_LabelSegment"
    },
    "GoogleCloudVideointelligenceV1_VideoAnnotationProgress": {
      "description": "Annotation progress for a single video.",
      "type": "object",
      "properties": {
        "inputUri": {
          "description": "Video file location in\n[Google Cloud Storage](https://cloud.google.com/storage/).",
          "type": "string"
        },
        "progressPercent": {
          "description": "Approximate percentage processed thus far. Guaranteed to be\n100 when fully processed.",
          "format": "int32",
          "type": "integer"
        },
        "updateTime": {
          "description": "Time of the most recent update.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "Time when the request was received.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1_VideoAnnotationProgress"
    },
    "GoogleCloudVideointelligenceV1_AnnotateVideoResponse": {
      "properties": {
        "annotationResults": {
          "description": "Annotation results for all videos specified in `AnnotateVideoRequest`.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1_VideoAnnotationResults"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1_AnnotateVideoResponse",
      "description": "Video annotation response. Included in the `response`\nfield of the `Operation` returned by the `GetOperation`\ncall of the `google::longrunning::Operations` service.",
      "type": "object"
    },
    "GoogleCloudVideointelligenceV1_LabelSegment": {
      "properties": {
        "confidence": {
          "description": "Confidence that the label is accurate. Range: [0, 1].",
          "format": "float",
          "type": "number"
        },
        "segment": {
          "description": "Video segment where a label was detected.",
          "$ref": "GoogleCloudVideointelligenceV1_VideoSegment"
        }
      },
      "id": "GoogleCloudVideointelligenceV1_LabelSegment",
      "description": "Video segment level annotation results for label detection.",
      "type": "object"
    },
    "GoogleCloudVideointelligenceV1_LabelDetectionConfig": {
      "description": "Config for LABEL_DETECTION.",
      "type": "object",
      "properties": {
        "model": {
          "description": "Model to use for label detection.\nSupported values: \"builtin/stable\" (the default if unset) and\n\"builtin/latest\".",
          "type": "string"
        },
        "labelDetectionMode": {
          "description": "What labels should be detected with LABEL_DETECTION, in addition to\nvideo-level labels or segment-level labels.\nIf unspecified, defaults to `SHOT_MODE`.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Detect shot-level labels.",
            "Detect frame-level labels.",
            "Detect both shot-level and frame-level labels."
          ],
          "enum": [
            "LABEL_DETECTION_MODE_UNSPECIFIED",
            "SHOT_MODE",
            "FRAME_MODE",
            "SHOT_AND_FRAME_MODE"
          ]
        },
        "stationaryCamera": {
          "description": "Whether the video has been shot from a stationary (i.e. non-moving) camera.\nWhen set to true, might improve detection accuracy for moving objects.\nShould be used with `SHOT_AND_FRAME_MODE` enabled.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudVideointelligenceV1_LabelDetectionConfig"
    },
    "GoogleCloudVideointelligenceV1_ExplicitContentDetectionConfig": {
      "description": "Config for EXPLICIT_CONTENT_DETECTION.",
      "type": "object",
      "properties": {
        "model": {
          "description": "Model to use for explicit content detection.\nSupported values: \"builtin/stable\" (the default if unset) and\n\"builtin/latest\".",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1_ExplicitContentDetectionConfig"
    },
    "GoogleCloudVideointelligenceV1beta2_LabelSegment": {
      "description": "Video segment level annotation results for label detection.",
      "type": "object",
      "properties": {
        "confidence": {
          "description": "Confidence that the label is accurate. Range: [0, 1].",
          "format": "float",
          "type": "number"
        },
        "segment": {
          "$ref": "GoogleCloudVideointelligenceV1beta2_VideoSegment",
          "description": "Video segment where a label was detected."
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta2_LabelSegment"
    },
    "GoogleCloudVideointelligenceV1_VideoContext": {
      "description": "Video context and/or feature-specific parameters.",
      "type": "object",
      "properties": {
        "explicitContentDetectionConfig": {
          "$ref": "GoogleCloudVideointelligenceV1_ExplicitContentDetectionConfig",
          "description": "Config for EXPLICIT_CONTENT_DETECTION."
        },
        "segments": {
          "description": "Video segments to annotate. The segments may overlap and are not required\nto be contiguous or span the whole video. If unspecified, each video is\ntreated as a single segment.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1_VideoSegment"
          }
        },
        "shotChangeDetectionConfig": {
          "description": "Config for SHOT_CHANGE_DETECTION.",
          "$ref": "GoogleCloudVideointelligenceV1_ShotChangeDetectionConfig"
        },
        "labelDetectionConfig": {
          "description": "Config for LABEL_DETECTION.",
          "$ref": "GoogleCloudVideointelligenceV1_LabelDetectionConfig"
        }
      },
      "id": "GoogleCloudVideointelligenceV1_VideoContext"
    },
    "GoogleCloudVideointelligenceV1p2beta1_LabelFrame": {
      "properties": {
        "confidence": {
          "description": "Confidence that the label is accurate. Range: [0, 1].",
          "format": "float",
          "type": "number"
        },
        "timeOffset": {
          "description": "Time-offset, relative to the beginning of the video, corresponding to the\nvideo frame for this location.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_LabelFrame",
      "description": "Video frame level annotation results for label detection.",
      "type": "object"
    },
    "GoogleCloudVideointelligenceV1p2beta1_ExplicitContentFrame": {
      "description": "Video frame level annotation results for explicit content.",
      "type": "object",
      "properties": {
        "pornographyLikelihood": {
          "description": "Likelihood of the pornography content..",
          "type": "string",
          "enumDescriptions": [
            "Unspecified likelihood.",
            "Very unlikely.",
            "Unlikely.",
            "Possible.",
            "Likely.",
            "Very likely."
          ],
          "enum": [
            "LIKELIHOOD_UNSPECIFIED",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "timeOffset": {
          "description": "Time-offset, relative to the beginning of the video, corresponding to the\nvideo frame for this location.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_ExplicitContentFrame"
    },
    "GoogleCloudVideointelligenceV1beta2_Entity": {
      "description": "Detected entity from video analysis.",
      "type": "object",
      "properties": {
        "languageCode": {
          "description": "Language code for `description` in BCP-47 format.",
          "type": "string"
        },
        "entityId": {
          "description": "Opaque entity ID. Some IDs may be available in\n[Google Knowledge Graph Search\nAPI](https://developers.google.com/knowledge-graph/).",
          "type": "string"
        },
        "description": {
          "description": "Textual description, e.g. `Fixed-gear bicycle`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta2_Entity"
    },
    "GoogleCloudVideointelligenceV1p2beta1_TextFrame": {
      "properties": {
        "rotatedBoundingBox": {
          "$ref": "GoogleCloudVideointelligenceV1p2beta1_NormalizedBoundingPoly",
          "description": "Bounding polygon of the detected text for this frame."
        },
        "timeOffset": {
          "description": "Timestamp of this frame.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_TextFrame",
      "description": "Video frame level annotation results for text annotation (OCR).\nContains information regarding timestamp and bounding box locations for the\nframes containing detected OCR text snippets.",
      "type": "object"
    },
    "GoogleLongrunning_CancelOperationRequest": {
      "properties": {},
      "id": "GoogleLongrunning_CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object"
    },
    "GoogleCloudVideointelligenceV1p2beta1_Entity": {
      "description": "Detected entity from video analysis.",
      "type": "object",
      "properties": {
        "languageCode": {
          "description": "Language code for `description` in BCP-47 format.",
          "type": "string"
        },
        "entityId": {
          "description": "Opaque entity ID. Some IDs may be available in\n[Google Knowledge Graph Search\nAPI](https://developers.google.com/knowledge-graph/).",
          "type": "string"
        },
        "description": {
          "description": "Textual description, e.g. `Fixed-gear bicycle`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_Entity"
    },
    "GoogleCloudVideointelligenceV1_LabelAnnotation": {
      "description": "Label annotation.",
      "type": "object",
      "properties": {
        "frames": {
          "description": "All video frames where a label was detected.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1_LabelFrame"
          }
        },
        "segments": {
          "description": "All video segments where a label was detected.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1_LabelSegment"
          }
        },
        "categoryEntities": {
          "description": "Common categories for the detected entity.\nE.g. when the label is `Terrier` the category is likely `dog`. And in some\ncases there might be more than one categories e.g. `Terrier` could also be\na `pet`.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1_Entity"
          }
        },
        "entity": {
          "$ref": "GoogleCloudVideointelligenceV1_Entity",
          "description": "Detected entity."
        }
      },
      "id": "GoogleCloudVideointelligenceV1_LabelAnnotation"
    },
    "GoogleCloudVideointelligenceV1p2beta1_ExplicitContentAnnotation": {
      "description": "Explicit content annotation (based on per-frame visual signals only).\nIf no explicit content has been detected in a frame, no annotations are\npresent for that frame.",
      "type": "object",
      "properties": {
        "frames": {
          "description": "All video frames where explicit content was detected.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p2beta1_ExplicitContentFrame"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_ExplicitContentAnnotation"
    },
    "GoogleCloudVideointelligenceV1p2beta1_ObjectTrackingAnnotation": {
      "description": "Annotations corresponding to one tracked object.",
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "GoogleCloudVideointelligenceV1p2beta1_Entity",
          "description": "Entity to specify the object category that this track is labeled as."
        },
        "confidence": {
          "description": "Object category's labeling confidence of this track.",
          "format": "float",
          "type": "number"
        },
        "frames": {
          "description": "Information corresponding to all frames where this object track appears.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p2beta1_ObjectTrackingFrame"
          }
        },
        "segment": {
          "$ref": "GoogleCloudVideointelligenceV1p2beta1_VideoSegment",
          "description": "Each object track corresponds to one video segment where it appears."
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_ObjectTrackingAnnotation"
    },
    "GoogleCloudVideointelligenceV1_VideoSegment": {
      "properties": {
        "endTimeOffset": {
          "description": "Time-offset, relative to the beginning of the video,\ncorresponding to the end of the segment (inclusive).",
          "format": "google-duration",
          "type": "string"
        },
        "startTimeOffset": {
          "description": "Time-offset, relative to the beginning of the video,\ncorresponding to the start of the segment (inclusive).",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1_VideoSegment",
      "description": "Video segment.",
      "type": "object"
    },
    "GoogleCloudVideointelligenceV1p1beta1_AnnotateVideoResponse": {
      "description": "Video annotation response. Included in the `response`\nfield of the `Operation` returned by the `GetOperation`\ncall of the `google::longrunning::Operations` service.",
      "type": "object",
      "properties": {
        "annotationResults": {
          "description": "Annotation results for all videos specified in `AnnotateVideoRequest`.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p1beta1_VideoAnnotationResults"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1p1beta1_AnnotateVideoResponse"
    },
    "GoogleCloudVideointelligenceV1beta2_VideoAnnotationResults": {
      "properties": {
        "explicitAnnotation": {
          "$ref": "GoogleCloudVideointelligenceV1beta2_ExplicitContentAnnotation",
          "description": "Explicit content annotation."
        },
        "segmentLabelAnnotations": {
          "description": "Label annotations on video level or user specified segment level.\nThere is exactly one element for each unique label.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta2_LabelAnnotation"
          }
        },
        "shotAnnotations": {
          "description": "Shot annotations. Each shot is represented as a video segment.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta2_VideoSegment"
          }
        },
        "shotLabelAnnotations": {
          "description": "Label annotations on shot level.\nThere is exactly one element for each unique label.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta2_LabelAnnotation"
          }
        },
        "error": {
          "$ref": "GoogleRpc_Status",
          "description": "If set, indicates an error. Note that for a single `AnnotateVideoRequest`\nsome videos may succeed and some may fail."
        },
        "frameLabelAnnotations": {
          "description": "Label annotations on frame level.\nThere is exactly one element for each unique label.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta2_LabelAnnotation"
          }
        },
        "inputUri": {
          "description": "Video file location in\n[Google Cloud Storage](https://cloud.google.com/storage/).",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta2_VideoAnnotationResults",
      "description": "Annotation results for a single video.",
      "type": "object"
    },
    "GoogleCloudVideointelligenceV1p1beta1_AnnotateVideoProgress": {
      "description": "Video annotation progress. Included in the `metadata`\nfield of the `Operation` returned by the `GetOperation`\ncall of the `google::longrunning::Operations` service.",
      "type": "object",
      "properties": {
        "annotationProgress": {
          "description": "Progress metadata for all videos specified in `AnnotateVideoRequest`.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p1beta1_VideoAnnotationProgress"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1p1beta1_AnnotateVideoProgress"
    },
    "GoogleCloudVideointelligenceV1p1beta1_WordInfo": {
      "properties": {
        "confidence": {
          "description": "Output only. The confidence estimate between 0.0 and 1.0. A higher number\nindicates an estimated greater likelihood that the recognized words are\ncorrect. This field is set only for the top alternative.\nThis field is not guaranteed to be accurate and users should not rely on it\nto be always provided.\nThe default of 0.0 is a sentinel value indicating `confidence` was not set.",
          "format": "float",
          "type": "number"
        },
        "startTime": {
          "description": "Time offset relative to the beginning of the audio, and\ncorresponding to the start of the spoken word. This field is only set if\n`enable_word_time_offsets=true` and only in the top hypothesis. This is an\nexperimental feature and the accuracy of the time offset can vary.",
          "format": "google-duration",
          "type": "string"
        },
        "word": {
          "description": "The word corresponding to this set of information.",
          "type": "string"
        },
        "speakerTag": {
          "description": "Output only. A distinct integer value is assigned for every speaker within\nthe audio. This field specifies which one of those speakers was detected to\nhave spoken this word. Value ranges from 1 up to diarization_speaker_count,\nand is only set if speaker diarization is enabled.",
          "format": "int32",
          "type": "integer"
        },
        "endTime": {
          "description": "Time offset relative to the beginning of the audio, and\ncorresponding to the end of the spoken word. This field is only set if\n`enable_word_time_offsets=true` and only in the top hypothesis. This is an\nexperimental feature and the accuracy of the time offset can vary.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1p1beta1_WordInfo",
      "description": "Word-specific information for recognized words. Word information is only\nincluded in the response when certain request parameters are set, such\nas `enable_word_time_offsets`.",
      "type": "object"
    },
    "GoogleCloudVideointelligenceV1p2beta1_VideoSegment": {
      "description": "Video segment.",
      "type": "object",
      "properties": {
        "endTimeOffset": {
          "description": "Time-offset, relative to the beginning of the video,\ncorresponding to the end of the segment (inclusive).",
          "format": "google-duration",
          "type": "string"
        },
        "startTimeOffset": {
          "description": "Time-offset, relative to the beginning of the video,\ncorresponding to the start of the segment (inclusive).",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_VideoSegment"
    },
    "GoogleCloudVideointelligenceV1_ExplicitContentFrame": {
      "description": "Video frame level annotation results for explicit content.",
      "type": "object",
      "properties": {
        "pornographyLikelihood": {
          "enum": [
            "LIKELIHOOD_UNSPECIFIED",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood of the pornography content..",
          "type": "string",
          "enumDescriptions": [
            "Unspecified likelihood.",
            "Very unlikely.",
            "Unlikely.",
            "Possible.",
            "Likely.",
            "Very likely."
          ]
        },
        "timeOffset": {
          "description": "Time-offset, relative to the beginning of the video, corresponding to the\nvideo frame for this location.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1_ExplicitContentFrame"
    },
    "GoogleCloudVideointelligenceV1p1beta1_LabelAnnotation": {
      "properties": {
        "categoryEntities": {
          "description": "Common categories for the detected entity.\nE.g. when the label is `Terrier` the category is likely `dog`. And in some\ncases there might be more than one categories e.g. `Terrier` could also be\na `pet`.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p1beta1_Entity"
          }
        },
        "entity": {
          "$ref": "GoogleCloudVideointelligenceV1p1beta1_Entity",
          "description": "Detected entity."
        },
        "frames": {
          "description": "All video frames where a label was detected.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p1beta1_LabelFrame"
          }
        },
        "segments": {
          "description": "All video segments where a label was detected.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p1beta1_LabelSegment"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1p1beta1_LabelAnnotation",
      "description": "Label annotation.",
      "type": "object"
    },
    "GoogleCloudVideointelligenceV1_ExplicitContentAnnotation": {
      "description": "Explicit content annotation (based on per-frame visual signals only).\nIf no explicit content has been detected in a frame, no annotations are\npresent for that frame.",
      "type": "object",
      "properties": {
        "frames": {
          "description": "All video frames where explicit content was detected.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1_ExplicitContentFrame"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1_ExplicitContentAnnotation"
    },
    "GoogleCloudVideointelligenceV1beta2_AnnotateVideoProgress": {
      "description": "Video annotation progress. Included in the `metadata`\nfield of the `Operation` returned by the `GetOperation`\ncall of the `google::longrunning::Operations` service.",
      "type": "object",
      "properties": {
        "annotationProgress": {
          "description": "Progress metadata for all videos specified in `AnnotateVideoRequest`.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta2_VideoAnnotationProgress"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta2_AnnotateVideoProgress"
    },
    "GoogleCloudVideointelligenceV1p2beta1_NormalizedVertex": {
      "description": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the original image\nand range from 0 to 1.",
      "type": "object",
      "properties": {
        "y": {
          "description": "Y coordinate.",
          "format": "float",
          "type": "number"
        },
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_NormalizedVertex"
    },
    "GoogleCloudVideointelligenceV1p2beta1_NormalizedBoundingPoly": {
      "description": "Normalized bounding polygon for text (that might not be aligned with axis).\nContains list of the corner points in clockwise order starting from\ntop-left corner. For example, for a rectangular bounding box:\nWhen the text is horizontal it might look like:\n        0----1\n        |    |\n        3----2\n\nWhen it's clockwise rotated 180 degrees around the top-left corner it\nbecomes:\n        2----3\n        |    |\n        1----0\n\nand the vertex order will still be (0, 1, 2, 3). Note that values can be less\nthan 0, or greater than 1 due to trignometric calculations for location of\nthe box.",
      "type": "object",
      "properties": {
        "vertices": {
          "description": "Normalized vertices of the bounding polygon.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p2beta1_NormalizedVertex"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_NormalizedBoundingPoly"
    },
    "GoogleCloudVideointelligenceV1_AnnotateVideoRequest": {
      "description": "Video annotation request.",
      "type": "object",
      "properties": {
        "features": {
          "enumDescriptions": [
            "Unspecified.",
            "Label detection. Detect objects, such as dog or flower.",
            "Shot change detection.",
            "Explicit content detection."
          ],
          "description": "Requested video annotation features.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "FEATURE_UNSPECIFIED",
              "LABEL_DETECTION",
              "SHOT_CHANGE_DETECTION",
              "EXPLICIT_CONTENT_DETECTION"
            ]
          }
        },
        "outputUri": {
          "description": "Optional location where the output (in JSON format) should be stored.\nCurrently, only [Google Cloud Storage](https://cloud.google.com/storage/)\nURIs are supported, which must be specified in the following format:\n`gs://bucket-id/object-id` (other URI formats return\ngoogle.rpc.Code.INVALID_ARGUMENT). For more information, see\n[Request URIs](/storage/docs/reference-uris).",
          "type": "string"
        },
        "videoContext": {
          "description": "Additional video context and/or feature-specific parameters.",
          "$ref": "GoogleCloudVideointelligenceV1_VideoContext"
        },
        "locationId": {
          "description": "Optional cloud region where annotation should take place. Supported cloud\nregions: `us-east1`, `us-west1`, `europe-west1`, `asia-east1`. If no region\nis specified, a region will be determined based on video file location.",
          "type": "string"
        },
        "inputUri": {
          "description": "Input video location. Currently, only\n[Google Cloud Storage](https://cloud.google.com/storage/) URIs are\nsupported, which must be specified in the following format:\n`gs://bucket-id/object-id` (other URI formats return\ngoogle.rpc.Code.INVALID_ARGUMENT). For more information, see\n[Request URIs](/storage/docs/reference-uris).\nA video URI may include wildcards in `object-id`, and thus identify\nmultiple videos. Supported wildcards: '*' to match 0 or more characters;\n'?' to match 1 character. If unset, the input video should be embedded\nin the request as `input_content`. If set, `input_content` should be unset.",
          "type": "string"
        },
        "inputContent": {
          "description": "The video data bytes.\nIf unset, the input video(s) should be specified via `input_uri`.\nIf set, `input_uri` should be unset.",
          "format": "byte",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1_AnnotateVideoRequest"
    },
    "GoogleCloudVideointelligenceV1p1beta1_SpeechRecognitionAlternative": {
      "description": "Alternative hypotheses (a.k.a. n-best list).",
      "type": "object",
      "properties": {
        "confidence": {
          "description": "The confidence estimate between 0.0 and 1.0. A higher number\nindicates an estimated greater likelihood that the recognized words are\ncorrect. This field is typically provided only for the top hypothesis, and\nonly for `is_final=true` results. Clients should not rely on the\n`confidence` field as it is not guaranteed to be accurate or consistent.\nThe default of 0.0 is a sentinel value indicating `confidence` was not set.",
          "format": "float",
          "type": "number"
        },
        "transcript": {
          "description": "Transcript text representing the words that the user spoke.",
          "type": "string"
        },
        "words": {
          "description": "A list of word-specific information for each recognized word.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p1beta1_WordInfo"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1p1beta1_SpeechRecognitionAlternative"
    },
    "GoogleCloudVideointelligenceV1p2beta1_TextSegment": {
      "description": "Video segment level annotation results for text detection.",
      "type": "object",
      "properties": {
        "confidence": {
          "description": "Confidence for the track of detected text. It is calculated as the highest\nover all frames where OCR detected text appears.",
          "format": "float",
          "type": "number"
        },
        "frames": {
          "description": "Information related to the frames where OCR detected text appears.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p2beta1_TextFrame"
          }
        },
        "segment": {
          "description": "Video segment where a text snippet was detected.",
          "$ref": "GoogleCloudVideointelligenceV1p2beta1_VideoSegment"
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_TextSegment"
    },
    "GoogleCloudVideointelligenceV1_AnnotateVideoProgress": {
      "properties": {
        "annotationProgress": {
          "description": "Progress metadata for all videos specified in `AnnotateVideoRequest`.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1_VideoAnnotationProgress"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1_AnnotateVideoProgress",
      "description": "Video annotation progress. Included in the `metadata`\nfield of the `Operation` returned by the `GetOperation`\ncall of the `google::longrunning::Operations` service.",
      "type": "object"
    },
    "GoogleLongrunning_Operation": {
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpc_Status"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `operations/some/unique/name`.",
          "type": "string"
        }
      },
      "id": "GoogleLongrunning_Operation"
    },
    "GoogleCloudVideointelligenceV1beta2_VideoAnnotationProgress": {
      "properties": {
        "updateTime": {
          "description": "Time of the most recent update.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "Time when the request was received.",
          "format": "google-datetime",
          "type": "string"
        },
        "inputUri": {
          "description": "Video file location in\n[Google Cloud Storage](https://cloud.google.com/storage/).",
          "type": "string"
        },
        "progressPercent": {
          "description": "Approximate percentage processed thus far. Guaranteed to be\n100 when fully processed.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta2_VideoAnnotationProgress",
      "description": "Annotation progress for a single video.",
      "type": "object"
    },
    "GoogleLongrunning_ListOperationsResponse": {
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunning_Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "GoogleLongrunning_ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object"
    },
    "GoogleCloudVideointelligenceV1p2beta1_TextAnnotation": {
      "properties": {
        "text": {
          "description": "The detected text.",
          "type": "string"
        },
        "segments": {
          "description": "All video segments where OCR detected text appears.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p2beta1_TextSegment"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_TextAnnotation",
      "description": "Annotations related to one detected OCR text snippet. This will contain the\ncorresponding text, confidence value, and frame level information for each\ndetection.",
      "type": "object"
    },
    "GoogleCloudVideointelligenceV1p2beta1_AnnotateVideoProgress": {
      "description": "Video annotation progress. Included in the `metadata`\nfield of the `Operation` returned by the `GetOperation`\ncall of the `google::longrunning::Operations` service.",
      "type": "object",
      "properties": {
        "annotationProgress": {
          "description": "Progress metadata for all videos specified in `AnnotateVideoRequest`.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_AnnotateVideoProgress"
    },
    "GoogleCloudVideointelligenceV1beta2_ExplicitContentFrame": {
      "properties": {
        "pornographyLikelihood": {
          "enum": [
            "LIKELIHOOD_UNSPECIFIED",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood of the pornography content..",
          "type": "string",
          "enumDescriptions": [
            "Unspecified likelihood.",
            "Very unlikely.",
            "Unlikely.",
            "Possible.",
            "Likely.",
            "Very likely."
          ]
        },
        "timeOffset": {
          "description": "Time-offset, relative to the beginning of the video, corresponding to the\nvideo frame for this location.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta2_ExplicitContentFrame",
      "description": "Video frame level annotation results for explicit content.",
      "type": "object"
    },
    "GoogleCloudVideointelligenceV1_ShotChangeDetectionConfig": {
      "description": "Config for SHOT_CHANGE_DETECTION.",
      "type": "object",
      "properties": {
        "model": {
          "description": "Model to use for shot change detection.\nSupported values: \"builtin/stable\" (the default if unset) and\n\"builtin/latest\".",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1_ShotChangeDetectionConfig"
    },
    "GoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress": {
      "properties": {
        "inputUri": {
          "description": "Video file location in\n[Google Cloud Storage](https://cloud.google.com/storage/).",
          "type": "string"
        },
        "progressPercent": {
          "description": "Approximate percentage processed thus far. Guaranteed to be\n100 when fully processed.",
          "format": "int32",
          "type": "integer"
        },
        "updateTime": {
          "description": "Time of the most recent update.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "Time when the request was received.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress",
      "description": "Annotation progress for a single video.",
      "type": "object"
    },
    "GoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults": {
      "description": "Annotation results for a single video.",
      "type": "object",
      "properties": {
        "shotLabelAnnotations": {
          "description": "Label annotations on shot level.\nThere is exactly one element for each unique label.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p2beta1_LabelAnnotation"
          }
        },
        "error": {
          "$ref": "GoogleRpc_Status",
          "description": "If set, indicates an error. Note that for a single `AnnotateVideoRequest`\nsome videos may succeed and some may fail."
        },
        "frameLabelAnnotations": {
          "description": "Label annotations on frame level.\nThere is exactly one element for each unique label.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p2beta1_LabelAnnotation"
          }
        },
        "inputUri": {
          "description": "Video file location in\n[Google Cloud Storage](https://cloud.google.com/storage/).",
          "type": "string"
        },
        "segmentLabelAnnotations": {
          "description": "Label annotations on video level or user specified segment level.\nThere is exactly one element for each unique label.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p2beta1_LabelAnnotation"
          }
        },
        "explicitAnnotation": {
          "description": "Explicit content annotation.",
          "$ref": "GoogleCloudVideointelligenceV1p2beta1_ExplicitContentAnnotation"
        },
        "objectAnnotations": {
          "description": "Annotations for list of objects detected and tracked in video.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p2beta1_ObjectTrackingAnnotation"
          }
        },
        "textAnnotations": {
          "description": "OCR text detection and tracking.\nAnnotations for list of detected text snippets. Each will have list of\nframe information associated with it.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p2beta1_TextAnnotation"
          }
        },
        "shotAnnotations": {
          "description": "Shot annotations. Each shot is represented as a video segment.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p2beta1_VideoSegment"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults"
    },
    "GoogleCloudVideointelligenceV1p1beta1_ExplicitContentAnnotation": {
      "description": "Explicit content annotation (based on per-frame visual signals only).\nIf no explicit content has been detected in a frame, no annotations are\npresent for that frame.",
      "type": "object",
      "properties": {
        "frames": {
          "description": "All video frames where explicit content was detected.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p1beta1_ExplicitContentFrame"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1p1beta1_ExplicitContentAnnotation"
    },
    "GoogleCloudVideointelligenceV1beta2_LabelAnnotation": {
      "description": "Label annotation.",
      "type": "object",
      "properties": {
        "segments": {
          "description": "All video segments where a label was detected.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta2_LabelSegment"
          }
        },
        "categoryEntities": {
          "description": "Common categories for the detected entity.\nE.g. when the label is `Terrier` the category is likely `dog`. And in some\ncases there might be more than one categories e.g. `Terrier` could also be\na `pet`.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta2_Entity"
          }
        },
        "entity": {
          "$ref": "GoogleCloudVideointelligenceV1beta2_Entity",
          "description": "Detected entity."
        },
        "frames": {
          "description": "All video frames where a label was detected.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta2_LabelFrame"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta2_LabelAnnotation"
    },
    "GoogleCloudVideointelligenceV1p2beta1_LabelAnnotation": {
      "description": "Label annotation.",
      "type": "object",
      "properties": {
        "categoryEntities": {
          "description": "Common categories for the detected entity.\nE.g. when the label is `Terrier` the category is likely `dog`. And in some\ncases there might be more than one categories e.g. `Terrier` could also be\na `pet`.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p2beta1_Entity"
          }
        },
        "entity": {
          "description": "Detected entity.",
          "$ref": "GoogleCloudVideointelligenceV1p2beta1_Entity"
        },
        "frames": {
          "description": "All video frames where a label was detected.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p2beta1_LabelFrame"
          }
        },
        "segments": {
          "description": "All video segments where a label was detected.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1p2beta1_LabelSegment"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1p2beta1_LabelAnnotation"
    }
  },
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "Cloud Video Intelligence",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "rootUrl": "https://videointelligence.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "videointelligence",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Cloud Video Intelligence API",
  "ownerName": "Google",
  "resources": {
    "videos": {
      "methods": {
        "annotate": {
          "flatPath": "v1/videos:annotate",
          "path": "v1/videos:annotate",
          "id": "videointelligence.videos.annotate",
          "request": {
            "$ref": "GoogleCloudVideointelligenceV1_AnnotateVideoRequest"
          },
          "description": "Performs asynchronous video annotation. Progress and results can be\nretrieved through the `google.longrunning.Operations` interface.\n`Operation.metadata` contains `AnnotateVideoProgress` (progress).\n`Operation.response` contains `AnnotateVideoResponse` (results).",
          "response": {
            "$ref": "GoogleLongrunning_Operation"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {}
        }
      }
    },
    "operations": {
      "methods": {
        "cancel": {
          "response": {
            "$ref": "GoogleProtobuf_Empty"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "pattern": "^[^/]+$",
              "location": "path",
              "description": "The name of the operation resource to be cancelled.",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "v1/operations/{operationsId}:cancel",
          "path": "v1/operations/{+name}:cancel",
          "id": "videointelligence.operations.cancel",
          "request": {
            "$ref": "GoogleLongrunning_CancelOperationRequest"
          },
          "description": "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`."
        },
        "delete": {
          "flatPath": "v1/operations/{operationsId}",
          "path": "v1/operations/{+name}",
          "id": "videointelligence.operations.delete",
          "description": "Deletes a long-running operation. This method indicates that the client is\nno longer interested in the operation result. It does not cancel the\noperation. If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.",
          "response": {
            "$ref": "GoogleProtobuf_Empty"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "description": "The name of the operation resource to be deleted.",
              "required": true,
              "type": "string",
              "pattern": "^[^/]+$",
              "location": "path"
            }
          }
        },
        "list": {
          "id": "videointelligence.operations.list",
          "path": "v1/operations",
          "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users/*/operations`. To\noverride the binding, API services can add a binding such as\n`\"/v1/{name=users/*}/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id.",
          "httpMethod": "GET",
          "response": {
            "$ref": "GoogleLongrunning_ListOperationsResponse"
          },
          "parameterOrder": [],
          "parameters": {
            "filter": {
              "description": "The standard list filter.",
              "type": "string",
              "location": "query"
            },
            "name": {
              "description": "The name of the operation's parent resource.",
              "type": "string",
              "location": "query"
            },
            "pageToken": {
              "description": "The standard list page token.",
              "type": "string",
              "location": "query"
            },
            "pageSize": {
              "description": "The standard list page size.",
              "format": "int32",
              "type": "integer",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/operations"
        },
        "get": {
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "GoogleLongrunning_Operation"
          },
          "parameters": {
            "name": {
              "description": "The name of the operation resource.",
              "required": true,
              "type": "string",
              "pattern": "^[^/]+$",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/operations/{operationsId}",
          "id": "videointelligence.operations.get",
          "path": "v1/operations/{+name}",
          "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice."
        }
      }
    }
  },
  "parameters": {
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string"
    }
  }
}

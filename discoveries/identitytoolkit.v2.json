{
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "servicePath": "",
  "id": "identitytoolkit:v2",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "description": "The Google Identity Toolkit API lets you use open standards to verify a user's identity.",
  "version_module": true,
  "schemas": {
    "GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo": {
      "id": "GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo",
      "type": "object",
      "description": "Phone Verification info for a FinalizeMfa response.",
      "properties": {
        "phoneNumber": {
          "description": "For Android verification proof.",
          "type": "string"
        },
        "androidVerificationProof": {
          "description": "Android only. Long-lived replacement for valid code tied to android device.",
          "type": "string"
        },
        "androidVerificationProofExpireTime": {
          "description": "Android only. Expiration time of verification proof in seconds.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig": {
      "description": "Configures the regions where users are allowed to send verification SMS for the project or tenant. This is based on the calling code of the destination phone number.",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig",
      "properties": {
        "allowByDefault": {
          "description": "A policy of allowing SMS to every region by default and adding disallowed regions to a disallow list.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2AllowByDefault"
        },
        "allowlistOnly": {
          "description": "A policy of only allowing regions by explicitly adding them to an allowlist.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2AllowlistOnly"
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2RequestLogging": {
      "id": "GoogleCloudIdentitytoolkitAdminV2RequestLogging",
      "properties": {
        "enabled": {
          "description": "Whether logging is enabled for this project or not.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Configuration for logging requests made to this project to Stackdriver Logging"
    },
    "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig": {
      "id": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The config's display name set by developers."
        },
        "responseType": {
          "description": "The response type to request for in the OAuth authorization flow. You can set either `id_token` or `code` to true, but not both. Setting both types to be simultaneously true (`{code: true, id_token: true}`) is not yet supported.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthResponseType"
        },
        "clientSecret": {
          "description": "The client secret of the OAuth client, to enable OIDC code flow.",
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "description": "True if allows the user to sign in with the provider."
        },
        "name": {
          "description": "The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests.",
          "type": "string"
        },
        "clientId": {
          "description": "The client id of an OAuth client.",
          "type": "string"
        },
        "issuer": {
          "description": "For OIDC Idps, the issuer identifier.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Configuration options for authenticating with an OAuth IDP."
    },
    "GoogleCloudIdentitytoolkitAdminV2QuotaConfig": {
      "properties": {
        "signUpQuotaConfig": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2TemporaryQuota",
          "description": "Quota for the Signup endpoint, if overwritten. Signup quota is measured in sign ups per project per hour per IP."
        }
      },
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2QuotaConfig",
      "description": "Configuration related to quotas."
    },
    "GoogleCloudIdentitytoolkitAdminV2NotificationConfig": {
      "properties": {
        "sendEmail": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2SendEmail",
          "description": "Options for email sending."
        },
        "defaultLocale": {
          "type": "string",
          "description": "Default locale used for email and SMS in IETF BCP 47 format."
        },
        "sendSms": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2SendSms",
          "description": "Options for SMS sending."
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2NotificationConfig",
      "description": "Configuration related to sending notifications to users.",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitAdminV2Anonymous": {
      "properties": {
        "enabled": {
          "description": "Whether anonymous user auth is enabled for the project or not.",
          "type": "boolean"
        }
      },
      "description": "Configuration options related to authenticating an anonymous user.",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2Anonymous"
    },
    "GoogleIamV1TestIamPermissionsRequest": {
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array"
        }
      },
      "description": "Request message for `TestIamPermissions` method.",
      "id": "GoogleIamV1TestIamPermissionsRequest",
      "type": "object"
    },
    "GoogleIamV1TestIamPermissionsResponse": {
      "description": "Response message for `TestIamPermissions` method.",
      "id": "GoogleIamV1TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
        }
      },
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse": {
      "id": "GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse",
      "properties": {
        "oauthIdpConfigs": {
          "description": "The set of configs.",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "type": "object",
      "description": "Response for ListOAuthIdpConfigs"
    },
    "GoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo": {
      "properties": {
        "sessionInfo": {
          "description": "An encoded string that represents the enrollment session.",
          "type": "string"
        },
        "sharedSecretKey": {
          "type": "string",
          "description": "A base 32 encoded string that represents the shared TOTP secret. The base 32 encoding is the one specified by [RFC4648#section-6](https://datatracker.ietf.org/doc/html/rfc4648#section-6). (This is the same as the base 32 encoding from [RFC3548#section-5](https://datatracker.ietf.org/doc/html/rfc3548#section-5).)"
        },
        "hashingAlgorithm": {
          "type": "string",
          "description": "The hashing algorithm used to generate the verification code."
        },
        "periodSec": {
          "format": "int32",
          "type": "integer",
          "description": "Duration in seconds at which the verification code will change."
        },
        "finalizeEnrollmentTime": {
          "format": "google-datetime",
          "description": "The time by which the enrollment must finish.",
          "type": "string"
        },
        "verificationCodeLength": {
          "format": "int32",
          "description": "The length of the verification code that needs to be generated.",
          "type": "integer"
        }
      },
      "description": "Mfa response info specific to TOTP auth for StartMfa.",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo"
    },
    "GoogleCloudIdentitytoolkitAdminV2MonitoringConfig": {
      "description": "Configuration related to monitoring project activity.",
      "id": "GoogleCloudIdentitytoolkitAdminV2MonitoringConfig",
      "type": "object",
      "properties": {
        "requestLogging": {
          "description": "Configuration for logging requests made to this project to Stackdriver Logging",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2RequestLogging"
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig": {
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig",
      "description": "TotpMFAProviderConfig represents the TOTP based MFA provider.",
      "properties": {
        "adjacentIntervals": {
          "description": "The allowed number of adjacent intervals that will be used for verification to avoid clock skew.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig": {
      "description": "Additional config for SignInWithApple.",
      "type": "object",
      "properties": {
        "bundleIds": {
          "description": "A list of Bundle ID's usable by this project",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "codeFlowConfig": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig"
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig"
    },
    "GoogleCloudIdentitytoolkitAdminV2CustomStrengthOptions": {
      "properties": {
        "containsLowercaseCharacter": {
          "description": "The password must contain a lower case character.",
          "type": "boolean"
        },
        "containsNonAlphanumericCharacter": {
          "type": "boolean",
          "description": "The password must contain a non alpha numeric character."
        },
        "containsNumericCharacter": {
          "description": "The password must contain a number.",
          "type": "boolean"
        },
        "containsUppercaseCharacter": {
          "type": "boolean",
          "description": "The password must contain an upper case character."
        },
        "minPasswordLength": {
          "description": "Minimum password length. Range from 6 to 30",
          "format": "int32",
          "type": "integer"
        },
        "maxPasswordLength": {
          "format": "int32",
          "type": "integer",
          "description": "Maximum password length. No default max length"
        }
      },
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2CustomStrengthOptions",
      "description": "Custom strength options to enforce on user passwords."
    },
    "GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse": {
      "id": "GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse",
      "description": "Response for DefaultSupportedIdpConfigs",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "defaultSupportedIdpConfigs": {
          "type": "array",
          "description": "The set of configs.",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
          }
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2SendSms": {
      "properties": {
        "smsTemplate": {
          "readOnly": true,
          "$ref": "GoogleCloudIdentitytoolkitAdminV2SmsTemplate",
          "description": "Output only. The template to use when sending an SMS."
        },
        "useDeviceLocale": {
          "description": "Whether to use the accept_language header for SMS.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Options for SMS sending.",
      "id": "GoogleCloudIdentitytoolkitAdminV2SendSms"
    },
    "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig": {
      "type": "object",
      "properties": {
        "appleSignInConfig": {
          "description": "Additional config for Apple-based projects.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig"
        },
        "clientId": {
          "type": "string",
          "description": "OAuth client ID."
        },
        "enabled": {
          "description": "True if allows the user to sign in with the provider.",
          "type": "boolean"
        },
        "clientSecret": {
          "description": "OAuth client secret.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the DefaultSupportedIdpConfig resource, for example: \"projects/my-awesome-project/defaultSupportedIdpConfigs/google.com\""
        }
      },
      "description": "Configurations options for authenticating with a the standard set of Identity Toolkit-trusted IDPs.",
      "id": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
    },
    "GoogleTypeExpr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "id": "GoogleTypeExpr",
      "properties": {
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        }
      },
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "inboundSamlConfigs": {
          "description": "The set of configs.",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
          },
          "type": "array"
        }
      },
      "description": "Response for ListInboundSamlConfigs",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse"
    },
    "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp": {
      "description": "Standard Identity Toolkit-trusted IDPs.",
      "id": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp",
      "properties": {
        "description": {
          "description": "Description of the Idp",
          "type": "string"
        },
        "idpId": {
          "description": "Id the of Idp",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformResponse": {
      "id": "GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformResponse",
      "description": "Response for InitializeIdentityPlatform. Empty for now.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudIdentitytoolkitAdminV2AllowlistOnly": {
      "type": "object",
      "description": "Defines a policy of only allowing regions by explicitly adding them to an allowlist.",
      "properties": {
        "allowedRegions": {
          "type": "array",
          "description": "Two letter unicode region codes to allow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2AllowlistOnly"
    },
    "GoogleCloudIdentitytoolkitV2PasswordPolicy": {
      "properties": {
        "schemaVersion": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "Output only. schema version number for the password policy"
        },
        "forceUpgradeOnSignin": {
          "description": "Users must have a password compliant with the password policy to sign-in.",
          "type": "boolean"
        },
        "customStrengthOptions": {
          "$ref": "GoogleCloudIdentitytoolkitV2CustomStrengthOptions",
          "description": "The custom strength options enforced by the password policy."
        },
        "enforcementState": {
          "enumDescriptions": [
            "Enforcement state has not been set.",
            "Password Policy will not be used on the project.",
            "Passwords non-compliant with the password policy will be rejected with an error thrown."
          ],
          "enum": [
            "ENFORCEMENT_STATE_UNSPECIFIED",
            "OFF",
            "ENFORCE"
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. Which enforcement mode to use for the password policy."
        },
        "allowedNonAlphanumericCharacters": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. Allowed characters which satisfy the non_alphanumeric requirement."
        }
      },
      "id": "GoogleCloudIdentitytoolkitV2PasswordPolicy",
      "type": "object",
      "description": "Configuration for password policy."
    },
    "GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig": {
      "description": "Options related to MultiFactor Authentication for the project.",
      "properties": {
        "providerConfigs": {
          "type": "array",
          "description": "A list of usable second factors for this project along with their configurations. This field does not support phone based MFA, for that use the 'enabled_providers' field.",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2ProviderConfig"
          }
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "DISABLED",
            "ENABLED",
            "MANDATORY"
          ],
          "enumDescriptions": [
            "Illegal State, should not be used.",
            "Multi-factor authentication cannot be used for this project",
            "Multi-factor authentication can be used for this project",
            "Multi-factor authentication is required for this project. Users from this project must authenticate with the second factor."
          ],
          "description": "Whether MultiFactor Authentication has been enabled for this project.",
          "type": "string"
        },
        "enabledProviders": {
          "type": "array",
          "items": {
            "enum": [
              "PROVIDER_UNSPECIFIED",
              "PHONE_SMS"
            ],
            "type": "string",
            "enumDescriptions": [
              "Illegal Provider, should not be used",
              "SMS is enabled as a second factor for this project."
            ]
          },
          "description": "A list of usable second factors for this project."
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV2CustomStrengthOptions": {
      "properties": {
        "containsNonAlphanumericCharacter": {
          "description": "The password must contain a non alpha numeric character.",
          "type": "boolean"
        },
        "containsUppercaseCharacter": {
          "description": "The password must contain an upper case character.",
          "type": "boolean"
        },
        "minPasswordLength": {
          "format": "int32",
          "type": "integer",
          "description": "Minimum password length. Range from 6 to 30"
        },
        "containsNumericCharacter": {
          "type": "boolean",
          "description": "The password must contain a number."
        },
        "maxPasswordLength": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum password length. No default max length"
        },
        "containsLowercaseCharacter": {
          "type": "boolean",
          "description": "The password must contain a lower case character."
        }
      },
      "type": "object",
      "description": "Custom strength options to enforce on user passwords.",
      "id": "GoogleCloudIdentitytoolkitV2CustomStrengthOptions"
    },
    "GoogleCloudIdentitytoolkitAdminV2Inheritance": {
      "properties": {
        "emailSendingConfig": {
          "type": "boolean",
          "description": "Whether to allow the tenant to inherit custom domains, email templates, and custom SMTP settings. If true, email sent from tenant will follow the project level email sending configurations. If false (by default), emails will go with the default settings with no customizations."
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2Inheritance",
      "type": "object",
      "description": "Settings that the tenants will inherit from project level."
    },
    "GoogleCloudIdentitytoolkitV2StartMfaSignInRequest": {
      "description": "Starts multi-factor sign-in by sending the multi-factor auth challenge.",
      "type": "object",
      "properties": {
        "phoneSignInInfo": {
          "description": "Verification info to authorize sending an SMS for phone verification.",
          "$ref": "GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo"
        },
        "mfaPendingCredential": {
          "description": "Required. Pending credential from first factor sign-in.",
          "type": "string"
        },
        "mfaEnrollmentId": {
          "description": "Required. MFA enrollment id from the user's list of current MFA enrollments.",
          "type": "string"
        },
        "tenantId": {
          "type": "string",
          "description": "The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project."
        }
      },
      "id": "GoogleCloudIdentitytoolkitV2StartMfaSignInRequest"
    },
    "GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials": {
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials",
      "description": "Indicates which credentials to pass to the registered Blocking Functions.",
      "properties": {
        "accessToken": {
          "description": "Whether to pass the user's OAuth identity provider's access token.",
          "type": "boolean"
        },
        "idToken": {
          "type": "boolean",
          "description": "Whether to pass the user's OIDC identity provider's ID token."
        },
        "refreshToken": {
          "type": "boolean",
          "description": "Whether to pass the user's OAuth identity provider's refresh token."
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2ProviderConfig": {
      "id": "GoogleCloudIdentitytoolkitAdminV2ProviderConfig",
      "properties": {
        "state": {
          "description": "Describes the state of the MultiFactor Authentication type.",
          "enum": [
            "MFA_STATE_UNSPECIFIED",
            "DISABLED",
            "ENABLED",
            "MANDATORY"
          ],
          "type": "string",
          "enumDescriptions": [
            "Illegal State, should not be used.",
            "Multi-factor authentication cannot be used for this project.",
            "Multi-factor authentication can be used for this project.",
            "Multi-factor authentication is required for this project. Users from this project must authenticate with the second factor."
          ]
        },
        "totpProviderConfig": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig",
          "description": "TOTP MFA provider config for this project."
        }
      },
      "type": "object",
      "description": "ProviderConfig describes the supported MFA providers along with their configurations."
    },
    "GoogleIamV1Binding": {
      "description": "Associates `members`, or principals, with a `role`.",
      "properties": {
        "condition": {
          "$ref": "GoogleTypeExpr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        },
        "members": {
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "GoogleIamV1Binding"
    },
    "GoogleCloudIdentitytoolkitV2RevokeTokenRequest": {
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project."
        },
        "redirectUri": {
          "type": "string",
          "description": "The redirect URI provided in the initial authorization request made by the client to the IDP. The URI must use the HTTPS protocol, include a domain name, and can't contain an IP address or localhost. Required if token_type is CODE."
        },
        "token": {
          "type": "string",
          "description": "Required. The token to be revoked. If an authorization_code is passed in, the API will first exchange the code for access token and then revoke the token exchanged."
        },
        "tokenType": {
          "enumDescriptions": [
            "Default value, do not use.",
            "Token type is refresh_token.",
            "Token type is access_token.",
            "Token type is authorization_code."
          ],
          "description": "Required. The type of the token to be revoked.",
          "enum": [
            "TOKEN_TYPE_UNSPECIFIED",
            "REFRESH_TOKEN",
            "ACCESS_TOKEN",
            "CODE"
          ],
          "type": "string"
        },
        "idToken": {
          "description": "Required. A valid Identity Platform ID token to link the account. If there was a successful token revocation request on the account and no tokens are generated after the revocation, the duplicate requests will be ignored and returned immediately.",
          "type": "string"
        },
        "providerId": {
          "description": "Required. The idp provider for the token. Currently only supports Apple Idp. The format should be \"apple.com\".",
          "type": "string"
        }
      },
      "description": "Request message for RevokeToken.",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2RevokeTokenRequest"
    },
    "GoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentRequestInfo": {
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentRequestInfo",
      "description": "Mfa request info specific to TOTP auth for StartMfa.",
      "properties": {}
    },
    "GoogleCloudIdentitytoolkitV2RecaptchaEnforcementState": {
      "description": "Enforcement states for reCAPTCHA protection.",
      "properties": {
        "enforcementState": {
          "description": "The reCAPTCHA enforcement state for the provider.",
          "enum": [
            "ENFORCEMENT_STATE_UNSPECIFIED",
            "OFF",
            "AUDIT",
            "ENFORCE"
          ],
          "enumDescriptions": [
            "Enforcement state has not been set.",
            "Unenforced.",
            "reCAPTCHA assessment is created, result is not used to enforce.",
            "reCAPTCHA assessment is created, result is used to enforce."
          ],
          "type": "string"
        },
        "provider": {
          "enumDescriptions": [
            "reCAPTCHA provider not specified",
            "Email password provider"
          ],
          "type": "string",
          "description": "The provider that has reCAPTCHA protection.",
          "enum": [
            "RECAPTCHA_PROVIDER_UNSPECIFIED",
            "EMAIL_PASSWORD_PROVIDER"
          ]
        }
      },
      "id": "GoogleCloudIdentitytoolkitV2RecaptchaEnforcementState",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV2WithdrawMfaRequest": {
      "description": "Withdraws MFA.",
      "properties": {
        "idToken": {
          "type": "string",
          "description": "Required. User's ID token."
        },
        "mfaEnrollmentId": {
          "type": "string",
          "description": "Required. MFA enrollment id from a current MFA enrollment."
        },
        "tenantId": {
          "type": "string",
          "description": "The ID of the Identity Platform tenant that the user unenrolling MFA belongs to. If not set, the user belongs to the default Identity Platform project."
        }
      },
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2WithdrawMfaRequest"
    },
    "GoogleCloudIdentitytoolkitAdminV2OAuthResponseType": {
      "description": "The response type to request for in the OAuth authorization flow. You can set either `id_token` or `code` to true, but not both. Setting both types to be simultaneously true (`{code: true, id_token: true}`) is not yet supported. See https://openid.net/specs/openid-connect-core-1_0.html#Authentication for a mapping of response type to OAuth 2.0 flow.",
      "id": "GoogleCloudIdentitytoolkitAdminV2OAuthResponseType",
      "properties": {
        "idToken": {
          "description": "If true, ID token is returned from IdP's authorization endpoint.",
          "type": "boolean"
        },
        "token": {
          "type": "boolean",
          "deprecated": true,
          "description": "Do not use. The `token` response type is not supported at the moment."
        },
        "code": {
          "description": "If true, authorization code is returned from IdP's authorization endpoint.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse": {
      "description": "FinalizeMfaEnrollment response.",
      "properties": {
        "phoneAuthInfo": {
          "$ref": "GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo",
          "description": "Auxiliary auth info specific to phone auth."
        },
        "refreshToken": {
          "description": "Refresh token updated to reflect MFA enrollment.",
          "type": "string"
        },
        "totpAuthInfo": {
          "$ref": "GoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentResponseInfo",
          "description": "Auxiliary auth info specific to TOTP auth."
        },
        "idToken": {
          "type": "string",
          "description": "ID token updated to reflect MFA enrollment."
        }
      },
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse"
    },
    "GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest": {
      "id": "GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest",
      "description": "Sends MFA enrollment verification SMS for a user.",
      "type": "object",
      "properties": {
        "totpEnrollmentInfo": {
          "$ref": "GoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentRequestInfo",
          "description": "Sign-in info specific to TOTP auth."
        },
        "idToken": {
          "description": "Required. User's ID token.",
          "type": "string"
        },
        "phoneEnrollmentInfo": {
          "description": "Verification info to authorize sending an SMS for phone verification.",
          "$ref": "GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo"
        },
        "tenantId": {
          "description": "The ID of the Identity Platform tenant that the user enrolling MFA belongs to. If not set, the user belongs to the default Identity Platform project.",
          "type": "string"
        }
      }
    },
    "GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse": {
      "properties": {
        "refreshToken": {
          "type": "string",
          "description": "Refresh token for the authenticated user."
        },
        "idToken": {
          "description": "ID token for the authenticated user.",
          "type": "string"
        },
        "phoneAuthInfo": {
          "$ref": "GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo",
          "description": "Extra phone auth info, including android verification proof."
        }
      },
      "description": "FinalizeMfaSignIn response.",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse"
    },
    "GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse": {
      "description": "StartMfaEnrollment response.",
      "properties": {
        "phoneSessionInfo": {
          "description": "Verification info to authorize sending an SMS for phone verification.",
          "$ref": "GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo"
        },
        "totpSessionInfo": {
          "description": "Enrollment response info specific to TOTP auth.",
          "$ref": "GoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo"
        }
      },
      "id": "GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitAdminV2RecaptchaKey": {
      "description": "The reCAPTCHA key config. reCAPTCHA Enterprise offers different keys for different client platforms.",
      "id": "GoogleCloudIdentitytoolkitAdminV2RecaptchaKey",
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The reCAPTCHA Enterprise key resource name, e.g. \"projects/{project}/keys/{key}\""
        },
        "type": {
          "enum": [
            "CLIENT_TYPE_UNSPECIFIED",
            "WEB",
            "IOS",
            "ANDROID"
          ],
          "type": "string",
          "enumDescriptions": [
            "Client type is not specified.",
            "Client type is web.",
            "Client type is iOS.",
            "Client type is Android."
          ],
          "description": "The client's platform type."
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig": {
      "type": "object",
      "description": "Additional config for Apple for code flow.",
      "id": "GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig",
      "properties": {
        "keyId": {
          "description": "Key ID for the private key.",
          "type": "string"
        },
        "teamId": {
          "type": "string",
          "description": "Apple Developer Team ID."
        },
        "privateKey": {
          "type": "string",
          "description": "Private key used for signing the client secret JWT."
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2Trigger": {
      "properties": {
        "functionUri": {
          "description": "HTTP URI trigger for the Cloud Function.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "When the trigger was changed.",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "Synchronous Cloud Function with HTTP Trigger",
      "id": "GoogleCloudIdentitytoolkitAdminV2Trigger"
    },
    "GoogleCloudIdentitytoolkitAdminV2IdpConfig": {
      "properties": {
        "idpEntityId": {
          "type": "string",
          "description": "Unique identifier for all SAML entities."
        },
        "signRequest": {
          "type": "boolean",
          "description": "Indicates if outbounding SAMLRequest should be signed."
        },
        "ssoUrl": {
          "description": "URL to send Authentication request to.",
          "type": "string"
        },
        "idpCertificates": {
          "description": "IDP's public keys for verifying signature in the assertions.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2IdpCertificate"
          }
        }
      },
      "description": "The SAML IdP (Identity Provider) configuration when the project acts as the relying party.",
      "id": "GoogleCloudIdentitytoolkitAdminV2IdpConfig",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitAdminV2SmsTemplate": {
      "id": "GoogleCloudIdentitytoolkitAdminV2SmsTemplate",
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "Output only. The SMS's content. Can contain the following placeholders which will be replaced with the appropriate values: %APP_NAME% - For Android or iOS apps, the app's display name. For web apps, the domain hosting the application. %LOGIN_CODE% - The OOB code being sent in the SMS.",
          "readOnly": true
        }
      },
      "description": "The template to use when sending an SMS."
    },
    "GoogleCloudIdentitytoolkitV2RecaptchaConfig": {
      "properties": {
        "recaptchaEnforcementState": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitV2RecaptchaEnforcementState"
          },
          "description": "The reCAPTCHA enforcement state for the providers that GCIP supports reCAPTCHA protection."
        },
        "recaptchaKey": {
          "type": "string",
          "description": "The reCAPTCHA Enterprise key resource name, e.g. \"projects/{project}/keys/{key}\". This will only be returned when the reCAPTCHA enforcement state is AUDIT or ENFORCE on at least one of the reCAPTCHA providers."
        }
      },
      "description": "Configuration for reCAPTCHA",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2RecaptchaConfig"
    },
    "GoogleCloudIdentitytoolkitV2AutoRetrievalInfo": {
      "id": "GoogleCloudIdentitytoolkitV2AutoRetrievalInfo",
      "type": "object",
      "properties": {
        "appSignatureHash": {
          "description": "The Android app's signature hash for Google Play Service's SMS Retriever API.",
          "type": "string"
        }
      },
      "description": "The information required to auto-retrieve an SMS."
    },
    "GoogleCloudIdentitytoolkitAdminV2EmailTemplate": {
      "id": "GoogleCloudIdentitytoolkitAdminV2EmailTemplate",
      "type": "object",
      "description": "Email template. The subject and body fields can contain the following placeholders which will be replaced with the appropriate values: %LINK% - The link to use to redeem the send OOB code. %EMAIL% - The email where the email is being sent. %NEW_EMAIL% - The new email being set for the account (when applicable). %APP_NAME% - The GCP project's display name. %DISPLAY_NAME% - The user's display name.",
      "properties": {
        "subject": {
          "type": "string",
          "description": "Subject of the email"
        },
        "senderDisplayName": {
          "type": "string",
          "description": "Sender display name"
        },
        "bodyFormat": {
          "enum": [
            "BODY_FORMAT_UNSPECIFIED",
            "PLAIN_TEXT",
            "HTML"
          ],
          "enumDescriptions": [
            "Default value. Do not use.",
            "Plain text",
            "HTML"
          ],
          "description": "Email body format",
          "type": "string"
        },
        "senderLocalPart": {
          "type": "string",
          "description": "Local part of From address"
        },
        "customized": {
          "readOnly": true,
          "description": "Output only. Whether the body or subject of the email is customized.",
          "type": "boolean"
        },
        "body": {
          "type": "string",
          "description": "Email body"
        },
        "replyTo": {
          "type": "string",
          "description": "Reply-to address"
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRule": {
      "properties": {
        "endScore": {
          "description": "The end score (inclusive) of the score range for an action. Must be a value between 0.0 and 1.0, at 11 discrete values; e.g. 0, 0.1, 0.2, 0.3, ... 0.9, 1.0. A score of 0.0 indicates the riskiest request (likely a bot), whereas 1.0 indicates the safest request (likely a human). See https://cloud.google.com/recaptcha-enterprise/docs/interpret-assessment.",
          "type": "number",
          "format": "float"
        },
        "action": {
          "enum": [
            "RECAPTCHA_ACTION_UNSPECIFIED",
            "BLOCK"
          ],
          "type": "string",
          "description": "The action taken if the reCAPTCHA score of a request is within the interval [start_score, end_score].",
          "enumDescriptions": [
            "The reCAPTCHA action is not specified.",
            "The reCAPTCHA-protected request will be blocked."
          ]
        }
      },
      "type": "object",
      "description": "The config for a reCAPTCHA managed rule. Models a single interval [start_score, end_score]. The start_score is implicit. It is either the closest smaller end_score (if one is available) or 0. Intervals in aggregate span [0, 1] without overlapping.",
      "id": "GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRule"
    },
    "GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig": {
      "id": "GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig",
      "properties": {
        "enableImprovedEmailPrivacy": {
          "type": "boolean",
          "description": "Migrates the project to a state of improved email privacy. For example certain error codes are more generic to avoid giving away information on whether the account exists. In addition, this disables certain features that as a side-effect allow user enumeration. Enabling this toggle disables the fetchSignInMethodsForEmail functionality and changing the user's email to an unverified email. It is recommended to remove dependence on this functionality and enable this toggle to improve user privacy."
        }
      },
      "description": "Configuration for settings related to email privacy and public visibility. Settings in this config protect against email enumeration, but may make some trade-offs in user-friendliness.",
      "type": "object"
    },
    "GoogleIamV1GetIamPolicyRequest": {
      "description": "Request message for `GetIamPolicy` method.",
      "properties": {
        "options": {
          "$ref": "GoogleIamV1GetPolicyOptions",
          "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
        }
      },
      "type": "object",
      "id": "GoogleIamV1GetIamPolicyRequest"
    },
    "GoogleIamV1GetPolicyOptions": {
      "type": "object",
      "description": "Encapsulates settings provided to GetIamPolicy.",
      "id": "GoogleIamV1GetPolicyOptions",
      "properties": {
        "requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleIamV1SetIamPolicyRequest": {
      "properties": {
        "policy": {
          "$ref": "GoogleIamV1Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        },
        "updateMask": {
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Request message for `SetIamPolicy` method.",
      "id": "GoogleIamV1SetIamPolicyRequest"
    },
    "GoogleCloudIdentitytoolkitAdminV2SpCertificate": {
      "properties": {
        "expiresAt": {
          "format": "google-datetime",
          "description": "Timestamp of the cert expiration instance.",
          "type": "string"
        },
        "x509Certificate": {
          "description": "Self-signed public certificate.",
          "type": "string"
        }
      },
      "description": "The SP's certificate data for IDP to verify the SAMLRequest generated by the SP.",
      "id": "GoogleCloudIdentitytoolkitAdminV2SpCertificate",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig": {
      "type": "object",
      "description": "Configuration related to Blocking Functions.",
      "properties": {
        "forwardInboundCredentials": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials",
          "description": "The user credentials to include in the JWT payload that is sent to the registered Blocking Functions."
        },
        "triggers": {
          "type": "object",
          "description": "Map of Trigger to event type. Key should be one of the supported event types: \"beforeCreate\", \"beforeSignIn\"",
          "additionalProperties": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2Trigger"
          }
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig"
    },
    "GoogleCloudIdentitytoolkitAdminV2TemporaryQuota": {
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2TemporaryQuota",
      "properties": {
        "quotaDuration": {
          "format": "google-duration",
          "description": "How long this quota will be active for",
          "type": "string"
        },
        "quota": {
          "format": "int64",
          "type": "string",
          "description": "Corresponds to the 'refill_token_count' field in QuotaServer config"
        },
        "startTime": {
          "description": "When this quota will take affect",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Temporary quota increase / decrease"
    },
    "GoogleCloudIdentitytoolkitAdminV2PhoneNumber": {
      "description": "Configuration options related to authenticated a user by their phone number.",
      "id": "GoogleCloudIdentitytoolkitAdminV2PhoneNumber",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether phone number auth is enabled for the project or not."
        },
        "testPhoneNumbers": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map of that can be used for phone auth testing.",
          "type": "object"
        }
      }
    },
    "GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo": {
      "id": "GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo",
      "description": "App Verification info for a StartMfa request.",
      "type": "object",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "Required for enrollment. Phone number to be enrolled as MFA."
        },
        "iosSecret": {
          "type": "string",
          "description": "iOS only. Secret delivered to iOS app via APNS."
        },
        "playIntegrityToken": {
          "type": "string",
          "description": "Android only. Used to assert application identity in place of a recaptcha token (or safety net token). A Play Integrity Token can be generated via the [PlayIntegrity API] (https://developer.android.com/google/play/integrity) with applying SHA256 to the `phone_number` field as the nonce."
        },
        "safetyNetToken": {
          "description": "Android only. Used to assert application identity in place of a recaptcha token. A SafetyNet Token can be generated via the [SafetyNet Android Attestation API](https://developer.android.com/training/safetynet/attestation.html), with the Base64 encoding of the `phone_number` field as the nonce.",
          "type": "string"
        },
        "autoRetrievalInfo": {
          "$ref": "GoogleCloudIdentitytoolkitV2AutoRetrievalInfo",
          "description": "Android only. Used by Google Play Services to identify the app for auto-retrieval."
        },
        "iosReceipt": {
          "description": "iOS only. Receipt of successful app token validation with APNS.",
          "type": "string"
        },
        "recaptchaToken": {
          "description": "Web only. Recaptcha solution.",
          "type": "string"
        }
      }
    },
    "GoogleProtobufEmpty": {
      "properties": {},
      "id": "GoogleProtobufEmpty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "GoogleCloudIdentitytoolkitAdminV2IdpCertificate": {
      "description": "The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.",
      "properties": {
        "x509Certificate": {
          "type": "string",
          "description": "The x509 certificate"
        }
      },
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2IdpCertificate"
    },
    "GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformRequest": {
      "id": "GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformRequest",
      "type": "object",
      "properties": {},
      "description": "Request for InitializeIdentityPlatform."
    },
    "GoogleCloudIdentitytoolkitV2WithdrawMfaResponse": {
      "description": "Withdraws MultiFactorAuth response.",
      "properties": {
        "idToken": {
          "type": "string",
          "description": "ID token updated to reflect removal of the second factor."
        },
        "refreshToken": {
          "description": "Refresh token updated to reflect removal of the second factor.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2WithdrawMfaResponse"
    },
    "GoogleCloudIdentitytoolkitAdminV2Email": {
      "type": "object",
      "description": "Configuration options related to authenticating a user by their email address.",
      "properties": {
        "passwordRequired": {
          "type": "boolean",
          "description": "Whether a password is required for email auth or not. If true, both an email and password must be provided to sign in. If false, a user may sign in via either email/password or email link."
        },
        "enabled": {
          "description": "Whether email auth is enabled for the project or not.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2Email"
    },
    "GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig": {
      "description": "The configuration for the password policy on the project.",
      "type": "object",
      "properties": {
        "passwordPolicyEnforcementState": {
          "description": "Which enforcement mode to use for the password policy.",
          "enum": [
            "PASSWORD_POLICY_ENFORCEMENT_STATE_UNSPECIFIED",
            "OFF",
            "ENFORCE"
          ],
          "enumDescriptions": [
            "Illegal State, should not be used.",
            "Password Policy will not be used on the project.",
            "Passwords non-compliant with the password policy will be rejected with an error thrown."
          ],
          "type": "string"
        },
        "lastUpdateTime": {
          "type": "string",
          "description": "Output only. The last time the password policy on the project was updated.",
          "format": "google-datetime",
          "readOnly": true
        },
        "forceUpgradeOnSignin": {
          "type": "boolean",
          "description": "Users must have a password compliant with the password policy to sign-in."
        },
        "passwordPolicyVersions": {
          "type": "array",
          "description": "Must be of length 1. Contains the strength attributes for the password policy.",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion"
          }
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig"
    },
    "GoogleIamV1AuditConfig": {
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "items": {
            "$ref": "GoogleIamV1AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission.",
          "type": "array"
        }
      },
      "id": "GoogleIamV1AuditConfig",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitAdminV2HashConfig": {
      "properties": {
        "signerKey": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Signer key in base64."
        },
        "algorithm": {
          "description": "Output only. Different password hash algorithms used in Identity Toolkit.",
          "type": "string",
          "readOnly": true,
          "enumDescriptions": [
            "Default value. Do not use.",
            "HMAC_SHA256",
            "HMAC_SHA1",
            "HMAC_MD5",
            "SCRYPT",
            "PBKDF_SHA1",
            "MD5",
            "HMAC_SHA512",
            "SHA1",
            "BCRYPT",
            "PBKDF2_SHA256",
            "SHA256",
            "SHA512",
            "STANDARD_SCRYPT"
          ],
          "enum": [
            "HASH_ALGORITHM_UNSPECIFIED",
            "HMAC_SHA256",
            "HMAC_SHA1",
            "HMAC_MD5",
            "SCRYPT",
            "PBKDF_SHA1",
            "MD5",
            "HMAC_SHA512",
            "SHA1",
            "BCRYPT",
            "PBKDF2_SHA256",
            "SHA256",
            "SHA512",
            "STANDARD_SCRYPT"
          ]
        },
        "saltSeparator": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Non-printable character to be inserted between the salt and plain text password in base64."
        },
        "rounds": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "Output only. How many rounds for hash calculation. Used by scrypt and other similar password derivation algorithms."
        },
        "memoryCost": {
          "format": "int32",
          "readOnly": true,
          "type": "integer",
          "description": "Output only. Memory cost for hash calculation. Used by scrypt and other similar password derivation algorithms. See https://tools.ietf.org/html/rfc7914 for explanation of field."
        }
      },
      "type": "object",
      "description": "History information of the hash algorithm and key. Different accounts' passwords may be generated by different version.",
      "id": "GoogleCloudIdentitytoolkitAdminV2HashConfig"
    },
    "GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse": {
      "type": "object",
      "description": "Response message for ListTenants.",
      "id": "GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse",
      "properties": {
        "tenants": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2Tenant"
          },
          "description": "A list of tenants under the given agent project."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token to get the next page of results."
        }
      }
    },
    "GoogleIamV1Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "properties": {
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1Binding"
          },
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        },
        "version": {
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32"
        },
        "auditConfigs": {
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1AuditConfig"
          },
          "description": "Specifies cloud audit logging configuration for this policy."
        }
      },
      "id": "GoogleIamV1Policy",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest": {
      "description": "Finishes enrolling a second factor for the user.",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name which is entered by users to distinguish between different second factors with same type or different type."
        },
        "idToken": {
          "description": "Required. ID token.",
          "type": "string"
        },
        "phoneVerificationInfo": {
          "description": "Verification info to authorize sending an SMS for phone verification.",
          "$ref": "GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo"
        },
        "tenantId": {
          "type": "string",
          "description": "The ID of the Identity Platform tenant that the user enrolling MFA belongs to. If not set, the user belongs to the default Identity Platform project."
        },
        "totpVerificationInfo": {
          "$ref": "GoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo",
          "description": "Verification information for TOTP."
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig": {
      "description": "Configuration related to multi-tenant functionality.",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig",
      "properties": {
        "defaultTenantLocation": {
          "description": "The default cloud parent org or folder that the tenant project should be created under. The parent resource name should be in the format of \"/\", such as \"folders/123\" or \"organizations/456\". If the value is not set, the tenant will be created under the same organization or folder as the agent project.",
          "type": "string"
        },
        "allowTenants": {
          "description": "Whether this project can have tenants or not.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2SpConfig": {
      "properties": {
        "spCertificates": {
          "type": "array",
          "description": "Output only. Public certificates generated by the server to verify the signature in SAMLRequest in the SP-initiated flow.",
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2SpCertificate"
          }
        },
        "callbackUri": {
          "type": "string",
          "description": "Callback URI where responses from IDP are handled."
        },
        "spEntityId": {
          "type": "string",
          "description": "Unique identifier for all SAML entities."
        }
      },
      "description": "The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.",
      "id": "GoogleCloudIdentitytoolkitAdminV2SpConfig",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitAdminV2ClientPermissions": {
      "description": "Configuration related to restricting a user's ability to affect their account.",
      "properties": {
        "disabledUserSignup": {
          "type": "boolean",
          "description": "When true, end users cannot sign up for a new account on the associated project through any of our API methods"
        },
        "disabledUserDeletion": {
          "description": "When true, end users cannot delete their account on the associated project through any of our API methods",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2ClientPermissions",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV2StartMfaSignInResponse": {
      "description": "StartMfaSignIn response.",
      "properties": {
        "phoneResponseInfo": {
          "$ref": "GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo",
          "description": "MultiFactor sign-in session information specific to SMS-type second factors. Along with the one-time code retrieved from the sent SMS, the contents of this session information should be passed to FinalizeMfaSignIn to complete the sign in."
        }
      },
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2StartMfaSignInResponse"
    },
    "GoogleCloudIdentitytoolkitAdminV2DnsInfo": {
      "properties": {
        "customDomainState": {
          "description": "Output only. The current verification state of the custom domain. The custom domain will only be used once the domain verification is successful.",
          "type": "string",
          "enum": [
            "VERIFICATION_STATE_UNSPECIFIED",
            "NOT_STARTED",
            "IN_PROGRESS",
            "FAILED",
            "SUCCEEDED"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Default value. Do not use.",
            "The verification has not started.",
            "The verification is in progress.",
            "The verification failed.",
            "The verification succeeded and is ready to be applied."
          ]
        },
        "domainVerificationRequestTime": {
          "readOnly": true,
          "description": "Output only. The timestamp of initial request for the current domain verification.",
          "format": "google-datetime",
          "type": "string"
        },
        "useCustomDomain": {
          "type": "boolean",
          "description": "Whether to use custom domain."
        },
        "customDomain": {
          "readOnly": true,
          "description": "Output only. The applied verified custom domain.",
          "type": "string"
        },
        "pendingCustomDomain": {
          "readOnly": true,
          "description": "Output only. The custom domain that's to be verified.",
          "type": "string"
        }
      },
      "description": "Information of custom domain DNS verification. By default, default_domain will be used. A custom domain can be configured using VerifyCustomDomain.",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2DnsInfo"
    },
    "GoogleCloudIdentitytoolkitAdminV2Smtp": {
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2Smtp",
      "properties": {
        "host": {
          "description": "SMTP relay host",
          "type": "string"
        },
        "senderEmail": {
          "description": "Sender email for the SMTP relay",
          "type": "string"
        },
        "securityMode": {
          "enum": [
            "SECURITY_MODE_UNSPECIFIED",
            "SSL",
            "START_TLS"
          ],
          "enumDescriptions": [
            "Default value. Do not use.",
            "SSL mode",
            "START_TLS mode"
          ],
          "description": "SMTP security mode.",
          "type": "string"
        },
        "port": {
          "description": "SMTP relay port",
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "description": "SMTP relay username",
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "SMTP relay password"
        }
      },
      "description": "Configuration for SMTP relay"
    },
    "GoogleCloudIdentitytoolkitAdminV2Config": {
      "id": "GoogleCloudIdentitytoolkitAdminV2Config",
      "properties": {
        "client": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2ClientConfig",
          "description": "Options related to how clients making requests on behalf of a project should be configured."
        },
        "quota": {
          "description": "Configuration related to quotas.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2QuotaConfig"
        },
        "mfa": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig",
          "description": "Configuration for this project's multi-factor authentication, including whether it is active and what factors can be used for the second factor"
        },
        "recaptchaConfig": {
          "description": "The project-level reCAPTCHA config.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig"
        },
        "multiTenant": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig",
          "description": "Configuration related to multi-tenant functionality."
        },
        "smsRegionConfig": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig",
          "description": "Configures which regions are enabled for SMS verification code sending."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the Config resource. Example: \"projects/my-awesome-project/config\"",
          "type": "string"
        },
        "authorizedDomains": {
          "items": {
            "type": "string"
          },
          "description": "List of domains authorized for OAuth redirects",
          "type": "array"
        },
        "blockingFunctions": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig",
          "description": "Configuration related to blocking functions."
        },
        "monitoring": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2MonitoringConfig",
          "description": "Configuration related to monitoring project activity."
        },
        "signIn": {
          "description": "Configuration related to local sign in methods.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2SignInConfig"
        },
        "subtype": {
          "type": "string",
          "enumDescriptions": [
            "Default value. Do not use.",
            "An Identity Platform project.",
            "A Firebase Authentication project."
          ],
          "readOnly": true,
          "enum": [
            "SUBTYPE_UNSPECIFIED",
            "IDENTITY_PLATFORM",
            "FIREBASE_AUTH"
          ],
          "description": "Output only. The subtype of this config."
        },
        "notification": {
          "description": "Configuration related to sending notifications to users.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2NotificationConfig"
        },
        "emailPrivacyConfig": {
          "description": "Configuration for settings related to email privacy and public visibility.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig"
        },
        "passwordPolicyConfig": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig",
          "description": "The project level password policy configuration."
        },
        "autodeleteAnonymousUsers": {
          "type": "boolean",
          "description": "Whether anonymous users will be auto-deleted after a period of 30 days."
        }
      },
      "type": "object",
      "description": "Represents an Identity Toolkit project."
    },
    "GoogleCloudIdentitytoolkitV2RevokeTokenResponse": {
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2RevokeTokenResponse",
      "description": "Response message for RevokeToken. Empty for now.",
      "properties": {}
    },
    "GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo": {
      "description": "Phone Verification info for a FinalizeMfa request.",
      "id": "GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo",
      "type": "object",
      "properties": {
        "androidVerificationProof": {
          "description": "Android only. Uses for \"instant\" phone number verification though GmsCore.",
          "type": "string"
        },
        "code": {
          "description": "User-entered verification code.",
          "type": "string"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Required if Android verification proof is presented."
        },
        "sessionInfo": {
          "description": "An opaque string that represents the enrollment session.",
          "type": "string"
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig": {
      "id": "GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig",
      "properties": {
        "recaptchaKeys": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2RecaptchaKey"
          },
          "description": "Output only. The reCAPTCHA keys."
        },
        "emailPasswordEnforcementState": {
          "description": "The reCAPTCHA config for email/password provider, containing the enforcement status. The email/password provider contains all related user flows protected by reCAPTCHA.",
          "enumDescriptions": [
            "Enforcement state has not been set.",
            "Unenforced.",
            "reCAPTCHA assessment is created, result is not used to enforce.",
            "reCAPTCHA assessment is created, result is used to enforce."
          ],
          "enum": [
            "RECAPTCHA_PROVIDER_ENFORCEMENT_STATE_UNSPECIFIED",
            "OFF",
            "AUDIT",
            "ENFORCE"
          ],
          "type": "string"
        },
        "managedRules": {
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRule"
          },
          "type": "array",
          "description": "The managed rules for authentication action based on reCAPTCHA scores. The rules are shared across providers for a given tenant project."
        },
        "useAccountDefender": {
          "type": "boolean",
          "description": "Whether to use the account defender for reCAPTCHA assessment. Defaults to `false`."
        }
      },
      "type": "object",
      "description": "The reCAPTCHA Enterprise integration config."
    },
    "GoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo": {
      "description": "Mfa request info specific to TOTP auth for FinalizeMfa.",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo",
      "properties": {
        "verificationCode": {
          "type": "string",
          "description": "User-entered verification code."
        },
        "sessionInfo": {
          "type": "string",
          "description": "An opaque string that represents the enrollment session."
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2Tenant": {
      "id": "GoogleCloudIdentitytoolkitAdminV2Tenant",
      "properties": {
        "recaptchaConfig": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig",
          "description": "The tenant-level reCAPTCHA config."
        },
        "passwordPolicyConfig": {
          "description": "The tenant-level password policy config",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig"
        },
        "allowPasswordSignup": {
          "type": "boolean",
          "description": "Whether to allow email/password user authentication."
        },
        "autodeleteAnonymousUsers": {
          "description": "Whether anonymous users will be auto-deleted after a period of 30 days.",
          "type": "boolean"
        },
        "testPhoneNumbers": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "A map of pairs that can be used for MFA. The phone number should be in E.164 format (https://www.itu.int/rec/T-REC-E.164/) and a maximum of 10 pairs can be added (error will be thrown once exceeded)."
        },
        "inheritance": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2Inheritance",
          "description": "Specify the settings that the tenant could inherit."
        },
        "mfaConfig": {
          "description": "The tenant-level configuration of MFA options.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig"
        },
        "enableAnonymousUser": {
          "type": "boolean",
          "description": "Whether to enable anonymous user authentication."
        },
        "enableEmailLinkSignin": {
          "description": "Whether to enable email link user authentication.",
          "type": "boolean"
        },
        "disableAuth": {
          "description": "Whether authentication is disabled for the tenant. If true, the users under the disabled tenant are not allowed to sign-in. Admins of the disabled tenant are not able to manage its users.",
          "type": "boolean"
        },
        "monitoring": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2MonitoringConfig",
          "description": "Configuration related to monitoring project activity."
        },
        "emailPrivacyConfig": {
          "description": "Configuration for settings related to email privacy and public visibility.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig"
        },
        "name": {
          "description": "Output only. Resource name of a tenant. For example: \"projects/{project-id}/tenants/{tenant-id}\"",
          "type": "string",
          "readOnly": true
        },
        "hashConfig": {
          "readOnly": true,
          "description": "Output only. Hash config information of a tenant for display on Pantheon. This can only be displayed on Pantheon to avoid the sensitive information to get accidentally leaked. Only returned in GetTenant response to restrict reading of this information. Requires firebaseauth.configs.getHashConfig permission on the agent project for returning this field.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2HashConfig"
        },
        "smsRegionConfig": {
          "description": "Configures which regions are enabled for SMS verification code sending.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig"
        },
        "client": {
          "description": "Options related to how clients making requests on behalf of a project should be configured.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the tenant."
        }
      },
      "type": "object",
      "description": "A Tenant contains configuration for the tenant in a multi-tenant project."
    },
    "GoogleIamV1AuditLogConfig": {
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "id": "GoogleIamV1AuditLogConfig",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitAdminV2ClientConfig": {
      "properties": {
        "permissions": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2Permissions",
          "description": "Configuration related to restricting a user's ability to affect their account."
        },
        "apiKey": {
          "description": "Output only. API key that can be used when making requests for this project.",
          "type": "string",
          "readOnly": true
        },
        "firebaseSubdomain": {
          "description": "Output only. Firebase subdomain.",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2ClientConfig",
      "description": "Options related to how clients making requests on behalf of a project should be configured.",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig": {
      "description": "Options related to how clients making requests on behalf of a tenant should be configured.",
      "properties": {
        "permissions": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2ClientPermissions",
          "description": "Configuration related to restricting a user's ability to affect their account."
        }
      },
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig"
    },
    "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig": {
      "id": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig",
      "properties": {
        "spConfig": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2SpConfig",
          "description": "The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider."
        },
        "name": {
          "description": "The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests.",
          "type": "string"
        },
        "enabled": {
          "description": "True if allows the user to sign in with the provider.",
          "type": "boolean"
        },
        "displayName": {
          "type": "string",
          "description": "The config's display name set by developers."
        },
        "idpConfig": {
          "description": "The SAML IdP (Identity Provider) configuration when the project acts as the relying party.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2IdpConfig"
        }
      },
      "description": "A pair of SAML RP-IDP configurations when the project acts as the relying party.",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV2MfaTotpSignInRequestInfo": {
      "properties": {
        "verificationCode": {
          "type": "string",
          "description": "User-entered verification code."
        }
      },
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2MfaTotpSignInRequestInfo",
      "description": "TOTP verification info for FinalizeMfaSignInRequest."
    },
    "GoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentResponseInfo": {
      "properties": {},
      "id": "GoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentResponseInfo",
      "description": "Mfa response info specific to TOTP auth for FinalizeMfa.",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitAdminV2AllowByDefault": {
      "description": "Defines a policy of allowing every region by default and adding disallowed regions to a disallow list.",
      "id": "GoogleCloudIdentitytoolkitAdminV2AllowByDefault",
      "type": "object",
      "properties": {
        "disallowedRegions": {
          "description": "Two letter unicode region codes to disallow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpsResponse": {
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpsResponse",
      "description": "Response for ListDefaultSupportedIdps",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "defaultSupportedIdps": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp"
          },
          "description": "The set of configs."
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion": {
      "type": "object",
      "description": "The strength attributes for the password policy on the project.",
      "id": "GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion",
      "properties": {
        "customStrengthOptions": {
          "description": "The custom strength options enforced by the password policy.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2CustomStrengthOptions"
        },
        "schemaVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "description": "Output only. schema version number for the password policy"
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2SignInConfig": {
      "type": "object",
      "description": "Configuration related to local sign in methods.",
      "id": "GoogleCloudIdentitytoolkitAdminV2SignInConfig",
      "properties": {
        "email": {
          "description": "Configuration options related to authenticating a user by their email address.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2Email"
        },
        "phoneNumber": {
          "description": "Configuration options related to authenticated a user by their phone number.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2PhoneNumber"
        },
        "hashConfig": {
          "description": "Output only. Hash config information.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2HashConfig",
          "readOnly": true
        },
        "allowDuplicateEmails": {
          "description": "Whether to allow more than one account to have the same email.",
          "type": "boolean"
        },
        "anonymous": {
          "description": "Configuration options related to authenticating an anonymous user.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2Anonymous"
        }
      }
    },
    "GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo": {
      "properties": {
        "sessionInfo": {
          "type": "string",
          "description": "An opaque string that represents the enrollment session."
        }
      },
      "id": "GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo",
      "type": "object",
      "description": "Phone Verification info for a StartMfa response."
    },
    "GoogleCloudIdentitytoolkitAdminV2SendEmail": {
      "description": "Options for email sending.",
      "properties": {
        "resetPasswordTemplate": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2EmailTemplate",
          "description": "Email template for reset password"
        },
        "method": {
          "enum": [
            "METHOD_UNSPECIFIED",
            "DEFAULT",
            "CUSTOM_SMTP"
          ],
          "type": "string",
          "description": "The method used for sending an email.",
          "enumDescriptions": [
            "Email method unspecified.",
            "Sending email on behalf of developer.",
            "Sending email using SMTP configuration provided by developers."
          ]
        },
        "revertSecondFactorAdditionTemplate": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2EmailTemplate",
          "description": "Email template for reverting second factor addition emails"
        },
        "changeEmailTemplate": {
          "description": "Email template for change email",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2EmailTemplate"
        },
        "verifyEmailTemplate": {
          "description": "Email template for verify email",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2EmailTemplate"
        },
        "legacyResetPasswordTemplate": {
          "description": "Reset password email template for legacy Firebase V1 app.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2EmailTemplate"
        },
        "dnsInfo": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2DnsInfo",
          "description": "Information of custom domain DNS verification."
        },
        "smtp": {
          "description": "Use a custom SMTP relay",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2Smtp"
        },
        "callbackUri": {
          "description": "action url in email template.",
          "type": "string"
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2SendEmail",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest": {
      "type": "object",
      "properties": {
        "mfaPendingCredential": {
          "description": "Required. Pending credential from first factor sign-in.",
          "type": "string"
        },
        "totpVerificationInfo": {
          "$ref": "GoogleCloudIdentitytoolkitV2MfaTotpSignInRequestInfo",
          "description": "Proof of completion of the TOTP based MFA challenge."
        },
        "mfaEnrollmentId": {
          "description": "The MFA enrollment ID from the user's list of current MFA enrollments.",
          "type": "string"
        },
        "phoneVerificationInfo": {
          "$ref": "GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo",
          "description": "Proof of completion of the SMS based MFA challenge."
        },
        "tenantId": {
          "type": "string",
          "description": "The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project."
        }
      },
      "description": "Finalizes sign-in by verifying MFA challenge.",
      "id": "GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest"
    },
    "GoogleCloudIdentitytoolkitAdminV2Permissions": {
      "id": "GoogleCloudIdentitytoolkitAdminV2Permissions",
      "description": "Configuration related to restricting a user's ability to affect their account.",
      "type": "object",
      "properties": {
        "disabledUserSignup": {
          "type": "boolean",
          "description": "When true, end users cannot sign up for a new account on the associated project through any of our API methods"
        },
        "disabledUserDeletion": {
          "description": "When true, end users cannot delete their account on the associated project through any of our API methods",
          "type": "boolean"
        }
      }
    }
  },
  "name": "identitytoolkit",
  "kind": "discovery#restDescription",
  "documentationLink": "https://cloud.google.com/identity-platform",
  "mtlsRootUrl": "https://identitytoolkit.mtls.googleapis.com/",
  "baseUrl": "https://identitytoolkit.googleapis.com/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "revision": "20230707",
  "protocol": "rest",
  "rootUrl": "https://identitytoolkit.googleapis.com/",
  "basePath": "",
  "ownerName": "Google",
  "canonicalName": "Identity Toolkit",
  "title": "Identity Toolkit API",
  "resources": {
    "accounts": {
      "resources": {
        "mfaEnrollment": {
          "methods": {
            "finalize": {
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse"
              },
              "flatPath": "v2/accounts/mfaEnrollment:finalize",
              "path": "v2/accounts/mfaEnrollment:finalize",
              "description": "Finishes enrolling a second factor for the user.",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "identitytoolkit.accounts.mfaEnrollment.finalize",
              "parameterOrder": [],
              "parameters": {},
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest"
              }
            },
            "start": {
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest"
              },
              "parameters": {},
              "httpMethod": "POST",
              "path": "v2/accounts/mfaEnrollment:start",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "identitytoolkit.accounts.mfaEnrollment.start",
              "parameterOrder": [],
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse"
              },
              "description": "Step one of the MFA enrollment process. In SMS case, this sends an SMS verification code to the user.",
              "flatPath": "v2/accounts/mfaEnrollment:start"
            },
            "withdraw": {
              "parameterOrder": [],
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV2WithdrawMfaResponse"
              },
              "id": "identitytoolkit.accounts.mfaEnrollment.withdraw",
              "path": "v2/accounts/mfaEnrollment:withdraw",
              "parameters": {},
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV2WithdrawMfaRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Revokes one second factor from the enrolled second factors for an account.",
              "flatPath": "v2/accounts/mfaEnrollment:withdraw"
            }
          }
        },
        "mfaSignIn": {
          "methods": {
            "finalize": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "id": "identitytoolkit.accounts.mfaSignIn.finalize",
              "flatPath": "v2/accounts/mfaSignIn:finalize",
              "path": "v2/accounts/mfaSignIn:finalize",
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest"
              },
              "parameterOrder": [],
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse"
              },
              "description": "Verifies the MFA challenge and performs sign-in",
              "parameters": {}
            },
            "start": {
              "path": "v2/accounts/mfaSignIn:start",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV2StartMfaSignInResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/accounts/mfaSignIn:start",
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV2StartMfaSignInRequest"
              },
              "parameterOrder": [],
              "parameters": {},
              "httpMethod": "POST",
              "id": "identitytoolkit.accounts.mfaSignIn.start",
              "description": "Sends the MFA challenge"
            }
          }
        }
      },
      "methods": {
        "revokeToken": {
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitV2RevokeTokenRequest"
          },
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV2RevokeTokenResponse"
          },
          "path": "v2/accounts:revokeToken",
          "parameterOrder": [],
          "id": "identitytoolkit.accounts.revokeToken",
          "flatPath": "v2/accounts:revokeToken",
          "httpMethod": "POST",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Revokes a user's token from an Identity Provider (IdP). This is done by manually providing an IdP credential, and the token types for revocation. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project."
        }
      }
    },
    "v2": {
      "methods": {
        "getRecaptchaConfig": {
          "flatPath": "v2/recaptchaConfig",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v2/recaptchaConfig",
          "id": "identitytoolkit.getRecaptchaConfig",
          "description": "Gets parameters needed for reCAPTCHA analysis.",
          "httpMethod": "GET",
          "parameters": {
            "version": {
              "location": "query",
              "enumDescriptions": [
                "The reCAPTCHA version is not specified.",
                "Use reCAPTCHA Enterprise."
              ],
              "type": "string",
              "description": "The reCAPTCHA version.",
              "enum": [
                "RECAPTCHA_VERSION_UNSPECIFIED",
                "RECAPTCHA_ENTERPRISE"
              ]
            },
            "tenantId": {
              "location": "query",
              "description": "The id of a tenant.",
              "type": "string"
            },
            "clientType": {
              "type": "string",
              "enumDescriptions": [
                "Client type is not specified.",
                "Client type is web.",
                "Client type is android.",
                "Client type is ios."
              ],
              "location": "query",
              "description": "reCAPTCHA Enterprise uses separate site keys for different client types. Specify the client type to get the corresponding key.",
              "enum": [
                "CLIENT_TYPE_UNSPECIFIED",
                "CLIENT_TYPE_WEB",
                "CLIENT_TYPE_ANDROID",
                "CLIENT_TYPE_IOS"
              ]
            }
          },
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV2RecaptchaConfig"
          },
          "parameterOrder": []
        },
        "getPasswordPolicy": {
          "path": "v2/passwordPolicy",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v2/passwordPolicy",
          "description": "Gets password policy config set on the project or tenant.",
          "id": "identitytoolkit.getPasswordPolicy",
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitV2PasswordPolicy"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "parameters": {
            "tenantId": {
              "location": "query",
              "description": "The id of a tenant.",
              "type": "string"
            }
          }
        }
      }
    },
    "defaultSupportedIdps": {
      "methods": {
        "list": {
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/firebase"
          ],
          "parameterOrder": [],
          "id": "identitytoolkit.defaultSupportedIdps.list",
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpsResponse"
          },
          "path": "v2/defaultSupportedIdps",
          "parameters": {
            "pageToken": {
              "location": "query",
              "description": "The next_page_token value returned from a previous List request, if any.",
              "type": "string"
            },
            "pageSize": {
              "location": "query",
              "type": "integer",
              "format": "int32",
              "description": "The maximum number of items to return."
            }
          },
          "description": "List all default supported Idps.",
          "flatPath": "v2/defaultSupportedIdps"
        }
      }
    },
    "projects": {
      "methods": {
        "updateConfig": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/firebase"
          ],
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "PATCH",
          "flatPath": "v2/projects/{projectsId}/config",
          "id": "identitytoolkit.projects.updateConfig",
          "description": "Update an Identity Toolkit project configuration.",
          "request": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2Config"
          },
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2Config"
          },
          "path": "v2/{+name}",
          "parameters": {
            "name": {
              "required": true,
              "pattern": "^projects/[^/]+/config$",
              "type": "string",
              "description": "Output only. The name of the Config resource. Example: \"projects/my-awesome-project/config\"",
              "location": "path"
            },
            "updateMask": {
              "location": "query",
              "description": "The update mask applies to the resource. Fields set in the config but not included in this update mask will be ignored. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
              "format": "google-fieldmask",
              "type": "string"
            }
          }
        },
        "getConfig": {
          "parameters": {
            "name": {
              "required": true,
              "description": "The resource name of the config, for example: \"projects/my-awesome-project/config\"",
              "pattern": "^projects/[^/]+/config$",
              "type": "string",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2Config"
          },
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v2/projects/{projectsId}/config",
          "description": "Retrieve an Identity Toolkit project configuration.",
          "path": "v2/{+name}",
          "id": "identitytoolkit.projects.getConfig"
        }
      },
      "resources": {
        "oauthIdpConfigs": {
          "methods": {
            "patch": {
              "flatPath": "v2/projects/{projectsId}/oauthIdpConfigs/{oauthIdpConfigsId}",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
              },
              "httpMethod": "PATCH",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
              },
              "path": "v2/{+name}",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/oauthIdpConfigs/[^/]+$",
                  "description": "The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests.",
                  "type": "string"
                },
                "updateMask": {
                  "description": "The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query"
                }
              },
              "id": "identitytoolkit.projects.oauthIdpConfigs.patch",
              "description": "Update an Oidc Idp configuration for an Identity Toolkit project.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ]
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "description": "Delete an Oidc Idp configuration for an Identity Toolkit project.",
              "id": "identitytoolkit.projects.oauthIdpConfigs.delete",
              "parameters": {
                "name": {
                  "description": "The resource name of the config to be deleted, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'.",
                  "pattern": "^projects/[^/]+/oauthIdpConfigs/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v2/{+name}",
              "flatPath": "v2/projects/{projectsId}/oauthIdpConfigs/{oauthIdpConfigsId}",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "httpMethod": "DELETE"
            },
            "get": {
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "The resource name of the config, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'.",
                  "pattern": "^projects/[^/]+/oauthIdpConfigs/[^/]+$",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
              },
              "path": "v2/{+name}",
              "flatPath": "v2/projects/{projectsId}/oauthIdpConfigs/{oauthIdpConfigsId}",
              "description": "Retrieve an Oidc Idp configuration for an Identity Toolkit project.",
              "id": "identitytoolkit.projects.oauthIdpConfigs.get",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "parameters": {
                "pageToken": {
                  "description": "The next_page_token value returned from a previous List request, if any.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "description": "The maximum number of items to return.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                },
                "parent": {
                  "description": "The parent resource name, for example, \"projects/my-awesome-project\".",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                }
              },
              "path": "v2/{+parent}/oauthIdpConfigs",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse"
              },
              "flatPath": "v2/projects/{projectsId}/oauthIdpConfigs",
              "description": "List all Oidc Idp configurations for an Identity Toolkit project.",
              "id": "identitytoolkit.projects.oauthIdpConfigs.list"
            },
            "create": {
              "id": "identitytoolkit.projects.oauthIdpConfigs.create",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "description": "Create an Oidc Idp configuration for an Identity Toolkit project.",
              "path": "v2/{+parent}/oauthIdpConfigs",
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
              },
              "flatPath": "v2/projects/{projectsId}/oauthIdpConfigs",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "The parent resource name where the config to be created, for example: \"projects/my-awesome-project\""
                },
                "oauthIdpConfigId": {
                  "location": "query",
                  "description": "The id to use for this config.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
              },
              "parameterOrder": [
                "parent"
              ]
            }
          }
        },
        "defaultSupportedIdpConfigs": {
          "methods": {
            "list": {
              "path": "v2/{+parent}/defaultSupportedIdpConfigs",
              "parameters": {
                "pageToken": {
                  "description": "The next_page_token value returned from a previous List request, if any.",
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "description": "The parent resource name, for example, \"projects/my-awesome-project\".",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "location": "path"
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of items to return.",
                  "location": "query",
                  "format": "int32"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "identitytoolkit.projects.defaultSupportedIdpConfigs.list",
              "description": "List all default supported Idp configurations for an Identity Toolkit project.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse"
              },
              "httpMethod": "GET",
              "flatPath": "v2/projects/{projectsId}/defaultSupportedIdpConfigs"
            },
            "get": {
              "id": "identitytoolkit.projects.defaultSupportedIdpConfigs.get",
              "flatPath": "v2/projects/{projectsId}/defaultSupportedIdpConfigs/{defaultSupportedIdpConfigsId}",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameterOrder": [
                "name"
              ],
              "path": "v2/{+name}",
              "description": "Retrieve a default supported Idp configuration for an Identity Toolkit project.",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The resource name of the config, for example: \"projects/my-awesome-project/defaultSupportedIdpConfigs/google.com\"",
                  "pattern": "^projects/[^/]+/defaultSupportedIdpConfigs/[^/]+$"
                }
              },
              "httpMethod": "GET"
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
              },
              "flatPath": "v2/projects/{projectsId}/defaultSupportedIdpConfigs",
              "parameters": {
                "idpId": {
                  "description": "The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all default supported Idps.",
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "description": "The parent resource name where the config to be created, for example: \"projects/my-awesome-project\"",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "httpMethod": "POST",
              "description": "Create a default supported Idp configuration for an Identity Toolkit project.",
              "id": "identitytoolkit.projects.defaultSupportedIdpConfigs.create",
              "path": "v2/{+parent}/defaultSupportedIdpConfigs",
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
              },
              "parameterOrder": [
                "parent"
              ]
            },
            "patch": {
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "description": "The name of the DefaultSupportedIdpConfig resource, for example: \"projects/my-awesome-project/defaultSupportedIdpConfigs/google.com\"",
                  "type": "string",
                  "pattern": "^projects/[^/]+/defaultSupportedIdpConfigs/[^/]+$"
                },
                "updateMask": {
                  "type": "string",
                  "format": "google-fieldmask",
                  "description": "The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "httpMethod": "PATCH",
              "id": "identitytoolkit.projects.defaultSupportedIdpConfigs.patch",
              "description": "Update a default supported Idp configuration for an Identity Toolkit project.",
              "flatPath": "v2/projects/{projectsId}/defaultSupportedIdpConfigs/{defaultSupportedIdpConfigsId}",
              "parameterOrder": [
                "name"
              ],
              "path": "v2/{+name}",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
              },
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
              }
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "httpMethod": "DELETE",
              "id": "identitytoolkit.projects.defaultSupportedIdpConfigs.delete",
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/defaultSupportedIdpConfigs/[^/]+$",
                  "description": "The resource name of the config, for example: \"projects/my-awesome-project/defaultSupportedIdpConfigs/google.com\"",
                  "required": true
                }
              },
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v2/{+name}",
              "flatPath": "v2/projects/{projectsId}/defaultSupportedIdpConfigs/{defaultSupportedIdpConfigsId}",
              "description": "Delete a default supported Idp configuration for an Identity Toolkit project."
            }
          }
        },
        "inboundSamlConfigs": {
          "methods": {
            "patch": {
              "flatPath": "v2/projects/{projectsId}/inboundSamlConfigs/{inboundSamlConfigsId}",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
              },
              "description": "Update an inbound SAML configuration for an Identity Toolkit project.",
              "httpMethod": "PATCH",
              "path": "v2/{+name}",
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
              },
              "id": "identitytoolkit.projects.inboundSamlConfigs.patch",
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query",
                  "description": "The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask"
                },
                "name": {
                  "description": "The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/inboundSamlConfigs/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              }
            },
            "get": {
              "description": "Retrieve an inbound SAML configuration for an Identity Toolkit project.",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameters": {
                "name": {
                  "description": "The resource name of the config, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'.",
                  "required": true,
                  "pattern": "^projects/[^/]+/inboundSamlConfigs/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "flatPath": "v2/projects/{projectsId}/inboundSamlConfigs/{inboundSamlConfigsId}",
              "httpMethod": "GET",
              "path": "v2/{+name}",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
              },
              "id": "identitytoolkit.projects.inboundSamlConfigs.get"
            },
            "delete": {
              "parameters": {
                "name": {
                  "description": "The resource name of the config to be deleted, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/inboundSamlConfigs/[^/]+$",
                  "location": "path"
                }
              },
              "id": "identitytoolkit.projects.inboundSamlConfigs.delete",
              "httpMethod": "DELETE",
              "description": "Delete an inbound SAML configuration for an Identity Toolkit project.",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "flatPath": "v2/projects/{projectsId}/inboundSamlConfigs/{inboundSamlConfigsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "path": "v2/{+name}",
              "parameterOrder": [
                "name"
              ]
            },
            "create": {
              "path": "v2/{+parent}/inboundSamlConfigs",
              "id": "identitytoolkit.projects.inboundSamlConfigs.create",
              "parameters": {
                "inboundSamlConfigId": {
                  "location": "query",
                  "description": "The id to use for this config.",
                  "type": "string"
                },
                "parent": {
                  "type": "string",
                  "description": "The parent resource name where the config to be created, for example: \"projects/my-awesome-project\"",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                }
              },
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
              },
              "flatPath": "v2/projects/{projectsId}/inboundSamlConfigs",
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameterOrder": [
                "parent"
              ],
              "description": "Create an inbound SAML configuration for an Identity Toolkit project."
            },
            "list": {
              "httpMethod": "GET",
              "id": "identitytoolkit.projects.inboundSamlConfigs.list",
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "The parent resource name, for example, \"projects/my-awesome-project\".",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The next_page_token value returned from a previous List request, if any."
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of items to return.",
                  "location": "query",
                  "format": "int32"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "flatPath": "v2/projects/{projectsId}/inboundSamlConfigs",
              "description": "List all inbound SAML configurations for an Identity Toolkit project.",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "path": "v2/{+parent}/inboundSamlConfigs"
            }
          }
        },
        "identityPlatform": {
          "methods": {
            "initializeAuth": {
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformResponse"
              },
              "flatPath": "v2/projects/{projectsId}/identityPlatform:initializeAuth",
              "description": "Initialize Identity Platform for a Cloud project. Identity Platform is an end-to-end authentication system for third-party users to access your apps and services. These could include mobile/web apps, games, APIs and beyond. This is the publicly available variant of EnableIdentityPlatform that is only available to billing-enabled projects.",
              "path": "v2/{+project}/identityPlatform:initializeAuth",
              "httpMethod": "POST",
              "id": "identitytoolkit.projects.identityPlatform.initializeAuth",
              "parameters": {
                "project": {
                  "location": "path",
                  "required": true,
                  "description": "The resource name of the target project the developer wants to enable Identity Platform for.",
                  "pattern": "^projects/[^/]+$",
                  "type": "string"
                }
              },
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformRequest"
              },
              "parameterOrder": [
                "project"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        },
        "tenants": {
          "methods": {
            "list": {
              "flatPath": "v2/projects/{projectsId}/tenants",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The parent resource name to list tenants for.",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The pagination token from the response of a previous request."
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "The maximum number of results to return, capped at 1000. If not specified, the default value is 20."
                }
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse"
              },
              "path": "v2/{+parent}/tenants",
              "id": "identitytoolkit.projects.tenants.list",
              "description": "List tenants under the given agent project. Requires read permission on the Agent project.",
              "parameterOrder": [
                "parent"
              ]
            },
            "get": {
              "id": "identitytoolkit.projects.tenants.get",
              "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2Tenant"
              },
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Resource name of the tenant to retrieve.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/tenants/[^/]+$"
                }
              },
              "path": "v2/{+name}",
              "description": "Get a tenant. Requires read permission on the Tenant resource.",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ]
            },
            "getIamPolicy": {
              "path": "v2/{+resource}:getIamPolicy",
              "parameterOrder": [
                "resource"
              ],
              "id": "identitytoolkit.projects.tenants.getIamPolicy",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "request": {
                "$ref": "GoogleIamV1GetIamPolicyRequest"
              },
              "response": {
                "$ref": "GoogleIamV1Policy"
              },
              "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}:getIamPolicy",
              "description": "Gets the access control policy for a resource. An error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it. Caller must have the right Google IAM permission on the resource.",
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "pattern": "^projects/[^/]+/tenants/[^/]+$",
                  "type": "string",
                  "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "location": "path",
                  "required": true
                }
              }
            },
            "testIamPermissions": {
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/tenants/[^/]+$"
                }
              },
              "httpMethod": "POST",
              "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}:testIamPermissions",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "path": "v2/{+resource}:testIamPermissions",
              "response": {
                "$ref": "GoogleIamV1TestIamPermissionsResponse"
              },
              "request": {
                "$ref": "GoogleIamV1TestIamPermissionsRequest"
              },
              "id": "identitytoolkit.projects.tenants.testIamPermissions",
              "parameterOrder": [
                "resource"
              ],
              "description": "Returns the caller's permissions on a resource. An error is returned if the resource does not exist. A caller is not required to have Google IAM permission to make this request."
            },
            "patch": {
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2Tenant"
              },
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "description": "If provided, only update fields set in the update mask. Otherwise, all settable fields will be updated. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/tenants/[^/]+$",
                  "description": "Output only. Resource name of a tenant. For example: \"projects/{project-id}/tenants/{tenant-id}\"",
                  "type": "string"
                }
              },
              "httpMethod": "PATCH",
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2Tenant"
              },
              "description": "Update a tenant. Requires write permission on the Tenant resource.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "path": "v2/{+name}",
              "id": "identitytoolkit.projects.tenants.patch",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}"
            },
            "create": {
              "path": "v2/{+parent}/tenants",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2Tenant"
              },
              "description": "Create a tenant. Requires write permission on the Agent project.",
              "flatPath": "v2/projects/{projectsId}/tenants",
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "The parent resource name where the tenant will be created. For example, \"projects/project1\".",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "type": "string"
                }
              },
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2Tenant"
              },
              "id": "identitytoolkit.projects.tenants.create",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameterOrder": [
                "parent"
              ]
            },
            "setIamPolicy": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "response": {
                "$ref": "GoogleIamV1Policy"
              },
              "request": {
                "$ref": "GoogleIamV1SetIamPolicyRequest"
              },
              "httpMethod": "POST",
              "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}:setIamPolicy",
              "description": "Sets the access control policy for a resource. If the policy exists, it is replaced. Caller must have the right Google IAM permission on the resource.",
              "parameterOrder": [
                "resource"
              ],
              "path": "v2/{+resource}:setIamPolicy",
              "id": "identitytoolkit.projects.tenants.setIamPolicy",
              "parameters": {
                "resource": {
                  "pattern": "^projects/[^/]+/tenants/[^/]+$",
                  "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              }
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/tenants/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Resource name of the tenant to delete."
                }
              },
              "httpMethod": "DELETE",
              "path": "v2/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}",
              "id": "identitytoolkit.projects.tenants.delete",
              "description": "Delete a tenant. Requires write permission on the Agent project."
            }
          },
          "resources": {
            "defaultSupportedIdpConfigs": {
              "methods": {
                "patch": {
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "description": "Update a default supported Idp configuration for an Identity Toolkit project.",
                  "parameters": {
                    "name": {
                      "description": "The name of the DefaultSupportedIdpConfig resource, for example: \"projects/my-awesome-project/defaultSupportedIdpConfigs/google.com\"",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/tenants/[^/]+/defaultSupportedIdpConfigs/[^/]+$"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query",
                      "description": "The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
                  },
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/defaultSupportedIdpConfigs/{defaultSupportedIdpConfigsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.patch",
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
                  }
                },
                "list": {
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/defaultSupportedIdpConfigs",
                  "description": "List all default supported Idp configurations for an Identity Toolkit project.",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "The parent resource name, for example, \"projects/my-awesome-project\".",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/tenants/[^/]+$"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of items to return.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "path": "v2/{+parent}/defaultSupportedIdpConfigs",
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse"
                  },
                  "httpMethod": "GET",
                  "id": "identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.list"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "description": "Delete a default supported Idp configuration for an Identity Toolkit project.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "The resource name of the config, for example: \"projects/my-awesome-project/defaultSupportedIdpConfigs/google.com\"",
                      "required": true,
                      "pattern": "^projects/[^/]+/tenants/[^/]+/defaultSupportedIdpConfigs/[^/]+$"
                    }
                  },
                  "id": "identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.delete",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/defaultSupportedIdpConfigs/{defaultSupportedIdpConfigsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The resource name of the config, for example: \"projects/my-awesome-project/defaultSupportedIdpConfigs/google.com\"",
                      "location": "path",
                      "pattern": "^projects/[^/]+/tenants/[^/]+/defaultSupportedIdpConfigs/[^/]+$",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Retrieve a default supported Idp configuration for an Identity Toolkit project.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
                  },
                  "id": "identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.get",
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/defaultSupportedIdpConfigs/{defaultSupportedIdpConfigsId}",
                  "path": "v2/{+name}"
                },
                "create": {
                  "description": "Create a default supported Idp configuration for an Identity Toolkit project.",
                  "path": "v2/{+parent}/defaultSupportedIdpConfigs",
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/defaultSupportedIdpConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "idpId": {
                      "type": "string",
                      "location": "query",
                      "description": "The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all default supported Idps."
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/tenants/[^/]+$",
                      "description": "The parent resource name where the config to be created, for example: \"projects/my-awesome-project\"",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "httpMethod": "POST",
                  "id": "identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.create",
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
                  }
                }
              }
            },
            "inboundSamlConfigs": {
              "methods": {
                "get": {
                  "description": "Retrieve an inbound SAML configuration for an Identity Toolkit project.",
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
                  },
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/inboundSamlConfigs/{inboundSamlConfigsId}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/tenants/[^/]+/inboundSamlConfigs/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "The resource name of the config, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'.",
                      "required": true
                    }
                  },
                  "id": "identitytoolkit.projects.tenants.inboundSamlConfigs.get",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/inboundSamlConfigs/{inboundSamlConfigsId}",
                  "httpMethod": "DELETE",
                  "description": "Delete an inbound SAML configuration for an Identity Toolkit project.",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "identitytoolkit.projects.tenants.inboundSamlConfigs.delete",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameters": {
                    "name": {
                      "description": "The resource name of the config to be deleted, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'.",
                      "pattern": "^projects/[^/]+/tenants/[^/]+/inboundSamlConfigs/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  }
                },
                "create": {
                  "description": "Create an inbound SAML configuration for an Identity Toolkit project.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "path": "v2/{+parent}/inboundSamlConfigs",
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
                  },
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
                  },
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/inboundSamlConfigs",
                  "id": "identitytoolkit.projects.tenants.inboundSamlConfigs.create",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/tenants/[^/]+$",
                      "location": "path",
                      "description": "The parent resource name where the config to be created, for example: \"projects/my-awesome-project\""
                    },
                    "inboundSamlConfigId": {
                      "location": "query",
                      "type": "string",
                      "description": "The id to use for this config."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ]
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "description": "Update an inbound SAML configuration for an Identity Toolkit project.",
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
                  },
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
                  },
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/tenants/[^/]+/inboundSamlConfigs/[^/]+$",
                      "description": "The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests.",
                      "required": true
                    }
                  },
                  "httpMethod": "PATCH",
                  "id": "identitytoolkit.projects.tenants.inboundSamlConfigs.patch",
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/inboundSamlConfigs/{inboundSamlConfigsId}"
                },
                "list": {
                  "description": "List all inbound SAML configurations for an Identity Toolkit project.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "identitytoolkit.projects.tenants.inboundSamlConfigs.list",
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "The parent resource name, for example, \"projects/my-awesome-project\".",
                      "pattern": "^projects/[^/]+/tenants/[^/]+$",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of items to return.",
                      "location": "query"
                    }
                  },
                  "path": "v2/{+parent}/inboundSamlConfigs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/inboundSamlConfigs"
                }
              }
            },
            "oauthIdpConfigs": {
              "methods": {
                "list": {
                  "path": "v2/{+parent}/oauthIdpConfigs",
                  "id": "identitytoolkit.projects.tenants.oauthIdpConfigs.list",
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of items to return.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/tenants/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The parent resource name, for example, \"projects/my-awesome-project\"."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/oauthIdpConfigs",
                  "description": "List all Oidc Idp configurations for an Identity Toolkit project."
                },
                "create": {
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
                  },
                  "id": "identitytoolkit.projects.tenants.oauthIdpConfigs.create",
                  "description": "Create an Oidc Idp configuration for an Identity Toolkit project.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/oauthIdpConfigs",
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
                  },
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/oauthIdpConfigs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "parameters": {
                    "oauthIdpConfigId": {
                      "location": "query",
                      "description": "The id to use for this config.",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "The parent resource name where the config to be created, for example: \"projects/my-awesome-project\"",
                      "location": "path",
                      "pattern": "^projects/[^/]+/tenants/[^/]+$"
                    }
                  }
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "description": "Delete an Oidc Idp configuration for an Identity Toolkit project.",
                  "id": "identitytoolkit.projects.tenants.oauthIdpConfigs.delete",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/tenants/[^/]+/oauthIdpConfigs/[^/]+$",
                      "required": true,
                      "description": "The resource name of the config to be deleted, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/oauthIdpConfigs/{oauthIdpConfigsId}"
                },
                "get": {
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
                  },
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "id": "identitytoolkit.projects.tenants.oauthIdpConfigs.get",
                  "description": "Retrieve an Oidc Idp configuration for an Identity Toolkit project.",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the config, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/tenants/[^/]+/oauthIdpConfigs/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/oauthIdpConfigs/{oauthIdpConfigsId}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "id": "identitytoolkit.projects.tenants.oauthIdpConfigs.patch",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/tenants/[^/]+/oauthIdpConfigs/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests."
                    },
                    "updateMask": {
                      "description": "The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
                  },
                  "path": "v2/{+name}",
                  "description": "Update an Oidc Idp configuration for an Identity Toolkit project.",
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/oauthIdpConfigs/{oauthIdpConfigsId}",
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "alt": {
      "type": "string",
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    }
  },
  "version": "v2",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/firebase": {
          "description": "View and administer all your Firebase data and settings"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  }
}

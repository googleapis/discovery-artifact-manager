{
  "version_module": true,
  "mtlsRootUrl": "https://migrationcenter.mtls.googleapis.com/",
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "assets": {
              "methods": {
                "aggregateValues": {
                  "response": {
                    "$ref": "AggregateAssetsValuesResponse"
                  },
                  "id": "migrationcenter.projects.locations.assets.aggregateValues",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "AggregateAssetsValuesRequest"
                  },
                  "description": "Aggregates the requested fields based on provided function.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for `AggregateAssetsValuesRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v1alpha1/{+parent}/assets:aggregateValues"
                },
                "reportAssetFrames": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames",
                  "response": {
                    "$ref": "ReportAssetFramesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/assets:reportAssetFrames",
                  "request": {
                    "$ref": "Frames"
                  },
                  "id": "migrationcenter.projects.locations.assets.reportAssetFrames",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "source": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Reference to a source."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent of the resource.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Reports a set of frames."
                },
                "batchUpdate": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchUpdate",
                  "id": "migrationcenter.projects.locations.assets.batchUpdate",
                  "response": {
                    "$ref": "BatchUpdateAssetsResponse"
                  },
                  "path": "v1alpha1/{+parent}/assets:batchUpdate",
                  "httpMethod": "POST",
                  "description": "Updates the parameters of a list of assets.",
                  "request": {
                    "$ref": "BatchUpdateAssetsRequest"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for batch asset update.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "list": {
                  "response": {
                    "$ref": "ListAssetsResponse"
                  },
                  "path": "v1alpha1/{+parent}/assets",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets",
                  "parameters": {
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Parent value for `ListAssetsRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "view": {
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ],
                      "location": "query",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data.",
                        "The asset view includes the standard metadata of an asset."
                      ],
                      "type": "string",
                      "description": "View of the assets. Defaults to BASIC."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results the server should return."
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists all the assets in a given project and location.",
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.assets.list"
                },
                "batchDelete": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Parent value for batch asset delete."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchDelete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "request": {
                    "$ref": "BatchDeleteAssetsRequest"
                  },
                  "description": "Deletes list of Assets.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.assets.batchDelete",
                  "path": "v1alpha1/{+parent}/assets:batchDelete"
                },
                "get": {
                  "description": "Gets the details of an asset.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.assets.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "response": {
                    "$ref": "Asset"
                  },
                  "parameters": {
                    "view": {
                      "description": "View of the assets. Defaults to BASIC.",
                      "type": "string",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data.",
                        "The asset view includes the standard metadata of an asset."
                      ],
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ],
                      "location": "query"
                    },
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+name}"
                }
              }
            },
            "sources": {
              "methods": {
                "create": {
                  "path": "v1alpha1/{+parent}/sources",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "description": "Creates a new source in a given project and location.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Source"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Value for parent.",
                      "type": "string"
                    },
                    "sourceId": {
                      "description": "Required. User specified ID for the source. It will become the last component of the source name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "type": "string",
                      "location": "query"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.sources.create",
                  "httpMethod": "POST"
                },
                "patch": {
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "description": "Updates the parameters of a source.",
                  "id": "migrationcenter.projects.locations.sources.patch",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Source` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Output only. The full name of the source.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Source"
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "filter": {
                      "description": "Filtering results.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results that the server should return.",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. Parent value for `ListSourcesRequest`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    }
                  },
                  "path": "v1alpha1/{+parent}/sources",
                  "description": "Lists all the sources in a given project and location.",
                  "id": "migrationcenter.projects.locations.sources.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListSourcesResponse"
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the details of a source.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Source"
                  },
                  "id": "migrationcenter.projects.locations.sources.get"
                },
                "delete": {
                  "id": "migrationcenter.projects.locations.sources.delete",
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a source.",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            },
            "importJobs": {
              "methods": {
                "run": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Runs an import job.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "RunImportJobRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the import job to run.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "migrationcenter.projects.locations.importJobs.run",
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run",
                  "path": "v1alpha1/{+name}:run"
                },
                "create": {
                  "description": "Creates an import job.",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "importJobId": {
                      "location": "query",
                      "description": "Required. ID of the import job.",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+parent}/importJobs",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.importJobs.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs"
                },
                "list": {
                  "response": {
                    "$ref": "ListImportJobsResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/importJobs",
                  "id": "migrationcenter.projects.locations.importJobs.list",
                  "parameters": {
                    "view": {
                      "type": "string",
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "location": "query",
                      "description": "Optional. The level of details of each import job. Default value is BASIC.",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ]
                    },
                    "filter": {
                      "location": "query",
                      "description": "Filtering results.",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Parent value for `ListImportJobsRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Lists all import jobs.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "validate": {
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+name}:validate",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Validates an import job.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the import job to validate.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.validate",
                  "request": {
                    "$ref": "ValidateImportJobRequest"
                  }
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.patch",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "description": "Output only. The full name of the import job.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "description": "Updates an import job.",
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.delete",
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "force": {
                      "description": "Optional. If set to `true`, any `ImportDataFiles` of this job will also be deleted If set to `false`, the request only works if the job has no data files.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "type": "string"
                    }
                  },
                  "description": "Deletes an import job.",
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "id": "migrationcenter.projects.locations.importJobs.get",
                  "description": "Gets the details of an import job.",
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "ImportJob"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the resource."
                    },
                    "view": {
                      "type": "string",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "location": "query",
                      "description": "Optional. The level of details of the import job. Default value is FULL."
                    }
                  }
                }
              },
              "resources": {
                "importDataFiles": {
                  "methods": {
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE",
                      "description": "Delete an import data file.",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.delete",
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "type": "string",
                          "description": "Required. Name of the ImportDataFile to delete.",
                          "location": "path"
                        },
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "path": "v1alpha1/{+name}"
                    },
                    "create": {
                      "request": {
                        "$ref": "ImportDataFile"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates an import data file.",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. Name of the parent of the ImportDataFile.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "type": "string",
                          "required": true
                        },
                        "requestId": {
                          "type": "string",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        },
                        "importDataFileId": {
                          "description": "Required. The ID of the new data file.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "path": "v1alpha1/{+parent}/importDataFiles",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.create"
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets an import data file.",
                      "path": "v1alpha1/{+name}",
                      "response": {
                        "$ref": "ImportDataFile"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "description": "Required. Name of the ImportDataFile.",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "httpMethod": "GET"
                    },
                    "list": {
                      "path": "v1alpha1/{+parent}/importDataFiles",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageSize": {
                          "description": "The maximum number of data files to return. The service may return fewer than this value. If unspecified, at most 500 data files will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "description": "Required. Name of the parent of the `ImportDataFiles` resource.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "type": "string"
                        },
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                        },
                        "pageToken": {
                          "description": "A page token, received from a previous `ListImportDataFiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListImportDataFiles` must match the call that provided the page token.",
                          "type": "string",
                          "location": "query"
                        },
                        "filter": {
                          "location": "query",
                          "description": "Filtering results.",
                          "type": "string"
                        }
                      },
                      "description": "List import data files.",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.list",
                      "response": {
                        "$ref": "ListImportDataFilesResponse"
                      }
                    }
                  }
                }
              }
            },
            "groups": {
              "methods": {
                "create": {
                  "request": {
                    "$ref": "Group"
                  },
                  "description": "Creates a new group in a given project and location.",
                  "id": "migrationcenter.projects.locations.groups.create",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/groups",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups",
                  "parameters": {
                    "groupId": {
                      "location": "query",
                      "description": "Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. Value for parent.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST"
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the parameters of a group.",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Group` resource by the update. The values specified in the `update_mask` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "description": "Output only. The name of the group.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "Group"
                  },
                  "id": "migrationcenter.projects.locations.groups.patch"
                },
                "list": {
                  "path": "v1alpha1/{+parent}/groups",
                  "description": "Lists all groups in a given project and location.",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Parent value for `ListGroupsRequest`."
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filtering results."
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results the server should return."
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups",
                  "id": "migrationcenter.projects.locations.groups.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListGroupsResponse"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "addAssets": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "group": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "description": "Required. Group reference."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addAssets",
                  "request": {
                    "$ref": "AddAssetsToGroupRequest"
                  },
                  "path": "v1alpha1/{+group}:addAssets",
                  "parameterOrder": [
                    "group"
                  ],
                  "description": "Adds assets to a group.",
                  "id": "migrationcenter.projects.locations.groups.addAssets"
                },
                "delete": {
                  "description": "Deletes a group.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "id": "migrationcenter.projects.locations.groups.delete",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the group resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "required": true
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "path": "v1alpha1/{+name}"
                },
                "get": {
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.groups.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "description": "Gets the details of a group.",
                  "response": {
                    "$ref": "Group"
                  }
                },
                "removeAssets": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+group}:removeAssets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeAssets",
                  "httpMethod": "POST",
                  "parameters": {
                    "group": {
                      "location": "path",
                      "description": "Required. Group reference.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "RemoveAssetsFromGroupRequest"
                  },
                  "description": "Removes assets from a group.",
                  "id": "migrationcenter.projects.locations.groups.removeAssets",
                  "parameterOrder": [
                    "group"
                  ]
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.operations.delete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "get": {
                  "id": "migrationcenter.projects.locations.operations.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+name}"
                },
                "cancel": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.operations.cancel",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}:cancel",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  }
                },
                "list": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "location": "path"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The standard list page size.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    }
                  },
                  "path": "v1alpha1/{+name}/operations",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.operations.list",
                  "httpMethod": "GET"
                }
              }
            },
            "reportConfigs": {
              "resources": {
                "reports": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "ListReportsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "path": "v1alpha1/{+parent}/reports",
                      "description": "Lists Reports in a given ReportConfig.",
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "description": "Required. Parent value for `ListReportsRequest`.",
                          "required": true,
                          "type": "string"
                        },
                        "view": {
                          "description": "Determines what information to retrieve for each Report.",
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "location": "query",
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "type": "string"
                        },
                        "filter": {
                          "description": "Filtering results.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results that the server should return.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "location": "query",
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.list"
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "requestId": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        },
                        "reportId": {
                          "description": "Required. User specified id for the report. It will become the last component of the report name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The id must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "description": "Required. Value for parent.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "description": "Creates a report.",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.create",
                      "request": {
                        "$ref": "Report"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1alpha1/{+parent}/reports",
                      "httpMethod": "POST"
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. Name of the resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "type": "string",
                          "location": "path"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        }
                      },
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.delete",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Deletes a Report.",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "path": "v1alpha1/{+name}",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "get": {
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.get",
                      "response": {
                        "$ref": "Report"
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "path": "v1alpha1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. Name of the resource."
                        },
                        "view": {
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "description": "Determines what information to retrieve for the Report.",
                          "type": "string",
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "location": "query"
                        }
                      },
                      "description": "Gets details of a single Report."
                    }
                  }
                }
              },
              "methods": {
                "delete": {
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "force": {
                      "description": "Optional. If set to `true`, any child `Reports` of this entity will also be deleted. If set to `false`, the request only works if the resource has no children.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.reportConfigs.delete",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a ReportConfig.",
                  "httpMethod": "DELETE"
                },
                "create": {
                  "request": {
                    "$ref": "ReportConfig"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "path": "v1alpha1/{+parent}/reportConfigs",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "reportConfigId": {
                      "description": "Required. User specified ID for the report config. It will become the last component of the report config name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Creates a report configuration.",
                  "id": "migrationcenter.projects.locations.reportConfigs.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "response": {
                    "$ref": "ReportConfig"
                  },
                  "id": "migrationcenter.projects.locations.reportConfigs.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets details of a single ReportConfig.",
                  "path": "v1alpha1/{+name}"
                },
                "list": {
                  "id": "migrationcenter.projects.locations.reportConfigs.list",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for `ListReportConfigsRequest`.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "description": "Filtering results.",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListReportConfigsResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "path": "v1alpha1/{+parent}/reportConfigs",
                  "description": "Lists ReportConfigs in a given project and location."
                }
              }
            },
            "preferenceSets": {
              "methods": {
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "preferenceSetId": {
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "description": "Creates a new preference set in a given project and location.",
                  "path": "v1alpha1/{+parent}/preferenceSets",
                  "id": "migrationcenter.projects.locations.preferenceSets.create",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "delete": {
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the group resource."
                    }
                  },
                  "description": "Deletes a preference set.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.preferenceSets.delete"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.preferenceSets.get",
                  "response": {
                    "$ref": "PreferenceSet"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the details of a preference set.",
                  "path": "v1alpha1/{+name}"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists all the preference sets in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.preferenceSets.list",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, at most 500 preference sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `ListPreferenceSetsRequest`.",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+parent}/preferenceSets",
                  "response": {
                    "$ref": "ListPreferenceSetsResponse"
                  }
                },
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Updates the parameters of a preference set.",
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.preferenceSets.patch",
                  "parameters": {
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `PreferenceSet` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "required": true,
                      "description": "Output only. Name of the preference set."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}"
                }
              }
            }
          },
          "methods": {
            "list": {
              "id": "migrationcenter.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "parameters": {
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "name": {
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32"
                }
              },
              "description": "Lists information about the supported locations for this service.",
              "path": "v1alpha1/{+name}/locations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              }
            },
            "getSettings": {
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "Settings"
              },
              "id": "migrationcenter.projects.locations.getSettings",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "Required. Name of the resource.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "location": "path",
                  "required": true
                }
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/settings",
              "description": "Gets the details of regional settings."
            },
            "updateSettings": {
              "httpMethod": "PATCH",
              "response": {
                "$ref": "Operation"
              },
              "description": "Updates the regional-level project settings.",
              "id": "migrationcenter.projects.locations.updateSettings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "requestId": {
                  "type": "string",
                  "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                  "location": "query"
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "description": "Required. Field mask is used to specify the fields to be overwritten in the `Settings` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "description": "Output only. The name of the resource.",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/settings",
              "request": {
                "$ref": "Settings"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "get": {
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "id": "migrationcenter.projects.locations.get",
              "response": {
                "$ref": "Location"
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "description": "Gets information about a location."
            }
          }
        }
      }
    }
  },
  "schemas": {
    "DiskPartitionList": {
      "id": "DiskPartitionList",
      "type": "object",
      "description": "Disk partition list.",
      "properties": {
        "entries": {
          "description": "Partition entries.",
          "items": {
            "$ref": "DiskPartition"
          },
          "type": "array"
        }
      }
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      },
      "type": "object",
      "id": "Operation"
    },
    "Money": {
      "properties": {
        "nanos": {
          "format": "int32",
          "type": "integer",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        },
        "currencyCode": {
          "type": "string",
          "description": "The three-letter currency code defined in ISO 4217."
        },
        "units": {
          "type": "string",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "format": "int64"
        }
      },
      "description": "Represents an amount of money with its currency type.",
      "type": "object",
      "id": "Money"
    },
    "GenericPlatformDetails": {
      "id": "GenericPlatformDetails",
      "description": "Generic platform details.",
      "type": "object",
      "properties": {
        "location": {
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field.",
          "type": "string"
        }
      }
    },
    "ListPreferenceSetsResponse": {
      "type": "object",
      "properties": {
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "preferenceSets": {
          "description": "The list of PreferenceSets",
          "type": "array",
          "items": {
            "$ref": "PreferenceSet"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        }
      },
      "description": "Response message for listing preference sets.",
      "id": "ListPreferenceSetsResponse"
    },
    "Insight": {
      "id": "Insight",
      "properties": {
        "migrationInsight": {
          "readOnly": true,
          "description": "Output only. An insight about potential migrations for an asset.",
          "$ref": "MigrationInsight"
        }
      },
      "type": "object",
      "description": "An insight about an asset."
    },
    "RemoveAssetsFromGroupRequest": {
      "id": "RemoveAssetsFromGroupRequest",
      "type": "object",
      "properties": {
        "assets": {
          "description": "Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000.",
          "$ref": "AssetList"
        },
        "allowMissing": {
          "type": "boolean",
          "description": "Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`."
        },
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      },
      "description": "A request to remove assets from a group."
    },
    "AggregationSum": {
      "type": "object",
      "properties": {},
      "description": "Sum of field values.",
      "id": "AggregationSum"
    },
    "PreferenceSet": {
      "id": "PreferenceSet",
      "type": "object",
      "properties": {
        "description": {
          "description": "A description of the preference set.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the preference set was last updated."
        },
        "name": {
          "type": "string",
          "description": "Output only. Name of the preference set.",
          "readOnly": true
        },
        "virtualMachinePreferences": {
          "$ref": "VirtualMachinePreferences",
          "description": "A set of preferences that applies to all virtual machines in the context."
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the preference set was created."
        }
      },
      "description": "The preferences that apply to all assets in a given context."
    },
    "HostsEntryList": {
      "id": "HostsEntryList",
      "description": "Hosts content.",
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "HostsEntry"
          },
          "type": "array",
          "description": "Hosts entries."
        }
      }
    },
    "PayloadFile": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The file name."
        },
        "data": {
          "format": "byte",
          "type": "string",
          "description": "The file data."
        }
      },
      "description": "Payload file for inline import job payload.",
      "id": "PayloadFile",
      "type": "object"
    },
    "RunningService": {
      "id": "RunningService",
      "description": "Guest OS running service details.",
      "type": "object",
      "properties": {
        "state": {
          "description": "Service state (raw, OS-agnostic).",
          "type": "string"
        },
        "cmdline": {
          "type": "string",
          "description": "Service command line."
        },
        "exePath": {
          "description": "Service binary path.",
          "type": "string"
        },
        "status": {
          "description": "Service status.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Service name."
        },
        "startMode": {
          "description": "Service start mode (raw, OS-agnostic).",
          "type": "string"
        },
        "pid": {
          "description": "Service pid.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "AssetPerformanceData": {
      "description": "Performance data for an asset.",
      "type": "object",
      "properties": {
        "dailyResourceUsageAggregations": {
          "type": "array",
          "items": {
            "$ref": "DailyResourceUsageAggregation"
          },
          "description": "Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days."
        }
      },
      "id": "AssetPerformanceData"
    },
    "AggregationResultHistogram": {
      "type": "object",
      "description": "The result of a bucketed histogram aggregation.",
      "properties": {
        "buckets": {
          "type": "array",
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "items": {
            "$ref": "AggregationResultHistogramBucket"
          }
        }
      },
      "id": "AggregationResultHistogram"
    },
    "ListSourcesResponse": {
      "properties": {
        "sources": {
          "items": {
            "$ref": "Source"
          },
          "type": "array",
          "description": "The list of sources."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      },
      "description": "Response message for listing sources.",
      "id": "ListSourcesResponse",
      "type": "object"
    },
    "GCSPayloadInfo": {
      "properties": {
        "format": {
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "type": "string",
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ],
          "description": "The import job format."
        },
        "path": {
          "description": "The payload path in Google Cloud Storage.",
          "type": "string"
        }
      },
      "id": "GCSPayloadInfo",
      "type": "object",
      "description": "A resource that represents a payload hosted on Google Cloud Storage."
    },
    "CpuUsageSample": {
      "description": "CPU usage sample.",
      "id": "CpuUsageSample",
      "properties": {
        "utilizedPercentage": {
          "format": "float",
          "description": "Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "AwsEc2PlatformDetails": {
      "type": "object",
      "description": "AWS EC2 specific details.",
      "properties": {
        "location": {
          "description": "The location of the machine in the AWS format.",
          "type": "string"
        },
        "machineTypeLabel": {
          "description": "AWS platform's machine type label.",
          "type": "string"
        }
      },
      "id": "AwsEc2PlatformDetails"
    },
    "AggregationHistogram": {
      "properties": {
        "lowerBounds": {
          "description": "Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "description": "Histogram of bucketed assets counts by field value.",
      "id": "AggregationHistogram",
      "type": "object"
    },
    "ListImportJobsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "importJobs": {
          "type": "array",
          "items": {
            "$ref": "ImportJob"
          },
          "description": "The list of import jobs."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      },
      "id": "ListImportJobsResponse",
      "type": "object",
      "description": "A response for listing import jobs."
    },
    "Status": {
      "type": "object",
      "id": "Status",
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "GuestInstalledApplication": {
      "description": "Guest installed application information.",
      "id": "GuestInstalledApplication",
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Source path."
        },
        "vendor": {
          "description": "Installed application vendor.",
          "type": "string"
        },
        "name": {
          "description": "Installed application name.",
          "type": "string"
        },
        "time": {
          "description": "Date application was installed.",
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "Installed application version."
        }
      }
    },
    "AggregationCount": {
      "id": "AggregationCount",
      "type": "object",
      "properties": {},
      "description": "Object count."
    },
    "RegionPreferences": {
      "type": "object",
      "properties": {
        "preferredRegions": {
          "description": "A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "The user preferences relating to target regions.",
      "id": "RegionPreferences"
    },
    "GuestConfigDetails": {
      "type": "object",
      "description": "Guest OS config information.",
      "id": "GuestConfigDetails",
      "properties": {
        "fstab": {
          "$ref": "FstabEntryList",
          "description": "Mount list (Linux fstab)."
        },
        "selinux": {
          "description": "SELinux details.",
          "$ref": "Selinux"
        },
        "hosts": {
          "$ref": "HostsEntryList",
          "description": "Hosts file (/etc/hosts)."
        },
        "issue": {
          "description": "OS issue (typically /etc/issue in Linux).",
          "type": "string"
        },
        "nfsExports": {
          "$ref": "NfsExportList",
          "description": "NFS exports."
        }
      }
    },
    "ComputeEngineMigrationTarget": {
      "id": "ComputeEngineMigrationTarget",
      "properties": {
        "shape": {
          "description": "Description of the suggested shape for the migration target.",
          "$ref": "ComputeEngineShapeDescriptor"
        }
      },
      "type": "object",
      "description": "Compute engine migration target."
    },
    "Asset": {
      "description": "An asset represents a resource in your environment. Asset types include virtual machines and databases.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The full name of the asset.",
          "readOnly": true
        },
        "virtualMachineDetails": {
          "description": "Output only. Asset information specific for virtual machines.",
          "$ref": "VirtualMachineDetails",
          "readOnly": true
        },
        "assignedGroups": {
          "description": "Output only. The list of groups that the asset is assigned to.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Generic asset attributes."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "insightList": {
          "$ref": "InsightList",
          "readOnly": true,
          "description": "Output only. The list of insights associated with the asset."
        },
        "sources": {
          "description": "Output only. The list of sources contributing to the asset.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the asset was created."
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The timestamp when the asset was last updated.",
          "format": "google-datetime",
          "readOnly": true
        },
        "performanceData": {
          "readOnly": true,
          "$ref": "AssetPerformanceData",
          "description": "Output only. Performance data for the asset."
        }
      },
      "type": "object",
      "id": "Asset"
    },
    "HostsEntry": {
      "type": "object",
      "id": "HostsEntry",
      "properties": {
        "ip": {
          "description": "IP (raw, IPv4/6 agnostic).",
          "type": "string"
        },
        "hostNames": {
          "description": "List of host names / aliases.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Single /etc/hosts entry."
    },
    "DailyResourceUsageAggregationDisk": {
      "description": "Statistical aggregation of disk usage.",
      "properties": {
        "iops": {
          "description": "Disk I/O operations per second.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "type": "object",
      "id": "DailyResourceUsageAggregationDisk"
    },
    "ReportConfig": {
      "id": "ReportConfig",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of resource."
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "groupPreferencesetAssignments": {
          "description": "Required. Collection of combinations of groups and preference sets.",
          "type": "array",
          "items": {
            "$ref": "ReportConfigGroupPreferenceSetAssignment"
          }
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the resource was created."
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the resource was last updated."
        }
      },
      "type": "object",
      "description": "The groups and associated preference sets on which we can generate reports."
    },
    "Selinux": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Is SELinux enabled."
        },
        "mode": {
          "type": "string",
          "description": "SELinux mode enforcing / permissive."
        }
      },
      "description": "SELinux details.",
      "type": "object",
      "id": "Selinux"
    },
    "AzureVmPlatformDetails": {
      "id": "AzureVmPlatformDetails",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Azure platform's provisioning state."
        },
        "machineTypeLabel": {
          "type": "string",
          "description": "Azure platform's machine type label."
        },
        "location": {
          "type": "string",
          "description": "The location of the machine in the Azure format."
        }
      },
      "description": "Azure VM specific details.",
      "type": "object"
    },
    "FileValidationReport": {
      "type": "object",
      "id": "FileValidationReport",
      "properties": {
        "rowErrors": {
          "type": "array",
          "items": {
            "$ref": "ImportRowError"
          },
          "description": "Partial list of rows that encountered validation error."
        },
        "partialReport": {
          "type": "boolean",
          "description": "Flag indicating that processing was aborted due to maximum number of errors."
        },
        "fileErrors": {
          "items": {
            "$ref": "ImportError"
          },
          "description": "List of file level errors.",
          "type": "array"
        },
        "fileName": {
          "description": "The name of the file.",
          "type": "string"
        }
      },
      "description": "A resource that aggregates the validation errors found in an import job file."
    },
    "NetworkConnection": {
      "id": "NetworkConnection",
      "properties": {
        "remoteIpAddress": {
          "description": "Remote IP address.",
          "type": "string"
        },
        "protocol": {
          "description": "Connection protocol (e.g. TCP/UDP).",
          "type": "string"
        },
        "localPort": {
          "format": "int32",
          "description": "Local port.",
          "type": "integer"
        },
        "localIpAddress": {
          "type": "string",
          "description": "Local IP address."
        },
        "pid": {
          "type": "string",
          "format": "int64",
          "description": "Process ID."
        },
        "processName": {
          "type": "string",
          "description": "Process or service name."
        },
        "state": {
          "description": "Connection state (e.g. CONNECTED).",
          "type": "string"
        },
        "remotePort": {
          "type": "integer",
          "format": "int32",
          "description": "Remote port."
        }
      },
      "type": "object"
    },
    "ComputeEnginePreferences": {
      "type": "object",
      "description": "The user preferences relating to Compute Engine target platform.",
      "id": "ComputeEnginePreferences",
      "properties": {
        "machinePreferences": {
          "$ref": "MachinePreferences",
          "description": "Preferences concerning the machine types to consider on Compute Engine."
        },
        "persistentDiskType": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ],
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ],
          "description": "Persistent disk type to use. If unspecified (default), all types are considered, based on available usage data."
        },
        "licenseType": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value).",
            "Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with.",
            "Bring-your-own-license (BYOL) plan. User provides the OS license."
          ],
          "enum": [
            "LICENSE_TYPE_UNSPECIFIED",
            "LICENSE_TYPE_DEFAULT",
            "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE"
          ],
          "description": "License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan."
        }
      }
    },
    "GoogleKubernetesEngineMigrationTarget": {
      "id": "GoogleKubernetesEngineMigrationTarget",
      "description": "GKE migration target.",
      "type": "object",
      "properties": {}
    },
    "GuestInstalledApplicationList": {
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "GuestInstalledApplication"
          },
          "description": "Application entries."
        }
      },
      "id": "GuestInstalledApplicationList",
      "description": "Guest installed application list.",
      "type": "object"
    },
    "ReportSummaryAssetAggregateStats": {
      "type": "object",
      "properties": {
        "totalCores": {
          "type": "string",
          "format": "int64",
          "description": "Sum of the CPU core count of all the assets in this collection."
        },
        "storageBytesHistogram": {
          "description": "Histogram showing a distribution of memory sizes.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "assetAge": {
          "description": "Count of assets grouped by age.",
          "$ref": "ReportSummaryChartData"
        },
        "totalAssets": {
          "description": "Count of the number of unique assets in this collection.",
          "format": "int64",
          "type": "string"
        },
        "coreCountHistogram": {
          "description": "Histogram showing a distribution of CPU core counts.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "operatingSystem": {
          "$ref": "ReportSummaryChartData",
          "description": "Count of assets grouped by Operating System families."
        },
        "storageUtilization": {
          "$ref": "ReportSummaryChartData",
          "description": "Total storage split into Used/Free buckets."
        },
        "totalMemoryBytes": {
          "type": "string",
          "format": "int64",
          "description": "Sum of the memory in bytes of all the assets in this collection."
        },
        "memoryBytesHistogram": {
          "$ref": "ReportSummaryHistogramChartData",
          "description": "Histogram showing a distribution of memory sizes."
        },
        "memoryUtilization": {
          "$ref": "ReportSummaryChartData",
          "description": "Total memory split into Used/Free buckets."
        },
        "storageUtilizationChart": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryUtilizationChartData"
        },
        "totalStorageBytes": {
          "description": "Sum of persistent storage in bytes of all the assets in this collection.",
          "type": "string",
          "format": "int64"
        },
        "memoryUtilizationChart": {
          "$ref": "ReportSummaryUtilizationChartData",
          "description": "Total memory split into Used/Free buckets."
        }
      },
      "description": "Aggregate statistics for a collection of assets.",
      "id": "ReportSummaryAssetAggregateStats"
    },
    "ReportSummaryUtilizationChartData": {
      "id": "ReportSummaryUtilizationChartData",
      "properties": {
        "used": {
          "type": "string",
          "description": "Aggregate value which falls into the \"Used\" bucket.",
          "format": "int64"
        },
        "free": {
          "type": "string",
          "description": "Aggregate value which falls into the \"Free\" bucket.",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "Utilization Chart is a specific type of visualization which displays a metric classified into \"Used\" and \"Free\" buckets."
    },
    "ImportRowError": {
      "type": "object",
      "properties": {
        "errors": {
          "items": {
            "$ref": "ImportError"
          },
          "description": "The list of errors detected in the row.",
          "type": "array"
        },
        "vmUuid": {
          "type": "string",
          "description": "The VM UUID."
        },
        "vmName": {
          "type": "string",
          "description": "The name of the VM in the row."
        },
        "rowNumber": {
          "description": "The row number where the error was detected.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "ImportRowError",
      "description": "A resource that reports the import job errors at row level."
    },
    "DailyResourceUsageAggregationStats": {
      "id": "DailyResourceUsageAggregationStats",
      "properties": {
        "ninteyFifthPercentile": {
          "format": "float",
          "description": "95th percentile usage value.",
          "type": "number"
        },
        "median": {
          "format": "float",
          "description": "Median usage value.",
          "type": "number"
        },
        "average": {
          "description": "Average usage value.",
          "type": "number",
          "format": "float"
        },
        "peak": {
          "description": "Peak usage value.",
          "format": "float",
          "type": "number"
        }
      },
      "description": "Statistical aggregation of samples for a single resource usage.",
      "type": "object"
    },
    "ReportSummaryHistogramChartDataBucket": {
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "id": "ReportSummaryHistogramChartDataBucket",
      "type": "object",
      "properties": {
        "lowerBound": {
          "format": "int64",
          "type": "string",
          "description": "Lower bound - inclusive."
        },
        "upperBound": {
          "description": "Upper bound - exclusive.",
          "format": "int64",
          "type": "string"
        },
        "count": {
          "description": "Count of items in the bucket.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "AggregateAssetsValuesRequest": {
      "properties": {
        "filter": {
          "description": "The aggregation will be performed on assets that match the provided filter.",
          "type": "string"
        },
        "aggregations": {
          "type": "array",
          "description": "Array of aggregations to perform. Up to 25 aggregations can be defined.",
          "items": {
            "$ref": "Aggregation"
          }
        }
      },
      "type": "object",
      "id": "AggregateAssetsValuesRequest",
      "description": "A request to aggregate one or more values."
    },
    "MachineSeries": {
      "description": "A Compute Engine machine series.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series."
        }
      },
      "type": "object",
      "id": "MachineSeries"
    },
    "AggregateAssetsValuesResponse": {
      "properties": {
        "results": {
          "items": {
            "$ref": "AggregationResult"
          },
          "type": "array",
          "description": "The aggregation results."
        }
      },
      "type": "object",
      "id": "AggregateAssetsValuesResponse",
      "description": "A response to a request to aggregated assets values."
    },
    "BiosDetails": {
      "description": "Details about the BIOS.",
      "properties": {
        "biosVersion": {
          "type": "string",
          "description": "BIOS version."
        },
        "smbiosUuid": {
          "description": "SMBIOS UUID.",
          "type": "string"
        },
        "biosName": {
          "type": "string",
          "description": "BIOS name."
        },
        "biosManufacturer": {
          "description": "BIOS manufacturer.",
          "type": "string"
        },
        "biosReleaseDate": {
          "description": "BIOS release date.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "BiosDetails"
    },
    "MachinePreferences": {
      "type": "object",
      "id": "MachinePreferences",
      "description": "The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.",
      "properties": {
        "allowedMachineSeries": {
          "description": "Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.",
          "items": {
            "$ref": "MachineSeries"
          },
          "type": "array"
        }
      }
    },
    "VirtualMachineDetails": {
      "description": "Details of a VirtualMachine.",
      "properties": {
        "vcenterVmId": {
          "type": "string",
          "description": "vCenter VM ID."
        },
        "osName": {
          "type": "string",
          "description": "The name of the operating system running on the VirtualMachine."
        },
        "guestOs": {
          "$ref": "GuestOsDetails",
          "description": "Guest OS information."
        },
        "osVersion": {
          "type": "string",
          "description": "The version of the operating system running on the virtual machine."
        },
        "vmName": {
          "description": "Virtual Machine display name.",
          "type": "string"
        },
        "vcenterUrl": {
          "type": "string",
          "description": "vCenter URL used in collection."
        },
        "osFamily": {
          "description": "What family the OS belong to, if known.",
          "type": "string",
          "enum": [
            "OS_FAMILY_UNKNOWN",
            "OS_FAMILY_WINDOWS",
            "OS_FAMILY_LINUX",
            "OS_FAMILY_UNIX"
          ],
          "enumDescriptions": [
            "",
            "Microsoft Windows Server and Desktop.",
            "Various Linux flavors.",
            "Non-Linux Unix flavors."
          ]
        },
        "coreCount": {
          "format": "int32",
          "description": "Number of CPU cores in the VirtualMachine. Must be non-negative.",
          "type": "integer"
        },
        "vmDisks": {
          "description": "VM disk details.",
          "$ref": "VirtualMachineDiskDetails"
        },
        "vmArchitecture": {
          "description": "VM architecture details (vendor, cpu arch).",
          "$ref": "VirtualMachineArchitectureDetails"
        },
        "platform": {
          "$ref": "PlatformDetails",
          "description": "Platform information."
        },
        "vmUuid": {
          "description": "Virtual Machine unique identifier.",
          "type": "string"
        },
        "memoryMb": {
          "description": "The amount of memory in the VirtualMachine. Must be non-negative.",
          "type": "integer",
          "format": "int32"
        },
        "vmNetwork": {
          "$ref": "VirtualMachineNetworkDetails",
          "description": "VM network details."
        },
        "createTime": {
          "description": "VM creation timestamp.",
          "format": "google-datetime",
          "type": "string"
        },
        "vcenterFolder": {
          "description": "Folder name in vCenter where asset resides.",
          "type": "string"
        },
        "powerState": {
          "description": "Power state of VM (poweredOn or poweredOff).",
          "type": "string"
        }
      },
      "type": "object",
      "id": "VirtualMachineDetails"
    },
    "RunningServiceList": {
      "type": "object",
      "id": "RunningServiceList",
      "properties": {
        "services": {
          "description": "Running service entries.",
          "type": "array",
          "items": {
            "$ref": "RunningService"
          }
        }
      },
      "description": "List of running guest OS services."
    },
    "ListReportConfigsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "reportConfigs": {
          "items": {
            "$ref": "ReportConfig"
          },
          "description": "A list of report configs.",
          "type": "array"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      },
      "id": "ListReportConfigsResponse",
      "description": "Response message for listing report configs.",
      "type": "object"
    },
    "ExecutionReport": {
      "properties": {
        "totalRowsCount": {
          "format": "int32",
          "type": "integer",
          "description": "Total number of rows in the import job."
        },
        "jobErrors": {
          "items": {
            "$ref": "ImportError"
          },
          "type": "array",
          "description": "List of job-level errors. Deprecated, use the job errors under execution_errors instead."
        },
        "executionErrors": {
          "$ref": "ValidationReport",
          "description": "Validation errors encountered during the execution of the import job."
        },
        "framesReported": {
          "type": "integer",
          "description": "Total number of asset frames reported for the import job.",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "ExecutionReport",
      "description": "A resource that reports result of the import job execution."
    },
    "PerformanceSample": {
      "properties": {
        "sampleTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Time the sample was collected."
        },
        "memory": {
          "description": "Memory usage sample.",
          "$ref": "MemoryUsageSample"
        },
        "disk": {
          "$ref": "DiskUsageSample",
          "description": "Disk usage sample."
        },
        "cpu": {
          "description": "CPU usage sample.",
          "$ref": "CpuUsageSample"
        },
        "network": {
          "$ref": "NetworkUsageSample",
          "description": "Network usage sample."
        }
      },
      "type": "object",
      "id": "PerformanceSample",
      "description": "Performance data sample."
    },
    "BatchUpdateAssetsRequest": {
      "id": "BatchUpdateAssetsRequest",
      "description": "A request to update a list of assets.",
      "properties": {
        "requests": {
          "items": {
            "$ref": "UpdateAssetRequest"
          },
          "description": "Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "MemoryUsageSample": {
      "description": "Memory usage sample.",
      "properties": {
        "utilizedPercentage": {
          "format": "float",
          "description": "Percentage of system memory utilized. Must be in the interval [0, 100].",
          "type": "number"
        }
      },
      "type": "object",
      "id": "MemoryUsageSample"
    },
    "DailyResourceUsageAggregation": {
      "properties": {
        "date": {
          "$ref": "Date",
          "description": "Aggregation date. Day boundaries are at midnight UTC."
        },
        "network": {
          "description": "Network usage.",
          "$ref": "DailyResourceUsageAggregationNetwork"
        },
        "disk": {
          "description": "Disk usage.",
          "$ref": "DailyResourceUsageAggregationDisk"
        },
        "memory": {
          "description": "Memory usage.",
          "$ref": "DailyResourceUsageAggregationMemory"
        },
        "cpu": {
          "description": "CPU usage.",
          "$ref": "DailyResourceUsageAggregationCPU"
        }
      },
      "id": "DailyResourceUsageAggregation",
      "type": "object",
      "description": "Usage data aggregation for a single day."
    },
    "BatchUpdateAssetsResponse": {
      "properties": {
        "assets": {
          "type": "array",
          "description": "Update asset content. The content only includes values after field mask being applied.",
          "items": {
            "$ref": "Asset"
          }
        }
      },
      "type": "object",
      "description": "Response for updating a list of assets.",
      "id": "BatchUpdateAssetsResponse"
    },
    "ReportSummaryHistogramChartData": {
      "type": "object",
      "properties": {
        "buckets": {
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "type": "array",
          "items": {
            "$ref": "ReportSummaryHistogramChartDataBucket"
          }
        }
      },
      "id": "ReportSummaryHistogramChartData",
      "description": "A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket."
    },
    "ReportSummary": {
      "properties": {
        "allAssetsStats": {
          "$ref": "ReportSummaryAssetAggregateStats",
          "description": "Aggregate statistics for all the assets across all the groups."
        },
        "groupFindings": {
          "type": "array",
          "description": "Findings for each Group included in this report.",
          "items": {
            "$ref": "ReportSummaryGroupFinding"
          }
        }
      },
      "description": "Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report.",
      "id": "ReportSummary",
      "type": "object"
    },
    "AssetFrame": {
      "properties": {
        "performanceSamples": {
          "items": {
            "$ref": "PerformanceSample"
          },
          "description": "Asset performance data samples.",
          "type": "array"
        },
        "traceToken": {
          "type": "string",
          "description": "Optional. Trace token is optionally provided to assist with debugging and traceability."
        },
        "reportTime": {
          "type": "string",
          "description": "The time the data was reported.",
          "format": "google-datetime"
        },
        "virtualMachineDetails": {
          "description": "Asset information specific for virtual machines.",
          "$ref": "VirtualMachineDetails"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Generic asset attributes.",
          "type": "object"
        }
      },
      "type": "object",
      "id": "AssetFrame",
      "description": "Contains data reported from an inventory source on an asset."
    },
    "VmwareDiskConfig": {
      "id": "VmwareDiskConfig",
      "properties": {
        "shared": {
          "type": "boolean",
          "description": "Is VMDK shared with other VMs."
        },
        "rdmCompatibilityMode": {
          "description": "RDM compatibility mode.",
          "type": "string"
        },
        "vmdkDiskMode": {
          "description": "VMDK disk mode.",
          "type": "string"
        },
        "backingType": {
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Flat v1.",
            "Flat v2.",
            "Persistent memory, also known as Non-Volatile Memory (NVM).",
            "Raw Disk Memory v1.",
            "Raw Disk Memory v2.",
            "SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.",
            "SEsparse v1.",
            "SEsparse v1."
          ],
          "enum": [
            "BACKING_TYPE_UNSPECIFIED",
            "BACKING_TYPE_FLAT_V1",
            "BACKING_TYPE_FLAT_V2",
            "BACKING_TYPE_PMEM",
            "BACKING_TYPE_RDM_V1",
            "BACKING_TYPE_RDM_V2",
            "BACKING_TYPE_SESPARSE",
            "BACKING_TYPE_SESPARSE_V1",
            "BACKING_TYPE_SESPARSE_V2"
          ],
          "description": "VMDK backing type."
        }
      },
      "type": "object",
      "description": "VMware disk config details."
    },
    "ValidateImportJobRequest": {
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ValidateImportJobRequest",
      "description": "A request to validate an import job."
    },
    "NfsExportList": {
      "description": "NFS exports.",
      "type": "object",
      "id": "NfsExportList",
      "properties": {
        "entries": {
          "description": "NFS export entries.",
          "type": "array",
          "items": {
            "$ref": "NfsExport"
          }
        }
      }
    },
    "NetworkUsageSample": {
      "id": "NetworkUsageSample",
      "type": "object",
      "properties": {
        "averageIngressBps": {
          "format": "float",
          "type": "number",
          "description": "Average network ingress in B/s sampled over a short window. Must be non-negative."
        },
        "averageEgressBps": {
          "description": "Average network egress in B/s sampled over a short window. Must be non-negative.",
          "type": "number",
          "format": "float"
        }
      },
      "description": "Network usage sample. Values are across all network interfaces."
    },
    "AddAssetsToGroupRequest": {
      "description": "A request to add assets to a group.",
      "properties": {
        "assets": {
          "description": "Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000.",
          "$ref": "AssetList"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        },
        "allowExisting": {
          "type": "boolean",
          "description": "Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`."
        }
      },
      "type": "object",
      "id": "AddAssetsToGroupRequest"
    },
    "ListOperationsResponse": {
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListOperationsResponse",
      "type": "object",
      "description": "The response message for Operations.ListOperations."
    },
    "ReportSummaryMachineSeriesAllocation": {
      "type": "object",
      "description": "Represents a data point tracking the count of assets allocated for a specific Machine Series.",
      "id": "ReportSummaryMachineSeriesAllocation",
      "properties": {
        "allocatedAssetCount": {
          "description": "Count of assets allocated to this machine series.",
          "format": "int64",
          "type": "string"
        },
        "machineSeries": {
          "$ref": "MachineSeries",
          "description": "The Machine Series (e.g. \"E2\", \"N2\")"
        }
      }
    },
    "PhysicalPlatformDetails": {
      "description": "Platform specific details for Physical Machines.",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field."
        }
      },
      "id": "PhysicalPlatformDetails"
    },
    "AssetList": {
      "type": "object",
      "properties": {
        "assetIds": {
          "type": "array",
          "description": "Required. A list of asset IDs",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "AssetList",
      "description": "Lists the asset IDs of all assets."
    },
    "VmwareEngineMigrationTarget": {
      "type": "object",
      "id": "VmwareEngineMigrationTarget",
      "properties": {},
      "description": "VMWare engine migration target."
    },
    "RuntimeNetworkInfo": {
      "properties": {
        "connections": {
          "description": "Network connections.",
          "$ref": "NetworkConnectionList"
        },
        "netstatTime": {
          "description": "Netstat time collected.",
          "$ref": "DateTime"
        },
        "netstat": {
          "type": "string",
          "description": "Netstat (raw, OS-agnostic)."
        }
      },
      "id": "RuntimeNetworkInfo",
      "type": "object",
      "description": "Runtime networking information."
    },
    "ListLocationsResponse": {
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations."
    },
    "VirtualMachineNetworkDetails": {
      "id": "VirtualMachineNetworkDetails",
      "type": "object",
      "description": "Details of network adapters and settings.",
      "properties": {
        "primaryIpAddress": {
          "description": "IP address of the machine.",
          "type": "string"
        },
        "publicIpAddress": {
          "description": "Public IP address of the machine.",
          "type": "string"
        },
        "defaultGw": {
          "description": "Default gateway address.",
          "type": "string"
        },
        "networkAdapters": {
          "description": "List of network adapters.",
          "$ref": "NetworkAdapterList"
        },
        "primaryMacAddress": {
          "description": "MAC address of the machine. This property is used to uniqly identify the machine.",
          "type": "string"
        }
      }
    },
    "Location": {
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location.",
      "id": "Location",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        }
      }
    },
    "OpenFileList": {
      "id": "OpenFileList",
      "type": "object",
      "description": "Open file list.",
      "properties": {
        "entries": {
          "description": "Open file details entries.",
          "items": {
            "$ref": "OpenFileDetails"
          },
          "type": "array"
        }
      }
    },
    "ImportDataFile": {
      "description": "A resource that represents a payload file in an import job.",
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the file.",
          "type": "string"
        },
        "state": {
          "description": "Output only. The state of the import data file.",
          "enumDescriptions": [
            "Default value.",
            "The data file is being created.",
            "The data file completed initialization."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE"
          ],
          "readOnly": true
        },
        "format": {
          "description": "Required. The payload format.",
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "type": "string",
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ]
        },
        "uploadFileInfo": {
          "description": "Information about a file that is uploaded to a storage service.",
          "$ref": "UploadFileInfo"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the file was created.",
          "format": "google-datetime"
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        }
      },
      "type": "object",
      "id": "ImportDataFile"
    },
    "InlinePayloadInfo": {
      "id": "InlinePayloadInfo",
      "type": "object",
      "properties": {
        "format": {
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "type": "string",
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ],
          "description": "The import job format."
        },
        "payload": {
          "items": {
            "$ref": "PayloadFile"
          },
          "description": "List of payload files.",
          "type": "array"
        }
      },
      "description": "A resource that represents the inline import job payload."
    },
    "ReportSummaryMachineFinding": {
      "description": "A set of findings that applies to assets of type Virtual/Physical Machine.",
      "properties": {
        "allocatedRegions": {
          "items": {
            "type": "string"
          },
          "description": "Set of regions in which the assets were allocated.",
          "type": "array"
        },
        "machineSeriesAllocations": {
          "type": "array",
          "description": "Distribution of assets based on the Machine Series.",
          "items": {
            "$ref": "ReportSummaryMachineSeriesAllocation"
          }
        },
        "allocatedDiskTypes": {
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
              "Standard HDD Persistent Disk.",
              "Balanced Persistent Disk.",
              "SSD Persistent Disk."
            ],
            "enum": [
              "PERSISTENT_DISK_TYPE_UNSPECIFIED",
              "PERSISTENT_DISK_TYPE_STANDARD",
              "PERSISTENT_DISK_TYPE_BALANCED",
              "PERSISTENT_DISK_TYPE_SSD"
            ]
          },
          "description": "Set of disk types allocated to assets.",
          "type": "array"
        },
        "allocatedAssetCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of assets which were allocated."
        }
      },
      "id": "ReportSummaryMachineFinding",
      "type": "object"
    },
    "RunningProcessList": {
      "properties": {
        "processes": {
          "type": "array",
          "description": "Running process entries.",
          "items": {
            "$ref": "RunningProcess"
          }
        }
      },
      "type": "object",
      "description": "List of running guest OS processes.",
      "id": "RunningProcessList"
    },
    "Empty": {
      "type": "object",
      "id": "Empty",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "VmwarePlatformDetails": {
      "type": "object",
      "properties": {
        "vcenterVersion": {
          "type": "string",
          "description": "vCenter version."
        },
        "esxVersion": {
          "description": "ESX version.",
          "type": "string"
        },
        "osid": {
          "description": "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.",
          "type": "string"
        }
      },
      "description": "VMware specific details.",
      "id": "VmwarePlatformDetails"
    },
    "DailyResourceUsageAggregationNetwork": {
      "properties": {
        "ingressBps": {
          "description": "Network ingress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        },
        "egressBps": {
          "description": "Network egress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "type": "object",
      "description": "Statistical aggregation of network usage.",
      "id": "DailyResourceUsageAggregationNetwork"
    },
    "CancelOperationRequest": {
      "properties": {},
      "type": "object",
      "description": "The request message for Operations.CancelOperation.",
      "id": "CancelOperationRequest"
    },
    "DiskEntryList": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "DiskEntry"
          },
          "description": "Disk entries."
        }
      },
      "id": "DiskEntryList",
      "description": "VM disks."
    },
    "AggregationResultSum": {
      "description": "The result of a sum aggregation.",
      "id": "AggregationResultSum",
      "properties": {
        "value": {
          "type": "number",
          "format": "double"
        }
      },
      "type": "object"
    },
    "OperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "verb": {
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string"
        },
        "statusMessage": {
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "OperationMetadata",
      "type": "object"
    },
    "NetworkConnectionList": {
      "type": "object",
      "id": "NetworkConnectionList",
      "properties": {
        "entries": {
          "description": "Network connection entries.",
          "items": {
            "$ref": "NetworkConnection"
          },
          "type": "array"
        }
      },
      "description": "Network connection list."
    },
    "UpdateAssetRequest": {
      "properties": {
        "asset": {
          "description": "Required. The resource being updated.",
          "$ref": "Asset"
        },
        "updateMask": {
          "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
          "format": "google-fieldmask",
          "type": "string"
        },
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      },
      "id": "UpdateAssetRequest",
      "description": "A request to update an asset.",
      "type": "object"
    },
    "VirtualMachineArchitectureDetails": {
      "id": "VirtualMachineArchitectureDetails",
      "type": "object",
      "description": "Details of the VM architecture.",
      "properties": {
        "hyperthreading": {
          "enumDescriptions": [
            "Unknown (default value).",
            "Hyperthreading is disabled.",
            "Hyperthreading is enabled."
          ],
          "description": "CPU hyperthreading support.",
          "type": "string",
          "enum": [
            "HYPER_THREADING_UNSPECIFIED",
            "HYPER_THREADING_DISABLED",
            "HYPER_THREADING_ENABLED"
          ]
        },
        "cpuName": {
          "description": "CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc.",
          "type": "string"
        },
        "cpuThreadCount": {
          "format": "int32",
          "description": "Number of CPU threads allocated to the machine.",
          "type": "integer"
        },
        "cpuManufacturer": {
          "type": "string",
          "description": "CPU manufacturer, e.g., \"Intel\", \"AMD\"."
        },
        "firmware": {
          "description": "Firmware (BIOS/efi).",
          "type": "string"
        },
        "vendor": {
          "type": "string",
          "description": "Hardware vendor."
        },
        "cpuArchitecture": {
          "description": "CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc.",
          "type": "string"
        },
        "cpuSocketCount": {
          "format": "int32",
          "description": "Number of processor sockets allocated to the machine.",
          "type": "integer"
        },
        "bios": {
          "$ref": "BiosDetails",
          "description": "BIOS Details."
        }
      }
    },
    "MigrationInsight": {
      "description": "An insight about potential migrations for an asset.",
      "type": "object",
      "properties": {
        "fit": {
          "readOnly": true,
          "description": "Output only. Description of how well the asset this insight is associated with fits the proposed migration.",
          "$ref": "FitDescriptor"
        },
        "gkeTarget": {
          "readOnly": true,
          "description": "Output only. A Google Kubernetes Engine target.",
          "$ref": "GoogleKubernetesEngineMigrationTarget"
        },
        "vmwareEngineTarget": {
          "readOnly": true,
          "description": "Output only. A VMWare Engine target.",
          "$ref": "VmwareEngineMigrationTarget"
        },
        "computeEngineTarget": {
          "description": "Output only. A Google Compute Engine target.",
          "readOnly": true,
          "$ref": "ComputeEngineMigrationTarget"
        }
      },
      "id": "MigrationInsight"
    },
    "ListAssetsResponse": {
      "type": "object",
      "properties": {
        "assets": {
          "items": {
            "$ref": "Asset"
          },
          "description": "A list of assets.",
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      },
      "description": "Response message for listing assets.",
      "id": "ListAssetsResponse"
    },
    "ComputeEngineShapeDescriptor": {
      "type": "object",
      "properties": {
        "logicalCoreCount": {
          "format": "int32",
          "description": "Number of logical cores.",
          "type": "integer"
        },
        "physicalCoreCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of physical cores."
        },
        "series": {
          "description": "Compute Engine machine series.",
          "type": "string"
        },
        "machineType": {
          "description": "Compute Engine machine type.",
          "type": "string"
        },
        "memoryMb": {
          "description": "Memory in mebibytes.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Compute Engine target shape descriptor.",
      "id": "ComputeEngineShapeDescriptor"
    },
    "BatchDeleteAssetsRequest": {
      "description": "A request to delete a list of asset.",
      "type": "object",
      "properties": {
        "names": {
          "description": "Required. The IDs of the assets to delete. A maximum of 10 assets can be deleted in a batch. format: projects/{project}/locations/{location}/asset/{name}.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "allowMissing": {
          "type": "boolean",
          "description": "Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`."
        }
      },
      "id": "BatchDeleteAssetsRequest"
    },
    "NfsExport": {
      "description": "NFS export.",
      "type": "object",
      "id": "NfsExport",
      "properties": {
        "exportDirectory": {
          "type": "string",
          "description": "The directory being exported."
        },
        "hosts": {
          "type": "array",
          "description": "The hosts or networks to which the export is being shared.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VirtualMachinePreferences": {
      "id": "VirtualMachinePreferences",
      "type": "object",
      "properties": {
        "computeEnginePreferences": {
          "$ref": "ComputeEnginePreferences",
          "description": "Compute Engine preferences concern insights and recommendations for Compute Engine target."
        },
        "regionPreferences": {
          "$ref": "RegionPreferences",
          "description": "Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with."
        },
        "commitmentPlan": {
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "COMMITMENT_PLAN_NONE",
            "COMMITMENT_PLAN_ONE_YEAR",
            "COMMITMENT_PLAN_THREE_YEARS"
          ],
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan.",
            "1 year commitment.",
            "3 years commitment."
          ],
          "type": "string"
        },
        "sizingOptimizationStrategy": {
          "description": "Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.",
          "enum": [
            "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED",
            "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE",
            "SIZING_OPTIMIZATION_STRATEGY_MODERATE",
            "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE"
          ],
          "enumDescriptions": [
            "Unspecified (default value).",
            "No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.",
            "Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.",
            "Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs."
          ],
          "type": "string"
        }
      },
      "description": "VirtualMachinePreferences enables you to create sets of assumptions, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets."
    },
    "AggregationResultHistogramBucket": {
      "properties": {
        "upperBound": {
          "format": "double",
          "description": "Upper bound - exclusive.",
          "type": "number"
        },
        "count": {
          "type": "string",
          "description": "Count of items in the bucket.",
          "format": "int64"
        },
        "lowerBound": {
          "format": "double",
          "description": "Lower bound - inclusive.",
          "type": "number"
        }
      },
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "type": "object",
      "id": "AggregationResultHistogramBucket"
    },
    "UploadFileInfo": {
      "properties": {
        "uriExpirationTime": {
          "description": "Output only. Expiration time of the upload URI.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "headers": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Output only. The headers that were used to sign the URL.",
          "readOnly": true
        },
        "signedUri": {
          "readOnly": true,
          "description": "Output only. Upload URI for the file.",
          "type": "string"
        },
        "uri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Upload URI for the file."
        }
      },
      "id": "UploadFileInfo",
      "type": "object",
      "description": "A resource that contains a URI to which a data file can be uploaded."
    },
    "ReportAssetFramesResponse": {
      "description": "A response to a call to `ReportAssetFrame`.",
      "type": "object",
      "properties": {},
      "id": "ReportAssetFramesResponse"
    },
    "ListImportDataFilesResponse": {
      "description": "Response for listing payload files of an import job.",
      "id": "ListImportDataFilesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "importDataFiles": {
          "description": "The list of import data files.",
          "items": {
            "$ref": "ImportDataFile"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AggregationResultFrequency": {
      "description": "The result of a frequency distribution aggregation.",
      "id": "AggregationResultFrequency",
      "properties": {
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "type": "object"
    },
    "FstabEntryList": {
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "FstabEntry"
          },
          "type": "array",
          "description": "Fstab entries."
        }
      },
      "id": "FstabEntryList",
      "description": "Fstab content."
    },
    "NetworkAdapterDetails": {
      "properties": {
        "adapterType": {
          "description": "Network adapter type (e.g. VMXNET3).",
          "type": "string"
        },
        "macAddress": {
          "description": "MAC address.",
          "type": "string"
        },
        "addresses": {
          "$ref": "NetworkAddressList",
          "description": "NetworkAddressList"
        }
      },
      "type": "object",
      "description": "Details of network adapter.",
      "id": "NetworkAdapterDetails"
    },
    "ReportSummaryGroupPreferenceSetFinding": {
      "id": "ReportSummaryGroupPreferenceSetFinding",
      "type": "object",
      "description": "Summary Findings for a specific Group/PreferenceSet combination.",
      "properties": {
        "pricingTrack": {
          "type": "string",
          "description": "Text describing the pricing track specified for this Preference Set"
        },
        "displayName": {
          "description": "Display Name of the Preference Set",
          "type": "string"
        },
        "monthlyCostStorage": {
          "$ref": "Money",
          "description": "Storage monthly cost for this preference set."
        },
        "machineFinding": {
          "$ref": "ReportSummaryMachineFinding",
          "description": "A set of findings that applies to all machines in the input."
        },
        "preferredRegion": {
          "type": "string",
          "description": "Target region for this Preference Set"
        },
        "machinePreferences": {
          "$ref": "VirtualMachinePreferences",
          "description": "A set of preferences that applies to all machines in the context."
        },
        "monthlyCostCompute": {
          "$ref": "Money",
          "description": "Compute monthly cost for this preference set."
        },
        "topPriority": {
          "description": "Text describing the business priority specified for this Preference Set",
          "type": "string"
        },
        "monthlyCostNetworkEgress": {
          "$ref": "Money",
          "description": "Network Egress monthly cost for this preference set."
        },
        "monthlyCostOther": {
          "description": "Miscellaneous monthly cost for this preference set.",
          "$ref": "Money"
        },
        "monthlyCostOsLicense": {
          "$ref": "Money",
          "description": "Licensing monthly cost for this preference set."
        },
        "description": {
          "type": "string",
          "description": "Description for the Preference Set."
        },
        "monthlyCostTotal": {
          "$ref": "Money",
          "description": "Total monthly cost for this preference set."
        }
      }
    },
    "Aggregation": {
      "type": "object",
      "properties": {
        "frequency": {
          "$ref": "AggregationFrequency",
          "description": "Creates a frequency distribution of all field values."
        },
        "histogram": {
          "description": "Creates a bucketed histogram of field values.",
          "$ref": "AggregationHistogram"
        },
        "field": {
          "description": "The name of the field on which to aggregate.",
          "type": "string"
        },
        "sum": {
          "description": "Sum over a numeric field.",
          "$ref": "AggregationSum"
        },
        "count": {
          "description": "Count the number of matching objects.",
          "$ref": "AggregationCount"
        }
      },
      "id": "Aggregation",
      "description": "Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation."
    },
    "RunImportJobRequest": {
      "description": "A request to run an import job.",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "id": "RunImportJobRequest",
      "type": "object"
    },
    "ValidationReport": {
      "type": "object",
      "id": "ValidationReport",
      "description": "A resource that aggregates errors across import job files.",
      "properties": {
        "fileValidations": {
          "type": "array",
          "items": {
            "$ref": "FileValidationReport"
          },
          "description": "List of errors found in files."
        },
        "jobErrors": {
          "description": "List of job level errors.",
          "items": {
            "$ref": "ImportError"
          },
          "type": "array"
        }
      }
    },
    "GuestRuntimeDetails": {
      "type": "object",
      "properties": {
        "lastUptime": {
          "description": "Date since last booted (last uptime date).",
          "$ref": "Date"
        },
        "machineName": {
          "description": "Machine name.",
          "type": "string"
        },
        "processes": {
          "$ref": "RunningProcessList",
          "description": "Running processes."
        },
        "openFileList": {
          "$ref": "OpenFileList",
          "description": "Open files information."
        },
        "networkInfo": {
          "$ref": "RuntimeNetworkInfo",
          "description": "Runtime network information (connections, ports)."
        },
        "services": {
          "$ref": "RunningServiceList",
          "description": "Running background services."
        },
        "installedApps": {
          "$ref": "GuestInstalledApplicationList",
          "description": "Installed applications information."
        },
        "domain": {
          "description": "Domain, e.g. c.stratozone-development.internal.",
          "type": "string"
        }
      },
      "description": "Guest OS runtime information.",
      "id": "GuestRuntimeDetails"
    },
    "ImportError": {
      "properties": {
        "severity": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "The severity of the error.",
          "type": "string",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ]
        },
        "errorDetails": {
          "description": "The error information.",
          "type": "string"
        }
      },
      "id": "ImportError",
      "type": "object",
      "description": "A resource that reports the errors encountered while processing an import job."
    },
    "RunningProcess": {
      "properties": {
        "user": {
          "description": "User running the process.",
          "type": "string"
        },
        "exePath": {
          "type": "string",
          "description": "Process binary path."
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Process extended attributes.",
          "type": "object"
        },
        "cmdline": {
          "description": "Process full command line.",
          "type": "string"
        },
        "pid": {
          "description": "Process ID.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Guest OS running process details.",
      "id": "RunningProcess",
      "type": "object"
    },
    "FstabEntry": {
      "description": "Single fstab entry.",
      "id": "FstabEntry",
      "properties": {
        "freq": {
          "type": "integer",
          "description": "Used by dump to determine which filesystems need to be dumped.",
          "format": "int32"
        },
        "spec": {
          "description": "The block special device or remote filesystem to be mounted.",
          "type": "string"
        },
        "file": {
          "type": "string",
          "description": "The mount point for the filesystem."
        },
        "vfstype": {
          "description": "The type of the filesystem.",
          "type": "string"
        },
        "mntops": {
          "type": "string",
          "description": "Mount options associated with the filesystem."
        },
        "passno": {
          "description": "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AggregationResult": {
      "type": "object",
      "properties": {
        "sum": {
          "$ref": "AggregationResultSum"
        },
        "count": {
          "$ref": "AggregationResultCount"
        },
        "histogram": {
          "$ref": "AggregationResultHistogram"
        },
        "frequency": {
          "$ref": "AggregationResultFrequency"
        },
        "field": {
          "type": "string"
        }
      },
      "description": "Message describing a result of an aggregation.",
      "id": "AggregationResult"
    },
    "NetworkAddressList": {
      "description": "List of allocated/assigned network addresses.",
      "properties": {
        "addresses": {
          "items": {
            "$ref": "NetworkAddress"
          },
          "type": "array",
          "description": "Network address entries."
        }
      },
      "id": "NetworkAddressList",
      "type": "object"
    },
    "DiskUsageSample": {
      "properties": {
        "averageIops": {
          "type": "number",
          "format": "float",
          "description": "Average IOPS sampled over a short window. Must be non-negative."
        }
      },
      "description": "Disk usage sample. Values are across all disks.",
      "id": "DiskUsageSample",
      "type": "object"
    },
    "ReportSummaryChartDataDataPoint": {
      "type": "object",
      "description": "Describes a single data point in the Chart.",
      "id": "ReportSummaryChartDataDataPoint",
      "properties": {
        "label": {
          "type": "string",
          "description": "The X-axis label for this data point."
        },
        "value": {
          "format": "double",
          "description": "The Y-axis value for this data point.",
          "type": "number"
        }
      }
    },
    "DailyResourceUsageAggregationMemory": {
      "id": "DailyResourceUsageAggregationMemory",
      "properties": {
        "utilizationPercentage": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Memory utilization percentage."
        }
      },
      "type": "object",
      "description": "Statistical aggregation of memory usage."
    },
    "Report": {
      "properties": {
        "summary": {
          "readOnly": true,
          "$ref": "ReportSummary",
          "description": "Output only. Summary view of the Report."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. Creation timestamp.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "name": {
          "description": "Output only. Name of resource.",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "SUCCEEDED",
            "FAILED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default Report creation state.",
            "Creating Report.",
            "Successfully created Report.",
            "Failed to create Report."
          ],
          "description": "Report creation state."
        },
        "description": {
          "description": "Free-text description.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. Last update timestamp.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "type": {
          "description": "Report type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "TOTAL_COST_OF_OWNERSHIP"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default Report type.",
            "Total cost of ownership Report type."
          ]
        }
      },
      "id": "Report",
      "description": "Report represents a point-in-time rendering of the ReportConfig results.",
      "type": "object"
    },
    "Date": {
      "properties": {
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
        },
        "month": {
          "format": "int32",
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
        }
      },
      "type": "object",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "id": "Date"
    },
    "ListReportsResponse": {
      "id": "ListReportsResponse",
      "type": "object",
      "description": "Response message for listing Reports.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "reports": {
          "type": "array",
          "items": {
            "$ref": "Report"
          },
          "description": "The list of Reports."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ReportSummaryChartData": {
      "type": "object",
      "description": "Describes a collection of data points rendered as a Chart.",
      "id": "ReportSummaryChartData",
      "properties": {
        "dataPoints": {
          "items": {
            "$ref": "ReportSummaryChartDataDataPoint"
          },
          "type": "array",
          "description": "Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value."
        }
      }
    },
    "AggregationResultCount": {
      "description": "The result of a count aggregation.",
      "type": "object",
      "id": "AggregationResultCount",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "OpenFileDetails": {
      "properties": {
        "user": {
          "description": "Opened file user.",
          "type": "string"
        },
        "command": {
          "type": "string",
          "description": "Opened file command."
        },
        "filePath": {
          "type": "string",
          "description": "Opened file file path."
        },
        "fileType": {
          "type": "string",
          "description": "Opened file file type."
        }
      },
      "id": "OpenFileDetails",
      "type": "object",
      "description": "Open file Information."
    },
    "DailyResourceUsageAggregationCPU": {
      "type": "object",
      "description": "Statistical aggregation of CPU usage.",
      "id": "DailyResourceUsageAggregationCPU",
      "properties": {
        "utilizationPercentage": {
          "description": "CPU utilization percentage.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      }
    },
    "NetworkAdapterList": {
      "properties": {
        "networkAdapters": {
          "description": "Network adapter descriptions.",
          "type": "array",
          "items": {
            "$ref": "NetworkAdapterDetails"
          }
        }
      },
      "description": "List of network adapters.",
      "type": "object",
      "id": "NetworkAdapterList"
    },
    "TimeZone": {
      "id": "TimeZone",
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "properties": {
        "id": {
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
          "type": "string"
        },
        "version": {
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NetworkAddress": {
      "description": "Details of network address.",
      "type": "object",
      "properties": {
        "subnetMask": {
          "type": "string",
          "description": "Subnet mask."
        },
        "ipAddress": {
          "description": "Assigned or configured IP Address.",
          "type": "string"
        },
        "fqdn": {
          "description": "Fully qualified domain name.",
          "type": "string"
        },
        "assignment": {
          "type": "string",
          "description": "Whether DHCP is used to assign addresses.",
          "enum": [
            "ADDRESS_ASSIGNMENT_UNSPECIFIED",
            "ADDRESS_ASSIGNMENT_STATIC",
            "ADDRESS_ASSIGNMENT_DHCP"
          ],
          "enumDescriptions": [
            "Unknown (default value).",
            "Staticly assigned IP.",
            "Dynamically assigned IP (DHCP)."
          ]
        },
        "bcast": {
          "type": "string",
          "description": "Broadcast address."
        }
      },
      "id": "NetworkAddress"
    },
    "Frames": {
      "type": "object",
      "id": "Frames",
      "description": "Collection of frame data.",
      "properties": {
        "framesData": {
          "description": "A repeated field of asset data.",
          "type": "array",
          "items": {
            "$ref": "AssetFrame"
          }
        }
      }
    },
    "ImportJob": {
      "type": "object",
      "id": "ImportJob",
      "properties": {
        "validationReport": {
          "$ref": "ValidationReport",
          "readOnly": true,
          "description": "Output only. The report with the validation results of the import job."
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "inlinePayload": {
          "$ref": "InlinePayloadInfo",
          "description": "The payload is included in the request, mainly used for small import jobs."
        },
        "assetSource": {
          "description": "Required. Reference to a source.",
          "type": "string"
        },
        "gcsPayload": {
          "$ref": "GCSPayloadInfo",
          "description": "The payload is in Google Cloud Storage."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The timestamp when the import job was created.",
          "type": "string",
          "readOnly": true
        },
        "completeTime": {
          "description": "Output only. The timestamp when the import job was completed.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The full name of the import job.",
          "type": "string"
        },
        "executionReport": {
          "readOnly": true,
          "description": "Output only. The report with the results of running the import job.",
          "$ref": "ExecutionReport"
        },
        "state": {
          "readOnly": true,
          "description": "Output only. The state of the import job.",
          "type": "string",
          "enum": [
            "IMPORT_JOB_STATE_UNSPECIFIED",
            "IMPORT_JOB_STATE_PENDING",
            "IMPORT_JOB_STATE_RUNNING",
            "IMPORT_JOB_STATE_COMPLETED",
            "IMPORT_JOB_STATE_FAILED",
            "IMPORT_JOB_STATE_VALIDATING",
            "IMPORT_JOB_STATE_FAILED_VALIDATION",
            "IMPORT_JOB_STATE_READY"
          ],
          "enumDescriptions": [
            "Default value.",
            "The import job is pending.",
            "The processing of the import job is ongoing.",
            "The import job processing has completed.",
            "The import job failed to be processed.",
            "The import job is being validated.",
            "The import job contains blocking errors.",
            "The validation of the job completed with no blocking errors."
          ]
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        },
        "updateTime": {
          "description": "Output only. The timestamp when the import job was last updated.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "A resource that represents the background job that imports asset frames."
    },
    "VirtualMachineDiskDetails": {
      "properties": {
        "hddTotalFreeBytes": {
          "format": "int64",
          "description": "Total Disk Free Space.",
          "type": "string"
        },
        "hddTotalCapacityBytes": {
          "type": "string",
          "description": "Disk total Capacity.",
          "format": "int64"
        },
        "lsblkJson": {
          "description": "Raw lsblk output in json.",
          "type": "string"
        },
        "disks": {
          "$ref": "DiskEntryList",
          "description": "List of disks."
        }
      },
      "type": "object",
      "id": "VirtualMachineDiskDetails",
      "description": "Details of VM disks."
    },
    "ReportSummaryGroupFinding": {
      "properties": {
        "overlappingAssetCount": {
          "type": "string",
          "description": "Count of the number of assets in this group which are also included in another group within the same report.",
          "format": "int64"
        },
        "description": {
          "description": "Description for the Group.",
          "type": "string"
        },
        "assetAggregateStats": {
          "$ref": "ReportSummaryAssetAggregateStats",
          "description": "Summary statistics for all the assets in this group."
        },
        "displayName": {
          "description": "Display Name for the Group.",
          "type": "string"
        },
        "preferenceSetFindings": {
          "items": {
            "$ref": "ReportSummaryGroupPreferenceSetFinding"
          },
          "description": "Findings for each of the PreferenceSets for this group.",
          "type": "array"
        }
      },
      "id": "ReportSummaryGroupFinding",
      "description": "Summary Findings for a specific Group.",
      "type": "object"
    },
    "Source": {
      "id": "Source",
      "type": "object",
      "properties": {
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp when the source was created."
        },
        "pendingFrameCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Output only. Number of frames that are still being processed."
        },
        "isManaged": {
          "type": "boolean",
          "description": "If `true`, the source is managed by other service(s)."
        },
        "priority": {
          "format": "int32",
          "type": "integer",
          "description": "The information confidence of the source. The higher the value, the higher the confidence."
        },
        "name": {
          "description": "Output only. The full name of the source.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "Data source type.",
          "enumDescriptions": [
            "Unspecified",
            "Manually uploaded file (e.g. CSV)",
            "Guest-level info",
            "Inventory-level scan",
            "Third-party owned sources."
          ],
          "type": "string",
          "enum": [
            "SOURCE_TYPE_UNKNOWN",
            "SOURCE_TYPE_UPLOAD",
            "SOURCE_TYPE_GUEST_OS_SCAN",
            "SOURCE_TYPE_INVENTORY_SCAN",
            "SOURCE_TYPE_CUSTOM"
          ]
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the source was last updated.",
          "type": "string"
        },
        "displayName": {
          "description": "User-friendly display name.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        }
      },
      "description": "Source represents an object from which asset information is streamed to Migration Center."
    },
    "InsightList": {
      "id": "InsightList",
      "type": "object",
      "description": "Message containing insights list.",
      "properties": {
        "insights": {
          "type": "array",
          "items": {
            "$ref": "Insight"
          },
          "description": "Output only. Insights of the list.",
          "readOnly": true
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Update timestamp.",
          "type": "string"
        }
      }
    },
    "Group": {
      "properties": {
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the group was created."
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Output only. The name of the group.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "User-friendly display name.",
          "type": "string"
        },
        "description": {
          "description": "The description of the resource.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the group was last updated."
        }
      },
      "description": "A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups.",
      "id": "Group",
      "type": "object"
    },
    "DiskPartition": {
      "description": "Disk Partition details.",
      "id": "DiskPartition",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Partition type (e.g. BIOS boot)."
        },
        "subPartitions": {
          "description": "Sub-partitions.",
          "$ref": "DiskPartitionList"
        },
        "fileSystem": {
          "type": "string",
          "description": "Partition file system."
        },
        "capacityBytes": {
          "type": "string",
          "format": "int64",
          "description": "Partition capacity."
        },
        "mountPoint": {
          "type": "string",
          "description": "Mount pount (Linux/Windows) or drive letter (Windows)."
        },
        "uuid": {
          "type": "string",
          "description": "Partition UUID."
        },
        "freeBytes": {
          "format": "int64",
          "description": "Partition free space.",
          "type": "string"
        }
      }
    },
    "ReportConfigGroupPreferenceSetAssignment": {
      "properties": {
        "group": {
          "description": "Required. Name of the group.",
          "type": "string"
        },
        "preferenceSet": {
          "type": "string",
          "description": "Required. Name of the Preference Set."
        }
      },
      "id": "ReportConfigGroupPreferenceSetAssignment",
      "description": "Represents a combination of a group with a preference set.",
      "type": "object"
    },
    "PlatformDetails": {
      "type": "object",
      "id": "PlatformDetails",
      "properties": {
        "genericDetails": {
          "description": "Generic platform details.",
          "$ref": "GenericPlatformDetails"
        },
        "vmwareDetails": {
          "$ref": "VmwarePlatformDetails",
          "description": "VMware specific details."
        },
        "physicalDetails": {
          "description": "Physical machines platform details.",
          "$ref": "PhysicalPlatformDetails"
        },
        "azureVmDetails": {
          "description": "Azure VM specific details.",
          "$ref": "AzureVmPlatformDetails"
        },
        "awsEc2Details": {
          "$ref": "AwsEc2PlatformDetails",
          "description": "AWS EC2 specific details."
        }
      },
      "description": "Information about the platform."
    },
    "GuestOsDetails": {
      "properties": {
        "runtime": {
          "$ref": "GuestRuntimeDetails",
          "description": "Runtime information."
        },
        "config": {
          "description": "OS and app configuration.",
          "$ref": "GuestConfigDetails"
        }
      },
      "description": "Information from Guest-level collections.",
      "id": "GuestOsDetails",
      "type": "object"
    },
    "AggregationFrequency": {
      "id": "AggregationFrequency",
      "description": "Frequency distribution of all field values.",
      "properties": {},
      "type": "object"
    },
    "DateTime": {
      "type": "object",
      "properties": {
        "month": {
          "format": "int32",
          "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.",
          "type": "integer"
        },
        "hours": {
          "type": "integer",
          "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "format": "int32"
        },
        "day": {
          "type": "integer",
          "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.",
          "format": "int32"
        },
        "minutes": {
          "type": "integer",
          "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
          "format": "int32"
        },
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year."
        },
        "seconds": {
          "format": "int32",
          "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.",
          "type": "integer"
        },
        "timeZone": {
          "description": "Time zone.",
          "$ref": "TimeZone"
        },
        "utcOffset": {
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.",
          "format": "google-duration",
          "type": "string"
        },
        "nanos": {
          "type": "integer",
          "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
          "format": "int32"
        }
      },
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
      "id": "DateTime"
    },
    "FitDescriptor": {
      "description": "Describes the fit level of an asset for migration to a specific target.",
      "type": "object",
      "id": "FitDescriptor",
      "properties": {
        "fitLevel": {
          "enum": [
            "FIT_LEVEL_UNSPECIFIED",
            "FIT",
            "NO_FIT",
            "REQUIRES_EFFORT"
          ],
          "type": "string",
          "description": "Fit level.",
          "enumDescriptions": [
            "Not enough information.",
            "Fit.",
            "No Fit.",
            "Fit with effort."
          ]
        }
      }
    },
    "DiskEntry": {
      "properties": {
        "interfaceType": {
          "type": "string",
          "description": "Disks interface type (e.g. SATA/SCSI)"
        },
        "partitions": {
          "$ref": "DiskPartitionList",
          "description": "Partition layout."
        },
        "totalCapacityBytes": {
          "description": "Disk capacity.",
          "type": "string",
          "format": "int64"
        },
        "totalFreeBytes": {
          "description": "Disk free space.",
          "format": "int64",
          "type": "string"
        },
        "vmwareConfig": {
          "description": "VMware disk details.",
          "$ref": "VmwareDiskConfig"
        },
        "hwAddress": {
          "type": "string",
          "description": "Disk hardware address (e.g. 0:1 for SCSI)."
        },
        "diskLabel": {
          "description": "Disk label.",
          "type": "string"
        },
        "diskLabelType": {
          "description": "Disk label type (e.g. BIOS/GPT)",
          "type": "string"
        },
        "status": {
          "description": "Disk status (e.g. online).",
          "type": "string"
        }
      },
      "description": "Single disk entry.",
      "type": "object",
      "id": "DiskEntry"
    },
    "Settings": {
      "id": "Settings",
      "type": "object",
      "description": "Describes the Migration Center settings related to the project.",
      "properties": {
        "preferenceSet": {
          "description": "The preference set used by default for a project.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the resource."
        }
      }
    },
    "ListGroupsResponse": {
      "id": "ListGroupsResponse",
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "description": "The list of Group",
          "items": {
            "$ref": "Group"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      },
      "description": "A response for listing groups."
    }
  },
  "rootUrl": "https://migrationcenter.googleapis.com/",
  "protocol": "rest",
  "parameters": {
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "description": "V1 error format.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "type": "string",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    }
  },
  "documentationLink": "https://cloud.google.com/migration-center",
  "batchPath": "batch",
  "basePath": "",
  "version": "v1alpha1",
  "description": "",
  "kind": "discovery#restDescription",
  "name": "migrationcenter",
  "fullyEncodeReservedExpansion": true,
  "id": "migrationcenter:v1alpha1",
  "title": "Migration Center API",
  "revision": "20230414",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "ownerName": "Google",
  "servicePath": "",
  "baseUrl": "https://migrationcenter.googleapis.com/",
  "canonicalName": "Migration Center API",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  }
}

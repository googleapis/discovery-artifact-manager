{
  "version": "v1alpha1",
  "mtlsRootUrl": "https://migrationcenter.mtls.googleapis.com/",
  "canonicalName": "Migration Center API",
  "protocol": "rest",
  "fullyEncodeReservedExpansion": true,
  "kind": "discovery#restDescription",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "schemas": {
    "FitDescriptor": {
      "id": "FitDescriptor",
      "type": "object",
      "description": "Describes the fit level of an asset for migration to a specific target.",
      "properties": {
        "fitLevel": {
          "description": "Fit level.",
          "enumDescriptions": [
            "Not enough information.",
            "Fit.",
            "No Fit.",
            "Fit with effort."
          ],
          "type": "string",
          "enum": [
            "FIT_LEVEL_UNSPECIFIED",
            "FIT",
            "NO_FIT",
            "REQUIRES_EFFORT"
          ]
        }
      }
    },
    "PlatformDetails": {
      "type": "object",
      "description": "Information about the platform.",
      "properties": {
        "awsEc2Details": {
          "description": "AWS EC2 specific details.",
          "$ref": "AwsEc2PlatformDetails"
        },
        "vmwareDetails": {
          "$ref": "VmwarePlatformDetails",
          "description": "VMware specific details."
        },
        "genericDetails": {
          "$ref": "GenericPlatformDetails",
          "description": "Generic platform details."
        },
        "azureVmDetails": {
          "description": "Azure VM specific details.",
          "$ref": "AzureVmPlatformDetails"
        },
        "physicalDetails": {
          "description": "Physical machines platform details.",
          "$ref": "PhysicalPlatformDetails"
        }
      },
      "id": "PlatformDetails"
    },
    "DailyResourceUsageAggregationMemory": {
      "description": "Statistical aggregation of memory usage.",
      "type": "object",
      "properties": {
        "utilizationPercentage": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Memory utilization percentage."
        }
      },
      "id": "DailyResourceUsageAggregationMemory"
    },
    "GuestConfigDetails": {
      "type": "object",
      "description": "Guest OS config information.",
      "id": "GuestConfigDetails",
      "properties": {
        "fstab": {
          "$ref": "FstabEntryList",
          "description": "Mount list (Linux fstab)."
        },
        "nfsExports": {
          "description": "NFS exports.",
          "$ref": "NfsExportList"
        },
        "hosts": {
          "description": "Hosts file (/etc/hosts).",
          "$ref": "HostsEntryList"
        },
        "issue": {
          "type": "string",
          "description": "OS issue (typically /etc/issue in Linux)."
        },
        "selinux": {
          "description": "SELinux details.",
          "$ref": "Selinux"
        }
      }
    },
    "MigrationInsight": {
      "properties": {
        "fit": {
          "description": "Output only. Description of how well the asset this insight is associated with fits the proposed migration.",
          "readOnly": true,
          "$ref": "FitDescriptor"
        },
        "computeEngineTarget": {
          "description": "Output only. A Google Compute Engine target.",
          "$ref": "ComputeEngineMigrationTarget",
          "readOnly": true
        },
        "vmwareEngineTarget": {
          "description": "Output only. A VMWare Engine target.",
          "readOnly": true,
          "$ref": "VmwareEngineMigrationTarget"
        },
        "gkeTarget": {
          "$ref": "GoogleKubernetesEngineMigrationTarget",
          "description": "Output only. A Google Kubernetes Engine target.",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "MigrationInsight",
      "description": "An insight about potential migrations for an asset."
    },
    "Asset": {
      "type": "object",
      "description": "An asset represents a resource in your environment. Asset types include virtual machines and databases.",
      "properties": {
        "insightList": {
          "readOnly": true,
          "$ref": "InsightList",
          "description": "Output only. The list of insights associated with the asset."
        },
        "assignedGroups": {
          "type": "array",
          "description": "Output only. The list of groups that the asset is assigned to.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The full name of the asset.",
          "type": "string"
        },
        "performanceData": {
          "description": "Output only. Performance data for the asset.",
          "readOnly": true,
          "$ref": "AssetPerformanceData"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The timestamp when the asset was created.",
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The timestamp when the asset was last updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "attributes": {
          "description": "Generic asset attributes.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "virtualMachineDetails": {
          "description": "Output only. Asset information specific for virtual machines.",
          "$ref": "VirtualMachineDetails",
          "readOnly": true
        },
        "sources": {
          "items": {
            "type": "string"
          },
          "description": "Output only. The list of sources contributing to the asset.",
          "readOnly": true,
          "type": "array"
        }
      },
      "id": "Asset"
    },
    "NfsExportList": {
      "id": "NfsExportList",
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "description": "NFS export entries.",
          "items": {
            "$ref": "NfsExport"
          }
        }
      },
      "description": "NFS exports."
    },
    "ComputeEnginePreferences": {
      "properties": {
        "persistentDiskType": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ],
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ],
          "description": "Persistent disk type to use. If unspecified (default), all types are considered, based on available usage data."
        },
        "machinePreferences": {
          "description": "Preferences concerning the machine types to consider on Compute Engine.",
          "$ref": "MachinePreferences"
        },
        "licenseType": {
          "description": "License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.",
          "enum": [
            "LICENSE_TYPE_UNSPECIFIED",
            "LICENSE_TYPE_DEFAULT",
            "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value).",
            "Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with.",
            "Bring-your-own-license (BYOL) plan. User provides the OS license."
          ]
        }
      },
      "description": "The user preferences relating to Compute Engine target platform.",
      "type": "object",
      "id": "ComputeEnginePreferences"
    },
    "OpenFileDetails": {
      "type": "object",
      "description": "Open file Information.",
      "id": "OpenFileDetails",
      "properties": {
        "filePath": {
          "description": "Opened file file path.",
          "type": "string"
        },
        "user": {
          "description": "Opened file user.",
          "type": "string"
        },
        "fileType": {
          "description": "Opened file file type.",
          "type": "string"
        },
        "command": {
          "type": "string",
          "description": "Opened file command."
        }
      }
    },
    "DailyResourceUsageAggregation": {
      "id": "DailyResourceUsageAggregation",
      "description": "Usage data aggregation for a single day.",
      "properties": {
        "cpu": {
          "$ref": "DailyResourceUsageAggregationCPU",
          "description": "CPU usage."
        },
        "network": {
          "$ref": "DailyResourceUsageAggregationNetwork",
          "description": "Network usage."
        },
        "disk": {
          "$ref": "DailyResourceUsageAggregationDisk",
          "description": "Disk usage."
        },
        "date": {
          "$ref": "Date",
          "description": "Aggregation date. Day boundaries are at midnight UTC."
        },
        "memory": {
          "$ref": "DailyResourceUsageAggregationMemory",
          "description": "Memory usage."
        }
      },
      "type": "object"
    },
    "RunImportJobRequest": {
      "description": "A request to run an import job.",
      "type": "object",
      "id": "RunImportJobRequest",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      }
    },
    "ListAssetsResponse": {
      "id": "ListAssetsResponse",
      "properties": {
        "assets": {
          "description": "A list of assets.",
          "items": {
            "$ref": "Asset"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      },
      "description": "Response message for listing assets.",
      "type": "object"
    },
    "BatchUpdateAssetsRequest": {
      "id": "BatchUpdateAssetsRequest",
      "description": "A request to update a list of assets.",
      "properties": {
        "requests": {
          "description": "Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.",
          "items": {
            "$ref": "UpdateAssetRequest"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "NetworkAdapterList": {
      "id": "NetworkAdapterList",
      "type": "object",
      "properties": {
        "networkAdapters": {
          "type": "array",
          "description": "Network adapter descriptions.",
          "items": {
            "$ref": "NetworkAdapterDetails"
          }
        }
      },
      "description": "List of network adapters."
    },
    "Source": {
      "properties": {
        "pendingFrameCount": {
          "description": "Output only. Number of frames that are still being processed.",
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETING",
            "INVALID"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Unspecified.",
            "The source is active and ready to be used.",
            "In the process of being deleted.",
            "Source is in an invalid state. Asset frames reported to it will be ignored."
          ],
          "type": "string",
          "description": "Output only. The state of the source."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the source was created."
        },
        "displayName": {
          "description": "User-friendly display name.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the source was last updated."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified",
            "Manually uploaded file (e.g. CSV)",
            "Guest-level info",
            "Inventory-level scan",
            "Third-party owned sources."
          ],
          "description": "Data source type.",
          "enum": [
            "SOURCE_TYPE_UNKNOWN",
            "SOURCE_TYPE_UPLOAD",
            "SOURCE_TYPE_GUEST_OS_SCAN",
            "SOURCE_TYPE_INVENTORY_SCAN",
            "SOURCE_TYPE_CUSTOM"
          ]
        },
        "priority": {
          "description": "The information confidence of the source. The higher the value, the higher the confidence.",
          "format": "int32",
          "type": "integer"
        },
        "errorFrameCount": {
          "format": "int32",
          "description": "Output only. The number of frames that were reported by the source and contained errors.",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Output only. The full name of the source.",
          "readOnly": true,
          "type": "string"
        },
        "isManaged": {
          "description": "If `true`, the source is managed by other service(s).",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Source represents an object from which asset information is streamed to Migration Center.",
      "id": "Source"
    },
    "ListOperationsResponse": {
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "id": "ListOperationsResponse"
    },
    "RemoveAssetsFromGroupRequest": {
      "description": "A request to remove assets from a group.",
      "type": "object",
      "id": "RemoveAssetsFromGroupRequest",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        },
        "assets": {
          "description": "Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000.",
          "$ref": "AssetList"
        },
        "allowMissing": {
          "type": "boolean",
          "description": "Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`."
        }
      }
    },
    "PerformanceSample": {
      "properties": {
        "cpu": {
          "description": "CPU usage sample.",
          "$ref": "CpuUsageSample"
        },
        "sampleTime": {
          "type": "string",
          "description": "Time the sample was collected.",
          "format": "google-datetime"
        },
        "network": {
          "$ref": "NetworkUsageSample",
          "description": "Network usage sample."
        },
        "disk": {
          "$ref": "DiskUsageSample",
          "description": "Disk usage sample."
        },
        "memory": {
          "$ref": "MemoryUsageSample",
          "description": "Memory usage sample."
        }
      },
      "type": "object",
      "description": "Performance data sample.",
      "id": "PerformanceSample"
    },
    "ReportSummaryUtilizationChartData": {
      "type": "object",
      "id": "ReportSummaryUtilizationChartData",
      "properties": {
        "used": {
          "format": "int64",
          "type": "string",
          "description": "Aggregate value which falls into the \"Used\" bucket."
        },
        "free": {
          "type": "string",
          "description": "Aggregate value which falls into the \"Free\" bucket.",
          "format": "int64"
        }
      },
      "description": "Utilization Chart is a specific type of visualization which displays a metric classified into \"Used\" and \"Free\" buckets."
    },
    "BatchUpdateAssetsResponse": {
      "properties": {
        "assets": {
          "description": "Update asset content. The content only includes values after field mask being applied.",
          "items": {
            "$ref": "Asset"
          },
          "type": "array"
        }
      },
      "description": "Response for updating a list of assets.",
      "id": "BatchUpdateAssetsResponse",
      "type": "object"
    },
    "ListPreferenceSetsResponse": {
      "type": "object",
      "description": "Response message for listing preference sets.",
      "id": "ListPreferenceSetsResponse",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "preferenceSets": {
          "type": "array",
          "description": "The list of PreferenceSets",
          "items": {
            "$ref": "PreferenceSet"
          }
        }
      }
    },
    "AssetFrame": {
      "id": "AssetFrame",
      "type": "object",
      "properties": {
        "traceToken": {
          "description": "Optional. Trace token is optionally provided to assist with debugging and traceability.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        },
        "virtualMachineDetails": {
          "$ref": "VirtualMachineDetails",
          "description": "Asset information specific for virtual machines."
        },
        "performanceSamples": {
          "items": {
            "$ref": "PerformanceSample"
          },
          "description": "Asset performance data samples.",
          "type": "array"
        },
        "attributes": {
          "type": "object",
          "description": "Generic asset attributes.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "reportTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the data was reported."
        }
      },
      "description": "Contains data reported from an inventory source on an asset."
    },
    "DiskEntryList": {
      "id": "DiskEntryList",
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "DiskEntry"
          },
          "description": "Disk entries.",
          "type": "array"
        }
      },
      "description": "VM disks."
    },
    "FstabEntryList": {
      "description": "Fstab content.",
      "id": "FstabEntryList",
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "FstabEntry"
          },
          "description": "Fstab entries."
        }
      }
    },
    "Aggregation": {
      "description": "Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.",
      "properties": {
        "histogram": {
          "description": "Creates a bucketed histogram of field values.",
          "$ref": "AggregationHistogram"
        },
        "count": {
          "$ref": "AggregationCount",
          "description": "Count the number of matching objects."
        },
        "sum": {
          "description": "Sum over a numeric field.",
          "$ref": "AggregationSum"
        },
        "frequency": {
          "$ref": "AggregationFrequency",
          "description": "Creates a frequency distribution of all field values."
        },
        "field": {
          "description": "The name of the field on which to aggregate.",
          "type": "string"
        }
      },
      "id": "Aggregation",
      "type": "object"
    },
    "AggregationFrequency": {
      "properties": {},
      "id": "AggregationFrequency",
      "description": "Frequency distribution of all field values.",
      "type": "object"
    },
    "Report": {
      "properties": {
        "type": {
          "description": "Report type.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "TOTAL_COST_OF_OWNERSHIP"
          ],
          "enumDescriptions": [
            "Default Report type.",
            "Total cost of ownership Report type."
          ]
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. Last update timestamp.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "description": "Report creation state.",
          "enumDescriptions": [
            "Default Report creation state.",
            "Creating Report.",
            "Successfully created Report.",
            "Failed to create Report."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "SUCCEEDED",
            "FAILED"
          ],
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Name of resource.",
          "type": "string"
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "summary": {
          "readOnly": true,
          "description": "Output only. Summary view of the Report.",
          "$ref": "ReportSummary"
        },
        "createTime": {
          "description": "Output only. Creation timestamp.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        }
      },
      "description": "Report represents a point-in-time rendering of the ReportConfig results.",
      "id": "Report",
      "type": "object"
    },
    "RunningService": {
      "type": "object",
      "id": "RunningService",
      "properties": {
        "status": {
          "type": "string",
          "description": "Service status."
        },
        "pid": {
          "type": "string",
          "description": "Service pid.",
          "format": "int64"
        },
        "cmdline": {
          "type": "string",
          "description": "Service command line."
        },
        "startMode": {
          "type": "string",
          "description": "Service start mode (raw, OS-agnostic)."
        },
        "name": {
          "type": "string",
          "description": "Service name."
        },
        "exePath": {
          "description": "Service binary path.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "Service state (raw, OS-agnostic)."
        }
      },
      "description": "Guest OS running service details."
    },
    "ReportSummaryHistogramChartDataBucket": {
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "id": "ReportSummaryHistogramChartDataBucket",
      "properties": {
        "lowerBound": {
          "description": "Lower bound - inclusive.",
          "format": "int64",
          "type": "string"
        },
        "count": {
          "type": "string",
          "format": "int64",
          "description": "Count of items in the bucket."
        },
        "upperBound": {
          "format": "int64",
          "description": "Upper bound - exclusive.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DiskPartition": {
      "type": "object",
      "id": "DiskPartition",
      "properties": {
        "freeBytes": {
          "format": "int64",
          "description": "Partition free space.",
          "type": "string"
        },
        "mountPoint": {
          "type": "string",
          "description": "Mount pount (Linux/Windows) or drive letter (Windows)."
        },
        "subPartitions": {
          "description": "Sub-partitions.",
          "$ref": "DiskPartitionList"
        },
        "fileSystem": {
          "description": "Partition file system.",
          "type": "string"
        },
        "capacityBytes": {
          "format": "int64",
          "type": "string",
          "description": "Partition capacity."
        },
        "type": {
          "description": "Partition type (e.g. BIOS boot).",
          "type": "string"
        },
        "uuid": {
          "type": "string",
          "description": "Partition UUID."
        }
      },
      "description": "Disk Partition details."
    },
    "ReportSummaryAssetAggregateStats": {
      "id": "ReportSummaryAssetAggregateStats",
      "type": "object",
      "description": "Aggregate statistics for a collection of assets.",
      "properties": {
        "assetAge": {
          "$ref": "ReportSummaryChartData",
          "description": "Count of assets grouped by age."
        },
        "storageUtilizationChart": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryUtilizationChartData"
        },
        "storageBytesHistogram": {
          "$ref": "ReportSummaryHistogramChartData",
          "description": "Histogram showing a distribution of memory sizes."
        },
        "memoryUtilizationChart": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryUtilizationChartData"
        },
        "memoryBytesHistogram": {
          "$ref": "ReportSummaryHistogramChartData",
          "description": "Histogram showing a distribution of memory sizes."
        },
        "storageUtilization": {
          "$ref": "ReportSummaryChartData",
          "description": "Total storage split into Used/Free buckets."
        },
        "totalStorageBytes": {
          "format": "int64",
          "type": "string",
          "description": "Sum of persistent storage in bytes of all the assets in this collection."
        },
        "coreCountHistogram": {
          "$ref": "ReportSummaryHistogramChartData",
          "description": "Histogram showing a distribution of CPU core counts."
        },
        "totalCores": {
          "format": "int64",
          "type": "string",
          "description": "Sum of the CPU core count of all the assets in this collection."
        },
        "totalMemoryBytes": {
          "description": "Sum of the memory in bytes of all the assets in this collection.",
          "type": "string",
          "format": "int64"
        },
        "operatingSystem": {
          "$ref": "ReportSummaryChartData",
          "description": "Count of assets grouped by Operating System families."
        },
        "memoryUtilization": {
          "$ref": "ReportSummaryChartData",
          "description": "Total memory split into Used/Free buckets."
        },
        "totalAssets": {
          "description": "Count of the number of unique assets in this collection.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "NfsExport": {
      "properties": {
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The hosts or networks to which the export is being shared."
        },
        "exportDirectory": {
          "type": "string",
          "description": "The directory being exported."
        }
      },
      "id": "NfsExport",
      "description": "NFS export.",
      "type": "object"
    },
    "AggregationSum": {
      "id": "AggregationSum",
      "properties": {},
      "type": "object",
      "description": "Sum of field values."
    },
    "AddAssetsToGroupRequest": {
      "properties": {
        "assets": {
          "$ref": "AssetList",
          "description": "Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000."
        },
        "allowExisting": {
          "description": "Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.",
          "type": "boolean"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "id": "AddAssetsToGroupRequest",
      "type": "object",
      "description": "A request to add assets to a group."
    },
    "VmwarePlatformDetails": {
      "description": "VMware specific details.",
      "id": "VmwarePlatformDetails",
      "properties": {
        "esxVersion": {
          "type": "string",
          "description": "ESX version."
        },
        "vcenterVersion": {
          "type": "string",
          "description": "vCenter version."
        },
        "osid": {
          "description": "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReportSummaryChartDataDataPoint": {
      "description": "Describes a single data point in the Chart.",
      "properties": {
        "label": {
          "description": "The X-axis label for this data point.",
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "The Y-axis value for this data point."
        }
      },
      "id": "ReportSummaryChartDataDataPoint",
      "type": "object"
    },
    "AggregationResultSum": {
      "id": "AggregationResultSum",
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "description": "The result of a sum aggregation."
    },
    "ListErrorFramesResponse": {
      "id": "ListErrorFramesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "errorFrames": {
          "type": "array",
          "description": "The list of error frames.",
          "items": {
            "$ref": "ErrorFrame"
          }
        }
      },
      "type": "object",
      "description": "A response for listing error frames."
    },
    "NetworkAddress": {
      "type": "object",
      "id": "NetworkAddress",
      "description": "Details of network address.",
      "properties": {
        "fqdn": {
          "description": "Fully qualified domain name.",
          "type": "string"
        },
        "ipAddress": {
          "type": "string",
          "description": "Assigned or configured IP Address."
        },
        "subnetMask": {
          "type": "string",
          "description": "Subnet mask."
        },
        "assignment": {
          "description": "Whether DHCP is used to assign addresses.",
          "enumDescriptions": [
            "Unknown (default value).",
            "Staticly assigned IP.",
            "Dynamically assigned IP (DHCP)."
          ],
          "type": "string",
          "enum": [
            "ADDRESS_ASSIGNMENT_UNSPECIFIED",
            "ADDRESS_ASSIGNMENT_STATIC",
            "ADDRESS_ASSIGNMENT_DHCP"
          ]
        },
        "bcast": {
          "type": "string",
          "description": "Broadcast address."
        }
      }
    },
    "AssetPerformanceData": {
      "description": "Performance data for an asset.",
      "properties": {
        "dailyResourceUsageAggregations": {
          "items": {
            "$ref": "DailyResourceUsageAggregation"
          },
          "type": "array",
          "description": "Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days."
        }
      },
      "id": "AssetPerformanceData",
      "type": "object"
    },
    "FrameViolationEntry": {
      "properties": {
        "violation": {
          "type": "string",
          "description": "A message describing the violation."
        },
        "field": {
          "description": "The field of the original frame where the violation occurred.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A resource that contains a single violation of a reported `AssetFrame` resource.",
      "id": "FrameViolationEntry"
    },
    "GoogleKubernetesEngineMigrationTarget": {
      "id": "GoogleKubernetesEngineMigrationTarget",
      "properties": {},
      "type": "object",
      "description": "GKE migration target."
    },
    "GuestInstalledApplication": {
      "id": "GuestInstalledApplication",
      "type": "object",
      "properties": {
        "vendor": {
          "type": "string",
          "description": "Installed application vendor."
        },
        "path": {
          "description": "Source path.",
          "type": "string"
        },
        "version": {
          "description": "Installed application version.",
          "type": "string"
        },
        "time": {
          "description": "Date application was installed.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Installed application name."
        }
      },
      "description": "Guest installed application information."
    },
    "ImportError": {
      "properties": {
        "errorDetails": {
          "type": "string",
          "description": "The error information."
        },
        "severity": {
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "The severity of the error.",
          "type": "string"
        }
      },
      "id": "ImportError",
      "type": "object",
      "description": "A resource that reports the errors encountered while processing an import job."
    },
    "DailyResourceUsageAggregationStats": {
      "properties": {
        "average": {
          "format": "float",
          "description": "Average usage value.",
          "type": "number"
        },
        "ninteyFifthPercentile": {
          "type": "number",
          "format": "float",
          "description": "95th percentile usage value."
        },
        "peak": {
          "description": "Peak usage value.",
          "type": "number",
          "format": "float"
        },
        "median": {
          "type": "number",
          "description": "Median usage value.",
          "format": "float"
        }
      },
      "id": "DailyResourceUsageAggregationStats",
      "type": "object",
      "description": "Statistical aggregation of samples for a single resource usage."
    },
    "Frames": {
      "description": "Collection of frame data.",
      "id": "Frames",
      "properties": {
        "framesData": {
          "type": "array",
          "description": "A repeated field of asset data.",
          "items": {
            "$ref": "AssetFrame"
          }
        }
      },
      "type": "object"
    },
    "NetworkAdapterDetails": {
      "id": "NetworkAdapterDetails",
      "type": "object",
      "properties": {
        "addresses": {
          "description": "NetworkAddressList",
          "$ref": "NetworkAddressList"
        },
        "macAddress": {
          "type": "string",
          "description": "MAC address."
        },
        "adapterType": {
          "description": "Network adapter type (e.g. VMXNET3).",
          "type": "string"
        }
      },
      "description": "Details of network adapter."
    },
    "BatchDeleteAssetsRequest": {
      "type": "object",
      "properties": {
        "names": {
          "description": "Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowMissing": {
          "description": "Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`.",
          "type": "boolean"
        }
      },
      "description": "A request to delete a list of asset.",
      "id": "BatchDeleteAssetsRequest"
    },
    "NetworkConnection": {
      "type": "object",
      "properties": {
        "protocol": {
          "description": "Connection protocol (e.g. TCP/UDP).",
          "type": "string"
        },
        "localPort": {
          "description": "Local port.",
          "type": "integer",
          "format": "int32"
        },
        "processName": {
          "type": "string",
          "description": "Process or service name."
        },
        "localIpAddress": {
          "description": "Local IP address.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "Connection state (e.g. CONNECTED)."
        },
        "remoteIpAddress": {
          "description": "Remote IP address.",
          "type": "string"
        },
        "remotePort": {
          "description": "Remote port.",
          "type": "integer",
          "format": "int32"
        },
        "pid": {
          "format": "int64",
          "description": "Process ID.",
          "type": "string"
        }
      },
      "id": "NetworkConnection"
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "type": "object",
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string"
        },
        "apiVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. API version used to start the operation."
        },
        "statusMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "requestedCancellation": {
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation."
        }
      }
    },
    "DailyResourceUsageAggregationCPU": {
      "properties": {
        "utilizationPercentage": {
          "description": "CPU utilization percentage.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "type": "object",
      "id": "DailyResourceUsageAggregationCPU",
      "description": "Statistical aggregation of CPU usage."
    },
    "ReportConfigGroupPreferenceSetAssignment": {
      "description": "Represents a combination of a group with a preference set.",
      "type": "object",
      "properties": {
        "group": {
          "type": "string",
          "description": "Required. Name of the group."
        },
        "preferenceSet": {
          "description": "Required. Name of the Preference Set.",
          "type": "string"
        }
      },
      "id": "ReportConfigGroupPreferenceSetAssignment"
    },
    "RuntimeNetworkInfo": {
      "description": "Runtime networking information.",
      "id": "RuntimeNetworkInfo",
      "type": "object",
      "properties": {
        "connections": {
          "description": "Network connections.",
          "$ref": "NetworkConnectionList"
        },
        "netstatTime": {
          "description": "Netstat time collected.",
          "$ref": "DateTime"
        },
        "netstat": {
          "type": "string",
          "description": "Netstat (raw, OS-agnostic)."
        }
      }
    },
    "ErrorFrame": {
      "id": "ErrorFrame",
      "properties": {
        "originalFrame": {
          "$ref": "AssetFrame",
          "description": "Output only. The frame that was originally reported.",
          "readOnly": true
        },
        "name": {
          "description": "Output only. The identifier of the ErrorFrame.",
          "type": "string",
          "readOnly": true
        },
        "ingestionTime": {
          "type": "string",
          "description": "Output only. Frame ingestion time.",
          "format": "google-datetime",
          "readOnly": true
        },
        "violations": {
          "description": "Output only. All the violations that were detected for the frame.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "FrameViolationEntry"
          }
        }
      },
      "description": "Message representing a frame which failed to be processed due to an error.",
      "type": "object"
    },
    "RunningProcess": {
      "description": "Guest OS running process details.",
      "id": "RunningProcess",
      "properties": {
        "user": {
          "description": "User running the process.",
          "type": "string"
        },
        "cmdline": {
          "type": "string",
          "description": "Process full command line."
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Process extended attributes."
        },
        "pid": {
          "type": "string",
          "format": "int64",
          "description": "Process ID."
        },
        "exePath": {
          "description": "Process binary path.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VmwareEngineMigrationTarget": {
      "id": "VmwareEngineMigrationTarget",
      "properties": {},
      "type": "object",
      "description": "VMWare engine migration target."
    },
    "TimeZone": {
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "id": "TimeZone",
      "type": "object",
      "properties": {
        "id": {
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
        }
      }
    },
    "FileValidationReport": {
      "id": "FileValidationReport",
      "properties": {
        "fileName": {
          "description": "The name of the file.",
          "type": "string"
        },
        "fileErrors": {
          "type": "array",
          "items": {
            "$ref": "ImportError"
          },
          "description": "List of file level errors."
        },
        "partialReport": {
          "type": "boolean",
          "description": "Flag indicating that processing was aborted due to maximum number of errors."
        },
        "rowErrors": {
          "description": "Partial list of rows that encountered validation error.",
          "items": {
            "$ref": "ImportRowError"
          },
          "type": "array"
        }
      },
      "description": "A resource that aggregates the validation errors found in an import job file.",
      "type": "object"
    },
    "AggregationResultHistogram": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "items": {
            "$ref": "AggregationResultHistogramBucket"
          }
        }
      },
      "description": "The result of a bucketed histogram aggregation.",
      "id": "AggregationResultHistogram"
    },
    "ListImportJobsResponse": {
      "description": "A response for listing import jobs.",
      "id": "ListImportJobsResponse",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "importJobs": {
          "description": "The list of import jobs.",
          "items": {
            "$ref": "ImportJob"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DailyResourceUsageAggregationNetwork": {
      "type": "object",
      "description": "Statistical aggregation of network usage.",
      "id": "DailyResourceUsageAggregationNetwork",
      "properties": {
        "ingressBps": {
          "description": "Network ingress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        },
        "egressBps": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Network egress in B/s."
        }
      }
    },
    "ReportSummaryMachineSeriesAllocation": {
      "id": "ReportSummaryMachineSeriesAllocation",
      "type": "object",
      "properties": {
        "machineSeries": {
          "description": "The Machine Series (e.g. \"E2\", \"N2\")",
          "$ref": "MachineSeries"
        },
        "allocatedAssetCount": {
          "description": "Count of assets allocated to this machine series.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "Represents a data point tracking the count of assets allocated for a specific Machine Series."
    },
    "ListSourcesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "sources": {
          "items": {
            "$ref": "Source"
          },
          "description": "The list of sources.",
          "type": "array"
        }
      },
      "description": "Response message for listing sources.",
      "type": "object",
      "id": "ListSourcesResponse"
    },
    "VirtualMachineDiskDetails": {
      "id": "VirtualMachineDiskDetails",
      "type": "object",
      "properties": {
        "hddTotalFreeBytes": {
          "description": "Total Disk Free Space.",
          "type": "string",
          "format": "int64"
        },
        "lsblkJson": {
          "type": "string",
          "description": "Raw lsblk output in json."
        },
        "hddTotalCapacityBytes": {
          "format": "int64",
          "type": "string",
          "description": "Disk total Capacity."
        },
        "disks": {
          "$ref": "DiskEntryList",
          "description": "List of disks."
        }
      },
      "description": "Details of VM disks."
    },
    "Money": {
      "id": "Money",
      "properties": {
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "format": "int32",
          "type": "integer"
        },
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "units": {
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "Represents an amount of money with its currency type.",
      "type": "object"
    },
    "GuestOsDetails": {
      "properties": {
        "config": {
          "description": "OS and app configuration.",
          "$ref": "GuestConfigDetails"
        },
        "runtime": {
          "$ref": "GuestRuntimeDetails",
          "description": "Runtime information."
        }
      },
      "description": "Information from Guest-level collections.",
      "id": "GuestOsDetails",
      "type": "object"
    },
    "HostsEntry": {
      "id": "HostsEntry",
      "type": "object",
      "description": "Single /etc/hosts entry.",
      "properties": {
        "ip": {
          "type": "string",
          "description": "IP (raw, IPv4/6 agnostic)."
        },
        "hostNames": {
          "type": "array",
          "description": "List of host names / aliases.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MachineSeries": {
      "type": "object",
      "id": "MachineSeries",
      "description": "A Compute Engine machine series.",
      "properties": {
        "code": {
          "description": "Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series.",
          "type": "string"
        }
      }
    },
    "ListImportDataFilesResponse": {
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "importDataFiles": {
          "items": {
            "$ref": "ImportDataFile"
          },
          "type": "array",
          "description": "The list of import data files."
        },
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListImportDataFilesResponse",
      "description": "Response for listing payload files of an import job."
    },
    "ReportSummaryChartData": {
      "type": "object",
      "properties": {
        "dataPoints": {
          "items": {
            "$ref": "ReportSummaryChartDataDataPoint"
          },
          "description": "Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value.",
          "type": "array"
        }
      },
      "id": "ReportSummaryChartData",
      "description": "Describes a collection of data points rendered as a Chart."
    },
    "DiskEntry": {
      "id": "DiskEntry",
      "description": "Single disk entry.",
      "properties": {
        "vmwareConfig": {
          "$ref": "VmwareDiskConfig",
          "description": "VMware disk details."
        },
        "totalCapacityBytes": {
          "format": "int64",
          "type": "string",
          "description": "Disk capacity."
        },
        "partitions": {
          "description": "Partition layout.",
          "$ref": "DiskPartitionList"
        },
        "status": {
          "description": "Disk status (e.g. online).",
          "type": "string"
        },
        "hwAddress": {
          "description": "Disk hardware address (e.g. 0:1 for SCSI).",
          "type": "string"
        },
        "interfaceType": {
          "description": "Disks interface type (e.g. SATA/SCSI)",
          "type": "string"
        },
        "diskLabelType": {
          "description": "Disk label type (e.g. BIOS/GPT)",
          "type": "string"
        },
        "totalFreeBytes": {
          "type": "string",
          "format": "int64",
          "description": "Disk free space."
        },
        "diskLabel": {
          "description": "Disk label.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HostsEntryList": {
      "properties": {
        "entries": {
          "description": "Hosts entries.",
          "items": {
            "$ref": "HostsEntry"
          },
          "type": "array"
        }
      },
      "description": "Hosts content.",
      "type": "object",
      "id": "HostsEntryList"
    },
    "Group": {
      "description": "A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups.",
      "id": "Group",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        },
        "description": {
          "description": "The description of the resource.",
          "type": "string"
        },
        "displayName": {
          "description": "User-friendly display name.",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the group was last updated.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the group.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the group was created."
        }
      },
      "type": "object"
    },
    "RegionPreferences": {
      "id": "RegionPreferences",
      "type": "object",
      "properties": {
        "preferredRegions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions."
        }
      },
      "description": "The user preferences relating to target regions."
    },
    "Settings": {
      "type": "object",
      "description": "Describes the Migration Center settings related to the project.",
      "id": "Settings",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The name of the resource.",
          "readOnly": true
        },
        "preferenceSet": {
          "description": "The preference set used by default for a project.",
          "type": "string"
        }
      }
    },
    "VirtualMachinePreferences": {
      "properties": {
        "commitmentPlan": {
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "COMMITMENT_PLAN_NONE",
            "COMMITMENT_PLAN_ONE_YEAR",
            "COMMITMENT_PLAN_THREE_YEARS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan.",
            "1 year commitment.",
            "3 years commitment."
          ]
        },
        "computeEnginePreferences": {
          "$ref": "ComputeEnginePreferences",
          "description": "Compute Engine preferences concern insights and recommendations for Compute Engine target."
        },
        "regionPreferences": {
          "description": "Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with.",
          "$ref": "RegionPreferences"
        },
        "sizingOptimizationStrategy": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value).",
            "No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.",
            "Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.",
            "Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs."
          ],
          "enum": [
            "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED",
            "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE",
            "SIZING_OPTIMIZATION_STRATEGY_MODERATE",
            "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE"
          ],
          "description": "Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with."
        }
      },
      "description": "VirtualMachinePreferences enables you to create sets of assumptions, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets.",
      "type": "object",
      "id": "VirtualMachinePreferences"
    },
    "DailyResourceUsageAggregationDisk": {
      "id": "DailyResourceUsageAggregationDisk",
      "type": "object",
      "properties": {
        "iops": {
          "description": "Disk I/O operations per second.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "description": "Statistical aggregation of disk usage."
    },
    "DateTime": {
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
      "properties": {
        "utcOffset": {
          "type": "string",
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.",
          "format": "google-duration"
        },
        "day": {
          "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.",
          "format": "int32",
          "type": "integer"
        },
        "timeZone": {
          "$ref": "TimeZone",
          "description": "Time zone."
        },
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0."
        },
        "seconds": {
          "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.",
          "type": "integer",
          "format": "int32"
        },
        "minutes": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0."
        },
        "month": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month."
        },
        "hours": {
          "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "DateTime"
    },
    "VirtualMachineNetworkDetails": {
      "description": "Details of network adapters and settings.",
      "properties": {
        "networkAdapters": {
          "$ref": "NetworkAdapterList",
          "description": "List of network adapters."
        },
        "publicIpAddress": {
          "description": "Public IP address of the machine.",
          "type": "string"
        },
        "defaultGw": {
          "type": "string",
          "description": "Default gateway address."
        },
        "primaryMacAddress": {
          "type": "string",
          "description": "MAC address of the machine. This property is used to uniqly identify the machine."
        },
        "primaryIpAddress": {
          "type": "string",
          "description": "IP address of the machine."
        }
      },
      "id": "VirtualMachineNetworkDetails",
      "type": "object"
    },
    "ImportRowError": {
      "type": "object",
      "properties": {
        "vmName": {
          "type": "string",
          "description": "The name of the VM in the row."
        },
        "errors": {
          "items": {
            "$ref": "ImportError"
          },
          "type": "array",
          "description": "The list of errors detected in the row."
        },
        "vmUuid": {
          "type": "string",
          "description": "The VM UUID."
        },
        "rowNumber": {
          "description": "The row number where the error was detected.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "ImportRowError",
      "description": "A resource that reports the import job errors at row level."
    },
    "GCSPayloadInfo": {
      "type": "object",
      "properties": {
        "format": {
          "type": "string",
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ],
          "description": "The import job format.",
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ]
        },
        "path": {
          "type": "string",
          "description": "The payload path in Google Cloud Storage."
        }
      },
      "id": "GCSPayloadInfo",
      "description": "A resource that represents a payload hosted on Google Cloud Storage."
    },
    "RunningServiceList": {
      "type": "object",
      "description": "List of running guest OS services.",
      "id": "RunningServiceList",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "$ref": "RunningService"
          },
          "description": "Running service entries."
        }
      }
    },
    "PayloadFile": {
      "description": "Payload file for inline import job payload.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The file name."
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "The file data."
        }
      },
      "type": "object",
      "id": "PayloadFile"
    },
    "PreferenceSet": {
      "id": "PreferenceSet",
      "description": "The preferences that apply to all assets in a given context.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the preference set."
        },
        "virtualMachinePreferences": {
          "description": "A set of preferences that applies to all virtual machines in the context.",
          "$ref": "VirtualMachinePreferences"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the preference set was created."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the preference set was last updated."
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "name": {
          "description": "Output only. Name of the preference set.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AggregateAssetsValuesResponse": {
      "properties": {
        "results": {
          "items": {
            "$ref": "AggregationResult"
          },
          "type": "array",
          "description": "The aggregation results."
        }
      },
      "type": "object",
      "description": "A response to a request to aggregated assets values.",
      "id": "AggregateAssetsValuesResponse"
    },
    "ReportSummaryGroupPreferenceSetFinding": {
      "id": "ReportSummaryGroupPreferenceSetFinding",
      "properties": {
        "monthlyCostTotal": {
          "$ref": "Money",
          "description": "Total monthly cost for this preference set."
        },
        "machineFinding": {
          "description": "A set of findings that applies to all machines in the input.",
          "$ref": "ReportSummaryMachineFinding"
        },
        "monthlyCostStorage": {
          "$ref": "Money",
          "description": "Storage monthly cost for this preference set."
        },
        "topPriority": {
          "type": "string",
          "description": "Text describing the business priority specified for this Preference Set"
        },
        "monthlyCostOsLicense": {
          "description": "Licensing monthly cost for this preference set.",
          "$ref": "Money"
        },
        "displayName": {
          "description": "Display Name of the Preference Set",
          "type": "string"
        },
        "monthlyCostOther": {
          "description": "Miscellaneous monthly cost for this preference set.",
          "$ref": "Money"
        },
        "preferredRegion": {
          "description": "Target region for this Preference Set",
          "type": "string"
        },
        "monthlyCostCompute": {
          "$ref": "Money",
          "description": "Compute monthly cost for this preference set."
        },
        "pricingTrack": {
          "description": "Text describing the pricing track specified for this Preference Set",
          "type": "string"
        },
        "description": {
          "description": "Description for the Preference Set.",
          "type": "string"
        },
        "monthlyCostNetworkEgress": {
          "$ref": "Money",
          "description": "Network Egress monthly cost for this preference set."
        },
        "machinePreferences": {
          "$ref": "VirtualMachinePreferences",
          "description": "A set of preferences that applies to all machines in the context."
        }
      },
      "type": "object",
      "description": "Summary Findings for a specific Group/PreferenceSet combination."
    },
    "DiskUsageSample": {
      "description": "Disk usage sample. Values are across all disks.",
      "id": "DiskUsageSample",
      "type": "object",
      "properties": {
        "averageIops": {
          "format": "float",
          "type": "number",
          "description": "Average IOPS sampled over a short window. Must be non-negative."
        }
      }
    },
    "AwsEc2PlatformDetails": {
      "properties": {
        "machineTypeLabel": {
          "description": "AWS platform's machine type label.",
          "type": "string"
        },
        "location": {
          "description": "The location of the machine in the AWS format.",
          "type": "string"
        }
      },
      "id": "AwsEc2PlatformDetails",
      "type": "object",
      "description": "AWS EC2 specific details."
    },
    "Empty": {
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "ListGroupsResponse": {
      "description": "A response for listing groups.",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "Group"
          },
          "description": "The list of Group"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      },
      "id": "ListGroupsResponse",
      "type": "object"
    },
    "AggregationHistogram": {
      "type": "object",
      "properties": {
        "lowerBounds": {
          "description": "Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "description": "Histogram of bucketed assets counts by field value.",
      "id": "AggregationHistogram"
    },
    "AggregationResultCount": {
      "type": "object",
      "id": "AggregationResultCount",
      "description": "The result of a count aggregation.",
      "properties": {
        "value": {
          "format": "int64",
          "type": "string"
        }
      }
    },
    "ReportSummaryGroupFinding": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display Name for the Group.",
          "type": "string"
        },
        "overlappingAssetCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of the number of assets in this group which are also included in another group within the same report."
        },
        "preferenceSetFindings": {
          "description": "Findings for each of the PreferenceSets for this group.",
          "items": {
            "$ref": "ReportSummaryGroupPreferenceSetFinding"
          },
          "type": "array"
        },
        "assetAggregateStats": {
          "description": "Summary statistics for all the assets in this group.",
          "$ref": "ReportSummaryAssetAggregateStats"
        },
        "description": {
          "description": "Description for the Group.",
          "type": "string"
        }
      },
      "description": "Summary Findings for a specific Group.",
      "id": "ReportSummaryGroupFinding"
    },
    "Location": {
      "type": "object",
      "description": "A resource that represents a Google Cloud location.",
      "properties": {
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        }
      },
      "id": "Location"
    },
    "BiosDetails": {
      "properties": {
        "biosName": {
          "description": "BIOS name.",
          "type": "string"
        },
        "biosVersion": {
          "type": "string",
          "description": "BIOS version."
        },
        "biosReleaseDate": {
          "description": "BIOS release date.",
          "type": "string"
        },
        "smbiosUuid": {
          "type": "string",
          "description": "SMBIOS UUID."
        },
        "biosManufacturer": {
          "description": "BIOS manufacturer.",
          "type": "string"
        }
      },
      "id": "BiosDetails",
      "description": "Details about the BIOS.",
      "type": "object"
    },
    "ReportSummary": {
      "type": "object",
      "id": "ReportSummary",
      "description": "Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report.",
      "properties": {
        "allAssetsStats": {
          "$ref": "ReportSummaryAssetAggregateStats",
          "description": "Aggregate statistics for all the assets across all the groups."
        },
        "groupFindings": {
          "description": "Findings for each Group included in this report.",
          "items": {
            "$ref": "ReportSummaryGroupFinding"
          },
          "type": "array"
        }
      }
    },
    "PhysicalPlatformDetails": {
      "description": "Platform specific details for Physical Machines.",
      "properties": {
        "location": {
          "type": "string",
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field."
        }
      },
      "type": "object",
      "id": "PhysicalPlatformDetails"
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The response message for Locations.ListLocations."
    },
    "NetworkAddressList": {
      "properties": {
        "addresses": {
          "type": "array",
          "description": "Network address entries.",
          "items": {
            "$ref": "NetworkAddress"
          }
        }
      },
      "type": "object",
      "id": "NetworkAddressList",
      "description": "List of allocated/assigned network addresses."
    },
    "ReportConfig": {
      "description": "The groups and associated preference sets on which we can generate reports.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Free-text description."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the resource was last updated."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of resource."
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The timestamp when the resource was created."
        },
        "groupPreferencesetAssignments": {
          "type": "array",
          "description": "Required. Collection of combinations of groups and preference sets.",
          "items": {
            "$ref": "ReportConfigGroupPreferenceSetAssignment"
          }
        }
      },
      "type": "object",
      "id": "ReportConfig"
    },
    "Operation": {
      "id": "Operation",
      "properties": {
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "MemoryUsageSample": {
      "type": "object",
      "description": "Memory usage sample.",
      "id": "MemoryUsageSample",
      "properties": {
        "utilizedPercentage": {
          "description": "Percentage of system memory utilized. Must be in the interval [0, 100].",
          "format": "float",
          "type": "number"
        }
      }
    },
    "OpenFileList": {
      "id": "OpenFileList",
      "description": "Open file list.",
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "description": "Open file details entries.",
          "items": {
            "$ref": "OpenFileDetails"
          }
        }
      }
    },
    "AggregationResult": {
      "description": "Message describing a result of an aggregation.",
      "type": "object",
      "id": "AggregationResult",
      "properties": {
        "field": {
          "type": "string"
        },
        "sum": {
          "$ref": "AggregationResultSum"
        },
        "frequency": {
          "$ref": "AggregationResultFrequency"
        },
        "histogram": {
          "$ref": "AggregationResultHistogram"
        },
        "count": {
          "$ref": "AggregationResultCount"
        }
      }
    },
    "ValidateImportJobRequest": {
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      },
      "description": "A request to validate an import job.",
      "id": "ValidateImportJobRequest",
      "type": "object"
    },
    "UpdateAssetRequest": {
      "description": "A request to update an asset.",
      "id": "UpdateAssetRequest",
      "type": "object",
      "properties": {
        "asset": {
          "description": "Required. The resource being updated.",
          "$ref": "Asset"
        },
        "updateMask": {
          "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
          "type": "string",
          "format": "google-fieldmask"
        },
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      }
    },
    "MachinePreferences": {
      "type": "object",
      "description": "The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.",
      "id": "MachinePreferences",
      "properties": {
        "allowedMachineSeries": {
          "description": "Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.",
          "items": {
            "$ref": "MachineSeries"
          },
          "type": "array"
        }
      }
    },
    "ExecutionReport": {
      "description": "A resource that reports result of the import job execution.",
      "properties": {
        "jobErrors": {
          "description": "List of job-level errors. Deprecated, use the job errors under execution_errors instead.",
          "type": "array",
          "items": {
            "$ref": "ImportError"
          }
        },
        "executionErrors": {
          "description": "Validation errors encountered during the execution of the import job.",
          "$ref": "ValidationReport"
        },
        "framesReported": {
          "type": "integer",
          "description": "Total number of asset frames reported for the import job.",
          "format": "int32"
        },
        "totalRowsCount": {
          "description": "Total number of rows in the import job.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "ExecutionReport"
    },
    "ComputeEngineShapeDescriptor": {
      "id": "ComputeEngineShapeDescriptor",
      "type": "object",
      "properties": {
        "logicalCoreCount": {
          "type": "integer",
          "description": "Number of logical cores.",
          "format": "int32"
        },
        "series": {
          "type": "string",
          "description": "Compute Engine machine series."
        },
        "machineType": {
          "description": "Compute Engine machine type.",
          "type": "string"
        },
        "memoryMb": {
          "type": "integer",
          "format": "int32",
          "description": "Memory in mebibytes."
        },
        "physicalCoreCount": {
          "type": "integer",
          "description": "Number of physical cores.",
          "format": "int32"
        }
      },
      "description": "Compute Engine target shape descriptor."
    },
    "AzureVmPlatformDetails": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Azure platform's provisioning state."
        },
        "location": {
          "type": "string",
          "description": "The location of the machine in the Azure format."
        },
        "machineTypeLabel": {
          "type": "string",
          "description": "Azure platform's machine type label."
        }
      },
      "type": "object",
      "id": "AzureVmPlatformDetails",
      "description": "Azure VM specific details."
    },
    "ReportAssetFramesResponse": {
      "id": "ReportAssetFramesResponse",
      "description": "A response to a call to `ReportAssetFrame`.",
      "type": "object",
      "properties": {}
    },
    "AggregateAssetsValuesRequest": {
      "properties": {
        "filter": {
          "description": "The aggregation will be performed on assets that match the provided filter.",
          "type": "string"
        },
        "aggregations": {
          "type": "array",
          "description": "Array of aggregations to perform. Up to 25 aggregations can be defined.",
          "items": {
            "$ref": "Aggregation"
          }
        }
      },
      "description": "A request to aggregate one or more values.",
      "id": "AggregateAssetsValuesRequest",
      "type": "object"
    },
    "AssetList": {
      "type": "object",
      "description": "Lists the asset IDs of all assets.",
      "id": "AssetList",
      "properties": {
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. A list of asset IDs"
        }
      }
    },
    "Date": {
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "type": "object",
      "properties": {
        "month": {
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "type": "integer"
        },
        "year": {
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer"
        },
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "Date"
    },
    "InlinePayloadInfo": {
      "id": "InlinePayloadInfo",
      "properties": {
        "payload": {
          "type": "array",
          "items": {
            "$ref": "PayloadFile"
          },
          "description": "List of payload files."
        },
        "format": {
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "description": "The import job format."
        }
      },
      "type": "object",
      "description": "A resource that represents the inline import job payload."
    },
    "UploadFileInfo": {
      "type": "object",
      "description": "A resource that contains a URI to which a data file can be uploaded.",
      "id": "UploadFileInfo",
      "properties": {
        "uriExpirationTime": {
          "readOnly": true,
          "description": "Output only. Expiration time of the upload URI.",
          "type": "string",
          "format": "google-datetime"
        },
        "signedUri": {
          "type": "string",
          "description": "Output only. Upload URI for the file.",
          "readOnly": true
        },
        "headers": {
          "type": "object",
          "readOnly": true,
          "description": "Output only. The headers that were used to sign the URL.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "NetworkConnectionList": {
      "id": "NetworkConnectionList",
      "properties": {
        "entries": {
          "items": {
            "$ref": "NetworkConnection"
          },
          "description": "Network connection entries.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Network connection list."
    },
    "ImportJob": {
      "type": "object",
      "id": "ImportJob",
      "description": "A resource that represents the background job that imports asset frames.",
      "properties": {
        "assetSource": {
          "description": "Required. Reference to a source.",
          "type": "string"
        },
        "completeTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the import job was completed."
        },
        "gcsPayload": {
          "$ref": "GCSPayloadInfo",
          "description": "The payload is in Google Cloud Storage."
        },
        "updateTime": {
          "description": "Output only. The timestamp when the import job was last updated.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "executionReport": {
          "readOnly": true,
          "description": "Output only. The report with the results of running the import job.",
          "$ref": "ExecutionReport"
        },
        "createTime": {
          "description": "Output only. The timestamp when the import job was created.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "inlinePayload": {
          "$ref": "InlinePayloadInfo",
          "description": "The payload is included in the request, mainly used for small import jobs."
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "validationReport": {
          "readOnly": true,
          "description": "Output only. The report with the validation results of the import job.",
          "$ref": "ValidationReport"
        },
        "name": {
          "type": "string",
          "description": "Output only. The full name of the import job.",
          "readOnly": true
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "IMPORT_JOB_STATE_UNSPECIFIED",
            "IMPORT_JOB_STATE_PENDING",
            "IMPORT_JOB_STATE_RUNNING",
            "IMPORT_JOB_STATE_COMPLETED",
            "IMPORT_JOB_STATE_FAILED",
            "IMPORT_JOB_STATE_VALIDATING",
            "IMPORT_JOB_STATE_FAILED_VALIDATION",
            "IMPORT_JOB_STATE_READY"
          ],
          "enumDescriptions": [
            "Default value.",
            "The import job is pending.",
            "The processing of the import job is ongoing.",
            "The import job processing has completed.",
            "The import job failed to be processed.",
            "The import job is being validated.",
            "The import job contains blocking errors.",
            "The validation of the job completed with no blocking errors."
          ],
          "description": "Output only. The state of the import job."
        }
      }
    },
    "VmwareDiskConfig": {
      "description": "VMware disk config details.",
      "type": "object",
      "id": "VmwareDiskConfig",
      "properties": {
        "rdmCompatibilityMode": {
          "description": "RDM compatibility mode.",
          "type": "string"
        },
        "vmdkDiskMode": {
          "type": "string",
          "description": "VMDK disk mode."
        },
        "backingType": {
          "type": "string",
          "enum": [
            "BACKING_TYPE_UNSPECIFIED",
            "BACKING_TYPE_FLAT_V1",
            "BACKING_TYPE_FLAT_V2",
            "BACKING_TYPE_PMEM",
            "BACKING_TYPE_RDM_V1",
            "BACKING_TYPE_RDM_V2",
            "BACKING_TYPE_SESPARSE",
            "BACKING_TYPE_SESPARSE_V1",
            "BACKING_TYPE_SESPARSE_V2"
          ],
          "enumDescriptions": [
            "Default value.",
            "Flat v1.",
            "Flat v2.",
            "Persistent memory, also known as Non-Volatile Memory (NVM).",
            "Raw Disk Memory v1.",
            "Raw Disk Memory v2.",
            "SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.",
            "SEsparse v1.",
            "SEsparse v1."
          ],
          "description": "VMDK backing type."
        },
        "shared": {
          "type": "boolean",
          "description": "Is VMDK shared with other VMs."
        }
      }
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {},
      "id": "CancelOperationRequest"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      },
      "id": "Status",
      "type": "object"
    },
    "GuestInstalledApplicationList": {
      "properties": {
        "entries": {
          "items": {
            "$ref": "GuestInstalledApplication"
          },
          "type": "array",
          "description": "Application entries."
        }
      },
      "id": "GuestInstalledApplicationList",
      "type": "object",
      "description": "Guest installed application list."
    },
    "InsightList": {
      "id": "InsightList",
      "properties": {
        "insights": {
          "readOnly": true,
          "description": "Output only. Insights of the list.",
          "type": "array",
          "items": {
            "$ref": "Insight"
          }
        },
        "updateTime": {
          "description": "Output only. Update timestamp.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Message containing insights list."
    },
    "ReportSummaryMachineFinding": {
      "id": "ReportSummaryMachineFinding",
      "description": "A set of findings that applies to assets of type Virtual/Physical Machine.",
      "type": "object",
      "properties": {
        "allocatedDiskTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
              "Standard HDD Persistent Disk.",
              "Balanced Persistent Disk.",
              "SSD Persistent Disk."
            ],
            "enum": [
              "PERSISTENT_DISK_TYPE_UNSPECIFIED",
              "PERSISTENT_DISK_TYPE_STANDARD",
              "PERSISTENT_DISK_TYPE_BALANCED",
              "PERSISTENT_DISK_TYPE_SSD"
            ]
          },
          "description": "Set of disk types allocated to assets."
        },
        "allocatedRegions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Set of regions in which the assets were allocated."
        },
        "machineSeriesAllocations": {
          "items": {
            "$ref": "ReportSummaryMachineSeriesAllocation"
          },
          "type": "array",
          "description": "Distribution of assets based on the Machine Series."
        },
        "allocatedAssetCount": {
          "description": "Count of assets which were allocated.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "ImportDataFile": {
      "properties": {
        "uploadFileInfo": {
          "description": "Information about a file that is uploaded to a storage service.",
          "$ref": "UploadFileInfo"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the file."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Default value.",
            "The data file is being created.",
            "The data file completed initialization."
          ],
          "type": "string",
          "description": "Output only. The state of the import data file."
        },
        "format": {
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "type": "string",
          "description": "Required. The payload format.",
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the file was created."
        }
      },
      "type": "object",
      "description": "A resource that represents a payload file in an import job.",
      "id": "ImportDataFile"
    },
    "AggregationCount": {
      "id": "AggregationCount",
      "type": "object",
      "description": "Object count.",
      "properties": {}
    },
    "VirtualMachineDetails": {
      "type": "object",
      "description": "Details of a VirtualMachine.",
      "properties": {
        "vmUuid": {
          "description": "Virtual Machine unique identifier.",
          "type": "string"
        },
        "osFamily": {
          "enumDescriptions": [
            "",
            "Microsoft Windows Server and Desktop.",
            "Various Linux flavors.",
            "Non-Linux Unix flavors."
          ],
          "type": "string",
          "description": "What family the OS belong to, if known.",
          "enum": [
            "OS_FAMILY_UNKNOWN",
            "OS_FAMILY_WINDOWS",
            "OS_FAMILY_LINUX",
            "OS_FAMILY_UNIX"
          ]
        },
        "osVersion": {
          "description": "The version of the operating system running on the virtual machine.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "VM creation timestamp."
        },
        "vmNetwork": {
          "description": "VM network details.",
          "$ref": "VirtualMachineNetworkDetails"
        },
        "vcenterVmId": {
          "description": "vCenter VM ID.",
          "type": "string"
        },
        "osName": {
          "description": "The name of the operating system running on the VirtualMachine.",
          "type": "string"
        },
        "vmDisks": {
          "$ref": "VirtualMachineDiskDetails",
          "description": "VM disk details."
        },
        "guestOs": {
          "$ref": "GuestOsDetails",
          "description": "Guest OS information."
        },
        "vmName": {
          "type": "string",
          "description": "Virtual Machine display name."
        },
        "platform": {
          "description": "Platform information.",
          "$ref": "PlatformDetails"
        },
        "memoryMb": {
          "format": "int32",
          "description": "The amount of memory in the VirtualMachine. Must be non-negative.",
          "type": "integer"
        },
        "coreCount": {
          "format": "int32",
          "description": "Number of CPU cores in the VirtualMachine. Must be non-negative.",
          "type": "integer"
        },
        "vcenterFolder": {
          "type": "string",
          "description": "Folder name in vCenter where asset resides."
        },
        "powerState": {
          "description": "Power state of VM (poweredOn or poweredOff).",
          "type": "string"
        },
        "vcenterUrl": {
          "description": "vCenter URL used in collection.",
          "type": "string"
        },
        "vmArchitecture": {
          "$ref": "VirtualMachineArchitectureDetails",
          "description": "VM architecture details (vendor, cpu arch)."
        }
      },
      "id": "VirtualMachineDetails"
    },
    "DiskPartitionList": {
      "type": "object",
      "id": "DiskPartitionList",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "DiskPartition"
          },
          "description": "Partition entries."
        }
      },
      "description": "Disk partition list."
    },
    "ComputeEngineMigrationTarget": {
      "properties": {
        "shape": {
          "description": "Description of the suggested shape for the migration target.",
          "$ref": "ComputeEngineShapeDescriptor"
        }
      },
      "id": "ComputeEngineMigrationTarget",
      "description": "Compute engine migration target.",
      "type": "object"
    },
    "Insight": {
      "id": "Insight",
      "type": "object",
      "description": "An insight about an asset.",
      "properties": {
        "migrationInsight": {
          "$ref": "MigrationInsight",
          "readOnly": true,
          "description": "Output only. An insight about potential migrations for an asset."
        }
      }
    },
    "ListReportsResponse": {
      "type": "object",
      "id": "ListReportsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "reports": {
          "description": "The list of Reports.",
          "items": {
            "$ref": "Report"
          },
          "type": "array"
        }
      },
      "description": "Response message for listing Reports."
    },
    "VirtualMachineArchitectureDetails": {
      "properties": {
        "hyperthreading": {
          "enumDescriptions": [
            "Unknown (default value).",
            "Hyperthreading is disabled.",
            "Hyperthreading is enabled."
          ],
          "type": "string",
          "description": "CPU hyperthreading support.",
          "enum": [
            "HYPER_THREADING_UNSPECIFIED",
            "HYPER_THREADING_DISABLED",
            "HYPER_THREADING_ENABLED"
          ]
        },
        "cpuName": {
          "type": "string",
          "description": "CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc."
        },
        "vendor": {
          "description": "Hardware vendor.",
          "type": "string"
        },
        "bios": {
          "$ref": "BiosDetails",
          "description": "BIOS Details."
        },
        "cpuManufacturer": {
          "type": "string",
          "description": "CPU manufacturer, e.g., \"Intel\", \"AMD\"."
        },
        "cpuThreadCount": {
          "format": "int32",
          "description": "Number of CPU threads allocated to the machine.",
          "type": "integer"
        },
        "cpuArchitecture": {
          "description": "CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc.",
          "type": "string"
        },
        "firmware": {
          "description": "Firmware (BIOS/efi).",
          "type": "string"
        },
        "cpuSocketCount": {
          "description": "Number of processor sockets allocated to the machine.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "VirtualMachineArchitectureDetails",
      "type": "object",
      "description": "Details of the VM architecture."
    },
    "CpuUsageSample": {
      "type": "object",
      "properties": {
        "utilizedPercentage": {
          "description": "Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.",
          "format": "float",
          "type": "number"
        }
      },
      "description": "CPU usage sample.",
      "id": "CpuUsageSample"
    },
    "FstabEntry": {
      "properties": {
        "passno": {
          "format": "int32",
          "type": "integer",
          "description": "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time."
        },
        "spec": {
          "type": "string",
          "description": "The block special device or remote filesystem to be mounted."
        },
        "mntops": {
          "type": "string",
          "description": "Mount options associated with the filesystem."
        },
        "freq": {
          "type": "integer",
          "format": "int32",
          "description": "Used by dump to determine which filesystems need to be dumped."
        },
        "file": {
          "description": "The mount point for the filesystem.",
          "type": "string"
        },
        "vfstype": {
          "description": "The type of the filesystem.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Single fstab entry.",
      "id": "FstabEntry"
    },
    "AggregationResultHistogramBucket": {
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "id": "AggregationResultHistogramBucket",
      "type": "object",
      "properties": {
        "lowerBound": {
          "type": "number",
          "description": "Lower bound - inclusive.",
          "format": "double"
        },
        "count": {
          "description": "Count of items in the bucket.",
          "type": "string",
          "format": "int64"
        },
        "upperBound": {
          "format": "double",
          "description": "Upper bound - exclusive.",
          "type": "number"
        }
      }
    },
    "GuestRuntimeDetails": {
      "type": "object",
      "description": "Guest OS runtime information.",
      "id": "GuestRuntimeDetails",
      "properties": {
        "services": {
          "description": "Running background services.",
          "$ref": "RunningServiceList"
        },
        "installedApps": {
          "$ref": "GuestInstalledApplicationList",
          "description": "Installed applications information."
        },
        "openFileList": {
          "$ref": "OpenFileList",
          "description": "Open files information."
        },
        "lastUptime": {
          "description": "Date since last booted (last uptime date).",
          "$ref": "Date"
        },
        "networkInfo": {
          "description": "Runtime network information (connections, ports).",
          "$ref": "RuntimeNetworkInfo"
        },
        "machineName": {
          "type": "string",
          "description": "Machine name."
        },
        "domain": {
          "description": "Domain, e.g. c.stratozone-development.internal.",
          "type": "string"
        },
        "processes": {
          "description": "Running processes.",
          "$ref": "RunningProcessList"
        }
      }
    },
    "ValidationReport": {
      "description": "A resource that aggregates errors across import job files.",
      "type": "object",
      "properties": {
        "fileValidations": {
          "type": "array",
          "description": "List of errors found in files.",
          "items": {
            "$ref": "FileValidationReport"
          }
        },
        "jobErrors": {
          "description": "List of job level errors.",
          "items": {
            "$ref": "ImportError"
          },
          "type": "array"
        }
      },
      "id": "ValidationReport"
    },
    "NetworkUsageSample": {
      "id": "NetworkUsageSample",
      "properties": {
        "averageIngressBps": {
          "type": "number",
          "format": "float",
          "description": "Average network ingress in B/s sampled over a short window. Must be non-negative."
        },
        "averageEgressBps": {
          "type": "number",
          "description": "Average network egress in B/s sampled over a short window. Must be non-negative.",
          "format": "float"
        }
      },
      "type": "object",
      "description": "Network usage sample. Values are across all network interfaces."
    },
    "ReportSummaryHistogramChartData": {
      "id": "ReportSummaryHistogramChartData",
      "properties": {
        "buckets": {
          "items": {
            "$ref": "ReportSummaryHistogramChartDataBucket"
          },
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "type": "array"
        }
      },
      "description": "A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.",
      "type": "object"
    },
    "RunningProcessList": {
      "type": "object",
      "properties": {
        "processes": {
          "type": "array",
          "items": {
            "$ref": "RunningProcess"
          },
          "description": "Running process entries."
        }
      },
      "description": "List of running guest OS processes.",
      "id": "RunningProcessList"
    },
    "Selinux": {
      "description": "SELinux details.",
      "id": "Selinux",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Is SELinux enabled."
        },
        "mode": {
          "description": "SELinux mode enforcing / permissive.",
          "type": "string"
        }
      }
    },
    "ListReportConfigsResponse": {
      "type": "object",
      "id": "ListReportConfigsResponse",
      "description": "Response message for listing report configs.",
      "properties": {
        "reportConfigs": {
          "type": "array",
          "description": "A list of report configs.",
          "items": {
            "$ref": "ReportConfig"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GenericPlatformDetails": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field."
        }
      },
      "id": "GenericPlatformDetails",
      "description": "Generic platform details.",
      "type": "object"
    },
    "AggregationResultFrequency": {
      "properties": {
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "id": "AggregationResultFrequency",
      "description": "The result of a frequency distribution aggregation.",
      "type": "object"
    }
  },
  "version_module": true,
  "baseUrl": "https://migrationcenter.googleapis.com/",
  "ownerDomain": "google.com",
  "description": "",
  "parameters": {
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query",
      "type": "boolean"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ]
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "alt": {
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "location": "query",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "revision": "20230519",
  "title": "Migration Center API",
  "name": "migrationcenter",
  "rootUrl": "https://migrationcenter.googleapis.com/",
  "servicePath": "",
  "batchPath": "batch",
  "ownerName": "Google",
  "id": "migrationcenter:v1alpha1",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "sources": {
              "methods": {
                "get": {
                  "id": "migrationcenter.projects.locations.sources.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets the details of a source.",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "response": {
                    "$ref": "Source"
                  }
                },
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Source` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
                    },
                    "name": {
                      "description": "Output only. The full name of the source.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "id": "migrationcenter.projects.locations.sources.patch",
                  "request": {
                    "$ref": "Source"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the parameters of a source.",
                  "path": "v1alpha1/{+name}"
                },
                "create": {
                  "httpMethod": "POST",
                  "id": "migrationcenter.projects.locations.sources.create",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "description": "Creates a new source in a given project and location.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Source"
                  },
                  "path": "v1alpha1/{+parent}/sources",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Value for parent.",
                      "required": true,
                      "location": "path"
                    },
                    "sourceId": {
                      "type": "string",
                      "description": "Required. User specified ID for the source. It will become the last component of the source name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the resource."
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "httpMethod": "DELETE",
                  "id": "migrationcenter.projects.locations.sources.delete",
                  "path": "v1alpha1/{+name}",
                  "description": "Deletes a source.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "path": "v1alpha1/{+parent}/sources",
                  "id": "migrationcenter.projects.locations.sources.list",
                  "description": "Lists all the sources in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `ListSourcesRequest`.",
                      "location": "path",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                      "location": "query",
                      "type": "integer"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results that the server should return."
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListSourcesResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources"
                }
              },
              "resources": {
                "errorFrames": {
                  "methods": {
                    "list": {
                      "description": "Lists all error frames in a given source and location.",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "description": "Required. Parent value (the source) for `ListErrorFramesRequest`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "type": "string"
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                        },
                        "view": {
                          "location": "query",
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "type": "string",
                          "description": "Optional. An optional view mode to control the level of details of each error frame. The default is a BASIC frame view.",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ]
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results the server should return."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1alpha1/{+parent}/errorFrames",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListErrorFramesResponse"
                      },
                      "id": "migrationcenter.projects.locations.sources.errorFrames.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames"
                    },
                    "get": {
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ErrorFrame"
                      },
                      "description": "Gets the details of an error frame.",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "view": {
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "type": "string",
                          "location": "query",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ],
                          "description": "Optional. An optional view mode to control the level of details for the frame. The default is a basic frame view."
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/errorFrames/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the frame to retrieve. Format: projects/{project}/locations/{location}/sources/{source}/errorFrames/{error_frame}"
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames/{errorFramesId}",
                      "path": "v1alpha1/{+name}",
                      "id": "migrationcenter.projects.locations.sources.errorFrames.get"
                    }
                  }
                }
              }
            },
            "groups": {
              "methods": {
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates a new group in a given project and location.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Value for parent.",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "groupId": {
                      "location": "query",
                      "description": "Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "Group"
                  },
                  "path": "v1alpha1/{+parent}/groups",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "id": "migrationcenter.projects.locations.groups.create"
                },
                "get": {
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.groups.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Group"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the details of a group.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}"
                },
                "addAssets": {
                  "parameterOrder": [
                    "group"
                  ],
                  "description": "Adds assets to a group.",
                  "parameters": {
                    "group": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Group reference.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addAssets",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "AddAssetsToGroupRequest"
                  },
                  "id": "migrationcenter.projects.locations.groups.addAssets",
                  "path": "v1alpha1/{+group}:addAssets"
                },
                "delete": {
                  "description": "Deletes a group.",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "description": "Required. Name of the group resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "id": "migrationcenter.projects.locations.groups.delete",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "patch": {
                  "description": "Updates the parameters of a group.",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Output only. The name of the group.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$"
                    },
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Group` resource by the update. The values specified in the `update_mask` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "Group"
                  },
                  "id": "migrationcenter.projects.locations.groups.patch",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "description": "Filtering results.",
                      "location": "query"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. Parent value for `ListGroupsRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all groups in a given project and location.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups",
                  "response": {
                    "$ref": "ListGroupsResponse"
                  },
                  "path": "v1alpha1/{+parent}/groups",
                  "id": "migrationcenter.projects.locations.groups.list"
                },
                "removeAssets": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "group"
                  ],
                  "id": "migrationcenter.projects.locations.groups.removeAssets",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeAssets",
                  "description": "Removes assets from a group.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "group": {
                      "description": "Required. Group reference.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "RemoveAssetsFromGroupRequest"
                  },
                  "path": "v1alpha1/{+group}:removeAssets"
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "path": "v1alpha1/{+name}",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource to be deleted.",
                      "required": true
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.operations.delete"
                },
                "cancel": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be cancelled.",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "path": "v1alpha1/{+name}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "migrationcenter.projects.locations.operations.cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                },
                "list": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "id": "migrationcenter.projects.locations.operations.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+name}/operations"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.operations.get"
                }
              }
            },
            "reportConfigs": {
              "resources": {
                "reports": {
                  "methods": {
                    "delete": {
                      "httpMethod": "DELETE",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "description": "Deletes a Report.",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.delete",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "required": true,
                          "description": "Required. Name of the resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1alpha1/{+name}"
                    },
                    "get": {
                      "description": "Gets details of a single Report.",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.get",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "view": {
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "type": "string",
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "location": "query",
                          "description": "Determines what information to retrieve for the Report."
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "description": "Required. Name of the resource.",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "Report"
                      },
                      "path": "v1alpha1/{+name}"
                    },
                    "list": {
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.list",
                      "description": "Lists Reports in a given ReportConfig.",
                      "path": "v1alpha1/{+parent}/reports",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. Parent value for `ListReportsRequest`.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "type": "string"
                        },
                        "orderBy": {
                          "type": "string",
                          "location": "query",
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results that the server should return."
                        },
                        "filter": {
                          "type": "string",
                          "description": "Filtering results.",
                          "location": "query"
                        },
                        "view": {
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "description": "Determines what information to retrieve for each Report.",
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "format": "int32",
                          "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                          "type": "integer",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListReportsResponse"
                      }
                    },
                    "create": {
                      "parameters": {
                        "reportId": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. User specified id for the report. It will become the last component of the report name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The id must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?."
                        },
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. Value for parent."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "path": "v1alpha1/{+parent}/reports",
                      "description": "Creates a report.",
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Report"
                      },
                      "httpMethod": "POST"
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "description": "Gets details of a single ReportConfig.",
                  "response": {
                    "$ref": "ReportConfig"
                  },
                  "id": "migrationcenter.projects.locations.reportConfigs.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "id": "migrationcenter.projects.locations.reportConfigs.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a ReportConfig.",
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "force": {
                      "description": "Optional. If set to `true`, any child `Reports` of this entity will also be deleted. If set to `false`, the request only works if the resource has no children.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  }
                },
                "list": {
                  "description": "Lists ReportConfigs in a given project and location.",
                  "id": "migrationcenter.projects.locations.reportConfigs.list",
                  "response": {
                    "$ref": "ListReportConfigsResponse"
                  },
                  "path": "v1alpha1/{+parent}/reportConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "Filtering results.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. Parent value for `ListReportConfigsRequest`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string",
                      "location": "query"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "httpMethod": "GET"
                },
                "create": {
                  "request": {
                    "$ref": "ReportConfig"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/reportConfigs",
                  "description": "Creates a report configuration.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "id": "migrationcenter.projects.locations.reportConfigs.create",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "reportConfigId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. User specified ID for the report config. It will become the last component of the report config name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Value for parent."
                    }
                  }
                }
              }
            },
            "assets": {
              "methods": {
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.assets.delete",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes an asset.",
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "patch": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the parameters of an asset.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "Asset"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Output only. The full name of the asset.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "Asset"
                  },
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.assets.patch"
                },
                "aggregateValues": {
                  "path": "v1alpha1/{+parent}/assets:aggregateValues",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for `AggregateAssetsValuesRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "AggregateAssetsValuesRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues",
                  "id": "migrationcenter.projects.locations.assets.aggregateValues",
                  "description": "Aggregates the requested fields based on provided function.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "AggregateAssetsValuesResponse"
                  }
                },
                "reportAssetFrames": {
                  "response": {
                    "$ref": "ReportAssetFramesResponse"
                  },
                  "description": "Reports a set of frames.",
                  "request": {
                    "$ref": "Frames"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent of the resource.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "source": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Reference to a source."
                    }
                  },
                  "path": "v1alpha1/{+parent}/assets:reportAssetFrames",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.assets.reportAssetFrames",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames",
                  "httpMethod": "POST"
                },
                "get": {
                  "httpMethod": "GET",
                  "description": "Gets the details of an asset.",
                  "response": {
                    "$ref": "Asset"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "id": "migrationcenter.projects.locations.assets.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "view": {
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data.",
                        "The asset view includes the standard metadata of an asset."
                      ],
                      "location": "query",
                      "description": "View of the assets. Defaults to BASIC.",
                      "type": "string",
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ]
                    }
                  },
                  "path": "v1alpha1/{+name}"
                },
                "list": {
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filtering results."
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Parent value for `ListAssetsRequest`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "view": {
                      "location": "query",
                      "description": "View of the assets. Defaults to BASIC.",
                      "type": "string",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data.",
                        "The asset view includes the standard metadata of an asset."
                      ],
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ]
                    }
                  },
                  "response": {
                    "$ref": "ListAssetsResponse"
                  },
                  "path": "v1alpha1/{+parent}/assets",
                  "description": "Lists all the assets in a given project and location.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.assets.list"
                },
                "batchUpdate": {
                  "request": {
                    "$ref": "BatchUpdateAssetsRequest"
                  },
                  "id": "migrationcenter.projects.locations.assets.batchUpdate",
                  "description": "Updates the parameters of a list of assets.",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for batch asset update.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchUpdate",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "BatchUpdateAssetsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/assets:batchUpdate"
                },
                "batchDelete": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchDelete",
                  "path": "v1alpha1/{+parent}/assets:batchDelete",
                  "request": {
                    "$ref": "BatchDeleteAssetsRequest"
                  },
                  "id": "migrationcenter.projects.locations.assets.batchDelete",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent value for batch asset delete.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes list of Assets.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Empty"
                  }
                }
              }
            },
            "importJobs": {
              "resources": {
                "importDataFiles": {
                  "methods": {
                    "list": {
                      "parameters": {
                        "pageSize": {
                          "description": "The maximum number of data files to return. The service may return fewer than this value. If unspecified, at most 500 data files will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        },
                        "filter": {
                          "type": "string",
                          "description": "Filtering results.",
                          "location": "query"
                        },
                        "orderBy": {
                          "location": "query",
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "type": "string"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A page token, received from a previous `ListImportDataFiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListImportDataFiles` must match the call that provided the page token."
                        },
                        "parent": {
                          "required": true,
                          "location": "path",
                          "description": "Required. Name of the parent of the `ImportDataFiles` resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "ListImportDataFilesResponse"
                      },
                      "description": "List import data files.",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "path": "v1alpha1/{+parent}/importDataFiles"
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "path": "v1alpha1/{+parent}/importDataFiles",
                      "request": {
                        "$ref": "ImportDataFile"
                      },
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. Name of the parent of the ImportDataFile.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "type": "string"
                        },
                        "importDataFileId": {
                          "type": "string",
                          "description": "Required. The ID of the new data file.",
                          "location": "query"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Creates an import data file.",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.create",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "delete": {
                      "description": "Delete an import data file.",
                      "path": "v1alpha1/{+name}",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.delete",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "requestId": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        },
                        "name": {
                          "location": "path",
                          "required": true,
                          "description": "Required. Name of the ImportDataFile to delete.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}"
                    },
                    "get": {
                      "path": "v1alpha1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "type": "string",
                          "description": "Required. Name of the ImportDataFile.",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "ImportDataFile"
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "description": "Gets an import data file.",
                      "httpMethod": "GET"
                    }
                  }
                }
              },
              "methods": {
                "validate": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "description": "Required. The name of the import job to validate.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "ValidateImportJobRequest"
                  },
                  "path": "v1alpha1/{+name}:validate",
                  "id": "migrationcenter.projects.locations.importJobs.validate",
                  "description": "Validates an import job."
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "force": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. If set to `true`, any `ImportDataFiles` of this job will also be deleted If set to `false`, the request only works if the job has no data files."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "required": true
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "description": "Deletes an import job.",
                  "id": "migrationcenter.projects.locations.importJobs.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "run": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}:run",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "description": "Required. The name of the import job to run.",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Runs an import job.",
                  "request": {
                    "$ref": "RunImportJobRequest"
                  },
                  "id": "migrationcenter.projects.locations.importJobs.run"
                },
                "list": {
                  "response": {
                    "$ref": "ListImportJobsResponse"
                  },
                  "path": "v1alpha1/{+parent}/importJobs",
                  "description": "Lists all import jobs.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "id": "migrationcenter.projects.locations.importJobs.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `ListImportJobsRequest`."
                    },
                    "view": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The level of details of each import job. Default value is BASIC.",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ]
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "location": "query"
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/importJobs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "importJobId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. ID of the import job."
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Value for parent."
                    }
                  },
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "id": "migrationcenter.projects.locations.importJobs.create",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "description": "Creates an import job."
                },
                "patch": {
                  "id": "migrationcenter.projects.locations.importJobs.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "description": "Output only. The full name of the import job.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "description": "Updates an import job.",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH"
                },
                "get": {
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "id": "migrationcenter.projects.locations.importJobs.get",
                  "httpMethod": "GET",
                  "description": "Gets the details of an import job.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "view": {
                      "type": "string",
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "location": "query",
                      "description": "Optional. The level of details of the import job. Default value is FULL.",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ]
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "ImportJob"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "preferenceSets": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "id": "migrationcenter.projects.locations.preferenceSets.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "description": "Required. Name of the group resource.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "description": "Deletes a preference set.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "description": "Lists all the preference sets in a given project and location.",
                  "response": {
                    "$ref": "ListPreferenceSetsResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, at most 500 preference sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32"
                    },
                    "parent": {
                      "description": "Required. Parent value for `ListPreferenceSetsRequest`.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.preferenceSets.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/preferenceSets",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets"
                },
                "patch": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Output only. Name of the preference set.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `PreferenceSet` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string"
                    }
                  },
                  "id": "migrationcenter.projects.locations.preferenceSets.patch",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "description": "Updates the parameters of a preference set."
                },
                "get": {
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.preferenceSets.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "PreferenceSet"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "description": "Gets the details of a preference set.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.preferenceSets.create",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "path": "v1alpha1/{+parent}/preferenceSets",
                  "description": "Creates a new preference set in a given project and location.",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "preferenceSetId": {
                      "location": "query",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "get": {
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "description": "Resource name for the location.",
                  "location": "path",
                  "type": "string"
                }
              },
              "description": "Gets information about a location.",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "id": "migrationcenter.projects.locations.get",
              "path": "v1alpha1/{+name}",
              "httpMethod": "GET"
            },
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "id": "migrationcenter.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}/locations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "type": "integer"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                }
              }
            },
            "getSettings": {
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "id": "migrationcenter.projects.locations.getSettings",
              "description": "Gets the details of regional settings.",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. Name of the resource.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$"
                }
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/settings",
              "response": {
                "$ref": "Settings"
              }
            },
            "updateSettings": {
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "type": "string",
                  "required": true,
                  "description": "Output only. The name of the resource."
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "description": "Required. Field mask is used to specify the fields to be overwritten in the `Settings` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                  "type": "string",
                  "location": "query"
                },
                "requestId": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1alpha1/{+name}",
              "httpMethod": "PATCH",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/settings",
              "description": "Updates the regional-level project settings.",
              "request": {
                "$ref": "Settings"
              },
              "id": "migrationcenter.projects.locations.updateSettings"
            }
          }
        }
      }
    }
  },
  "documentationLink": "https://cloud.google.com/migration-center",
  "basePath": "",
  "discoveryVersion": "v1"
}

{
  "batchPath": "batch",
  "servicePath": "",
  "parameters": {
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "type": "string",
      "description": "Data format for response."
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "version_module": true,
  "rootUrl": "https://migrationcenter.googleapis.com/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "importJobs": {
              "resources": {
                "importDataFiles": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "List import data files.",
                      "path": "v1alpha1/{+parent}/importDataFiles",
                      "response": {
                        "$ref": "ListImportDataFilesResponse"
                      },
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.list",
                      "parameters": {
                        "parent": {
                          "description": "Required. Name of the parent of the `ImportDataFiles` resource.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "required": true,
                          "location": "path"
                        },
                        "orderBy": {
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of data files to return. The service may return fewer than this value. If unspecified, at most 500 data files will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                        },
                        "filter": {
                          "location": "query",
                          "description": "Filtering results.",
                          "type": "string"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A page token, received from a previous `ListImportDataFiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListImportDataFiles` must match the call that provided the page token."
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "ImportDataFile"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Creates an import data file.",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.create",
                      "parameters": {
                        "parent": {
                          "description": "Required. Name of the parent of the ImportDataFile.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "importDataFileId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. The ID of the new data file."
                        },
                        "requestId": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "path": "v1alpha1/{+parent}/importDataFiles"
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.delete",
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. Name of the ImportDataFile to delete.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        }
                      },
                      "httpMethod": "DELETE",
                      "description": "Delete an import data file."
                    },
                    "get": {
                      "response": {
                        "$ref": "ImportDataFile"
                      },
                      "description": "Gets an import data file.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "description": "Required. Name of the ImportDataFile.",
                          "location": "path"
                        }
                      },
                      "httpMethod": "GET",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "path": "v1alpha1/{+name}"
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.get",
                  "response": {
                    "$ref": "ImportJob"
                  },
                  "parameters": {
                    "view": {
                      "location": "query",
                      "type": "string",
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "description": "Optional. The level of details of the import job. Default value is FULL."
                    },
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "description": "Gets the details of an import job."
                },
                "run": {
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the import job to run.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "RunImportJobRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.run",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+name}:run",
                  "description": "Runs an import job."
                },
                "create": {
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.create",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates an import job.",
                  "path": "v1alpha1/{+parent}/importJobs",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "importJobId": {
                      "location": "query",
                      "description": "Required. ID of the import job.",
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "parent": {
                      "description": "Required. Value for parent.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Output only. The full name of the import job."
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.patch",
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Updates an import job."
                },
                "delete": {
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "force": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. If set to `true`, any `ImportDataFiles` of this job will also be deleted If set to `false`, the request only works if the job has no data files."
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes an import job.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.delete",
                  "httpMethod": "DELETE",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}"
                },
                "validate": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ValidateImportJobRequest"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the import job to validate.",
                      "type": "string"
                    }
                  },
                  "description": "Validates an import job.",
                  "id": "migrationcenter.projects.locations.importJobs.validate",
                  "path": "v1alpha1/{+name}:validate",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "description": "Lists all import jobs.",
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListImportJobsResponse"
                  },
                  "id": "migrationcenter.projects.locations.importJobs.list",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Parent value for `ListImportJobsRequest`."
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results the server should return."
                    },
                    "view": {
                      "type": "string",
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "description": "Optional. The level of details of each import job. Default value is BASIC.",
                      "location": "query",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ]
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/importJobs"
                }
              }
            },
            "groups": {
              "methods": {
                "removeAssets": {
                  "path": "v1alpha1/{+group}:removeAssets",
                  "description": "Removes assets from a group.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "group"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeAssets",
                  "parameters": {
                    "group": {
                      "location": "path",
                      "description": "Required. Group reference.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "id": "migrationcenter.projects.locations.groups.removeAssets",
                  "request": {
                    "$ref": "RemoveAssetsFromGroupRequest"
                  }
                },
                "list": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/groups",
                  "description": "Lists all groups in a given project and location.",
                  "id": "migrationcenter.projects.locations.groups.list",
                  "response": {
                    "$ref": "ListGroupsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. Parent value for `ListGroupsRequest`.",
                      "location": "path"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "filter": {
                      "type": "string",
                      "description": "Filtering results.",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET"
                },
                "patch": {
                  "id": "migrationcenter.projects.locations.groups.patch",
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Group"
                  },
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Group` resource by the update. The values specified in the `update_mask` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "description": "Output only. The name of the group.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a group."
                },
                "delete": {
                  "id": "migrationcenter.projects.locations.groups.delete",
                  "description": "Deletes a group.",
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "description": "Required. Name of the group resource.",
                      "location": "path"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "httpMethod": "DELETE"
                },
                "create": {
                  "id": "migrationcenter.projects.locations.groups.create",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups",
                  "description": "Creates a new group in a given project and location.",
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/groups",
                  "request": {
                    "$ref": "Group"
                  },
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "groupId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`."
                    },
                    "parent": {
                      "description": "Required. Value for parent.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "addAssets": {
                  "parameters": {
                    "group": {
                      "location": "path",
                      "description": "Required. Group reference.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addAssets",
                  "description": "Adds assets to a group.",
                  "path": "v1alpha1/{+group}:addAssets",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.groups.addAssets",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "AddAssetsToGroupRequest"
                  },
                  "parameterOrder": [
                    "group"
                  ]
                },
                "get": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "response": {
                    "$ref": "Group"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.groups.get",
                  "description": "Gets the details of a group.",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "sources": {
              "methods": {
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "description": "Creates a new source in a given project and location.",
                  "path": "v1alpha1/{+parent}/sources",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Source"
                  },
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "sourceId": {
                      "description": "Required. User specified ID for the source. It will become the last component of the source name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. Value for parent.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "id": "migrationcenter.projects.locations.sources.create"
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Updates the parameters of a source.",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Source"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.sources.patch",
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Source` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "required": true,
                      "description": "Output only. The full name of the source.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}"
                },
                "delete": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "description": "Deletes a source.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.sources.delete",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "description": "Gets the details of a source.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Source"
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "id": "migrationcenter.projects.locations.sources.get",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "list": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "path": "v1alpha1/{+parent}/sources",
                  "id": "migrationcenter.projects.locations.sources.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all the sources in a given project and location.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Parent value for `ListSourcesRequest`."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results that the server should return."
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "description": "Filtering results.",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "ListSourcesResponse"
                  }
                }
              },
              "resources": {
                "errorFrames": {
                  "methods": {
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "format": "int32"
                        },
                        "view": {
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "location": "query",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ],
                          "description": "Optional. An optional view mode to control the level of details of each error frame. The default is a BASIC frame view.",
                          "type": "string"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results the server should return.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "description": "Required. Parent value (the source) for `ListErrorFramesRequest`.",
                          "location": "path"
                        }
                      },
                      "path": "v1alpha1/{+parent}/errorFrames",
                      "id": "migrationcenter.projects.locations.sources.errorFrames.list",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames",
                      "description": "Lists all error frames in a given source and location.",
                      "response": {
                        "$ref": "ListErrorFramesResponse"
                      }
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1alpha1/{+name}",
                      "id": "migrationcenter.projects.locations.sources.errorFrames.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets the details of an error frame.",
                      "response": {
                        "$ref": "ErrorFrame"
                      },
                      "httpMethod": "GET",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames/{errorFramesId}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/errorFrames/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. The name of the frame to retrieve. Format: projects/{project}/locations/{location}/sources/{source}/errorFrames/{error_frame}",
                          "type": "string"
                        },
                        "view": {
                          "type": "string",
                          "location": "query",
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "description": "Optional. An optional view mode to control the level of details for the frame. The default is a basic frame view.",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "reportConfigs": {
              "resources": {
                "reports": {
                  "methods": {
                    "create": {
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "description": "Creates a report.",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "description": "Required. Value for parent."
                        },
                        "reportId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. User specified id for the report. It will become the last component of the report name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The id must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?."
                        },
                        "requestId": {
                          "type": "string",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1alpha1/{+parent}/reports",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.create",
                      "request": {
                        "$ref": "Report"
                      }
                    },
                    "list": {
                      "response": {
                        "$ref": "ListReportsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists Reports in a given ReportConfig.",
                      "path": "v1alpha1/{+parent}/reports",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.list",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "filter": {
                          "location": "query",
                          "type": "string",
                          "description": "Filtering results."
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A token identifying a page of results that the server should return."
                        },
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                        },
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "location": "path",
                          "description": "Required. Parent value for `ListReportsRequest`.",
                          "required": true
                        },
                        "view": {
                          "description": "Determines what information to retrieve for each Report.",
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "location": "query",
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET"
                    },
                    "get": {
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Report"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets details of a single Report.",
                      "path": "v1alpha1/{+name}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "location": "path",
                          "description": "Required. Name of the resource.",
                          "type": "string"
                        },
                        "view": {
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "location": "query",
                          "type": "string",
                          "description": "Determines what information to retrieve for the Report.",
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ]
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.get"
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1alpha1/{+name}",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.delete",
                      "description": "Deletes a Report.",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the resource.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "type": "string"
                        },
                        "requestId": {
                          "location": "query",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets details of a single ReportConfig.",
                  "id": "migrationcenter.projects.locations.reportConfigs.get",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "ReportConfig"
                  },
                  "httpMethod": "GET"
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "parameters": {
                    "force": {
                      "type": "boolean",
                      "description": "Optional. If set to `true`, any child `Reports` of this entity will also be deleted. If set to `false`, the request only works if the resource has no children.",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a ReportConfig.",
                  "id": "migrationcenter.projects.locations.reportConfigs.delete",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/reportConfigs",
                  "description": "Creates a report configuration.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "request": {
                    "$ref": "ReportConfig"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. Value for parent.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "reportConfigId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. User specified ID for the report config. It will become the last component of the report config name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?."
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.reportConfigs.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                },
                "list": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. Parent value for `ListReportConfigsRequest`.",
                      "location": "path"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "filter": {
                      "type": "string",
                      "description": "Filtering results.",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "ListReportConfigsResponse"
                  },
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/reportConfigs",
                  "id": "migrationcenter.projects.locations.reportConfigs.list",
                  "description": "Lists ReportConfigs in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "assets": {
              "methods": {
                "reportAssetFrames": {
                  "response": {
                    "$ref": "ReportAssetFramesResponse"
                  },
                  "id": "migrationcenter.projects.locations.assets.reportAssetFrames",
                  "description": "Reports a set of frames.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Frames"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "source": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Reference to a source."
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. Parent of the resource."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames",
                  "path": "v1alpha1/{+parent}/assets:reportAssetFrames"
                },
                "batchDelete": {
                  "path": "v1alpha1/{+parent}/assets:batchDelete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes list of Assets.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchDelete",
                  "id": "migrationcenter.projects.locations.assets.batchDelete",
                  "request": {
                    "$ref": "BatchDeleteAssetsRequest"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for batch asset delete.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "aggregateValues": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/assets:aggregateValues",
                  "description": "Aggregates the requested fields based on provided function.",
                  "response": {
                    "$ref": "AggregateAssetsValuesResponse"
                  },
                  "id": "migrationcenter.projects.locations.assets.aggregateValues",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. Parent value for `AggregateAssetsValuesRequest`.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "AggregateAssetsValuesRequest"
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "Filtering results.",
                      "location": "query"
                    },
                    "view": {
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ],
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data.",
                        "The asset view includes the standard metadata of an asset."
                      ],
                      "description": "View of the assets. Defaults to BASIC.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `ListAssetsRequest`.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "id": "migrationcenter.projects.locations.assets.list",
                  "response": {
                    "$ref": "ListAssetsResponse"
                  },
                  "path": "v1alpha1/{+parent}/assets",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets",
                  "description": "Lists all the assets in a given project and location."
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Asset"
                  },
                  "id": "migrationcenter.projects.locations.assets.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the details of an asset.",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource."
                    },
                    "view": {
                      "description": "View of the assets. Defaults to BASIC.",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data.",
                        "The asset view includes the standard metadata of an asset."
                      ],
                      "type": "string",
                      "location": "query",
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ]
                    }
                  }
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "id": "migrationcenter.projects.locations.assets.delete",
                  "description": "Deletes an asset.",
                  "httpMethod": "DELETE",
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "batchUpdate": {
                  "path": "v1alpha1/{+parent}/assets:batchUpdate",
                  "request": {
                    "$ref": "BatchUpdateAssetsRequest"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Parent value for batch asset update.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a list of assets.",
                  "id": "migrationcenter.projects.locations.assets.batchUpdate",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchUpdate",
                  "response": {
                    "$ref": "BatchUpdateAssetsResponse"
                  }
                },
                "patch": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Output only. The full name of the asset.",
                      "required": true
                    },
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "request": {
                    "$ref": "Asset"
                  },
                  "response": {
                    "$ref": "Asset"
                  },
                  "httpMethod": "PATCH",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "description": "Updates the parameters of an asset.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.assets.patch"
                }
              }
            },
            "preferenceSets": {
              "methods": {
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `PreferenceSet` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "description": "Output only. Name of the preference set."
                    }
                  },
                  "id": "migrationcenter.projects.locations.preferenceSets.patch",
                  "description": "Updates the parameters of a preference set.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH"
                },
                "delete": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "id": "migrationcenter.projects.locations.preferenceSets.delete",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the group resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a preference set.",
                  "path": "v1alpha1/{+name}"
                },
                "get": {
                  "response": {
                    "$ref": "PreferenceSet"
                  },
                  "description": "Gets the details of a preference set.",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "id": "migrationcenter.projects.locations.preferenceSets.get"
                },
                "create": {
                  "httpMethod": "POST",
                  "description": "Creates a new preference set in a given project and location.",
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.preferenceSets.create",
                  "path": "v1alpha1/{+parent}/preferenceSets",
                  "parameters": {
                    "preferenceSetId": {
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Value for parent."
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "id": "migrationcenter.projects.locations.preferenceSets.list",
                  "response": {
                    "$ref": "ListPreferenceSetsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results the server should return."
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, at most 500 preference sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent value for `ListPreferenceSetsRequest`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "description": "Lists all the preference sets in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/preferenceSets",
                  "httpMethod": "GET"
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be deleted.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.operations.delete",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "httpMethod": "DELETE"
                },
                "list": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.operations.list",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    },
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    }
                  },
                  "path": "v1alpha1/{+name}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations"
                },
                "get": {
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "id": "migrationcenter.projects.locations.operations.get",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string"
                    }
                  }
                },
                "cancel": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "POST",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.operations.cancel",
                  "path": "v1alpha1/{+name}:cancel",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  }
                }
              }
            }
          },
          "methods": {
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "path": "v1alpha1/{+name}/locations",
              "id": "migrationcenter.projects.locations.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "type": "integer",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "filter": {
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string"
                },
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "type": "string"
                }
              }
            },
            "getSettings": {
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "description": "Required. Name of the resource.",
                  "required": true,
                  "location": "path"
                }
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/settings",
              "id": "migrationcenter.projects.locations.getSettings",
              "description": "Gets the details of regional settings.",
              "response": {
                "$ref": "Settings"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ]
            },
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "Location"
              },
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "id": "migrationcenter.projects.locations.get",
              "description": "Gets information about a location."
            },
            "updateSettings": {
              "httpMethod": "PATCH",
              "parameters": {
                "requestId": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                },
                "updateMask": {
                  "location": "query",
                  "description": "Required. Field mask is used to specify the fields to be overwritten in the `Settings` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                  "format": "google-fieldmask",
                  "type": "string"
                },
                "name": {
                  "description": "Output only. The name of the resource.",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "type": "string"
                }
              },
              "request": {
                "$ref": "Settings"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Operation"
              },
              "description": "Updates the regional-level project settings.",
              "id": "migrationcenter.projects.locations.updateSettings",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/settings",
              "path": "v1alpha1/{+name}"
            }
          }
        }
      }
    }
  },
  "mtlsRootUrl": "https://migrationcenter.mtls.googleapis.com/",
  "discoveryVersion": "v1",
  "baseUrl": "https://migrationcenter.googleapis.com/",
  "description": "A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.",
  "basePath": "",
  "documentationLink": "https://cloud.google.com/migration-center",
  "ownerName": "Google",
  "canonicalName": "Migration Center API",
  "fullyEncodeReservedExpansion": true,
  "ownerDomain": "google.com",
  "title": "Migration Center API",
  "revision": "20231013",
  "id": "migrationcenter:v1alpha1",
  "kind": "discovery#restDescription",
  "name": "migrationcenter",
  "version": "v1alpha1",
  "protocol": "rest",
  "schemas": {
    "ImportJob": {
      "id": "ImportJob",
      "description": "A resource that represents the background job that imports asset frames.",
      "type": "object",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. The timestamp when the import job was last updated.",
          "format": "google-datetime",
          "readOnly": true
        },
        "gcsPayload": {
          "$ref": "GCSPayloadInfo",
          "description": "The payload is in Google Cloud Storage.",
          "deprecated": true
        },
        "inlinePayload": {
          "$ref": "InlinePayloadInfo",
          "description": "The payload is included in the request, mainly used for small import jobs."
        },
        "assetSource": {
          "description": "Required. Reference to a source.",
          "type": "string"
        },
        "validationReport": {
          "description": "Output only. The report with the validation results of the import job.",
          "$ref": "ValidationReport",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "executionReport": {
          "description": "Output only. The report with the results of running the import job.",
          "$ref": "ExecutionReport",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the import job was created.",
          "format": "google-datetime"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The full name of the import job.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "Default value.",
            "The import job is pending.",
            "The processing of the import job is ongoing.",
            "The import job processing has completed.",
            "The import job failed to be processed.",
            "The import job is being validated.",
            "The import job contains blocking errors.",
            "The validation of the job completed with no blocking errors."
          ],
          "readOnly": true,
          "enum": [
            "IMPORT_JOB_STATE_UNSPECIFIED",
            "IMPORT_JOB_STATE_PENDING",
            "IMPORT_JOB_STATE_RUNNING",
            "IMPORT_JOB_STATE_COMPLETED",
            "IMPORT_JOB_STATE_FAILED",
            "IMPORT_JOB_STATE_VALIDATING",
            "IMPORT_JOB_STATE_FAILED_VALIDATION",
            "IMPORT_JOB_STATE_READY"
          ],
          "description": "Output only. The state of the import job.",
          "type": "string"
        },
        "completeTime": {
          "type": "string",
          "description": "Output only. The timestamp when the import job was completed.",
          "readOnly": true,
          "format": "google-datetime"
        }
      }
    },
    "OperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "requestedCancellation": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        },
        "target": {
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true
        },
        "apiVersion": {
          "type": "string",
          "description": "Output only. API version used to start the operation.",
          "readOnly": true
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "OperationMetadata"
    },
    "ReportSummaryAssetAggregateStats": {
      "properties": {
        "memoryBytesHistogram": {
          "description": "Histogram showing a distribution of memory sizes.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "totalStorageBytes": {
          "type": "string",
          "format": "int64",
          "description": "Sum of persistent storage in bytes of all the assets in this collection."
        },
        "assetAge": {
          "deprecated": true,
          "$ref": "ReportSummaryChartData",
          "description": "Count of assets grouped by age."
        },
        "storageUtilizationChart": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryUtilizationChartData"
        },
        "storageUtilization": {
          "deprecated": true,
          "description": "Total storage split into Used/Free buckets.",
          "$ref": "ReportSummaryChartData"
        },
        "operatingSystem": {
          "description": "Count of assets grouped by Operating System families.",
          "$ref": "ReportSummaryChartData"
        },
        "memoryUtilization": {
          "deprecated": true,
          "$ref": "ReportSummaryChartData",
          "description": "Total memory split into Used/Free buckets."
        },
        "storageBytesHistogram": {
          "$ref": "ReportSummaryHistogramChartData",
          "description": "Histogram showing a distribution of memory sizes."
        },
        "memoryUtilizationChart": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryUtilizationChartData"
        },
        "totalMemoryBytes": {
          "format": "int64",
          "description": "Sum of the memory in bytes of all the assets in this collection.",
          "type": "string"
        },
        "totalCores": {
          "format": "int64",
          "description": "Sum of the CPU core count of all the assets in this collection.",
          "type": "string"
        },
        "coreCountHistogram": {
          "description": "Histogram showing a distribution of CPU core counts.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "totalAssets": {
          "type": "string",
          "description": "Count of the number of unique assets in this collection.",
          "format": "int64"
        }
      },
      "description": "Aggregate statistics for a collection of assets.",
      "type": "object",
      "id": "ReportSummaryAssetAggregateStats"
    },
    "Settings": {
      "id": "Settings",
      "properties": {
        "name": {
          "description": "Output only. The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "preferenceSet": {
          "description": "The preference set used by default for a project.",
          "type": "string"
        },
        "disableCloudLogging": {
          "type": "boolean",
          "description": "Disable Cloud Logging for the Migration Center API. Users are billed for the logs."
        }
      },
      "description": "Describes the Migration Center settings related to the project.",
      "type": "object"
    },
    "DiskPartitionList": {
      "properties": {
        "entries": {
          "items": {
            "$ref": "DiskPartition"
          },
          "type": "array",
          "description": "Partition entries."
        }
      },
      "id": "DiskPartitionList",
      "description": "Disk partition list.",
      "type": "object"
    },
    "AggregationCount": {
      "type": "object",
      "properties": {},
      "id": "AggregationCount",
      "description": "Object count."
    },
    "InlinePayloadInfo": {
      "id": "InlinePayloadInfo",
      "description": "A resource that represents the inline import job payload.",
      "properties": {
        "payload": {
          "items": {
            "$ref": "PayloadFile"
          },
          "type": "array",
          "description": "List of payload files."
        },
        "format": {
          "description": "The import job format.",
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false
          ],
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "type": "string",
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ]
        }
      },
      "type": "object"
    },
    "AggregationResultHistogramBucket": {
      "properties": {
        "count": {
          "format": "int64",
          "description": "Count of items in the bucket.",
          "type": "string"
        },
        "upperBound": {
          "description": "Upper bound - exclusive.",
          "type": "number",
          "format": "double"
        },
        "lowerBound": {
          "description": "Lower bound - inclusive.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object",
      "id": "AggregationResultHistogramBucket",
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity."
    },
    "CancelOperationRequest": {
      "type": "object",
      "id": "CancelOperationRequest",
      "properties": {},
      "description": "The request message for Operations.CancelOperation."
    },
    "SoleTenantNodeType": {
      "type": "object",
      "description": "A Sole Tenant node type.",
      "id": "SoleTenantNodeType",
      "properties": {
        "nodeName": {
          "description": "Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes",
          "type": "string"
        }
      }
    },
    "MigrationInsight": {
      "description": "An insight about potential migrations for an asset.",
      "type": "object",
      "properties": {
        "vmwareEngineTarget": {
          "$ref": "VmwareEngineMigrationTarget",
          "description": "Output only. A VMWare Engine target.",
          "readOnly": true
        },
        "gkeTarget": {
          "$ref": "GoogleKubernetesEngineMigrationTarget",
          "description": "Output only. A Google Kubernetes Engine target.",
          "readOnly": true
        },
        "computeEngineTarget": {
          "$ref": "ComputeEngineMigrationTarget",
          "description": "Output only. A Google Compute Engine target.",
          "readOnly": true
        },
        "fit": {
          "description": "Output only. Description of how well the asset this insight is associated with fits the proposed migration.",
          "readOnly": true,
          "$ref": "FitDescriptor"
        }
      },
      "id": "MigrationInsight"
    },
    "RemoveAssetsFromGroupRequest": {
      "id": "RemoveAssetsFromGroupRequest",
      "description": "A request to remove assets from a group.",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        },
        "assets": {
          "$ref": "AssetList",
          "description": "Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000."
        },
        "allowMissing": {
          "type": "boolean",
          "description": "Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`."
        }
      },
      "type": "object"
    },
    "ListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "type": "object"
    },
    "UpdateAssetRequest": {
      "type": "object",
      "properties": {
        "asset": {
          "description": "Required. The resource being updated.",
          "$ref": "Asset"
        },
        "updateMask": {
          "type": "string",
          "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
          "format": "google-fieldmask"
        },
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      },
      "id": "UpdateAssetRequest",
      "description": "A request to update an asset."
    },
    "DiskEntryList": {
      "id": "DiskEntryList",
      "type": "object",
      "description": "VM disks.",
      "properties": {
        "entries": {
          "items": {
            "$ref": "DiskEntry"
          },
          "type": "array",
          "description": "Disk entries."
        }
      }
    },
    "OpenFileList": {
      "description": "Open file list.",
      "id": "OpenFileList",
      "properties": {
        "entries": {
          "description": "Open file details entries.",
          "type": "array",
          "items": {
            "$ref": "OpenFileDetails"
          }
        }
      },
      "type": "object"
    },
    "VmwarePlatformDetails": {
      "description": "VMware specific details.",
      "type": "object",
      "properties": {
        "esxVersion": {
          "type": "string",
          "description": "ESX version."
        },
        "vcenterVersion": {
          "description": "vCenter version.",
          "type": "string"
        },
        "osid": {
          "type": "string",
          "description": "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html."
        }
      },
      "id": "VmwarePlatformDetails"
    },
    "ReportSummaryUtilizationChartData": {
      "description": "Utilization Chart is a specific type of visualization which displays a metric classified into \"Used\" and \"Free\" buckets.",
      "type": "object",
      "id": "ReportSummaryUtilizationChartData",
      "properties": {
        "free": {
          "format": "int64",
          "description": "Aggregate value which falls into the \"Free\" bucket.",
          "type": "string"
        },
        "used": {
          "format": "int64",
          "type": "string",
          "description": "Aggregate value which falls into the \"Used\" bucket."
        }
      }
    },
    "AzureVmPlatformDetails": {
      "description": "Azure VM specific details.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Azure platform's provisioning state."
        },
        "machineTypeLabel": {
          "type": "string",
          "description": "Azure platform's machine type label."
        },
        "location": {
          "description": "The location of the machine in the Azure format.",
          "type": "string"
        }
      },
      "id": "AzureVmPlatformDetails",
      "type": "object"
    },
    "DiskPartition": {
      "id": "DiskPartition",
      "description": "Disk Partition details.",
      "properties": {
        "mountPoint": {
          "type": "string",
          "description": "Mount pount (Linux/Windows) or drive letter (Windows)."
        },
        "type": {
          "type": "string",
          "description": "Partition type (e.g. BIOS boot)."
        },
        "fileSystem": {
          "type": "string",
          "description": "Partition file system."
        },
        "freeBytes": {
          "type": "string",
          "description": "Partition free space.",
          "format": "int64"
        },
        "subPartitions": {
          "description": "Sub-partitions.",
          "$ref": "DiskPartitionList"
        },
        "uuid": {
          "description": "Partition UUID.",
          "type": "string"
        },
        "capacityBytes": {
          "type": "string",
          "description": "Partition capacity.",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "AggregationFrequency": {
      "id": "AggregationFrequency",
      "properties": {},
      "description": "Frequency distribution of all field values.",
      "type": "object"
    },
    "ReportSummaryMachineFinding": {
      "type": "object",
      "properties": {
        "allocatedDiskTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "PERSISTENT_DISK_TYPE_UNSPECIFIED",
              "PERSISTENT_DISK_TYPE_STANDARD",
              "PERSISTENT_DISK_TYPE_BALANCED",
              "PERSISTENT_DISK_TYPE_SSD"
            ],
            "enumDescriptions": [
              "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
              "Standard HDD Persistent Disk.",
              "Balanced Persistent Disk.",
              "SSD Persistent Disk."
            ]
          },
          "description": "Set of disk types allocated to assets."
        },
        "machineSeriesAllocations": {
          "description": "Distribution of assets based on the Machine Series.",
          "items": {
            "$ref": "ReportSummaryMachineSeriesAllocation"
          },
          "type": "array"
        },
        "allocatedAssetCount": {
          "type": "string",
          "description": "Count of assets which were allocated.",
          "format": "int64"
        },
        "allocatedRegions": {
          "type": "array",
          "description": "Set of regions in which the assets were allocated.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "A set of findings that applies to assets of type Virtual/Physical Machine.",
      "id": "ReportSummaryMachineFinding"
    },
    "VirtualMachineDiskDetails": {
      "properties": {
        "lsblkJson": {
          "description": "Raw lsblk output in json.",
          "type": "string"
        },
        "disks": {
          "description": "List of disks.",
          "$ref": "DiskEntryList"
        },
        "hddTotalCapacityBytes": {
          "description": "Disk total Capacity.",
          "format": "int64",
          "type": "string"
        },
        "hddTotalFreeBytes": {
          "format": "int64",
          "type": "string",
          "description": "Total Disk Free Space."
        }
      },
      "id": "VirtualMachineDiskDetails",
      "type": "object",
      "description": "Details of VM disks."
    },
    "VmwareEngineMigrationTarget": {
      "type": "object",
      "properties": {},
      "id": "VmwareEngineMigrationTarget",
      "description": "VMWare engine migration target."
    },
    "AggregateAssetsValuesResponse": {
      "description": "A response to a request to aggregated assets values.",
      "id": "AggregateAssetsValuesResponse",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "AggregationResult"
          },
          "description": "The aggregation results."
        }
      },
      "type": "object"
    },
    "ReportSummaryVMWareNodeAllocation": {
      "properties": {
        "vmwareNode": {
          "description": "VMWare node type, e.g. \"ve1-standard-72\"",
          "$ref": "ReportSummaryVMWareNode"
        },
        "nodeCount": {
          "type": "string",
          "description": "Count of this node type to be provisioned",
          "format": "int64"
        },
        "allocatedAssetCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of assets allocated to these nodes"
        }
      },
      "id": "ReportSummaryVMWareNodeAllocation",
      "type": "object",
      "description": "Represents assets allocated to a specific VMWare Node type."
    },
    "RuntimeNetworkInfo": {
      "properties": {
        "connections": {
          "description": "Network connections.",
          "$ref": "NetworkConnectionList"
        },
        "netstat": {
          "description": "Netstat (raw, OS-agnostic).",
          "type": "string"
        },
        "netstatTime": {
          "$ref": "DateTime",
          "description": "Netstat time collected."
        }
      },
      "id": "RuntimeNetworkInfo",
      "type": "object",
      "description": "Runtime networking information."
    },
    "AggregationResultSum": {
      "properties": {
        "value": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "The result of a sum aggregation.",
      "type": "object",
      "id": "AggregationResultSum"
    },
    "BiosDetails": {
      "properties": {
        "smbiosUuid": {
          "description": "SMBIOS UUID.",
          "type": "string"
        },
        "biosManufacturer": {
          "description": "BIOS manufacturer.",
          "type": "string"
        },
        "biosReleaseDate": {
          "type": "string",
          "description": "BIOS release date."
        },
        "biosName": {
          "description": "BIOS name.",
          "type": "string"
        },
        "biosVersion": {
          "description": "BIOS version.",
          "type": "string"
        }
      },
      "description": "Details about the BIOS.",
      "type": "object",
      "id": "BiosDetails"
    },
    "AddAssetsToGroupRequest": {
      "properties": {
        "allowExisting": {
          "type": "boolean",
          "description": "Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`."
        },
        "assets": {
          "$ref": "AssetList",
          "description": "Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000."
        },
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      },
      "type": "object",
      "description": "A request to add assets to a group.",
      "id": "AddAssetsToGroupRequest"
    },
    "VmwareDiskConfig": {
      "description": "VMware disk config details.",
      "type": "object",
      "id": "VmwareDiskConfig",
      "properties": {
        "shared": {
          "type": "boolean",
          "description": "Is VMDK shared with other VMs."
        },
        "backingType": {
          "description": "VMDK backing type.",
          "enum": [
            "BACKING_TYPE_UNSPECIFIED",
            "BACKING_TYPE_FLAT_V1",
            "BACKING_TYPE_FLAT_V2",
            "BACKING_TYPE_PMEM",
            "BACKING_TYPE_RDM_V1",
            "BACKING_TYPE_RDM_V2",
            "BACKING_TYPE_SESPARSE",
            "BACKING_TYPE_SESPARSE_V1",
            "BACKING_TYPE_SESPARSE_V2"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Flat v1.",
            "Flat v2.",
            "Persistent memory, also known as Non-Volatile Memory (NVM).",
            "Raw Disk Memory v1.",
            "Raw Disk Memory v2.",
            "SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.",
            "SEsparse v1.",
            "SEsparse v1."
          ]
        },
        "vmdkDiskMode": {
          "type": "string",
          "description": "VMDK disk mode."
        },
        "rdmCompatibilityMode": {
          "description": "RDM compatibility mode.",
          "type": "string"
        }
      }
    },
    "ListSourcesResponse": {
      "properties": {
        "sources": {
          "description": "The list of sources.",
          "items": {
            "$ref": "Source"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "ListSourcesResponse",
      "description": "Response message for listing sources."
    },
    "MachineSeries": {
      "type": "object",
      "description": "A Compute Engine machine series.",
      "id": "MachineSeries",
      "properties": {
        "code": {
          "description": "Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series.",
          "type": "string"
        }
      }
    },
    "GuestInstalledApplication": {
      "type": "object",
      "properties": {
        "vendor": {
          "type": "string",
          "description": "Installed application vendor."
        },
        "name": {
          "type": "string",
          "description": "Installed application name."
        },
        "path": {
          "description": "Source path.",
          "type": "string"
        },
        "time": {
          "type": "string",
          "description": "Date application was installed."
        },
        "version": {
          "description": "Installed application version.",
          "type": "string"
        }
      },
      "description": "Guest installed application information.",
      "id": "GuestInstalledApplication"
    },
    "BatchUpdateAssetsRequest": {
      "id": "BatchUpdateAssetsRequest",
      "properties": {
        "requests": {
          "description": "Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.",
          "type": "array",
          "items": {
            "$ref": "UpdateAssetRequest"
          }
        }
      },
      "description": "A request to update a list of assets.",
      "type": "object"
    },
    "GuestInstalledApplicationList": {
      "type": "object",
      "id": "GuestInstalledApplicationList",
      "description": "Guest installed application list.",
      "properties": {
        "entries": {
          "items": {
            "$ref": "GuestInstalledApplication"
          },
          "description": "Application entries.",
          "type": "array"
        }
      }
    },
    "ComputeEngineMigrationTarget": {
      "type": "object",
      "description": "Compute engine migration target.",
      "properties": {
        "shape": {
          "$ref": "ComputeEngineShapeDescriptor",
          "description": "Description of the suggested shape for the migration target."
        }
      },
      "id": "ComputeEngineMigrationTarget"
    },
    "HostsEntry": {
      "description": "Single /etc/hosts entry.",
      "properties": {
        "ip": {
          "type": "string",
          "description": "IP (raw, IPv4/6 agnostic)."
        },
        "hostNames": {
          "items": {
            "type": "string"
          },
          "description": "List of host names / aliases.",
          "type": "array"
        }
      },
      "id": "HostsEntry",
      "type": "object"
    },
    "ListGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "description": "The list of Group",
          "type": "array",
          "items": {
            "$ref": "Group"
          }
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        }
      },
      "description": "A response for listing groups.",
      "id": "ListGroupsResponse"
    },
    "ReportSummarySoleTenantNodeAllocation": {
      "id": "ReportSummarySoleTenantNodeAllocation",
      "type": "object",
      "properties": {
        "node": {
          "$ref": "SoleTenantNodeType",
          "description": "Sole Tenant node type, e.g. \"m3-node-128-3904\""
        },
        "nodeCount": {
          "format": "int64",
          "description": "Count of this node type to be provisioned",
          "type": "string"
        },
        "allocatedAssetCount": {
          "description": "Count of assets allocated to these nodes",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "Represents the assets allocated to a specific Sole-Tenant node type."
    },
    "ListAssetsResponse": {
      "description": "Response message for listing assets.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "assets": {
          "items": {
            "$ref": "Asset"
          },
          "type": "array",
          "description": "A list of assets."
        }
      },
      "id": "ListAssetsResponse"
    },
    "ReportSummaryHistogramChartData": {
      "properties": {
        "buckets": {
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "items": {
            "$ref": "ReportSummaryHistogramChartDataBucket"
          },
          "type": "array"
        }
      },
      "id": "ReportSummaryHistogramChartData",
      "description": "A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.",
      "type": "object"
    },
    "Group": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Optional. User-friendly display name."
        },
        "description": {
          "type": "string",
          "description": "Optional. The description of the group."
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the group was last updated."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the group."
        },
        "createTime": {
          "description": "Output only. The timestamp when the group was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups.",
      "id": "Group"
    },
    "DiskUsageSample": {
      "properties": {
        "averageIops": {
          "description": "Average IOPS sampled over a short window. Must be non-negative. Must be equal to the sum of read and write if one of them is positive. if both read and write are zero they are ignored.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "DiskUsageSample",
      "type": "object",
      "description": "Disk usage sample. Values are across all disks."
    },
    "ReportSummaryVMWareEngineFinding": {
      "id": "ReportSummaryVMWareEngineFinding",
      "properties": {
        "allocatedRegions": {
          "type": "array",
          "description": "Set of regions in which the assets were allocated",
          "items": {
            "type": "string"
          }
        },
        "nodeAllocations": {
          "items": {
            "$ref": "ReportSummaryVMWareNodeAllocation"
          },
          "type": "array",
          "description": "Set of per-nodetype allocation records"
        },
        "allocatedAssetCount": {
          "type": "string",
          "description": "Count of assets which are allocated",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "A set of findings that applies to assets destined for VMWare Engine."
    },
    "PlatformDetails": {
      "properties": {
        "vmwareDetails": {
          "$ref": "VmwarePlatformDetails",
          "description": "VMware specific details."
        },
        "genericDetails": {
          "$ref": "GenericPlatformDetails",
          "description": "Generic platform details."
        },
        "azureVmDetails": {
          "description": "Azure VM specific details.",
          "$ref": "AzureVmPlatformDetails"
        },
        "awsEc2Details": {
          "description": "AWS EC2 specific details.",
          "$ref": "AwsEc2PlatformDetails"
        },
        "physicalDetails": {
          "$ref": "PhysicalPlatformDetails",
          "description": "Physical machines platform details."
        }
      },
      "id": "PlatformDetails",
      "type": "object",
      "description": "Information about the platform."
    },
    "ValidateImportJobRequest": {
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      },
      "description": "A request to validate an import job.",
      "id": "ValidateImportJobRequest",
      "type": "object"
    },
    "CpuUsageSample": {
      "description": "CPU usage sample.",
      "type": "object",
      "properties": {
        "utilizedPercentage": {
          "type": "number",
          "description": "Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.",
          "format": "float"
        }
      },
      "id": "CpuUsageSample"
    },
    "ErrorFrame": {
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. The identifier of the ErrorFrame.",
          "type": "string"
        },
        "violations": {
          "description": "Output only. All the violations that were detected for the frame.",
          "type": "array",
          "items": {
            "$ref": "FrameViolationEntry"
          },
          "readOnly": true
        },
        "originalFrame": {
          "readOnly": true,
          "description": "Output only. The frame that was originally reported.",
          "$ref": "AssetFrame"
        },
        "ingestionTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Frame ingestion time.",
          "type": "string"
        }
      },
      "description": "Message representing a frame which failed to be processed due to an error.",
      "type": "object",
      "id": "ErrorFrame"
    },
    "ReportSummaryHistogramChartDataBucket": {
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "properties": {
        "lowerBound": {
          "format": "int64",
          "description": "Lower bound - inclusive.",
          "type": "string"
        },
        "count": {
          "type": "string",
          "format": "int64",
          "description": "Count of items in the bucket."
        },
        "upperBound": {
          "type": "string",
          "format": "int64",
          "description": "Upper bound - exclusive."
        }
      },
      "type": "object",
      "id": "ReportSummaryHistogramChartDataBucket"
    },
    "OpenFileDetails": {
      "type": "object",
      "description": "Open file Information.",
      "properties": {
        "fileType": {
          "type": "string",
          "description": "Opened file file type."
        },
        "user": {
          "type": "string",
          "description": "Opened file user."
        },
        "command": {
          "type": "string",
          "description": "Opened file command."
        },
        "filePath": {
          "description": "Opened file file path.",
          "type": "string"
        }
      },
      "id": "OpenFileDetails"
    },
    "GenericInsight": {
      "description": "A generic insight about an asset.",
      "type": "object",
      "properties": {
        "additionalInformation": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Additional information about the insight, each entry can be a logical entry and must make sense if it is displayed with line breaks between each entry. Text can contain md style links."
        },
        "defaultMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. In case message_code is not yet known by the client default_message will be the message to be used instead. Text can contain md file style links."
        },
        "messageId": {
          "readOnly": true,
          "description": "Output only. Represents a globally unique message id for this insight, can be used for localization purposes, in case message_code is not yet known by the client use default_message instead.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "GenericInsight"
    },
    "ReportSummaryGroupFinding": {
      "properties": {
        "overlappingAssetCount": {
          "deprecated": true,
          "type": "string",
          "description": "This field is deprecated, do not rely on it having a value.",
          "format": "int64"
        },
        "preferenceSetFindings": {
          "items": {
            "$ref": "ReportSummaryGroupPreferenceSetFinding"
          },
          "type": "array",
          "description": "Findings for each of the PreferenceSets for this group."
        },
        "assetAggregateStats": {
          "description": "Summary statistics for all the assets in this group.",
          "$ref": "ReportSummaryAssetAggregateStats"
        },
        "description": {
          "type": "string",
          "description": "Description for the Group."
        },
        "displayName": {
          "type": "string",
          "description": "Display Name for the Group."
        }
      },
      "description": "Summary Findings for a specific Group.",
      "id": "ReportSummaryGroupFinding",
      "type": "object"
    },
    "VmwareEnginePreferences": {
      "properties": {
        "memoryOvercommitRatio": {
          "format": "double",
          "description": "Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0.",
          "type": "number"
        },
        "storageDeduplicationCompressionRatio": {
          "description": "The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.",
          "format": "double",
          "type": "number"
        },
        "commitmentPlan": {
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment (monthly payments).",
            "3 year commitment (monthly payments).",
            "1 year commitment (upfront payment).",
            "3 years commitment (upfront payment)."
          ],
          "type": "string",
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_3_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_1_YEAR_UPFRONT_PAYMENT",
            "COMMITMENT_3_YEAR_UPFRONT_PAYMENT"
          ],
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with."
        },
        "cpuOvercommitRatio": {
          "format": "double",
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment.",
          "type": "number"
        }
      },
      "id": "VmwareEnginePreferences",
      "description": "The user preferences relating to Google Cloud VMware Engine target platform.",
      "type": "object"
    },
    "Date": {
      "id": "Date",
      "type": "object",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "properties": {
        "year": {
          "type": "integer",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "format": "int32"
        },
        "month": {
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "format": "int32"
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
        }
      }
    },
    "AggregationResultCount": {
      "description": "The result of a count aggregation.",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "id": "AggregationResultCount"
    },
    "VirtualMachinePreferencesSizingOptimizationCustomParameters": {
      "description": "Custom data to use for sizing optimizations.",
      "id": "VirtualMachinePreferencesSizingOptimizationCustomParameters",
      "type": "object",
      "properties": {
        "cpuUsagePercentage": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Desired percentage of CPU usage. Must be in the interval [1, 100] (or 0 for default value)."
        },
        "memoryUsagePercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Desired percentage of memory usage. Must be in the interval [1, 100] (or 0 for default value)."
        },
        "storageMultiplier": {
          "format": "double",
          "description": "Optional. Desired increase factor of storage, relative to currently used storage. Must be in the interval [1.0, 2.0] (or 0 for default value).",
          "type": "number"
        },
        "aggregationMethod": {
          "type": "string",
          "description": "Optional. Type of statistical aggregation of a resource utilization data, on which to base the sizing metrics.",
          "enum": [
            "AGGREGATION_METHOD_UNSPECIFIED",
            "AGGREGATION_METHOD_AVERAGE",
            "AGGREGATION_METHOD_MEDIAN",
            "AGGREGATION_METHOD_NINETY_FIFTH_PERCENTILE",
            "AGGREGATION_METHOD_PEAK"
          ],
          "enumDescriptions": [
            "Unspecified aggregation method. Can be used for default value.",
            "Average of utilization data.",
            "Median of utilization data.",
            "95th percentile of utilization data.",
            "Peak of utilization data."
          ]
        }
      }
    },
    "DailyResourceUsageAggregationCPU": {
      "properties": {
        "utilizationPercentage": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "CPU utilization percentage."
        }
      },
      "description": "Statistical aggregation of CPU usage.",
      "type": "object",
      "id": "DailyResourceUsageAggregationCPU"
    },
    "ImportRowError": {
      "id": "ImportRowError",
      "description": "A resource that reports the import job errors at row level.",
      "properties": {
        "errors": {
          "items": {
            "$ref": "ImportError"
          },
          "description": "The list of errors detected in the row.",
          "type": "array"
        },
        "vmUuid": {
          "description": "The VM UUID.",
          "type": "string"
        },
        "rowNumber": {
          "type": "integer",
          "deprecated": true,
          "format": "int32",
          "description": "The row number where the error was detected."
        },
        "vmName": {
          "type": "string",
          "description": "The name of the VM in the row."
        }
      },
      "type": "object"
    },
    "AssetList": {
      "type": "object",
      "description": "Lists the asset IDs of all assets.",
      "properties": {
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. A list of asset IDs"
        }
      },
      "id": "AssetList"
    },
    "MemoryUsageSample": {
      "properties": {
        "utilizedPercentage": {
          "description": "Percentage of system memory utilized. Must be in the interval [0, 100].",
          "type": "number",
          "format": "float"
        }
      },
      "id": "MemoryUsageSample",
      "type": "object",
      "description": "Memory usage sample."
    },
    "NfsExportList": {
      "id": "NfsExportList",
      "type": "object",
      "description": "NFS exports.",
      "properties": {
        "entries": {
          "description": "NFS export entries.",
          "items": {
            "$ref": "NfsExport"
          },
          "type": "array"
        }
      }
    },
    "ListPreferenceSetsResponse": {
      "description": "Response message for listing preference sets.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "preferenceSets": {
          "description": "The list of PreferenceSets",
          "items": {
            "$ref": "PreferenceSet"
          },
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "ListPreferenceSetsResponse"
    },
    "ImportDataFile": {
      "type": "object",
      "description": "A resource that represents a payload file in an import job.",
      "id": "ImportDataFile",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Optional. User-friendly display name. Maximum length is 256 characters."
        },
        "format": {
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "description": "Required. The payload format.",
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ],
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false
          ]
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The timestamp when the file was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "state": {
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "The data file is being created.",
            "The data file completed initialization."
          ],
          "description": "Output only. The state of the import data file."
        },
        "uploadFileInfo": {
          "description": "Information about a file that is uploaded to a storage service.",
          "$ref": "UploadFileInfo"
        },
        "name": {
          "description": "Output only. The name of the file.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "NetworkUsageSample": {
      "properties": {
        "averageEgressBps": {
          "type": "number",
          "format": "float",
          "description": "Average network egress in B/s sampled over a short window. Must be non-negative."
        },
        "averageIngressBps": {
          "description": "Average network ingress in B/s sampled over a short window. Must be non-negative.",
          "type": "number",
          "format": "float"
        }
      },
      "id": "NetworkUsageSample",
      "type": "object",
      "description": "Network usage sample. Values are across all network interfaces."
    },
    "DiskEntry": {
      "type": "object",
      "id": "DiskEntry",
      "description": "Single disk entry.",
      "properties": {
        "hwAddress": {
          "description": "Disk hardware address (e.g. 0:1 for SCSI).",
          "type": "string"
        },
        "diskLabelType": {
          "type": "string",
          "description": "Disk label type (e.g. BIOS/GPT)"
        },
        "vmwareConfig": {
          "description": "VMware disk details.",
          "$ref": "VmwareDiskConfig"
        },
        "status": {
          "description": "Disk status (e.g. online).",
          "type": "string"
        },
        "totalFreeBytes": {
          "type": "string",
          "description": "Disk free space.",
          "format": "int64"
        },
        "partitions": {
          "$ref": "DiskPartitionList",
          "description": "Partition layout."
        },
        "interfaceType": {
          "description": "Disks interface type (e.g. SATA/SCSI)",
          "type": "string"
        },
        "totalCapacityBytes": {
          "description": "Disk capacity.",
          "type": "string",
          "format": "int64"
        },
        "diskLabel": {
          "type": "string",
          "description": "Disk label."
        }
      }
    },
    "SoftwareInsight": {
      "type": "object",
      "description": "An insight regarding software detected on an asset.",
      "properties": {
        "detectedSoftware": {
          "description": "Output only. Information about the detected software.",
          "readOnly": true,
          "$ref": "DetectedSoftware"
        }
      },
      "id": "SoftwareInsight"
    },
    "NetworkAddress": {
      "description": "Details of network address.",
      "id": "NetworkAddress",
      "properties": {
        "assignment": {
          "description": "Whether DHCP is used to assign addresses.",
          "enumDescriptions": [
            "Unknown (default value).",
            "Staticly assigned IP.",
            "Dynamically assigned IP (DHCP)."
          ],
          "enum": [
            "ADDRESS_ASSIGNMENT_UNSPECIFIED",
            "ADDRESS_ASSIGNMENT_STATIC",
            "ADDRESS_ASSIGNMENT_DHCP"
          ],
          "type": "string"
        },
        "bcast": {
          "type": "string",
          "description": "Broadcast address."
        },
        "subnetMask": {
          "type": "string",
          "description": "Subnet mask."
        },
        "fqdn": {
          "description": "Fully qualified domain name.",
          "type": "string"
        },
        "ipAddress": {
          "description": "Assigned or configured IP Address.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualMachineNetworkDetails": {
      "id": "VirtualMachineNetworkDetails",
      "type": "object",
      "properties": {
        "publicIpAddress": {
          "type": "string",
          "description": "Public IP address of the machine."
        },
        "primaryIpAddress": {
          "type": "string",
          "description": "IP address of the machine."
        },
        "networkAdapters": {
          "$ref": "NetworkAdapterList",
          "description": "List of network adapters."
        },
        "primaryMacAddress": {
          "type": "string",
          "description": "MAC address of the machine. This property is used to uniqly identify the machine."
        },
        "defaultGw": {
          "type": "string",
          "description": "Default gateway address."
        }
      },
      "description": "Details of network adapters and settings."
    },
    "GenericPlatformDetails": {
      "type": "object",
      "properties": {
        "location": {
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field.",
          "type": "string"
        }
      },
      "description": "Generic platform details.",
      "id": "GenericPlatformDetails"
    },
    "DateTime": {
      "properties": {
        "month": {
          "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.",
          "format": "int32",
          "type": "integer"
        },
        "day": {
          "format": "int32",
          "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.",
          "type": "integer"
        },
        "timeZone": {
          "description": "Time zone.",
          "$ref": "TimeZone"
        },
        "seconds": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds."
        },
        "nanos": {
          "format": "int32",
          "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
          "type": "integer"
        },
        "minutes": {
          "format": "int32",
          "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
          "type": "integer"
        },
        "utcOffset": {
          "type": "string",
          "format": "google-duration",
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }."
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year."
        },
        "hours": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
        }
      },
      "id": "DateTime",
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
      "type": "object"
    },
    "Asset": {
      "description": "An asset represents a resource in your environment. Asset types include virtual machines and databases.",
      "type": "object",
      "id": "Asset",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. The timestamp when the asset was last updated.",
          "format": "google-datetime",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "performanceData": {
          "description": "Output only. Performance data for the asset.",
          "$ref": "AssetPerformanceData",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The timestamp when the asset was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "assignedGroups": {
          "description": "Output only. The list of groups that the asset is assigned to.",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "attributes": {
          "type": "object",
          "description": "Generic asset attributes.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The full name of the asset."
        },
        "sources": {
          "description": "Output only. The list of sources contributing to the asset.",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "virtualMachineDetails": {
          "$ref": "VirtualMachineDetails",
          "readOnly": true,
          "description": "Output only. Asset information specific for virtual machines."
        },
        "insightList": {
          "readOnly": true,
          "$ref": "InsightList",
          "description": "Output only. The list of insights associated with the asset."
        }
      }
    },
    "ComputeEnginePreferences": {
      "type": "object",
      "properties": {
        "licenseType": {
          "description": "License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.",
          "type": "string",
          "enum": [
            "LICENSE_TYPE_UNSPECIFIED",
            "LICENSE_TYPE_DEFAULT",
            "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE"
          ],
          "enumDescriptions": [
            "Unspecified (default value).",
            "Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with.",
            "Bring-your-own-license (BYOL) plan. User provides the OS license."
          ]
        },
        "machinePreferences": {
          "description": "Preferences concerning the machine types to consider on Compute Engine.",
          "$ref": "MachinePreferences"
        },
        "persistentDiskType": {
          "description": "Persistent disk type to use. If unspecified (default), all types are considered, based on available usage data.",
          "type": "string",
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ],
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ]
        }
      },
      "description": "The user preferences relating to Compute Engine target platform.",
      "id": "ComputeEnginePreferences"
    },
    "DailyResourceUsageAggregationMemory": {
      "type": "object",
      "id": "DailyResourceUsageAggregationMemory",
      "properties": {
        "utilizationPercentage": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Memory utilization percentage."
        }
      },
      "description": "Statistical aggregation of memory usage."
    },
    "NetworkAddressList": {
      "id": "NetworkAddressList",
      "type": "object",
      "description": "List of allocated/assigned network addresses.",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "NetworkAddress"
          },
          "description": "Network address entries."
        }
      }
    },
    "VirtualMachineArchitectureDetails": {
      "type": "object",
      "id": "VirtualMachineArchitectureDetails",
      "description": "Details of the VM architecture.",
      "properties": {
        "cpuName": {
          "type": "string",
          "description": "CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc."
        },
        "vendor": {
          "description": "Hardware vendor.",
          "type": "string"
        },
        "hyperthreading": {
          "enumDescriptions": [
            "Unknown (default value).",
            "Hyperthreading is disabled.",
            "Hyperthreading is enabled."
          ],
          "type": "string",
          "description": "CPU hyperthreading support.",
          "enum": [
            "HYPER_THREADING_UNSPECIFIED",
            "HYPER_THREADING_DISABLED",
            "HYPER_THREADING_ENABLED"
          ]
        },
        "cpuSocketCount": {
          "description": "Number of processor sockets allocated to the machine.",
          "format": "int32",
          "type": "integer"
        },
        "cpuThreadCount": {
          "format": "int32",
          "description": "Number of CPU threads allocated to the machine.",
          "type": "integer"
        },
        "cpuArchitecture": {
          "description": "CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc.",
          "type": "string"
        },
        "firmware": {
          "type": "string",
          "description": "Firmware (BIOS/efi)."
        },
        "bios": {
          "description": "BIOS Details.",
          "$ref": "BiosDetails"
        },
        "cpuManufacturer": {
          "type": "string",
          "description": "CPU manufacturer, e.g., \"Intel\", \"AMD\"."
        }
      }
    },
    "FileValidationReport": {
      "id": "FileValidationReport",
      "type": "object",
      "properties": {
        "fileErrors": {
          "description": "List of file level errors.",
          "type": "array",
          "items": {
            "$ref": "ImportError"
          }
        },
        "rowErrors": {
          "items": {
            "$ref": "ImportRowError"
          },
          "description": "Partial list of rows that encountered validation error.",
          "type": "array"
        },
        "fileName": {
          "description": "The name of the file.",
          "type": "string"
        },
        "partialReport": {
          "description": "Flag indicating that processing was aborted due to maximum number of errors.",
          "type": "boolean"
        }
      },
      "description": "A resource that aggregates the validation errors found in an import job file."
    },
    "HostsEntryList": {
      "description": "Hosts content.",
      "properties": {
        "entries": {
          "description": "Hosts entries.",
          "items": {
            "$ref": "HostsEntry"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "HostsEntryList"
    },
    "ValidationReport": {
      "type": "object",
      "description": "A resource that aggregates errors across import job files.",
      "properties": {
        "jobErrors": {
          "description": "List of job level errors.",
          "items": {
            "$ref": "ImportError"
          },
          "type": "array"
        },
        "fileValidations": {
          "type": "array",
          "description": "List of errors found in files.",
          "items": {
            "$ref": "FileValidationReport"
          }
        }
      },
      "id": "ValidationReport"
    },
    "DailyResourceUsageAggregationStats": {
      "id": "DailyResourceUsageAggregationStats",
      "properties": {
        "peak": {
          "format": "float",
          "description": "Peak usage value.",
          "type": "number"
        },
        "ninteyFifthPercentile": {
          "type": "number",
          "format": "float",
          "description": "95th percentile usage value."
        },
        "average": {
          "type": "number",
          "format": "float",
          "description": "Average usage value."
        },
        "median": {
          "description": "Median usage value.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object",
      "description": "Statistical aggregation of samples for a single resource usage."
    },
    "AggregationResultFrequency": {
      "properties": {
        "values": {
          "additionalProperties": {
            "format": "int64",
            "type": "string"
          },
          "type": "object"
        }
      },
      "id": "AggregationResultFrequency",
      "type": "object",
      "description": "The result of a frequency distribution aggregation."
    },
    "RegionPreferences": {
      "properties": {
        "preferredRegions": {
          "items": {
            "type": "string"
          },
          "description": "A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "RegionPreferences",
      "description": "The user preferences relating to target regions."
    },
    "Money": {
      "id": "Money",
      "type": "object",
      "properties": {
        "nanos": {
          "format": "int32",
          "type": "integer",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        },
        "units": {
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "format": "int64",
          "type": "string"
        },
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        }
      },
      "description": "Represents an amount of money with its currency type."
    },
    "GuestOsDetails": {
      "description": "Information from Guest-level collections.",
      "properties": {
        "config": {
          "description": "OS and app configuration.",
          "$ref": "GuestConfigDetails"
        },
        "runtime": {
          "description": "Runtime information.",
          "$ref": "GuestRuntimeDetails"
        }
      },
      "id": "GuestOsDetails",
      "type": "object"
    },
    "FrameViolationEntry": {
      "description": "A resource that contains a single violation of a reported `AssetFrame` resource.",
      "type": "object",
      "id": "FrameViolationEntry",
      "properties": {
        "violation": {
          "description": "A message describing the violation.",
          "type": "string"
        },
        "field": {
          "description": "The field of the original frame where the violation occurred.",
          "type": "string"
        }
      }
    },
    "AggregationHistogram": {
      "description": "Histogram of bucketed assets counts by field value.",
      "type": "object",
      "properties": {
        "lowerBounds": {
          "items": {
            "type": "number",
            "format": "double"
          },
          "type": "array",
          "description": "Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds."
        }
      },
      "id": "AggregationHistogram"
    },
    "TimeZone": {
      "type": "object",
      "properties": {
        "id": {
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
          "type": "string"
        },
        "version": {
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
          "type": "string"
        }
      },
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "id": "TimeZone"
    },
    "Report": {
      "id": "Report",
      "properties": {
        "description": {
          "description": "Free-text description.",
          "type": "string"
        },
        "summary": {
          "readOnly": true,
          "description": "Output only. Summary view of the Report.",
          "$ref": "ReportSummary"
        },
        "type": {
          "description": "Report type.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "TOTAL_COST_OF_OWNERSHIP"
          ],
          "enumDescriptions": [
            "Default Report type.",
            "Total cost of ownership Report type."
          ]
        },
        "state": {
          "description": "Report creation state.",
          "enumDescriptions": [
            "Default Report creation state.",
            "Creating Report.",
            "Successfully created Report.",
            "Failed to create Report."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "SUCCEEDED",
            "FAILED"
          ]
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Last update timestamp.",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Creation timestamp.",
          "type": "string"
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Name of resource.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Report represents a point-in-time rendering of the ReportConfig results."
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation",
      "type": "object",
      "properties": {
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        }
      }
    },
    "AssetFrame": {
      "id": "AssetFrame",
      "description": "Contains data reported from an inventory source on an asset.",
      "properties": {
        "reportTime": {
          "type": "string",
          "description": "The time the data was reported.",
          "format": "google-datetime"
        },
        "virtualMachineDetails": {
          "$ref": "VirtualMachineDetails",
          "description": "Asset information specific for virtual machines."
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "traceToken": {
          "type": "string",
          "description": "Optional. Trace token is optionally provided to assist with debugging and traceability."
        },
        "performanceSamples": {
          "items": {
            "$ref": "PerformanceSample"
          },
          "description": "Asset performance data samples. Samples that are from more than 40 days ago or after tomorrow are ignored.",
          "type": "array"
        },
        "attributes": {
          "description": "Generic asset attributes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "Aggregation": {
      "description": "Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.",
      "id": "Aggregation",
      "type": "object",
      "properties": {
        "sum": {
          "description": "Sum over a numeric field.",
          "$ref": "AggregationSum"
        },
        "histogram": {
          "description": "Creates a bucketed histogram of field values.",
          "$ref": "AggregationHistogram"
        },
        "field": {
          "type": "string",
          "description": "The name of the field on which to aggregate."
        },
        "count": {
          "description": "Count the number of matching objects.",
          "$ref": "AggregationCount"
        },
        "frequency": {
          "$ref": "AggregationFrequency",
          "description": "Creates a frequency distribution of all field values."
        }
      }
    },
    "ReportSummaryChartDataDataPoint": {
      "properties": {
        "value": {
          "description": "The Y-axis value for this data point.",
          "type": "number",
          "format": "double"
        },
        "label": {
          "description": "The X-axis label for this data point.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ReportSummaryChartDataDataPoint",
      "description": "Describes a single data point in the Chart."
    },
    "AggregationResultHistogram": {
      "id": "AggregationResultHistogram",
      "properties": {
        "buckets": {
          "items": {
            "$ref": "AggregationResultHistogramBucket"
          },
          "type": "array",
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity."
        }
      },
      "description": "The result of a bucketed histogram aggregation.",
      "type": "object"
    },
    "PayloadFile": {
      "description": "Payload file for inline import job payload.",
      "properties": {
        "name": {
          "description": "The file name.",
          "type": "string"
        },
        "data": {
          "format": "byte",
          "description": "The file data.",
          "type": "string"
        }
      },
      "id": "PayloadFile",
      "type": "object"
    },
    "ListImportDataFilesResponse": {
      "description": "Response for listing payload files of an import job.",
      "type": "object",
      "properties": {
        "importDataFiles": {
          "description": "The list of import data files.",
          "items": {
            "$ref": "ImportDataFile"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ListImportDataFilesResponse"
    },
    "NfsExport": {
      "id": "NfsExport",
      "properties": {
        "hosts": {
          "items": {
            "type": "string"
          },
          "description": "The hosts or networks to which the export is being shared.",
          "type": "array"
        },
        "exportDirectory": {
          "description": "The directory being exported.",
          "type": "string"
        }
      },
      "description": "NFS export.",
      "type": "object"
    },
    "ImportError": {
      "properties": {
        "errorDetails": {
          "type": "string",
          "description": "The error information."
        },
        "severity": {
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ],
          "description": "The severity of the error.",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "id": "ImportError",
      "description": "A resource that reports the errors encountered while processing an import job.",
      "type": "object"
    },
    "ListReportsResponse": {
      "id": "ListReportsResponse",
      "description": "Response message for listing Reports.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "reports": {
          "type": "array",
          "description": "The list of Reports.",
          "items": {
            "$ref": "Report"
          }
        }
      }
    },
    "ReportAssetFramesResponse": {
      "id": "ReportAssetFramesResponse",
      "type": "object",
      "properties": {},
      "description": "A response to a call to `ReportAssetFrame`."
    },
    "GoogleKubernetesEngineMigrationTarget": {
      "properties": {},
      "description": "GKE migration target.",
      "type": "object",
      "id": "GoogleKubernetesEngineMigrationTarget"
    },
    "SoleTenancyPreferences": {
      "properties": {
        "commitmentPlan": {
          "type": "string",
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR",
            "COMMITMENT_3_YEAR"
          ],
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment.",
            "3 years commitment."
          ]
        },
        "nodeTypes": {
          "type": "array",
          "items": {
            "$ref": "SoleTenantNodeType"
          },
          "description": "A list of sole tenant node types. An empty list means that all possible node types will be considered."
        },
        "cpuOvercommitRatio": {
          "format": "double",
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.",
          "type": "number"
        },
        "hostMaintenancePolicy": {
          "enumDescriptions": [
            "Unspecified host maintenance policy.",
            "Default host maintenance policy.",
            "Restart in place host maintenance policy.",
            "Migrate within node group host maintenance policy."
          ],
          "enum": [
            "HOST_MAINTENANCE_POLICY_UNSPECIFIED",
            "HOST_MAINTENANCE_POLICY_DEFAULT",
            "HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE",
            "HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP"
          ],
          "description": "Sole Tenancy nodes maintenance policy.",
          "type": "string"
        }
      },
      "description": "Preferences concerning Sole Tenancy nodes and VMs.",
      "type": "object",
      "id": "SoleTenancyPreferences"
    },
    "Source": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The full name of the source."
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETING",
            "INVALID"
          ],
          "description": "Output only. The state of the source.",
          "readOnly": true,
          "enumDescriptions": [
            "Unspecified.",
            "The source is active and ready to be used.",
            "In the process of being deleted.",
            "Source is in an invalid state. Asset frames reported to it will be ignored."
          ]
        },
        "pendingFrameCount": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "Output only. Number of frames that are still being processed."
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The timestamp when the source was last updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "priority": {
          "format": "int32",
          "description": "The information confidence of the source. The higher the value, the higher the confidence.",
          "type": "integer"
        },
        "type": {
          "description": "Data source type.",
          "enumDescriptions": [
            "Unspecified",
            "Manually uploaded file (e.g. CSV)",
            "Guest-level info",
            "Inventory-level scan",
            "Third-party owned sources."
          ],
          "enum": [
            "SOURCE_TYPE_UNKNOWN",
            "SOURCE_TYPE_UPLOAD",
            "SOURCE_TYPE_GUEST_OS_SCAN",
            "SOURCE_TYPE_INVENTORY_SCAN",
            "SOURCE_TYPE_CUSTOM"
          ],
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the source was created.",
          "type": "string"
        },
        "errorFrameCount": {
          "description": "Output only. The number of frames that were reported by the source and contained errors.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "isManaged": {
          "description": "If `true`, the source is managed by other service(s).",
          "type": "boolean"
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name."
        },
        "description": {
          "description": "Free-text description.",
          "type": "string"
        }
      },
      "description": "Source represents an object from which asset information is streamed to Migration Center.",
      "type": "object",
      "id": "Source"
    },
    "ReportConfigGroupPreferenceSetAssignment": {
      "description": "Represents a combination of a group with a preference set.",
      "properties": {
        "preferenceSet": {
          "type": "string",
          "description": "Required. Name of the Preference Set."
        },
        "group": {
          "description": "Required. Name of the group.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ReportConfigGroupPreferenceSetAssignment"
    },
    "ListImportJobsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "importJobs": {
          "description": "The list of import jobs.",
          "items": {
            "$ref": "ImportJob"
          },
          "type": "array"
        }
      },
      "description": "A response for listing import jobs.",
      "id": "ListImportJobsResponse",
      "type": "object"
    },
    "NetworkAdapterList": {
      "id": "NetworkAdapterList",
      "description": "List of network adapters.",
      "type": "object",
      "properties": {
        "networkAdapters": {
          "items": {
            "$ref": "NetworkAdapterDetails"
          },
          "type": "array",
          "description": "Network adapter descriptions."
        }
      }
    },
    "FitDescriptor": {
      "id": "FitDescriptor",
      "type": "object",
      "properties": {
        "fitLevel": {
          "description": "Fit level.",
          "enumDescriptions": [
            "Not enough information.",
            "Fit.",
            "No Fit.",
            "Fit with effort."
          ],
          "type": "string",
          "enum": [
            "FIT_LEVEL_UNSPECIFIED",
            "FIT",
            "NO_FIT",
            "REQUIRES_EFFORT"
          ]
        }
      },
      "description": "Describes the fit level of an asset for migration to a specific target."
    },
    "ReportSummaryMachineSeriesAllocation": {
      "id": "ReportSummaryMachineSeriesAllocation",
      "description": "Represents a data point tracking the count of assets allocated for a specific Machine Series.",
      "type": "object",
      "properties": {
        "machineSeries": {
          "description": "The Machine Series (e.g. \"E2\", \"N2\")",
          "$ref": "MachineSeries"
        },
        "allocatedAssetCount": {
          "description": "Count of assets allocated to this machine series.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "RunningProcessList": {
      "description": "List of running guest OS processes.",
      "type": "object",
      "properties": {
        "processes": {
          "type": "array",
          "description": "Running process entries.",
          "items": {
            "$ref": "RunningProcess"
          }
        }
      },
      "id": "RunningProcessList"
    },
    "BatchDeleteAssetsRequest": {
      "description": "A request to delete a list of asset.",
      "type": "object",
      "properties": {
        "allowMissing": {
          "description": "Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`.",
          "type": "boolean"
        },
        "names": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}."
        }
      },
      "id": "BatchDeleteAssetsRequest"
    },
    "PreferenceSet": {
      "id": "PreferenceSet",
      "description": "The preferences that apply to all assets in a given context.",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "Output only. The timestamp when the preference set was created.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "virtualMachinePreferences": {
          "description": "A set of preferences that applies to all virtual machines in the context.",
          "$ref": "VirtualMachinePreferences"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp when the preference set was last updated."
        },
        "description": {
          "type": "string",
          "description": "A description of the preference set."
        },
        "name": {
          "description": "Output only. Name of the preference set.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FstabEntry": {
      "properties": {
        "file": {
          "description": "The mount point for the filesystem.",
          "type": "string"
        },
        "mntops": {
          "type": "string",
          "description": "Mount options associated with the filesystem."
        },
        "spec": {
          "type": "string",
          "description": "The block special device or remote filesystem to be mounted."
        },
        "vfstype": {
          "description": "The type of the filesystem.",
          "type": "string"
        },
        "passno": {
          "description": "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.",
          "type": "integer",
          "format": "int32"
        },
        "freq": {
          "type": "integer",
          "description": "Used by dump to determine which filesystems need to be dumped.",
          "format": "int32"
        }
      },
      "description": "Single fstab entry.",
      "id": "FstabEntry",
      "type": "object"
    },
    "GCSPayloadInfo": {
      "description": "A resource that represents a payload hosted on Google Cloud Storage.",
      "type": "object",
      "id": "GCSPayloadInfo",
      "properties": {
        "format": {
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ],
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false
          ],
          "description": "The import job format.",
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "type": "string"
        },
        "path": {
          "description": "The payload path in Google Cloud Storage.",
          "type": "string"
        }
      }
    },
    "MachinePreferences": {
      "properties": {
        "allowedMachineSeries": {
          "type": "array",
          "description": "Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.",
          "items": {
            "$ref": "MachineSeries"
          }
        }
      },
      "type": "object",
      "id": "MachinePreferences",
      "description": "The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions."
    },
    "ComputeEngineShapeDescriptor": {
      "type": "object",
      "properties": {
        "physicalCoreCount": {
          "description": "Number of physical cores.",
          "type": "integer",
          "format": "int32"
        },
        "storage": {
          "description": "Compute Engine storage. Never empty.",
          "items": {
            "$ref": "ComputeStorageDescriptor"
          },
          "type": "array"
        },
        "series": {
          "type": "string",
          "description": "Compute Engine machine series."
        },
        "machineType": {
          "type": "string",
          "description": "Compute Engine machine type."
        },
        "memoryMb": {
          "description": "Memory in mebibytes.",
          "type": "integer",
          "format": "int32"
        },
        "logicalCoreCount": {
          "description": "Number of logical cores.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "ComputeEngineShapeDescriptor",
      "description": "Compute Engine target shape descriptor."
    },
    "AwsEc2PlatformDetails": {
      "id": "AwsEc2PlatformDetails",
      "description": "AWS EC2 specific details.",
      "properties": {
        "machineTypeLabel": {
          "description": "AWS platform's machine type label.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "The location of the machine in the AWS format."
        }
      },
      "type": "object"
    },
    "PerformanceSample": {
      "properties": {
        "disk": {
          "description": "Disk usage sample.",
          "$ref": "DiskUsageSample"
        },
        "sampleTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Time the sample was collected. If omitted, the frame report time will be used."
        },
        "memory": {
          "description": "Memory usage sample.",
          "$ref": "MemoryUsageSample"
        },
        "cpu": {
          "$ref": "CpuUsageSample",
          "description": "CPU usage sample."
        },
        "network": {
          "description": "Network usage sample.",
          "$ref": "NetworkUsageSample"
        }
      },
      "type": "object",
      "id": "PerformanceSample",
      "description": "Performance data sample."
    },
    "ListErrorFramesResponse": {
      "properties": {
        "errorFrames": {
          "items": {
            "$ref": "ErrorFrame"
          },
          "description": "The list of error frames.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      },
      "type": "object",
      "id": "ListErrorFramesResponse",
      "description": "A response for listing error frames."
    },
    "RunningProcess": {
      "id": "RunningProcess",
      "type": "object",
      "properties": {
        "user": {
          "description": "User running the process.",
          "type": "string"
        },
        "cmdline": {
          "type": "string",
          "description": "Process full command line."
        },
        "attributes": {
          "description": "Process extended attributes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "pid": {
          "type": "string",
          "description": "Process ID.",
          "format": "int64"
        },
        "exePath": {
          "description": "Process binary path.",
          "type": "string"
        }
      },
      "description": "Guest OS running process details."
    },
    "NetworkAdapterDetails": {
      "description": "Details of network adapter.",
      "properties": {
        "adapterType": {
          "description": "Network adapter type (e.g. VMXNET3).",
          "type": "string"
        },
        "macAddress": {
          "type": "string",
          "description": "MAC address."
        },
        "addresses": {
          "$ref": "NetworkAddressList",
          "description": "NetworkAddressList"
        }
      },
      "type": "object",
      "id": "NetworkAdapterDetails"
    },
    "ListReportConfigsResponse": {
      "id": "ListReportConfigsResponse",
      "properties": {
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "reportConfigs": {
          "type": "array",
          "description": "A list of report configs.",
          "items": {
            "$ref": "ReportConfig"
          }
        }
      },
      "description": "Response message for listing report configs.",
      "type": "object"
    },
    "AggregateAssetsValuesRequest": {
      "type": "object",
      "id": "AggregateAssetsValuesRequest",
      "description": "A request to aggregate one or more values.",
      "properties": {
        "aggregations": {
          "items": {
            "$ref": "Aggregation"
          },
          "type": "array",
          "description": "Array of aggregations to perform. Up to 25 aggregations can be defined."
        },
        "filter": {
          "type": "string",
          "description": "The aggregation will be performed on assets that match the provided filter."
        }
      }
    },
    "AggregationResult": {
      "description": "Message describing a result of an aggregation.",
      "properties": {
        "histogram": {
          "$ref": "AggregationResultHistogram"
        },
        "sum": {
          "$ref": "AggregationResultSum"
        },
        "field": {
          "type": "string"
        },
        "frequency": {
          "$ref": "AggregationResultFrequency"
        },
        "count": {
          "$ref": "AggregationResultCount"
        }
      },
      "type": "object",
      "id": "AggregationResult"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        }
      },
      "type": "object"
    },
    "Location": {
      "id": "Location",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        }
      },
      "description": "A resource that represents a Google Cloud location.",
      "type": "object"
    },
    "AggregationSum": {
      "description": "Sum of field values.",
      "type": "object",
      "id": "AggregationSum",
      "properties": {}
    },
    "GuestConfigDetails": {
      "description": "Guest OS config information.",
      "properties": {
        "nfsExports": {
          "description": "NFS exports.",
          "$ref": "NfsExportList"
        },
        "issue": {
          "type": "string",
          "description": "OS issue (typically /etc/issue in Linux)."
        },
        "fstab": {
          "$ref": "FstabEntryList",
          "description": "Mount list (Linux fstab)."
        },
        "hosts": {
          "$ref": "HostsEntryList",
          "description": "Hosts file (/etc/hosts)."
        },
        "selinux": {
          "$ref": "Selinux",
          "description": "SELinux details."
        }
      },
      "id": "GuestConfigDetails",
      "type": "object"
    },
    "VirtualMachineDetails": {
      "id": "VirtualMachineDetails",
      "description": "Details of a VirtualMachine.",
      "properties": {
        "vcenterUrl": {
          "type": "string",
          "description": "vCenter URL used in collection."
        },
        "vcenterFolder": {
          "description": "Folder name in vCenter where asset resides.",
          "type": "string"
        },
        "osName": {
          "description": "The name of the operating system running on the VirtualMachine.",
          "type": "string"
        },
        "vmUuid": {
          "type": "string",
          "description": "Virtual Machine unique identifier."
        },
        "vmName": {
          "description": "Virtual Machine display name.",
          "type": "string"
        },
        "vmDisks": {
          "description": "VM disk details.",
          "$ref": "VirtualMachineDiskDetails"
        },
        "osVersion": {
          "description": "The version of the operating system running on the virtual machine.",
          "type": "string"
        },
        "powerState": {
          "description": "Power state of VM (poweredOn or poweredOff).",
          "type": "string"
        },
        "guestOs": {
          "description": "Guest OS information.",
          "$ref": "GuestOsDetails"
        },
        "platform": {
          "description": "Platform information.",
          "$ref": "PlatformDetails"
        },
        "vcenterVmId": {
          "type": "string",
          "description": "vCenter VM ID."
        },
        "osFamily": {
          "description": "What family the OS belong to, if known.",
          "enum": [
            "OS_FAMILY_UNKNOWN",
            "OS_FAMILY_WINDOWS",
            "OS_FAMILY_LINUX",
            "OS_FAMILY_UNIX"
          ],
          "enumDescriptions": [
            "",
            "Microsoft Windows Server and Desktop.",
            "Various Linux flavors.",
            "Non-Linux Unix flavors."
          ],
          "type": "string"
        },
        "vmArchitecture": {
          "$ref": "VirtualMachineArchitectureDetails",
          "description": "VM architecture details (vendor, cpu arch)."
        },
        "coreCount": {
          "description": "Number of CPU cores in the VirtualMachine. Must be non-negative.",
          "format": "int32",
          "type": "integer"
        },
        "memoryMb": {
          "type": "integer",
          "format": "int32",
          "description": "The amount of memory in the VirtualMachine. Must be non-negative."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "VM creation timestamp."
        },
        "vmNetwork": {
          "$ref": "VirtualMachineNetworkDetails",
          "description": "VM network details."
        }
      },
      "type": "object"
    },
    "ReportSummaryVMWareNode": {
      "properties": {
        "code": {
          "description": "Code to identify VMware Engine node series, e.g. \"ve1-standard-72\". Based on the displayName of cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.nodeTypes",
          "type": "string"
        }
      },
      "description": "A VMWare Engine Node",
      "id": "ReportSummaryVMWareNode",
      "type": "object"
    },
    "ComputeStorageDescriptor": {
      "id": "ComputeStorageDescriptor",
      "description": "Compute Engine storage option descriptor.",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ],
          "description": "Disk type backing the storage.",
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ]
        },
        "sizeGb": {
          "format": "int32",
          "description": "Disk size in GiB.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "RunningServiceList": {
      "id": "RunningServiceList",
      "type": "object",
      "description": "List of running guest OS services.",
      "properties": {
        "services": {
          "type": "array",
          "description": "Running service entries.",
          "items": {
            "$ref": "RunningService"
          }
        }
      }
    },
    "InsightList": {
      "description": "Message containing insights list.",
      "id": "InsightList",
      "type": "object",
      "properties": {
        "insights": {
          "items": {
            "$ref": "Insight"
          },
          "description": "Output only. Insights of the list.",
          "readOnly": true,
          "type": "array"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Update timestamp.",
          "type": "string"
        }
      }
    },
    "BatchUpdateAssetsResponse": {
      "type": "object",
      "description": "Response for updating a list of assets.",
      "id": "BatchUpdateAssetsResponse",
      "properties": {
        "assets": {
          "description": "Update asset content. The content only includes values after field mask being applied.",
          "type": "array",
          "items": {
            "$ref": "Asset"
          }
        }
      }
    },
    "VirtualMachinePreferences": {
      "id": "VirtualMachinePreferences",
      "properties": {
        "regionPreferences": {
          "description": "Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with.",
          "$ref": "RegionPreferences"
        },
        "networkCostParameters": {
          "$ref": "VirtualMachinePreferencesNetworkCostParameters",
          "description": "Optional. Parameters that affect network cost estimations. If not set, default values will be used for the parameters."
        },
        "targetProduct": {
          "enumDescriptions": [
            "Unspecified (default value).",
            "Prefer to migrate to Google Cloud Compute Engine.",
            "Prefer to migrate to Google Cloud VMware Engine.",
            "Prefer to migrate to Google Cloud Sole Tenant Nodes."
          ],
          "type": "string",
          "description": "Target product for assets using this preference set. Specify either target product or business goal, but not both.",
          "enum": [
            "COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY"
          ]
        },
        "commitmentPlan": {
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "COMMITMENT_PLAN_NONE",
            "COMMITMENT_PLAN_ONE_YEAR",
            "COMMITMENT_PLAN_THREE_YEARS"
          ],
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan.",
            "1 year commitment.",
            "3 years commitment."
          ]
        },
        "computeEnginePreferences": {
          "$ref": "ComputeEnginePreferences",
          "description": "Compute Engine preferences concern insights and recommendations for Compute Engine target."
        },
        "sizingOptimizationCustomParameters": {
          "$ref": "VirtualMachinePreferencesSizingOptimizationCustomParameters",
          "description": "Optional. Custom data to use for sizing optimizations. Relevant when SizingOptimizationStrategy is set to \"custom\"."
        },
        "vmwareEnginePreferences": {
          "$ref": "VmwareEnginePreferences",
          "description": "Preferences concerning insights and recommendations for Google Cloud VMware Engine."
        },
        "sizingOptimizationStrategy": {
          "enumDescriptions": [
            "Unspecified (default value).",
            "No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.",
            "Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.",
            "Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs.",
            "Virtual machine sizing will be determined by custom parameters. While not supported in the v1 API, this value is converted to UNSPECIFIED in conversions to the v1 API."
          ],
          "description": "Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.",
          "type": "string",
          "enum": [
            "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED",
            "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE",
            "SIZING_OPTIMIZATION_STRATEGY_MODERATE",
            "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE",
            "SIZING_OPTIMIZATION_STRATEGY_CUSTOM"
          ]
        },
        "soleTenancyPreferences": {
          "$ref": "SoleTenancyPreferences",
          "description": "Preferences concerning Sole Tenant nodes and virtual machines."
        }
      },
      "type": "object",
      "description": "VirtualMachinePreferences enables you to create sets of preferences, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets."
    },
    "ReportSummary": {
      "description": "Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report.",
      "properties": {
        "groupFindings": {
          "type": "array",
          "description": "Findings for each Group included in this report.",
          "items": {
            "$ref": "ReportSummaryGroupFinding"
          }
        },
        "allAssetsStats": {
          "description": "Aggregate statistics for all the assets across all the groups.",
          "$ref": "ReportSummaryAssetAggregateStats"
        }
      },
      "type": "object",
      "id": "ReportSummary"
    },
    "NetworkConnectionList": {
      "id": "NetworkConnectionList",
      "type": "object",
      "description": "Network connection list.",
      "properties": {
        "entries": {
          "description": "Network connection entries.",
          "items": {
            "$ref": "NetworkConnection"
          },
          "type": "array"
        }
      }
    },
    "AssetPerformanceData": {
      "description": "Performance data for an asset.",
      "type": "object",
      "properties": {
        "dailyResourceUsageAggregations": {
          "items": {
            "$ref": "DailyResourceUsageAggregation"
          },
          "type": "array",
          "description": "Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days. Aggregations are sorted from oldest to most recent."
        }
      },
      "id": "AssetPerformanceData"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "id": "Empty",
      "type": "object"
    },
    "UploadFileInfo": {
      "id": "UploadFileInfo",
      "properties": {
        "signedUri": {
          "readOnly": true,
          "description": "Output only. Upload URI for the file.",
          "type": "string"
        },
        "headers": {
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          },
          "description": "Output only. The headers that were used to sign the URL.",
          "type": "object"
        },
        "uriExpirationTime": {
          "format": "google-datetime",
          "description": "Output only. Expiration time of the upload URI.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "description": "A resource that contains a URI to which a data file can be uploaded."
    },
    "ReportSummarySoleTenantFinding": {
      "type": "object",
      "description": "A set of findings that applies to assets destined for Sole-Tenant nodes.",
      "properties": {
        "nodeAllocations": {
          "description": "Set of per-nodetype allocation records",
          "type": "array",
          "items": {
            "$ref": "ReportSummarySoleTenantNodeAllocation"
          }
        },
        "allocatedAssetCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of assets which are allocated"
        },
        "allocatedRegions": {
          "items": {
            "type": "string"
          },
          "description": "Set of regions in which the assets are allocated",
          "type": "array"
        }
      },
      "id": "ReportSummarySoleTenantFinding"
    },
    "VirtualMachinePreferencesNetworkCostParameters": {
      "properties": {
        "estimatedEgressTrafficPercentage": {
          "description": "Optional. An estimated percentage of priced outbound traffic (egress traffic) from the measured outbound traffic. Must be in the interval [0, 100].",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Parameters that affect network cost estimations.",
      "type": "object",
      "id": "VirtualMachinePreferencesNetworkCostParameters"
    },
    "DailyResourceUsageAggregationNetwork": {
      "id": "DailyResourceUsageAggregationNetwork",
      "properties": {
        "egressBps": {
          "description": "Network egress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        },
        "ingressBps": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Network ingress in B/s."
        }
      },
      "type": "object",
      "description": "Statistical aggregation of network usage."
    },
    "ReportSummaryGroupPreferenceSetFinding": {
      "properties": {
        "monthlyCostStorage": {
          "$ref": "Money",
          "description": "Storage monthly cost for this preference set."
        },
        "pricingTrack": {
          "deprecated": true,
          "type": "string",
          "description": "Text describing the pricing track specified for this Preference Set"
        },
        "machinePreferences": {
          "description": "A set of preferences that applies to all machines in the context.",
          "$ref": "VirtualMachinePreferences"
        },
        "soleTenantFinding": {
          "$ref": "ReportSummarySoleTenantFinding",
          "description": "A set of findings that applies to Stole-Tenant machines in the input."
        },
        "monthlyCostOther": {
          "description": "Miscellaneous monthly cost for this preference set.",
          "$ref": "Money"
        },
        "monthlyCostTotal": {
          "$ref": "Money",
          "description": "Total monthly cost for this preference set."
        },
        "description": {
          "description": "Description for the Preference Set.",
          "type": "string"
        },
        "vmwareEngineFinding": {
          "description": "A set of findings that applies to VMWare machines in the input.",
          "$ref": "ReportSummaryVMWareEngineFinding"
        },
        "monthlyCostNetworkEgress": {
          "description": "Network Egress monthly cost for this preference set.",
          "$ref": "Money"
        },
        "displayName": {
          "type": "string",
          "description": "Display Name of the Preference Set"
        },
        "machineFinding": {
          "description": "A set of findings that applies to all machines in the input.",
          "$ref": "ReportSummaryMachineFinding"
        },
        "preferredRegion": {
          "deprecated": true,
          "description": "Target region for this Preference Set",
          "type": "string"
        },
        "monthlyCostOsLicense": {
          "description": "Licensing monthly cost for this preference set.",
          "$ref": "Money"
        },
        "topPriority": {
          "deprecated": true,
          "description": "Text describing the business priority specified for this Preference Set",
          "type": "string"
        },
        "monthlyCostCompute": {
          "$ref": "Money",
          "description": "Compute monthly cost for this preference set."
        }
      },
      "type": "object",
      "id": "ReportSummaryGroupPreferenceSetFinding",
      "description": "Summary Findings for a specific Group/PreferenceSet combination."
    },
    "RunImportJobRequest": {
      "description": "A request to run an import job.",
      "type": "object",
      "id": "RunImportJobRequest",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      }
    },
    "Insight": {
      "id": "Insight",
      "type": "object",
      "description": "An insight about an asset.",
      "properties": {
        "genericInsight": {
          "readOnly": true,
          "$ref": "GenericInsight",
          "description": "Output only. A generic insight about an asset."
        },
        "softwareInsight": {
          "$ref": "SoftwareInsight",
          "description": "Output only. An insight regarding software detected on an asset.",
          "readOnly": true
        },
        "migrationInsight": {
          "description": "Output only. An insight about potential migrations for an asset.",
          "$ref": "MigrationInsight",
          "readOnly": true
        }
      }
    },
    "DailyResourceUsageAggregationDisk": {
      "description": "Statistical aggregation of disk usage.",
      "type": "object",
      "id": "DailyResourceUsageAggregationDisk",
      "properties": {
        "iops": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Disk I/O operations per second."
        }
      }
    },
    "ReportConfig": {
      "type": "object",
      "description": "The groups and associated preference sets on which we can generate reports.",
      "properties": {
        "groupPreferencesetAssignments": {
          "description": "Required. Collection of combinations of groups and preference sets.",
          "items": {
            "$ref": "ReportConfigGroupPreferenceSetAssignment"
          },
          "type": "array"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The timestamp when the resource was created."
        },
        "description": {
          "description": "Free-text description.",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the resource was last updated.",
          "format": "google-datetime"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of resource."
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        }
      },
      "id": "ReportConfig"
    },
    "GuestRuntimeDetails": {
      "properties": {
        "installedApps": {
          "description": "Installed applications information.",
          "$ref": "GuestInstalledApplicationList"
        },
        "openFileList": {
          "description": "Open files information.",
          "$ref": "OpenFileList"
        },
        "networkInfo": {
          "$ref": "RuntimeNetworkInfo",
          "description": "Runtime network information (connections, ports)."
        },
        "lastUptime": {
          "description": "Date since last booted (last uptime date).",
          "$ref": "Date"
        },
        "services": {
          "description": "Running background services.",
          "$ref": "RunningServiceList"
        },
        "machineName": {
          "description": "Machine name.",
          "type": "string"
        },
        "domain": {
          "description": "Domain, e.g. c.stratozone-development.internal.",
          "type": "string"
        },
        "processes": {
          "$ref": "RunningProcessList",
          "description": "Running processes."
        }
      },
      "description": "Guest OS runtime information.",
      "type": "object",
      "id": "GuestRuntimeDetails"
    },
    "FstabEntryList": {
      "id": "FstabEntryList",
      "description": "Fstab content.",
      "type": "object",
      "properties": {
        "entries": {
          "description": "Fstab entries.",
          "type": "array",
          "items": {
            "$ref": "FstabEntry"
          }
        }
      }
    },
    "NetworkConnection": {
      "properties": {
        "localPort": {
          "format": "int32",
          "description": "Local port.",
          "type": "integer"
        },
        "pid": {
          "type": "string",
          "description": "Process ID.",
          "format": "int64"
        },
        "localIpAddress": {
          "description": "Local IP address.",
          "type": "string"
        },
        "protocol": {
          "type": "string",
          "description": "Connection protocol (e.g. TCP/UDP)."
        },
        "processName": {
          "description": "Process or service name.",
          "type": "string"
        },
        "state": {
          "description": "Connection state (e.g. CONNECTED).",
          "type": "string"
        },
        "remoteIpAddress": {
          "description": "Remote IP address.",
          "type": "string"
        },
        "remotePort": {
          "type": "integer",
          "format": "int32",
          "description": "Remote port."
        }
      },
      "type": "object",
      "id": "NetworkConnection"
    },
    "DetectedSoftware": {
      "id": "DetectedSoftware",
      "type": "object",
      "properties": {
        "softwareName": {
          "readOnly": true,
          "description": "Output only. Software's name.",
          "type": "string"
        },
        "softwareFamily": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Software family of the detected software, e.g. Database, SAP family."
        }
      },
      "description": "Information about software detected on an asset."
    },
    "ExecutionReport": {
      "id": "ExecutionReport",
      "properties": {
        "totalRowsCount": {
          "format": "int32",
          "type": "integer",
          "description": "Total number of rows in the import job."
        },
        "executionErrors": {
          "description": "Validation errors encountered during the execution of the import job.",
          "$ref": "ValidationReport"
        },
        "framesReported": {
          "description": "Total number of asset frames reported for the import job.",
          "type": "integer",
          "format": "int32"
        },
        "jobErrors": {
          "type": "array",
          "description": "List of job-level errors. Deprecated, use the job errors under execution_errors instead.",
          "deprecated": true,
          "items": {
            "$ref": "ImportError"
          }
        }
      },
      "type": "object",
      "description": "A resource that reports result of the import job execution."
    },
    "RunningService": {
      "id": "RunningService",
      "properties": {
        "name": {
          "type": "string",
          "description": "Service name."
        },
        "state": {
          "description": "Service state (raw, OS-agnostic).",
          "type": "string"
        },
        "cmdline": {
          "description": "Service command line.",
          "type": "string"
        },
        "exePath": {
          "type": "string",
          "description": "Service binary path."
        },
        "startMode": {
          "description": "Service start mode (raw, OS-agnostic).",
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "Service status."
        },
        "pid": {
          "type": "string",
          "description": "Service pid.",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "Guest OS running service details."
    },
    "Status": {
      "type": "object",
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      }
    },
    "DailyResourceUsageAggregation": {
      "properties": {
        "date": {
          "description": "Aggregation date. Day boundaries are at midnight UTC.",
          "$ref": "Date"
        },
        "cpu": {
          "$ref": "DailyResourceUsageAggregationCPU",
          "description": "CPU usage."
        },
        "network": {
          "$ref": "DailyResourceUsageAggregationNetwork",
          "description": "Network usage."
        },
        "memory": {
          "description": "Memory usage.",
          "$ref": "DailyResourceUsageAggregationMemory"
        },
        "disk": {
          "description": "Disk usage.",
          "$ref": "DailyResourceUsageAggregationDisk"
        }
      },
      "description": "Usage data aggregation for a single day.",
      "type": "object",
      "id": "DailyResourceUsageAggregation"
    },
    "Frames": {
      "id": "Frames",
      "type": "object",
      "properties": {
        "framesData": {
          "items": {
            "$ref": "AssetFrame"
          },
          "description": "A repeated field of asset data.",
          "type": "array"
        }
      },
      "description": "Collection of frame data."
    },
    "Selinux": {
      "id": "Selinux",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Is SELinux enabled."
        },
        "mode": {
          "type": "string",
          "description": "SELinux mode enforcing / permissive."
        }
      },
      "description": "SELinux details.",
      "type": "object"
    },
    "PhysicalPlatformDetails": {
      "id": "PhysicalPlatformDetails",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field."
        }
      },
      "description": "Platform specific details for Physical Machines."
    },
    "ReportSummaryChartData": {
      "description": "Describes a collection of data points rendered as a Chart.",
      "type": "object",
      "properties": {
        "dataPoints": {
          "type": "array",
          "items": {
            "$ref": "ReportSummaryChartDataDataPoint"
          },
          "description": "Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value."
        }
      },
      "id": "ReportSummaryChartData"
    }
  }
}

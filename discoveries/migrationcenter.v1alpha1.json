{
  "batchPath": "batch",
  "baseUrl": "https://migrationcenter.googleapis.com/",
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {}
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {}
    },
    "ListAssetsResponse": {
      "id": "ListAssetsResponse",
      "description": "Response message for listing assets.",
      "type": "object",
      "properties": {
        "assets": {
          "description": "A list of assets.",
          "type": "array",
          "items": {
            "$ref": "Asset"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Asset": {
      "id": "Asset",
      "description": "An asset represents a resource in your environment. Asset types include virtual machines and databases.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The full name of the asset.",
          "readOnly": true,
          "type": "string"
        },
        "title": {
          "description": "Output only. Server generated human readable name of the asset.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the asset was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the asset was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "attributes": {
          "description": "Generic asset attributes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "virtualMachineDetails": {
          "description": "Output only. Asset information specific for virtual machines.",
          "readOnly": true,
          "$ref": "VirtualMachineDetails"
        },
        "databaseDeploymentDetails": {
          "description": "Output only. Asset information specific for database deployments.",
          "readOnly": true,
          "$ref": "DatabaseDeploymentDetails"
        },
        "databaseDetails": {
          "description": "Output only. Asset information specific for logical databases.",
          "readOnly": true,
          "$ref": "DatabaseDetails"
        },
        "insightList": {
          "description": "Output only. The list of insights associated with the asset.",
          "readOnly": true,
          "$ref": "InsightList"
        },
        "performanceData": {
          "description": "Output only. Performance data for the asset.",
          "readOnly": true,
          "$ref": "AssetPerformanceData"
        },
        "sources": {
          "description": "Output only. The list of sources contributing to the asset.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assignedGroups": {
          "description": "Output only. The list of groups that the asset is assigned to.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hidden": {
          "description": "Optional. Indicates if the asset is hidden.",
          "type": "boolean"
        },
        "hideReason": {
          "description": "Optional. An optional reason for marking this asset as hidden.",
          "type": "string"
        },
        "hideTime": {
          "description": "Output only. The timestamp when the asset was marked as hidden.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "VirtualMachineDetails": {
      "id": "VirtualMachineDetails",
      "description": "Details of a VirtualMachine.",
      "type": "object",
      "properties": {
        "coreCount": {
          "description": "Number of CPU cores in the VirtualMachine. Must be non-negative.",
          "type": "integer",
          "format": "int32"
        },
        "memoryMb": {
          "description": "The amount of memory in the VirtualMachine. Must be non-negative.",
          "type": "integer",
          "format": "int32"
        },
        "osName": {
          "description": "The name of the operating system running on the VirtualMachine.",
          "type": "string"
        },
        "vmUuid": {
          "description": "Virtual Machine unique identifier.",
          "type": "string"
        },
        "vmName": {
          "description": "Virtual Machine display name.",
          "type": "string"
        },
        "osFamily": {
          "description": "What family the OS belong to, if known.",
          "type": "string",
          "enumDescriptions": [
            "",
            "Microsoft Windows Server and Desktop.",
            "Various Linux flavors.",
            "Non-Linux Unix flavors."
          ],
          "enum": [
            "OS_FAMILY_UNKNOWN",
            "OS_FAMILY_WINDOWS",
            "OS_FAMILY_LINUX",
            "OS_FAMILY_UNIX"
          ]
        },
        "vmArchitecture": {
          "description": "VM architecture details (vendor, cpu arch).",
          "$ref": "VirtualMachineArchitectureDetails"
        },
        "vmNetwork": {
          "description": "VM network details.",
          "$ref": "VirtualMachineNetworkDetails"
        },
        "vmDisks": {
          "description": "VM disk details.",
          "$ref": "VirtualMachineDiskDetails"
        },
        "guestOs": {
          "description": "Guest OS information.",
          "$ref": "GuestOsDetails"
        },
        "vcenterFolder": {
          "description": "Folder name in vCenter where asset resides.",
          "type": "string"
        },
        "vcenterUrl": {
          "description": "vCenter URL used in collection.",
          "type": "string"
        },
        "vcenterVmId": {
          "description": "vCenter VM ID.",
          "type": "string"
        },
        "powerState": {
          "description": "Power state of VM (poweredOn or poweredOff).",
          "type": "string"
        },
        "platform": {
          "description": "Platform information.",
          "$ref": "PlatformDetails"
        },
        "osVersion": {
          "description": "The version of the operating system running on the virtual machine.",
          "type": "string"
        },
        "createTime": {
          "description": "VM creation timestamp.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "VirtualMachineArchitectureDetails": {
      "id": "VirtualMachineArchitectureDetails",
      "description": "Details of the VM architecture.",
      "type": "object",
      "properties": {
        "cpuArchitecture": {
          "description": "CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc.",
          "type": "string"
        },
        "cpuName": {
          "description": "CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc.",
          "type": "string"
        },
        "cpuManufacturer": {
          "description": "CPU manufacturer, e.g., \"Intel\", \"AMD\".",
          "type": "string"
        },
        "vendor": {
          "description": "Hardware vendor.",
          "type": "string"
        },
        "cpuThreadCount": {
          "description": "Number of CPU threads allocated to the machine.",
          "type": "integer",
          "format": "int32"
        },
        "cpuSocketCount": {
          "description": "Number of processor sockets allocated to the machine.",
          "type": "integer",
          "format": "int32"
        },
        "bios": {
          "description": "BIOS Details.",
          "$ref": "BiosDetails"
        },
        "firmware": {
          "description": "Firmware (BIOS/efi).",
          "type": "string"
        },
        "hyperthreading": {
          "description": "CPU hyperthreading support.",
          "type": "string",
          "enumDescriptions": [
            "Unknown (default value).",
            "Hyperthreading is disabled.",
            "Hyperthreading is enabled."
          ],
          "enum": [
            "HYPER_THREADING_UNSPECIFIED",
            "HYPER_THREADING_DISABLED",
            "HYPER_THREADING_ENABLED"
          ]
        }
      }
    },
    "BiosDetails": {
      "id": "BiosDetails",
      "description": "Details about the BIOS.",
      "type": "object",
      "properties": {
        "biosName": {
          "description": "BIOS name.",
          "type": "string"
        },
        "biosManufacturer": {
          "description": "BIOS manufacturer.",
          "type": "string"
        },
        "biosVersion": {
          "description": "BIOS version.",
          "type": "string"
        },
        "biosReleaseDate": {
          "description": "BIOS release date.",
          "type": "string"
        },
        "smbiosUuid": {
          "description": "SMBIOS UUID.",
          "type": "string"
        }
      }
    },
    "VirtualMachineNetworkDetails": {
      "id": "VirtualMachineNetworkDetails",
      "description": "Details of network adapters and settings.",
      "type": "object",
      "properties": {
        "primaryIpAddress": {
          "description": "IP address of the machine.",
          "type": "string"
        },
        "networkAdapters": {
          "description": "List of network adapters.",
          "$ref": "NetworkAdapterList"
        },
        "defaultGw": {
          "description": "Default gateway address.",
          "type": "string"
        },
        "primaryMacAddress": {
          "description": "MAC address of the machine. This property is used to uniqly identify the machine.",
          "type": "string"
        },
        "publicIpAddress": {
          "description": "Public IP address of the machine.",
          "type": "string"
        }
      }
    },
    "NetworkAdapterList": {
      "id": "NetworkAdapterList",
      "description": "List of network adapters.",
      "type": "object",
      "properties": {
        "networkAdapters": {
          "description": "Network adapter descriptions.",
          "type": "array",
          "items": {
            "$ref": "NetworkAdapterDetails"
          }
        }
      }
    },
    "NetworkAdapterDetails": {
      "id": "NetworkAdapterDetails",
      "description": "Details of network adapter.",
      "type": "object",
      "properties": {
        "adapterType": {
          "description": "Network adapter type (e.g. VMXNET3).",
          "type": "string"
        },
        "macAddress": {
          "description": "MAC address.",
          "type": "string"
        },
        "addresses": {
          "description": "NetworkAddressList",
          "$ref": "NetworkAddressList"
        }
      }
    },
    "NetworkAddressList": {
      "id": "NetworkAddressList",
      "description": "List of allocated/assigned network addresses.",
      "type": "object",
      "properties": {
        "addresses": {
          "description": "Network address entries.",
          "type": "array",
          "items": {
            "$ref": "NetworkAddress"
          }
        }
      }
    },
    "NetworkAddress": {
      "id": "NetworkAddress",
      "description": "Details of network address.",
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "Assigned or configured IP Address.",
          "type": "string"
        },
        "subnetMask": {
          "description": "Subnet mask.",
          "type": "string"
        },
        "bcast": {
          "description": "Broadcast address.",
          "type": "string"
        },
        "fqdn": {
          "description": "Fully qualified domain name.",
          "type": "string"
        },
        "assignment": {
          "description": "Whether DHCP is used to assign addresses.",
          "type": "string",
          "enumDescriptions": [
            "Unknown (default value).",
            "Staticly assigned IP.",
            "Dynamically assigned IP (DHCP)."
          ],
          "enum": [
            "ADDRESS_ASSIGNMENT_UNSPECIFIED",
            "ADDRESS_ASSIGNMENT_STATIC",
            "ADDRESS_ASSIGNMENT_DHCP"
          ]
        }
      }
    },
    "VirtualMachineDiskDetails": {
      "id": "VirtualMachineDiskDetails",
      "description": "Details of VM disks.",
      "type": "object",
      "properties": {
        "hddTotalCapacityBytes": {
          "description": "Disk total Capacity.",
          "type": "string",
          "format": "int64"
        },
        "hddTotalFreeBytes": {
          "description": "Total Disk Free Space.",
          "type": "string",
          "format": "int64"
        },
        "disks": {
          "description": "List of disks.",
          "$ref": "DiskEntryList"
        },
        "lsblkJson": {
          "description": "Raw lsblk output in json.",
          "type": "string"
        }
      }
    },
    "DiskEntryList": {
      "id": "DiskEntryList",
      "description": "VM disks.",
      "type": "object",
      "properties": {
        "entries": {
          "description": "Disk entries.",
          "type": "array",
          "items": {
            "$ref": "DiskEntry"
          }
        }
      }
    },
    "DiskEntry": {
      "id": "DiskEntry",
      "description": "Single disk entry.",
      "type": "object",
      "properties": {
        "totalCapacityBytes": {
          "description": "Disk capacity.",
          "type": "string",
          "format": "int64"
        },
        "totalFreeBytes": {
          "description": "Disk free space.",
          "type": "string",
          "format": "int64"
        },
        "diskLabel": {
          "description": "Disk label.",
          "type": "string"
        },
        "diskLabelType": {
          "description": "Disk label type (e.g. BIOS/GPT)",
          "type": "string"
        },
        "status": {
          "description": "Disk status (e.g. online).",
          "type": "string"
        },
        "interfaceType": {
          "description": "Disks interface type (e.g. SATA/SCSI)",
          "type": "string"
        },
        "partitions": {
          "description": "Partition layout.",
          "$ref": "DiskPartitionList"
        },
        "hwAddress": {
          "description": "Disk hardware address (e.g. 0:1 for SCSI).",
          "type": "string"
        },
        "vmwareConfig": {
          "description": "VMware disk details.",
          "$ref": "VmwareDiskConfig"
        }
      }
    },
    "DiskPartitionList": {
      "id": "DiskPartitionList",
      "description": "Disk partition list.",
      "type": "object",
      "properties": {
        "entries": {
          "description": "Partition entries.",
          "type": "array",
          "items": {
            "$ref": "DiskPartition"
          }
        }
      }
    },
    "DiskPartition": {
      "id": "DiskPartition",
      "description": "Disk Partition details.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Partition type (e.g. BIOS boot).",
          "type": "string"
        },
        "fileSystem": {
          "description": "Partition file system.",
          "type": "string"
        },
        "mountPoint": {
          "description": "Mount pount (Linux/Windows) or drive letter (Windows).",
          "type": "string"
        },
        "capacityBytes": {
          "description": "Partition capacity.",
          "type": "string",
          "format": "int64"
        },
        "freeBytes": {
          "description": "Partition free space.",
          "type": "string",
          "format": "int64"
        },
        "uuid": {
          "description": "Partition UUID.",
          "type": "string"
        },
        "subPartitions": {
          "description": "Sub-partitions.",
          "$ref": "DiskPartitionList"
        }
      }
    },
    "VmwareDiskConfig": {
      "id": "VmwareDiskConfig",
      "description": "VMware disk config details.",
      "type": "object",
      "properties": {
        "backingType": {
          "description": "VMDK backing type.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Flat v1.",
            "Flat v2.",
            "Persistent memory, also known as Non-Volatile Memory (NVM).",
            "Raw Disk Memory v1.",
            "Raw Disk Memory v2.",
            "SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.",
            "SEsparse v1.",
            "SEsparse v1."
          ],
          "enum": [
            "BACKING_TYPE_UNSPECIFIED",
            "BACKING_TYPE_FLAT_V1",
            "BACKING_TYPE_FLAT_V2",
            "BACKING_TYPE_PMEM",
            "BACKING_TYPE_RDM_V1",
            "BACKING_TYPE_RDM_V2",
            "BACKING_TYPE_SESPARSE",
            "BACKING_TYPE_SESPARSE_V1",
            "BACKING_TYPE_SESPARSE_V2"
          ]
        },
        "shared": {
          "description": "Is VMDK shared with other VMs.",
          "type": "boolean"
        },
        "vmdkDiskMode": {
          "description": "VMDK disk mode.",
          "type": "string"
        },
        "rdmCompatibilityMode": {
          "description": "RDM compatibility mode.",
          "type": "string"
        }
      }
    },
    "GuestOsDetails": {
      "id": "GuestOsDetails",
      "description": "Information from Guest-level collections.",
      "type": "object",
      "properties": {
        "config": {
          "description": "OS and app configuration.",
          "$ref": "GuestConfigDetails"
        },
        "runtime": {
          "description": "Runtime information.",
          "$ref": "GuestRuntimeDetails"
        }
      }
    },
    "GuestConfigDetails": {
      "id": "GuestConfigDetails",
      "description": "Guest OS config information.",
      "type": "object",
      "properties": {
        "issue": {
          "description": "OS issue (typically /etc/issue in Linux).",
          "type": "string"
        },
        "fstab": {
          "description": "Mount list (Linux fstab).",
          "$ref": "FstabEntryList"
        },
        "hosts": {
          "description": "Hosts file (/etc/hosts).",
          "$ref": "HostsEntryList"
        },
        "nfsExports": {
          "description": "NFS exports.",
          "$ref": "NfsExportList"
        },
        "selinux": {
          "description": "SELinux details.",
          "$ref": "Selinux"
        }
      }
    },
    "FstabEntryList": {
      "id": "FstabEntryList",
      "description": "Fstab content.",
      "type": "object",
      "properties": {
        "entries": {
          "description": "Fstab entries.",
          "type": "array",
          "items": {
            "$ref": "FstabEntry"
          }
        }
      }
    },
    "FstabEntry": {
      "id": "FstabEntry",
      "description": "Single fstab entry.",
      "type": "object",
      "properties": {
        "spec": {
          "description": "The block special device or remote filesystem to be mounted.",
          "type": "string"
        },
        "file": {
          "description": "The mount point for the filesystem.",
          "type": "string"
        },
        "vfstype": {
          "description": "The type of the filesystem.",
          "type": "string"
        },
        "mntops": {
          "description": "Mount options associated with the filesystem.",
          "type": "string"
        },
        "freq": {
          "description": "Used by dump to determine which filesystems need to be dumped.",
          "type": "integer",
          "format": "int32"
        },
        "passno": {
          "description": "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "HostsEntryList": {
      "id": "HostsEntryList",
      "description": "Hosts content.",
      "type": "object",
      "properties": {
        "entries": {
          "description": "Hosts entries.",
          "type": "array",
          "items": {
            "$ref": "HostsEntry"
          }
        }
      }
    },
    "HostsEntry": {
      "id": "HostsEntry",
      "description": "Single /etc/hosts entry.",
      "type": "object",
      "properties": {
        "ip": {
          "description": "IP (raw, IPv4/6 agnostic).",
          "type": "string"
        },
        "hostNames": {
          "description": "List of host names / aliases.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NfsExportList": {
      "id": "NfsExportList",
      "description": "NFS exports.",
      "type": "object",
      "properties": {
        "entries": {
          "description": "NFS export entries.",
          "type": "array",
          "items": {
            "$ref": "NfsExport"
          }
        }
      }
    },
    "NfsExport": {
      "id": "NfsExport",
      "description": "NFS export.",
      "type": "object",
      "properties": {
        "exportDirectory": {
          "description": "The directory being exported.",
          "type": "string"
        },
        "hosts": {
          "description": "The hosts or networks to which the export is being shared.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Selinux": {
      "id": "Selinux",
      "description": "SELinux details.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Is SELinux enabled.",
          "type": "boolean"
        },
        "mode": {
          "description": "SELinux mode enforcing / permissive.",
          "type": "string"
        }
      }
    },
    "GuestRuntimeDetails": {
      "id": "GuestRuntimeDetails",
      "description": "Guest OS runtime information.",
      "type": "object",
      "properties": {
        "services": {
          "description": "Running background services.",
          "$ref": "RunningServiceList"
        },
        "processes": {
          "description": "Running processes.",
          "$ref": "RunningProcessList"
        },
        "networkInfo": {
          "description": "Runtime network information (connections, ports).",
          "$ref": "RuntimeNetworkInfo"
        },
        "lastUptime": {
          "description": "Date since last booted (last uptime date).",
          "$ref": "Date"
        },
        "domain": {
          "description": "Domain, e.g. c.stratozone-development.internal.",
          "type": "string"
        },
        "machineName": {
          "description": "Machine name.",
          "type": "string"
        },
        "installedApps": {
          "description": "Installed applications information.",
          "$ref": "GuestInstalledApplicationList"
        },
        "openFileList": {
          "description": "Open files information.",
          "$ref": "OpenFileList"
        }
      }
    },
    "RunningServiceList": {
      "id": "RunningServiceList",
      "description": "List of running guest OS services.",
      "type": "object",
      "properties": {
        "services": {
          "description": "Running service entries.",
          "type": "array",
          "items": {
            "$ref": "RunningService"
          }
        }
      }
    },
    "RunningService": {
      "id": "RunningService",
      "description": "Guest OS running service details.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Service name.",
          "type": "string"
        },
        "state": {
          "description": "Service state (raw, OS-agnostic).",
          "type": "string"
        },
        "startMode": {
          "description": "Service start mode (raw, OS-agnostic).",
          "type": "string"
        },
        "status": {
          "description": "Service status.",
          "type": "string"
        },
        "exePath": {
          "description": "Service binary path.",
          "type": "string"
        },
        "cmdline": {
          "description": "Service command line.",
          "type": "string"
        },
        "pid": {
          "description": "Service pid.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "RunningProcessList": {
      "id": "RunningProcessList",
      "description": "List of running guest OS processes.",
      "type": "object",
      "properties": {
        "processes": {
          "description": "Running process entries.",
          "type": "array",
          "items": {
            "$ref": "RunningProcess"
          }
        }
      }
    },
    "RunningProcess": {
      "id": "RunningProcess",
      "description": "Guest OS running process details.",
      "type": "object",
      "properties": {
        "pid": {
          "description": "Process ID.",
          "type": "string",
          "format": "int64"
        },
        "exePath": {
          "description": "Process binary path.",
          "type": "string"
        },
        "cmdline": {
          "description": "Process full command line.",
          "type": "string"
        },
        "user": {
          "description": "User running the process.",
          "type": "string"
        },
        "attributes": {
          "description": "Process extended attributes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RuntimeNetworkInfo": {
      "id": "RuntimeNetworkInfo",
      "description": "Runtime networking information.",
      "type": "object",
      "properties": {
        "netstat": {
          "description": "Netstat (raw, OS-agnostic).",
          "type": "string"
        },
        "connections": {
          "description": "Network connections.",
          "$ref": "NetworkConnectionList"
        },
        "netstatTime": {
          "description": "Netstat time collected.",
          "$ref": "DateTime"
        }
      }
    },
    "NetworkConnectionList": {
      "id": "NetworkConnectionList",
      "description": "Network connection list.",
      "type": "object",
      "properties": {
        "entries": {
          "description": "Network connection entries.",
          "type": "array",
          "items": {
            "$ref": "NetworkConnection"
          }
        }
      }
    },
    "NetworkConnection": {
      "id": "NetworkConnection",
      "type": "object",
      "properties": {
        "protocol": {
          "description": "Connection protocol (e.g. TCP/UDP).",
          "type": "string"
        },
        "localIpAddress": {
          "description": "Local IP address.",
          "type": "string"
        },
        "localPort": {
          "description": "Local port.",
          "type": "integer",
          "format": "int32"
        },
        "remoteIpAddress": {
          "description": "Remote IP address.",
          "type": "string"
        },
        "remotePort": {
          "description": "Remote port.",
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "description": "Connection state (e.g. CONNECTED).",
          "type": "string"
        },
        "pid": {
          "description": "Process ID.",
          "type": "string",
          "format": "int64"
        },
        "processName": {
          "description": "Process or service name.",
          "type": "string"
        }
      }
    },
    "DateTime": {
      "id": "DateTime",
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
      "type": "object",
      "properties": {
        "year": {
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.",
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.",
          "type": "integer",
          "format": "int32"
        },
        "hours": {
          "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "type": "integer",
          "format": "int32"
        },
        "minutes": {
          "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
          "type": "integer",
          "format": "int32"
        },
        "seconds": {
          "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.",
          "type": "integer",
          "format": "int32"
        },
        "nanos": {
          "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
          "type": "integer",
          "format": "int32"
        },
        "utcOffset": {
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.",
          "type": "string",
          "format": "google-duration"
        },
        "timeZone": {
          "description": "Time zone.",
          "$ref": "TimeZone"
        }
      }
    },
    "TimeZone": {
      "id": "TimeZone",
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "type": "object",
      "properties": {
        "id": {
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
          "type": "string"
        },
        "version": {
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
          "type": "string"
        }
      }
    },
    "Date": {
      "id": "Date",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "type": "object",
      "properties": {
        "year": {
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GuestInstalledApplicationList": {
      "id": "GuestInstalledApplicationList",
      "description": "Guest installed application list.",
      "type": "object",
      "properties": {
        "entries": {
          "description": "Application entries.",
          "type": "array",
          "items": {
            "$ref": "GuestInstalledApplication"
          }
        }
      }
    },
    "GuestInstalledApplication": {
      "id": "GuestInstalledApplication",
      "description": "Guest installed application information.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Installed application name.",
          "type": "string"
        },
        "vendor": {
          "description": "Installed application vendor.",
          "type": "string"
        },
        "time": {
          "description": "Date application was installed.",
          "type": "string"
        },
        "path": {
          "description": "Source path.",
          "type": "string"
        },
        "version": {
          "description": "Installed application version.",
          "type": "string"
        },
        "licenses": {
          "description": "License strings associated with the installed application.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OpenFileList": {
      "id": "OpenFileList",
      "description": "Open file list.",
      "type": "object",
      "properties": {
        "entries": {
          "description": "Open file details entries.",
          "type": "array",
          "items": {
            "$ref": "OpenFileDetails"
          }
        }
      }
    },
    "OpenFileDetails": {
      "id": "OpenFileDetails",
      "description": "Open file Information.",
      "type": "object",
      "properties": {
        "command": {
          "description": "Opened file command.",
          "type": "string"
        },
        "user": {
          "description": "Opened file user.",
          "type": "string"
        },
        "fileType": {
          "description": "Opened file file type.",
          "type": "string"
        },
        "filePath": {
          "description": "Opened file file path.",
          "type": "string"
        }
      }
    },
    "PlatformDetails": {
      "id": "PlatformDetails",
      "description": "Information about the platform.",
      "type": "object",
      "properties": {
        "vmwareDetails": {
          "description": "VMware specific details.",
          "$ref": "VmwarePlatformDetails"
        },
        "awsEc2Details": {
          "description": "AWS EC2 specific details.",
          "$ref": "AwsEc2PlatformDetails"
        },
        "azureVmDetails": {
          "description": "Azure VM specific details.",
          "$ref": "AzureVmPlatformDetails"
        },
        "genericDetails": {
          "description": "Generic platform details.",
          "$ref": "GenericPlatformDetails"
        },
        "physicalDetails": {
          "description": "Physical machines platform details.",
          "$ref": "PhysicalPlatformDetails"
        }
      }
    },
    "VmwarePlatformDetails": {
      "id": "VmwarePlatformDetails",
      "description": "VMware specific details.",
      "type": "object",
      "properties": {
        "vcenterVersion": {
          "description": "vCenter version.",
          "type": "string"
        },
        "esxVersion": {
          "description": "ESX version.",
          "type": "string"
        },
        "osid": {
          "description": "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.",
          "type": "string"
        }
      }
    },
    "AwsEc2PlatformDetails": {
      "id": "AwsEc2PlatformDetails",
      "description": "AWS EC2 specific details.",
      "type": "object",
      "properties": {
        "machineTypeLabel": {
          "description": "AWS platform's machine type label.",
          "type": "string"
        },
        "location": {
          "description": "The location of the machine in the AWS format.",
          "type": "string"
        }
      }
    },
    "AzureVmPlatformDetails": {
      "id": "AzureVmPlatformDetails",
      "description": "Azure VM specific details.",
      "type": "object",
      "properties": {
        "machineTypeLabel": {
          "description": "Azure platform's machine type label.",
          "type": "string"
        },
        "location": {
          "description": "The location of the machine in the Azure format.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Azure platform's provisioning state.",
          "type": "string"
        }
      }
    },
    "GenericPlatformDetails": {
      "id": "GenericPlatformDetails",
      "description": "Generic platform details.",
      "type": "object",
      "properties": {
        "location": {
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field.",
          "type": "string"
        }
      }
    },
    "PhysicalPlatformDetails": {
      "id": "PhysicalPlatformDetails",
      "description": "Platform specific details for Physical Machines.",
      "type": "object",
      "properties": {
        "location": {
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field.",
          "type": "string"
        }
      }
    },
    "DatabaseDeploymentDetails": {
      "id": "DatabaseDeploymentDetails",
      "description": "The details of a database deployment asset.",
      "type": "object",
      "properties": {
        "generatedId": {
          "description": "The database deployment generated ID.",
          "type": "string"
        },
        "manualUniqueId": {
          "description": "A manual unique ID set by the user.",
          "type": "string"
        },
        "version": {
          "description": "The database deployment version.",
          "type": "string"
        },
        "edition": {
          "description": "The database deployment edition.",
          "type": "string"
        },
        "topology": {
          "description": "Details of the database deployment topology.",
          "$ref": "DatabaseDeploymentTopology"
        },
        "sqlServer": {
          "description": "Details of a Microsoft SQL Server database deployment.",
          "$ref": "SqlServerDatabaseDeployment"
        },
        "mysql": {
          "description": "Details of a MYSQL database deployment.",
          "$ref": "MysqlDatabaseDeployment"
        },
        "postgresql": {
          "description": "Details of a PostgreSQL database deployment.",
          "$ref": "PostgreSqlDatabaseDeployment"
        },
        "aggregatedStats": {
          "description": "Output only. Aggregated stats for the database deployment.",
          "readOnly": true,
          "$ref": "DatabaseDeploymentDetailsAggregatedStats"
        }
      }
    },
    "DatabaseDeploymentTopology": {
      "id": "DatabaseDeploymentTopology",
      "description": "Details of database deployment's topology.",
      "type": "object",
      "properties": {
        "coreCount": {
          "description": "Optional. Number of total logical cores.",
          "type": "integer",
          "format": "int32"
        },
        "memoryBytes": {
          "description": "Optional. Total memory in bytes.",
          "type": "string",
          "format": "int64"
        },
        "diskAllocatedBytes": {
          "description": "Optional. Disk allocated in bytes.",
          "type": "string",
          "format": "int64"
        },
        "diskUsedBytes": {
          "description": "Optional. Disk used in bytes.",
          "type": "string",
          "format": "int64"
        },
        "coreLimit": {
          "description": "Optional. Number of total logical cores limited by db deployment.",
          "type": "integer",
          "format": "int32"
        },
        "memoryLimitBytes": {
          "description": "Optional. Total memory in bytes limited by db deployment.",
          "type": "string",
          "format": "int64"
        },
        "instances": {
          "description": "Optional. List of database instances.",
          "type": "array",
          "items": {
            "$ref": "DatabaseInstance"
          }
        }
      }
    },
    "DatabaseInstance": {
      "id": "DatabaseInstance",
      "description": "Details of a database instance.",
      "type": "object",
      "properties": {
        "instanceName": {
          "description": "The instance's name.",
          "type": "string"
        },
        "role": {
          "description": "The instance role in the database engine.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Primary.",
            "Secondary.",
            "Arbiter."
          ],
          "enum": [
            "ROLE_UNSPECIFIED",
            "PRIMARY",
            "SECONDARY",
            "ARBITER"
          ]
        }
      }
    },
    "SqlServerDatabaseDeployment": {
      "id": "SqlServerDatabaseDeployment",
      "description": "Specific details for a Microsoft SQL Server database deployment.",
      "type": "object",
      "properties": {
        "features": {
          "description": "Optional. List of SQL Server features.",
          "type": "array",
          "items": {
            "$ref": "SqlServerFeature"
          }
        },
        "serverFlags": {
          "description": "Optional. List of SQL Server server flags.",
          "type": "array",
          "items": {
            "$ref": "SqlServerServerFlag"
          }
        },
        "traceFlags": {
          "description": "Optional. List of SQL Server trace flags.",
          "type": "array",
          "items": {
            "$ref": "SqlServerTraceFlag"
          }
        }
      }
    },
    "SqlServerFeature": {
      "id": "SqlServerFeature",
      "description": "SQL Server feature details.",
      "type": "object",
      "properties": {
        "featureName": {
          "description": "Required. The feature name.",
          "type": "string"
        },
        "enabled": {
          "description": "Required. Field enabled is set when a feature is used on the source deployment.",
          "type": "boolean"
        }
      }
    },
    "SqlServerServerFlag": {
      "id": "SqlServerServerFlag",
      "description": "SQL Server server flag details.",
      "type": "object",
      "properties": {
        "serverFlagName": {
          "description": "Required. The server flag name.",
          "type": "string"
        },
        "value": {
          "description": "Required. The server flag value set by the user.",
          "type": "string"
        },
        "valueInUse": {
          "description": "Required. The server flag actual value. If `value_in_use` is different from `value` it means that either the configuration change was not applied or it is an expected behavior. See SQL Server documentation for more details.",
          "type": "string"
        }
      }
    },
    "SqlServerTraceFlag": {
      "id": "SqlServerTraceFlag",
      "description": "SQL Server trace flag details.",
      "type": "object",
      "properties": {
        "traceFlagName": {
          "description": "Required. The trace flag name.",
          "type": "string"
        },
        "scope": {
          "description": "Required. The trace flag scope.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Off.",
            "Global.",
            "Session."
          ],
          "enum": [
            "SCOPE_UNSPECIFIED",
            "OFF",
            "GLOBAL",
            "SESSION"
          ]
        }
      }
    },
    "MysqlDatabaseDeployment": {
      "id": "MysqlDatabaseDeployment",
      "description": "Specific details for a Mysql database deployment.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Optional. List of MySql properties.",
          "type": "array",
          "items": {
            "$ref": "MySqlProperty"
          }
        },
        "plugins": {
          "description": "Optional. List of MySql plugins.",
          "type": "array",
          "items": {
            "$ref": "MySqlPlugin"
          }
        },
        "resourceGroupsCount": {
          "description": "Optional. Number of resource groups.",
          "type": "integer",
          "format": "int32"
        },
        "variables": {
          "description": "Optional. List of MySql variables.",
          "type": "array",
          "items": {
            "$ref": "MySqlVariable"
          }
        }
      }
    },
    "MySqlProperty": {
      "id": "MySqlProperty",
      "description": "MySql property.",
      "type": "object",
      "properties": {
        "property": {
          "description": "Required. The property name.",
          "type": "string"
        },
        "enabled": {
          "description": "Required. The property is enabled.",
          "type": "boolean"
        },
        "numericValue": {
          "description": "Required. The property numeric value.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "MySqlPlugin": {
      "id": "MySqlPlugin",
      "description": "MySql plugin.",
      "type": "object",
      "properties": {
        "plugin": {
          "description": "Required. The plugin name.",
          "type": "string"
        },
        "version": {
          "description": "Required. The plugin version.",
          "type": "string"
        },
        "enabled": {
          "description": "Required. The plugin is active.",
          "type": "boolean"
        }
      }
    },
    "MySqlVariable": {
      "id": "MySqlVariable",
      "description": "MySql variable.",
      "type": "object",
      "properties": {
        "variable": {
          "description": "Required. The variable name.",
          "type": "string"
        },
        "value": {
          "description": "Required. The variable value.",
          "type": "string"
        },
        "category": {
          "description": "Required. The variable category.",
          "type": "string"
        }
      }
    },
    "PostgreSqlDatabaseDeployment": {
      "id": "PostgreSqlDatabaseDeployment",
      "description": "Specific details for a PostgreSQL database deployment.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Optional. List of PostgreSql properties.",
          "type": "array",
          "items": {
            "$ref": "PostgreSqlProperty"
          }
        },
        "settings": {
          "description": "Optional. List of PostgreSql settings.",
          "type": "array",
          "items": {
            "$ref": "PostgreSqlSetting"
          }
        }
      }
    },
    "PostgreSqlProperty": {
      "id": "PostgreSqlProperty",
      "description": "PostgreSql property.",
      "type": "object",
      "properties": {
        "property": {
          "description": "Required. The property name.",
          "type": "string"
        },
        "enabled": {
          "description": "Required. The property is enabled.",
          "type": "boolean"
        },
        "numericValue": {
          "description": "Required. The property numeric value.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "PostgreSqlSetting": {
      "id": "PostgreSqlSetting",
      "description": "PostgreSql setting.",
      "type": "object",
      "properties": {
        "setting": {
          "description": "Required. The setting name.",
          "type": "string"
        },
        "source": {
          "description": "Required. The setting source.",
          "type": "string"
        },
        "unit": {
          "description": "Optional. The setting unit.",
          "type": "string"
        },
        "boolValue": {
          "description": "Required. The setting boolean value.",
          "type": "boolean"
        },
        "intValue": {
          "description": "Required. The setting int value.",
          "type": "string",
          "format": "int64"
        },
        "realValue": {
          "description": "Required. The setting real value.",
          "type": "number",
          "format": "float"
        },
        "stringValue": {
          "description": "Required. The setting string value. Notice that enum values are stored as strings.",
          "type": "string"
        }
      }
    },
    "DatabaseDeploymentDetailsAggregatedStats": {
      "id": "DatabaseDeploymentDetailsAggregatedStats",
      "description": "Aggregated stats for the database deployment.",
      "type": "object",
      "properties": {
        "databaseCount": {
          "description": "Output only. The number of databases in the deployment.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DatabaseDetails": {
      "id": "DatabaseDetails",
      "description": "Details of a logical database.",
      "type": "object",
      "properties": {
        "databaseName": {
          "description": "The name of the database.",
          "type": "string"
        },
        "parentDatabaseDeployment": {
          "description": "The parent database deployment that contains the logical database.",
          "$ref": "DatabaseDetailsParentDatabaseDeployment"
        },
        "allocatedStorageBytes": {
          "description": "The allocated storage for the database in bytes.",
          "type": "string",
          "format": "int64"
        },
        "schemas": {
          "description": "The database schemas.",
          "type": "array",
          "items": {
            "$ref": "DatabaseSchema"
          }
        }
      }
    },
    "DatabaseDetailsParentDatabaseDeployment": {
      "id": "DatabaseDetailsParentDatabaseDeployment",
      "description": "The identifiers of the parent database deployment.",
      "type": "object",
      "properties": {
        "generatedId": {
          "description": "The parent database deployment generated ID.",
          "type": "string"
        },
        "manualUniqueId": {
          "description": "The parent database deployment optional manual unique ID set by the user.",
          "type": "string"
        }
      }
    },
    "DatabaseSchema": {
      "id": "DatabaseSchema",
      "description": "Details of a database schema.",
      "type": "object",
      "properties": {
        "schemaName": {
          "description": "The name of the schema.",
          "type": "string"
        },
        "tablesSizeBytes": {
          "description": "The total size of tables in bytes.",
          "type": "string",
          "format": "int64"
        },
        "objects": {
          "description": "List of details of objects by category.",
          "type": "array",
          "items": {
            "$ref": "DatabaseObjects"
          }
        },
        "sqlServer": {
          "description": "Details of a SqlServer schema.",
          "$ref": "SqlServerSchemaDetails"
        },
        "mysql": {
          "description": "Details of a Mysql schema.",
          "$ref": "MySqlSchemaDetails"
        },
        "postgresql": {
          "description": "Details of a PostgreSql schema.",
          "$ref": "PostgreSqlSchemaDetails"
        }
      }
    },
    "DatabaseObjects": {
      "id": "DatabaseObjects",
      "description": "Details of a group of database objects.",
      "type": "object",
      "properties": {
        "category": {
          "description": "The category of the objects.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified type.",
            "Table.",
            "Index.",
            "Constraints.",
            "Views.",
            "Source code, e.g. procedures.",
            "Uncategorized objects."
          ],
          "enum": [
            "CATEGORY_UNSPECIFIED",
            "TABLE",
            "INDEX",
            "CONSTRAINTS",
            "VIEWS",
            "SOURCE_CODE",
            "OTHER"
          ]
        },
        "count": {
          "description": "The number of objects.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "SqlServerSchemaDetails": {
      "id": "SqlServerSchemaDetails",
      "description": "Specific details for a SqlServer database.",
      "type": "object",
      "properties": {}
    },
    "MySqlSchemaDetails": {
      "id": "MySqlSchemaDetails",
      "description": "Specific details for a Mysql database.",
      "type": "object",
      "properties": {
        "storageEngines": {
          "description": "Optional. Mysql storage engine tables.",
          "type": "array",
          "items": {
            "$ref": "MySqlStorageEngineDetails"
          }
        }
      }
    },
    "MySqlStorageEngineDetails": {
      "id": "MySqlStorageEngineDetails",
      "description": "Mysql storage engine tables.",
      "type": "object",
      "properties": {
        "engine": {
          "description": "Required. The storage engine.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified storage engine.",
            "InnoDB.",
            "MyISAM.",
            "Memory.",
            "CSV.",
            "Archive.",
            "Blackhole.",
            "NDB.",
            "Merge.",
            "Federated.",
            "Example.",
            "Other."
          ],
          "enum": [
            "ENGINE_UNSPECIFIED",
            "INNODB",
            "MYISAM",
            "MEMORY",
            "CSV",
            "ARCHIVE",
            "BLACKHOLE",
            "NDB",
            "MERGE",
            "FEDERATED",
            "EXAMPLE",
            "OTHER"
          ]
        },
        "tableCount": {
          "description": "Optional. The number of tables.",
          "type": "integer",
          "format": "int32"
        },
        "encryptedTableCount": {
          "description": "Optional. The number of encrypted tables.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PostgreSqlSchemaDetails": {
      "id": "PostgreSqlSchemaDetails",
      "description": "Specific details for a PostgreSql schema.",
      "type": "object",
      "properties": {
        "foreignTablesCount": {
          "description": "Optional. PostgreSql foreign tables.",
          "type": "integer",
          "format": "int32"
        },
        "postgresqlExtensions": {
          "description": "Optional. PostgreSql extensions.",
          "type": "array",
          "items": {
            "$ref": "PostgreSqlExtension"
          }
        }
      }
    },
    "PostgreSqlExtension": {
      "id": "PostgreSqlExtension",
      "description": "PostgreSql extension.",
      "type": "object",
      "properties": {
        "extension": {
          "description": "Required. The extension name.",
          "type": "string"
        },
        "version": {
          "description": "Required. The extension version.",
          "type": "string"
        }
      }
    },
    "InsightList": {
      "id": "InsightList",
      "description": "Message containing insights list.",
      "type": "object",
      "properties": {
        "insights": {
          "description": "Output only. Insights of the list.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Insight"
          }
        },
        "updateTime": {
          "description": "Output only. Update timestamp.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "Insight": {
      "id": "Insight",
      "description": "An insight about an asset.",
      "type": "object",
      "properties": {
        "migrationInsight": {
          "description": "Output only. An insight about potential migrations for an asset.",
          "readOnly": true,
          "$ref": "MigrationInsight"
        },
        "genericInsight": {
          "description": "Output only. A generic insight about an asset.",
          "readOnly": true,
          "$ref": "GenericInsight"
        },
        "softwareInsight": {
          "description": "Output only. An insight regarding software detected on an asset.",
          "readOnly": true,
          "$ref": "SoftwareInsight"
        }
      }
    },
    "MigrationInsight": {
      "id": "MigrationInsight",
      "description": "An insight about potential migrations for an asset.",
      "type": "object",
      "properties": {
        "fit": {
          "description": "Output only. Description of how well the asset this insight is associated with fits the proposed migration.",
          "readOnly": true,
          "$ref": "FitDescriptor"
        },
        "computeEngineTarget": {
          "description": "Output only. A Google Compute Engine target.",
          "readOnly": true,
          "$ref": "ComputeEngineMigrationTarget"
        },
        "vmwareEngineTarget": {
          "description": "Output only. A VMWare Engine target.",
          "readOnly": true,
          "$ref": "VmwareEngineMigrationTarget"
        },
        "gkeTarget": {
          "description": "Output only. A Google Kubernetes Engine target.",
          "readOnly": true,
          "$ref": "GoogleKubernetesEngineMigrationTarget"
        },
        "cloudDatabaseTarget": {
          "description": "Output only. A Cloud database migration target.",
          "readOnly": true,
          "$ref": "CloudDatabaseMigrationTarget"
        },
        "computeEngineSoleTenantTarget": {
          "description": "Output only. A Google Compute Engine Sole Tenant target.",
          "readOnly": true,
          "$ref": "ComputeEngineSoleTenantMigrationTarget"
        },
        "issues": {
          "description": "Output only. Issues associated with this migration.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Issue"
          }
        }
      }
    },
    "FitDescriptor": {
      "id": "FitDescriptor",
      "description": "Describes the fit level of an asset for migration to a specific target.",
      "type": "object",
      "properties": {
        "fitLevel": {
          "description": "Fit level.",
          "type": "string",
          "enumDescriptions": [
            "Not enough information.",
            "Fit.",
            "No Fit.",
            "Fit with effort."
          ],
          "enum": [
            "FIT_LEVEL_UNSPECIFIED",
            "FIT",
            "NO_FIT",
            "REQUIRES_EFFORT"
          ]
        }
      }
    },
    "ComputeEngineMigrationTarget": {
      "id": "ComputeEngineMigrationTarget",
      "description": "Compute engine migration target.",
      "type": "object",
      "properties": {
        "shape": {
          "description": "Description of the suggested shape for the migration target.",
          "$ref": "ComputeEngineShapeDescriptor"
        }
      }
    },
    "ComputeEngineShapeDescriptor": {
      "id": "ComputeEngineShapeDescriptor",
      "description": "Compute Engine target shape descriptor.",
      "type": "object",
      "properties": {
        "memoryMb": {
          "description": "Output only. Memory in mebibytes.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "physicalCoreCount": {
          "description": "Output only. Number of physical cores.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "logicalCoreCount": {
          "description": "Output only. Number of logical cores.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "series": {
          "description": "Output only. Compute Engine machine series.",
          "readOnly": true,
          "type": "string"
        },
        "machineType": {
          "description": "Output only. Compute Engine machine type.",
          "readOnly": true,
          "type": "string"
        },
        "storage": {
          "description": "Output only. Compute Engine storage. Never empty.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "ComputeStorageDescriptor"
          }
        }
      }
    },
    "ComputeStorageDescriptor": {
      "id": "ComputeStorageDescriptor",
      "description": "Compute Engine storage option descriptor.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Disk type backing the storage.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ],
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ]
        },
        "sizeGb": {
          "description": "Disk size in GiB.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "VmwareEngineMigrationTarget": {
      "id": "VmwareEngineMigrationTarget",
      "description": "VMWare engine migration target.",
      "type": "object",
      "properties": {}
    },
    "GoogleKubernetesEngineMigrationTarget": {
      "id": "GoogleKubernetesEngineMigrationTarget",
      "description": "GKE migration target.",
      "type": "object",
      "properties": {}
    },
    "CloudDatabaseMigrationTarget": {
      "id": "CloudDatabaseMigrationTarget",
      "description": "Cloud database migration target.",
      "type": "object",
      "properties": {
        "cloudSqlShape": {
          "description": "Cloud SQL for SQL Server database shape.",
          "$ref": "CloudSqlForSqlServerShape"
        },
        "cloudSqlForMysqlShape": {
          "description": "Cloud SQL for MySQL database shape.",
          "$ref": "CloudSqlForMySqlShape"
        },
        "cloudSqlForPostgresqlShape": {
          "description": "Cloud SQL for Postgres database shape.",
          "$ref": "CloudSqlForPostgreSqlShape"
        }
      }
    },
    "CloudSqlForSqlServerShape": {
      "id": "CloudSqlForSqlServerShape",
      "description": "Cloud SQL for SQL Server database shape.",
      "type": "object",
      "properties": {
        "logicalCoreCount": {
          "description": "Output only. Number of logical cores.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "memoryMb": {
          "description": "Output only. Predicted amount of memory in MiB.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "storage": {
          "description": "Output only. Predicted storage shape.",
          "readOnly": true,
          "$ref": "ComputeStorageDescriptor"
        },
        "backupStorageGb": {
          "description": "Output only. Predicted backup storage size in GiB.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "egressGbPerMonth": {
          "description": "Output only. Predicted Network Out traffic GiB per month.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "version": {
          "description": "Output only. Microsoft SQL Server version to be used on the Cloud SQL for SQL server instance.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified SQL Server version.",
            "The database version is SQL Server 2017 Express.",
            "The database version is SQL Server 2017 Web.",
            "The database version is SQL Server 2017 Standard.",
            "The database version is SQL Server 2017 Enterprise.",
            "The database version is SQL Server 2019 Express.",
            "The database version is SQL Server 2019 Web.",
            "The database version is SQL Server 2019 Standard.",
            "The database version is SQL Server 2019 Enterprise.",
            "The database version is SQL Server 2022 Express.",
            "The database version is SQL Server 2022 Web.",
            "The database version is SQL Server 2022 Standard.",
            "The database version is SQL Server 2022 Enterprise."
          ],
          "enum": [
            "SQL_SERVER_VERSION_UNSPECIFIED",
            "SQL_SERVER_VERSION_2017_EXPRESS",
            "SQL_SERVER_VERSION_2017_WEB",
            "SQL_SERVER_VERSION_2017_STANDARD",
            "SQL_SERVER_VERSION_2017_ENTERPRISE",
            "SQL_SERVER_VERSION_2019_EXPRESS",
            "SQL_SERVER_VERSION_2019_WEB",
            "SQL_SERVER_VERSION_2019_STANDARD",
            "SQL_SERVER_VERSION_2019_ENTERPRISE",
            "SQL_SERVER_VERSION_2022_EXPRESS",
            "SQL_SERVER_VERSION_2022_WEB",
            "SQL_SERVER_VERSION_2022_STANDARD",
            "SQL_SERVER_VERSION_2022_ENTERPRISE"
          ]
        },
        "zoneAvailability": {
          "description": "Output only. Cloud SQL zone availability.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "An unspecified Cloud SQL zone availability.",
            "The instance serves data from only one zone. In case of outage, no failover. Not recommended for production.",
            "The instance can serve data from multiple zones in a region. Highly available. Automatic failover to another zone within your selected region. Recommended for production instances. Increases cost."
          ],
          "enum": [
            "CLOUD_SQL_ZONE_AVAILABILITY_UNSPECIFIED",
            "CLOUD_SQL_ZONE_AVAILABILITY_ZONAL",
            "CLOUD_SQL_ZONE_AVAILABILITY_REGIONAL"
          ]
        },
        "edition": {
          "description": "Output only. Cloud SQL edition.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "An unspecified Cloud SQL edition.",
            "Provides all core capabilities of Cloud SQL and is suitable for applications requiring a balance of performance, availability, and cost.",
            "Provides the best performance and availability to run applications requiring the highest level of availability and performance in addition to the capabilities of the Cloud SQL Enterprise edition. Note: SQL Server is not available in Enterprise Plus edition. For SQL Server, Enterprise will always be recommended."
          ],
          "enum": [
            "CLOUD_SQL_EDITION_UNSPECIFIED",
            "CLOUD_SQL_EDITION_ENTERPRISE",
            "CLOUD_SQL_EDITION_ENTERPRISE_PLUS"
          ]
        }
      }
    },
    "CloudSqlForMySqlShape": {
      "id": "CloudSqlForMySqlShape",
      "description": "Cloud SQL for MySQL database shape.",
      "type": "object",
      "properties": {
        "logicalCoreCount": {
          "description": "Output only. Number of logical cores.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "memoryMb": {
          "description": "Output only. Predicted amount of memory in MiB.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "storage": {
          "description": "Output only. Predicted storage shape.",
          "readOnly": true,
          "$ref": "ComputeStorageDescriptor"
        },
        "backupStorageGb": {
          "description": "Output only. Predicted backup storage size in GiB.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "egressGbPerMonth": {
          "description": "Output only. Predicted Network Out traffic GiB per month.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "zoneAvailability": {
          "description": "Output only. Cloud SQL zone availability.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "An unspecified Cloud SQL zone availability.",
            "The instance serves data from only one zone. In case of outage, no failover. Not recommended for production.",
            "The instance can serve data from multiple zones in a region. Highly available. Automatic failover to another zone within your selected region. Recommended for production instances. Increases cost."
          ],
          "enum": [
            "CLOUD_SQL_ZONE_AVAILABILITY_UNSPECIFIED",
            "CLOUD_SQL_ZONE_AVAILABILITY_ZONAL",
            "CLOUD_SQL_ZONE_AVAILABILITY_REGIONAL"
          ]
        },
        "edition": {
          "description": "Output only. Cloud SQL edition.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "An unspecified Cloud SQL edition.",
            "Provides all core capabilities of Cloud SQL and is suitable for applications requiring a balance of performance, availability, and cost.",
            "Provides the best performance and availability to run applications requiring the highest level of availability and performance in addition to the capabilities of the Cloud SQL Enterprise edition. Note: SQL Server is not available in Enterprise Plus edition. For SQL Server, Enterprise will always be recommended."
          ],
          "enum": [
            "CLOUD_SQL_EDITION_UNSPECIFIED",
            "CLOUD_SQL_EDITION_ENTERPRISE",
            "CLOUD_SQL_EDITION_ENTERPRISE_PLUS"
          ]
        },
        "version": {
          "description": "Output only. MySQL version to be used on the Cloud SQL for MySQL instance.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified MySQL version.",
            "MySQL 5.6.",
            "MySQL 5.7.",
            "MySQL 8.0."
          ],
          "enum": [
            "MY_SQL_VERSION_UNSPECIFIED",
            "MY_SQL_VERSION_5_6",
            "MY_SQL_VERSION_5_7",
            "MY_SQL_VERSION_8_0"
          ]
        }
      }
    },
    "CloudSqlForPostgreSqlShape": {
      "id": "CloudSqlForPostgreSqlShape",
      "description": "Cloud SQL for Postgres database shape.",
      "type": "object",
      "properties": {
        "logicalCoreCount": {
          "description": "Output only. Number of logical cores.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "memoryMb": {
          "description": "Output only. Predicted amount of memory in MiB.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "storage": {
          "description": "Output only. Predicted storage shape.",
          "readOnly": true,
          "$ref": "ComputeStorageDescriptor"
        },
        "backupStorageGb": {
          "description": "Output only. Predicted backup storage size in GiB.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "egressGbPerMonth": {
          "description": "Output only. Predicted Network Out traffic GiB per month.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "zoneAvailability": {
          "description": "Output only. Cloud SQL zone availability.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "An unspecified Cloud SQL zone availability.",
            "The instance serves data from only one zone. In case of outage, no failover. Not recommended for production.",
            "The instance can serve data from multiple zones in a region. Highly available. Automatic failover to another zone within your selected region. Recommended for production instances. Increases cost."
          ],
          "enum": [
            "CLOUD_SQL_ZONE_AVAILABILITY_UNSPECIFIED",
            "CLOUD_SQL_ZONE_AVAILABILITY_ZONAL",
            "CLOUD_SQL_ZONE_AVAILABILITY_REGIONAL"
          ]
        },
        "edition": {
          "description": "Output only. Cloud SQL edition.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "An unspecified Cloud SQL edition.",
            "Provides all core capabilities of Cloud SQL and is suitable for applications requiring a balance of performance, availability, and cost.",
            "Provides the best performance and availability to run applications requiring the highest level of availability and performance in addition to the capabilities of the Cloud SQL Enterprise edition. Note: SQL Server is not available in Enterprise Plus edition. For SQL Server, Enterprise will always be recommended."
          ],
          "enum": [
            "CLOUD_SQL_EDITION_UNSPECIFIED",
            "CLOUD_SQL_EDITION_ENTERPRISE",
            "CLOUD_SQL_EDITION_ENTERPRISE_PLUS"
          ]
        },
        "version": {
          "description": "Output only. PostgreSql version to be used on the Cloud SQL for PostgreSql instance.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified PostgreSQL version.",
            "PostgreSQL 9.6.",
            "PostgreSQL 10",
            "PostgreSQL 11",
            "PostgreSQL 12",
            "PostgreSQL 13",
            "PostgreSQL 14",
            "PostgreSQL 15"
          ],
          "enum": [
            "POSTGRESQL_VERSION_UNSPECIFIED",
            "POSTGRESQL_VERSION_9_6",
            "POSTGRESQL_VERSION_10",
            "POSTGRESQL_VERSION_11",
            "POSTGRESQL_VERSION_12",
            "POSTGRESQL_VERSION_13",
            "POSTGRESQL_VERSION_14",
            "POSTGRESQL_VERSION_15"
          ]
        }
      }
    },
    "ComputeEngineSoleTenantMigrationTarget": {
      "id": "ComputeEngineSoleTenantMigrationTarget",
      "description": "Compute engine sole tenant migration target.",
      "type": "object",
      "properties": {}
    },
    "Issue": {
      "id": "Issue",
      "description": "An issue associated with a migration.",
      "type": "object",
      "properties": {
        "issueCode": {
          "description": "Output only. Unique identifier for this issue type.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Output only. English description of the issue.",
          "readOnly": true,
          "type": "string"
        },
        "compatibilityIssue": {
          "description": "Output only. Details about a compatibility issue.",
          "readOnly": true,
          "$ref": "IssueCompatibilityIssue"
        }
      }
    },
    "IssueCompatibilityIssue": {
      "id": "IssueCompatibilityIssue",
      "description": "Details about a compatibility issue.",
      "type": "object",
      "properties": {
        "category": {
          "description": "Output only. Category of this compatibility issue.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "An unspecified compatibility category.",
            "Database flag compatibility category.",
            "Database feature compatibility category."
          ],
          "enum": [
            "CATEGORY_UNSPECIFIED",
            "DATABASE_FLAG",
            "DATABASE_FEATURE"
          ]
        },
        "associatedObjectType": {
          "description": "Output only. Type of object associated with this migration compatibility issue.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "An unspecified object type.",
            "A database deployment object type.",
            "A logical database object type.",
            "A schema object type."
          ],
          "enum": [
            "OBJECT_TYPE_UNSPECIFIED",
            "DATABASE_DEPLOYMENT",
            "DATABASE",
            "SCHEMA"
          ]
        },
        "associatedObject": {
          "description": "Output only. Name of the object associated with this compatibility issue relative to the relevant asset. Does not represent a fully qualified resource name and is not intended for programmatic use.",
          "readOnly": true,
          "type": "string"
        },
        "associatedValue": {
          "description": "Output only. A string representation of actual value associated with this issue. Some values may contain aggregated information, such as a flag name and the actual value assigned to it.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GenericInsight": {
      "id": "GenericInsight",
      "description": "A generic insight about an asset.",
      "type": "object",
      "properties": {
        "messageId": {
          "description": "Output only. Represents a globally unique message id for this insight, can be used for localization purposes, in case message_code is not yet known by the client use default_message instead.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "defaultMessage": {
          "description": "Output only. In case message_code is not yet known by the client default_message will be the message to be used instead. Text can contain md file style links.",
          "readOnly": true,
          "type": "string"
        },
        "additionalInformation": {
          "description": "Output only. Additional information about the insight, each entry can be a logical entry and must make sense if it is displayed with line breaks between each entry. Text can contain md style links.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SoftwareInsight": {
      "id": "SoftwareInsight",
      "description": "An insight regarding software detected on an asset.",
      "type": "object",
      "properties": {
        "detectedSoftware": {
          "description": "Output only. Information about the detected software.",
          "readOnly": true,
          "$ref": "DetectedSoftware"
        }
      }
    },
    "DetectedSoftware": {
      "id": "DetectedSoftware",
      "description": "Information about software detected on an asset.",
      "type": "object",
      "properties": {
        "softwareName": {
          "description": "Output only. Software's name.",
          "readOnly": true,
          "type": "string"
        },
        "softwareFamily": {
          "description": "Output only. Software family of the detected software, e.g. Database, SAP family.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "AssetPerformanceData": {
      "id": "AssetPerformanceData",
      "description": "Performance data for an asset.",
      "type": "object",
      "properties": {
        "dailyResourceUsageAggregations": {
          "description": "Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days. Aggregations are sorted from oldest to most recent.",
          "type": "array",
          "items": {
            "$ref": "DailyResourceUsageAggregation"
          }
        }
      }
    },
    "DailyResourceUsageAggregation": {
      "id": "DailyResourceUsageAggregation",
      "description": "Usage data aggregation for a single day.",
      "type": "object",
      "properties": {
        "date": {
          "description": "Aggregation date. Day boundaries are at midnight UTC.",
          "$ref": "Date"
        },
        "cpu": {
          "description": "CPU usage.",
          "$ref": "DailyResourceUsageAggregationCPU"
        },
        "memory": {
          "description": "Memory usage.",
          "$ref": "DailyResourceUsageAggregationMemory"
        },
        "network": {
          "description": "Network usage.",
          "$ref": "DailyResourceUsageAggregationNetwork"
        },
        "disk": {
          "description": "Disk usage.",
          "$ref": "DailyResourceUsageAggregationDisk"
        }
      }
    },
    "DailyResourceUsageAggregationCPU": {
      "id": "DailyResourceUsageAggregationCPU",
      "description": "Statistical aggregation of CPU usage.",
      "type": "object",
      "properties": {
        "utilizationPercentage": {
          "description": "CPU utilization percentage.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      }
    },
    "DailyResourceUsageAggregationStats": {
      "id": "DailyResourceUsageAggregationStats",
      "description": "Statistical aggregation of samples for a single resource usage.",
      "type": "object",
      "properties": {
        "average": {
          "description": "Average usage value.",
          "type": "number",
          "format": "float"
        },
        "median": {
          "description": "Median usage value.",
          "type": "number",
          "format": "float"
        },
        "ninteyFifthPercentile": {
          "description": "95th percentile usage value.",
          "type": "number",
          "format": "float"
        },
        "peak": {
          "description": "Peak usage value.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "DailyResourceUsageAggregationMemory": {
      "id": "DailyResourceUsageAggregationMemory",
      "description": "Statistical aggregation of memory usage.",
      "type": "object",
      "properties": {
        "utilizationPercentage": {
          "description": "Memory utilization percentage.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      }
    },
    "DailyResourceUsageAggregationNetwork": {
      "id": "DailyResourceUsageAggregationNetwork",
      "description": "Statistical aggregation of network usage.",
      "type": "object",
      "properties": {
        "ingressBps": {
          "description": "Network ingress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        },
        "egressBps": {
          "description": "Network egress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      }
    },
    "DailyResourceUsageAggregationDisk": {
      "id": "DailyResourceUsageAggregationDisk",
      "description": "Statistical aggregation of disk usage.",
      "type": "object",
      "properties": {
        "iops": {
          "description": "Disk I/O operations per second.",
          "$ref": "DailyResourceUsageAggregationStats"
        },
        "readIops": {
          "description": "Disk read I/O operations per second.",
          "$ref": "DailyResourceUsageAggregationStats"
        },
        "writeIops": {
          "description": "Disk write I/O operations per second.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      }
    },
    "BatchUpdateAssetsRequest": {
      "id": "BatchUpdateAssetsRequest",
      "description": "A request to update a list of assets.",
      "type": "object",
      "properties": {
        "requests": {
          "description": "Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.",
          "type": "array",
          "items": {
            "$ref": "UpdateAssetRequest"
          }
        }
      }
    },
    "UpdateAssetRequest": {
      "id": "UpdateAssetRequest",
      "description": "A request to update an asset.",
      "type": "object",
      "properties": {
        "updateMask": {
          "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
          "type": "string",
          "format": "google-fieldmask"
        },
        "asset": {
          "description": "Required. The resource being updated.",
          "$ref": "Asset"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      }
    },
    "BatchUpdateAssetsResponse": {
      "id": "BatchUpdateAssetsResponse",
      "description": "Response for updating a list of assets.",
      "type": "object",
      "properties": {
        "assets": {
          "description": "Update asset content. The content only includes values after field mask being applied.",
          "type": "array",
          "items": {
            "$ref": "Asset"
          }
        }
      }
    },
    "BatchDeleteAssetsRequest": {
      "id": "BatchDeleteAssetsRequest",
      "description": "A request to delete a list of asset.",
      "type": "object",
      "properties": {
        "names": {
          "description": "Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowMissing": {
          "description": "Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`.",
          "type": "boolean"
        }
      }
    },
    "Frames": {
      "id": "Frames",
      "description": "Collection of frame data.",
      "type": "object",
      "properties": {
        "framesData": {
          "description": "A repeated field of asset data.",
          "type": "array",
          "items": {
            "$ref": "AssetFrame"
          }
        }
      }
    },
    "AssetFrame": {
      "id": "AssetFrame",
      "description": "Contains data reported from an inventory source on an asset.",
      "type": "object",
      "properties": {
        "virtualMachineDetails": {
          "description": "Asset information specific for virtual machines.",
          "$ref": "VirtualMachineDetails"
        },
        "databaseDeploymentDetails": {
          "description": "Asset information specific for database deployments.",
          "$ref": "DatabaseDeploymentDetails"
        },
        "databaseDetails": {
          "description": "Asset information specific for logical databases.",
          "$ref": "DatabaseDetails"
        },
        "reportTime": {
          "description": "The time the data was reported.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "attributes": {
          "description": "Generic asset attributes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "performanceSamples": {
          "description": "Asset performance data samples. Samples that are from more than 40 days ago or after tomorrow are ignored.",
          "type": "array",
          "items": {
            "$ref": "PerformanceSample"
          }
        },
        "traceToken": {
          "description": "Optional. Trace token is optionally provided to assist with debugging and traceability.",
          "type": "string"
        },
        "collectionType": {
          "description": "Optional. Frame collection type, if not specified the collection type will be based on the source type of the source the frame was reported on.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified",
            "Manually uploaded file (e.g. CSV)",
            "Guest-level info",
            "Inventory-level scan",
            "Third-party owned sources.",
            "Discovery clients"
          ],
          "enum": [
            "SOURCE_TYPE_UNKNOWN",
            "SOURCE_TYPE_UPLOAD",
            "SOURCE_TYPE_GUEST_OS_SCAN",
            "SOURCE_TYPE_INVENTORY_SCAN",
            "SOURCE_TYPE_CUSTOM",
            "SOURCE_TYPE_DISCOVERY_CLIENT"
          ]
        }
      }
    },
    "PerformanceSample": {
      "id": "PerformanceSample",
      "description": "Performance data sample.",
      "type": "object",
      "properties": {
        "sampleTime": {
          "description": "Time the sample was collected. If omitted, the frame report time will be used.",
          "type": "string",
          "format": "google-datetime"
        },
        "memory": {
          "description": "Memory usage sample.",
          "$ref": "MemoryUsageSample"
        },
        "cpu": {
          "description": "CPU usage sample.",
          "$ref": "CpuUsageSample"
        },
        "network": {
          "description": "Network usage sample.",
          "$ref": "NetworkUsageSample"
        },
        "disk": {
          "description": "Disk usage sample.",
          "$ref": "DiskUsageSample"
        }
      }
    },
    "MemoryUsageSample": {
      "id": "MemoryUsageSample",
      "description": "Memory usage sample.",
      "type": "object",
      "properties": {
        "utilizedPercentage": {
          "description": "Percentage of system memory utilized. Must be in the interval [0, 100].",
          "type": "number",
          "format": "float"
        }
      }
    },
    "CpuUsageSample": {
      "id": "CpuUsageSample",
      "description": "CPU usage sample.",
      "type": "object",
      "properties": {
        "utilizedPercentage": {
          "description": "Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "NetworkUsageSample": {
      "id": "NetworkUsageSample",
      "description": "Network usage sample. Values are across all network interfaces.",
      "type": "object",
      "properties": {
        "averageIngressBps": {
          "description": "Average network ingress in B/s sampled over a short window. Must be non-negative.",
          "type": "number",
          "format": "float"
        },
        "averageEgressBps": {
          "description": "Average network egress in B/s sampled over a short window. Must be non-negative.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "DiskUsageSample": {
      "id": "DiskUsageSample",
      "description": "Disk usage sample. Values are across all disks.",
      "type": "object",
      "properties": {
        "averageIops": {
          "description": "Average IOPS sampled over a short window. Must be non-negative. Must be equal to the sum of read and write if one of them is positive. if both read and write are zero they are ignored.",
          "type": "number",
          "format": "float"
        },
        "averageReadIops": {
          "description": "Average read IOPS sampled over a short window. Must be non-negative.",
          "type": "number",
          "format": "float"
        },
        "averageWriteIops": {
          "description": "Average write IOPS sampled over a short window. Must be non-negative.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "ReportAssetFramesResponse": {
      "id": "ReportAssetFramesResponse",
      "description": "A response to a call to `ReportAssetFrame`.",
      "type": "object",
      "properties": {}
    },
    "AggregateAssetsValuesRequest": {
      "id": "AggregateAssetsValuesRequest",
      "description": "A request to aggregate one or more values.",
      "type": "object",
      "properties": {
        "aggregations": {
          "description": "Array of aggregations to perform. Up to 25 aggregations can be defined.",
          "type": "array",
          "items": {
            "$ref": "Aggregation"
          }
        },
        "filter": {
          "description": "Optional. The aggregation will be performed on assets that match the provided filter.",
          "type": "string"
        },
        "showHidden": {
          "description": "Optional. When this value is set to 'true' the response will include all assets, including those that are hidden.",
          "type": "boolean"
        }
      }
    },
    "Aggregation": {
      "id": "Aggregation",
      "description": "Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.",
      "type": "object",
      "properties": {
        "field": {
          "description": "The name of the field on which to aggregate.",
          "type": "string"
        },
        "count": {
          "description": "Count the number of matching objects.",
          "$ref": "AggregationCount"
        },
        "sum": {
          "description": "Sum over a numeric field.",
          "$ref": "AggregationSum"
        },
        "histogram": {
          "description": "Creates a bucketed histogram of field values.",
          "$ref": "AggregationHistogram"
        },
        "frequency": {
          "description": "Creates a frequency distribution of all field values.",
          "$ref": "AggregationFrequency"
        }
      }
    },
    "AggregationCount": {
      "id": "AggregationCount",
      "description": "Object count.",
      "type": "object",
      "properties": {}
    },
    "AggregationSum": {
      "id": "AggregationSum",
      "description": "Sum of field values.",
      "type": "object",
      "properties": {}
    },
    "AggregationHistogram": {
      "id": "AggregationHistogram",
      "description": "Histogram of bucketed assets counts by field value.",
      "type": "object",
      "properties": {
        "lowerBounds": {
          "description": "Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "AggregationFrequency": {
      "id": "AggregationFrequency",
      "description": "Frequency distribution of all field values.",
      "type": "object",
      "properties": {}
    },
    "AggregateAssetsValuesResponse": {
      "id": "AggregateAssetsValuesResponse",
      "description": "A response to a request to aggregated assets values.",
      "type": "object",
      "properties": {
        "results": {
          "description": "The aggregation results.",
          "type": "array",
          "items": {
            "$ref": "AggregationResult"
          }
        }
      }
    },
    "AggregationResult": {
      "id": "AggregationResult",
      "description": "Message describing a result of an aggregation.",
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "count": {
          "$ref": "AggregationResultCount"
        },
        "sum": {
          "$ref": "AggregationResultSum"
        },
        "histogram": {
          "$ref": "AggregationResultHistogram"
        },
        "frequency": {
          "$ref": "AggregationResultFrequency"
        }
      }
    },
    "AggregationResultCount": {
      "id": "AggregationResultCount",
      "description": "The result of a count aggregation.",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "AggregationResultSum": {
      "id": "AggregationResultSum",
      "description": "The result of a sum aggregation.",
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "AggregationResultHistogram": {
      "id": "AggregationResultHistogram",
      "description": "The result of a bucketed histogram aggregation.",
      "type": "object",
      "properties": {
        "buckets": {
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "type": "array",
          "items": {
            "$ref": "AggregationResultHistogramBucket"
          }
        }
      }
    },
    "AggregationResultHistogramBucket": {
      "id": "AggregationResultHistogramBucket",
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "type": "object",
      "properties": {
        "lowerBound": {
          "description": "Lower bound - inclusive.",
          "type": "number",
          "format": "double"
        },
        "upperBound": {
          "description": "Upper bound - exclusive.",
          "type": "number",
          "format": "double"
        },
        "count": {
          "description": "Count of items in the bucket.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "AggregationResultFrequency": {
      "id": "AggregationResultFrequency",
      "description": "The result of a frequency distribution aggregation.",
      "type": "object",
      "properties": {
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "ImportJob": {
      "id": "ImportJob",
      "description": "A resource that represents the background job that imports asset frames.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The full name of the import job.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the import job was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the import job was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "completeTime": {
          "description": "Output only. The timestamp when the import job was completed.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "description": "Output only. The state of the import job.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "The import job is pending.",
            "The processing of the import job is ongoing.",
            "The import job processing has completed.",
            "The import job failed to be processed.",
            "The import job is being validated.",
            "The import job contains blocking errors.",
            "The validation of the job completed with no blocking errors."
          ],
          "enum": [
            "IMPORT_JOB_STATE_UNSPECIFIED",
            "IMPORT_JOB_STATE_PENDING",
            "IMPORT_JOB_STATE_RUNNING",
            "IMPORT_JOB_STATE_COMPLETED",
            "IMPORT_JOB_STATE_FAILED",
            "IMPORT_JOB_STATE_VALIDATING",
            "IMPORT_JOB_STATE_FAILED_VALIDATION",
            "IMPORT_JOB_STATE_READY"
          ]
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "validationReport": {
          "description": "Output only. The report with the validation results of the import job.",
          "readOnly": true,
          "$ref": "ValidationReport"
        },
        "executionReport": {
          "description": "Output only. The report with the results of running the import job.",
          "readOnly": true,
          "$ref": "ExecutionReport"
        },
        "inlinePayload": {
          "description": "The payload is included in the request, mainly used for small import jobs.",
          "$ref": "InlinePayloadInfo"
        },
        "gcsPayload": {
          "description": "The payload is in Google Cloud Storage.",
          "deprecated": true,
          "$ref": "GCSPayloadInfo"
        },
        "assetSource": {
          "description": "Required. Reference to a source.",
          "type": "string"
        }
      }
    },
    "ValidationReport": {
      "id": "ValidationReport",
      "description": "A resource that aggregates errors across import job files.",
      "type": "object",
      "properties": {
        "fileValidations": {
          "description": "List of errors found in files.",
          "type": "array",
          "items": {
            "$ref": "FileValidationReport"
          }
        },
        "jobErrors": {
          "description": "List of job level errors.",
          "type": "array",
          "items": {
            "$ref": "ImportError"
          }
        }
      }
    },
    "FileValidationReport": {
      "id": "FileValidationReport",
      "description": "A resource that aggregates the validation errors found in an import job file.",
      "type": "object",
      "properties": {
        "fileName": {
          "description": "The name of the file.",
          "type": "string"
        },
        "rowErrors": {
          "description": "Partial list of rows that encountered validation error.",
          "type": "array",
          "items": {
            "$ref": "ImportRowError"
          }
        },
        "partialReport": {
          "description": "Flag indicating that processing was aborted due to maximum number of errors.",
          "type": "boolean"
        },
        "fileErrors": {
          "description": "List of file level errors.",
          "type": "array",
          "items": {
            "$ref": "ImportError"
          }
        }
      }
    },
    "ImportRowError": {
      "id": "ImportRowError",
      "description": "A resource that reports the import job errors at row level.",
      "type": "object",
      "properties": {
        "rowNumber": {
          "description": "The row number where the error was detected.",
          "deprecated": true,
          "type": "integer",
          "format": "int32"
        },
        "vmName": {
          "description": "The name of the VM in the row.",
          "type": "string"
        },
        "vmUuid": {
          "description": "The VM UUID.",
          "type": "string"
        },
        "assetTitle": {
          "description": "The asset title.",
          "type": "string"
        },
        "errors": {
          "description": "The list of errors detected in the row.",
          "type": "array",
          "items": {
            "$ref": "ImportError"
          }
        },
        "csvError": {
          "description": "Error details for a CSV file.",
          "$ref": "ImportRowErrorCsvErrorDetails"
        },
        "xlsxError": {
          "description": "Error details for an XLSX file.",
          "$ref": "ImportRowErrorXlsxErrorDetails"
        },
        "jsonError": {
          "description": "Error details for a JSON file.",
          "$ref": "ImportRowErrorJsonErrorDetails"
        },
        "archiveError": {
          "description": "Error details for an archive file.",
          "$ref": "ImportRowErrorArchiveErrorDetails"
        }
      }
    },
    "ImportError": {
      "id": "ImportError",
      "description": "A resource that reports the errors encountered while processing an import job.",
      "type": "object",
      "properties": {
        "errorDetails": {
          "description": "The error information.",
          "type": "string"
        },
        "severity": {
          "description": "The severity of the error.",
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ]
        }
      }
    },
    "ImportRowErrorCsvErrorDetails": {
      "id": "ImportRowErrorCsvErrorDetails",
      "description": "Error details for a CSV file.",
      "type": "object",
      "properties": {
        "rowNumber": {
          "description": "The row number where the error was detected.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ImportRowErrorXlsxErrorDetails": {
      "id": "ImportRowErrorXlsxErrorDetails",
      "description": "Error details for an XLSX file.",
      "type": "object",
      "properties": {
        "sheet": {
          "description": "The name of the sheet where the error was detected.",
          "type": "string"
        },
        "rowNumber": {
          "description": "The row number where the error was detected.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ImportRowErrorJsonErrorDetails": {
      "id": "ImportRowErrorJsonErrorDetails",
      "description": "Error details for a JSON file.",
      "type": "object",
      "properties": {}
    },
    "ImportRowErrorArchiveErrorDetails": {
      "id": "ImportRowErrorArchiveErrorDetails",
      "description": "Error details for an archive file.",
      "type": "object",
      "properties": {
        "filePath": {
          "description": "The file path inside the archive where the error was detected.",
          "type": "string"
        },
        "csvError": {
          "description": "Error details for a CSV file.",
          "$ref": "ImportRowErrorCsvErrorDetails"
        }
      }
    },
    "ExecutionReport": {
      "id": "ExecutionReport",
      "description": "A resource that reports result of the import job execution.",
      "type": "object",
      "properties": {
        "framesReported": {
          "description": "Total number of asset frames reported for the import job.",
          "type": "integer",
          "format": "int32"
        },
        "executionErrors": {
          "description": "Validation errors encountered during the execution of the import job.",
          "$ref": "ValidationReport"
        },
        "jobErrors": {
          "description": "List of job-level errors. Deprecated, use the job errors under execution_errors instead.",
          "deprecated": true,
          "type": "array",
          "items": {
            "$ref": "ImportError"
          }
        },
        "totalRowsCount": {
          "description": "Total number of rows in the import job.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "InlinePayloadInfo": {
      "id": "InlinePayloadInfo",
      "description": "A resource that represents the inline import job payload.",
      "type": "object",
      "properties": {
        "format": {
          "description": "The import job format.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the [AWS collection script](https://github.com/GoogleCloudPlatform/aws-to-stratozone-export).",
            "CSV format exported from Azure using the [Azure collection script](https://github.com/GoogleCloudPlatform/azure-to-stratozone-export).",
            "CSV format created manually. For more information, see [Manually create and upload data tables](https://cloud.google.com/migrate/stratozone/docs/import-data-portal).",
            "ZIP file with nested CSV files generated by a database collector."
          ],
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV",
            "IMPORT_JOB_FORMAT_DATABASE_ZIP"
          ]
        },
        "payload": {
          "description": "List of payload files.",
          "type": "array",
          "items": {
            "$ref": "PayloadFile"
          }
        }
      }
    },
    "PayloadFile": {
      "id": "PayloadFile",
      "description": "Payload file for inline import job payload.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The file name.",
          "type": "string"
        },
        "data": {
          "description": "The file data.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "GCSPayloadInfo": {
      "id": "GCSPayloadInfo",
      "description": "A resource that represents a payload hosted on Google Cloud Storage.",
      "type": "object",
      "properties": {
        "format": {
          "description": "The import job format.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the [AWS collection script](https://github.com/GoogleCloudPlatform/aws-to-stratozone-export).",
            "CSV format exported from Azure using the [Azure collection script](https://github.com/GoogleCloudPlatform/azure-to-stratozone-export).",
            "CSV format created manually. For more information, see [Manually create and upload data tables](https://cloud.google.com/migrate/stratozone/docs/import-data-portal).",
            "ZIP file with nested CSV files generated by a database collector."
          ],
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV",
            "IMPORT_JOB_FORMAT_DATABASE_ZIP"
          ]
        },
        "path": {
          "description": "The payload path in Google Cloud Storage.",
          "type": "string"
        }
      }
    },
    "ListImportJobsResponse": {
      "id": "ListImportJobsResponse",
      "description": "A response for listing import jobs.",
      "type": "object",
      "properties": {
        "importJobs": {
          "description": "The list of import jobs.",
          "type": "array",
          "items": {
            "$ref": "ImportJob"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ValidateImportJobRequest": {
      "id": "ValidateImportJobRequest",
      "description": "A request to validate an import job.",
      "type": "object",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      }
    },
    "RunImportJobRequest": {
      "id": "RunImportJobRequest",
      "description": "A request to run an import job.",
      "type": "object",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      }
    },
    "ImportDataFile": {
      "id": "ImportDataFile",
      "description": "A resource that represents a payload file in an import job.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of the file.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Optional. User-friendly display name. Maximum length is 256 characters.",
          "type": "string"
        },
        "format": {
          "description": "Required. The payload format.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the [AWS collection script](https://github.com/GoogleCloudPlatform/aws-to-stratozone-export).",
            "CSV format exported from Azure using the [Azure collection script](https://github.com/GoogleCloudPlatform/azure-to-stratozone-export).",
            "CSV format created manually. For more information, see [Manually create and upload data tables](https://cloud.google.com/migrate/stratozone/docs/import-data-portal).",
            "ZIP file with nested CSV files generated by a database collector."
          ],
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV",
            "IMPORT_JOB_FORMAT_DATABASE_ZIP"
          ]
        },
        "createTime": {
          "description": "Output only. The timestamp when the file was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "description": "Output only. The state of the import data file.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "The data file is being created.",
            "The data file completed initialization."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE"
          ]
        },
        "uploadFileInfo": {
          "description": "Information about a file that is uploaded to a storage service.",
          "$ref": "UploadFileInfo"
        }
      }
    },
    "UploadFileInfo": {
      "id": "UploadFileInfo",
      "description": "A resource that contains a URI to which a data file can be uploaded.",
      "type": "object",
      "properties": {
        "uriExpirationTime": {
          "description": "Output only. Expiration time of the upload URI.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "headers": {
          "description": "Output only. The headers that were used to sign the URL.",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "signedUri": {
          "description": "Output only. Upload URI for the file.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ListImportDataFilesResponse": {
      "id": "ListImportDataFilesResponse",
      "description": "Response for listing payload files of an import job.",
      "type": "object",
      "properties": {
        "importDataFiles": {
          "description": "The list of import data files.",
          "type": "array",
          "items": {
            "$ref": "ImportDataFile"
          }
        },
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListGroupsResponse": {
      "id": "ListGroupsResponse",
      "description": "A response for listing groups.",
      "type": "object",
      "properties": {
        "groups": {
          "description": "The list of Group",
          "type": "array",
          "items": {
            "$ref": "Group"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Group": {
      "id": "Group",
      "description": "A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of the group.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the group was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the group was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "description": "Optional. User-friendly display name.",
          "type": "string"
        },
        "description": {
          "description": "Optional. The description of the group.",
          "type": "string"
        }
      }
    },
    "AddAssetsToGroupRequest": {
      "id": "AddAssetsToGroupRequest",
      "description": "A request to add assets to a group.",
      "type": "object",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        },
        "assets": {
          "description": "Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000.",
          "$ref": "AssetList"
        },
        "allowExisting": {
          "description": "Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.",
          "type": "boolean"
        }
      }
    },
    "AssetList": {
      "id": "AssetList",
      "description": "Lists the asset IDs of all assets.",
      "type": "object",
      "properties": {
        "assetIds": {
          "description": "Required. A list of asset IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RemoveAssetsFromGroupRequest": {
      "id": "RemoveAssetsFromGroupRequest",
      "description": "A request to remove assets from a group.",
      "type": "object",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        },
        "assets": {
          "description": "Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000.",
          "$ref": "AssetList"
        },
        "allowMissing": {
          "description": "Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.",
          "type": "boolean"
        }
      }
    },
    "ListErrorFramesResponse": {
      "id": "ListErrorFramesResponse",
      "description": "A response for listing error frames.",
      "type": "object",
      "properties": {
        "errorFrames": {
          "description": "The list of error frames.",
          "type": "array",
          "items": {
            "$ref": "ErrorFrame"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ErrorFrame": {
      "id": "ErrorFrame",
      "description": "Message representing a frame which failed to be processed due to an error.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The identifier of the ErrorFrame.",
          "readOnly": true,
          "type": "string"
        },
        "violations": {
          "description": "Output only. All the violations that were detected for the frame.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "FrameViolationEntry"
          }
        },
        "originalFrame": {
          "description": "Output only. The frame that was originally reported.",
          "readOnly": true,
          "$ref": "AssetFrame"
        },
        "ingestionTime": {
          "description": "Output only. Frame ingestion time.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "FrameViolationEntry": {
      "id": "FrameViolationEntry",
      "description": "A resource that contains a single violation of a reported `AssetFrame` resource.",
      "type": "object",
      "properties": {
        "field": {
          "description": "The field of the original frame where the violation occurred.",
          "type": "string"
        },
        "violation": {
          "description": "A message describing the violation.",
          "type": "string"
        }
      }
    },
    "ListSourcesResponse": {
      "id": "ListSourcesResponse",
      "description": "Response message for listing sources.",
      "type": "object",
      "properties": {
        "sources": {
          "description": "The list of sources.",
          "type": "array",
          "items": {
            "$ref": "Source"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Source": {
      "id": "Source",
      "description": "Source represents an object from which asset information is streamed to Migration Center.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The full name of the source.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the source was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the source was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "displayName": {
          "description": "User-friendly display name.",
          "type": "string"
        },
        "description": {
          "description": "Free-text description.",
          "type": "string"
        },
        "type": {
          "description": "Data source type.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified",
            "Manually uploaded file (e.g. CSV)",
            "Guest-level info",
            "Inventory-level scan",
            "Third-party owned sources.",
            "Discovery clients"
          ],
          "enum": [
            "SOURCE_TYPE_UNKNOWN",
            "SOURCE_TYPE_UPLOAD",
            "SOURCE_TYPE_GUEST_OS_SCAN",
            "SOURCE_TYPE_INVENTORY_SCAN",
            "SOURCE_TYPE_CUSTOM",
            "SOURCE_TYPE_DISCOVERY_CLIENT"
          ]
        },
        "priority": {
          "description": "The information confidence of the source. The higher the value, the higher the confidence.",
          "type": "integer",
          "format": "int32"
        },
        "isManaged": {
          "description": "If `true`, the source is managed by other service(s).",
          "type": "boolean"
        },
        "pendingFrameCount": {
          "description": "Output only. Number of frames that are still being processed.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "errorFrameCount": {
          "description": "Output only. The number of frames that were reported by the source and contained errors.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "description": "Output only. The state of the source.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "The source is active and ready to be used.",
            "In the process of being deleted.",
            "Source is in an invalid state. Asset frames reported to it will be ignored."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETING",
            "INVALID"
          ]
        }
      }
    },
    "ListPreferenceSetsResponse": {
      "id": "ListPreferenceSetsResponse",
      "description": "Response message for listing preference sets.",
      "type": "object",
      "properties": {
        "preferenceSets": {
          "description": "The list of PreferenceSets",
          "type": "array",
          "items": {
            "$ref": "PreferenceSet"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PreferenceSet": {
      "id": "PreferenceSet",
      "description": "The preferences that apply to all assets in a given context.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Name of the preference set.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the preference set was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the preference set was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "description": {
          "description": "A description of the preference set.",
          "type": "string"
        },
        "regionPreferences": {
          "description": "Optional. Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with. If unspecified, VirtualMachinePreferences.RegionPreferences is used.",
          "$ref": "RegionPreferences"
        },
        "virtualMachinePreferences": {
          "description": "A set of preferences that applies to all virtual machines in the context.",
          "$ref": "VirtualMachinePreferences"
        },
        "databasePreferences": {
          "description": "Optional. A set of preferences that applies to all databases in the context.",
          "$ref": "DatabasePreferences"
        }
      }
    },
    "RegionPreferences": {
      "id": "RegionPreferences",
      "description": "The user preferences relating to target regions.",
      "type": "object",
      "properties": {
        "preferredRegions": {
          "description": "A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VirtualMachinePreferences": {
      "id": "VirtualMachinePreferences",
      "description": "VirtualMachinePreferences enables you to create sets of preferences, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets.",
      "type": "object",
      "properties": {
        "targetProduct": {
          "description": "Target product for assets using this preference set. Specify either target product or business goal, but not both.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value).",
            "Prefer to migrate to Google Cloud Compute Engine.",
            "Prefer to migrate to Google Cloud VMware Engine.",
            "Prefer to migrate to Google Cloud Sole Tenant Nodes."
          ],
          "enum": [
            "COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY"
          ]
        },
        "regionPreferences": {
          "description": "Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with. If PreferenceSet.RegionPreferences is specified, it overrides this field.",
          "$ref": "RegionPreferences"
        },
        "commitmentPlan": {
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan.",
            "1-year regular committed use discount.",
            "3-year regular committed use discount."
          ],
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "COMMITMENT_PLAN_NONE",
            "COMMITMENT_PLAN_ONE_YEAR",
            "COMMITMENT_PLAN_THREE_YEARS"
          ]
        },
        "networkCostParameters": {
          "description": "Optional. Parameters that affect network cost estimations. If not set, default values will be used for the parameters.",
          "$ref": "VirtualMachinePreferencesNetworkCostParameters"
        },
        "sizingOptimizationStrategy": {
          "description": "Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value).",
            "No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.",
            "Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.",
            "Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs.",
            "Virtual machine sizing will be determined by custom parameters. While not supported in the v1 API, this value is converted to UNSPECIFIED in conversions to the v1 API."
          ],
          "enum": [
            "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED",
            "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE",
            "SIZING_OPTIMIZATION_STRATEGY_MODERATE",
            "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE",
            "SIZING_OPTIMIZATION_STRATEGY_CUSTOM"
          ]
        },
        "sizingOptimizationCustomParameters": {
          "description": "Optional. Custom data to use for sizing optimizations. Relevant when SizingOptimizationStrategy is set to \"custom\".",
          "$ref": "VirtualMachinePreferencesSizingOptimizationCustomParameters"
        },
        "computeEnginePreferences": {
          "description": "Compute Engine preferences concern insights and recommendations for Compute Engine target.",
          "$ref": "ComputeEnginePreferences"
        },
        "vmwareEnginePreferences": {
          "description": "Preferences concerning insights and recommendations for Google Cloud VMware Engine.",
          "$ref": "VmwareEnginePreferences"
        },
        "soleTenancyPreferences": {
          "description": "Preferences concerning Sole Tenant nodes and virtual machines.",
          "$ref": "SoleTenancyPreferences"
        }
      }
    },
    "VirtualMachinePreferencesNetworkCostParameters": {
      "id": "VirtualMachinePreferencesNetworkCostParameters",
      "description": "Parameters that affect network cost estimations.",
      "type": "object",
      "properties": {
        "estimatedEgressTrafficPercentage": {
          "description": "Optional. An estimated percentage of priced outbound traffic (egress traffic) from the measured outbound traffic. Must be in the interval [0, 100].",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "VirtualMachinePreferencesSizingOptimizationCustomParameters": {
      "id": "VirtualMachinePreferencesSizingOptimizationCustomParameters",
      "description": "Custom data to use for sizing optimizations.",
      "type": "object",
      "properties": {
        "aggregationMethod": {
          "description": "Optional. Type of statistical aggregation of a resource utilization data, on which to base the sizing metrics.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified aggregation method. Can be used for default value.",
            "Average of utilization data.",
            "Median of utilization data.",
            "95th percentile of utilization data.",
            "Peak of utilization data."
          ],
          "enum": [
            "AGGREGATION_METHOD_UNSPECIFIED",
            "AGGREGATION_METHOD_AVERAGE",
            "AGGREGATION_METHOD_MEDIAN",
            "AGGREGATION_METHOD_NINETY_FIFTH_PERCENTILE",
            "AGGREGATION_METHOD_PEAK"
          ]
        },
        "storageMultiplier": {
          "description": "Optional. Desired increase factor of storage, relative to currently used storage. Must be in the interval [1.0, 2.0] (or 0 for default value).",
          "type": "number",
          "format": "double"
        },
        "cpuUsagePercentage": {
          "description": "Optional. Desired percentage of CPU usage. Must be in the interval [1, 100] (or 0 for default value).",
          "type": "integer",
          "format": "int32"
        },
        "memoryUsagePercentage": {
          "description": "Optional. Desired percentage of memory usage. Must be in the interval [1, 100] (or 0 for default value).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ComputeEnginePreferences": {
      "id": "ComputeEnginePreferences",
      "description": "The user preferences relating to Compute Engine target platform.",
      "type": "object",
      "properties": {
        "persistentDiskType": {
          "description": "Persistent disk type to use. If unspecified (default), all types are considered, based on available usage data.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ],
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ]
        },
        "machinePreferences": {
          "description": "Preferences concerning the machine types to consider on Compute Engine.",
          "$ref": "MachinePreferences"
        },
        "licenseType": {
          "description": "If os_pricing_preferences is specified, it overrides this field. License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value).",
            "Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with.",
            "Bring-your-own-license (BYOL) plan. User provides the OS license."
          ],
          "enum": [
            "LICENSE_TYPE_UNSPECIFIED",
            "LICENSE_TYPE_DEFAULT",
            "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE"
          ]
        }
      }
    },
    "MachinePreferences": {
      "id": "MachinePreferences",
      "description": "The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.",
      "type": "object",
      "properties": {
        "allowedMachineSeries": {
          "description": "Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.",
          "type": "array",
          "items": {
            "$ref": "MachineSeries"
          }
        }
      }
    },
    "MachineSeries": {
      "id": "MachineSeries",
      "description": "A machine series, for a target product (e.g. Compute Engine, Google Cloud VMware Engine).",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code to identify a machine series. Consult this for more details on the available series for Compute Engine: https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison Consult this for more details on the available series for Google Cloud VMware Engine: https://cloud.google.com/vmware-engine/pricing",
          "type": "string"
        }
      }
    },
    "VmwareEnginePreferences": {
      "id": "VmwareEnginePreferences",
      "description": "The user preferences relating to Google Cloud VMware Engine target platform.",
      "type": "object",
      "properties": {
        "cpuOvercommitRatio": {
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment.",
          "type": "number",
          "format": "double"
        },
        "memoryOvercommitRatio": {
          "description": "Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0.",
          "type": "number",
          "format": "double"
        },
        "storageDeduplicationCompressionRatio": {
          "description": "The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.",
          "type": "number",
          "format": "double"
        },
        "commitmentPlan": {
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment (monthly payments).",
            "3 year commitment (monthly payments).",
            "1 year commitment (upfront payment).",
            "3 years commitment (upfront payment)."
          ],
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_3_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_1_YEAR_UPFRONT_PAYMENT",
            "COMMITMENT_3_YEAR_UPFRONT_PAYMENT"
          ]
        }
      }
    },
    "SoleTenancyPreferences": {
      "id": "SoleTenancyPreferences",
      "description": "Preferences concerning Sole Tenancy nodes and VMs.",
      "type": "object",
      "properties": {
        "cpuOvercommitRatio": {
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.",
          "type": "number",
          "format": "double"
        },
        "hostMaintenancePolicy": {
          "description": "Sole Tenancy nodes maintenance policy.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified host maintenance policy.",
            "Default host maintenance policy.",
            "Restart in place host maintenance policy.",
            "Migrate within node group host maintenance policy."
          ],
          "enum": [
            "HOST_MAINTENANCE_POLICY_UNSPECIFIED",
            "HOST_MAINTENANCE_POLICY_DEFAULT",
            "HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE",
            "HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP"
          ]
        },
        "commitmentPlan": {
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1-year regular committed use discount.",
            "3-year regular committed use discount."
          ],
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR",
            "COMMITMENT_3_YEAR"
          ]
        },
        "nodeTypes": {
          "description": "A list of sole tenant node types. An empty list means that all possible node types will be considered.",
          "type": "array",
          "items": {
            "$ref": "SoleTenantNodeType"
          }
        }
      }
    },
    "SoleTenantNodeType": {
      "id": "SoleTenantNodeType",
      "description": "A Sole Tenant node type.",
      "type": "object",
      "properties": {
        "nodeName": {
          "description": "Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes",
          "type": "string"
        }
      }
    },
    "DatabasePreferences": {
      "id": "DatabasePreferences",
      "description": "DatabasePreferences enables you to create sets of preferences for your migrated databases.",
      "type": "object",
      "properties": {
        "mssqlToCloudSqlForSqlServerPreferences": {
          "description": "Optional. Preferences for target SQL Server on Cloud SQL when migrating from source Microsoft SQL server.",
          "$ref": "DatabasePreferencesCloudSqlSqlServer"
        },
        "mysqlToCloudSqlForMysqlPreferences": {
          "description": "Optional. Preferences for target MySQL on Cloud SQL when migrating from source MySQL.",
          "$ref": "DatabasePreferencesCloudSqlMySql"
        },
        "postgresqlToCloudSqlForPostgresqlPreferences": {
          "description": "Optional. Preferences for target PostgreSQL on Cloud SQL when migrating from source PostgreSQL.",
          "$ref": "DatabasePreferencesCloudSqlPostgreSql"
        }
      }
    },
    "DatabasePreferencesCloudSqlSqlServer": {
      "id": "DatabasePreferencesCloudSqlSqlServer",
      "description": "Preferences for SQL Server on Cloud SQL.",
      "type": "object",
      "properties": {
        "common": {
          "description": "Optional. Preferences to Cloud SQL databases.",
          "$ref": "DatabasePreferencesCloudSqlCommon"
        },
        "multithreading": {
          "description": "Optional. Preferences for multithreading support.",
          "type": "string",
          "enumDescriptions": [
            "Same as MULTITHREADING_AUTO_SELECT.",
            "No multithreading support.",
            "Allow multithreading support.",
            "Choose to enable/disable multithreading according to which is lowest cost for your workload."
          ],
          "enum": [
            "MULTITHREADING_UNSPECIFIED",
            "MULTITHREADING_DISABLED",
            "MULTITHREADING_ENABLED",
            "MULTITHREADING_AUTO_SELECT"
          ]
        },
        "versionType": {
          "description": "Optional. Edition of Microsoft SQL version that is used on a Cloud SQL for SQL server instance.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified SQL Server version type.",
            "Version will be deduced from the source asset.",
            "Version will be one of \"Express\" versions.",
            "Version will be one of \"Web\" versions.",
            "Version will be one of \"Standard\" versions.",
            "Version will be one of \"Enterprise\" versions."
          ],
          "enum": [
            "VERSION_TYPE_UNSPECIFIED",
            "VERSION_TYPE_AUTO",
            "VERSION_TYPE_EXPRESS",
            "VERSION_TYPE_WEB",
            "VERSION_TYPE_STANDARD",
            "VERSION_TYPE_ENTERPRISE"
          ]
        }
      }
    },
    "DatabasePreferencesCloudSqlCommon": {
      "id": "DatabasePreferencesCloudSqlCommon",
      "description": "Preferences common to Cloud SQL databases.",
      "type": "object",
      "properties": {
        "backup": {
          "description": "Optional. Preferences for database backups.",
          "$ref": "DatabasePreferencesCloudSqlCommonBackup"
        },
        "commitmentPlan": {
          "description": "Optional. Commitment plan to consider when calculating costs. Only regular CUDs (not flexible) are currently available.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan.",
            "1-year regular committed use discount.",
            "3-year regular committed use discount."
          ],
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "COMMITMENT_PLAN_NONE",
            "COMMITMENT_PLAN_ONE_YEAR",
            "COMMITMENT_PLAN_THREE_YEARS"
          ]
        },
        "zoneAvailability": {
          "description": "Optional. Preferred zone availability.",
          "type": "string",
          "enumDescriptions": [
            "An unspecified Cloud SQL zone availability.",
            "The instance serves data from only one zone. In case of outage, no failover. Not recommended for production.",
            "The instance can serve data from multiple zones in a region. Highly available. Automatic failover to another zone within your selected region. Recommended for production instances. Increases cost."
          ],
          "enum": [
            "CLOUD_SQL_ZONE_AVAILABILITY_UNSPECIFIED",
            "CLOUD_SQL_ZONE_AVAILABILITY_ZONAL",
            "CLOUD_SQL_ZONE_AVAILABILITY_REGIONAL"
          ]
        },
        "sizingOptimizationStrategy": {
          "description": "Optional. Sizing optimization strategy of the database. Currently supported for Cloud SQL are just two values: SIZING_OPTIMIZATION_STRATEGY_MODERATE and SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE. SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED will behave like SIZING_OPTIMIZATION_STRATEGY_MODERATE.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value).",
            "No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.",
            "Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.",
            "Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs.",
            "Virtual machine sizing will be determined by custom parameters. While not supported in the v1 API, this value is converted to UNSPECIFIED in conversions to the v1 API."
          ],
          "enum": [
            "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED",
            "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE",
            "SIZING_OPTIMIZATION_STRATEGY_MODERATE",
            "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE",
            "SIZING_OPTIMIZATION_STRATEGY_CUSTOM"
          ]
        },
        "persistentDiskType": {
          "description": "Optional. Persistent disk type to use. If unspecified, a disk type is recommended based on available usage data. For SQL Server, only SSD is available. For MySQL and PostgreSQL, only STANDARD (HDD) and SSD types are available.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ],
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ]
        },
        "edition": {
          "description": "Optional. Cloud SQL edition. For SQL Server, only Enterprise is available.",
          "type": "string",
          "enumDescriptions": [
            "An unspecified Cloud SQL edition.",
            "Provides all core capabilities of Cloud SQL and is suitable for applications requiring a balance of performance, availability, and cost.",
            "Provides the best performance and availability to run applications requiring the highest level of availability and performance in addition to the capabilities of the Cloud SQL Enterprise edition. Note: SQL Server is not available in Enterprise Plus edition. For SQL Server, Enterprise will always be recommended."
          ],
          "enum": [
            "CLOUD_SQL_EDITION_UNSPECIFIED",
            "CLOUD_SQL_EDITION_ENTERPRISE",
            "CLOUD_SQL_EDITION_ENTERPRISE_PLUS"
          ]
        }
      }
    },
    "DatabasePreferencesCloudSqlCommonBackup": {
      "id": "DatabasePreferencesCloudSqlCommonBackup",
      "description": "Preferences for database backups.",
      "type": "object",
      "properties": {
        "backupMode": {
          "description": "Optional. Mode of automated backups.",
          "type": "string",
          "enumDescriptions": [
            "An unspecified database backup mode.",
            "Automatic backups disabled, no additional charges for storage.",
            "Automatic backups enabled, there will be additional charges for storage."
          ],
          "enum": [
            "BACKUP_MODE_UNSPECIFIED",
            "BACKUP_MODE_DISABLED",
            "BACKUP_MODE_ENABLED"
          ]
        }
      }
    },
    "DatabasePreferencesCloudSqlMySql": {
      "id": "DatabasePreferencesCloudSqlMySql",
      "description": "Preferences for MySQL on Cloud SQL.",
      "type": "object",
      "properties": {
        "common": {
          "description": "Optional. Preferences to Cloud SQL databases.",
          "$ref": "DatabasePreferencesCloudSqlCommon"
        }
      }
    },
    "DatabasePreferencesCloudSqlPostgreSql": {
      "id": "DatabasePreferencesCloudSqlPostgreSql",
      "description": "Preferences for PostgreSQL on Cloud SQL.",
      "type": "object",
      "properties": {
        "common": {
          "description": "Optional. Preferences to Cloud SQL databases.",
          "$ref": "DatabasePreferencesCloudSqlCommon"
        }
      }
    },
    "Settings": {
      "id": "Settings",
      "description": "Describes the Migration Center settings related to the project.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of the resource.",
          "readOnly": true,
          "type": "string"
        },
        "preferenceSet": {
          "description": "The preference set used by default for a project.",
          "type": "string"
        },
        "disableCloudLogging": {
          "description": "Disable Cloud Logging for the Migration Center API. Users are billed for the logs.",
          "type": "boolean"
        }
      }
    },
    "ReportConfig": {
      "id": "ReportConfig",
      "description": "The groups and associated preference sets on which we can generate reports.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Name of resource.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "description": {
          "description": "Free-text description.",
          "type": "string"
        },
        "groupPreferencesetAssignments": {
          "description": "Required. Collection of combinations of groups and preference sets.",
          "type": "array",
          "items": {
            "$ref": "ReportConfigGroupPreferenceSetAssignment"
          }
        }
      }
    },
    "ReportConfigGroupPreferenceSetAssignment": {
      "id": "ReportConfigGroupPreferenceSetAssignment",
      "description": "Represents a combination of a group with a preference set.",
      "type": "object",
      "properties": {
        "group": {
          "description": "Required. Name of the group.",
          "type": "string"
        },
        "preferenceSet": {
          "description": "Required. Name of the Preference Set.",
          "type": "string"
        }
      }
    },
    "ListReportConfigsResponse": {
      "id": "ListReportConfigsResponse",
      "description": "Response message for listing report configs.",
      "type": "object",
      "properties": {
        "reportConfigs": {
          "description": "A list of report configs.",
          "type": "array",
          "items": {
            "$ref": "ReportConfig"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Report": {
      "id": "Report",
      "description": "Report represents a point-in-time rendering of the ReportConfig results.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Name of resource.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Creation timestamp.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Last update timestamp.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "description": {
          "description": "Free-text description.",
          "type": "string"
        },
        "type": {
          "description": "Report type.",
          "type": "string",
          "enumDescriptions": [
            "Default report type.",
            "Total cost of ownership report type."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TOTAL_COST_OF_OWNERSHIP"
          ]
        },
        "state": {
          "description": "Report creation state.",
          "type": "string",
          "enumDescriptions": [
            "Default Report creation state.",
            "Creating Report.",
            "Successfully created Report.",
            "Failed to create Report."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "SUCCEEDED",
            "FAILED"
          ]
        },
        "summary": {
          "description": "Output only. Summary view of the Report.",
          "readOnly": true,
          "$ref": "ReportSummary"
        }
      }
    },
    "ReportSummary": {
      "id": "ReportSummary",
      "description": "Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report.",
      "type": "object",
      "properties": {
        "allAssetsStats": {
          "description": "Aggregate statistics for unique assets across all the groups.",
          "$ref": "ReportSummaryAssetAggregateStats"
        },
        "virtualMachineStats": {
          "description": "Output only. Aggregate statistics for unique virtual machine assets across all the groups.",
          "readOnly": true,
          "$ref": "ReportSummaryAssetAggregateStats"
        },
        "databaseStats": {
          "description": "Output only. Aggregate statistics for unique database assets across all the groups.",
          "readOnly": true,
          "$ref": "ReportSummaryAssetAggregateStats"
        },
        "groupFindings": {
          "description": "Findings for each Group included in this report.",
          "type": "array",
          "items": {
            "$ref": "ReportSummaryGroupFinding"
          }
        }
      }
    },
    "ReportSummaryAssetAggregateStats": {
      "id": "ReportSummaryAssetAggregateStats",
      "description": "Aggregate statistics for a collection of assets.",
      "type": "object",
      "properties": {
        "totalMemoryBytes": {
          "description": "Sum of the memory in bytes of all the assets in this collection.",
          "type": "string",
          "format": "int64"
        },
        "totalStorageBytes": {
          "description": "Sum of persistent storage in bytes of all the assets in this collection.",
          "type": "string",
          "format": "int64"
        },
        "totalCores": {
          "description": "Sum of the CPU core count of all the assets in this collection.",
          "type": "string",
          "format": "int64"
        },
        "totalAssets": {
          "description": "Count of the number of unique assets in this collection.",
          "type": "string",
          "format": "int64"
        },
        "memoryUtilization": {
          "description": "Total memory split into Used/Free buckets.",
          "deprecated": true,
          "$ref": "ReportSummaryChartData"
        },
        "memoryUtilizationChart": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryUtilizationChartData"
        },
        "storageUtilization": {
          "description": "Total storage split into Used/Free buckets.",
          "deprecated": true,
          "$ref": "ReportSummaryChartData"
        },
        "storageUtilizationChart": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryUtilizationChartData"
        },
        "assetAge": {
          "description": "Count of assets grouped by age.",
          "deprecated": true,
          "$ref": "ReportSummaryChartData"
        },
        "operatingSystem": {
          "description": "Count of assets grouped by Operating System families. Only present for virtual machines.",
          "$ref": "ReportSummaryChartData"
        },
        "coreCountHistogram": {
          "description": "Histogram showing a distribution of CPU core counts.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "memoryBytesHistogram": {
          "description": "Histogram showing a distribution of memory sizes.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "storageBytesHistogram": {
          "description": "Histogram showing a distribution of storage sizes.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "databaseTypes": {
          "description": "Output only. Count of assets grouped by database type. Keys here are taken from DatabaseType enum. Only present for databases.",
          "readOnly": true,
          "$ref": "ReportSummaryChartData"
        }
      }
    },
    "ReportSummaryChartData": {
      "id": "ReportSummaryChartData",
      "description": "Describes a collection of data points rendered as a Chart.",
      "type": "object",
      "properties": {
        "dataPoints": {
          "description": "Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value.",
          "type": "array",
          "items": {
            "$ref": "ReportSummaryChartDataDataPoint"
          }
        }
      }
    },
    "ReportSummaryChartDataDataPoint": {
      "id": "ReportSummaryChartDataDataPoint",
      "description": "Describes a single data point in the Chart.",
      "type": "object",
      "properties": {
        "label": {
          "description": "The X-axis label for this data point.",
          "type": "string"
        },
        "value": {
          "description": "The Y-axis value for this data point.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ReportSummaryUtilizationChartData": {
      "id": "ReportSummaryUtilizationChartData",
      "description": "Utilization Chart is a specific type of visualization which displays a metric classified into \"Used\" and \"Free\" buckets.",
      "type": "object",
      "properties": {
        "used": {
          "description": "Aggregate value which falls into the \"Used\" bucket.",
          "type": "string",
          "format": "int64"
        },
        "free": {
          "description": "Aggregate value which falls into the \"Free\" bucket.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ReportSummaryHistogramChartData": {
      "id": "ReportSummaryHistogramChartData",
      "description": "A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.",
      "type": "object",
      "properties": {
        "buckets": {
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "type": "array",
          "items": {
            "$ref": "ReportSummaryHistogramChartDataBucket"
          }
        }
      }
    },
    "ReportSummaryHistogramChartDataBucket": {
      "id": "ReportSummaryHistogramChartDataBucket",
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "type": "object",
      "properties": {
        "lowerBound": {
          "description": "Lower bound - inclusive.",
          "type": "string",
          "format": "int64"
        },
        "upperBound": {
          "description": "Upper bound - exclusive.",
          "type": "string",
          "format": "int64"
        },
        "count": {
          "description": "Count of items in the bucket.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ReportSummaryGroupFinding": {
      "id": "ReportSummaryGroupFinding",
      "description": "Summary Findings for a specific Group.",
      "type": "object",
      "properties": {
        "group": {
          "description": "Output only. Full name of the group.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Display Name for this group finding.",
          "type": "string"
        },
        "description": {
          "description": "Description for this group finding.",
          "type": "string"
        },
        "assetAggregateStats": {
          "description": "Summary statistics for all the assets in this group.",
          "$ref": "ReportSummaryAssetAggregateStats"
        },
        "assetType": {
          "description": "Output only. Asset type for the group finding.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unknown asset type.",
            "Virtual Machine asset type",
            "Database asset type"
          ],
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "VIRTUAL_MACHINE",
            "DATABASE"
          ]
        },
        "databaseType": {
          "description": "Output only. Source asset database type for the group finding. Only present for databases.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unknown database type.",
            "SQL Server database.",
            "MySQL database.",
            "Postgres database."
          ],
          "enum": [
            "DATABASE_TYPE_UNSPECIFIED",
            "SQL_SERVER",
            "MYSQL",
            "POSTGRES"
          ]
        },
        "overlappingAssetCount": {
          "description": "This field is deprecated, do not rely on it having a value.",
          "deprecated": true,
          "type": "string",
          "format": "int64"
        },
        "preferenceSetFindings": {
          "description": "Findings for each of the PreferenceSets for this group.",
          "type": "array",
          "items": {
            "$ref": "ReportSummaryGroupPreferenceSetFinding"
          }
        }
      }
    },
    "ReportSummaryGroupPreferenceSetFinding": {
      "id": "ReportSummaryGroupPreferenceSetFinding",
      "description": "Summary Findings for a specific Group/PreferenceSet combination.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display Name of the Preference Set",
          "type": "string"
        },
        "description": {
          "description": "Description for the Preference Set.",
          "type": "string"
        },
        "preferredRegion": {
          "description": "Target region for this Preference Set",
          "deprecated": true,
          "type": "string"
        },
        "pricingTrack": {
          "description": "Text describing the pricing track specified for this Preference Set",
          "deprecated": true,
          "type": "string"
        },
        "topPriority": {
          "description": "Text describing the business priority specified for this Preference Set",
          "deprecated": true,
          "type": "string"
        },
        "machinePreferences": {
          "description": "A set of preferences that applies to all machines in the context.",
          "$ref": "VirtualMachinePreferences"
        },
        "preferenceSet": {
          "description": "Output only. A copy of the preference set used for this finding.",
          "readOnly": true,
          "$ref": "PreferenceSet"
        },
        "monthlyCostTotal": {
          "description": "Total monthly cost for this preference set.",
          "$ref": "Money"
        },
        "monthlyCostCompute": {
          "description": "Compute monthly cost for this preference set.",
          "$ref": "Money"
        },
        "monthlyCostOsLicense": {
          "description": "Operating system licensing monthly cost for this preference set. Only present for virtual machines.",
          "$ref": "Money"
        },
        "monthlyCostNetworkEgress": {
          "description": "Network Egress monthly cost for this preference set. Only present for virtual machines.",
          "$ref": "Money"
        },
        "monthlyCostStorage": {
          "description": "Storage monthly cost for this preference set.",
          "$ref": "Money"
        },
        "monthlyCostDatabaseBackup": {
          "description": "Output only. Backup monthly cost for this preference set. Only present for databases.",
          "readOnly": true,
          "$ref": "Money"
        },
        "monthlyCostDatabaseLicensing": {
          "description": "Output only. Database licensing monthly cost for this preference set. For virtual machines denotes the cost of licenses for hosted databases.",
          "readOnly": true,
          "$ref": "Money"
        },
        "monthlyCostOther": {
          "description": "Miscellaneous monthly cost for this preference set.",
          "$ref": "Money"
        },
        "machineFinding": {
          "description": "Output only. A set of findings that applies to all virtual machines in the input. Only present for virtual machines.",
          "readOnly": true,
          "$ref": "ReportSummaryMachineFinding"
        },
        "vmwareEngineFinding": {
          "description": "A set of findings that applies to VMWare machines in the input. Only present for virtual machines.",
          "$ref": "ReportSummaryVMWareEngineFinding"
        },
        "soleTenantFinding": {
          "description": "A set of findings that applies to Stole-Tenant machines in the input. Only present for virtual machines.",
          "$ref": "ReportSummarySoleTenantFinding"
        },
        "databaseFinding": {
          "description": "Output only. Details about databases in this finding. Only present for databases.",
          "readOnly": true,
          "$ref": "ReportSummaryDatabaseFinding"
        }
      }
    },
    "Money": {
      "id": "Money",
      "description": "Represents an amount of money with its currency type.",
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "units": {
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReportSummaryMachineFinding": {
      "id": "ReportSummaryMachineFinding",
      "description": "A set of findings that applies to assets of type Virtual/Physical Machine.",
      "type": "object",
      "properties": {
        "allocatedRegions": {
          "description": "Set of regions in which the assets were allocated.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allocatedAssetCount": {
          "description": "Count of assets which were allocated.",
          "type": "string",
          "format": "int64"
        },
        "machineSeriesAllocations": {
          "description": "Distribution of assets based on the Machine Series.",
          "type": "array",
          "items": {
            "$ref": "ReportSummaryMachineSeriesAllocation"
          }
        },
        "allocatedDiskTypes": {
          "description": "Set of disk types allocated to assets.",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
              "Standard HDD Persistent Disk.",
              "Balanced Persistent Disk.",
              "SSD Persistent Disk."
            ],
            "enum": [
              "PERSISTENT_DISK_TYPE_UNSPECIFIED",
              "PERSISTENT_DISK_TYPE_STANDARD",
              "PERSISTENT_DISK_TYPE_BALANCED",
              "PERSISTENT_DISK_TYPE_SSD"
            ]
          }
        }
      }
    },
    "ReportSummaryMachineSeriesAllocation": {
      "id": "ReportSummaryMachineSeriesAllocation",
      "description": "Represents a data point tracking the count of assets allocated for a specific Machine Series.",
      "type": "object",
      "properties": {
        "machineSeries": {
          "description": "The Machine Series (e.g. \"E2\", \"N2\")",
          "$ref": "MachineSeries"
        },
        "allocatedAssetCount": {
          "description": "Count of assets allocated to this machine series.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ReportSummaryVMWareEngineFinding": {
      "id": "ReportSummaryVMWareEngineFinding",
      "description": "A set of findings that applies to assets destined for VMWare Engine.",
      "type": "object",
      "properties": {
        "allocatedRegions": {
          "description": "Set of regions in which the assets were allocated",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allocatedAssetCount": {
          "description": "Count of assets which are allocated",
          "type": "string",
          "format": "int64"
        },
        "nodeAllocations": {
          "description": "Set of per-nodetype allocation records",
          "type": "array",
          "items": {
            "$ref": "ReportSummaryVMWareNodeAllocation"
          }
        }
      }
    },
    "ReportSummaryVMWareNodeAllocation": {
      "id": "ReportSummaryVMWareNodeAllocation",
      "description": "Represents assets allocated to a specific VMWare Node type.",
      "type": "object",
      "properties": {
        "vmwareNode": {
          "description": "VMWare node type, e.g. \"ve1-standard-72\"",
          "$ref": "ReportSummaryVMWareNode"
        },
        "nodeCount": {
          "description": "Count of this node type to be provisioned",
          "type": "string",
          "format": "int64"
        },
        "allocatedAssetCount": {
          "description": "Count of assets allocated to these nodes",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ReportSummaryVMWareNode": {
      "id": "ReportSummaryVMWareNode",
      "description": "A VMWare Engine Node",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code to identify VMware Engine node series, e.g. \"ve1-standard-72\". Based on the displayName of cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.nodeTypes",
          "type": "string"
        }
      }
    },
    "ReportSummarySoleTenantFinding": {
      "id": "ReportSummarySoleTenantFinding",
      "description": "A set of findings that applies to assets destined for Sole-Tenant nodes.",
      "type": "object",
      "properties": {
        "allocatedRegions": {
          "description": "Set of regions in which the assets are allocated",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allocatedAssetCount": {
          "description": "Count of assets which are allocated",
          "type": "string",
          "format": "int64"
        },
        "nodeAllocations": {
          "description": "Set of per-nodetype allocation records",
          "type": "array",
          "items": {
            "$ref": "ReportSummarySoleTenantNodeAllocation"
          }
        }
      }
    },
    "ReportSummarySoleTenantNodeAllocation": {
      "id": "ReportSummarySoleTenantNodeAllocation",
      "description": "Represents the assets allocated to a specific Sole-Tenant node type.",
      "type": "object",
      "properties": {
        "node": {
          "description": "Sole Tenant node type, e.g. \"m3-node-128-3904\"",
          "$ref": "SoleTenantNodeType"
        },
        "nodeCount": {
          "description": "Count of this node type to be provisioned",
          "type": "string",
          "format": "int64"
        },
        "allocatedAssetCount": {
          "description": "Count of assets allocated to these nodes",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ReportSummaryDatabaseFinding": {
      "id": "ReportSummaryDatabaseFinding",
      "description": "DatabaseFinding contains an aggregate costs and shapes for a single database type.",
      "type": "object",
      "properties": {
        "allocatedAssetCount": {
          "description": "Output only. Number of database assets which were successfully assigned in this finding.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "totalAssets": {
          "description": "Output only. Number of database assets in this finding.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ListReportsResponse": {
      "id": "ListReportsResponse",
      "description": "Response message for listing Reports.",
      "type": "object",
      "properties": {
        "reports": {
          "description": "The list of Reports.",
          "type": "array",
          "items": {
            "$ref": "Report"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AssetsExportJob": {
      "id": "AssetsExportJob",
      "description": "Assets export job message.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Identifier. Resource name.",
          "readOnly": true,
          "type": "string"
        },
        "condition": {
          "description": "Optional. Conditions for selecting assets to export.",
          "$ref": "AssetsExportJobExportCondition"
        },
        "createTime": {
          "description": "Output only. Resource creation time.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Resource update time.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional. Labels as key value pairs. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be \u003c= 128 bytes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "networkDependencies": {
          "description": "Export data regarding asset network dependencies.",
          "$ref": "AssetsExportJobNetworkDependencies"
        },
        "signedUriDestination": {
          "description": "Export to Cloud Storage files downloadable using signed URIs.",
          "$ref": "SignedUriDestination"
        },
        "recentExecutions": {
          "description": "Output only. Recent non expired executions of the job.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "AssetsExportJobExecution"
          }
        }
      }
    },
    "AssetsExportJobExportCondition": {
      "id": "AssetsExportJobExportCondition",
      "description": "Conditions for selecting assets to export.",
      "type": "object",
      "properties": {
        "filter": {
          "description": "Optional. Assets filter, supports the same syntax as asset listing.",
          "type": "string"
        }
      }
    },
    "AssetsExportJobNetworkDependencies": {
      "id": "AssetsExportJobNetworkDependencies",
      "description": "Configuration for network dependencies exports.",
      "type": "object",
      "properties": {
        "maxDays": {
          "description": "Optional. When this value is set to a positive integer, network connections data will be returned for the most recent days for which data is available. When this value is unset (or set to zero), all available data is returned.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SignedUriDestination": {
      "id": "SignedUriDestination",
      "description": "Signed URI destination configuration.",
      "type": "object",
      "properties": {}
    },
    "AssetsExportJobExecution": {
      "id": "AssetsExportJobExecution",
      "description": "Execution status of assets export job.",
      "type": "object",
      "properties": {
        "executionId": {
          "description": "Output only. Globally unique identifier of the execution.",
          "readOnly": true,
          "type": "string"
        },
        "startTime": {
          "description": "Output only. Execution timestamp.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. Completion time of the export.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "expireTime": {
          "description": "Output only. Expiration time for the export and artifacts.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "result": {
          "description": "Output only. Result of the export execution.",
          "readOnly": true,
          "$ref": "AssetsExportJobExecutionResult"
        }
      }
    },
    "AssetsExportJobExecutionResult": {
      "id": "AssetsExportJobExecutionResult",
      "description": "Contains the result of the assets export.",
      "type": "object",
      "properties": {
        "signedUris": {
          "description": "Output only. Signed URLs for downloading export artifacts.",
          "readOnly": true,
          "$ref": "SignedUris"
        },
        "error": {
          "description": "Output only. Error encountered during export.",
          "readOnly": true,
          "$ref": "Status"
        }
      }
    },
    "SignedUris": {
      "id": "SignedUris",
      "description": "Contains a list of Signed URIs.",
      "type": "object",
      "properties": {
        "signedUris": {
          "description": "Output only. List of signed URIs.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "SignedUri"
          }
        }
      }
    },
    "SignedUri": {
      "id": "SignedUri",
      "description": "Contains a signed URI.",
      "type": "object",
      "properties": {
        "file": {
          "description": "Output only. Name of the file the Signed URI references.",
          "readOnly": true,
          "type": "string"
        },
        "uri": {
          "description": "Output only. Download URI for the file.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ListAssetsExportJobsResponse": {
      "id": "ListAssetsExportJobsResponse",
      "description": "Response message for listing assets export jobs.",
      "type": "object",
      "properties": {
        "assetsExportJobs": {
          "description": "Output only. The list of assets export jobs.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "AssetsExportJob"
          }
        },
        "nextPageToken": {
          "description": "Output only. A token identifying a page of results the server should return.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "RunAssetsExportJobRequest": {
      "id": "RunAssetsExportJobRequest",
      "description": "A request to run an assets export job.",
      "type": "object",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      }
    },
    "DiscoveryClient": {
      "id": "DiscoveryClient",
      "description": "Represents an installed Migration Center Discovery Client instance.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Identifier. Full name of this discovery client.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time when the discovery client was first created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time when the discovery client was last updated. This value is not updated by heartbeats, to view the last heartbeat time please refer to the `heartbeat_time` field.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "source": {
          "description": "Required. Full name of the source object associated with this discovery client.",
          "type": "string"
        },
        "serviceAccount": {
          "description": "Required. Service account used by the discovery client for various operation.",
          "type": "string"
        },
        "signalsEndpoint": {
          "description": "Output only. This field is intended for internal use.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Optional. Free text display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Free text description. Maximum length is 1000 characters.",
          "type": "string"
        },
        "labels": {
          "description": "Optional. Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "Output only. Current state of the discovery client.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Client state is unspecified.",
            "Client is active.",
            "Client is offline.",
            "Client is in a degraded state. See the `errors` field for details.",
            "Client has expired. See the expire_time field for the expire time."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "OFFLINE",
            "DEGRADED",
            "EXPIRED"
          ]
        },
        "version": {
          "description": "Output only. Client version, as reported in recent heartbeat.",
          "readOnly": true,
          "type": "string"
        },
        "errors": {
          "description": "Output only. Errors affecting client functionality.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Status"
          }
        },
        "heartbeatTime": {
          "description": "Output only. Last heartbeat time. Healthy clients are expected to send heartbeats regularly (normally every few minutes).",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "expireTime": {
          "description": "Optional. Client expiration time in UTC. If specified, the backend will not accept new frames after this time.",
          "type": "string",
          "format": "google-datetime"
        },
        "ttl": {
          "description": "Optional. Input only. Client time-to-live. If specified, the backend will not accept new frames after this time. This field is input only. The derived expiration time is provided as output through the `expire_time` field.",
          "type": "string",
          "format": "google-duration"
        }
      }
    },
    "ListDiscoveryClientsResponse": {
      "id": "ListDiscoveryClientsResponse",
      "description": "Response message for listing discovery clients.",
      "type": "object",
      "properties": {
        "discoveryClients": {
          "description": "List of discovery clients.",
          "type": "array",
          "items": {
            "$ref": "DiscoveryClient"
          }
        },
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SendDiscoveryClientHeartbeatRequest": {
      "id": "SendDiscoveryClientHeartbeatRequest",
      "description": "A request to send a discovery client heartbeat.",
      "type": "object",
      "properties": {
        "version": {
          "description": "Optional. Client application version.",
          "type": "string"
        },
        "errors": {
          "description": "Optional. Errors affecting client functionality.",
          "type": "array",
          "items": {
            "$ref": "Status"
          }
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents a Google Cloud location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "RunAssetsExportJobResponse": {
      "id": "RunAssetsExportJobResponse",
      "description": "Response message for running an assets export job.",
      "type": "object",
      "properties": {
        "assetsExportJobExecution": {
          "description": "Output only. Execution status of the assets export operation.",
          "readOnly": true,
          "$ref": "AssetsExportJobExecution"
        }
      }
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "rootUrl": "https://migrationcenter.googleapis.com/",
  "servicePath": "",
  "mtlsRootUrl": "https://migrationcenter.mtls.googleapis.com/",
  "ownerName": "Google",
  "documentationLink": "https://cloud.google.com/migration-center",
  "name": "migrationcenter",
  "description": "A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "getSettings": {
              "id": "migrationcenter.projects.locations.getSettings",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/settings",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. Name of the resource.",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Settings"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets the details of regional settings."
            },
            "updateSettings": {
              "id": "migrationcenter.projects.locations.updateSettings",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/settings",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "Output only. The name of the resource.",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "updateMask": {
                  "description": "Required. Field mask is used to specify the fields to be overwritten in the `Settings` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                },
                "requestId": {
                  "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "Settings"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Updates the regional-level project settings."
            },
            "list": {
              "id": "migrationcenter.projects.locations.list",
              "path": "v1alpha1/{+name}/locations",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "migrationcenter.projects.locations.get",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          },
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "migrationcenter.projects.locations.operations.list",
                  "path": "v1alpha1/{+name}/operations",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`."
                },
                "get": {
                  "id": "migrationcenter.projects.locations.operations.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "migrationcenter.projects.locations.operations.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "migrationcenter.projects.locations.operations.cancel",
                  "path": "v1alpha1/{+name}:cancel",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "assets": {
              "methods": {
                "list": {
                  "id": "migrationcenter.projects.locations.assets.list",
                  "path": "v1alpha1/{+parent}/assets",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for `ListAssetsRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "view": {
                      "description": "View of the assets. Defaults to BASIC.",
                      "location": "query",
                      "type": "string",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data.",
                        "The asset view includes the standard metadata of an asset."
                      ],
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ]
                    },
                    "showHidden": {
                      "description": "Optional. When this value is set to 'true' the response will include all assets, including those that are hidden.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListAssetsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all the assets in a given project and location."
                },
                "get": {
                  "id": "migrationcenter.projects.locations.assets.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "view": {
                      "description": "View of the assets. Defaults to BASIC.",
                      "location": "query",
                      "type": "string",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data.",
                        "The asset view includes the standard metadata of an asset."
                      ],
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ]
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Asset"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the details of an asset."
                },
                "patch": {
                  "id": "migrationcenter.projects.locations.assets.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. The full name of the asset.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Asset"
                  },
                  "response": {
                    "$ref": "Asset"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of an asset."
                },
                "batchUpdate": {
                  "id": "migrationcenter.projects.locations.assets.batchUpdate",
                  "path": "v1alpha1/{+parent}/assets:batchUpdate",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchUpdate",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for batch asset update.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "BatchUpdateAssetsRequest"
                  },
                  "response": {
                    "$ref": "BatchUpdateAssetsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a list of assets."
                },
                "delete": {
                  "id": "migrationcenter.projects.locations.assets.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes an asset."
                },
                "batchDelete": {
                  "id": "migrationcenter.projects.locations.assets.batchDelete",
                  "path": "v1alpha1/{+parent}/assets:batchDelete",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchDelete",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for batch asset delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "BatchDeleteAssetsRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes list of Assets."
                },
                "reportAssetFrames": {
                  "id": "migrationcenter.projects.locations.assets.reportAssetFrames",
                  "path": "v1alpha1/{+parent}/assets:reportAssetFrames",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "source": {
                      "description": "Required. Reference to a source.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Frames"
                  },
                  "response": {
                    "$ref": "ReportAssetFramesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Reports a set of frames."
                },
                "aggregateValues": {
                  "id": "migrationcenter.projects.locations.assets.aggregateValues",
                  "path": "v1alpha1/{+parent}/assets:aggregateValues",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for `AggregateAssetsValuesRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "AggregateAssetsValuesRequest"
                  },
                  "response": {
                    "$ref": "AggregateAssetsValuesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Aggregates the requested fields based on provided function."
                }
              }
            },
            "importJobs": {
              "methods": {
                "create": {
                  "id": "migrationcenter.projects.locations.importJobs.create",
                  "path": "v1alpha1/{+parent}/importJobs",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "importJobId": {
                      "description": "Required. ID of the import job.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates an import job."
                },
                "list": {
                  "id": "migrationcenter.projects.locations.importJobs.list",
                  "path": "v1alpha1/{+parent}/importJobs",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for `ListImportJobsRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "view": {
                      "description": "Optional. The level of details of each import job. Default value is BASIC.",
                      "location": "query",
                      "type": "string",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ]
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListImportJobsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all import jobs."
                },
                "get": {
                  "id": "migrationcenter.projects.locations.importJobs.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "view": {
                      "description": "Optional. The level of details of the import job. Default value is FULL.",
                      "location": "query",
                      "type": "string",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ]
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ImportJob"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the details of an import job."
                },
                "delete": {
                  "id": "migrationcenter.projects.locations.importJobs.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "description": "Optional. If set to `true`, any `ImportDataFiles` of this job will also be deleted If set to `false`, the request only works if the job has no data files.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes an import job."
                },
                "patch": {
                  "id": "migrationcenter.projects.locations.importJobs.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. The full name of the import job.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates an import job."
                },
                "validate": {
                  "id": "migrationcenter.projects.locations.importJobs.validate",
                  "path": "v1alpha1/{+name}:validate",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the import job to validate.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ValidateImportJobRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Validates an import job."
                },
                "run": {
                  "id": "migrationcenter.projects.locations.importJobs.run",
                  "path": "v1alpha1/{+name}:run",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the import job to run.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "RunImportJobRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Runs an import job."
                }
              },
              "resources": {
                "importDataFiles": {
                  "methods": {
                    "get": {
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.get",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the ImportDataFile.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "ImportDataFile"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets an import data file."
                    },
                    "list": {
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.list",
                      "path": "v1alpha1/{+parent}/importDataFiles",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. Name of the parent of the `ImportDataFiles` resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of data files to return. The service may return fewer than this value. If unspecified, at most 500 data files will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "A page token, received from a previous `ListImportDataFiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListImportDataFiles` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Filtering results.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListImportDataFilesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "List import data files."
                    },
                    "create": {
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.create",
                      "path": "v1alpha1/{+parent}/importDataFiles",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. Name of the parent of the ImportDataFile.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "importDataFileId": {
                          "description": "Required. The ID of the new data file.",
                          "location": "query",
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "ImportDataFile"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates an import data file."
                    },
                    "delete": {
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.delete",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the ImportDataFile to delete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Delete an import data file."
                    }
                  }
                }
              }
            },
            "groups": {
              "methods": {
                "list": {
                  "id": "migrationcenter.projects.locations.groups.list",
                  "path": "v1alpha1/{+parent}/groups",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for `ListGroupsRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListGroupsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all groups in a given project and location."
                },
                "get": {
                  "id": "migrationcenter.projects.locations.groups.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Group"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the details of a group."
                },
                "create": {
                  "id": "migrationcenter.projects.locations.groups.create",
                  "path": "v1alpha1/{+parent}/groups",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Group"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new group in a given project and location."
                },
                "patch": {
                  "id": "migrationcenter.projects.locations.groups.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. The name of the group.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Group` resource by the update. The values specified in the `update_mask` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Group"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a group."
                },
                "delete": {
                  "id": "migrationcenter.projects.locations.groups.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the group resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a group."
                },
                "addAssets": {
                  "id": "migrationcenter.projects.locations.groups.addAssets",
                  "path": "v1alpha1/{+group}:addAssets",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addAssets",
                  "httpMethod": "POST",
                  "parameters": {
                    "group": {
                      "description": "Required. Group reference.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "group"
                  ],
                  "request": {
                    "$ref": "AddAssetsToGroupRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Adds assets to a group."
                },
                "removeAssets": {
                  "id": "migrationcenter.projects.locations.groups.removeAssets",
                  "path": "v1alpha1/{+group}:removeAssets",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeAssets",
                  "httpMethod": "POST",
                  "parameters": {
                    "group": {
                      "description": "Required. Group reference.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "group"
                  ],
                  "request": {
                    "$ref": "RemoveAssetsFromGroupRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Removes assets from a group."
                }
              }
            },
            "sources": {
              "methods": {
                "list": {
                  "id": "migrationcenter.projects.locations.sources.list",
                  "path": "v1alpha1/{+parent}/sources",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for `ListSourcesRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results that the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListSourcesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all the sources in a given project and location."
                },
                "get": {
                  "id": "migrationcenter.projects.locations.sources.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Source"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the details of a source."
                },
                "create": {
                  "id": "migrationcenter.projects.locations.sources.create",
                  "path": "v1alpha1/{+parent}/sources",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "sourceId": {
                      "description": "Required. User specified ID for the source. It will become the last component of the source name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Source"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new source in a given project and location."
                },
                "patch": {
                  "id": "migrationcenter.projects.locations.sources.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. The full name of the source.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Source` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Source"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a source."
                },
                "delete": {
                  "id": "migrationcenter.projects.locations.sources.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a source."
                }
              },
              "resources": {
                "errorFrames": {
                  "methods": {
                    "list": {
                      "id": "migrationcenter.projects.locations.sources.errorFrames.list",
                      "path": "v1alpha1/{+parent}/errorFrames",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. Parent value (the source) for `ListErrorFramesRequest`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results the server should return.",
                          "location": "query",
                          "type": "string"
                        },
                        "view": {
                          "description": "Optional. An optional view mode to control the level of details of each error frame. The default is a BASIC frame view.",
                          "location": "query",
                          "type": "string",
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ]
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListErrorFramesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists all error frames in a given source and location."
                    },
                    "get": {
                      "id": "migrationcenter.projects.locations.sources.errorFrames.get",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames/{errorFramesId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the frame to retrieve. Format: projects/{project}/locations/{location}/sources/{source}/errorFrames/{error_frame}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/errorFrames/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "view": {
                          "description": "Optional. An optional view mode to control the level of details for the frame. The default is a basic frame view.",
                          "location": "query",
                          "type": "string",
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ]
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "ErrorFrame"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the details of an error frame."
                    }
                  }
                }
              }
            },
            "preferenceSets": {
              "methods": {
                "list": {
                  "id": "migrationcenter.projects.locations.preferenceSets.list",
                  "path": "v1alpha1/{+parent}/preferenceSets",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for `ListPreferenceSetsRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, at most 500 preference sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListPreferenceSetsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all the preference sets in a given project and location."
                },
                "get": {
                  "id": "migrationcenter.projects.locations.preferenceSets.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "PreferenceSet"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the details of a preference set."
                },
                "create": {
                  "id": "migrationcenter.projects.locations.preferenceSets.create",
                  "path": "v1alpha1/{+parent}/preferenceSets",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "preferenceSetId": {
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new preference set in a given project and location."
                },
                "patch": {
                  "id": "migrationcenter.projects.locations.preferenceSets.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. Name of the preference set.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `PreferenceSet` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a preference set."
                },
                "delete": {
                  "id": "migrationcenter.projects.locations.preferenceSets.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the group resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a preference set."
                }
              }
            },
            "reportConfigs": {
              "methods": {
                "create": {
                  "id": "migrationcenter.projects.locations.reportConfigs.create",
                  "path": "v1alpha1/{+parent}/reportConfigs",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "reportConfigId": {
                      "description": "Required. User specified ID for the report config. It will become the last component of the report config name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ReportConfig"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a report configuration."
                },
                "get": {
                  "id": "migrationcenter.projects.locations.reportConfigs.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ReportConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single ReportConfig."
                },
                "list": {
                  "id": "migrationcenter.projects.locations.reportConfigs.list",
                  "path": "v1alpha1/{+parent}/reportConfigs",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for `ListReportConfigsRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListReportConfigsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists ReportConfigs in a given project and location."
                },
                "delete": {
                  "id": "migrationcenter.projects.locations.reportConfigs.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "description": "Optional. If set to `true`, any child `Reports` of this entity will also be deleted. If set to `false`, the request only works if the resource has no children.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a ReportConfig."
                }
              },
              "resources": {
                "reports": {
                  "methods": {
                    "create": {
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.create",
                      "path": "v1alpha1/{+parent}/reports",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. Value for parent.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "reportId": {
                          "description": "Required. User specified id for the report. It will become the last component of the report name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The id must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
                          "location": "query",
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Report"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a report."
                    },
                    "get": {
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.get",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "view": {
                          "description": "Determines what information to retrieve for the Report.",
                          "location": "query",
                          "type": "string",
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ]
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Report"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single Report."
                    },
                    "list": {
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.list",
                      "path": "v1alpha1/{+parent}/reports",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. Parent value for `ListReportsRequest`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results that the server should return.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Filtering results.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "location": "query",
                          "type": "string"
                        },
                        "view": {
                          "description": "Determines what information to retrieve for each Report.",
                          "location": "query",
                          "type": "string",
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ]
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListReportsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists Reports in a given ReportConfig."
                    },
                    "delete": {
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.delete",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a Report."
                    }
                  }
                }
              }
            },
            "assetsExportJobs": {
              "methods": {
                "create": {
                  "id": "migrationcenter.projects.locations.assetsExportJobs.create",
                  "path": "v1alpha1/{+parent}/assetsExportJobs",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assetsExportJobs",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource where the assts export job will be created.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "assetsExportJobId": {
                      "description": "Required. The ID to use for the asset export job.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "AssetsExportJob"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new assets export job."
                },
                "get": {
                  "id": "migrationcenter.projects.locations.assetsExportJobs.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assetsExportJobs/{assetsExportJobsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assetsExportJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "AssetsExportJob"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the details of an assets export job."
                },
                "list": {
                  "id": "migrationcenter.projects.locations.assetsExportJobs.list",
                  "path": "v1alpha1/{+parent}/assetsExportJobs",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assetsExportJobs",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. A token identifying a page of results that the server should return.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListAssetsExportJobsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all the assets export jobs in a given project and location."
                },
                "delete": {
                  "id": "migrationcenter.projects.locations.assetsExportJobs.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assetsExportJobs/{assetsExportJobsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the assets export job to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assetsExportJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes an assets export job."
                },
                "run": {
                  "id": "migrationcenter.projects.locations.assetsExportJobs.run",
                  "path": "v1alpha1/{+name}:run",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assetsExportJobs/{assetsExportJobsId}:run",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assetsExportJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "RunAssetsExportJobRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Runs an assets export job, returning an AssetsExportJobExecution."
                }
              }
            },
            "discoveryClients": {
              "methods": {
                "create": {
                  "id": "migrationcenter.projects.locations.discoveryClients.create",
                  "path": "v1alpha1/{+parent}/discoveryClients",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/discoveryClients",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "discoveryClientId": {
                      "description": "Required. User specified ID for the discovery client. It will become the last component of the discovery client name. The ID must be unique within the project, is restricted to lower-cased letters and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "DiscoveryClient"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new discovery client."
                },
                "get": {
                  "id": "migrationcenter.projects.locations.discoveryClients.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/discoveryClients/{discoveryClientsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The discovery client name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/discoveryClients/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "DiscoveryClient"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the details of a discovery client."
                },
                "list": {
                  "id": "migrationcenter.projects.locations.discoveryClients.list",
                  "path": "v1alpha1/{+parent}/discoveryClients",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/discoveryClients",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of items to return. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. A page token, received from a previous `ListDiscoveryClients` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDiscoveryClients` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. Filter expression to filter results by.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. Field to sort by.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListDiscoveryClientsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all the discovery clients in a given project and location."
                },
                "patch": {
                  "id": "migrationcenter.projects.locations.discoveryClients.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/discoveryClients/{discoveryClientsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. Identifier. Full name of this discovery client.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/discoveryClients/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Update mask is used to specify the fields to be overwritten in the `DiscoveryClient` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "DiscoveryClient"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a discovery client."
                },
                "sendHeartbeat": {
                  "id": "migrationcenter.projects.locations.discoveryClients.sendHeartbeat",
                  "path": "v1alpha1/{+name}:sendHeartbeat",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/discoveryClients/{discoveryClientsId}:sendHeartbeat",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The discovery client name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/discoveryClients/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "SendDiscoveryClientHeartbeatRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sends a discovery client heartbeat. Healthy clients are expected to send heartbeats regularly (normally every few minutes)."
                },
                "delete": {
                  "id": "migrationcenter.projects.locations.discoveryClients.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/discoveryClients/{discoveryClientsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The discovery client name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/discoveryClients/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a discovery client."
                }
              }
            }
          }
        }
      }
    }
  },
  "revision": "20240523",
  "version_module": true,
  "ownerDomain": "google.com",
  "basePath": "",
  "canonicalName": "Migration Center API",
  "fullyEncodeReservedExpansion": true,
  "title": "Migration Center API",
  "discoveryVersion": "v1",
  "kind": "discovery#restDescription",
  "id": "migrationcenter:v1alpha1",
  "protocol": "rest",
  "version": "v1alpha1"
}

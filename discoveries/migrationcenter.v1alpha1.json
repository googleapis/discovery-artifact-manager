{
  "id": "migrationcenter:v1alpha1",
  "name": "migrationcenter",
  "kind": "discovery#restDescription",
  "rootUrl": "https://migrationcenter.googleapis.com/",
  "version_module": true,
  "servicePath": "",
  "ownerName": "Google",
  "batchPath": "batch",
  "documentationLink": "https://cloud.google.com/migration-center",
  "mtlsRootUrl": "https://migrationcenter.mtls.googleapis.com/",
  "discoveryVersion": "v1",
  "parameters": {
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "$.xgafv": {
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "description": "V1 error format."
    },
    "alt": {
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    }
  },
  "baseUrl": "https://migrationcenter.googleapis.com/",
  "version": "v1alpha1",
  "protocol": "rest",
  "revision": "20230901",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "preferenceSets": {
              "methods": {
                "delete": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the group resource."
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.preferenceSets.delete",
                  "httpMethod": "DELETE",
                  "description": "Deletes a preference set.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new preference set in a given project and location.",
                  "id": "migrationcenter.projects.locations.preferenceSets.create",
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+parent}/preferenceSets",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "preferenceSetId": {
                      "location": "query",
                      "type": "string"
                    }
                  }
                },
                "list": {
                  "description": "Lists all the preference sets in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `ListPreferenceSetsRequest`."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results the server should return."
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, at most 500 preference sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.preferenceSets.list",
                  "path": "v1alpha1/{+parent}/preferenceSets",
                  "response": {
                    "$ref": "ListPreferenceSetsResponse"
                  }
                },
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a preference set.",
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "id": "migrationcenter.projects.locations.preferenceSets.patch",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Output only. Name of the preference set.",
                      "location": "path"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `PreferenceSet` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+name}"
                },
                "get": {
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.preferenceSets.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "response": {
                    "$ref": "PreferenceSet"
                  },
                  "description": "Gets the details of a preference set."
                }
              }
            },
            "assets": {
              "methods": {
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.assets.delete",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "location": "path"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "httpMethod": "DELETE",
                  "description": "Deletes an asset.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "batchDelete": {
                  "path": "v1alpha1/{+parent}/assets:batchDelete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes list of Assets.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchDelete",
                  "id": "migrationcenter.projects.locations.assets.batchDelete",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "BatchDeleteAssetsRequest"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for batch asset delete.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "get": {
                  "response": {
                    "$ref": "Asset"
                  },
                  "description": "Gets the details of an asset.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.assets.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "view": {
                      "description": "View of the assets. Defaults to BASIC.",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data.",
                        "The asset view includes the standard metadata of an asset."
                      ],
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ],
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}"
                },
                "list": {
                  "parameters": {
                    "orderBy": {
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filtering results."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `ListAssetsRequest`.",
                      "type": "string",
                      "location": "path"
                    },
                    "view": {
                      "type": "string",
                      "description": "View of the assets. Defaults to BASIC.",
                      "location": "query",
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ],
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data.",
                        "The asset view includes the standard metadata of an asset."
                      ]
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/assets",
                  "response": {
                    "$ref": "ListAssetsResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all the assets in a given project and location.",
                  "id": "migrationcenter.projects.locations.assets.list"
                },
                "reportAssetFrames": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames",
                  "request": {
                    "$ref": "Frames"
                  },
                  "description": "Reports a set of frames.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.assets.reportAssetFrames",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "ReportAssetFramesResponse"
                  },
                  "path": "v1alpha1/{+parent}/assets:reportAssetFrames",
                  "parameters": {
                    "source": {
                      "location": "query",
                      "description": "Required. Reference to a source.",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. Parent of the resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  }
                },
                "aggregateValues": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues",
                  "description": "Aggregates the requested fields based on provided function.",
                  "path": "v1alpha1/{+parent}/assets:aggregateValues",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `AggregateAssetsValuesRequest`.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.assets.aggregateValues",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "AggregateAssetsValuesRequest"
                  },
                  "response": {
                    "$ref": "AggregateAssetsValuesResponse"
                  }
                },
                "patch": {
                  "response": {
                    "$ref": "Asset"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "description": "Output only. The full name of the asset.",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "id": "migrationcenter.projects.locations.assets.patch",
                  "description": "Updates the parameters of an asset.",
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Asset"
                  },
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "batchUpdate": {
                  "id": "migrationcenter.projects.locations.assets.batchUpdate",
                  "description": "Updates the parameters of a list of assets.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchUpdate",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for batch asset update."
                    }
                  },
                  "request": {
                    "$ref": "BatchUpdateAssetsRequest"
                  },
                  "path": "v1alpha1/{+parent}/assets:batchUpdate",
                  "response": {
                    "$ref": "BatchUpdateAssetsResponse"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "sources": {
              "resources": {
                "errorFrames": {
                  "methods": {
                    "get": {
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ErrorFrame"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets the details of an error frame.",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames/{errorFramesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the frame to retrieve. Format: projects/{project}/locations/{location}/sources/{source}/errorFrames/{error_frame}",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/errorFrames/[^/]+$"
                        },
                        "view": {
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "location": "query",
                          "type": "string",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ],
                          "description": "Optional. An optional view mode to control the level of details for the frame. The default is a basic frame view."
                        }
                      },
                      "id": "migrationcenter.projects.locations.sources.errorFrames.get"
                    },
                    "list": {
                      "response": {
                        "$ref": "ListErrorFramesResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists all error frames in a given source and location.",
                      "httpMethod": "GET",
                      "id": "migrationcenter.projects.locations.sources.errorFrames.list",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "location": "path",
                          "description": "Required. Parent value (the source) for `ListErrorFramesRequest`.",
                          "type": "string"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "A token identifying a page of results the server should return.",
                          "location": "query"
                        },
                        "pageSize": {
                          "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "location": "query",
                          "format": "int32",
                          "type": "integer"
                        },
                        "view": {
                          "location": "query",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ],
                          "type": "string",
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "description": "Optional. An optional view mode to control the level of details of each error frame. The default is a BASIC frame view."
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames",
                      "path": "v1alpha1/{+parent}/errorFrames"
                    }
                  }
                }
              },
              "methods": {
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a source.",
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.sources.delete"
                },
                "create": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Source"
                  },
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "sourceId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. User specified ID for the source. It will become the last component of the source name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`."
                    },
                    "parent": {
                      "description": "Required. Value for parent.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v1alpha1/{+parent}/sources",
                  "description": "Creates a new source in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "id": "migrationcenter.projects.locations.sources.create"
                },
                "patch": {
                  "description": "Updates the parameters of a source.",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "id": "migrationcenter.projects.locations.sources.patch",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Source` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "description": "Output only. The full name of the source."
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Source"
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Source"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.sources.get",
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "path": "v1alpha1/{+name}",
                  "description": "Gets the details of a source."
                },
                "list": {
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/sources",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListSourcesResponse"
                  },
                  "description": "Lists all the sources in a given project and location.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "id": "migrationcenter.projects.locations.sources.list",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results that the server should return.",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Parent value for `ListSourcesRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filtering results."
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                      "location": "query"
                    }
                  }
                }
              }
            },
            "reportConfigs": {
              "resources": {
                "reports": {
                  "methods": {
                    "delete": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. Name of the resource.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$"
                        },
                        "requestId": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.delete",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a Report.",
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "create": {
                      "description": "Creates a report.",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "description": "Required. Value for parent.",
                          "location": "path"
                        },
                        "reportId": {
                          "description": "Required. User specified id for the report. It will become the last component of the report name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The id must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
                          "type": "string",
                          "location": "query"
                        },
                        "requestId": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.create",
                      "path": "v1alpha1/{+parent}/reports",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "Report"
                      }
                    },
                    "list": {
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.list",
                      "description": "Lists Reports in a given ReportConfig.",
                      "httpMethod": "GET",
                      "path": "v1alpha1/{+parent}/reports",
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "view": {
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "description": "Determines what information to retrieve for each Report.",
                          "type": "string",
                          "location": "query",
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ]
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A token identifying a page of results that the server should return."
                        },
                        "filter": {
                          "location": "query",
                          "description": "Filtering results.",
                          "type": "string"
                        },
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                        },
                        "parent": {
                          "required": true,
                          "type": "string",
                          "description": "Required. Parent value for `ListReportsRequest`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "ListReportsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports"
                    },
                    "get": {
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets details of a single Report.",
                      "path": "v1alpha1/{+name}",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Report"
                      },
                      "parameters": {
                        "view": {
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "location": "query",
                          "description": "Determines what information to retrieve for the Report.",
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "description": "Required. Name of the resource.",
                          "required": true
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "delete": {
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a ReportConfig.",
                  "id": "migrationcenter.projects.locations.reportConfigs.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. If set to `true`, any child `Reports` of this entity will also be deleted. If set to `false`, the request only works if the resource has no children."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}"
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. Parent value for `ListReportConfigsRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "filter": {
                      "type": "string",
                      "description": "Filtering results.",
                      "location": "query"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.reportConfigs.list",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/reportConfigs",
                  "response": {
                    "$ref": "ListReportConfigsResponse"
                  },
                  "description": "Lists ReportConfigs in a given project and location."
                },
                "get": {
                  "response": {
                    "$ref": "ReportConfig"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "id": "migrationcenter.projects.locations.reportConfigs.get",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "description": "Gets details of a single ReportConfig."
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "description": "Creates a report configuration.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "reportConfigId": {
                      "description": "Required. User specified ID for the report config. It will become the last component of the report config name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Value for parent.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "id": "migrationcenter.projects.locations.reportConfigs.create",
                  "request": {
                    "$ref": "ReportConfig"
                  },
                  "path": "v1alpha1/{+parent}/reportConfigs"
                }
              }
            },
            "groups": {
              "methods": {
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "description": "Output only. The name of the group.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "updateMask": {
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Group` resource by the update. The values specified in the `update_mask` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "request": {
                    "$ref": "Group"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Updates the parameters of a group.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "id": "migrationcenter.projects.locations.groups.patch",
                  "path": "v1alpha1/{+name}"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.groups.create",
                  "description": "Creates a new group in a given project and location.",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Value for parent.",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups",
                  "request": {
                    "$ref": "Group"
                  },
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/groups",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Group"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Gets the details of a group.",
                  "id": "migrationcenter.projects.locations.groups.get",
                  "httpMethod": "GET"
                },
                "removeAssets": {
                  "request": {
                    "$ref": "RemoveAssetsFromGroupRequest"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeAssets",
                  "description": "Removes assets from a group.",
                  "parameters": {
                    "group": {
                      "description": "Required. Group reference.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1alpha1/{+group}:removeAssets",
                  "id": "migrationcenter.projects.locations.groups.removeAssets",
                  "parameterOrder": [
                    "group"
                  ]
                },
                "delete": {
                  "path": "v1alpha1/{+name}",
                  "description": "Deletes a group.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the group resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.groups.delete",
                  "httpMethod": "DELETE",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.groups.list",
                  "path": "v1alpha1/{+parent}/groups",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filtering results."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results the server should return."
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. Parent value for `ListGroupsRequest`."
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    }
                  },
                  "description": "Lists all groups in a given project and location.",
                  "response": {
                    "$ref": "ListGroupsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups"
                },
                "addAssets": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addAssets",
                  "parameters": {
                    "group": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "required": true,
                      "description": "Required. Group reference."
                    }
                  },
                  "request": {
                    "$ref": "AddAssetsToGroupRequest"
                  },
                  "parameterOrder": [
                    "group"
                  ],
                  "description": "Adds assets to a group.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "id": "migrationcenter.projects.locations.groups.addAssets",
                  "path": "v1alpha1/{+group}:addAssets"
                }
              }
            },
            "importJobs": {
              "resources": {
                "importDataFiles": {
                  "methods": {
                    "delete": {
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.delete",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE",
                      "description": "Delete an import data file.",
                      "path": "v1alpha1/{+name}",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "requestId": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        },
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. Name of the ImportDataFile to delete."
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "create": {
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.create",
                      "httpMethod": "POST",
                      "path": "v1alpha1/{+parent}/importDataFiles",
                      "description": "Creates an import data file.",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "request": {
                        "$ref": "ImportDataFile"
                      },
                      "parameters": {
                        "importDataFileId": {
                          "type": "string",
                          "description": "Required. The ID of the new data file.",
                          "location": "query"
                        },
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. Name of the parent of the ImportDataFile.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ImportDataFile"
                      },
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.get",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "description": "Required. Name of the ImportDataFile."
                        }
                      },
                      "path": "v1alpha1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets an import data file."
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageToken": {
                          "description": "A page token, received from a previous `ListImportDataFiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListImportDataFiles` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "description": "The maximum number of data files to return. The service may return fewer than this value. If unspecified, at most 500 data files will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "format": "int32"
                        },
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "location": "path",
                          "description": "Required. Name of the parent of the `ImportDataFiles` resource.",
                          "required": true
                        },
                        "orderBy": {
                          "type": "string",
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "location": "query"
                        },
                        "filter": {
                          "description": "Filtering results.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListImportDataFilesResponse"
                      },
                      "httpMethod": "GET",
                      "description": "List import data files.",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.list",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "path": "v1alpha1/{+parent}/importDataFiles"
                    }
                  }
                }
              },
              "methods": {
                "validate": {
                  "request": {
                    "$ref": "ValidateImportJobRequest"
                  },
                  "path": "v1alpha1/{+name}:validate",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "description": "Required. The name of the import job to validate.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.validate",
                  "description": "Validates an import job.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate"
                },
                "create": {
                  "description": "Creates an import job.",
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Value for parent."
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "importJobId": {
                      "type": "string",
                      "description": "Required. ID of the import job.",
                      "location": "query"
                    }
                  },
                  "path": "v1alpha1/{+parent}/importJobs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "patch": {
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "id": "migrationcenter.projects.locations.importJobs.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Output only. The full name of the import job.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "format": "google-fieldmask",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates an import job."
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "description": "Deletes an import job.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "force": {
                      "location": "query",
                      "description": "Optional. If set to `true`, any `ImportDataFiles` of this job will also be deleted If set to `false`, the request only works if the job has no data files.",
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.importJobs.delete",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "httpMethod": "GET",
                  "description": "Lists all import jobs.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "id": "migrationcenter.projects.locations.importJobs.list",
                  "path": "v1alpha1/{+parent}/importJobs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListImportJobsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "Filtering results.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string"
                    },
                    "view": {
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "type": "string",
                      "description": "Optional. The level of details of each import job. Default value is BASIC.",
                      "location": "query",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ]
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `ListImportJobsRequest`.",
                      "required": true
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string",
                      "location": "query"
                    }
                  }
                },
                "run": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the import job to run.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                    }
                  },
                  "description": "Runs an import job.",
                  "path": "v1alpha1/{+name}:run",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "id": "migrationcenter.projects.locations.importJobs.run",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run",
                  "request": {
                    "$ref": "RunImportJobRequest"
                  }
                },
                "get": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "response": {
                    "$ref": "ImportJob"
                  },
                  "description": "Gets the details of an import job.",
                  "id": "migrationcenter.projects.locations.importJobs.get",
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource."
                    },
                    "view": {
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The level of details of the import job. Default value is FULL."
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.operations.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET"
                },
                "list": {
                  "id": "migrationcenter.projects.locations.operations.list",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "path": "v1alpha1/{+name}/operations",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation's parent resource."
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The standard list page size.",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The standard list page token.",
                      "type": "string"
                    }
                  }
                },
                "delete": {
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be deleted."
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "id": "migrationcenter.projects.locations.operations.delete"
                },
                "cancel": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "path": "v1alpha1/{+name}:cancel",
                  "id": "migrationcenter.projects.locations.operations.cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            }
          },
          "methods": {
            "updateSettings": {
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Operation"
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/settings",
              "parameters": {
                "updateMask": {
                  "description": "Required. Field mask is used to specify the fields to be overwritten in the `Settings` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                },
                "requestId": {
                  "location": "query",
                  "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                  "type": "string"
                },
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Output only. The name of the resource.",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$"
                }
              },
              "request": {
                "$ref": "Settings"
              },
              "httpMethod": "PATCH",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "migrationcenter.projects.locations.updateSettings",
              "description": "Updates the regional-level project settings."
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1alpha1/{+name}/locations",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "id": "migrationcenter.projects.locations.list",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "description": "Gets information about a location.",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "id": "migrationcenter.projects.locations.get",
              "response": {
                "$ref": "Location"
              }
            },
            "getSettings": {
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. Name of the resource."
                }
              },
              "description": "Gets the details of regional settings.",
              "response": {
                "$ref": "Settings"
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/settings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1alpha1/{+name}",
              "id": "migrationcenter.projects.locations.getSettings",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET"
            }
          }
        }
      }
    }
  },
  "description": "A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.",
  "schemas": {
    "DateTime": {
      "properties": {
        "seconds": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds."
        },
        "minutes": {
          "format": "int32",
          "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
          "type": "integer"
        },
        "hours": {
          "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "format": "int32",
          "type": "integer"
        },
        "utcOffset": {
          "format": "google-duration",
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.",
          "type": "string"
        },
        "month": {
          "format": "int32",
          "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.",
          "type": "integer"
        },
        "day": {
          "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.",
          "type": "integer",
          "format": "int32"
        },
        "nanos": {
          "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
          "format": "int32",
          "type": "integer"
        },
        "year": {
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
          "type": "integer",
          "format": "int32"
        },
        "timeZone": {
          "description": "Time zone.",
          "$ref": "TimeZone"
        }
      },
      "type": "object",
      "id": "DateTime",
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations."
    },
    "OpenFileList": {
      "properties": {
        "entries": {
          "description": "Open file details entries.",
          "items": {
            "$ref": "OpenFileDetails"
          },
          "type": "array"
        }
      },
      "description": "Open file list.",
      "id": "OpenFileList",
      "type": "object"
    },
    "AggregationHistogram": {
      "description": "Histogram of bucketed assets counts by field value.",
      "id": "AggregationHistogram",
      "type": "object",
      "properties": {
        "lowerBounds": {
          "type": "array",
          "description": "Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "ValidateImportJobRequest": {
      "type": "object",
      "description": "A request to validate an import job.",
      "id": "ValidateImportJobRequest",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      }
    },
    "Empty": {
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "id": "Empty"
    },
    "AggregationResultCount": {
      "id": "AggregationResultCount",
      "description": "The result of a count aggregation.",
      "type": "object",
      "properties": {
        "value": {
          "format": "int64",
          "type": "string"
        }
      }
    },
    "ReportSummaryMachineFinding": {
      "properties": {
        "machineSeriesAllocations": {
          "type": "array",
          "description": "Distribution of assets based on the Machine Series.",
          "items": {
            "$ref": "ReportSummaryMachineSeriesAllocation"
          }
        },
        "allocatedRegions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Set of regions in which the assets were allocated."
        },
        "allocatedAssetCount": {
          "description": "Count of assets which were allocated.",
          "type": "string",
          "format": "int64"
        },
        "allocatedDiskTypes": {
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
              "Standard HDD Persistent Disk.",
              "Balanced Persistent Disk.",
              "SSD Persistent Disk."
            ],
            "enum": [
              "PERSISTENT_DISK_TYPE_UNSPECIFIED",
              "PERSISTENT_DISK_TYPE_STANDARD",
              "PERSISTENT_DISK_TYPE_BALANCED",
              "PERSISTENT_DISK_TYPE_SSD"
            ]
          },
          "description": "Set of disk types allocated to assets.",
          "type": "array"
        }
      },
      "id": "ReportSummaryMachineFinding",
      "type": "object",
      "description": "A set of findings that applies to assets of type Virtual/Physical Machine."
    },
    "ListImportDataFilesResponse": {
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "importDataFiles": {
          "items": {
            "$ref": "ImportDataFile"
          },
          "type": "array",
          "description": "The list of import data files."
        }
      },
      "id": "ListImportDataFilesResponse",
      "description": "Response for listing payload files of an import job.",
      "type": "object"
    },
    "Operation": {
      "properties": {
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      },
      "type": "object",
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "DiskPartition": {
      "properties": {
        "subPartitions": {
          "description": "Sub-partitions.",
          "$ref": "DiskPartitionList"
        },
        "mountPoint": {
          "description": "Mount pount (Linux/Windows) or drive letter (Windows).",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Partition type (e.g. BIOS boot)."
        },
        "capacityBytes": {
          "format": "int64",
          "description": "Partition capacity.",
          "type": "string"
        },
        "fileSystem": {
          "description": "Partition file system.",
          "type": "string"
        },
        "uuid": {
          "description": "Partition UUID.",
          "type": "string"
        },
        "freeBytes": {
          "type": "string",
          "format": "int64",
          "description": "Partition free space."
        }
      },
      "id": "DiskPartition",
      "description": "Disk Partition details.",
      "type": "object"
    },
    "VirtualMachineDiskDetails": {
      "id": "VirtualMachineDiskDetails",
      "description": "Details of VM disks.",
      "type": "object",
      "properties": {
        "hddTotalFreeBytes": {
          "format": "int64",
          "description": "Total Disk Free Space.",
          "type": "string"
        },
        "hddTotalCapacityBytes": {
          "type": "string",
          "description": "Disk total Capacity.",
          "format": "int64"
        },
        "disks": {
          "$ref": "DiskEntryList",
          "description": "List of disks."
        },
        "lsblkJson": {
          "description": "Raw lsblk output in json.",
          "type": "string"
        }
      }
    },
    "AggregationFrequency": {
      "type": "object",
      "id": "AggregationFrequency",
      "properties": {},
      "description": "Frequency distribution of all field values."
    },
    "Settings": {
      "description": "Describes the Migration Center settings related to the project.",
      "id": "Settings",
      "type": "object",
      "properties": {
        "preferenceSet": {
          "type": "string",
          "description": "The preference set used by default for a project."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the resource."
        },
        "disableCloudLogging": {
          "type": "boolean",
          "description": "Disable Cloud Logging for the Migration Center API. Users are billed for the logs."
        }
      }
    },
    "ReportSummaryChartDataDataPoint": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "The X-axis label for this data point."
        },
        "value": {
          "description": "The Y-axis value for this data point.",
          "type": "number",
          "format": "double"
        }
      },
      "id": "ReportSummaryChartDataDataPoint",
      "description": "Describes a single data point in the Chart."
    },
    "MachineSeries": {
      "description": "A Compute Engine machine series.",
      "id": "MachineSeries",
      "properties": {
        "code": {
          "type": "string",
          "description": "Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series."
        }
      },
      "type": "object"
    },
    "VirtualMachinePreferences": {
      "id": "VirtualMachinePreferences",
      "type": "object",
      "properties": {
        "soleTenancyPreferences": {
          "$ref": "SoleTenancyPreferences",
          "description": "Preferences concerning Sole Tenant nodes and virtual machines."
        },
        "regionPreferences": {
          "$ref": "RegionPreferences",
          "description": "Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with."
        },
        "commitmentPlan": {
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "COMMITMENT_PLAN_NONE",
            "COMMITMENT_PLAN_ONE_YEAR",
            "COMMITMENT_PLAN_THREE_YEARS"
          ],
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan.",
            "1 year commitment.",
            "3 years commitment."
          ]
        },
        "vmwareEnginePreferences": {
          "description": "Preferences concerning insights and recommendations for Google Cloud VMware Engine.",
          "$ref": "VmwareEnginePreferences"
        },
        "targetProduct": {
          "type": "string",
          "description": "Target product for assets using this preference set. Specify either target product or business goal, but not both.",
          "enumDescriptions": [
            "Unspecified (default value).",
            "Prefer to migrate to Google Cloud Compute Engine.",
            "Prefer to migrate to Google Cloud VMware Engine.",
            "Prefer to migrate to Google Cloud Sole Tenant Nodes."
          ],
          "enum": [
            "COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY"
          ]
        },
        "sizingOptimizationStrategy": {
          "description": "Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.",
          "enumDescriptions": [
            "Unspecified (default value).",
            "No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.",
            "Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.",
            "Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs."
          ],
          "enum": [
            "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED",
            "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE",
            "SIZING_OPTIMIZATION_STRATEGY_MODERATE",
            "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE"
          ],
          "type": "string"
        },
        "computeEnginePreferences": {
          "$ref": "ComputeEnginePreferences",
          "description": "Compute Engine preferences concern insights and recommendations for Compute Engine target."
        }
      },
      "description": "VirtualMachinePreferences enables you to create sets of assumptions, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets."
    },
    "ReportSummaryVMWareEngineFinding": {
      "description": "A set of findings that applies to assets destined for VMWare Engine.",
      "properties": {
        "allocatedAssetCount": {
          "type": "string",
          "description": "Count of assets which are allocated",
          "format": "int64"
        },
        "allocatedRegions": {
          "items": {
            "type": "string"
          },
          "description": "Set of regions in which the assets were allocated",
          "type": "array"
        },
        "nodeAllocations": {
          "type": "array",
          "items": {
            "$ref": "ReportSummaryVMWareNodeAllocation"
          },
          "description": "Set of per-nodetype allocation records"
        }
      },
      "type": "object",
      "id": "ReportSummaryVMWareEngineFinding"
    },
    "UpdateAssetRequest": {
      "description": "A request to update an asset.",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        },
        "updateMask": {
          "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
          "format": "google-fieldmask",
          "type": "string"
        },
        "asset": {
          "description": "Required. The resource being updated.",
          "$ref": "Asset"
        }
      },
      "id": "UpdateAssetRequest",
      "type": "object"
    },
    "GCSPayloadInfo": {
      "type": "object",
      "description": "A resource that represents a payload hosted on Google Cloud Storage.",
      "id": "GCSPayloadInfo",
      "properties": {
        "path": {
          "description": "The payload path in Google Cloud Storage.",
          "type": "string"
        },
        "format": {
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "type": "string",
          "description": "The import job format.",
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false
          ],
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ]
        }
      }
    },
    "Source": {
      "properties": {
        "pendingFrameCount": {
          "format": "int32",
          "type": "integer",
          "description": "Output only. Number of frames that are still being processed.",
          "readOnly": true
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the source was last updated.",
          "format": "google-datetime"
        },
        "isManaged": {
          "description": "If `true`, the source is managed by other service(s).",
          "type": "boolean"
        },
        "displayName": {
          "description": "User-friendly display name.",
          "type": "string"
        },
        "type": {
          "enum": [
            "SOURCE_TYPE_UNKNOWN",
            "SOURCE_TYPE_UPLOAD",
            "SOURCE_TYPE_GUEST_OS_SCAN",
            "SOURCE_TYPE_INVENTORY_SCAN",
            "SOURCE_TYPE_CUSTOM"
          ],
          "enumDescriptions": [
            "Unspecified",
            "Manually uploaded file (e.g. CSV)",
            "Guest-level info",
            "Inventory-level scan",
            "Third-party owned sources."
          ],
          "type": "string",
          "description": "Data source type."
        },
        "errorFrameCount": {
          "format": "int32",
          "description": "Output only. The number of frames that were reported by the source and contained errors.",
          "type": "integer",
          "readOnly": true
        },
        "description": {
          "description": "Free-text description.",
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "description": "The information confidence of the source. The higher the value, the higher the confidence.",
          "type": "integer"
        },
        "name": {
          "type": "string",
          "description": "Output only. The full name of the source.",
          "readOnly": true
        },
        "state": {
          "enumDescriptions": [
            "Unspecified.",
            "The source is active and ready to be used.",
            "In the process of being deleted.",
            "Source is in an invalid state. Asset frames reported to it will be ignored."
          ],
          "description": "Output only. The state of the source.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETING",
            "INVALID"
          ],
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the source was created.",
          "format": "google-datetime"
        }
      },
      "id": "Source",
      "type": "object",
      "description": "Source represents an object from which asset information is streamed to Migration Center."
    },
    "ListReportConfigsResponse": {
      "description": "Response message for listing report configs.",
      "id": "ListReportConfigsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "reportConfigs": {
          "items": {
            "$ref": "ReportConfig"
          },
          "type": "array",
          "description": "A list of report configs."
        }
      },
      "type": "object"
    },
    "ReportSummaryHistogramChartDataBucket": {
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "type": "object",
      "properties": {
        "count": {
          "format": "int64",
          "type": "string",
          "description": "Count of items in the bucket."
        },
        "lowerBound": {
          "type": "string",
          "format": "int64",
          "description": "Lower bound - inclusive."
        },
        "upperBound": {
          "type": "string",
          "description": "Upper bound - exclusive.",
          "format": "int64"
        }
      },
      "id": "ReportSummaryHistogramChartDataBucket"
    },
    "ReportSummarySoleTenantNodeAllocation": {
      "properties": {
        "allocatedAssetCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of assets allocated to these nodes"
        },
        "nodeCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of this node type to be provisioned"
        },
        "node": {
          "description": "Sole Tenant node type, e.g. \"m3-node-128-3904\"",
          "$ref": "SoleTenantNodeType"
        }
      },
      "id": "ReportSummarySoleTenantNodeAllocation",
      "description": "Represents the assets allocated to a specific Sole-Tenant node type.",
      "type": "object"
    },
    "VirtualMachineDetails": {
      "description": "Details of a VirtualMachine.",
      "id": "VirtualMachineDetails",
      "properties": {
        "vcenterFolder": {
          "description": "Folder name in vCenter where asset resides.",
          "type": "string"
        },
        "platform": {
          "$ref": "PlatformDetails",
          "description": "Platform information."
        },
        "createTime": {
          "description": "VM creation timestamp.",
          "type": "string",
          "format": "google-datetime"
        },
        "powerState": {
          "type": "string",
          "description": "Power state of VM (poweredOn or poweredOff)."
        },
        "osName": {
          "type": "string",
          "description": "The name of the operating system running on the VirtualMachine."
        },
        "vcenterVmId": {
          "type": "string",
          "description": "vCenter VM ID."
        },
        "osVersion": {
          "type": "string",
          "description": "The version of the operating system running on the virtual machine."
        },
        "coreCount": {
          "type": "integer",
          "description": "Number of CPU cores in the VirtualMachine. Must be non-negative.",
          "format": "int32"
        },
        "memoryMb": {
          "description": "The amount of memory in the VirtualMachine. Must be non-negative.",
          "type": "integer",
          "format": "int32"
        },
        "guestOs": {
          "$ref": "GuestOsDetails",
          "description": "Guest OS information."
        },
        "vmUuid": {
          "type": "string",
          "description": "Virtual Machine unique identifier."
        },
        "vmArchitecture": {
          "$ref": "VirtualMachineArchitectureDetails",
          "description": "VM architecture details (vendor, cpu arch)."
        },
        "vmNetwork": {
          "description": "VM network details.",
          "$ref": "VirtualMachineNetworkDetails"
        },
        "vmName": {
          "type": "string",
          "description": "Virtual Machine display name."
        },
        "osFamily": {
          "enumDescriptions": [
            "",
            "Microsoft Windows Server and Desktop.",
            "Various Linux flavors.",
            "Non-Linux Unix flavors."
          ],
          "description": "What family the OS belong to, if known.",
          "enum": [
            "OS_FAMILY_UNKNOWN",
            "OS_FAMILY_WINDOWS",
            "OS_FAMILY_LINUX",
            "OS_FAMILY_UNIX"
          ],
          "type": "string"
        },
        "vmDisks": {
          "description": "VM disk details.",
          "$ref": "VirtualMachineDiskDetails"
        },
        "vcenterUrl": {
          "type": "string",
          "description": "vCenter URL used in collection."
        }
      },
      "type": "object"
    },
    "ReportSummaryVMWareNode": {
      "id": "ReportSummaryVMWareNode",
      "description": "A VMWare Engine Node",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Code to identify VMware Engine node series, e.g. \"ve1-standard-72\". Based on the displayName of cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.nodeTypes"
        }
      }
    },
    "ComputeEngineShapeDescriptor": {
      "properties": {
        "logicalCoreCount": {
          "format": "int32",
          "description": "Number of logical cores.",
          "type": "integer"
        },
        "series": {
          "type": "string",
          "description": "Compute Engine machine series."
        },
        "physicalCoreCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of physical cores."
        },
        "storage": {
          "type": "array",
          "items": {
            "$ref": "ComputeStorageDescriptor"
          },
          "description": "Compute Engine storage. Never empty."
        },
        "machineType": {
          "type": "string",
          "description": "Compute Engine machine type."
        },
        "memoryMb": {
          "description": "Memory in mebibytes.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "ComputeEngineShapeDescriptor",
      "type": "object",
      "description": "Compute Engine target shape descriptor."
    },
    "GuestOsDetails": {
      "description": "Information from Guest-level collections.",
      "properties": {
        "runtime": {
          "description": "Runtime information.",
          "$ref": "GuestRuntimeDetails"
        },
        "config": {
          "description": "OS and app configuration.",
          "$ref": "GuestConfigDetails"
        }
      },
      "id": "GuestOsDetails",
      "type": "object"
    },
    "NetworkConnection": {
      "properties": {
        "localIpAddress": {
          "type": "string",
          "description": "Local IP address."
        },
        "remoteIpAddress": {
          "type": "string",
          "description": "Remote IP address."
        },
        "state": {
          "description": "Connection state (e.g. CONNECTED).",
          "type": "string"
        },
        "pid": {
          "description": "Process ID.",
          "format": "int64",
          "type": "string"
        },
        "remotePort": {
          "description": "Remote port.",
          "format": "int32",
          "type": "integer"
        },
        "localPort": {
          "type": "integer",
          "format": "int32",
          "description": "Local port."
        },
        "protocol": {
          "type": "string",
          "description": "Connection protocol (e.g. TCP/UDP)."
        },
        "processName": {
          "description": "Process or service name.",
          "type": "string"
        }
      },
      "id": "NetworkConnection",
      "type": "object"
    },
    "VmwareDiskConfig": {
      "properties": {
        "shared": {
          "type": "boolean",
          "description": "Is VMDK shared with other VMs."
        },
        "vmdkDiskMode": {
          "type": "string",
          "description": "VMDK disk mode."
        },
        "rdmCompatibilityMode": {
          "type": "string",
          "description": "RDM compatibility mode."
        },
        "backingType": {
          "type": "string",
          "enum": [
            "BACKING_TYPE_UNSPECIFIED",
            "BACKING_TYPE_FLAT_V1",
            "BACKING_TYPE_FLAT_V2",
            "BACKING_TYPE_PMEM",
            "BACKING_TYPE_RDM_V1",
            "BACKING_TYPE_RDM_V2",
            "BACKING_TYPE_SESPARSE",
            "BACKING_TYPE_SESPARSE_V1",
            "BACKING_TYPE_SESPARSE_V2"
          ],
          "description": "VMDK backing type.",
          "enumDescriptions": [
            "Default value.",
            "Flat v1.",
            "Flat v2.",
            "Persistent memory, also known as Non-Volatile Memory (NVM).",
            "Raw Disk Memory v1.",
            "Raw Disk Memory v2.",
            "SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.",
            "SEsparse v1.",
            "SEsparse v1."
          ]
        }
      },
      "id": "VmwareDiskConfig",
      "description": "VMware disk config details.",
      "type": "object"
    },
    "AggregationResultSum": {
      "type": "object",
      "description": "The result of a sum aggregation.",
      "id": "AggregationResultSum",
      "properties": {
        "value": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "VmwareEngineMigrationTarget": {
      "type": "object",
      "id": "VmwareEngineMigrationTarget",
      "properties": {},
      "description": "VMWare engine migration target."
    },
    "ImportDataFile": {
      "description": "A resource that represents a payload file in an import job.",
      "id": "ImportDataFile",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE"
          ],
          "description": "Output only. The state of the import data file.",
          "enumDescriptions": [
            "Default value.",
            "The data file is being created.",
            "The data file completed initialization."
          ]
        },
        "format": {
          "description": "Required. The payload format.",
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "type": "string",
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ],
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false
          ]
        },
        "uploadFileInfo": {
          "description": "Information about a file that is uploaded to a storage service.",
          "$ref": "UploadFileInfo"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the file was created.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the file.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "Date": {
      "id": "Date",
      "type": "object",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "properties": {
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
        },
        "month": {
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "type": "integer",
          "format": "int32"
        },
        "year": {
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer"
        }
      }
    },
    "NetworkAddress": {
      "id": "NetworkAddress",
      "properties": {
        "assignment": {
          "description": "Whether DHCP is used to assign addresses.",
          "enum": [
            "ADDRESS_ASSIGNMENT_UNSPECIFIED",
            "ADDRESS_ASSIGNMENT_STATIC",
            "ADDRESS_ASSIGNMENT_DHCP"
          ],
          "enumDescriptions": [
            "Unknown (default value).",
            "Staticly assigned IP.",
            "Dynamically assigned IP (DHCP)."
          ],
          "type": "string"
        },
        "subnetMask": {
          "type": "string",
          "description": "Subnet mask."
        },
        "ipAddress": {
          "type": "string",
          "description": "Assigned or configured IP Address."
        },
        "bcast": {
          "type": "string",
          "description": "Broadcast address."
        },
        "fqdn": {
          "type": "string",
          "description": "Fully qualified domain name."
        }
      },
      "description": "Details of network address.",
      "type": "object"
    },
    "MachinePreferences": {
      "type": "object",
      "id": "MachinePreferences",
      "properties": {
        "allowedMachineSeries": {
          "items": {
            "$ref": "MachineSeries"
          },
          "description": "Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.",
          "type": "array"
        }
      },
      "description": "The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions."
    },
    "NetworkUsageSample": {
      "description": "Network usage sample. Values are across all network interfaces.",
      "type": "object",
      "id": "NetworkUsageSample",
      "properties": {
        "averageIngressBps": {
          "format": "float",
          "description": "Average network ingress in B/s sampled over a short window. Must be non-negative.",
          "type": "number"
        },
        "averageEgressBps": {
          "description": "Average network egress in B/s sampled over a short window. Must be non-negative.",
          "format": "float",
          "type": "number"
        }
      }
    },
    "BatchUpdateAssetsRequest": {
      "description": "A request to update a list of assets.",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "UpdateAssetRequest"
          },
          "description": "Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch."
        }
      },
      "type": "object",
      "id": "BatchUpdateAssetsRequest"
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "type": "object",
      "properties": {},
      "description": "The request message for Operations.CancelOperation."
    },
    "Insight": {
      "type": "object",
      "id": "Insight",
      "description": "An insight about an asset.",
      "properties": {
        "genericInsight": {
          "description": "Output only. A generic insight about an asset.",
          "readOnly": true,
          "$ref": "GenericInsight"
        },
        "migrationInsight": {
          "$ref": "MigrationInsight",
          "description": "Output only. An insight about potential migrations for an asset.",
          "readOnly": true
        }
      }
    },
    "PlatformDetails": {
      "description": "Information about the platform.",
      "type": "object",
      "id": "PlatformDetails",
      "properties": {
        "physicalDetails": {
          "$ref": "PhysicalPlatformDetails",
          "description": "Physical machines platform details."
        },
        "vmwareDetails": {
          "$ref": "VmwarePlatformDetails",
          "description": "VMware specific details."
        },
        "azureVmDetails": {
          "$ref": "AzureVmPlatformDetails",
          "description": "Azure VM specific details."
        },
        "awsEc2Details": {
          "$ref": "AwsEc2PlatformDetails",
          "description": "AWS EC2 specific details."
        },
        "genericDetails": {
          "description": "Generic platform details.",
          "$ref": "GenericPlatformDetails"
        }
      }
    },
    "DailyResourceUsageAggregationStats": {
      "type": "object",
      "description": "Statistical aggregation of samples for a single resource usage.",
      "id": "DailyResourceUsageAggregationStats",
      "properties": {
        "average": {
          "description": "Average usage value.",
          "format": "float",
          "type": "number"
        },
        "peak": {
          "type": "number",
          "description": "Peak usage value.",
          "format": "float"
        },
        "ninteyFifthPercentile": {
          "description": "95th percentile usage value.",
          "type": "number",
          "format": "float"
        },
        "median": {
          "type": "number",
          "format": "float",
          "description": "Median usage value."
        }
      }
    },
    "ImportJob": {
      "id": "ImportJob",
      "type": "object",
      "description": "A resource that represents the background job that imports asset frames.",
      "properties": {
        "validationReport": {
          "readOnly": true,
          "description": "Output only. The report with the validation results of the import job.",
          "$ref": "ValidationReport"
        },
        "inlinePayload": {
          "$ref": "InlinePayloadInfo",
          "description": "The payload is included in the request, mainly used for small import jobs."
        },
        "name": {
          "description": "Output only. The full name of the import job.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The timestamp when the import job was created.",
          "type": "string",
          "readOnly": true
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "state": {
          "enumDescriptions": [
            "Default value.",
            "The import job is pending.",
            "The processing of the import job is ongoing.",
            "The import job processing has completed.",
            "The import job failed to be processed.",
            "The import job is being validated.",
            "The import job contains blocking errors.",
            "The validation of the job completed with no blocking errors."
          ],
          "enum": [
            "IMPORT_JOB_STATE_UNSPECIFIED",
            "IMPORT_JOB_STATE_PENDING",
            "IMPORT_JOB_STATE_RUNNING",
            "IMPORT_JOB_STATE_COMPLETED",
            "IMPORT_JOB_STATE_FAILED",
            "IMPORT_JOB_STATE_VALIDATING",
            "IMPORT_JOB_STATE_FAILED_VALIDATION",
            "IMPORT_JOB_STATE_READY"
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. The state of the import job."
        },
        "assetSource": {
          "type": "string",
          "description": "Required. Reference to a source."
        },
        "executionReport": {
          "readOnly": true,
          "description": "Output only. The report with the results of running the import job.",
          "$ref": "ExecutionReport"
        },
        "completeTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the import job was completed.",
          "format": "google-datetime"
        },
        "gcsPayload": {
          "deprecated": true,
          "$ref": "GCSPayloadInfo",
          "description": "The payload is in Google Cloud Storage."
        },
        "updateTime": {
          "description": "Output only. The timestamp when the import job was last updated.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      }
    },
    "Money": {
      "id": "Money",
      "description": "Represents an amount of money with its currency type.",
      "type": "object",
      "properties": {
        "units": {
          "type": "string",
          "format": "int64",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
        },
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        }
      }
    },
    "ImportError": {
      "properties": {
        "errorDetails": {
          "description": "The error information.",
          "type": "string"
        },
        "severity": {
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ],
          "description": "The severity of the error.",
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        }
      },
      "id": "ImportError",
      "description": "A resource that reports the errors encountered while processing an import job.",
      "type": "object"
    },
    "AddAssetsToGroupRequest": {
      "id": "AddAssetsToGroupRequest",
      "description": "A request to add assets to a group.",
      "properties": {
        "assets": {
          "description": "Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000.",
          "$ref": "AssetList"
        },
        "allowExisting": {
          "type": "boolean",
          "description": "Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`."
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ImportRowError": {
      "id": "ImportRowError",
      "type": "object",
      "properties": {
        "vmName": {
          "type": "string",
          "description": "The name of the VM in the row."
        },
        "vmUuid": {
          "description": "The VM UUID.",
          "type": "string"
        },
        "rowNumber": {
          "deprecated": true,
          "format": "int32",
          "type": "integer",
          "description": "The row number where the error was detected."
        },
        "errors": {
          "items": {
            "$ref": "ImportError"
          },
          "type": "array",
          "description": "The list of errors detected in the row."
        }
      },
      "description": "A resource that reports the import job errors at row level."
    },
    "ReportSummary": {
      "description": "Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report.",
      "type": "object",
      "id": "ReportSummary",
      "properties": {
        "allAssetsStats": {
          "description": "Aggregate statistics for all the assets across all the groups.",
          "$ref": "ReportSummaryAssetAggregateStats"
        },
        "groupFindings": {
          "description": "Findings for each Group included in this report.",
          "type": "array",
          "items": {
            "$ref": "ReportSummaryGroupFinding"
          }
        }
      }
    },
    "VmwarePlatformDetails": {
      "description": "VMware specific details.",
      "id": "VmwarePlatformDetails",
      "properties": {
        "esxVersion": {
          "type": "string",
          "description": "ESX version."
        },
        "osid": {
          "description": "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.",
          "type": "string"
        },
        "vcenterVersion": {
          "description": "vCenter version.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListImportJobsResponse": {
      "description": "A response for listing import jobs.",
      "type": "object",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "importJobs": {
          "items": {
            "$ref": "ImportJob"
          },
          "type": "array",
          "description": "The list of import jobs."
        }
      },
      "id": "ListImportJobsResponse"
    },
    "AggregationCount": {
      "type": "object",
      "id": "AggregationCount",
      "description": "Object count.",
      "properties": {}
    },
    "BiosDetails": {
      "id": "BiosDetails",
      "description": "Details about the BIOS.",
      "type": "object",
      "properties": {
        "biosVersion": {
          "description": "BIOS version.",
          "type": "string"
        },
        "smbiosUuid": {
          "description": "SMBIOS UUID.",
          "type": "string"
        },
        "biosName": {
          "type": "string",
          "description": "BIOS name."
        },
        "biosManufacturer": {
          "type": "string",
          "description": "BIOS manufacturer."
        },
        "biosReleaseDate": {
          "description": "BIOS release date.",
          "type": "string"
        }
      }
    },
    "DiskUsageSample": {
      "id": "DiskUsageSample",
      "properties": {
        "averageIops": {
          "description": "Average IOPS sampled over a short window. Must be non-negative. Must be equal to the sum of read and write if one of them is positive. if both read and write are zero they are ignored.",
          "format": "float",
          "type": "number"
        }
      },
      "description": "Disk usage sample. Values are across all disks.",
      "type": "object"
    },
    "Group": {
      "type": "object",
      "id": "Group",
      "properties": {
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the group was created."
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the group.",
          "readOnly": true
        },
        "description": {
          "description": "The description of the resource.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        },
        "updateTime": {
          "description": "Output only. The timestamp when the group was last updated.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name."
        }
      },
      "description": "A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups."
    },
    "ReportSummaryGroupPreferenceSetFinding": {
      "properties": {
        "monthlyCostTotal": {
          "description": "Total monthly cost for this preference set.",
          "$ref": "Money"
        },
        "monthlyCostNetworkEgress": {
          "$ref": "Money",
          "description": "Network Egress monthly cost for this preference set."
        },
        "monthlyCostOther": {
          "$ref": "Money",
          "description": "Miscellaneous monthly cost for this preference set."
        },
        "monthlyCostStorage": {
          "description": "Storage monthly cost for this preference set.",
          "$ref": "Money"
        },
        "preferredRegion": {
          "deprecated": true,
          "description": "Target region for this Preference Set",
          "type": "string"
        },
        "monthlyCostCompute": {
          "description": "Compute monthly cost for this preference set.",
          "$ref": "Money"
        },
        "monthlyCostOsLicense": {
          "$ref": "Money",
          "description": "Licensing monthly cost for this preference set."
        },
        "machinePreferences": {
          "$ref": "VirtualMachinePreferences",
          "description": "A set of preferences that applies to all machines in the context."
        },
        "vmwareEngineFinding": {
          "description": "A set of findings that applies to VMWare machines in the input.",
          "$ref": "ReportSummaryVMWareEngineFinding"
        },
        "topPriority": {
          "description": "Text describing the business priority specified for this Preference Set",
          "type": "string",
          "deprecated": true
        },
        "displayName": {
          "type": "string",
          "description": "Display Name of the Preference Set"
        },
        "description": {
          "description": "Description for the Preference Set.",
          "type": "string"
        },
        "machineFinding": {
          "$ref": "ReportSummaryMachineFinding",
          "description": "A set of findings that applies to all machines in the input."
        },
        "soleTenantFinding": {
          "$ref": "ReportSummarySoleTenantFinding",
          "description": "A set of findings that applies to Stole-Tenant machines in the input."
        },
        "pricingTrack": {
          "description": "Text describing the pricing track specified for this Preference Set",
          "deprecated": true,
          "type": "string"
        }
      },
      "id": "ReportSummaryGroupPreferenceSetFinding",
      "description": "Summary Findings for a specific Group/PreferenceSet combination.",
      "type": "object"
    },
    "RunningService": {
      "description": "Guest OS running service details.",
      "id": "RunningService",
      "type": "object",
      "properties": {
        "startMode": {
          "type": "string",
          "description": "Service start mode (raw, OS-agnostic)."
        },
        "status": {
          "type": "string",
          "description": "Service status."
        },
        "name": {
          "type": "string",
          "description": "Service name."
        },
        "cmdline": {
          "description": "Service command line.",
          "type": "string"
        },
        "pid": {
          "type": "string",
          "format": "int64",
          "description": "Service pid."
        },
        "exePath": {
          "type": "string",
          "description": "Service binary path."
        },
        "state": {
          "description": "Service state (raw, OS-agnostic).",
          "type": "string"
        }
      }
    },
    "ReportConfigGroupPreferenceSetAssignment": {
      "description": "Represents a combination of a group with a preference set.",
      "id": "ReportConfigGroupPreferenceSetAssignment",
      "properties": {
        "preferenceSet": {
          "description": "Required. Name of the Preference Set.",
          "type": "string"
        },
        "group": {
          "description": "Required. Name of the group.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RunningProcess": {
      "properties": {
        "attributes": {
          "type": "object",
          "description": "Process extended attributes.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "user": {
          "type": "string",
          "description": "User running the process."
        },
        "pid": {
          "description": "Process ID.",
          "type": "string",
          "format": "int64"
        },
        "exePath": {
          "type": "string",
          "description": "Process binary path."
        },
        "cmdline": {
          "type": "string",
          "description": "Process full command line."
        }
      },
      "description": "Guest OS running process details.",
      "id": "RunningProcess",
      "type": "object"
    },
    "FileValidationReport": {
      "id": "FileValidationReport",
      "description": "A resource that aggregates the validation errors found in an import job file.",
      "properties": {
        "rowErrors": {
          "type": "array",
          "description": "Partial list of rows that encountered validation error.",
          "items": {
            "$ref": "ImportRowError"
          }
        },
        "fileErrors": {
          "description": "List of file level errors.",
          "items": {
            "$ref": "ImportError"
          },
          "type": "array"
        },
        "fileName": {
          "type": "string",
          "description": "The name of the file."
        },
        "partialReport": {
          "type": "boolean",
          "description": "Flag indicating that processing was aborted due to maximum number of errors."
        }
      },
      "type": "object"
    },
    "ListErrorFramesResponse": {
      "description": "A response for listing error frames.",
      "id": "ListErrorFramesResponse",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errorFrames": {
          "type": "array",
          "items": {
            "$ref": "ErrorFrame"
          },
          "description": "The list of error frames."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AggregationResultHistogram": {
      "description": "The result of a bucketed histogram aggregation.",
      "properties": {
        "buckets": {
          "type": "array",
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "items": {
            "$ref": "AggregationResultHistogramBucket"
          }
        }
      },
      "type": "object",
      "id": "AggregationResultHistogram"
    },
    "ListSourcesResponse": {
      "properties": {
        "sources": {
          "description": "The list of sources.",
          "items": {
            "$ref": "Source"
          },
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        }
      },
      "id": "ListSourcesResponse",
      "description": "Response message for listing sources.",
      "type": "object"
    },
    "DailyResourceUsageAggregationCPU": {
      "description": "Statistical aggregation of CPU usage.",
      "id": "DailyResourceUsageAggregationCPU",
      "properties": {
        "utilizationPercentage": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "CPU utilization percentage."
        }
      },
      "type": "object"
    },
    "NfsExport": {
      "id": "NfsExport",
      "type": "object",
      "properties": {
        "exportDirectory": {
          "type": "string",
          "description": "The directory being exported."
        },
        "hosts": {
          "type": "array",
          "description": "The hosts or networks to which the export is being shared.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "NFS export."
    },
    "Selinux": {
      "properties": {
        "mode": {
          "type": "string",
          "description": "SELinux mode enforcing / permissive."
        },
        "enabled": {
          "type": "boolean",
          "description": "Is SELinux enabled."
        }
      },
      "type": "object",
      "description": "SELinux details.",
      "id": "Selinux"
    },
    "ListPreferenceSetsResponse": {
      "description": "Response message for listing preference sets.",
      "id": "ListPreferenceSetsResponse",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "preferenceSets": {
          "type": "array",
          "items": {
            "$ref": "PreferenceSet"
          },
          "description": "The list of PreferenceSets"
        }
      },
      "type": "object"
    },
    "AggregationResult": {
      "type": "object",
      "description": "Message describing a result of an aggregation.",
      "id": "AggregationResult",
      "properties": {
        "field": {
          "type": "string"
        },
        "count": {
          "$ref": "AggregationResultCount"
        },
        "sum": {
          "$ref": "AggregationResultSum"
        },
        "histogram": {
          "$ref": "AggregationResultHistogram"
        },
        "frequency": {
          "$ref": "AggregationResultFrequency"
        }
      }
    },
    "AssetFrame": {
      "id": "AssetFrame",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Generic asset attributes."
        },
        "reportTime": {
          "description": "The time the data was reported.",
          "format": "google-datetime",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "virtualMachineDetails": {
          "description": "Asset information specific for virtual machines.",
          "$ref": "VirtualMachineDetails"
        },
        "traceToken": {
          "type": "string",
          "description": "Optional. Trace token is optionally provided to assist with debugging and traceability."
        },
        "performanceSamples": {
          "items": {
            "$ref": "PerformanceSample"
          },
          "description": "Asset performance data samples. Samples that are from more than 40 days ago or after tomorrow are ignored.",
          "type": "array"
        }
      },
      "description": "Contains data reported from an inventory source on an asset.",
      "type": "object"
    },
    "FrameViolationEntry": {
      "type": "object",
      "description": "A resource that contains a single violation of a reported `AssetFrame` resource.",
      "properties": {
        "field": {
          "type": "string",
          "description": "The field of the original frame where the violation occurred."
        },
        "violation": {
          "type": "string",
          "description": "A message describing the violation."
        }
      },
      "id": "FrameViolationEntry"
    },
    "FitDescriptor": {
      "description": "Describes the fit level of an asset for migration to a specific target.",
      "id": "FitDescriptor",
      "properties": {
        "fitLevel": {
          "description": "Fit level.",
          "enumDescriptions": [
            "Not enough information.",
            "Fit.",
            "No Fit.",
            "Fit with effort."
          ],
          "enum": [
            "FIT_LEVEL_UNSPECIFIED",
            "FIT",
            "NO_FIT",
            "REQUIRES_EFFORT"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListAssetsResponse": {
      "type": "object",
      "description": "Response message for listing assets.",
      "id": "ListAssetsResponse",
      "properties": {
        "assets": {
          "items": {
            "$ref": "Asset"
          },
          "description": "A list of assets.",
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      }
    },
    "ListGroupsResponse": {
      "id": "ListGroupsResponse",
      "description": "A response for listing groups.",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "groups": {
          "items": {
            "$ref": "Group"
          },
          "type": "array",
          "description": "The list of Group"
        }
      },
      "type": "object"
    },
    "RuntimeNetworkInfo": {
      "id": "RuntimeNetworkInfo",
      "description": "Runtime networking information.",
      "properties": {
        "connections": {
          "$ref": "NetworkConnectionList",
          "description": "Network connections."
        },
        "netstatTime": {
          "$ref": "DateTime",
          "description": "Netstat time collected."
        },
        "netstat": {
          "type": "string",
          "description": "Netstat (raw, OS-agnostic)."
        }
      },
      "type": "object"
    },
    "ReportSummaryUtilizationChartData": {
      "properties": {
        "free": {
          "type": "string",
          "description": "Aggregate value which falls into the \"Free\" bucket.",
          "format": "int64"
        },
        "used": {
          "description": "Aggregate value which falls into the \"Used\" bucket.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "ReportSummaryUtilizationChartData",
      "type": "object",
      "description": "Utilization Chart is a specific type of visualization which displays a metric classified into \"Used\" and \"Free\" buckets."
    },
    "Report": {
      "id": "Report",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Creation timestamp.",
          "format": "google-datetime"
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Default Report type.",
            "Total cost of ownership Report type."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TOTAL_COST_OF_OWNERSHIP"
          ],
          "description": "Report type."
        },
        "updateTime": {
          "description": "Output only. Last update timestamp.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "type": "string",
          "description": "Report creation state.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "SUCCEEDED",
            "FAILED"
          ],
          "enumDescriptions": [
            "Default Report creation state.",
            "Creating Report.",
            "Successfully created Report.",
            "Failed to create Report."
          ]
        },
        "summary": {
          "readOnly": true,
          "description": "Output only. Summary view of the Report.",
          "$ref": "ReportSummary"
        },
        "name": {
          "type": "string",
          "description": "Output only. Name of resource.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Report represents a point-in-time rendering of the ReportConfig results."
    },
    "VirtualMachineArchitectureDetails": {
      "type": "object",
      "properties": {
        "cpuThreadCount": {
          "description": "Number of CPU threads allocated to the machine.",
          "format": "int32",
          "type": "integer"
        },
        "bios": {
          "$ref": "BiosDetails",
          "description": "BIOS Details."
        },
        "hyperthreading": {
          "enumDescriptions": [
            "Unknown (default value).",
            "Hyperthreading is disabled.",
            "Hyperthreading is enabled."
          ],
          "description": "CPU hyperthreading support.",
          "enum": [
            "HYPER_THREADING_UNSPECIFIED",
            "HYPER_THREADING_DISABLED",
            "HYPER_THREADING_ENABLED"
          ],
          "type": "string"
        },
        "cpuArchitecture": {
          "description": "CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc.",
          "type": "string"
        },
        "cpuManufacturer": {
          "description": "CPU manufacturer, e.g., \"Intel\", \"AMD\".",
          "type": "string"
        },
        "vendor": {
          "type": "string",
          "description": "Hardware vendor."
        },
        "cpuName": {
          "description": "CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc.",
          "type": "string"
        },
        "cpuSocketCount": {
          "type": "integer",
          "description": "Number of processor sockets allocated to the machine.",
          "format": "int32"
        },
        "firmware": {
          "description": "Firmware (BIOS/efi).",
          "type": "string"
        }
      },
      "description": "Details of the VM architecture.",
      "id": "VirtualMachineArchitectureDetails"
    },
    "GoogleKubernetesEngineMigrationTarget": {
      "description": "GKE migration target.",
      "id": "GoogleKubernetesEngineMigrationTarget",
      "type": "object",
      "properties": {}
    },
    "AggregationSum": {
      "description": "Sum of field values.",
      "id": "AggregationSum",
      "type": "object",
      "properties": {}
    },
    "UploadFileInfo": {
      "description": "A resource that contains a URI to which a data file can be uploaded.",
      "id": "UploadFileInfo",
      "type": "object",
      "properties": {
        "signedUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Upload URI for the file."
        },
        "uriExpirationTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Expiration time of the upload URI.",
          "type": "string"
        },
        "headers": {
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          },
          "description": "Output only. The headers that were used to sign the URL."
        }
      }
    },
    "AggregateAssetsValuesResponse": {
      "description": "A response to a request to aggregated assets values.",
      "id": "AggregateAssetsValuesResponse",
      "properties": {
        "results": {
          "description": "The aggregation results.",
          "items": {
            "$ref": "AggregationResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "VirtualMachineNetworkDetails": {
      "id": "VirtualMachineNetworkDetails",
      "description": "Details of network adapters and settings.",
      "properties": {
        "networkAdapters": {
          "$ref": "NetworkAdapterList",
          "description": "List of network adapters."
        },
        "publicIpAddress": {
          "type": "string",
          "description": "Public IP address of the machine."
        },
        "primaryIpAddress": {
          "type": "string",
          "description": "IP address of the machine."
        },
        "defaultGw": {
          "description": "Default gateway address.",
          "type": "string"
        },
        "primaryMacAddress": {
          "type": "string",
          "description": "MAC address of the machine. This property is used to uniqly identify the machine."
        }
      },
      "type": "object"
    },
    "InlinePayloadInfo": {
      "id": "InlinePayloadInfo",
      "type": "object",
      "properties": {
        "format": {
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ],
          "type": "string",
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false
          ],
          "description": "The import job format.",
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ]
        },
        "payload": {
          "description": "List of payload files.",
          "items": {
            "$ref": "PayloadFile"
          },
          "type": "array"
        }
      },
      "description": "A resource that represents the inline import job payload."
    },
    "ComputeEngineMigrationTarget": {
      "id": "ComputeEngineMigrationTarget",
      "properties": {
        "shape": {
          "description": "Description of the suggested shape for the migration target.",
          "$ref": "ComputeEngineShapeDescriptor"
        }
      },
      "description": "Compute engine migration target.",
      "type": "object"
    },
    "ExecutionReport": {
      "type": "object",
      "description": "A resource that reports result of the import job execution.",
      "properties": {
        "framesReported": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of asset frames reported for the import job."
        },
        "totalRowsCount": {
          "description": "Total number of rows in the import job.",
          "type": "integer",
          "format": "int32"
        },
        "jobErrors": {
          "items": {
            "$ref": "ImportError"
          },
          "description": "List of job-level errors. Deprecated, use the job errors under execution_errors instead.",
          "type": "array",
          "deprecated": true
        },
        "executionErrors": {
          "description": "Validation errors encountered during the execution of the import job.",
          "$ref": "ValidationReport"
        }
      },
      "id": "ExecutionReport"
    },
    "DiskEntryList": {
      "type": "object",
      "id": "DiskEntryList",
      "description": "VM disks.",
      "properties": {
        "entries": {
          "description": "Disk entries.",
          "items": {
            "$ref": "DiskEntry"
          },
          "type": "array"
        }
      }
    },
    "ComputeStorageDescriptor": {
      "id": "ComputeStorageDescriptor",
      "type": "object",
      "description": "Compute Engine storage option descriptor.",
      "properties": {
        "type": {
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ],
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ],
          "description": "Disk type backing the storage.",
          "type": "string"
        },
        "sizeGb": {
          "format": "int32",
          "type": "integer",
          "description": "Disk size in GiB."
        }
      }
    },
    "ReportSummaryAssetAggregateStats": {
      "description": "Aggregate statistics for a collection of assets.",
      "properties": {
        "memoryUtilization": {
          "deprecated": true,
          "$ref": "ReportSummaryChartData",
          "description": "Total memory split into Used/Free buckets."
        },
        "totalAssets": {
          "description": "Count of the number of unique assets in this collection.",
          "format": "int64",
          "type": "string"
        },
        "assetAge": {
          "$ref": "ReportSummaryChartData",
          "description": "Count of assets grouped by age.",
          "deprecated": true
        },
        "storageUtilization": {
          "description": "Total storage split into Used/Free buckets.",
          "$ref": "ReportSummaryChartData",
          "deprecated": true
        },
        "storageUtilizationChart": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryUtilizationChartData"
        },
        "memoryBytesHistogram": {
          "description": "Histogram showing a distribution of memory sizes.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "totalMemoryBytes": {
          "description": "Sum of the memory in bytes of all the assets in this collection.",
          "type": "string",
          "format": "int64"
        },
        "operatingSystem": {
          "description": "Count of assets grouped by Operating System families.",
          "$ref": "ReportSummaryChartData"
        },
        "storageBytesHistogram": {
          "description": "Histogram showing a distribution of memory sizes.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "totalCores": {
          "type": "string",
          "format": "int64",
          "description": "Sum of the CPU core count of all the assets in this collection."
        },
        "memoryUtilizationChart": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryUtilizationChartData"
        },
        "coreCountHistogram": {
          "description": "Histogram showing a distribution of CPU core counts.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "totalStorageBytes": {
          "format": "int64",
          "description": "Sum of persistent storage in bytes of all the assets in this collection.",
          "type": "string"
        }
      },
      "id": "ReportSummaryAssetAggregateStats",
      "type": "object"
    },
    "NetworkAdapterDetails": {
      "properties": {
        "adapterType": {
          "description": "Network adapter type (e.g. VMXNET3).",
          "type": "string"
        },
        "addresses": {
          "$ref": "NetworkAddressList",
          "description": "NetworkAddressList"
        },
        "macAddress": {
          "description": "MAC address.",
          "type": "string"
        }
      },
      "description": "Details of network adapter.",
      "id": "NetworkAdapterDetails",
      "type": "object"
    },
    "BatchUpdateAssetsResponse": {
      "description": "Response for updating a list of assets.",
      "id": "BatchUpdateAssetsResponse",
      "type": "object",
      "properties": {
        "assets": {
          "type": "array",
          "description": "Update asset content. The content only includes values after field mask being applied.",
          "items": {
            "$ref": "Asset"
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "type": "object",
      "properties": {
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "apiVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. API version used to start the operation."
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true
        },
        "statusMessage": {
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        }
      },
      "description": "Represents the metadata of the long-running operation."
    },
    "SoleTenancyPreferences": {
      "description": "Preferences concerning Sole Tenancy nodes and VMs.",
      "id": "SoleTenancyPreferences",
      "properties": {
        "hostMaintenancePolicy": {
          "type": "string",
          "enum": [
            "HOST_MAINTENANCE_POLICY_UNSPECIFIED",
            "HOST_MAINTENANCE_POLICY_DEFAULT",
            "HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE",
            "HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP"
          ],
          "enumDescriptions": [
            "Unspecified host maintenance policy.",
            "Default host maintenance policy.",
            "Restart in place host maintenance policy.",
            "Migrate within node group host maintenance policy."
          ],
          "description": "Sole Tenancy nodes maintenance policy."
        },
        "cpuOvercommitRatio": {
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.",
          "type": "number",
          "format": "double"
        },
        "commitmentPlan": {
          "type": "string",
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR",
            "COMMITMENT_3_YEAR"
          ],
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment.",
            "3 years commitment."
          ],
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with."
        },
        "nodeTypes": {
          "description": "A list of sole tenant node types. An empty list means that all possible node types will be considered.",
          "type": "array",
          "items": {
            "$ref": "SoleTenantNodeType"
          }
        }
      },
      "type": "object"
    },
    "Location": {
      "description": "A resource that represents a Google Cloud location.",
      "type": "object",
      "properties": {
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "Location"
    },
    "GuestConfigDetails": {
      "id": "GuestConfigDetails",
      "type": "object",
      "properties": {
        "issue": {
          "type": "string",
          "description": "OS issue (typically /etc/issue in Linux)."
        },
        "hosts": {
          "description": "Hosts file (/etc/hosts).",
          "$ref": "HostsEntryList"
        },
        "fstab": {
          "description": "Mount list (Linux fstab).",
          "$ref": "FstabEntryList"
        },
        "selinux": {
          "$ref": "Selinux",
          "description": "SELinux details."
        },
        "nfsExports": {
          "$ref": "NfsExportList",
          "description": "NFS exports."
        }
      },
      "description": "Guest OS config information."
    },
    "BatchDeleteAssetsRequest": {
      "id": "BatchDeleteAssetsRequest",
      "type": "object",
      "properties": {
        "allowMissing": {
          "description": "Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`.",
          "type": "boolean"
        },
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}."
        }
      },
      "description": "A request to delete a list of asset."
    },
    "RunningServiceList": {
      "properties": {
        "services": {
          "items": {
            "$ref": "RunningService"
          },
          "description": "Running service entries.",
          "type": "array"
        }
      },
      "description": "List of running guest OS services.",
      "id": "RunningServiceList",
      "type": "object"
    },
    "ReportAssetFramesResponse": {
      "description": "A response to a call to `ReportAssetFrame`.",
      "id": "ReportAssetFramesResponse",
      "type": "object",
      "properties": {}
    },
    "AggregationResultFrequency": {
      "type": "object",
      "id": "AggregationResultFrequency",
      "description": "The result of a frequency distribution aggregation.",
      "properties": {
        "values": {
          "type": "object",
          "additionalProperties": {
            "format": "int64",
            "type": "string"
          }
        }
      }
    },
    "ReportSummaryChartData": {
      "properties": {
        "dataPoints": {
          "type": "array",
          "items": {
            "$ref": "ReportSummaryChartDataDataPoint"
          },
          "description": "Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value."
        }
      },
      "description": "Describes a collection of data points rendered as a Chart.",
      "id": "ReportSummaryChartData",
      "type": "object"
    },
    "ErrorFrame": {
      "type": "object",
      "properties": {
        "ingestionTime": {
          "description": "Output only. Frame ingestion time.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "violations": {
          "type": "array",
          "description": "Output only. All the violations that were detected for the frame.",
          "items": {
            "$ref": "FrameViolationEntry"
          },
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The identifier of the ErrorFrame."
        },
        "originalFrame": {
          "readOnly": true,
          "$ref": "AssetFrame",
          "description": "Output only. The frame that was originally reported."
        }
      },
      "id": "ErrorFrame",
      "description": "Message representing a frame which failed to be processed due to an error."
    },
    "NetworkAddressList": {
      "id": "NetworkAddressList",
      "properties": {
        "addresses": {
          "items": {
            "$ref": "NetworkAddress"
          },
          "type": "array",
          "description": "Network address entries."
        }
      },
      "type": "object",
      "description": "List of allocated/assigned network addresses."
    },
    "SoleTenantNodeType": {
      "description": "A Sole Tenant node type.",
      "id": "SoleTenantNodeType",
      "type": "object",
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes"
        }
      }
    },
    "RunImportJobRequest": {
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A request to run an import job.",
      "id": "RunImportJobRequest"
    },
    "Asset": {
      "id": "Asset",
      "type": "object",
      "description": "An asset represents a resource in your environment. Asset types include virtual machines and databases.",
      "properties": {
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "virtualMachineDetails": {
          "description": "Output only. Asset information specific for virtual machines.",
          "$ref": "VirtualMachineDetails",
          "readOnly": true
        },
        "insightList": {
          "description": "Output only. The list of insights associated with the asset.",
          "readOnly": true,
          "$ref": "InsightList"
        },
        "sources": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "Output only. The list of sources contributing to the asset."
        },
        "attributes": {
          "type": "object",
          "description": "Generic asset attributes.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "performanceData": {
          "$ref": "AssetPerformanceData",
          "readOnly": true,
          "description": "Output only. Performance data for the asset."
        },
        "assignedGroups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. The list of groups that the asset is assigned to.",
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the asset was last updated.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The timestamp when the asset was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "name": {
          "description": "Output only. The full name of the asset.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DiskEntry": {
      "properties": {
        "totalFreeBytes": {
          "description": "Disk free space.",
          "type": "string",
          "format": "int64"
        },
        "diskLabelType": {
          "description": "Disk label type (e.g. BIOS/GPT)",
          "type": "string"
        },
        "status": {
          "description": "Disk status (e.g. online).",
          "type": "string"
        },
        "vmwareConfig": {
          "$ref": "VmwareDiskConfig",
          "description": "VMware disk details."
        },
        "interfaceType": {
          "type": "string",
          "description": "Disks interface type (e.g. SATA/SCSI)"
        },
        "partitions": {
          "description": "Partition layout.",
          "$ref": "DiskPartitionList"
        },
        "hwAddress": {
          "description": "Disk hardware address (e.g. 0:1 for SCSI).",
          "type": "string"
        },
        "diskLabel": {
          "description": "Disk label.",
          "type": "string"
        },
        "totalCapacityBytes": {
          "description": "Disk capacity.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Single disk entry.",
      "type": "object",
      "id": "DiskEntry"
    },
    "MigrationInsight": {
      "description": "An insight about potential migrations for an asset.",
      "id": "MigrationInsight",
      "properties": {
        "computeEngineTarget": {
          "description": "Output only. A Google Compute Engine target.",
          "$ref": "ComputeEngineMigrationTarget",
          "readOnly": true
        },
        "vmwareEngineTarget": {
          "description": "Output only. A VMWare Engine target.",
          "readOnly": true,
          "$ref": "VmwareEngineMigrationTarget"
        },
        "fit": {
          "$ref": "FitDescriptor",
          "readOnly": true,
          "description": "Output only. Description of how well the asset this insight is associated with fits the proposed migration."
        },
        "gkeTarget": {
          "readOnly": true,
          "$ref": "GoogleKubernetesEngineMigrationTarget",
          "description": "Output only. A Google Kubernetes Engine target."
        }
      },
      "type": "object"
    },
    "Frames": {
      "properties": {
        "framesData": {
          "type": "array",
          "items": {
            "$ref": "AssetFrame"
          },
          "description": "A repeated field of asset data."
        }
      },
      "id": "Frames",
      "type": "object",
      "description": "Collection of frame data."
    },
    "ReportSummaryGroupFinding": {
      "description": "Summary Findings for a specific Group.",
      "type": "object",
      "properties": {
        "preferenceSetFindings": {
          "description": "Findings for each of the PreferenceSets for this group.",
          "items": {
            "$ref": "ReportSummaryGroupPreferenceSetFinding"
          },
          "type": "array"
        },
        "assetAggregateStats": {
          "description": "Summary statistics for all the assets in this group.",
          "$ref": "ReportSummaryAssetAggregateStats"
        },
        "overlappingAssetCount": {
          "type": "string",
          "description": "This field is deprecated, do not rely on it having a value.",
          "deprecated": true,
          "format": "int64"
        },
        "displayName": {
          "type": "string",
          "description": "Display Name for the Group."
        },
        "description": {
          "type": "string",
          "description": "Description for the Group."
        }
      },
      "id": "ReportSummaryGroupFinding"
    },
    "HostsEntry": {
      "properties": {
        "hostNames": {
          "type": "array",
          "description": "List of host names / aliases.",
          "items": {
            "type": "string"
          }
        },
        "ip": {
          "description": "IP (raw, IPv4/6 agnostic).",
          "type": "string"
        }
      },
      "type": "object",
      "id": "HostsEntry",
      "description": "Single /etc/hosts entry."
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      }
    },
    "FstabEntryList": {
      "id": "FstabEntryList",
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "FstabEntry"
          },
          "description": "Fstab entries."
        }
      },
      "description": "Fstab content."
    },
    "OpenFileDetails": {
      "properties": {
        "fileType": {
          "type": "string",
          "description": "Opened file file type."
        },
        "command": {
          "description": "Opened file command.",
          "type": "string"
        },
        "filePath": {
          "description": "Opened file file path.",
          "type": "string"
        },
        "user": {
          "type": "string",
          "description": "Opened file user."
        }
      },
      "description": "Open file Information.",
      "type": "object",
      "id": "OpenFileDetails"
    },
    "Aggregation": {
      "id": "Aggregation",
      "description": "Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Count the number of matching objects.",
          "$ref": "AggregationCount"
        },
        "frequency": {
          "description": "Creates a frequency distribution of all field values.",
          "$ref": "AggregationFrequency"
        },
        "histogram": {
          "$ref": "AggregationHistogram",
          "description": "Creates a bucketed histogram of field values."
        },
        "field": {
          "type": "string",
          "description": "The name of the field on which to aggregate."
        },
        "sum": {
          "$ref": "AggregationSum",
          "description": "Sum over a numeric field."
        }
      }
    },
    "Status": {
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        }
      },
      "id": "Status"
    },
    "GenericInsight": {
      "id": "GenericInsight",
      "type": "object",
      "description": "An insight about an asset (experimental insight)",
      "properties": {
        "additionalInformation": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. Additional information about the insight, each entry can be a logical entry and must make sense if it is displayed with line breaks between each entry. Text can contain md style links",
          "readOnly": true
        },
        "messageId": {
          "description": "Output only. Represents a globally unique message id for this insight, can be used for localization purposes, in case message_code is not yet known by the client use default_message instead.",
          "format": "int64",
          "readOnly": true,
          "type": "string"
        },
        "defaultMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. In case message_code is not yet known by the client default_message will be the message to be used instead. Text can contain md file style links."
        }
      }
    },
    "NetworkAdapterList": {
      "id": "NetworkAdapterList",
      "type": "object",
      "description": "List of network adapters.",
      "properties": {
        "networkAdapters": {
          "items": {
            "$ref": "NetworkAdapterDetails"
          },
          "description": "Network adapter descriptions.",
          "type": "array"
        }
      }
    },
    "PayloadFile": {
      "id": "PayloadFile",
      "type": "object",
      "description": "Payload file for inline import job payload.",
      "properties": {
        "name": {
          "description": "The file name.",
          "type": "string"
        },
        "data": {
          "format": "byte",
          "type": "string",
          "description": "The file data."
        }
      }
    },
    "DailyResourceUsageAggregationMemory": {
      "description": "Statistical aggregation of memory usage.",
      "properties": {
        "utilizationPercentage": {
          "description": "Memory utilization percentage.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "type": "object",
      "id": "DailyResourceUsageAggregationMemory"
    },
    "ReportSummaryHistogramChartData": {
      "type": "object",
      "description": "A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.",
      "id": "ReportSummaryHistogramChartData",
      "properties": {
        "buckets": {
          "type": "array",
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "items": {
            "$ref": "ReportSummaryHistogramChartDataBucket"
          }
        }
      }
    },
    "NetworkConnectionList": {
      "type": "object",
      "description": "Network connection list.",
      "id": "NetworkConnectionList",
      "properties": {
        "entries": {
          "description": "Network connection entries.",
          "type": "array",
          "items": {
            "$ref": "NetworkConnection"
          }
        }
      }
    },
    "RunningProcessList": {
      "type": "object",
      "id": "RunningProcessList",
      "description": "List of running guest OS processes.",
      "properties": {
        "processes": {
          "items": {
            "$ref": "RunningProcess"
          },
          "description": "Running process entries.",
          "type": "array"
        }
      }
    },
    "TimeZone": {
      "id": "TimeZone",
      "type": "object",
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "properties": {
        "id": {
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
        }
      }
    },
    "CpuUsageSample": {
      "id": "CpuUsageSample",
      "type": "object",
      "description": "CPU usage sample.",
      "properties": {
        "utilizedPercentage": {
          "description": "Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "RegionPreferences": {
      "id": "RegionPreferences",
      "type": "object",
      "description": "The user preferences relating to target regions.",
      "properties": {
        "preferredRegions": {
          "description": "A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RemoveAssetsFromGroupRequest": {
      "type": "object",
      "description": "A request to remove assets from a group.",
      "properties": {
        "allowMissing": {
          "type": "boolean",
          "description": "Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`."
        },
        "assets": {
          "$ref": "AssetList",
          "description": "Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000."
        },
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      },
      "id": "RemoveAssetsFromGroupRequest"
    },
    "NfsExportList": {
      "type": "object",
      "id": "NfsExportList",
      "description": "NFS exports.",
      "properties": {
        "entries": {
          "type": "array",
          "description": "NFS export entries.",
          "items": {
            "$ref": "NfsExport"
          }
        }
      }
    },
    "ComputeEnginePreferences": {
      "type": "object",
      "description": "The user preferences relating to Compute Engine target platform.",
      "id": "ComputeEnginePreferences",
      "properties": {
        "persistentDiskType": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ],
          "description": "Persistent disk type to use. If unspecified (default), all types are considered, based on available usage data.",
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ]
        },
        "licenseType": {
          "enumDescriptions": [
            "Unspecified (default value).",
            "Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with.",
            "Bring-your-own-license (BYOL) plan. User provides the OS license."
          ],
          "enum": [
            "LICENSE_TYPE_UNSPECIFIED",
            "LICENSE_TYPE_DEFAULT",
            "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE"
          ],
          "type": "string",
          "description": "License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan."
        },
        "machinePreferences": {
          "$ref": "MachinePreferences",
          "description": "Preferences concerning the machine types to consider on Compute Engine."
        }
      }
    },
    "PhysicalPlatformDetails": {
      "id": "PhysicalPlatformDetails",
      "properties": {
        "location": {
          "type": "string",
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field."
        }
      },
      "type": "object",
      "description": "Platform specific details for Physical Machines."
    },
    "HostsEntryList": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "HostsEntry"
          },
          "description": "Hosts entries."
        }
      },
      "description": "Hosts content.",
      "id": "HostsEntryList"
    },
    "ListOperationsResponse": {
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        }
      },
      "id": "ListOperationsResponse"
    },
    "ReportSummarySoleTenantFinding": {
      "properties": {
        "allocatedAssetCount": {
          "format": "int64",
          "description": "Count of assets which are allocated",
          "type": "string"
        },
        "nodeAllocations": {
          "type": "array",
          "description": "Set of per-nodetype allocation records",
          "items": {
            "$ref": "ReportSummarySoleTenantNodeAllocation"
          }
        },
        "allocatedRegions": {
          "items": {
            "type": "string"
          },
          "description": "Set of regions in which the assets are allocated",
          "type": "array"
        }
      },
      "description": "A set of findings that applies to assets destined for Sole-Tenant nodes.",
      "id": "ReportSummarySoleTenantFinding",
      "type": "object"
    },
    "ReportSummaryVMWareNodeAllocation": {
      "id": "ReportSummaryVMWareNodeAllocation",
      "description": "Represents assets allocated to a specific VMWare Node type.",
      "type": "object",
      "properties": {
        "vmwareNode": {
          "description": "VMWare node type, e.g. \"ve1-standard-72\"",
          "$ref": "ReportSummaryVMWareNode"
        },
        "allocatedAssetCount": {
          "type": "string",
          "description": "Count of assets allocated to these nodes",
          "format": "int64"
        },
        "nodeCount": {
          "format": "int64",
          "description": "Count of this node type to be provisioned",
          "type": "string"
        }
      }
    },
    "DailyResourceUsageAggregation": {
      "id": "DailyResourceUsageAggregation",
      "type": "object",
      "description": "Usage data aggregation for a single day.",
      "properties": {
        "date": {
          "description": "Aggregation date. Day boundaries are at midnight UTC.",
          "$ref": "Date"
        },
        "cpu": {
          "description": "CPU usage.",
          "$ref": "DailyResourceUsageAggregationCPU"
        },
        "network": {
          "description": "Network usage.",
          "$ref": "DailyResourceUsageAggregationNetwork"
        },
        "disk": {
          "$ref": "DailyResourceUsageAggregationDisk",
          "description": "Disk usage."
        },
        "memory": {
          "$ref": "DailyResourceUsageAggregationMemory",
          "description": "Memory usage."
        }
      }
    },
    "AzureVmPlatformDetails": {
      "id": "AzureVmPlatformDetails",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Azure platform's provisioning state."
        },
        "location": {
          "type": "string",
          "description": "The location of the machine in the Azure format."
        },
        "machineTypeLabel": {
          "description": "Azure platform's machine type label.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Azure VM specific details."
    },
    "DailyResourceUsageAggregationNetwork": {
      "properties": {
        "egressBps": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Network egress in B/s."
        },
        "ingressBps": {
          "description": "Network ingress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "type": "object",
      "id": "DailyResourceUsageAggregationNetwork",
      "description": "Statistical aggregation of network usage."
    },
    "GuestInstalledApplication": {
      "id": "GuestInstalledApplication",
      "properties": {
        "vendor": {
          "type": "string",
          "description": "Installed application vendor."
        },
        "time": {
          "description": "Date application was installed.",
          "type": "string"
        },
        "path": {
          "description": "Source path.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Installed application name."
        },
        "version": {
          "description": "Installed application version.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Guest installed application information."
    },
    "ReportConfig": {
      "properties": {
        "description": {
          "description": "Free-text description.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The timestamp when the resource was last updated.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "groupPreferencesetAssignments": {
          "type": "array",
          "description": "Required. Collection of combinations of groups and preference sets.",
          "items": {
            "$ref": "ReportConfigGroupPreferenceSetAssignment"
          }
        },
        "name": {
          "description": "Output only. Name of resource.",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "ReportConfig",
      "description": "The groups and associated preference sets on which we can generate reports.",
      "type": "object"
    },
    "AwsEc2PlatformDetails": {
      "properties": {
        "machineTypeLabel": {
          "type": "string",
          "description": "AWS platform's machine type label."
        },
        "location": {
          "description": "The location of the machine in the AWS format.",
          "type": "string"
        }
      },
      "id": "AwsEc2PlatformDetails",
      "type": "object",
      "description": "AWS EC2 specific details."
    },
    "ValidationReport": {
      "id": "ValidationReport",
      "type": "object",
      "properties": {
        "fileValidations": {
          "description": "List of errors found in files.",
          "items": {
            "$ref": "FileValidationReport"
          },
          "type": "array"
        },
        "jobErrors": {
          "description": "List of job level errors.",
          "items": {
            "$ref": "ImportError"
          },
          "type": "array"
        }
      },
      "description": "A resource that aggregates errors across import job files."
    },
    "FstabEntry": {
      "properties": {
        "mntops": {
          "type": "string",
          "description": "Mount options associated with the filesystem."
        },
        "spec": {
          "description": "The block special device or remote filesystem to be mounted.",
          "type": "string"
        },
        "vfstype": {
          "type": "string",
          "description": "The type of the filesystem."
        },
        "passno": {
          "type": "integer",
          "format": "int32",
          "description": "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time."
        },
        "freq": {
          "type": "integer",
          "description": "Used by dump to determine which filesystems need to be dumped.",
          "format": "int32"
        },
        "file": {
          "description": "The mount point for the filesystem.",
          "type": "string"
        }
      },
      "id": "FstabEntry",
      "description": "Single fstab entry.",
      "type": "object"
    },
    "GenericPlatformDetails": {
      "id": "GenericPlatformDetails",
      "properties": {
        "location": {
          "type": "string",
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field."
        }
      },
      "type": "object",
      "description": "Generic platform details."
    },
    "InsightList": {
      "description": "Message containing insights list.",
      "id": "InsightList",
      "properties": {
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Update timestamp."
        },
        "insights": {
          "description": "Output only. Insights of the list.",
          "type": "array",
          "items": {
            "$ref": "Insight"
          },
          "readOnly": true
        }
      },
      "type": "object"
    },
    "PerformanceSample": {
      "properties": {
        "cpu": {
          "$ref": "CpuUsageSample",
          "description": "CPU usage sample."
        },
        "disk": {
          "description": "Disk usage sample.",
          "$ref": "DiskUsageSample"
        },
        "sampleTime": {
          "format": "google-datetime",
          "description": "Time the sample was collected. If omitted, the frame report time will be used.",
          "type": "string"
        },
        "memory": {
          "description": "Memory usage sample.",
          "$ref": "MemoryUsageSample"
        },
        "network": {
          "description": "Network usage sample.",
          "$ref": "NetworkUsageSample"
        }
      },
      "description": "Performance data sample.",
      "type": "object",
      "id": "PerformanceSample"
    },
    "PreferenceSet": {
      "description": "The preferences that apply to all assets in a given context.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp when the preference set was created.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "virtualMachinePreferences": {
          "description": "A set of preferences that applies to all virtual machines in the context.",
          "$ref": "VirtualMachinePreferences"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the preference set."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the preference set was last updated."
        },
        "description": {
          "type": "string",
          "description": "A description of the preference set."
        }
      },
      "id": "PreferenceSet",
      "type": "object"
    },
    "AggregationResultHistogramBucket": {
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "properties": {
        "count": {
          "format": "int64",
          "description": "Count of items in the bucket.",
          "type": "string"
        },
        "lowerBound": {
          "description": "Lower bound - inclusive.",
          "format": "double",
          "type": "number"
        },
        "upperBound": {
          "format": "double",
          "description": "Upper bound - exclusive.",
          "type": "number"
        }
      },
      "id": "AggregationResultHistogramBucket",
      "type": "object"
    },
    "DailyResourceUsageAggregationDisk": {
      "properties": {
        "iops": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Disk I/O operations per second."
        }
      },
      "id": "DailyResourceUsageAggregationDisk",
      "type": "object",
      "description": "Statistical aggregation of disk usage."
    },
    "ReportSummaryMachineSeriesAllocation": {
      "properties": {
        "allocatedAssetCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of assets allocated to this machine series."
        },
        "machineSeries": {
          "$ref": "MachineSeries",
          "description": "The Machine Series (e.g. \"E2\", \"N2\")"
        }
      },
      "id": "ReportSummaryMachineSeriesAllocation",
      "description": "Represents a data point tracking the count of assets allocated for a specific Machine Series.",
      "type": "object"
    },
    "GuestInstalledApplicationList": {
      "description": "Guest installed application list.",
      "id": "GuestInstalledApplicationList",
      "type": "object",
      "properties": {
        "entries": {
          "description": "Application entries.",
          "items": {
            "$ref": "GuestInstalledApplication"
          },
          "type": "array"
        }
      }
    },
    "AggregateAssetsValuesRequest": {
      "description": "A request to aggregate one or more values.",
      "id": "AggregateAssetsValuesRequest",
      "properties": {
        "filter": {
          "description": "The aggregation will be performed on assets that match the provided filter.",
          "type": "string"
        },
        "aggregations": {
          "items": {
            "$ref": "Aggregation"
          },
          "description": "Array of aggregations to perform. Up to 25 aggregations can be defined.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "AssetPerformanceData": {
      "type": "object",
      "properties": {
        "dailyResourceUsageAggregations": {
          "description": "Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days. Aggregations are sorted from oldest to most recent.",
          "items": {
            "$ref": "DailyResourceUsageAggregation"
          },
          "type": "array"
        }
      },
      "description": "Performance data for an asset.",
      "id": "AssetPerformanceData"
    },
    "DiskPartitionList": {
      "description": "Disk partition list.",
      "type": "object",
      "properties": {
        "entries": {
          "description": "Partition entries.",
          "type": "array",
          "items": {
            "$ref": "DiskPartition"
          }
        }
      },
      "id": "DiskPartitionList"
    },
    "MemoryUsageSample": {
      "type": "object",
      "properties": {
        "utilizedPercentage": {
          "type": "number",
          "description": "Percentage of system memory utilized. Must be in the interval [0, 100].",
          "format": "float"
        }
      },
      "description": "Memory usage sample.",
      "id": "MemoryUsageSample"
    },
    "AssetList": {
      "properties": {
        "assetIds": {
          "items": {
            "type": "string"
          },
          "description": "Required. A list of asset IDs",
          "type": "array"
        }
      },
      "description": "Lists the asset IDs of all assets.",
      "id": "AssetList",
      "type": "object"
    },
    "ListReportsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "reports": {
          "description": "The list of Reports.",
          "type": "array",
          "items": {
            "$ref": "Report"
          }
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        }
      },
      "description": "Response message for listing Reports.",
      "id": "ListReportsResponse",
      "type": "object"
    },
    "VmwareEnginePreferences": {
      "properties": {
        "storageDeduplicationCompressionRatio": {
          "description": "The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.",
          "format": "double",
          "type": "number"
        },
        "commitmentPlan": {
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment (monthly payments).",
            "3 year commitment (monthly payments).",
            "1 year commitment (upfront payment).",
            "3 years commitment (upfront payment)."
          ],
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_3_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_1_YEAR_UPFRONT_PAYMENT",
            "COMMITMENT_3_YEAR_UPFRONT_PAYMENT"
          ],
          "type": "string"
        },
        "cpuOvercommitRatio": {
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment.",
          "type": "number",
          "format": "double"
        },
        "memoryOvercommitRatio": {
          "type": "number",
          "description": "Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0.",
          "format": "double"
        }
      },
      "description": "The user preferences relating to Google Cloud VMware Engine target platform.",
      "id": "VmwareEnginePreferences",
      "type": "object"
    },
    "GuestRuntimeDetails": {
      "type": "object",
      "properties": {
        "processes": {
          "description": "Running processes.",
          "$ref": "RunningProcessList"
        },
        "networkInfo": {
          "description": "Runtime network information (connections, ports).",
          "$ref": "RuntimeNetworkInfo"
        },
        "domain": {
          "description": "Domain, e.g. c.stratozone-development.internal.",
          "type": "string"
        },
        "lastUptime": {
          "description": "Date since last booted (last uptime date).",
          "$ref": "Date"
        },
        "installedApps": {
          "description": "Installed applications information.",
          "$ref": "GuestInstalledApplicationList"
        },
        "services": {
          "$ref": "RunningServiceList",
          "description": "Running background services."
        },
        "openFileList": {
          "$ref": "OpenFileList",
          "description": "Open files information."
        },
        "machineName": {
          "type": "string",
          "description": "Machine name."
        }
      },
      "id": "GuestRuntimeDetails",
      "description": "Guest OS runtime information."
    }
  },
  "fullyEncodeReservedExpansion": true,
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "ownerDomain": "google.com",
  "title": "Migration Center API",
  "basePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "canonicalName": "Migration Center API"
}

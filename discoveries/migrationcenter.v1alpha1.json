{
  "ownerName": "Google",
  "baseUrl": "https://migrationcenter.googleapis.com/",
  "batchPath": "batch",
  "protocol": "rest",
  "fullyEncodeReservedExpansion": true,
  "canonicalName": "Migration Center API",
  "mtlsRootUrl": "https://migrationcenter.mtls.googleapis.com/",
  "description": "A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.",
  "servicePath": "",
  "version_module": true,
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "rootUrl": "https://migrationcenter.googleapis.com/",
  "id": "migrationcenter:v1alpha1",
  "basePath": "",
  "documentationLink": "https://cloud.google.com/migration-center",
  "ownerDomain": "google.com",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "operations": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.operations.get",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation resource.",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "description": "The standard list filter.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "The standard list page size."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1alpha1/{+name}/operations",
                  "id": "migrationcenter.projects.locations.operations.list",
                  "httpMethod": "GET",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`."
                },
                "cancel": {
                  "httpMethod": "POST",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+name}:cancel",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "id": "migrationcenter.projects.locations.operations.cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel"
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource to be deleted.",
                      "required": true
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.operations.delete",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "reportConfigs": {
              "resources": {
                "reports": {
                  "methods": {
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single Report.",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.get",
                      "path": "v1alpha1/{+name}",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Report"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "view": {
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "type": "string",
                          "location": "query",
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "description": "Determines what information to retrieve for the Report."
                        },
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "description": "Required. Name of the resource.",
                          "required": true,
                          "location": "path"
                        }
                      }
                    },
                    "delete": {
                      "parameters": {
                        "requestId": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        },
                        "name": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "type": "string",
                          "description": "Required. Name of the resource."
                        }
                      },
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.delete",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE",
                      "path": "v1alpha1/{+name}",
                      "description": "Deletes a Report.",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a report.",
                      "request": {
                        "$ref": "Report"
                      },
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.create",
                      "parameters": {
                        "requestId": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        },
                        "reportId": {
                          "description": "Required. User specified id for the report. It will become the last component of the report name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The id must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. Value for parent.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "path": "v1alpha1/{+parent}/reports",
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports"
                    },
                    "list": {
                      "httpMethod": "GET",
                      "description": "Lists Reports in a given ReportConfig.",
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                          "format": "int32"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results that the server should return."
                        },
                        "filter": {
                          "description": "Filtering results.",
                          "type": "string",
                          "location": "query"
                        },
                        "view": {
                          "description": "Determines what information to retrieve for each Report.",
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "type": "string",
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "location": "path",
                          "description": "Required. Parent value for `ListReportsRequest`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "type": "string"
                        },
                        "orderBy": {
                          "location": "query",
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "path": "v1alpha1/{+parent}/reports",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListReportsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "httpMethod": "GET",
                  "parameters": {
                    "orderBy": {
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query"
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Parent value for `ListReportConfigsRequest`."
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "path": "v1alpha1/{+parent}/reportConfigs",
                  "description": "Lists ReportConfigs in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.reportConfigs.list",
                  "response": {
                    "$ref": "ListReportConfigsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "id": "migrationcenter.projects.locations.reportConfigs.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a ReportConfig.",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "force": {
                      "type": "boolean",
                      "description": "Optional. If set to `true`, any child `Reports` of this entity will also be deleted. If set to `false`, the request only works if the resource has no children.",
                      "location": "query"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$"
                    }
                  },
                  "path": "v1alpha1/{+name}"
                },
                "create": {
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "reportConfigId": {
                      "type": "string",
                      "description": "Required. User specified ID for the report config. It will become the last component of the report config name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
                      "location": "query"
                    }
                  },
                  "description": "Creates a report configuration.",
                  "path": "v1alpha1/{+parent}/reportConfigs",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ReportConfig"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.reportConfigs.create"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "ReportConfig"
                  },
                  "description": "Gets details of a single ReportConfig.",
                  "id": "migrationcenter.projects.locations.reportConfigs.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}"
                }
              }
            },
            "sources": {
              "resources": {
                "errorFrames": {
                  "methods": {
                    "get": {
                      "id": "migrationcenter.projects.locations.sources.errorFrames.get",
                      "response": {
                        "$ref": "ErrorFrame"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the details of an error frame.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames/{errorFramesId}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/errorFrames/[^/]+$",
                          "description": "Required. The name of the frame to retrieve. Format: projects/{project}/locations/{location}/sources/{source}/errorFrames/{error_frame}",
                          "type": "string"
                        },
                        "view": {
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ],
                          "type": "string",
                          "location": "query",
                          "description": "Optional. An optional view mode to control the level of details for the frame. The default is a basic frame view.",
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ]
                        }
                      }
                    },
                    "list": {
                      "path": "v1alpha1/{+parent}/errorFrames",
                      "description": "Lists all error frames in a given source and location.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. Parent value (the source) for `ListErrorFramesRequest`.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$"
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "location": "query"
                        },
                        "view": {
                          "location": "query",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ],
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "type": "string",
                          "description": "Optional. An optional view mode to control the level of details of each error frame. The default is a BASIC frame view."
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "A token identifying a page of results the server should return.",
                          "location": "query"
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListErrorFramesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "migrationcenter.projects.locations.sources.errorFrames.list"
                    }
                  }
                }
              },
              "methods": {
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the parameters of a source.",
                  "request": {
                    "$ref": "Source"
                  },
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Source` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "description": "Output only. The full name of the source.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "id": "migrationcenter.projects.locations.sources.patch",
                  "path": "v1alpha1/{+name}"
                },
                "create": {
                  "path": "v1alpha1/{+parent}/sources",
                  "id": "migrationcenter.projects.locations.sources.create",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "request": {
                    "$ref": "Source"
                  },
                  "description": "Creates a new source in a given project and location.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Value for parent."
                    },
                    "sourceId": {
                      "type": "string",
                      "description": "Required. User specified ID for the source. It will become the last component of the source name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "location": "query"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    }
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "id": "migrationcenter.projects.locations.sources.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "description": "Deletes a source.",
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the details of a source.",
                  "response": {
                    "$ref": "Source"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "required": true
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "id": "migrationcenter.projects.locations.sources.get",
                  "path": "v1alpha1/{+name}"
                },
                "list": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "path": "v1alpha1/{+parent}/sources",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListSourcesResponse"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "description": "A token identifying a page of results that the server should return.",
                      "type": "string",
                      "location": "query"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent value for `ListSourcesRequest`.",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.sources.list",
                  "description": "Lists all the sources in a given project and location."
                }
              }
            },
            "groups": {
              "methods": {
                "get": {
                  "response": {
                    "$ref": "Group"
                  },
                  "description": "Gets the details of a group.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.groups.get"
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Output only. The name of the group.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Group` resource by the update. The values specified in the `update_mask` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "id": "migrationcenter.projects.locations.groups.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Group"
                  },
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "description": "Updates the parameters of a group.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "addAssets": {
                  "path": "v1alpha1/{+group}:addAssets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addAssets",
                  "request": {
                    "$ref": "AddAssetsToGroupRequest"
                  },
                  "parameterOrder": [
                    "group"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "group": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Group reference.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$"
                    }
                  },
                  "description": "Adds assets to a group.",
                  "id": "migrationcenter.projects.locations.groups.addAssets",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "delete": {
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the group resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "description": "Deletes a group.",
                  "id": "migrationcenter.projects.locations.groups.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}"
                },
                "list": {
                  "path": "v1alpha1/{+parent}/groups",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filtering results."
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Parent value for `ListGroupsRequest`.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups",
                  "response": {
                    "$ref": "ListGroupsResponse"
                  },
                  "id": "migrationcenter.projects.locations.groups.list",
                  "description": "Lists all groups in a given project and location."
                },
                "removeAssets": {
                  "description": "Removes assets from a group.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "group"
                  ],
                  "parameters": {
                    "group": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "description": "Required. Group reference.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "RemoveAssetsFromGroupRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+group}:removeAssets",
                  "id": "migrationcenter.projects.locations.groups.removeAssets",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeAssets"
                },
                "create": {
                  "path": "v1alpha1/{+parent}/groups",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups",
                  "description": "Creates a new group in a given project and location.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.groups.create",
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Value for parent."
                    },
                    "groupId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Group"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "assets": {
              "methods": {
                "get": {
                  "path": "v1alpha1/{+name}",
                  "description": "Gets the details of an asset.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.assets.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "view": {
                      "description": "View of the assets. Defaults to BASIC.",
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ],
                      "location": "query",
                      "type": "string",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data.",
                        "The asset view includes the standard metadata of an asset."
                      ]
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "response": {
                    "$ref": "Asset"
                  }
                },
                "list": {
                  "description": "Lists all the assets in a given project and location.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets",
                  "id": "migrationcenter.projects.locations.assets.list",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "orderBy": {
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Filtering results.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "view": {
                      "description": "View of the assets. Defaults to BASIC.",
                      "type": "string",
                      "location": "query",
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ],
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data.",
                        "The asset view includes the standard metadata of an asset."
                      ]
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent value for `ListAssetsRequest`.",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "ListAssetsResponse"
                  },
                  "path": "v1alpha1/{+parent}/assets"
                },
                "batchDelete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/assets:batchDelete",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchDelete",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "BatchDeleteAssetsRequest"
                  },
                  "id": "migrationcenter.projects.locations.assets.batchDelete",
                  "description": "Deletes list of Assets.",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for batch asset delete.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  }
                },
                "reportAssetFrames": {
                  "parameters": {
                    "source": {
                      "location": "query",
                      "description": "Required. Reference to a source.",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent of the resource."
                    }
                  },
                  "description": "Reports a set of frames.",
                  "request": {
                    "$ref": "Frames"
                  },
                  "response": {
                    "$ref": "ReportAssetFramesResponse"
                  },
                  "path": "v1alpha1/{+parent}/assets:reportAssetFrames",
                  "id": "migrationcenter.projects.locations.assets.reportAssetFrames",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames"
                },
                "patch": {
                  "id": "migrationcenter.projects.locations.assets.patch",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "description": "Output only. The full name of the asset."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of an asset.",
                  "response": {
                    "$ref": "Asset"
                  },
                  "request": {
                    "$ref": "Asset"
                  },
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}"
                },
                "batchUpdate": {
                  "id": "migrationcenter.projects.locations.assets.batchUpdate",
                  "path": "v1alpha1/{+parent}/assets:batchUpdate",
                  "description": "Updates the parameters of a list of assets.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for batch asset update.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "BatchUpdateAssetsResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchUpdate",
                  "request": {
                    "$ref": "BatchUpdateAssetsRequest"
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "id": "migrationcenter.projects.locations.assets.delete",
                  "description": "Deletes an asset.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "aggregateValues": {
                  "httpMethod": "POST",
                  "id": "migrationcenter.projects.locations.assets.aggregateValues",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Aggregates the requested fields based on provided function.",
                  "path": "v1alpha1/{+parent}/assets:aggregateValues",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues",
                  "response": {
                    "$ref": "AggregateAssetsValuesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent value for `AggregateAssetsValuesRequest`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "AggregateAssetsValuesRequest"
                  }
                }
              }
            },
            "preferenceSets": {
              "methods": {
                "patch": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "path": "v1alpha1/{+name}",
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `PreferenceSet` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "description": "Output only. Name of the preference set.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    }
                  },
                  "id": "migrationcenter.projects.locations.preferenceSets.patch",
                  "description": "Updates the parameters of a preference set.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "id": "migrationcenter.projects.locations.preferenceSets.delete",
                  "description": "Deletes a preference set.",
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the group resource.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new preference set in a given project and location.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.preferenceSets.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/preferenceSets",
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "parameters": {
                    "preferenceSetId": {
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  }
                },
                "list": {
                  "path": "v1alpha1/{+parent}/preferenceSets",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListPreferenceSetsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent value for `ListPreferenceSetsRequest`.",
                      "type": "string",
                      "location": "path"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, at most 500 preference sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string",
                      "location": "query"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string"
                    }
                  },
                  "id": "migrationcenter.projects.locations.preferenceSets.list",
                  "description": "Lists all the preference sets in a given project and location.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                },
                "get": {
                  "response": {
                    "$ref": "PreferenceSet"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "description": "Gets the details of a preference set.",
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.preferenceSets.get"
                }
              }
            },
            "importJobs": {
              "methods": {
                "create": {
                  "parameters": {
                    "importJobId": {
                      "description": "Required. ID of the import job.",
                      "type": "string",
                      "location": "query"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Value for parent.",
                      "required": true
                    }
                  },
                  "id": "migrationcenter.projects.locations.importJobs.create",
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "httpMethod": "POST",
                  "description": "Creates an import job.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/importJobs",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/importJobs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "id": "migrationcenter.projects.locations.importJobs.list",
                  "description": "Lists all import jobs.",
                  "parameters": {
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results the server should return."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filtering results."
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Parent value for `ListImportJobsRequest`.",
                      "required": true
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer"
                    },
                    "view": {
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "description": "Optional. The level of details of each import job. Default value is BASIC.",
                      "location": "query",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ListImportJobsResponse"
                  }
                },
                "validate": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "id": "migrationcenter.projects.locations.importJobs.validate",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the import job to validate.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "ValidateImportJobRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Validates an import job.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate",
                  "path": "v1alpha1/{+name}:validate"
                },
                "delete": {
                  "description": "Deletes an import job.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "id": "migrationcenter.projects.locations.importJobs.delete",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the resource."
                    },
                    "force": {
                      "description": "Optional. If set to `true`, any `ImportDataFiles` of this job will also be deleted If set to `false`, the request only works if the job has no data files.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "run": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run",
                  "path": "v1alpha1/{+name}:run",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the import job to run."
                    }
                  },
                  "description": "Runs an import job.",
                  "request": {
                    "$ref": "RunImportJobRequest"
                  },
                  "id": "migrationcenter.projects.locations.importJobs.run",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST"
                },
                "get": {
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "view": {
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "description": "Optional. The level of details of the import job. Default value is FULL.",
                      "location": "query",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the details of an import job.",
                  "id": "migrationcenter.projects.locations.importJobs.get",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ImportJob"
                  }
                },
                "patch": {
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "description": "Output only. The full name of the import job.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Updates an import job.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "id": "migrationcenter.projects.locations.importJobs.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              },
              "resources": {
                "importDataFiles": {
                  "methods": {
                    "get": {
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.get",
                      "response": {
                        "$ref": "ImportDataFile"
                      },
                      "description": "Gets an import data file.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1alpha1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the ImportDataFile.",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$"
                        }
                      }
                    },
                    "list": {
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "required": true,
                          "description": "Required. Name of the parent of the `ImportDataFiles` resource.",
                          "location": "path",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Filtering results.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "A page token, received from a previous `ListImportDataFiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListImportDataFiles` must match the call that provided the page token.",
                          "location": "query"
                        },
                        "pageSize": {
                          "description": "The maximum number of data files to return. The service may return fewer than this value. If unspecified, at most 500 data files will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "format": "int32",
                          "location": "query",
                          "type": "integer"
                        },
                        "orderBy": {
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "httpMethod": "GET",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1alpha1/{+parent}/importDataFiles",
                      "description": "List import data files.",
                      "response": {
                        "$ref": "ListImportDataFilesResponse"
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles"
                    },
                    "delete": {
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.delete",
                      "parameters": {
                        "requestId": {
                          "type": "string",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        },
                        "name": {
                          "description": "Required. Name of the ImportDataFile to delete.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "required": true
                        }
                      },
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Delete an import data file.",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "path": "v1alpha1/{+name}"
                    },
                    "create": {
                      "httpMethod": "POST",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates an import data file.",
                      "parameters": {
                        "requestId": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "required": true,
                          "description": "Required. Name of the parent of the ImportDataFile.",
                          "location": "path",
                          "type": "string"
                        },
                        "importDataFileId": {
                          "description": "Required. The ID of the new data file.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "request": {
                        "$ref": "ImportDataFile"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1alpha1/{+parent}/importDataFiles",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.create"
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "Location"
              },
              "description": "Gets information about a location.",
              "path": "v1alpha1/{+name}",
              "id": "migrationcenter.projects.locations.get",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}"
            },
            "updateSettings": {
              "id": "migrationcenter.projects.locations.updateSettings",
              "httpMethod": "PATCH",
              "path": "v1alpha1/{+name}",
              "request": {
                "$ref": "Settings"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/settings",
              "parameters": {
                "requestId": {
                  "type": "string",
                  "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                  "location": "query"
                },
                "name": {
                  "location": "path",
                  "description": "Output only. The name of the resource.",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "type": "string",
                  "required": true
                },
                "updateMask": {
                  "description": "Required. Field mask is used to specify the fields to be overwritten in the `Settings` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                  "location": "query",
                  "format": "google-fieldmask",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Operation"
              },
              "description": "Updates the regional-level project settings."
            },
            "list": {
              "path": "v1alpha1/{+name}/locations",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                }
              },
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "id": "migrationcenter.projects.locations.list",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "getSettings": {
              "description": "Gets the details of regional settings.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Settings"
              },
              "id": "migrationcenter.projects.locations.getSettings",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "description": "Required. Name of the resource.",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/settings",
              "path": "v1alpha1/{+name}"
            }
          }
        }
      }
    }
  },
  "name": "migrationcenter",
  "discoveryVersion": "v1",
  "version": "v1alpha1",
  "title": "Migration Center API",
  "parameters": {
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "location": "query",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query",
      "default": "true"
    }
  },
  "kind": "discovery#restDescription",
  "schemas": {
    "OpenFileList": {
      "id": "OpenFileList",
      "description": "Open file list.",
      "properties": {
        "entries": {
          "type": "array",
          "description": "Open file details entries.",
          "items": {
            "$ref": "OpenFileDetails"
          }
        }
      },
      "type": "object"
    },
    "VmwarePlatformDetails": {
      "properties": {
        "esxVersion": {
          "description": "ESX version.",
          "type": "string"
        },
        "osid": {
          "type": "string",
          "description": "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html."
        },
        "vcenterVersion": {
          "type": "string",
          "description": "vCenter version."
        }
      },
      "id": "VmwarePlatformDetails",
      "description": "VMware specific details.",
      "type": "object"
    },
    "NfsExportList": {
      "description": "NFS exports.",
      "id": "NfsExportList",
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "description": "NFS export entries.",
          "items": {
            "$ref": "NfsExport"
          }
        }
      }
    },
    "ReportSummary": {
      "type": "object",
      "properties": {
        "allAssetsStats": {
          "$ref": "ReportSummaryAssetAggregateStats",
          "description": "Aggregate statistics for all the assets across all the groups."
        },
        "groupFindings": {
          "type": "array",
          "description": "Findings for each Group included in this report.",
          "items": {
            "$ref": "ReportSummaryGroupFinding"
          }
        }
      },
      "id": "ReportSummary",
      "description": "Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report."
    },
    "PhysicalPlatformDetails": {
      "id": "PhysicalPlatformDetails",
      "description": "Platform specific details for Physical Machines.",
      "properties": {
        "location": {
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AggregationResultHistogramBucket": {
      "properties": {
        "count": {
          "format": "int64",
          "description": "Count of items in the bucket.",
          "type": "string"
        },
        "lowerBound": {
          "description": "Lower bound - inclusive.",
          "format": "double",
          "type": "number"
        },
        "upperBound": {
          "description": "Upper bound - exclusive.",
          "type": "number",
          "format": "double"
        }
      },
      "id": "AggregationResultHistogramBucket",
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "type": "object"
    },
    "FstabEntryList": {
      "properties": {
        "entries": {
          "items": {
            "$ref": "FstabEntry"
          },
          "type": "array",
          "description": "Fstab entries."
        }
      },
      "description": "Fstab content.",
      "type": "object",
      "id": "FstabEntryList"
    },
    "NetworkAdapterList": {
      "properties": {
        "networkAdapters": {
          "type": "array",
          "description": "Network adapter descriptions.",
          "items": {
            "$ref": "NetworkAdapterDetails"
          }
        }
      },
      "id": "NetworkAdapterList",
      "description": "List of network adapters.",
      "type": "object"
    },
    "ListAssetsResponse": {
      "id": "ListAssetsResponse",
      "type": "object",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "assets": {
          "description": "A list of assets.",
          "items": {
            "$ref": "Asset"
          },
          "type": "array"
        }
      },
      "description": "Response message for listing assets."
    },
    "DailyResourceUsageAggregationStats": {
      "description": "Statistical aggregation of samples for a single resource usage.",
      "type": "object",
      "id": "DailyResourceUsageAggregationStats",
      "properties": {
        "median": {
          "description": "Median usage value.",
          "format": "float",
          "type": "number"
        },
        "average": {
          "format": "float",
          "type": "number",
          "description": "Average usage value."
        },
        "peak": {
          "description": "Peak usage value.",
          "format": "float",
          "type": "number"
        },
        "ninteyFifthPercentile": {
          "format": "float",
          "description": "95th percentile usage value.",
          "type": "number"
        }
      }
    },
    "ValidationReport": {
      "properties": {
        "jobErrors": {
          "items": {
            "$ref": "ImportError"
          },
          "description": "List of job level errors.",
          "type": "array"
        },
        "fileValidations": {
          "items": {
            "$ref": "FileValidationReport"
          },
          "description": "List of errors found in files.",
          "type": "array"
        }
      },
      "id": "ValidationReport",
      "description": "A resource that aggregates errors across import job files.",
      "type": "object"
    },
    "InsightList": {
      "type": "object",
      "description": "Message containing insights list.",
      "properties": {
        "insights": {
          "description": "Output only. Insights of the list.",
          "items": {
            "$ref": "Insight"
          },
          "readOnly": true,
          "type": "array"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Update timestamp."
        }
      },
      "id": "InsightList"
    },
    "InlinePayloadInfo": {
      "properties": {
        "format": {
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false
          ],
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ],
          "description": "The import job format.",
          "type": "string"
        },
        "payload": {
          "description": "List of payload files.",
          "type": "array",
          "items": {
            "$ref": "PayloadFile"
          }
        }
      },
      "description": "A resource that represents the inline import job payload.",
      "type": "object",
      "id": "InlinePayloadInfo"
    },
    "VmwareEngineMigrationTarget": {
      "description": "VMWare engine migration target.",
      "id": "VmwareEngineMigrationTarget",
      "properties": {},
      "type": "object"
    },
    "ListReportConfigsResponse": {
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "reportConfigs": {
          "type": "array",
          "items": {
            "$ref": "ReportConfig"
          },
          "description": "A list of report configs."
        }
      },
      "description": "Response message for listing report configs.",
      "id": "ListReportConfigsResponse",
      "type": "object"
    },
    "DiskUsageSample": {
      "type": "object",
      "id": "DiskUsageSample",
      "description": "Disk usage sample. Values are across all disks.",
      "properties": {
        "averageIops": {
          "type": "number",
          "format": "float",
          "description": "Average IOPS sampled over a short window. Must be non-negative. Must be equal to the sum of read and write if one of them is positive. if both read and write are zero they are ignored."
        }
      }
    },
    "ErrorFrame": {
      "properties": {
        "originalFrame": {
          "description": "Output only. The frame that was originally reported.",
          "readOnly": true,
          "$ref": "AssetFrame"
        },
        "violations": {
          "items": {
            "$ref": "FrameViolationEntry"
          },
          "description": "Output only. All the violations that were detected for the frame.",
          "type": "array",
          "readOnly": true
        },
        "ingestionTime": {
          "readOnly": true,
          "description": "Output only. Frame ingestion time.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The identifier of the ErrorFrame.",
          "type": "string"
        }
      },
      "id": "ErrorFrame",
      "description": "Message representing a frame which failed to be processed due to an error.",
      "type": "object"
    },
    "Report": {
      "description": "Report represents a point-in-time rendering of the ReportConfig results.",
      "type": "object",
      "id": "Report",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. Name of resource.",
          "readOnly": true
        },
        "summary": {
          "readOnly": true,
          "$ref": "ReportSummary",
          "description": "Output only. Summary view of the Report."
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "type": {
          "description": "Report type.",
          "enumDescriptions": [
            "Default Report type.",
            "Total cost of ownership Report type."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TOTAL_COST_OF_OWNERSHIP"
          ],
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Creation timestamp.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "enumDescriptions": [
            "Default Report creation state.",
            "Creating Report.",
            "Successfully created Report.",
            "Failed to create Report."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "SUCCEEDED",
            "FAILED"
          ],
          "description": "Report creation state."
        },
        "description": {
          "description": "Free-text description.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. Last update timestamp.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      }
    },
    "ReportSummaryChartData": {
      "properties": {
        "dataPoints": {
          "items": {
            "$ref": "ReportSummaryChartDataDataPoint"
          },
          "type": "array",
          "description": "Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value."
        }
      },
      "description": "Describes a collection of data points rendered as a Chart.",
      "type": "object",
      "id": "ReportSummaryChartData"
    },
    "ListErrorFramesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "errorFrames": {
          "items": {
            "$ref": "ErrorFrame"
          },
          "type": "array",
          "description": "The list of error frames."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      },
      "description": "A response for listing error frames.",
      "id": "ListErrorFramesResponse",
      "type": "object"
    },
    "ReportSummaryHistogramChartData": {
      "type": "object",
      "properties": {
        "buckets": {
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "items": {
            "$ref": "ReportSummaryHistogramChartDataBucket"
          },
          "type": "array"
        }
      },
      "description": "A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.",
      "id": "ReportSummaryHistogramChartData"
    },
    "VirtualMachinePreferencesNetworkCostParameters": {
      "type": "object",
      "description": "Parameters that affect network cost estimations.",
      "properties": {
        "estimatedEgressTrafficPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. An estimated percentage of priced outbound traffic (egress traffic) from the measured outbound traffic. Must be in the interval [0, 100]."
        }
      },
      "id": "VirtualMachinePreferencesNetworkCostParameters"
    },
    "UploadFileInfo": {
      "type": "object",
      "properties": {
        "signedUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Upload URI for the file."
        },
        "headers": {
          "description": "Output only. The headers that were used to sign the URL.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "readOnly": true
        },
        "uriExpirationTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Expiration time of the upload URI."
        }
      },
      "id": "UploadFileInfo",
      "description": "A resource that contains a URI to which a data file can be uploaded."
    },
    "DiskPartitionList": {
      "properties": {
        "entries": {
          "description": "Partition entries.",
          "type": "array",
          "items": {
            "$ref": "DiskPartition"
          }
        }
      },
      "description": "Disk partition list.",
      "type": "object",
      "id": "DiskPartitionList"
    },
    "AggregationResult": {
      "id": "AggregationResult",
      "type": "object",
      "description": "Message describing a result of an aggregation.",
      "properties": {
        "frequency": {
          "$ref": "AggregationResultFrequency"
        },
        "field": {
          "type": "string"
        },
        "histogram": {
          "$ref": "AggregationResultHistogram"
        },
        "sum": {
          "$ref": "AggregationResultSum"
        },
        "count": {
          "$ref": "AggregationResultCount"
        }
      }
    },
    "DiskPartition": {
      "id": "DiskPartition",
      "properties": {
        "subPartitions": {
          "description": "Sub-partitions.",
          "$ref": "DiskPartitionList"
        },
        "freeBytes": {
          "type": "string",
          "format": "int64",
          "description": "Partition free space."
        },
        "mountPoint": {
          "description": "Mount pount (Linux/Windows) or drive letter (Windows).",
          "type": "string"
        },
        "fileSystem": {
          "type": "string",
          "description": "Partition file system."
        },
        "uuid": {
          "type": "string",
          "description": "Partition UUID."
        },
        "type": {
          "type": "string",
          "description": "Partition type (e.g. BIOS boot)."
        },
        "capacityBytes": {
          "type": "string",
          "format": "int64",
          "description": "Partition capacity."
        }
      },
      "description": "Disk Partition details.",
      "type": "object"
    },
    "RegionPreferences": {
      "id": "RegionPreferences",
      "properties": {
        "preferredRegions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions."
        }
      },
      "type": "object",
      "description": "The user preferences relating to target regions."
    },
    "ComputeEngineShapeDescriptor": {
      "type": "object",
      "description": "Compute Engine target shape descriptor.",
      "id": "ComputeEngineShapeDescriptor",
      "properties": {
        "storage": {
          "items": {
            "$ref": "ComputeStorageDescriptor"
          },
          "description": "Compute Engine storage. Never empty.",
          "type": "array"
        },
        "machineType": {
          "description": "Compute Engine machine type.",
          "type": "string"
        },
        "memoryMb": {
          "format": "int32",
          "description": "Memory in mebibytes.",
          "type": "integer"
        },
        "series": {
          "type": "string",
          "description": "Compute Engine machine series."
        },
        "logicalCoreCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of logical cores."
        },
        "physicalCoreCount": {
          "format": "int32",
          "description": "Number of physical cores.",
          "type": "integer"
        }
      }
    },
    "GoogleKubernetesEngineMigrationTarget": {
      "description": "GKE migration target.",
      "id": "GoogleKubernetesEngineMigrationTarget",
      "type": "object",
      "properties": {}
    },
    "DiskEntry": {
      "id": "DiskEntry",
      "properties": {
        "totalCapacityBytes": {
          "format": "int64",
          "description": "Disk capacity.",
          "type": "string"
        },
        "totalFreeBytes": {
          "description": "Disk free space.",
          "type": "string",
          "format": "int64"
        },
        "interfaceType": {
          "type": "string",
          "description": "Disks interface type (e.g. SATA/SCSI)"
        },
        "hwAddress": {
          "description": "Disk hardware address (e.g. 0:1 for SCSI).",
          "type": "string"
        },
        "vmwareConfig": {
          "$ref": "VmwareDiskConfig",
          "description": "VMware disk details."
        },
        "diskLabelType": {
          "description": "Disk label type (e.g. BIOS/GPT)",
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "Disk status (e.g. online)."
        },
        "diskLabel": {
          "description": "Disk label.",
          "type": "string"
        },
        "partitions": {
          "description": "Partition layout.",
          "$ref": "DiskPartitionList"
        }
      },
      "description": "Single disk entry.",
      "type": "object"
    },
    "RunningProcess": {
      "properties": {
        "pid": {
          "format": "int64",
          "description": "Process ID.",
          "type": "string"
        },
        "cmdline": {
          "description": "Process full command line.",
          "type": "string"
        },
        "user": {
          "description": "User running the process.",
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "description": "Process extended attributes.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "exePath": {
          "type": "string",
          "description": "Process binary path."
        }
      },
      "description": "Guest OS running process details.",
      "type": "object",
      "id": "RunningProcess"
    },
    "GenericInsight": {
      "properties": {
        "defaultMessage": {
          "description": "Output only. In case message_code is not yet known by the client default_message will be the message to be used instead. Text can contain md file style links.",
          "type": "string",
          "readOnly": true
        },
        "messageId": {
          "type": "string",
          "description": "Output only. Represents a globally unique message id for this insight, can be used for localization purposes, in case message_code is not yet known by the client use default_message instead.",
          "format": "int64",
          "readOnly": true
        },
        "additionalInformation": {
          "description": "Output only. Additional information about the insight, each entry can be a logical entry and must make sense if it is displayed with line breaks between each entry. Text can contain md style links.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "A generic insight about an asset.",
      "type": "object",
      "id": "GenericInsight"
    },
    "RemoveAssetsFromGroupRequest": {
      "type": "object",
      "properties": {
        "assets": {
          "description": "Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000.",
          "$ref": "AssetList"
        },
        "allowMissing": {
          "description": "Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.",
          "type": "boolean"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "id": "RemoveAssetsFromGroupRequest",
      "description": "A request to remove assets from a group."
    },
    "RunningProcessList": {
      "id": "RunningProcessList",
      "properties": {
        "processes": {
          "type": "array",
          "description": "Running process entries.",
          "items": {
            "$ref": "RunningProcess"
          }
        }
      },
      "type": "object",
      "description": "List of running guest OS processes."
    },
    "NetworkAdapterDetails": {
      "properties": {
        "adapterType": {
          "type": "string",
          "description": "Network adapter type (e.g. VMXNET3)."
        },
        "macAddress": {
          "type": "string",
          "description": "MAC address."
        },
        "addresses": {
          "description": "NetworkAddressList",
          "$ref": "NetworkAddressList"
        }
      },
      "type": "object",
      "description": "Details of network adapter.",
      "id": "NetworkAdapterDetails"
    },
    "NetworkUsageSample": {
      "properties": {
        "averageIngressBps": {
          "format": "float",
          "type": "number",
          "description": "Average network ingress in B/s sampled over a short window. Must be non-negative."
        },
        "averageEgressBps": {
          "format": "float",
          "description": "Average network egress in B/s sampled over a short window. Must be non-negative.",
          "type": "number"
        }
      },
      "type": "object",
      "description": "Network usage sample. Values are across all network interfaces.",
      "id": "NetworkUsageSample"
    },
    "AggregationResultSum": {
      "id": "AggregationResultSum",
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "The result of a sum aggregation."
    },
    "Selinux": {
      "properties": {
        "mode": {
          "description": "SELinux mode enforcing / permissive.",
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "description": "Is SELinux enabled."
        }
      },
      "type": "object",
      "description": "SELinux details.",
      "id": "Selinux"
    },
    "ReportSummaryVMWareNode": {
      "type": "object",
      "description": "A VMWare Engine Node",
      "id": "ReportSummaryVMWareNode",
      "properties": {
        "code": {
          "type": "string",
          "description": "Code to identify VMware Engine node series, e.g. \"ve1-standard-72\". Based on the displayName of cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.nodeTypes"
        }
      }
    },
    "ComputeEnginePreferences": {
      "description": "The user preferences relating to Compute Engine target platform.",
      "properties": {
        "machinePreferences": {
          "$ref": "MachinePreferences",
          "description": "Preferences concerning the machine types to consider on Compute Engine."
        },
        "licenseType": {
          "description": "License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.",
          "enumDescriptions": [
            "Unspecified (default value).",
            "Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with.",
            "Bring-your-own-license (BYOL) plan. User provides the OS license."
          ],
          "type": "string",
          "enum": [
            "LICENSE_TYPE_UNSPECIFIED",
            "LICENSE_TYPE_DEFAULT",
            "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE"
          ]
        },
        "persistentDiskType": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ],
          "description": "Persistent disk type to use. If unspecified (default), all types are considered, based on available usage data.",
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ]
        }
      },
      "id": "ComputeEnginePreferences",
      "type": "object"
    },
    "DailyResourceUsageAggregation": {
      "properties": {
        "disk": {
          "description": "Disk usage.",
          "$ref": "DailyResourceUsageAggregationDisk"
        },
        "cpu": {
          "description": "CPU usage.",
          "$ref": "DailyResourceUsageAggregationCPU"
        },
        "network": {
          "description": "Network usage.",
          "$ref": "DailyResourceUsageAggregationNetwork"
        },
        "date": {
          "$ref": "Date",
          "description": "Aggregation date. Day boundaries are at midnight UTC."
        },
        "memory": {
          "description": "Memory usage.",
          "$ref": "DailyResourceUsageAggregationMemory"
        }
      },
      "id": "DailyResourceUsageAggregation",
      "type": "object",
      "description": "Usage data aggregation for a single day."
    },
    "ImportJob": {
      "description": "A resource that represents the background job that imports asset frames.",
      "type": "object",
      "properties": {
        "executionReport": {
          "description": "Output only. The report with the results of running the import job.",
          "$ref": "ExecutionReport",
          "readOnly": true
        },
        "gcsPayload": {
          "$ref": "GCSPayloadInfo",
          "deprecated": true,
          "description": "The payload is in Google Cloud Storage."
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The timestamp when the import job was last updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the import job was created."
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        },
        "validationReport": {
          "description": "Output only. The report with the validation results of the import job.",
          "readOnly": true,
          "$ref": "ValidationReport"
        },
        "state": {
          "description": "Output only. The state of the import job.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "The import job is pending.",
            "The processing of the import job is ongoing.",
            "The import job processing has completed.",
            "The import job failed to be processed.",
            "The import job is being validated.",
            "The import job contains blocking errors.",
            "The validation of the job completed with no blocking errors."
          ],
          "enum": [
            "IMPORT_JOB_STATE_UNSPECIFIED",
            "IMPORT_JOB_STATE_PENDING",
            "IMPORT_JOB_STATE_RUNNING",
            "IMPORT_JOB_STATE_COMPLETED",
            "IMPORT_JOB_STATE_FAILED",
            "IMPORT_JOB_STATE_VALIDATING",
            "IMPORT_JOB_STATE_FAILED_VALIDATION",
            "IMPORT_JOB_STATE_READY"
          ]
        },
        "assetSource": {
          "type": "string",
          "description": "Required. Reference to a source."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The full name of the import job."
        },
        "inlinePayload": {
          "description": "The payload is included in the request, mainly used for small import jobs.",
          "$ref": "InlinePayloadInfo"
        },
        "completeTime": {
          "readOnly": true,
          "description": "Output only. The timestamp when the import job was completed.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "ImportJob"
    },
    "Empty": {
      "id": "Empty",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object"
    },
    "AggregationCount": {
      "properties": {},
      "type": "object",
      "description": "Object count.",
      "id": "AggregationCount"
    },
    "Money": {
      "description": "Represents an amount of money with its currency type.",
      "type": "object",
      "id": "Money",
      "properties": {
        "units": {
          "format": "int64",
          "type": "string",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
        },
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AggregateAssetsValuesRequest": {
      "description": "A request to aggregate one or more values.",
      "type": "object",
      "id": "AggregateAssetsValuesRequest",
      "properties": {
        "aggregations": {
          "description": "Array of aggregations to perform. Up to 25 aggregations can be defined.",
          "type": "array",
          "items": {
            "$ref": "Aggregation"
          }
        },
        "filter": {
          "description": "The aggregation will be performed on assets that match the provided filter.",
          "type": "string"
        }
      }
    },
    "ListImportDataFilesResponse": {
      "description": "Response for listing payload files of an import job.",
      "properties": {
        "importDataFiles": {
          "description": "The list of import data files.",
          "items": {
            "$ref": "ImportDataFile"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ListImportDataFilesResponse",
      "type": "object"
    },
    "AssetList": {
      "type": "object",
      "description": "Lists the asset IDs of all assets.",
      "properties": {
        "assetIds": {
          "description": "Required. A list of asset IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "AssetList"
    },
    "DailyResourceUsageAggregationCPU": {
      "type": "object",
      "properties": {
        "utilizationPercentage": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "CPU utilization percentage."
        }
      },
      "id": "DailyResourceUsageAggregationCPU",
      "description": "Statistical aggregation of CPU usage."
    },
    "AssetFrame": {
      "properties": {
        "attributes": {
          "type": "object",
          "description": "Generic asset attributes.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "traceToken": {
          "type": "string",
          "description": "Optional. Trace token is optionally provided to assist with debugging and traceability."
        },
        "reportTime": {
          "description": "The time the data was reported.",
          "type": "string",
          "format": "google-datetime"
        },
        "virtualMachineDetails": {
          "$ref": "VirtualMachineDetails",
          "description": "Asset information specific for virtual machines."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "performanceSamples": {
          "type": "array",
          "description": "Asset performance data samples. Samples that are from more than 40 days ago or after tomorrow are ignored.",
          "items": {
            "$ref": "PerformanceSample"
          }
        }
      },
      "description": "Contains data reported from an inventory source on an asset.",
      "id": "AssetFrame",
      "type": "object"
    },
    "HostsEntry": {
      "type": "object",
      "id": "HostsEntry",
      "description": "Single /etc/hosts entry.",
      "properties": {
        "ip": {
          "type": "string",
          "description": "IP (raw, IPv4/6 agnostic)."
        },
        "hostNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of host names / aliases."
        }
      }
    },
    "BatchUpdateAssetsRequest": {
      "properties": {
        "requests": {
          "items": {
            "$ref": "UpdateAssetRequest"
          },
          "description": "Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "A request to update a list of assets.",
      "id": "BatchUpdateAssetsRequest"
    },
    "ListPreferenceSetsResponse": {
      "properties": {
        "preferenceSets": {
          "description": "The list of PreferenceSets",
          "type": "array",
          "items": {
            "$ref": "PreferenceSet"
          }
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      },
      "description": "Response message for listing preference sets.",
      "id": "ListPreferenceSetsResponse",
      "type": "object"
    },
    "Frames": {
      "type": "object",
      "description": "Collection of frame data.",
      "id": "Frames",
      "properties": {
        "framesData": {
          "description": "A repeated field of asset data.",
          "type": "array",
          "items": {
            "$ref": "AssetFrame"
          }
        }
      }
    },
    "ListReportsResponse": {
      "properties": {
        "reports": {
          "items": {
            "$ref": "Report"
          },
          "type": "array",
          "description": "The list of Reports."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        }
      },
      "type": "object",
      "id": "ListReportsResponse",
      "description": "Response message for listing Reports."
    },
    "GuestInstalledApplication": {
      "id": "GuestInstalledApplication",
      "properties": {
        "time": {
          "description": "Date application was installed.",
          "type": "string"
        },
        "vendor": {
          "type": "string",
          "description": "Installed application vendor."
        },
        "path": {
          "description": "Source path.",
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "Installed application version."
        },
        "name": {
          "description": "Installed application name.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Guest installed application information."
    },
    "AggregationHistogram": {
      "description": "Histogram of bucketed assets counts by field value.",
      "type": "object",
      "id": "AggregationHistogram",
      "properties": {
        "lowerBounds": {
          "description": "Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "MachineSeries": {
      "type": "object",
      "description": "A Compute Engine machine series.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series."
        }
      },
      "id": "MachineSeries"
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "properties": {},
      "id": "CancelOperationRequest",
      "type": "object"
    },
    "ListImportJobsResponse": {
      "type": "object",
      "description": "A response for listing import jobs.",
      "id": "ListImportJobsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "importJobs": {
          "items": {
            "$ref": "ImportJob"
          },
          "description": "The list of import jobs.",
          "type": "array"
        }
      }
    },
    "VmwareEnginePreferences": {
      "description": "The user preferences relating to Google Cloud VMware Engine target platform.",
      "id": "VmwareEnginePreferences",
      "properties": {
        "commitmentPlan": {
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_3_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_1_YEAR_UPFRONT_PAYMENT",
            "COMMITMENT_3_YEAR_UPFRONT_PAYMENT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment (monthly payments).",
            "3 year commitment (monthly payments).",
            "1 year commitment (upfront payment).",
            "3 years commitment (upfront payment)."
          ],
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with."
        },
        "cpuOvercommitRatio": {
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment.",
          "format": "double",
          "type": "number"
        },
        "storageDeduplicationCompressionRatio": {
          "format": "double",
          "description": "The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.",
          "type": "number"
        },
        "memoryOvercommitRatio": {
          "format": "double",
          "description": "Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CpuUsageSample": {
      "id": "CpuUsageSample",
      "properties": {
        "utilizedPercentage": {
          "type": "number",
          "description": "Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.",
          "format": "float"
        }
      },
      "description": "CPU usage sample.",
      "type": "object"
    },
    "ReportSummarySoleTenantNodeAllocation": {
      "description": "Represents the assets allocated to a specific Sole-Tenant node type.",
      "type": "object",
      "id": "ReportSummarySoleTenantNodeAllocation",
      "properties": {
        "nodeCount": {
          "type": "string",
          "description": "Count of this node type to be provisioned",
          "format": "int64"
        },
        "allocatedAssetCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of assets allocated to these nodes"
        },
        "node": {
          "$ref": "SoleTenantNodeType",
          "description": "Sole Tenant node type, e.g. \"m3-node-128-3904\""
        }
      }
    },
    "NetworkAddress": {
      "id": "NetworkAddress",
      "description": "Details of network address.",
      "properties": {
        "assignment": {
          "description": "Whether DHCP is used to assign addresses.",
          "enumDescriptions": [
            "Unknown (default value).",
            "Staticly assigned IP.",
            "Dynamically assigned IP (DHCP)."
          ],
          "enum": [
            "ADDRESS_ASSIGNMENT_UNSPECIFIED",
            "ADDRESS_ASSIGNMENT_STATIC",
            "ADDRESS_ASSIGNMENT_DHCP"
          ],
          "type": "string"
        },
        "bcast": {
          "type": "string",
          "description": "Broadcast address."
        },
        "fqdn": {
          "description": "Fully qualified domain name.",
          "type": "string"
        },
        "subnetMask": {
          "type": "string",
          "description": "Subnet mask."
        },
        "ipAddress": {
          "description": "Assigned or configured IP Address.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NetworkAddressList": {
      "type": "object",
      "id": "NetworkAddressList",
      "description": "List of allocated/assigned network addresses.",
      "properties": {
        "addresses": {
          "description": "Network address entries.",
          "items": {
            "$ref": "NetworkAddress"
          },
          "type": "array"
        }
      }
    },
    "ImportDataFile": {
      "type": "object",
      "description": "A resource that represents a payload file in an import job.",
      "id": "ImportDataFile",
      "properties": {
        "createTime": {
          "readOnly": true,
          "description": "Output only. The timestamp when the file was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "format": {
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ],
          "type": "string",
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false
          ],
          "description": "Required. The payload format.",
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ]
        },
        "uploadFileInfo": {
          "$ref": "UploadFileInfo",
          "description": "Information about a file that is uploaded to a storage service."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE"
          ],
          "enumDescriptions": [
            "Default value.",
            "The data file is being created.",
            "The data file completed initialization."
          ],
          "description": "Output only. The state of the import data file."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the file."
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        }
      }
    },
    "Date": {
      "type": "object",
      "id": "Date",
      "properties": {
        "month": {
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "format": "int32"
        },
        "day": {
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
        }
      },
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
    },
    "ReportSummaryMachineFinding": {
      "id": "ReportSummaryMachineFinding",
      "type": "object",
      "description": "A set of findings that applies to assets of type Virtual/Physical Machine.",
      "properties": {
        "allocatedDiskTypes": {
          "type": "array",
          "items": {
            "enum": [
              "PERSISTENT_DISK_TYPE_UNSPECIFIED",
              "PERSISTENT_DISK_TYPE_STANDARD",
              "PERSISTENT_DISK_TYPE_BALANCED",
              "PERSISTENT_DISK_TYPE_SSD"
            ],
            "enumDescriptions": [
              "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
              "Standard HDD Persistent Disk.",
              "Balanced Persistent Disk.",
              "SSD Persistent Disk."
            ],
            "type": "string"
          },
          "description": "Set of disk types allocated to assets."
        },
        "allocatedAssetCount": {
          "format": "int64",
          "description": "Count of assets which were allocated.",
          "type": "string"
        },
        "allocatedRegions": {
          "items": {
            "type": "string"
          },
          "description": "Set of regions in which the assets were allocated.",
          "type": "array"
        },
        "machineSeriesAllocations": {
          "items": {
            "$ref": "ReportSummaryMachineSeriesAllocation"
          },
          "description": "Distribution of assets based on the Machine Series.",
          "type": "array"
        }
      }
    },
    "ExecutionReport": {
      "id": "ExecutionReport",
      "properties": {
        "totalRowsCount": {
          "type": "integer",
          "description": "Total number of rows in the import job.",
          "format": "int32"
        },
        "executionErrors": {
          "description": "Validation errors encountered during the execution of the import job.",
          "$ref": "ValidationReport"
        },
        "jobErrors": {
          "items": {
            "$ref": "ImportError"
          },
          "deprecated": true,
          "type": "array",
          "description": "List of job-level errors. Deprecated, use the job errors under execution_errors instead."
        },
        "framesReported": {
          "format": "int32",
          "description": "Total number of asset frames reported for the import job.",
          "type": "integer"
        }
      },
      "description": "A resource that reports result of the import job execution.",
      "type": "object"
    },
    "Asset": {
      "description": "An asset represents a resource in your environment. Asset types include virtual machines and databases.",
      "properties": {
        "performanceData": {
          "description": "Output only. Performance data for the asset.",
          "$ref": "AssetPerformanceData",
          "readOnly": true
        },
        "assignedGroups": {
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. The list of groups that the asset is assigned to."
        },
        "virtualMachineDetails": {
          "description": "Output only. Asset information specific for virtual machines.",
          "readOnly": true,
          "$ref": "VirtualMachineDetails"
        },
        "insightList": {
          "readOnly": true,
          "$ref": "InsightList",
          "description": "Output only. The list of insights associated with the asset."
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "description": "Output only. The timestamp when the asset was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "sources": {
          "description": "Output only. The list of sources contributing to the asset.",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the asset was last updated."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The full name of the asset."
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Generic asset attributes."
        }
      },
      "id": "Asset",
      "type": "object"
    },
    "GuestConfigDetails": {
      "id": "GuestConfigDetails",
      "properties": {
        "selinux": {
          "$ref": "Selinux",
          "description": "SELinux details."
        },
        "fstab": {
          "description": "Mount list (Linux fstab).",
          "$ref": "FstabEntryList"
        },
        "nfsExports": {
          "description": "NFS exports.",
          "$ref": "NfsExportList"
        },
        "issue": {
          "type": "string",
          "description": "OS issue (typically /etc/issue in Linux)."
        },
        "hosts": {
          "description": "Hosts file (/etc/hosts).",
          "$ref": "HostsEntryList"
        }
      },
      "description": "Guest OS config information.",
      "type": "object"
    },
    "GCSPayloadInfo": {
      "description": "A resource that represents a payload hosted on Google Cloud Storage.",
      "id": "GCSPayloadInfo",
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "The payload path in Google Cloud Storage."
        },
        "format": {
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false
          ],
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "description": "The import job format.",
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ],
          "type": "string"
        }
      }
    },
    "AddAssetsToGroupRequest": {
      "description": "A request to add assets to a group.",
      "id": "AddAssetsToGroupRequest",
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        },
        "assets": {
          "$ref": "AssetList",
          "description": "Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000."
        },
        "allowExisting": {
          "description": "Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.",
          "type": "boolean"
        }
      }
    },
    "ReportSummaryHistogramChartDataBucket": {
      "id": "ReportSummaryHistogramChartDataBucket",
      "type": "object",
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "properties": {
        "count": {
          "format": "int64",
          "type": "string",
          "description": "Count of items in the bucket."
        },
        "upperBound": {
          "type": "string",
          "description": "Upper bound - exclusive.",
          "format": "int64"
        },
        "lowerBound": {
          "type": "string",
          "description": "Lower bound - inclusive.",
          "format": "int64"
        }
      }
    },
    "DailyResourceUsageAggregationNetwork": {
      "id": "DailyResourceUsageAggregationNetwork",
      "type": "object",
      "properties": {
        "egressBps": {
          "description": "Network egress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        },
        "ingressBps": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Network ingress in B/s."
        }
      },
      "description": "Statistical aggregation of network usage."
    },
    "ReportSummaryUtilizationChartData": {
      "type": "object",
      "id": "ReportSummaryUtilizationChartData",
      "properties": {
        "used": {
          "description": "Aggregate value which falls into the \"Used\" bucket.",
          "type": "string",
          "format": "int64"
        },
        "free": {
          "format": "int64",
          "description": "Aggregate value which falls into the \"Free\" bucket.",
          "type": "string"
        }
      },
      "description": "Utilization Chart is a specific type of visualization which displays a metric classified into \"Used\" and \"Free\" buckets."
    },
    "AssetPerformanceData": {
      "properties": {
        "dailyResourceUsageAggregations": {
          "type": "array",
          "description": "Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days. Aggregations are sorted from oldest to most recent.",
          "items": {
            "$ref": "DailyResourceUsageAggregation"
          }
        }
      },
      "description": "Performance data for an asset.",
      "id": "AssetPerformanceData",
      "type": "object"
    },
    "Insight": {
      "description": "An insight about an asset.",
      "properties": {
        "migrationInsight": {
          "description": "Output only. An insight about potential migrations for an asset.",
          "$ref": "MigrationInsight",
          "readOnly": true
        },
        "genericInsight": {
          "readOnly": true,
          "$ref": "GenericInsight",
          "description": "Output only. A generic insight about an asset."
        }
      },
      "id": "Insight",
      "type": "object"
    },
    "GuestOsDetails": {
      "type": "object",
      "description": "Information from Guest-level collections.",
      "properties": {
        "runtime": {
          "$ref": "GuestRuntimeDetails",
          "description": "Runtime information."
        },
        "config": {
          "$ref": "GuestConfigDetails",
          "description": "OS and app configuration."
        }
      },
      "id": "GuestOsDetails"
    },
    "BiosDetails": {
      "properties": {
        "smbiosUuid": {
          "description": "SMBIOS UUID.",
          "type": "string"
        },
        "biosVersion": {
          "type": "string",
          "description": "BIOS version."
        },
        "biosName": {
          "description": "BIOS name.",
          "type": "string"
        },
        "biosManufacturer": {
          "type": "string",
          "description": "BIOS manufacturer."
        },
        "biosReleaseDate": {
          "type": "string",
          "description": "BIOS release date."
        }
      },
      "id": "BiosDetails",
      "description": "Details about the BIOS.",
      "type": "object"
    },
    "ReportSummaryChartDataDataPoint": {
      "id": "ReportSummaryChartDataDataPoint",
      "properties": {
        "value": {
          "format": "double",
          "type": "number",
          "description": "The Y-axis value for this data point."
        },
        "label": {
          "description": "The X-axis label for this data point.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Describes a single data point in the Chart."
    },
    "ReportSummaryAssetAggregateStats": {
      "properties": {
        "totalAssets": {
          "format": "int64",
          "description": "Count of the number of unique assets in this collection.",
          "type": "string"
        },
        "storageUtilization": {
          "description": "Total storage split into Used/Free buckets.",
          "$ref": "ReportSummaryChartData",
          "deprecated": true
        },
        "totalMemoryBytes": {
          "description": "Sum of the memory in bytes of all the assets in this collection.",
          "format": "int64",
          "type": "string"
        },
        "memoryUtilizationChart": {
          "$ref": "ReportSummaryUtilizationChartData",
          "description": "Total memory split into Used/Free buckets."
        },
        "operatingSystem": {
          "$ref": "ReportSummaryChartData",
          "description": "Count of assets grouped by Operating System families."
        },
        "storageBytesHistogram": {
          "$ref": "ReportSummaryHistogramChartData",
          "description": "Histogram showing a distribution of memory sizes."
        },
        "coreCountHistogram": {
          "$ref": "ReportSummaryHistogramChartData",
          "description": "Histogram showing a distribution of CPU core counts."
        },
        "totalStorageBytes": {
          "format": "int64",
          "type": "string",
          "description": "Sum of persistent storage in bytes of all the assets in this collection."
        },
        "memoryBytesHistogram": {
          "description": "Histogram showing a distribution of memory sizes.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "totalCores": {
          "description": "Sum of the CPU core count of all the assets in this collection.",
          "format": "int64",
          "type": "string"
        },
        "storageUtilizationChart": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryUtilizationChartData"
        },
        "assetAge": {
          "deprecated": true,
          "description": "Count of assets grouped by age.",
          "$ref": "ReportSummaryChartData"
        },
        "memoryUtilization": {
          "deprecated": true,
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryChartData"
        }
      },
      "description": "Aggregate statistics for a collection of assets.",
      "type": "object",
      "id": "ReportSummaryAssetAggregateStats"
    },
    "UpdateAssetRequest": {
      "properties": {
        "asset": {
          "$ref": "Asset",
          "description": "Required. The resource being updated."
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        },
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
        }
      },
      "description": "A request to update an asset.",
      "type": "object",
      "id": "UpdateAssetRequest"
    },
    "Aggregation": {
      "properties": {
        "frequency": {
          "$ref": "AggregationFrequency",
          "description": "Creates a frequency distribution of all field values."
        },
        "count": {
          "description": "Count the number of matching objects.",
          "$ref": "AggregationCount"
        },
        "histogram": {
          "$ref": "AggregationHistogram",
          "description": "Creates a bucketed histogram of field values."
        },
        "sum": {
          "description": "Sum over a numeric field.",
          "$ref": "AggregationSum"
        },
        "field": {
          "type": "string",
          "description": "The name of the field on which to aggregate."
        }
      },
      "type": "object",
      "id": "Aggregation",
      "description": "Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation."
    },
    "ReportConfigGroupPreferenceSetAssignment": {
      "properties": {
        "group": {
          "type": "string",
          "description": "Required. Name of the group."
        },
        "preferenceSet": {
          "description": "Required. Name of the Preference Set.",
          "type": "string"
        }
      },
      "description": "Represents a combination of a group with a preference set.",
      "type": "object",
      "id": "ReportConfigGroupPreferenceSetAssignment"
    },
    "PreferenceSet": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Name of the preference set.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The timestamp when the preference set was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "virtualMachinePreferences": {
          "$ref": "VirtualMachinePreferences",
          "description": "A set of preferences that applies to all virtual machines in the context."
        },
        "updateTime": {
          "description": "Output only. The timestamp when the preference set was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "type": "string",
          "description": "A description of the preference set."
        }
      },
      "id": "PreferenceSet",
      "description": "The preferences that apply to all assets in a given context."
    },
    "AggregationFrequency": {
      "id": "AggregationFrequency",
      "type": "object",
      "description": "Frequency distribution of all field values.",
      "properties": {}
    },
    "ReportSummaryMachineSeriesAllocation": {
      "id": "ReportSummaryMachineSeriesAllocation",
      "properties": {
        "allocatedAssetCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of assets allocated to this machine series."
        },
        "machineSeries": {
          "description": "The Machine Series (e.g. \"E2\", \"N2\")",
          "$ref": "MachineSeries"
        }
      },
      "type": "object",
      "description": "Represents a data point tracking the count of assets allocated for a specific Machine Series."
    },
    "RunningService": {
      "type": "object",
      "description": "Guest OS running service details.",
      "id": "RunningService",
      "properties": {
        "pid": {
          "type": "string",
          "description": "Service pid.",
          "format": "int64"
        },
        "state": {
          "description": "Service state (raw, OS-agnostic).",
          "type": "string"
        },
        "exePath": {
          "type": "string",
          "description": "Service binary path."
        },
        "startMode": {
          "description": "Service start mode (raw, OS-agnostic).",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Service name."
        },
        "cmdline": {
          "description": "Service command line.",
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "Service status."
        }
      }
    },
    "AzureVmPlatformDetails": {
      "properties": {
        "location": {
          "description": "The location of the machine in the Azure format.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Azure platform's provisioning state.",
          "type": "string"
        },
        "machineTypeLabel": {
          "description": "Azure platform's machine type label.",
          "type": "string"
        }
      },
      "description": "Azure VM specific details.",
      "type": "object",
      "id": "AzureVmPlatformDetails"
    },
    "ComputeEngineMigrationTarget": {
      "id": "ComputeEngineMigrationTarget",
      "type": "object",
      "description": "Compute engine migration target.",
      "properties": {
        "shape": {
          "description": "Description of the suggested shape for the migration target.",
          "$ref": "ComputeEngineShapeDescriptor"
        }
      }
    },
    "FitDescriptor": {
      "properties": {
        "fitLevel": {
          "description": "Fit level.",
          "type": "string",
          "enumDescriptions": [
            "Not enough information.",
            "Fit.",
            "No Fit.",
            "Fit with effort."
          ],
          "enum": [
            "FIT_LEVEL_UNSPECIFIED",
            "FIT",
            "NO_FIT",
            "REQUIRES_EFFORT"
          ]
        }
      },
      "type": "object",
      "description": "Describes the fit level of an asset for migration to a specific target.",
      "id": "FitDescriptor"
    },
    "AggregateAssetsValuesResponse": {
      "properties": {
        "results": {
          "items": {
            "$ref": "AggregationResult"
          },
          "type": "array",
          "description": "The aggregation results."
        }
      },
      "description": "A response to a request to aggregated assets values.",
      "id": "AggregateAssetsValuesResponse",
      "type": "object"
    },
    "DailyResourceUsageAggregationMemory": {
      "properties": {
        "utilizationPercentage": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Memory utilization percentage."
        }
      },
      "type": "object",
      "id": "DailyResourceUsageAggregationMemory",
      "description": "Statistical aggregation of memory usage."
    },
    "FrameViolationEntry": {
      "id": "FrameViolationEntry",
      "properties": {
        "field": {
          "description": "The field of the original frame where the violation occurred.",
          "type": "string"
        },
        "violation": {
          "type": "string",
          "description": "A message describing the violation."
        }
      },
      "description": "A resource that contains a single violation of a reported `AssetFrame` resource.",
      "type": "object"
    },
    "OperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "statusMessage": {
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true
        },
        "apiVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. API version used to start the operation."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "requestedCancellation": {
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        }
      },
      "id": "OperationMetadata",
      "type": "object"
    },
    "FstabEntry": {
      "id": "FstabEntry",
      "properties": {
        "freq": {
          "type": "integer",
          "description": "Used by dump to determine which filesystems need to be dumped.",
          "format": "int32"
        },
        "spec": {
          "description": "The block special device or remote filesystem to be mounted.",
          "type": "string"
        },
        "file": {
          "type": "string",
          "description": "The mount point for the filesystem."
        },
        "mntops": {
          "description": "Mount options associated with the filesystem.",
          "type": "string"
        },
        "vfstype": {
          "description": "The type of the filesystem.",
          "type": "string"
        },
        "passno": {
          "description": "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "Single fstab entry."
    },
    "Status": {
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status"
    },
    "ValidateImportJobRequest": {
      "description": "A request to validate an import job.",
      "id": "ValidateImportJobRequest",
      "type": "object",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      }
    },
    "NetworkConnectionList": {
      "type": "object",
      "id": "NetworkConnectionList",
      "properties": {
        "entries": {
          "description": "Network connection entries.",
          "type": "array",
          "items": {
            "$ref": "NetworkConnection"
          }
        }
      },
      "description": "Network connection list."
    },
    "VmwareDiskConfig": {
      "type": "object",
      "id": "VmwareDiskConfig",
      "description": "VMware disk config details.",
      "properties": {
        "backingType": {
          "enum": [
            "BACKING_TYPE_UNSPECIFIED",
            "BACKING_TYPE_FLAT_V1",
            "BACKING_TYPE_FLAT_V2",
            "BACKING_TYPE_PMEM",
            "BACKING_TYPE_RDM_V1",
            "BACKING_TYPE_RDM_V2",
            "BACKING_TYPE_SESPARSE",
            "BACKING_TYPE_SESPARSE_V1",
            "BACKING_TYPE_SESPARSE_V2"
          ],
          "description": "VMDK backing type.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Flat v1.",
            "Flat v2.",
            "Persistent memory, also known as Non-Volatile Memory (NVM).",
            "Raw Disk Memory v1.",
            "Raw Disk Memory v2.",
            "SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.",
            "SEsparse v1.",
            "SEsparse v1."
          ]
        },
        "shared": {
          "description": "Is VMDK shared with other VMs.",
          "type": "boolean"
        },
        "rdmCompatibilityMode": {
          "type": "string",
          "description": "RDM compatibility mode."
        },
        "vmdkDiskMode": {
          "description": "VMDK disk mode.",
          "type": "string"
        }
      }
    },
    "Group": {
      "properties": {
        "displayName": {
          "description": "User-friendly display name.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the group.",
          "readOnly": true
        },
        "description": {
          "description": "The description of the resource.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the group was created.",
          "format": "google-datetime"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The timestamp when the group was last updated.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups.",
      "type": "object",
      "id": "Group"
    },
    "VirtualMachineArchitectureDetails": {
      "id": "VirtualMachineArchitectureDetails",
      "description": "Details of the VM architecture.",
      "type": "object",
      "properties": {
        "cpuManufacturer": {
          "type": "string",
          "description": "CPU manufacturer, e.g., \"Intel\", \"AMD\"."
        },
        "bios": {
          "description": "BIOS Details.",
          "$ref": "BiosDetails"
        },
        "firmware": {
          "type": "string",
          "description": "Firmware (BIOS/efi)."
        },
        "cpuSocketCount": {
          "description": "Number of processor sockets allocated to the machine.",
          "type": "integer",
          "format": "int32"
        },
        "cpuThreadCount": {
          "format": "int32",
          "description": "Number of CPU threads allocated to the machine.",
          "type": "integer"
        },
        "cpuArchitecture": {
          "description": "CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc.",
          "type": "string"
        },
        "vendor": {
          "description": "Hardware vendor.",
          "type": "string"
        },
        "cpuName": {
          "type": "string",
          "description": "CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc."
        },
        "hyperthreading": {
          "enumDescriptions": [
            "Unknown (default value).",
            "Hyperthreading is disabled.",
            "Hyperthreading is enabled."
          ],
          "type": "string",
          "enum": [
            "HYPER_THREADING_UNSPECIFIED",
            "HYPER_THREADING_DISABLED",
            "HYPER_THREADING_ENABLED"
          ],
          "description": "CPU hyperthreading support."
        }
      }
    },
    "RuntimeNetworkInfo": {
      "properties": {
        "netstatTime": {
          "description": "Netstat time collected.",
          "$ref": "DateTime"
        },
        "connections": {
          "$ref": "NetworkConnectionList",
          "description": "Network connections."
        },
        "netstat": {
          "type": "string",
          "description": "Netstat (raw, OS-agnostic)."
        }
      },
      "description": "Runtime networking information.",
      "id": "RuntimeNetworkInfo",
      "type": "object"
    },
    "SoleTenancyPreferences": {
      "description": "Preferences concerning Sole Tenancy nodes and VMs.",
      "properties": {
        "cpuOvercommitRatio": {
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.",
          "type": "number",
          "format": "double"
        },
        "hostMaintenancePolicy": {
          "enum": [
            "HOST_MAINTENANCE_POLICY_UNSPECIFIED",
            "HOST_MAINTENANCE_POLICY_DEFAULT",
            "HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE",
            "HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP"
          ],
          "enumDescriptions": [
            "Unspecified host maintenance policy.",
            "Default host maintenance policy.",
            "Restart in place host maintenance policy.",
            "Migrate within node group host maintenance policy."
          ],
          "type": "string",
          "description": "Sole Tenancy nodes maintenance policy."
        },
        "nodeTypes": {
          "items": {
            "$ref": "SoleTenantNodeType"
          },
          "description": "A list of sole tenant node types. An empty list means that all possible node types will be considered.",
          "type": "array"
        },
        "commitmentPlan": {
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR",
            "COMMITMENT_3_YEAR"
          ],
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment.",
            "3 years commitment."
          ],
          "type": "string"
        }
      },
      "id": "SoleTenancyPreferences",
      "type": "object"
    },
    "PerformanceSample": {
      "type": "object",
      "properties": {
        "disk": {
          "$ref": "DiskUsageSample",
          "description": "Disk usage sample."
        },
        "memory": {
          "description": "Memory usage sample.",
          "$ref": "MemoryUsageSample"
        },
        "sampleTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Time the sample was collected. If omitted, the frame report time will be used."
        },
        "network": {
          "description": "Network usage sample.",
          "$ref": "NetworkUsageSample"
        },
        "cpu": {
          "$ref": "CpuUsageSample",
          "description": "CPU usage sample."
        }
      },
      "id": "PerformanceSample",
      "description": "Performance data sample."
    },
    "DiskEntryList": {
      "type": "object",
      "id": "DiskEntryList",
      "properties": {
        "entries": {
          "type": "array",
          "description": "Disk entries.",
          "items": {
            "$ref": "DiskEntry"
          }
        }
      },
      "description": "VM disks."
    },
    "BatchUpdateAssetsResponse": {
      "type": "object",
      "description": "Response for updating a list of assets.",
      "id": "BatchUpdateAssetsResponse",
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "$ref": "Asset"
          },
          "description": "Update asset content. The content only includes values after field mask being applied."
        }
      }
    },
    "AwsEc2PlatformDetails": {
      "properties": {
        "machineTypeLabel": {
          "type": "string",
          "description": "AWS platform's machine type label."
        },
        "location": {
          "description": "The location of the machine in the AWS format.",
          "type": "string"
        }
      },
      "id": "AwsEc2PlatformDetails",
      "type": "object",
      "description": "AWS EC2 specific details."
    },
    "PayloadFile": {
      "description": "Payload file for inline import job payload.",
      "properties": {
        "name": {
          "description": "The file name.",
          "type": "string"
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "The file data."
        }
      },
      "type": "object",
      "id": "PayloadFile"
    },
    "GuestRuntimeDetails": {
      "description": "Guest OS runtime information.",
      "id": "GuestRuntimeDetails",
      "properties": {
        "networkInfo": {
          "$ref": "RuntimeNetworkInfo",
          "description": "Runtime network information (connections, ports)."
        },
        "openFileList": {
          "$ref": "OpenFileList",
          "description": "Open files information."
        },
        "installedApps": {
          "$ref": "GuestInstalledApplicationList",
          "description": "Installed applications information."
        },
        "services": {
          "$ref": "RunningServiceList",
          "description": "Running background services."
        },
        "processes": {
          "description": "Running processes.",
          "$ref": "RunningProcessList"
        },
        "machineName": {
          "description": "Machine name.",
          "type": "string"
        },
        "domain": {
          "type": "string",
          "description": "Domain, e.g. c.stratozone-development.internal."
        },
        "lastUptime": {
          "description": "Date since last booted (last uptime date).",
          "$ref": "Date"
        }
      },
      "type": "object"
    },
    "FileValidationReport": {
      "properties": {
        "rowErrors": {
          "description": "Partial list of rows that encountered validation error.",
          "items": {
            "$ref": "ImportRowError"
          },
          "type": "array"
        },
        "fileErrors": {
          "items": {
            "$ref": "ImportError"
          },
          "type": "array",
          "description": "List of file level errors."
        },
        "partialReport": {
          "type": "boolean",
          "description": "Flag indicating that processing was aborted due to maximum number of errors."
        },
        "fileName": {
          "description": "The name of the file.",
          "type": "string"
        }
      },
      "description": "A resource that aggregates the validation errors found in an import job file.",
      "type": "object",
      "id": "FileValidationReport"
    },
    "ReportConfig": {
      "description": "The groups and associated preference sets on which we can generate reports.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Free-text description.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The timestamp when the resource was last updated.",
          "format": "google-datetime",
          "readOnly": true
        },
        "name": {
          "description": "Output only. Name of resource.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "groupPreferencesetAssignments": {
          "type": "array",
          "description": "Required. Collection of combinations of groups and preference sets.",
          "items": {
            "$ref": "ReportConfigGroupPreferenceSetAssignment"
          }
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the resource was created.",
          "format": "google-datetime"
        }
      },
      "id": "ReportConfig"
    },
    "AggregationResultCount": {
      "type": "object",
      "id": "AggregationResultCount",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "The result of a count aggregation."
    },
    "DateTime": {
      "type": "object",
      "properties": {
        "minutes": {
          "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month."
        },
        "year": {
          "type": "integer",
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
          "format": "int32"
        },
        "timeZone": {
          "description": "Time zone.",
          "$ref": "TimeZone"
        },
        "hours": {
          "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day."
        },
        "seconds": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds."
        },
        "utcOffset": {
          "format": "google-duration",
          "type": "string",
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }."
        },
        "nanos": {
          "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
      "id": "DateTime"
    },
    "GenericPlatformDetails": {
      "description": "Generic platform details.",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field."
        }
      },
      "id": "GenericPlatformDetails"
    },
    "AggregationSum": {
      "id": "AggregationSum",
      "properties": {},
      "description": "Sum of field values.",
      "type": "object"
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "type": "object"
    },
    "ListSourcesResponse": {
      "id": "ListSourcesResponse",
      "description": "Response message for listing sources.",
      "properties": {
        "sources": {
          "items": {
            "$ref": "Source"
          },
          "type": "array",
          "description": "The list of sources."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BatchDeleteAssetsRequest": {
      "id": "BatchDeleteAssetsRequest",
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}."
        },
        "allowMissing": {
          "description": "Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`.",
          "type": "boolean"
        }
      },
      "description": "A request to delete a list of asset.",
      "type": "object"
    },
    "ReportSummaryGroupFinding": {
      "description": "Summary Findings for a specific Group.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display Name for the Group.",
          "type": "string"
        },
        "overlappingAssetCount": {
          "format": "int64",
          "type": "string",
          "deprecated": true,
          "description": "This field is deprecated, do not rely on it having a value."
        },
        "assetAggregateStats": {
          "$ref": "ReportSummaryAssetAggregateStats",
          "description": "Summary statistics for all the assets in this group."
        },
        "description": {
          "description": "Description for the Group.",
          "type": "string"
        },
        "preferenceSetFindings": {
          "items": {
            "$ref": "ReportSummaryGroupPreferenceSetFinding"
          },
          "type": "array",
          "description": "Findings for each of the PreferenceSets for this group."
        }
      },
      "id": "ReportSummaryGroupFinding"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request."
        }
      },
      "id": "ListLocationsResponse"
    },
    "VirtualMachineNetworkDetails": {
      "id": "VirtualMachineNetworkDetails",
      "description": "Details of network adapters and settings.",
      "properties": {
        "networkAdapters": {
          "$ref": "NetworkAdapterList",
          "description": "List of network adapters."
        },
        "defaultGw": {
          "type": "string",
          "description": "Default gateway address."
        },
        "primaryMacAddress": {
          "description": "MAC address of the machine. This property is used to uniqly identify the machine.",
          "type": "string"
        },
        "publicIpAddress": {
          "type": "string",
          "description": "Public IP address of the machine."
        },
        "primaryIpAddress": {
          "description": "IP address of the machine.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DailyResourceUsageAggregationDisk": {
      "type": "object",
      "description": "Statistical aggregation of disk usage.",
      "properties": {
        "iops": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Disk I/O operations per second."
        }
      },
      "id": "DailyResourceUsageAggregationDisk"
    },
    "VirtualMachineDiskDetails": {
      "properties": {
        "lsblkJson": {
          "description": "Raw lsblk output in json.",
          "type": "string"
        },
        "hddTotalFreeBytes": {
          "type": "string",
          "format": "int64",
          "description": "Total Disk Free Space."
        },
        "disks": {
          "description": "List of disks.",
          "$ref": "DiskEntryList"
        },
        "hddTotalCapacityBytes": {
          "format": "int64",
          "type": "string",
          "description": "Disk total Capacity."
        }
      },
      "type": "object",
      "id": "VirtualMachineDiskDetails",
      "description": "Details of VM disks."
    },
    "MachinePreferences": {
      "properties": {
        "allowedMachineSeries": {
          "type": "array",
          "description": "Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.",
          "items": {
            "$ref": "MachineSeries"
          }
        }
      },
      "description": "The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.",
      "type": "object",
      "id": "MachinePreferences"
    },
    "Settings": {
      "description": "Describes the Migration Center settings related to the project.",
      "properties": {
        "preferenceSet": {
          "description": "The preference set used by default for a project.",
          "type": "string"
        },
        "disableCloudLogging": {
          "description": "Disable Cloud Logging for the Migration Center API. Users are billed for the logs.",
          "type": "boolean"
        },
        "name": {
          "description": "Output only. The name of the resource.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "Settings"
    },
    "RunningServiceList": {
      "properties": {
        "services": {
          "items": {
            "$ref": "RunningService"
          },
          "description": "Running service entries.",
          "type": "array"
        }
      },
      "description": "List of running guest OS services.",
      "type": "object",
      "id": "RunningServiceList"
    },
    "ListGroupsResponse": {
      "description": "A response for listing groups.",
      "id": "ListGroupsResponse",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "groups": {
          "type": "array",
          "description": "The list of Group",
          "items": {
            "$ref": "Group"
          }
        }
      },
      "type": "object"
    },
    "ReportSummaryVMWareNodeAllocation": {
      "properties": {
        "vmwareNode": {
          "description": "VMWare node type, e.g. \"ve1-standard-72\"",
          "$ref": "ReportSummaryVMWareNode"
        },
        "allocatedAssetCount": {
          "description": "Count of assets allocated to these nodes",
          "format": "int64",
          "type": "string"
        },
        "nodeCount": {
          "description": "Count of this node type to be provisioned",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "ReportSummaryVMWareNodeAllocation",
      "type": "object",
      "description": "Represents assets allocated to a specific VMWare Node type."
    },
    "AggregationResultFrequency": {
      "type": "object",
      "description": "The result of a frequency distribution aggregation.",
      "properties": {
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "id": "AggregationResultFrequency"
    },
    "ImportRowError": {
      "id": "ImportRowError",
      "properties": {
        "vmUuid": {
          "description": "The VM UUID.",
          "type": "string"
        },
        "vmName": {
          "description": "The name of the VM in the row.",
          "type": "string"
        },
        "errors": {
          "items": {
            "$ref": "ImportError"
          },
          "description": "The list of errors detected in the row.",
          "type": "array"
        },
        "rowNumber": {
          "type": "integer",
          "format": "int32",
          "description": "The row number where the error was detected.",
          "deprecated": true
        }
      },
      "description": "A resource that reports the import job errors at row level.",
      "type": "object"
    },
    "SoleTenantNodeType": {
      "type": "object",
      "properties": {
        "nodeName": {
          "description": "Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes",
          "type": "string"
        }
      },
      "description": "A Sole Tenant node type.",
      "id": "SoleTenantNodeType"
    },
    "Operation": {
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "id": "Operation"
    },
    "GuestInstalledApplicationList": {
      "id": "GuestInstalledApplicationList",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "GuestInstalledApplication"
          },
          "description": "Application entries."
        }
      },
      "description": "Guest installed application list.",
      "type": "object"
    },
    "VirtualMachinePreferencesSizingOptimizationCustomParameters": {
      "description": "Custom data to use for sizing optimizations.",
      "id": "VirtualMachinePreferencesSizingOptimizationCustomParameters",
      "properties": {
        "cpuUsagePercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Desired percentage of CPU usage. Must be in the interval [1, 100] (or 0 for default value)."
        },
        "storageMultiplier": {
          "description": "Optional. Desired increase factor of storage, relative to currently used storage. Must be in the interval [1.0, 2.0] (or 0 for default value).",
          "format": "double",
          "type": "number"
        },
        "memoryUsagePercentage": {
          "description": "Optional. Desired percentage of memory usage. Must be in the interval [1, 100] (or 0 for default value).",
          "format": "int32",
          "type": "integer"
        },
        "aggregationMethod": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified aggregation method. Can be used for default value.",
            "Average of utilization data.",
            "Median of utilization data.",
            "95th percentile of utilization data.",
            "Peak of utilization data."
          ],
          "enum": [
            "AGGREGATION_METHOD_UNSPECIFIED",
            "AGGREGATION_METHOD_AVERAGE",
            "AGGREGATION_METHOD_MEDIAN",
            "AGGREGATION_METHOD_NINETY_FIFTH_PERCENTILE",
            "AGGREGATION_METHOD_PEAK"
          ],
          "description": "Optional. Type of statistical aggregation of a resource utilization data, on which to base the sizing metrics."
        }
      },
      "type": "object"
    },
    "TimeZone": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\"."
        },
        "version": {
          "type": "string",
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
        }
      },
      "id": "TimeZone",
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones)."
    },
    "ReportSummaryGroupPreferenceSetFinding": {
      "properties": {
        "soleTenantFinding": {
          "$ref": "ReportSummarySoleTenantFinding",
          "description": "A set of findings that applies to Stole-Tenant machines in the input."
        },
        "monthlyCostNetworkEgress": {
          "$ref": "Money",
          "description": "Network Egress monthly cost for this preference set."
        },
        "description": {
          "description": "Description for the Preference Set.",
          "type": "string"
        },
        "monthlyCostTotal": {
          "description": "Total monthly cost for this preference set.",
          "$ref": "Money"
        },
        "machinePreferences": {
          "description": "A set of preferences that applies to all machines in the context.",
          "$ref": "VirtualMachinePreferences"
        },
        "monthlyCostOther": {
          "$ref": "Money",
          "description": "Miscellaneous monthly cost for this preference set."
        },
        "monthlyCostStorage": {
          "$ref": "Money",
          "description": "Storage monthly cost for this preference set."
        },
        "machineFinding": {
          "$ref": "ReportSummaryMachineFinding",
          "description": "A set of findings that applies to all machines in the input."
        },
        "monthlyCostCompute": {
          "description": "Compute monthly cost for this preference set.",
          "$ref": "Money"
        },
        "pricingTrack": {
          "description": "Text describing the pricing track specified for this Preference Set",
          "type": "string",
          "deprecated": true
        },
        "preferredRegion": {
          "type": "string",
          "deprecated": true,
          "description": "Target region for this Preference Set"
        },
        "displayName": {
          "description": "Display Name of the Preference Set",
          "type": "string"
        },
        "monthlyCostOsLicense": {
          "$ref": "Money",
          "description": "Licensing monthly cost for this preference set."
        },
        "vmwareEngineFinding": {
          "description": "A set of findings that applies to VMWare machines in the input.",
          "$ref": "ReportSummaryVMWareEngineFinding"
        },
        "topPriority": {
          "description": "Text describing the business priority specified for this Preference Set",
          "deprecated": true,
          "type": "string"
        }
      },
      "id": "ReportSummaryGroupPreferenceSetFinding",
      "type": "object",
      "description": "Summary Findings for a specific Group/PreferenceSet combination."
    },
    "HostsEntryList": {
      "type": "object",
      "properties": {
        "entries": {
          "description": "Hosts entries.",
          "type": "array",
          "items": {
            "$ref": "HostsEntry"
          }
        }
      },
      "id": "HostsEntryList",
      "description": "Hosts content."
    },
    "NfsExport": {
      "type": "object",
      "id": "NfsExport",
      "properties": {
        "exportDirectory": {
          "type": "string",
          "description": "The directory being exported."
        },
        "hosts": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The hosts or networks to which the export is being shared."
        }
      },
      "description": "NFS export."
    },
    "AggregationResultHistogram": {
      "type": "object",
      "id": "AggregationResultHistogram",
      "description": "The result of a bucketed histogram aggregation.",
      "properties": {
        "buckets": {
          "items": {
            "$ref": "AggregationResultHistogramBucket"
          },
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "type": "array"
        }
      }
    },
    "OpenFileDetails": {
      "properties": {
        "command": {
          "type": "string",
          "description": "Opened file command."
        },
        "fileType": {
          "description": "Opened file file type.",
          "type": "string"
        },
        "user": {
          "description": "Opened file user.",
          "type": "string"
        },
        "filePath": {
          "type": "string",
          "description": "Opened file file path."
        }
      },
      "id": "OpenFileDetails",
      "description": "Open file Information.",
      "type": "object"
    },
    "Source": {
      "type": "object",
      "id": "Source",
      "description": "Source represents an object from which asset information is streamed to Migration Center.",
      "properties": {
        "errorFrameCount": {
          "format": "int32",
          "description": "Output only. The number of frames that were reported by the source and contained errors.",
          "readOnly": true,
          "type": "integer"
        },
        "displayName": {
          "description": "User-friendly display name.",
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "description": "The information confidence of the source. The higher the value, the higher the confidence.",
          "format": "int32"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The timestamp when the source was last updated.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Output only. The full name of the source.",
          "readOnly": true,
          "type": "string"
        },
        "pendingFrameCount": {
          "description": "Output only. Number of frames that are still being processed.",
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETING",
            "INVALID"
          ],
          "description": "Output only. The state of the source.",
          "enumDescriptions": [
            "Unspecified.",
            "The source is active and ready to be used.",
            "In the process of being deleted.",
            "Source is in an invalid state. Asset frames reported to it will be ignored."
          ],
          "type": "string",
          "readOnly": true
        },
        "isManaged": {
          "type": "boolean",
          "description": "If `true`, the source is managed by other service(s)."
        },
        "type": {
          "type": "string",
          "description": "Data source type.",
          "enum": [
            "SOURCE_TYPE_UNKNOWN",
            "SOURCE_TYPE_UPLOAD",
            "SOURCE_TYPE_GUEST_OS_SCAN",
            "SOURCE_TYPE_INVENTORY_SCAN",
            "SOURCE_TYPE_CUSTOM"
          ],
          "enumDescriptions": [
            "Unspecified",
            "Manually uploaded file (e.g. CSV)",
            "Guest-level info",
            "Inventory-level scan",
            "Third-party owned sources."
          ]
        },
        "createTime": {
          "description": "Output only. The timestamp when the source was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "description": "Free-text description.",
          "type": "string"
        }
      }
    },
    "RunImportJobRequest": {
      "id": "RunImportJobRequest",
      "type": "object",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "description": "A request to run an import job."
    },
    "VirtualMachinePreferences": {
      "properties": {
        "regionPreferences": {
          "description": "Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with.",
          "$ref": "RegionPreferences"
        },
        "commitmentPlan": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan.",
            "1 year commitment.",
            "3 years commitment."
          ],
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "COMMITMENT_PLAN_NONE",
            "COMMITMENT_PLAN_ONE_YEAR",
            "COMMITMENT_PLAN_THREE_YEARS"
          ],
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with."
        },
        "sizingOptimizationCustomParameters": {
          "$ref": "VirtualMachinePreferencesSizingOptimizationCustomParameters",
          "description": "Optional. Custom data to use for sizing optimizations. Relevant when SizingOptimizationStrategy is set to \"custom\"."
        },
        "targetProduct": {
          "enum": [
            "COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY"
          ],
          "description": "Target product for assets using this preference set. Specify either target product or business goal, but not both.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value).",
            "Prefer to migrate to Google Cloud Compute Engine.",
            "Prefer to migrate to Google Cloud VMware Engine.",
            "Prefer to migrate to Google Cloud Sole Tenant Nodes."
          ]
        },
        "soleTenancyPreferences": {
          "$ref": "SoleTenancyPreferences",
          "description": "Preferences concerning Sole Tenant nodes and virtual machines."
        },
        "computeEnginePreferences": {
          "description": "Compute Engine preferences concern insights and recommendations for Compute Engine target.",
          "$ref": "ComputeEnginePreferences"
        },
        "networkCostParameters": {
          "description": "Optional. Parameters that affect network cost estimations. If not set, default values will be used for the parameters.",
          "$ref": "VirtualMachinePreferencesNetworkCostParameters"
        },
        "vmwareEnginePreferences": {
          "$ref": "VmwareEnginePreferences",
          "description": "Preferences concerning insights and recommendations for Google Cloud VMware Engine."
        },
        "sizingOptimizationStrategy": {
          "description": "Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.",
          "enumDescriptions": [
            "Unspecified (default value).",
            "No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.",
            "Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.",
            "Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs.",
            "Virtual machine sizing will be determined by custom parameters. While not supported in the v1 API, this value is converted to UNSPECIFIED in conversions to the v1 API."
          ],
          "enum": [
            "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED",
            "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE",
            "SIZING_OPTIMIZATION_STRATEGY_MODERATE",
            "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE",
            "SIZING_OPTIMIZATION_STRATEGY_CUSTOM"
          ],
          "type": "string"
        }
      },
      "description": "VirtualMachinePreferences enables you to create sets of assumptions, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets.",
      "id": "VirtualMachinePreferences",
      "type": "object"
    },
    "ReportAssetFramesResponse": {
      "description": "A response to a call to `ReportAssetFrame`.",
      "properties": {},
      "type": "object",
      "id": "ReportAssetFramesResponse"
    },
    "MemoryUsageSample": {
      "description": "Memory usage sample.",
      "type": "object",
      "id": "MemoryUsageSample",
      "properties": {
        "utilizedPercentage": {
          "format": "float",
          "description": "Percentage of system memory utilized. Must be in the interval [0, 100].",
          "type": "number"
        }
      }
    },
    "ReportSummarySoleTenantFinding": {
      "description": "A set of findings that applies to assets destined for Sole-Tenant nodes.",
      "type": "object",
      "id": "ReportSummarySoleTenantFinding",
      "properties": {
        "allocatedAssetCount": {
          "description": "Count of assets which are allocated",
          "type": "string",
          "format": "int64"
        },
        "allocatedRegions": {
          "type": "array",
          "description": "Set of regions in which the assets are allocated",
          "items": {
            "type": "string"
          }
        },
        "nodeAllocations": {
          "items": {
            "$ref": "ReportSummarySoleTenantNodeAllocation"
          },
          "type": "array",
          "description": "Set of per-nodetype allocation records"
        }
      }
    },
    "ComputeStorageDescriptor": {
      "description": "Compute Engine storage option descriptor.",
      "type": "object",
      "id": "ComputeStorageDescriptor",
      "properties": {
        "sizeGb": {
          "description": "Disk size in GiB.",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string",
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ],
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ],
          "description": "Disk type backing the storage."
        }
      }
    },
    "PlatformDetails": {
      "description": "Information about the platform.",
      "id": "PlatformDetails",
      "type": "object",
      "properties": {
        "vmwareDetails": {
          "description": "VMware specific details.",
          "$ref": "VmwarePlatformDetails"
        },
        "azureVmDetails": {
          "description": "Azure VM specific details.",
          "$ref": "AzureVmPlatformDetails"
        },
        "awsEc2Details": {
          "$ref": "AwsEc2PlatformDetails",
          "description": "AWS EC2 specific details."
        },
        "physicalDetails": {
          "$ref": "PhysicalPlatformDetails",
          "description": "Physical machines platform details."
        },
        "genericDetails": {
          "description": "Generic platform details.",
          "$ref": "GenericPlatformDetails"
        }
      }
    },
    "ReportSummaryVMWareEngineFinding": {
      "id": "ReportSummaryVMWareEngineFinding",
      "properties": {
        "allocatedAssetCount": {
          "format": "int64",
          "description": "Count of assets which are allocated",
          "type": "string"
        },
        "allocatedRegions": {
          "description": "Set of regions in which the assets were allocated",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nodeAllocations": {
          "type": "array",
          "description": "Set of per-nodetype allocation records",
          "items": {
            "$ref": "ReportSummaryVMWareNodeAllocation"
          }
        }
      },
      "description": "A set of findings that applies to assets destined for VMWare Engine.",
      "type": "object"
    },
    "ImportError": {
      "type": "object",
      "id": "ImportError",
      "description": "A resource that reports the errors encountered while processing an import job.",
      "properties": {
        "errorDetails": {
          "type": "string",
          "description": "The error information."
        },
        "severity": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "The severity of the error.",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ],
          "type": "string"
        }
      }
    },
    "NetworkConnection": {
      "id": "NetworkConnection",
      "properties": {
        "localPort": {
          "description": "Local port.",
          "type": "integer",
          "format": "int32"
        },
        "remotePort": {
          "format": "int32",
          "type": "integer",
          "description": "Remote port."
        },
        "protocol": {
          "type": "string",
          "description": "Connection protocol (e.g. TCP/UDP)."
        },
        "localIpAddress": {
          "type": "string",
          "description": "Local IP address."
        },
        "processName": {
          "type": "string",
          "description": "Process or service name."
        },
        "state": {
          "type": "string",
          "description": "Connection state (e.g. CONNECTED)."
        },
        "pid": {
          "format": "int64",
          "description": "Process ID.",
          "type": "string"
        },
        "remoteIpAddress": {
          "type": "string",
          "description": "Remote IP address."
        }
      },
      "type": "object"
    },
    "MigrationInsight": {
      "properties": {
        "vmwareEngineTarget": {
          "$ref": "VmwareEngineMigrationTarget",
          "readOnly": true,
          "description": "Output only. A VMWare Engine target."
        },
        "gkeTarget": {
          "description": "Output only. A Google Kubernetes Engine target.",
          "readOnly": true,
          "$ref": "GoogleKubernetesEngineMigrationTarget"
        },
        "fit": {
          "description": "Output only. Description of how well the asset this insight is associated with fits the proposed migration.",
          "readOnly": true,
          "$ref": "FitDescriptor"
        },
        "computeEngineTarget": {
          "$ref": "ComputeEngineMigrationTarget",
          "readOnly": true,
          "description": "Output only. A Google Compute Engine target."
        }
      },
      "description": "An insight about potential migrations for an asset.",
      "type": "object",
      "id": "MigrationInsight"
    },
    "Location": {
      "id": "Location",
      "properties": {
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        }
      },
      "description": "A resource that represents a Google Cloud location.",
      "type": "object"
    },
    "VirtualMachineDetails": {
      "description": "Details of a VirtualMachine.",
      "properties": {
        "vmName": {
          "description": "Virtual Machine display name.",
          "type": "string"
        },
        "guestOs": {
          "$ref": "GuestOsDetails",
          "description": "Guest OS information."
        },
        "osVersion": {
          "description": "The version of the operating system running on the virtual machine.",
          "type": "string"
        },
        "memoryMb": {
          "type": "integer",
          "format": "int32",
          "description": "The amount of memory in the VirtualMachine. Must be non-negative."
        },
        "vmNetwork": {
          "description": "VM network details.",
          "$ref": "VirtualMachineNetworkDetails"
        },
        "vmArchitecture": {
          "description": "VM architecture details (vendor, cpu arch).",
          "$ref": "VirtualMachineArchitectureDetails"
        },
        "osFamily": {
          "enumDescriptions": [
            "",
            "Microsoft Windows Server and Desktop.",
            "Various Linux flavors.",
            "Non-Linux Unix flavors."
          ],
          "description": "What family the OS belong to, if known.",
          "type": "string",
          "enum": [
            "OS_FAMILY_UNKNOWN",
            "OS_FAMILY_WINDOWS",
            "OS_FAMILY_LINUX",
            "OS_FAMILY_UNIX"
          ]
        },
        "platform": {
          "description": "Platform information.",
          "$ref": "PlatformDetails"
        },
        "vcenterFolder": {
          "type": "string",
          "description": "Folder name in vCenter where asset resides."
        },
        "vmUuid": {
          "type": "string",
          "description": "Virtual Machine unique identifier."
        },
        "coreCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of CPU cores in the VirtualMachine. Must be non-negative."
        },
        "vcenterVmId": {
          "type": "string",
          "description": "vCenter VM ID."
        },
        "vcenterUrl": {
          "type": "string",
          "description": "vCenter URL used in collection."
        },
        "osName": {
          "description": "The name of the operating system running on the VirtualMachine.",
          "type": "string"
        },
        "powerState": {
          "type": "string",
          "description": "Power state of VM (poweredOn or poweredOff)."
        },
        "vmDisks": {
          "description": "VM disk details.",
          "$ref": "VirtualMachineDiskDetails"
        },
        "createTime": {
          "type": "string",
          "description": "VM creation timestamp.",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "VirtualMachineDetails"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "revision": "20230918"
}

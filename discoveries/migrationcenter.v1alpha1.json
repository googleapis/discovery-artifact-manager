{
  "mtlsRootUrl": "https://migrationcenter.mtls.googleapis.com/",
  "servicePath": "",
  "version_module": true,
  "description": "A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.",
  "id": "migrationcenter:v1alpha1",
  "documentationLink": "https://cloud.google.com/migration-center",
  "discoveryVersion": "v1",
  "ownerDomain": "google.com",
  "version": "v1alpha1",
  "protocol": "rest",
  "name": "migrationcenter",
  "baseUrl": "https://migrationcenter.googleapis.com/",
  "title": "Migration Center API",
  "basePath": "",
  "batchPath": "batch",
  "ownerName": "Google",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "schemas": {
    "HostsEntryList": {
      "type": "object",
      "description": "Hosts content.",
      "id": "HostsEntryList",
      "properties": {
        "entries": {
          "description": "Hosts entries.",
          "type": "array",
          "items": {
            "$ref": "HostsEntry"
          }
        }
      }
    },
    "ListErrorFramesResponse": {
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "errorFrames": {
          "items": {
            "$ref": "ErrorFrame"
          },
          "description": "The list of error frames.",
          "type": "array"
        }
      },
      "description": "A response for listing error frames.",
      "id": "ListErrorFramesResponse",
      "type": "object"
    },
    "ReportSummaryHistogramChartData": {
      "id": "ReportSummaryHistogramChartData",
      "properties": {
        "buckets": {
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "items": {
            "$ref": "ReportSummaryHistogramChartDataBucket"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket."
    },
    "ListGroupsResponse": {
      "type": "object",
      "description": "A response for listing groups.",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "groups": {
          "items": {
            "$ref": "Group"
          },
          "type": "array",
          "description": "The list of Group"
        }
      },
      "id": "ListGroupsResponse"
    },
    "VirtualMachineNetworkDetails": {
      "id": "VirtualMachineNetworkDetails",
      "type": "object",
      "description": "Details of network adapters and settings.",
      "properties": {
        "networkAdapters": {
          "description": "List of network adapters.",
          "$ref": "NetworkAdapterList"
        },
        "defaultGw": {
          "type": "string",
          "description": "Default gateway address."
        },
        "publicIpAddress": {
          "type": "string",
          "description": "Public IP address of the machine."
        },
        "primaryIpAddress": {
          "type": "string",
          "description": "IP address of the machine."
        },
        "primaryMacAddress": {
          "type": "string",
          "description": "MAC address of the machine. This property is used to uniqly identify the machine."
        }
      }
    },
    "ReportConfigGroupPreferenceSetAssignment": {
      "description": "Represents a combination of a group with a preference set.",
      "id": "ReportConfigGroupPreferenceSetAssignment",
      "properties": {
        "group": {
          "type": "string",
          "description": "Required. Name of the group."
        },
        "preferenceSet": {
          "description": "Required. Name of the Preference Set.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeZone": {
      "id": "TimeZone",
      "properties": {
        "id": {
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
        }
      },
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "type": "object"
    },
    "BiosDetails": {
      "id": "BiosDetails",
      "properties": {
        "biosManufacturer": {
          "description": "BIOS manufacturer.",
          "type": "string"
        },
        "biosVersion": {
          "description": "BIOS version.",
          "type": "string"
        },
        "biosName": {
          "type": "string",
          "description": "BIOS name."
        },
        "biosReleaseDate": {
          "description": "BIOS release date.",
          "type": "string"
        },
        "smbiosUuid": {
          "type": "string",
          "description": "SMBIOS UUID."
        }
      },
      "type": "object",
      "description": "Details about the BIOS."
    },
    "BatchUpdateAssetsResponse": {
      "id": "BatchUpdateAssetsResponse",
      "properties": {
        "assets": {
          "items": {
            "$ref": "Asset"
          },
          "description": "Update asset content. The content only includes values after field mask being applied.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response for updating a list of assets."
    },
    "ReportSummaryVMWareEngineFinding": {
      "id": "ReportSummaryVMWareEngineFinding",
      "type": "object",
      "description": "A set of findings that applies to assets destined for VMWare Engine.",
      "properties": {
        "allocatedAssetCount": {
          "description": "Count of assets which are allocated",
          "type": "string",
          "format": "int64"
        },
        "nodeAllocations": {
          "type": "array",
          "description": "Set of per-nodetype allocation records",
          "items": {
            "$ref": "ReportSummaryVMWareNodeAllocation"
          }
        },
        "allocatedRegions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Set of regions in which the assets were allocated"
        }
      }
    },
    "ReportSummarySoleTenantFinding": {
      "properties": {
        "allocatedAssetCount": {
          "type": "string",
          "description": "Count of assets which are allocated",
          "format": "int64"
        },
        "nodeAllocations": {
          "description": "Set of per-nodetype allocation records",
          "items": {
            "$ref": "ReportSummarySoleTenantNodeAllocation"
          },
          "type": "array"
        },
        "allocatedRegions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Set of regions in which the assets are allocated"
        }
      },
      "type": "object",
      "id": "ReportSummarySoleTenantFinding",
      "description": "A set of findings that applies to assets destined for Sole-Tenant nodes."
    },
    "CpuUsageSample": {
      "properties": {
        "utilizedPercentage": {
          "description": "Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.",
          "format": "float",
          "type": "number"
        }
      },
      "description": "CPU usage sample.",
      "type": "object",
      "id": "CpuUsageSample"
    },
    "OperationMetadata": {
      "properties": {
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "verb": {
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "requestedCancellation": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "statusMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "apiVersion": {
          "type": "string",
          "description": "Output only. API version used to start the operation.",
          "readOnly": true
        },
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation finished running."
        }
      },
      "id": "OperationMetadata",
      "type": "object",
      "description": "Represents the metadata of the long-running operation."
    },
    "ImportRowError": {
      "description": "A resource that reports the import job errors at row level.",
      "type": "object",
      "id": "ImportRowError",
      "properties": {
        "errors": {
          "items": {
            "$ref": "ImportError"
          },
          "description": "The list of errors detected in the row.",
          "type": "array"
        },
        "rowNumber": {
          "type": "integer",
          "description": "The row number where the error was detected.",
          "deprecated": true,
          "format": "int32"
        },
        "vmName": {
          "description": "The name of the VM in the row.",
          "type": "string"
        },
        "vmUuid": {
          "type": "string",
          "description": "The VM UUID."
        }
      }
    },
    "MigrationInsight": {
      "id": "MigrationInsight",
      "type": "object",
      "description": "An insight about potential migrations for an asset.",
      "properties": {
        "computeEngineTarget": {
          "description": "Output only. A Google Compute Engine target.",
          "$ref": "ComputeEngineMigrationTarget",
          "readOnly": true
        },
        "fit": {
          "readOnly": true,
          "description": "Output only. Description of how well the asset this insight is associated with fits the proposed migration.",
          "$ref": "FitDescriptor"
        },
        "vmwareEngineTarget": {
          "readOnly": true,
          "$ref": "VmwareEngineMigrationTarget",
          "description": "Output only. A VMWare Engine target."
        },
        "gkeTarget": {
          "description": "Output only. A Google Kubernetes Engine target.",
          "readOnly": true,
          "$ref": "GoogleKubernetesEngineMigrationTarget"
        }
      }
    },
    "ListSourcesResponse": {
      "properties": {
        "sources": {
          "items": {
            "$ref": "Source"
          },
          "description": "The list of sources.",
          "type": "array"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      },
      "id": "ListSourcesResponse",
      "type": "object",
      "description": "Response message for listing sources."
    },
    "MachinePreferences": {
      "type": "object",
      "properties": {
        "allowedMachineSeries": {
          "description": "Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.",
          "items": {
            "$ref": "MachineSeries"
          },
          "type": "array"
        }
      },
      "description": "The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.",
      "id": "MachinePreferences"
    },
    "Money": {
      "type": "object",
      "description": "Represents an amount of money with its currency type.",
      "properties": {
        "currencyCode": {
          "type": "string",
          "description": "The three-letter currency code defined in ISO 4217."
        },
        "units": {
          "type": "string",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "format": "int64"
        },
        "nanos": {
          "format": "int32",
          "type": "integer",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        }
      },
      "id": "Money"
    },
    "SoleTenantNodeType": {
      "id": "SoleTenantNodeType",
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes"
        }
      },
      "description": "A Sole Tenant node type.",
      "type": "object"
    },
    "Operation": {
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation"
    },
    "GenericPlatformDetails": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field."
        }
      },
      "description": "Generic platform details.",
      "id": "GenericPlatformDetails",
      "type": "object"
    },
    "ListImportDataFilesResponse": {
      "description": "Response for listing payload files of an import job.",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "importDataFiles": {
          "description": "The list of import data files.",
          "items": {
            "$ref": "ImportDataFile"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "type": "object",
      "id": "ListImportDataFilesResponse"
    },
    "AggregationResultHistogramBucket": {
      "type": "object",
      "properties": {
        "lowerBound": {
          "format": "double",
          "description": "Lower bound - inclusive.",
          "type": "number"
        },
        "upperBound": {
          "format": "double",
          "type": "number",
          "description": "Upper bound - exclusive."
        },
        "count": {
          "format": "int64",
          "description": "Count of items in the bucket.",
          "type": "string"
        }
      },
      "id": "AggregationResultHistogramBucket",
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity."
    },
    "Asset": {
      "id": "Asset",
      "type": "object",
      "properties": {
        "insightList": {
          "$ref": "InsightList",
          "readOnly": true,
          "description": "Output only. The list of insights associated with the asset."
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "performanceData": {
          "readOnly": true,
          "description": "Output only. Performance data for the asset.",
          "$ref": "AssetPerformanceData"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The timestamp when the asset was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The timestamp when the asset was last updated.",
          "readOnly": true,
          "type": "string"
        },
        "assignedGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. The list of groups that the asset is assigned to.",
          "readOnly": true
        },
        "name": {
          "description": "Output only. The full name of the asset.",
          "readOnly": true,
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Generic asset attributes."
        },
        "virtualMachineDetails": {
          "$ref": "VirtualMachineDetails",
          "readOnly": true,
          "description": "Output only. Asset information specific for virtual machines."
        },
        "sources": {
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "Output only. The list of sources contributing to the asset.",
          "type": "array"
        }
      },
      "description": "An asset represents a resource in your environment. Asset types include virtual machines and databases."
    },
    "AggregationSum": {
      "type": "object",
      "id": "AggregationSum",
      "description": "Sum of field values.",
      "properties": {}
    },
    "VirtualMachineDetails": {
      "properties": {
        "memoryMb": {
          "type": "integer",
          "description": "The amount of memory in the VirtualMachine. Must be non-negative.",
          "format": "int32"
        },
        "vcenterFolder": {
          "type": "string",
          "description": "Folder name in vCenter where asset resides."
        },
        "platform": {
          "$ref": "PlatformDetails",
          "description": "Platform information."
        },
        "osVersion": {
          "description": "The version of the operating system running on the virtual machine.",
          "type": "string"
        },
        "vcenterVmId": {
          "type": "string",
          "description": "vCenter VM ID."
        },
        "osName": {
          "description": "The name of the operating system running on the VirtualMachine.",
          "type": "string"
        },
        "powerState": {
          "type": "string",
          "description": "Power state of VM (poweredOn or poweredOff)."
        },
        "vmDisks": {
          "description": "VM disk details.",
          "$ref": "VirtualMachineDiskDetails"
        },
        "vmNetwork": {
          "$ref": "VirtualMachineNetworkDetails",
          "description": "VM network details."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "VM creation timestamp.",
          "type": "string"
        },
        "vmUuid": {
          "type": "string",
          "description": "Virtual Machine unique identifier."
        },
        "vmArchitecture": {
          "$ref": "VirtualMachineArchitectureDetails",
          "description": "VM architecture details (vendor, cpu arch)."
        },
        "osFamily": {
          "enum": [
            "OS_FAMILY_UNKNOWN",
            "OS_FAMILY_WINDOWS",
            "OS_FAMILY_LINUX",
            "OS_FAMILY_UNIX"
          ],
          "enumDescriptions": [
            "",
            "Microsoft Windows Server and Desktop.",
            "Various Linux flavors.",
            "Non-Linux Unix flavors."
          ],
          "type": "string",
          "description": "What family the OS belong to, if known."
        },
        "coreCount": {
          "description": "Number of CPU cores in the VirtualMachine. Must be non-negative.",
          "format": "int32",
          "type": "integer"
        },
        "vcenterUrl": {
          "type": "string",
          "description": "vCenter URL used in collection."
        },
        "vmName": {
          "description": "Virtual Machine display name.",
          "type": "string"
        },
        "guestOs": {
          "description": "Guest OS information.",
          "$ref": "GuestOsDetails"
        }
      },
      "id": "VirtualMachineDetails",
      "type": "object",
      "description": "Details of a VirtualMachine."
    },
    "SoleTenancyPreferences": {
      "properties": {
        "hostMaintenancePolicy": {
          "type": "string",
          "enum": [
            "HOST_MAINTENANCE_POLICY_UNSPECIFIED",
            "HOST_MAINTENANCE_POLICY_DEFAULT",
            "HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE",
            "HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP"
          ],
          "enumDescriptions": [
            "Unspecified host maintenance policy.",
            "Default host maintenance policy.",
            "Restart in place host maintenance policy.",
            "Migrate within node group host maintenance policy."
          ],
          "description": "Sole Tenancy nodes maintenance policy."
        },
        "nodeTypes": {
          "items": {
            "$ref": "SoleTenantNodeType"
          },
          "description": "A list of sole tenant node types. An empty list means that all possible node types will be considered.",
          "type": "array"
        },
        "cpuOvercommitRatio": {
          "type": "number",
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.",
          "format": "double"
        },
        "commitmentPlan": {
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR",
            "COMMITMENT_3_YEAR"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment.",
            "3 years commitment."
          ]
        }
      },
      "description": "Preferences concerning Sole Tenancy nodes and VMs.",
      "type": "object",
      "id": "SoleTenancyPreferences"
    },
    "FileValidationReport": {
      "description": "A resource that aggregates the validation errors found in an import job file.",
      "type": "object",
      "properties": {
        "fileErrors": {
          "description": "List of file level errors.",
          "items": {
            "$ref": "ImportError"
          },
          "type": "array"
        },
        "fileName": {
          "description": "The name of the file.",
          "type": "string"
        },
        "rowErrors": {
          "items": {
            "$ref": "ImportRowError"
          },
          "description": "Partial list of rows that encountered validation error.",
          "type": "array"
        },
        "partialReport": {
          "description": "Flag indicating that processing was aborted due to maximum number of errors.",
          "type": "boolean"
        }
      },
      "id": "FileValidationReport"
    },
    "ValidateImportJobRequest": {
      "type": "object",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "id": "ValidateImportJobRequest",
      "description": "A request to validate an import job."
    },
    "ImportJob": {
      "id": "ImportJob",
      "type": "object",
      "properties": {
        "completeTime": {
          "description": "Output only. The timestamp when the import job was completed.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "gcsPayload": {
          "$ref": "GCSPayloadInfo",
          "description": "The payload is in Google Cloud Storage.",
          "deprecated": true
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The timestamp when the import job was created.",
          "type": "string",
          "readOnly": true
        },
        "executionReport": {
          "readOnly": true,
          "$ref": "ExecutionReport",
          "description": "Output only. The report with the results of running the import job."
        },
        "name": {
          "description": "Output only. The full name of the import job.",
          "type": "string",
          "readOnly": true
        },
        "validationReport": {
          "description": "Output only. The report with the validation results of the import job.",
          "$ref": "ValidationReport",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "The import job is pending.",
            "The processing of the import job is ongoing.",
            "The import job processing has completed.",
            "The import job failed to be processed.",
            "The import job is being validated.",
            "The import job contains blocking errors.",
            "The validation of the job completed with no blocking errors."
          ],
          "description": "Output only. The state of the import job.",
          "enum": [
            "IMPORT_JOB_STATE_UNSPECIFIED",
            "IMPORT_JOB_STATE_PENDING",
            "IMPORT_JOB_STATE_RUNNING",
            "IMPORT_JOB_STATE_COMPLETED",
            "IMPORT_JOB_STATE_FAILED",
            "IMPORT_JOB_STATE_VALIDATING",
            "IMPORT_JOB_STATE_FAILED_VALIDATION",
            "IMPORT_JOB_STATE_READY"
          ]
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the import job was last updated."
        },
        "assetSource": {
          "description": "Required. Reference to a source.",
          "type": "string"
        },
        "inlinePayload": {
          "description": "The payload is included in the request, mainly used for small import jobs.",
          "$ref": "InlinePayloadInfo"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        }
      },
      "description": "A resource that represents the background job that imports asset frames."
    },
    "PreferenceSet": {
      "id": "PreferenceSet",
      "description": "The preferences that apply to all assets in a given context.",
      "type": "object",
      "properties": {
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The timestamp when the preference set was last updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "virtualMachinePreferences": {
          "$ref": "VirtualMachinePreferences",
          "description": "A set of preferences that applies to all virtual machines in the context."
        },
        "description": {
          "type": "string",
          "description": "A description of the preference set."
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the preference set was created."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the preference set."
        }
      }
    },
    "VmwareDiskConfig": {
      "properties": {
        "backingType": {
          "enum": [
            "BACKING_TYPE_UNSPECIFIED",
            "BACKING_TYPE_FLAT_V1",
            "BACKING_TYPE_FLAT_V2",
            "BACKING_TYPE_PMEM",
            "BACKING_TYPE_RDM_V1",
            "BACKING_TYPE_RDM_V2",
            "BACKING_TYPE_SESPARSE",
            "BACKING_TYPE_SESPARSE_V1",
            "BACKING_TYPE_SESPARSE_V2"
          ],
          "description": "VMDK backing type.",
          "enumDescriptions": [
            "Default value.",
            "Flat v1.",
            "Flat v2.",
            "Persistent memory, also known as Non-Volatile Memory (NVM).",
            "Raw Disk Memory v1.",
            "Raw Disk Memory v2.",
            "SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.",
            "SEsparse v1.",
            "SEsparse v1."
          ],
          "type": "string"
        },
        "rdmCompatibilityMode": {
          "description": "RDM compatibility mode.",
          "type": "string"
        },
        "shared": {
          "type": "boolean",
          "description": "Is VMDK shared with other VMs."
        },
        "vmdkDiskMode": {
          "description": "VMDK disk mode.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "VMware disk config details.",
      "id": "VmwareDiskConfig"
    },
    "DiskPartition": {
      "id": "DiskPartition",
      "type": "object",
      "description": "Disk Partition details.",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Partition UUID."
        },
        "subPartitions": {
          "description": "Sub-partitions.",
          "$ref": "DiskPartitionList"
        },
        "mountPoint": {
          "description": "Mount pount (Linux/Windows) or drive letter (Windows).",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Partition type (e.g. BIOS boot)."
        },
        "capacityBytes": {
          "description": "Partition capacity.",
          "type": "string",
          "format": "int64"
        },
        "fileSystem": {
          "type": "string",
          "description": "Partition file system."
        },
        "freeBytes": {
          "format": "int64",
          "type": "string",
          "description": "Partition free space."
        }
      }
    },
    "RunningProcessList": {
      "description": "List of running guest OS processes.",
      "type": "object",
      "properties": {
        "processes": {
          "items": {
            "$ref": "RunningProcess"
          },
          "type": "array",
          "description": "Running process entries."
        }
      },
      "id": "RunningProcessList"
    },
    "ListPreferenceSetsResponse": {
      "id": "ListPreferenceSetsResponse",
      "type": "object",
      "description": "Response message for listing preference sets.",
      "properties": {
        "preferenceSets": {
          "type": "array",
          "description": "The list of PreferenceSets",
          "items": {
            "$ref": "PreferenceSet"
          }
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      }
    },
    "HostsEntry": {
      "description": "Single /etc/hosts entry.",
      "id": "HostsEntry",
      "properties": {
        "hostNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of host names / aliases."
        },
        "ip": {
          "description": "IP (raw, IPv4/6 agnostic).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Report": {
      "description": "Report represents a point-in-time rendering of the ReportConfig results.",
      "id": "Report",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Default Report type.",
            "Total cost of ownership Report type."
          ],
          "description": "Report type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "TOTAL_COST_OF_OWNERSHIP"
          ]
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "SUCCEEDED",
            "FAILED"
          ],
          "type": "string",
          "description": "Report creation state.",
          "enumDescriptions": [
            "Default Report creation state.",
            "Creating Report.",
            "Successfully created Report.",
            "Failed to create Report."
          ]
        },
        "summary": {
          "readOnly": true,
          "description": "Output only. Summary view of the Report.",
          "$ref": "ReportSummary"
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. Last update timestamp.",
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. Creation timestamp.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "description": "Output only. Name of resource.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        }
      }
    },
    "FstabEntry": {
      "description": "Single fstab entry.",
      "properties": {
        "file": {
          "type": "string",
          "description": "The mount point for the filesystem."
        },
        "vfstype": {
          "type": "string",
          "description": "The type of the filesystem."
        },
        "freq": {
          "type": "integer",
          "description": "Used by dump to determine which filesystems need to be dumped.",
          "format": "int32"
        },
        "passno": {
          "description": "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.",
          "type": "integer",
          "format": "int32"
        },
        "spec": {
          "type": "string",
          "description": "The block special device or remote filesystem to be mounted."
        },
        "mntops": {
          "type": "string",
          "description": "Mount options associated with the filesystem."
        }
      },
      "id": "FstabEntry",
      "type": "object"
    },
    "VirtualMachineDiskDetails": {
      "id": "VirtualMachineDiskDetails",
      "type": "object",
      "properties": {
        "hddTotalFreeBytes": {
          "description": "Total Disk Free Space.",
          "format": "int64",
          "type": "string"
        },
        "lsblkJson": {
          "type": "string",
          "description": "Raw lsblk output in json."
        },
        "hddTotalCapacityBytes": {
          "type": "string",
          "format": "int64",
          "description": "Disk total Capacity."
        },
        "disks": {
          "description": "List of disks.",
          "$ref": "DiskEntryList"
        }
      },
      "description": "Details of VM disks."
    },
    "RuntimeNetworkInfo": {
      "properties": {
        "netstat": {
          "description": "Netstat (raw, OS-agnostic).",
          "type": "string"
        },
        "connections": {
          "description": "Network connections.",
          "$ref": "NetworkConnectionList"
        },
        "netstatTime": {
          "description": "Netstat time collected.",
          "$ref": "DateTime"
        }
      },
      "id": "RuntimeNetworkInfo",
      "description": "Runtime networking information.",
      "type": "object"
    },
    "AggregationResultFrequency": {
      "id": "AggregationResultFrequency",
      "type": "object",
      "description": "The result of a frequency distribution aggregation.",
      "properties": {
        "values": {
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "type": "object"
        }
      }
    },
    "DiskUsageSample": {
      "id": "DiskUsageSample",
      "type": "object",
      "description": "Disk usage sample. Values are across all disks.",
      "properties": {
        "averageIops": {
          "type": "number",
          "format": "float",
          "description": "Average IOPS sampled over a short window. Must be non-negative."
        }
      }
    },
    "AggregateAssetsValuesResponse": {
      "description": "A response to a request to aggregated assets values.",
      "properties": {
        "results": {
          "description": "The aggregation results.",
          "items": {
            "$ref": "AggregationResult"
          },
          "type": "array"
        }
      },
      "id": "AggregateAssetsValuesResponse",
      "type": "object"
    },
    "DailyResourceUsageAggregationCPU": {
      "id": "DailyResourceUsageAggregationCPU",
      "description": "Statistical aggregation of CPU usage.",
      "properties": {
        "utilizationPercentage": {
          "description": "CPU utilization percentage.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "type": "object"
    },
    "ComputeStorageDescriptor": {
      "description": "Compute Engine storage option descriptor.",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ],
          "description": "Disk type backing the storage.",
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ],
          "type": "string"
        },
        "sizeGb": {
          "type": "integer",
          "format": "int32",
          "description": "Disk size in GiB."
        }
      },
      "id": "ComputeStorageDescriptor",
      "type": "object"
    },
    "ValidationReport": {
      "id": "ValidationReport",
      "properties": {
        "jobErrors": {
          "type": "array",
          "items": {
            "$ref": "ImportError"
          },
          "description": "List of job level errors."
        },
        "fileValidations": {
          "type": "array",
          "description": "List of errors found in files.",
          "items": {
            "$ref": "FileValidationReport"
          }
        }
      },
      "type": "object",
      "description": "A resource that aggregates errors across import job files."
    },
    "DiskEntry": {
      "id": "DiskEntry",
      "type": "object",
      "description": "Single disk entry.",
      "properties": {
        "totalFreeBytes": {
          "type": "string",
          "format": "int64",
          "description": "Disk free space."
        },
        "diskLabel": {
          "description": "Disk label.",
          "type": "string"
        },
        "interfaceType": {
          "type": "string",
          "description": "Disks interface type (e.g. SATA/SCSI)"
        },
        "totalCapacityBytes": {
          "description": "Disk capacity.",
          "type": "string",
          "format": "int64"
        },
        "status": {
          "description": "Disk status (e.g. online).",
          "type": "string"
        },
        "vmwareConfig": {
          "$ref": "VmwareDiskConfig",
          "description": "VMware disk details."
        },
        "partitions": {
          "description": "Partition layout.",
          "$ref": "DiskPartitionList"
        },
        "hwAddress": {
          "description": "Disk hardware address (e.g. 0:1 for SCSI).",
          "type": "string"
        },
        "diskLabelType": {
          "type": "string",
          "description": "Disk label type (e.g. BIOS/GPT)"
        }
      }
    },
    "BatchUpdateAssetsRequest": {
      "description": "A request to update a list of assets.",
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "description": "Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.",
          "items": {
            "$ref": "UpdateAssetRequest"
          }
        }
      },
      "id": "BatchUpdateAssetsRequest"
    },
    "NetworkAddress": {
      "type": "object",
      "id": "NetworkAddress",
      "properties": {
        "subnetMask": {
          "type": "string",
          "description": "Subnet mask."
        },
        "assignment": {
          "enumDescriptions": [
            "Unknown (default value).",
            "Staticly assigned IP.",
            "Dynamically assigned IP (DHCP)."
          ],
          "description": "Whether DHCP is used to assign addresses.",
          "type": "string",
          "enum": [
            "ADDRESS_ASSIGNMENT_UNSPECIFIED",
            "ADDRESS_ASSIGNMENT_STATIC",
            "ADDRESS_ASSIGNMENT_DHCP"
          ]
        },
        "fqdn": {
          "type": "string",
          "description": "Fully qualified domain name."
        },
        "bcast": {
          "type": "string",
          "description": "Broadcast address."
        },
        "ipAddress": {
          "type": "string",
          "description": "Assigned or configured IP Address."
        }
      },
      "description": "Details of network address."
    },
    "VmwareEnginePreferences": {
      "properties": {
        "cpuOvercommitRatio": {
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment.",
          "type": "number",
          "format": "double"
        },
        "commitmentPlan": {
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment (monthly payments).",
            "3 year commitment (monthly payments).",
            "1 year commitment (upfront payment).",
            "3 years commitment (upfront payment)."
          ],
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_3_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_1_YEAR_UPFRONT_PAYMENT",
            "COMMITMENT_3_YEAR_UPFRONT_PAYMENT"
          ],
          "type": "string"
        },
        "memoryOvercommitRatio": {
          "type": "number",
          "format": "double",
          "description": "Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0."
        },
        "storageDeduplicationCompressionRatio": {
          "description": "The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.",
          "type": "number",
          "format": "double"
        }
      },
      "type": "object",
      "id": "VmwareEnginePreferences",
      "description": "The user preferences relating to Google Cloud VMware Engine target platform."
    },
    "AggregationResultCount": {
      "id": "AggregationResultCount",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "The result of a count aggregation."
    },
    "AggregationResultHistogram": {
      "properties": {
        "buckets": {
          "items": {
            "$ref": "AggregationResultHistogramBucket"
          },
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "type": "array"
        }
      },
      "id": "AggregationResultHistogram",
      "type": "object",
      "description": "The result of a bucketed histogram aggregation."
    },
    "MemoryUsageSample": {
      "id": "MemoryUsageSample",
      "type": "object",
      "properties": {
        "utilizedPercentage": {
          "type": "number",
          "format": "float",
          "description": "Percentage of system memory utilized. Must be in the interval [0, 100]."
        }
      },
      "description": "Memory usage sample."
    },
    "UploadFileInfo": {
      "id": "UploadFileInfo",
      "properties": {
        "signedUri": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Upload URI for the file."
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Output only. The headers that were used to sign the URL."
        },
        "uriExpirationTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Expiration time of the upload URI.",
          "readOnly": true
        }
      },
      "description": "A resource that contains a URI to which a data file can be uploaded.",
      "type": "object"
    },
    "VmwarePlatformDetails": {
      "properties": {
        "osid": {
          "type": "string",
          "description": "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html."
        },
        "esxVersion": {
          "description": "ESX version.",
          "type": "string"
        },
        "vcenterVersion": {
          "description": "vCenter version.",
          "type": "string"
        }
      },
      "description": "VMware specific details.",
      "type": "object",
      "id": "VmwarePlatformDetails"
    },
    "ReportSummaryVMWareNodeAllocation": {
      "type": "object",
      "id": "ReportSummaryVMWareNodeAllocation",
      "description": "Represents assets allocated to a specific VMWare Node type.",
      "properties": {
        "nodeCount": {
          "type": "string",
          "description": "Count of this node type to be provisioned",
          "format": "int64"
        },
        "vmwareNode": {
          "description": "VMWare node type, e.g. \"ve1-standard-72\"",
          "$ref": "ReportSummaryVMWareNode"
        },
        "allocatedAssetCount": {
          "description": "Count of assets allocated to these nodes",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "AggregationCount": {
      "id": "AggregationCount",
      "description": "Object count.",
      "type": "object",
      "properties": {}
    },
    "NetworkAddressList": {
      "type": "object",
      "description": "List of allocated/assigned network addresses.",
      "properties": {
        "addresses": {
          "items": {
            "$ref": "NetworkAddress"
          },
          "type": "array",
          "description": "Network address entries."
        }
      },
      "id": "NetworkAddressList"
    },
    "DailyResourceUsageAggregationMemory": {
      "id": "DailyResourceUsageAggregationMemory",
      "description": "Statistical aggregation of memory usage.",
      "properties": {
        "utilizationPercentage": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Memory utilization percentage."
        }
      },
      "type": "object"
    },
    "Date": {
      "type": "object",
      "id": "Date",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "properties": {
        "day": {
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer"
        },
        "year": {
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "format": "int32",
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
        }
      }
    },
    "ImportDataFile": {
      "properties": {
        "state": {
          "description": "Output only. The state of the import data file.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "The data file is being created.",
            "The data file completed initialization."
          ]
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the file."
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "uploadFileInfo": {
          "description": "Information about a file that is uploaded to a storage service.",
          "$ref": "UploadFileInfo"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the file was created.",
          "type": "string"
        },
        "format": {
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ],
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "description": "Required. The payload format."
        }
      },
      "description": "A resource that represents a payload file in an import job.",
      "type": "object",
      "id": "ImportDataFile"
    },
    "ListReportConfigsResponse": {
      "properties": {
        "reportConfigs": {
          "description": "A list of report configs.",
          "type": "array",
          "items": {
            "$ref": "ReportConfig"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Response message for listing report configs.",
      "id": "ListReportConfigsResponse",
      "type": "object"
    },
    "ReportSummaryChartDataDataPoint": {
      "id": "ReportSummaryChartDataDataPoint",
      "description": "Describes a single data point in the Chart.",
      "properties": {
        "value": {
          "format": "double",
          "description": "The Y-axis value for this data point.",
          "type": "number"
        },
        "label": {
          "description": "The X-axis label for this data point.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VmwareEngineMigrationTarget": {
      "description": "VMWare engine migration target.",
      "properties": {},
      "type": "object",
      "id": "VmwareEngineMigrationTarget"
    },
    "ExecutionReport": {
      "properties": {
        "framesReported": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of asset frames reported for the import job."
        },
        "executionErrors": {
          "description": "Validation errors encountered during the execution of the import job.",
          "$ref": "ValidationReport"
        },
        "totalRowsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of rows in the import job."
        },
        "jobErrors": {
          "items": {
            "$ref": "ImportError"
          },
          "type": "array",
          "description": "List of job-level errors. Deprecated, use the job errors under execution_errors instead.",
          "deprecated": true
        }
      },
      "type": "object",
      "id": "ExecutionReport",
      "description": "A resource that reports result of the import job execution."
    },
    "ReportSummaryChartData": {
      "description": "Describes a collection of data points rendered as a Chart.",
      "id": "ReportSummaryChartData",
      "type": "object",
      "properties": {
        "dataPoints": {
          "description": "Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value.",
          "items": {
            "$ref": "ReportSummaryChartDataDataPoint"
          },
          "type": "array"
        }
      }
    },
    "GoogleKubernetesEngineMigrationTarget": {
      "id": "GoogleKubernetesEngineMigrationTarget",
      "description": "GKE migration target.",
      "type": "object",
      "properties": {}
    },
    "Group": {
      "description": "A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups.",
      "type": "object",
      "id": "Group",
      "properties": {
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The timestamp when the group was last updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name."
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "description": {
          "description": "The description of the resource.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the group."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the group was created.",
          "type": "string"
        }
      }
    },
    "ReportSummaryGroupFinding": {
      "id": "ReportSummaryGroupFinding",
      "type": "object",
      "description": "Summary Findings for a specific Group.",
      "properties": {
        "displayName": {
          "description": "Display Name for the Group.",
          "type": "string"
        },
        "preferenceSetFindings": {
          "type": "array",
          "items": {
            "$ref": "ReportSummaryGroupPreferenceSetFinding"
          },
          "description": "Findings for each of the PreferenceSets for this group."
        },
        "description": {
          "description": "Description for the Group.",
          "type": "string"
        },
        "overlappingAssetCount": {
          "format": "int64",
          "description": "Count of the number of assets in this group which are also included in another group within the same report.",
          "type": "string"
        },
        "assetAggregateStats": {
          "description": "Summary statistics for all the assets in this group.",
          "$ref": "ReportSummaryAssetAggregateStats"
        }
      }
    },
    "DiskPartitionList": {
      "description": "Disk partition list.",
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "DiskPartition"
          },
          "description": "Partition entries."
        }
      },
      "id": "DiskPartitionList"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "id": "Status",
      "type": "object"
    },
    "GuestInstalledApplicationList": {
      "description": "Guest installed application list.",
      "type": "object",
      "id": "GuestInstalledApplicationList",
      "properties": {
        "entries": {
          "description": "Application entries.",
          "items": {
            "$ref": "GuestInstalledApplication"
          },
          "type": "array"
        }
      }
    },
    "GuestConfigDetails": {
      "description": "Guest OS config information.",
      "type": "object",
      "properties": {
        "issue": {
          "description": "OS issue (typically /etc/issue in Linux).",
          "type": "string"
        },
        "fstab": {
          "$ref": "FstabEntryList",
          "description": "Mount list (Linux fstab)."
        },
        "selinux": {
          "description": "SELinux details.",
          "$ref": "Selinux"
        },
        "nfsExports": {
          "$ref": "NfsExportList",
          "description": "NFS exports."
        },
        "hosts": {
          "$ref": "HostsEntryList",
          "description": "Hosts file (/etc/hosts)."
        }
      },
      "id": "GuestConfigDetails"
    },
    "InlinePayloadInfo": {
      "properties": {
        "format": {
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false
          ],
          "description": "The import job format.",
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ],
          "type": "string"
        },
        "payload": {
          "type": "array",
          "description": "List of payload files.",
          "items": {
            "$ref": "PayloadFile"
          }
        }
      },
      "type": "object",
      "id": "InlinePayloadInfo",
      "description": "A resource that represents the inline import job payload."
    },
    "UpdateAssetRequest": {
      "description": "A request to update an asset.",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        },
        "asset": {
          "$ref": "Asset",
          "description": "Required. The resource being updated."
        },
        "updateMask": {
          "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "type": "object",
      "id": "UpdateAssetRequest"
    },
    "ReportSummarySoleTenantNodeAllocation": {
      "type": "object",
      "description": "Represents the assets allocated to a specific Sole-Tenant node type.",
      "id": "ReportSummarySoleTenantNodeAllocation",
      "properties": {
        "node": {
          "$ref": "SoleTenantNodeType",
          "description": "Sole Tenant node type, e.g. \"m3-node-128-3904\""
        },
        "allocatedAssetCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of assets allocated to these nodes"
        },
        "nodeCount": {
          "type": "string",
          "description": "Count of this node type to be provisioned",
          "format": "int64"
        }
      }
    },
    "ImportError": {
      "properties": {
        "errorDetails": {
          "type": "string",
          "description": "The error information."
        },
        "severity": {
          "description": "The severity of the error.",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ]
        }
      },
      "description": "A resource that reports the errors encountered while processing an import job.",
      "id": "ImportError",
      "type": "object"
    },
    "ListImportJobsResponse": {
      "id": "ListImportJobsResponse",
      "type": "object",
      "description": "A response for listing import jobs.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "importJobs": {
          "items": {
            "$ref": "ImportJob"
          },
          "type": "array",
          "description": "The list of import jobs."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "CancelOperationRequest": {
      "properties": {},
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "id": "CancelOperationRequest"
    },
    "Source": {
      "id": "Source",
      "description": "Source represents an object from which asset information is streamed to Migration Center.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The full name of the source.",
          "type": "string",
          "readOnly": true
        },
        "isManaged": {
          "description": "If `true`, the source is managed by other service(s).",
          "type": "boolean"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the source was last updated.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "pendingFrameCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Output only. Number of frames that are still being processed."
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        },
        "errorFrameCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Output only. The number of frames that were reported by the source and contained errors.",
          "format": "int32"
        },
        "type": {
          "enum": [
            "SOURCE_TYPE_UNKNOWN",
            "SOURCE_TYPE_UPLOAD",
            "SOURCE_TYPE_GUEST_OS_SCAN",
            "SOURCE_TYPE_INVENTORY_SCAN",
            "SOURCE_TYPE_CUSTOM"
          ],
          "enumDescriptions": [
            "Unspecified",
            "Manually uploaded file (e.g. CSV)",
            "Guest-level info",
            "Inventory-level scan",
            "Third-party owned sources."
          ],
          "type": "string",
          "description": "Data source type."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the source was created."
        },
        "priority": {
          "description": "The information confidence of the source. The higher the value, the higher the confidence.",
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETING",
            "INVALID"
          ],
          "description": "Output only. The state of the source.",
          "enumDescriptions": [
            "Unspecified.",
            "The source is active and ready to be used.",
            "In the process of being deleted.",
            "Source is in an invalid state. Asset frames reported to it will be ignored."
          ],
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name."
        }
      }
    },
    "AssetList": {
      "type": "object",
      "properties": {
        "assetIds": {
          "items": {
            "type": "string"
          },
          "description": "Required. A list of asset IDs",
          "type": "array"
        }
      },
      "id": "AssetList",
      "description": "Lists the asset IDs of all assets."
    },
    "DiskEntryList": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "DiskEntry"
          },
          "description": "Disk entries."
        }
      },
      "id": "DiskEntryList",
      "description": "VM disks."
    },
    "AggregationResultSum": {
      "description": "The result of a sum aggregation.",
      "properties": {
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object",
      "id": "AggregationResultSum"
    },
    "RegionPreferences": {
      "id": "RegionPreferences",
      "description": "The user preferences relating to target regions.",
      "properties": {
        "preferredRegions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions."
        }
      },
      "type": "object"
    },
    "ComputeEngineShapeDescriptor": {
      "description": "Compute Engine target shape descriptor.",
      "id": "ComputeEngineShapeDescriptor",
      "properties": {
        "machineType": {
          "description": "Compute Engine machine type.",
          "type": "string"
        },
        "series": {
          "description": "Compute Engine machine series.",
          "type": "string"
        },
        "storage": {
          "description": "Compute Engine storage. Never empty.",
          "type": "array",
          "items": {
            "$ref": "ComputeStorageDescriptor"
          }
        },
        "physicalCoreCount": {
          "description": "Number of physical cores.",
          "type": "integer",
          "format": "int32"
        },
        "logicalCoreCount": {
          "format": "int32",
          "description": "Number of logical cores.",
          "type": "integer"
        },
        "memoryMb": {
          "format": "int32",
          "description": "Memory in mebibytes.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PerformanceSample": {
      "description": "Performance data sample.",
      "type": "object",
      "id": "PerformanceSample",
      "properties": {
        "network": {
          "$ref": "NetworkUsageSample",
          "description": "Network usage sample."
        },
        "sampleTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Time the sample was collected. If omitted, the frame report time will be used."
        },
        "memory": {
          "description": "Memory usage sample.",
          "$ref": "MemoryUsageSample"
        },
        "disk": {
          "$ref": "DiskUsageSample",
          "description": "Disk usage sample."
        },
        "cpu": {
          "description": "CPU usage sample.",
          "$ref": "CpuUsageSample"
        }
      }
    },
    "ReportSummary": {
      "type": "object",
      "id": "ReportSummary",
      "properties": {
        "groupFindings": {
          "type": "array",
          "description": "Findings for each Group included in this report.",
          "items": {
            "$ref": "ReportSummaryGroupFinding"
          }
        },
        "allAssetsStats": {
          "description": "Aggregate statistics for all the assets across all the groups.",
          "$ref": "ReportSummaryAssetAggregateStats"
        }
      },
      "description": "Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report."
    },
    "GuestRuntimeDetails": {
      "properties": {
        "openFileList": {
          "$ref": "OpenFileList",
          "description": "Open files information."
        },
        "machineName": {
          "type": "string",
          "description": "Machine name."
        },
        "installedApps": {
          "$ref": "GuestInstalledApplicationList",
          "description": "Installed applications information."
        },
        "domain": {
          "type": "string",
          "description": "Domain, e.g. c.stratozone-development.internal."
        },
        "networkInfo": {
          "description": "Runtime network information (connections, ports).",
          "$ref": "RuntimeNetworkInfo"
        },
        "services": {
          "$ref": "RunningServiceList",
          "description": "Running background services."
        },
        "processes": {
          "$ref": "RunningProcessList",
          "description": "Running processes."
        },
        "lastUptime": {
          "description": "Date since last booted (last uptime date).",
          "$ref": "Date"
        }
      },
      "type": "object",
      "description": "Guest OS runtime information.",
      "id": "GuestRuntimeDetails"
    },
    "GuestInstalledApplication": {
      "description": "Guest installed application information.",
      "id": "GuestInstalledApplication",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Installed application name."
        },
        "version": {
          "type": "string",
          "description": "Installed application version."
        },
        "time": {
          "description": "Date application was installed.",
          "type": "string"
        },
        "vendor": {
          "description": "Installed application vendor.",
          "type": "string"
        },
        "path": {
          "description": "Source path.",
          "type": "string"
        }
      }
    },
    "FrameViolationEntry": {
      "id": "FrameViolationEntry",
      "description": "A resource that contains a single violation of a reported `AssetFrame` resource.",
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "description": "The field of the original frame where the violation occurred."
        },
        "violation": {
          "description": "A message describing the violation.",
          "type": "string"
        }
      }
    },
    "AssetFrame": {
      "type": "object",
      "description": "Contains data reported from an inventory source on an asset.",
      "id": "AssetFrame",
      "properties": {
        "virtualMachineDetails": {
          "description": "Asset information specific for virtual machines.",
          "$ref": "VirtualMachineDetails"
        },
        "performanceSamples": {
          "description": "Asset performance data samples. Samples that are from more than 40 days ago or after tomorrow are ignored.",
          "type": "array",
          "items": {
            "$ref": "PerformanceSample"
          }
        },
        "traceToken": {
          "type": "string",
          "description": "Optional. Trace token is optionally provided to assist with debugging and traceability."
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Generic asset attributes.",
          "type": "object"
        },
        "reportTime": {
          "description": "The time the data was reported.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AggregationResult": {
      "id": "AggregationResult",
      "properties": {
        "frequency": {
          "$ref": "AggregationResultFrequency"
        },
        "histogram": {
          "$ref": "AggregationResultHistogram"
        },
        "sum": {
          "$ref": "AggregationResultSum"
        },
        "field": {
          "type": "string"
        },
        "count": {
          "$ref": "AggregationResultCount"
        }
      },
      "description": "Message describing a result of an aggregation.",
      "type": "object"
    },
    "Empty": {
      "type": "object",
      "properties": {},
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "GuestOsDetails": {
      "description": "Information from Guest-level collections.",
      "type": "object",
      "id": "GuestOsDetails",
      "properties": {
        "runtime": {
          "$ref": "GuestRuntimeDetails",
          "description": "Runtime information."
        },
        "config": {
          "description": "OS and app configuration.",
          "$ref": "GuestConfigDetails"
        }
      }
    },
    "FitDescriptor": {
      "id": "FitDescriptor",
      "properties": {
        "fitLevel": {
          "description": "Fit level.",
          "type": "string",
          "enum": [
            "FIT_LEVEL_UNSPECIFIED",
            "FIT",
            "NO_FIT",
            "REQUIRES_EFFORT"
          ],
          "enumDescriptions": [
            "Not enough information.",
            "Fit.",
            "No Fit.",
            "Fit with effort."
          ]
        }
      },
      "description": "Describes the fit level of an asset for migration to a specific target.",
      "type": "object"
    },
    "RunningServiceList": {
      "id": "RunningServiceList",
      "description": "List of running guest OS services.",
      "properties": {
        "services": {
          "description": "Running service entries.",
          "type": "array",
          "items": {
            "$ref": "RunningService"
          }
        }
      },
      "type": "object"
    },
    "Selinux": {
      "id": "Selinux",
      "type": "object",
      "description": "SELinux details.",
      "properties": {
        "enabled": {
          "description": "Is SELinux enabled.",
          "type": "boolean"
        },
        "mode": {
          "description": "SELinux mode enforcing / permissive.",
          "type": "string"
        }
      }
    },
    "NetworkConnection": {
      "properties": {
        "remoteIpAddress": {
          "type": "string",
          "description": "Remote IP address."
        },
        "protocol": {
          "type": "string",
          "description": "Connection protocol (e.g. TCP/UDP)."
        },
        "pid": {
          "type": "string",
          "format": "int64",
          "description": "Process ID."
        },
        "localIpAddress": {
          "type": "string",
          "description": "Local IP address."
        },
        "processName": {
          "description": "Process or service name.",
          "type": "string"
        },
        "localPort": {
          "format": "int32",
          "type": "integer",
          "description": "Local port."
        },
        "state": {
          "description": "Connection state (e.g. CONNECTED).",
          "type": "string"
        },
        "remotePort": {
          "description": "Remote port.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "NetworkConnection"
    },
    "DailyResourceUsageAggregationStats": {
      "type": "object",
      "id": "DailyResourceUsageAggregationStats",
      "description": "Statistical aggregation of samples for a single resource usage.",
      "properties": {
        "peak": {
          "description": "Peak usage value.",
          "type": "number",
          "format": "float"
        },
        "ninteyFifthPercentile": {
          "format": "float",
          "type": "number",
          "description": "95th percentile usage value."
        },
        "average": {
          "description": "Average usage value.",
          "type": "number",
          "format": "float"
        },
        "median": {
          "description": "Median usage value.",
          "format": "float",
          "type": "number"
        }
      }
    },
    "InsightList": {
      "properties": {
        "updateTime": {
          "description": "Output only. Update timestamp.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "insights": {
          "type": "array",
          "items": {
            "$ref": "Insight"
          },
          "description": "Output only. Insights of the list.",
          "readOnly": true
        }
      },
      "description": "Message containing insights list.",
      "id": "InsightList",
      "type": "object"
    },
    "OpenFileDetails": {
      "id": "OpenFileDetails",
      "properties": {
        "filePath": {
          "type": "string",
          "description": "Opened file file path."
        },
        "user": {
          "description": "Opened file user.",
          "type": "string"
        },
        "fileType": {
          "description": "Opened file file type.",
          "type": "string"
        },
        "command": {
          "description": "Opened file command.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Open file Information."
    },
    "ListReportsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "reports": {
          "items": {
            "$ref": "Report"
          },
          "description": "The list of Reports.",
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ListReportsResponse",
      "description": "Response message for listing Reports."
    },
    "Insight": {
      "description": "An insight about an asset.",
      "properties": {
        "migrationInsight": {
          "description": "Output only. An insight about potential migrations for an asset.",
          "readOnly": true,
          "$ref": "MigrationInsight"
        }
      },
      "type": "object",
      "id": "Insight"
    },
    "Frames": {
      "description": "Collection of frame data.",
      "properties": {
        "framesData": {
          "type": "array",
          "items": {
            "$ref": "AssetFrame"
          },
          "description": "A repeated field of asset data."
        }
      },
      "id": "Frames",
      "type": "object"
    },
    "FstabEntryList": {
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "FstabEntry"
          },
          "description": "Fstab entries.",
          "type": "array"
        }
      },
      "description": "Fstab content.",
      "id": "FstabEntryList"
    },
    "NfsExport": {
      "properties": {
        "exportDirectory": {
          "type": "string",
          "description": "The directory being exported."
        },
        "hosts": {
          "type": "array",
          "description": "The hosts or networks to which the export is being shared.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "NfsExport",
      "description": "NFS export."
    },
    "MachineSeries": {
      "description": "A Compute Engine machine series.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series."
        }
      },
      "type": "object",
      "id": "MachineSeries"
    },
    "ListAssetsResponse": {
      "description": "Response message for listing assets.",
      "type": "object",
      "id": "ListAssetsResponse",
      "properties": {
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "assets": {
          "items": {
            "$ref": "Asset"
          },
          "type": "array",
          "description": "A list of assets."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        }
      }
    },
    "Location": {
      "type": "object",
      "id": "Location",
      "description": "A resource that represents a Google Cloud location.",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        }
      }
    },
    "AzureVmPlatformDetails": {
      "description": "Azure VM specific details.",
      "id": "AzureVmPlatformDetails",
      "properties": {
        "machineTypeLabel": {
          "description": "Azure platform's machine type label.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "The location of the machine in the Azure format."
        },
        "provisioningState": {
          "type": "string",
          "description": "Azure platform's provisioning state."
        }
      },
      "type": "object"
    },
    "VirtualMachinePreferences": {
      "properties": {
        "regionPreferences": {
          "description": "Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with.",
          "$ref": "RegionPreferences"
        },
        "sizingOptimizationStrategy": {
          "description": "Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.",
          "enumDescriptions": [
            "Unspecified (default value).",
            "No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.",
            "Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.",
            "Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs."
          ],
          "type": "string",
          "enum": [
            "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED",
            "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE",
            "SIZING_OPTIMIZATION_STRATEGY_MODERATE",
            "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE"
          ]
        },
        "soleTenancyPreferences": {
          "$ref": "SoleTenancyPreferences",
          "description": "Preferences concerning Sole Tenant nodes and virtual machines."
        },
        "vmwareEnginePreferences": {
          "description": "Preferences concerning insights and recommendations for Google Cloud VMware Engine.",
          "$ref": "VmwareEnginePreferences"
        },
        "computeEnginePreferences": {
          "$ref": "ComputeEnginePreferences",
          "description": "Compute Engine preferences concern insights and recommendations for Compute Engine target."
        },
        "commitmentPlan": {
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "COMMITMENT_PLAN_NONE",
            "COMMITMENT_PLAN_ONE_YEAR",
            "COMMITMENT_PLAN_THREE_YEARS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan.",
            "1 year commitment.",
            "3 years commitment."
          ]
        },
        "targetProduct": {
          "enum": [
            "COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY"
          ],
          "enumDescriptions": [
            "Unspecified (default value).",
            "Prefer to migrate to Google Cloud Compute Engine.",
            "Prefer to migrate to Google Cloud VMware Engine.",
            "Prefer to migrate to Google Cloud Sole Tenant Nodes."
          ],
          "description": "Target product for assets using this preference set. Specify either target product or business goal, but not both.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "VirtualMachinePreferences enables you to create sets of assumptions, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets.",
      "id": "VirtualMachinePreferences"
    },
    "ReportSummaryMachineFinding": {
      "id": "ReportSummaryMachineFinding",
      "description": "A set of findings that applies to assets of type Virtual/Physical Machine.",
      "type": "object",
      "properties": {
        "allocatedDiskTypes": {
          "type": "array",
          "description": "Set of disk types allocated to assets.",
          "items": {
            "enumDescriptions": [
              "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
              "Standard HDD Persistent Disk.",
              "Balanced Persistent Disk.",
              "SSD Persistent Disk."
            ],
            "enum": [
              "PERSISTENT_DISK_TYPE_UNSPECIFIED",
              "PERSISTENT_DISK_TYPE_STANDARD",
              "PERSISTENT_DISK_TYPE_BALANCED",
              "PERSISTENT_DISK_TYPE_SSD"
            ],
            "type": "string"
          }
        },
        "allocatedRegions": {
          "type": "array",
          "description": "Set of regions in which the assets were allocated.",
          "items": {
            "type": "string"
          }
        },
        "allocatedAssetCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of assets which were allocated."
        },
        "machineSeriesAllocations": {
          "description": "Distribution of assets based on the Machine Series.",
          "items": {
            "$ref": "ReportSummaryMachineSeriesAllocation"
          },
          "type": "array"
        }
      }
    },
    "ReportSummaryMachineSeriesAllocation": {
      "id": "ReportSummaryMachineSeriesAllocation",
      "description": "Represents a data point tracking the count of assets allocated for a specific Machine Series.",
      "properties": {
        "machineSeries": {
          "$ref": "MachineSeries",
          "description": "The Machine Series (e.g. \"E2\", \"N2\")"
        },
        "allocatedAssetCount": {
          "type": "string",
          "description": "Count of assets allocated to this machine series.",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "RunImportJobRequest": {
      "type": "object",
      "id": "RunImportJobRequest",
      "description": "A request to run an import job.",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      }
    },
    "ReportSummaryVMWareNode": {
      "id": "ReportSummaryVMWareNode",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Code to identify VMware Engine node series, e.g. \"ve1-standard-72\". Based on the displayName of cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.nodeTypes"
        }
      },
      "description": "A VMWare Engine Node"
    },
    "DailyResourceUsageAggregation": {
      "type": "object",
      "description": "Usage data aggregation for a single day.",
      "properties": {
        "network": {
          "$ref": "DailyResourceUsageAggregationNetwork",
          "description": "Network usage."
        },
        "date": {
          "description": "Aggregation date. Day boundaries are at midnight UTC.",
          "$ref": "Date"
        },
        "cpu": {
          "description": "CPU usage.",
          "$ref": "DailyResourceUsageAggregationCPU"
        },
        "disk": {
          "description": "Disk usage.",
          "$ref": "DailyResourceUsageAggregationDisk"
        },
        "memory": {
          "$ref": "DailyResourceUsageAggregationMemory",
          "description": "Memory usage."
        }
      },
      "id": "DailyResourceUsageAggregation"
    },
    "OpenFileList": {
      "type": "object",
      "properties": {
        "entries": {
          "description": "Open file details entries.",
          "items": {
            "$ref": "OpenFileDetails"
          },
          "type": "array"
        }
      },
      "id": "OpenFileList",
      "description": "Open file list."
    },
    "NetworkAdapterDetails": {
      "type": "object",
      "description": "Details of network adapter.",
      "id": "NetworkAdapterDetails",
      "properties": {
        "macAddress": {
          "description": "MAC address.",
          "type": "string"
        },
        "adapterType": {
          "description": "Network adapter type (e.g. VMXNET3).",
          "type": "string"
        },
        "addresses": {
          "$ref": "NetworkAddressList",
          "description": "NetworkAddressList"
        }
      }
    },
    "ReportSummaryUtilizationChartData": {
      "type": "object",
      "id": "ReportSummaryUtilizationChartData",
      "properties": {
        "used": {
          "description": "Aggregate value which falls into the \"Used\" bucket.",
          "type": "string",
          "format": "int64"
        },
        "free": {
          "format": "int64",
          "type": "string",
          "description": "Aggregate value which falls into the \"Free\" bucket."
        }
      },
      "description": "Utilization Chart is a specific type of visualization which displays a metric classified into \"Used\" and \"Free\" buckets."
    },
    "AggregationHistogram": {
      "id": "AggregationHistogram",
      "properties": {
        "lowerBounds": {
          "description": "Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.",
          "items": {
            "format": "double",
            "type": "number"
          },
          "type": "array"
        }
      },
      "description": "Histogram of bucketed assets counts by field value.",
      "type": "object"
    },
    "PlatformDetails": {
      "properties": {
        "azureVmDetails": {
          "$ref": "AzureVmPlatformDetails",
          "description": "Azure VM specific details."
        },
        "genericDetails": {
          "description": "Generic platform details.",
          "$ref": "GenericPlatformDetails"
        },
        "vmwareDetails": {
          "description": "VMware specific details.",
          "$ref": "VmwarePlatformDetails"
        },
        "physicalDetails": {
          "description": "Physical machines platform details.",
          "$ref": "PhysicalPlatformDetails"
        },
        "awsEc2Details": {
          "$ref": "AwsEc2PlatformDetails",
          "description": "AWS EC2 specific details."
        }
      },
      "id": "PlatformDetails",
      "description": "Information about the platform.",
      "type": "object"
    },
    "ListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object"
    },
    "Settings": {
      "id": "Settings",
      "properties": {
        "name": {
          "description": "Output only. The name of the resource.",
          "readOnly": true,
          "type": "string"
        },
        "preferenceSet": {
          "description": "The preference set used by default for a project.",
          "type": "string"
        }
      },
      "description": "Describes the Migration Center settings related to the project.",
      "type": "object"
    },
    "ReportConfig": {
      "id": "ReportConfig",
      "properties": {
        "description": {
          "description": "Free-text description.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The timestamp when the resource was created.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of resource."
        },
        "groupPreferencesetAssignments": {
          "items": {
            "$ref": "ReportConfigGroupPreferenceSetAssignment"
          },
          "type": "array",
          "description": "Required. Collection of combinations of groups and preference sets."
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the resource was last updated.",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "The groups and associated preference sets on which we can generate reports."
    },
    "VirtualMachineArchitectureDetails": {
      "properties": {
        "firmware": {
          "description": "Firmware (BIOS/efi).",
          "type": "string"
        },
        "cpuSocketCount": {
          "format": "int32",
          "description": "Number of processor sockets allocated to the machine.",
          "type": "integer"
        },
        "cpuManufacturer": {
          "type": "string",
          "description": "CPU manufacturer, e.g., \"Intel\", \"AMD\"."
        },
        "hyperthreading": {
          "enumDescriptions": [
            "Unknown (default value).",
            "Hyperthreading is disabled.",
            "Hyperthreading is enabled."
          ],
          "enum": [
            "HYPER_THREADING_UNSPECIFIED",
            "HYPER_THREADING_DISABLED",
            "HYPER_THREADING_ENABLED"
          ],
          "description": "CPU hyperthreading support.",
          "type": "string"
        },
        "cpuArchitecture": {
          "description": "CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc.",
          "type": "string"
        },
        "bios": {
          "$ref": "BiosDetails",
          "description": "BIOS Details."
        },
        "cpuName": {
          "type": "string",
          "description": "CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc."
        },
        "cpuThreadCount": {
          "description": "Number of CPU threads allocated to the machine.",
          "format": "int32",
          "type": "integer"
        },
        "vendor": {
          "type": "string",
          "description": "Hardware vendor."
        }
      },
      "type": "object",
      "id": "VirtualMachineArchitectureDetails",
      "description": "Details of the VM architecture."
    },
    "AddAssetsToGroupRequest": {
      "type": "object",
      "description": "A request to add assets to a group.",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        },
        "assets": {
          "description": "Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000.",
          "$ref": "AssetList"
        },
        "allowExisting": {
          "type": "boolean",
          "description": "Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`."
        }
      },
      "id": "AddAssetsToGroupRequest"
    },
    "ComputeEnginePreferences": {
      "type": "object",
      "description": "The user preferences relating to Compute Engine target platform.",
      "properties": {
        "persistentDiskType": {
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ],
          "description": "Persistent disk type to use. If unspecified (default), all types are considered, based on available usage data.",
          "type": "string",
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ]
        },
        "machinePreferences": {
          "$ref": "MachinePreferences",
          "description": "Preferences concerning the machine types to consider on Compute Engine."
        },
        "licenseType": {
          "description": "License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value).",
            "Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with.",
            "Bring-your-own-license (BYOL) plan. User provides the OS license."
          ],
          "enum": [
            "LICENSE_TYPE_UNSPECIFIED",
            "LICENSE_TYPE_DEFAULT",
            "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE"
          ]
        }
      },
      "id": "ComputeEnginePreferences"
    },
    "DateTime": {
      "id": "DateTime",
      "properties": {
        "year": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year."
        },
        "day": {
          "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.",
          "format": "int32",
          "type": "integer"
        },
        "timeZone": {
          "description": "Time zone.",
          "$ref": "TimeZone"
        },
        "utcOffset": {
          "format": "google-duration",
          "type": "string",
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }."
        },
        "seconds": {
          "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.",
          "type": "integer",
          "format": "int32"
        },
        "hours": {
          "format": "int32",
          "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "type": "integer"
        },
        "nanos": {
          "format": "int32",
          "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
          "type": "integer"
        },
        "minutes": {
          "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
          "format": "int32",
          "type": "integer"
        },
        "month": {
          "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations."
    },
    "BatchDeleteAssetsRequest": {
      "type": "object",
      "id": "BatchDeleteAssetsRequest",
      "properties": {
        "allowMissing": {
          "type": "boolean",
          "description": "Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`."
        },
        "names": {
          "description": "Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "A request to delete a list of asset."
    },
    "NetworkUsageSample": {
      "type": "object",
      "description": "Network usage sample. Values are across all network interfaces.",
      "id": "NetworkUsageSample",
      "properties": {
        "averageEgressBps": {
          "format": "float",
          "description": "Average network egress in B/s sampled over a short window. Must be non-negative.",
          "type": "number"
        },
        "averageIngressBps": {
          "description": "Average network ingress in B/s sampled over a short window. Must be non-negative.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "NetworkAdapterList": {
      "properties": {
        "networkAdapters": {
          "description": "Network adapter descriptions.",
          "items": {
            "$ref": "NetworkAdapterDetails"
          },
          "type": "array"
        }
      },
      "id": "NetworkAdapterList",
      "type": "object",
      "description": "List of network adapters."
    },
    "ReportSummaryHistogramChartDataBucket": {
      "type": "object",
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "id": "ReportSummaryHistogramChartDataBucket",
      "properties": {
        "lowerBound": {
          "type": "string",
          "description": "Lower bound - inclusive.",
          "format": "int64"
        },
        "count": {
          "description": "Count of items in the bucket.",
          "format": "int64",
          "type": "string"
        },
        "upperBound": {
          "type": "string",
          "description": "Upper bound - exclusive.",
          "format": "int64"
        }
      }
    },
    "DailyResourceUsageAggregationNetwork": {
      "type": "object",
      "properties": {
        "egressBps": {
          "description": "Network egress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        },
        "ingressBps": {
          "description": "Network ingress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "description": "Statistical aggregation of network usage.",
      "id": "DailyResourceUsageAggregationNetwork"
    },
    "AggregateAssetsValuesRequest": {
      "type": "object",
      "id": "AggregateAssetsValuesRequest",
      "description": "A request to aggregate one or more values.",
      "properties": {
        "aggregations": {
          "description": "Array of aggregations to perform. Up to 25 aggregations can be defined.",
          "type": "array",
          "items": {
            "$ref": "Aggregation"
          }
        },
        "filter": {
          "description": "The aggregation will be performed on assets that match the provided filter.",
          "type": "string"
        }
      }
    },
    "ComputeEngineMigrationTarget": {
      "id": "ComputeEngineMigrationTarget",
      "type": "object",
      "description": "Compute engine migration target.",
      "properties": {
        "shape": {
          "description": "Description of the suggested shape for the migration target.",
          "$ref": "ComputeEngineShapeDescriptor"
        }
      }
    },
    "AggregationFrequency": {
      "id": "AggregationFrequency",
      "type": "object",
      "properties": {},
      "description": "Frequency distribution of all field values."
    },
    "NetworkConnectionList": {
      "properties": {
        "entries": {
          "description": "Network connection entries.",
          "type": "array",
          "items": {
            "$ref": "NetworkConnection"
          }
        }
      },
      "type": "object",
      "id": "NetworkConnectionList",
      "description": "Network connection list."
    },
    "NfsExportList": {
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "NfsExport"
          },
          "type": "array",
          "description": "NFS export entries."
        }
      },
      "id": "NfsExportList",
      "description": "NFS exports."
    },
    "AssetPerformanceData": {
      "properties": {
        "dailyResourceUsageAggregations": {
          "type": "array",
          "items": {
            "$ref": "DailyResourceUsageAggregation"
          },
          "description": "Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days. Aggregations are sorted from oldest to most recent."
        }
      },
      "description": "Performance data for an asset.",
      "type": "object",
      "id": "AssetPerformanceData"
    },
    "ReportSummaryAssetAggregateStats": {
      "description": "Aggregate statistics for a collection of assets.",
      "type": "object",
      "properties": {
        "totalStorageBytes": {
          "format": "int64",
          "description": "Sum of persistent storage in bytes of all the assets in this collection.",
          "type": "string"
        },
        "memoryUtilization": {
          "description": "Total memory split into Used/Free buckets.",
          "deprecated": true,
          "$ref": "ReportSummaryChartData"
        },
        "storageBytesHistogram": {
          "description": "Histogram showing a distribution of memory sizes.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "operatingSystem": {
          "$ref": "ReportSummaryChartData",
          "description": "Count of assets grouped by Operating System families."
        },
        "totalMemoryBytes": {
          "type": "string",
          "description": "Sum of the memory in bytes of all the assets in this collection.",
          "format": "int64"
        },
        "storageUtilization": {
          "description": "Total storage split into Used/Free buckets.",
          "$ref": "ReportSummaryChartData",
          "deprecated": true
        },
        "memoryUtilizationChart": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryUtilizationChartData"
        },
        "coreCountHistogram": {
          "description": "Histogram showing a distribution of CPU core counts.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "totalCores": {
          "type": "string",
          "description": "Sum of the CPU core count of all the assets in this collection.",
          "format": "int64"
        },
        "totalAssets": {
          "description": "Count of the number of unique assets in this collection.",
          "type": "string",
          "format": "int64"
        },
        "assetAge": {
          "description": "Count of assets grouped by age.",
          "deprecated": true,
          "$ref": "ReportSummaryChartData"
        },
        "storageUtilizationChart": {
          "$ref": "ReportSummaryUtilizationChartData",
          "description": "Total memory split into Used/Free buckets."
        },
        "memoryBytesHistogram": {
          "$ref": "ReportSummaryHistogramChartData",
          "description": "Histogram showing a distribution of memory sizes."
        }
      },
      "id": "ReportSummaryAssetAggregateStats"
    },
    "PhysicalPlatformDetails": {
      "description": "Platform specific details for Physical Machines.",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field."
        }
      },
      "id": "PhysicalPlatformDetails"
    },
    "ErrorFrame": {
      "properties": {
        "ingestionTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Frame ingestion time."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The identifier of the ErrorFrame."
        },
        "originalFrame": {
          "readOnly": true,
          "$ref": "AssetFrame",
          "description": "Output only. The frame that was originally reported."
        },
        "violations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "FrameViolationEntry"
          },
          "description": "Output only. All the violations that were detected for the frame."
        }
      },
      "id": "ErrorFrame",
      "description": "Message representing a frame which failed to be processed due to an error.",
      "type": "object"
    },
    "ReportSummaryGroupPreferenceSetFinding": {
      "properties": {
        "monthlyCostNetworkEgress": {
          "description": "Network Egress monthly cost for this preference set.",
          "$ref": "Money"
        },
        "vmwareEngineFinding": {
          "description": "A set of findings that applies to VMWare machines in the input.",
          "$ref": "ReportSummaryVMWareEngineFinding"
        },
        "monthlyCostTotal": {
          "description": "Total monthly cost for this preference set.",
          "$ref": "Money"
        },
        "monthlyCostOther": {
          "$ref": "Money",
          "description": "Miscellaneous monthly cost for this preference set."
        },
        "preferredRegion": {
          "type": "string",
          "description": "Target region for this Preference Set",
          "deprecated": true
        },
        "monthlyCostOsLicense": {
          "description": "Licensing monthly cost for this preference set.",
          "$ref": "Money"
        },
        "topPriority": {
          "deprecated": true,
          "type": "string",
          "description": "Text describing the business priority specified for this Preference Set"
        },
        "pricingTrack": {
          "type": "string",
          "description": "Text describing the pricing track specified for this Preference Set",
          "deprecated": true
        },
        "description": {
          "description": "Description for the Preference Set.",
          "type": "string"
        },
        "monthlyCostCompute": {
          "description": "Compute monthly cost for this preference set.",
          "$ref": "Money"
        },
        "monthlyCostStorage": {
          "$ref": "Money",
          "description": "Storage monthly cost for this preference set."
        },
        "soleTenantFinding": {
          "$ref": "ReportSummarySoleTenantFinding",
          "description": "A set of findings that applies to Stole-Tenant machines in the input."
        },
        "machinePreferences": {
          "$ref": "VirtualMachinePreferences",
          "description": "A set of preferences that applies to all machines in the context."
        },
        "displayName": {
          "type": "string",
          "description": "Display Name of the Preference Set"
        },
        "machineFinding": {
          "description": "A set of findings that applies to all machines in the input.",
          "$ref": "ReportSummaryMachineFinding"
        }
      },
      "description": "Summary Findings for a specific Group/PreferenceSet combination.",
      "id": "ReportSummaryGroupPreferenceSetFinding",
      "type": "object"
    },
    "RunningProcess": {
      "id": "RunningProcess",
      "type": "object",
      "properties": {
        "exePath": {
          "description": "Process binary path.",
          "type": "string"
        },
        "cmdline": {
          "type": "string",
          "description": "Process full command line."
        },
        "user": {
          "description": "User running the process.",
          "type": "string"
        },
        "pid": {
          "description": "Process ID.",
          "format": "int64",
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "description": "Process extended attributes.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "Guest OS running process details."
    },
    "ReportAssetFramesResponse": {
      "type": "object",
      "properties": {},
      "description": "A response to a call to `ReportAssetFrame`.",
      "id": "ReportAssetFramesResponse"
    },
    "DailyResourceUsageAggregationDisk": {
      "description": "Statistical aggregation of disk usage.",
      "properties": {
        "iops": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Disk I/O operations per second."
        }
      },
      "id": "DailyResourceUsageAggregationDisk",
      "type": "object"
    },
    "AwsEc2PlatformDetails": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The location of the machine in the AWS format."
        },
        "machineTypeLabel": {
          "type": "string",
          "description": "AWS platform's machine type label."
        }
      },
      "type": "object",
      "id": "AwsEc2PlatformDetails",
      "description": "AWS EC2 specific details."
    },
    "Aggregation": {
      "description": "Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.",
      "properties": {
        "histogram": {
          "$ref": "AggregationHistogram",
          "description": "Creates a bucketed histogram of field values."
        },
        "field": {
          "type": "string",
          "description": "The name of the field on which to aggregate."
        },
        "sum": {
          "description": "Sum over a numeric field.",
          "$ref": "AggregationSum"
        },
        "count": {
          "description": "Count the number of matching objects.",
          "$ref": "AggregationCount"
        },
        "frequency": {
          "$ref": "AggregationFrequency",
          "description": "Creates a frequency distribution of all field values."
        }
      },
      "type": "object",
      "id": "Aggregation"
    },
    "RunningService": {
      "properties": {
        "startMode": {
          "description": "Service start mode (raw, OS-agnostic).",
          "type": "string"
        },
        "exePath": {
          "description": "Service binary path.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "Service state (raw, OS-agnostic)."
        },
        "pid": {
          "description": "Service pid.",
          "type": "string",
          "format": "int64"
        },
        "status": {
          "description": "Service status.",
          "type": "string"
        },
        "cmdline": {
          "type": "string",
          "description": "Service command line."
        },
        "name": {
          "description": "Service name.",
          "type": "string"
        }
      },
      "description": "Guest OS running service details.",
      "id": "RunningService",
      "type": "object"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "type": "object",
      "id": "ListOperationsResponse"
    },
    "GCSPayloadInfo": {
      "type": "object",
      "id": "GCSPayloadInfo",
      "properties": {
        "path": {
          "type": "string",
          "description": "The payload path in Google Cloud Storage."
        },
        "format": {
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ],
          "description": "The import job format.",
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false
          ],
          "type": "string"
        }
      },
      "description": "A resource that represents a payload hosted on Google Cloud Storage."
    },
    "RemoveAssetsFromGroupRequest": {
      "description": "A request to remove assets from a group.",
      "type": "object",
      "properties": {
        "assets": {
          "description": "Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000.",
          "$ref": "AssetList"
        },
        "allowMissing": {
          "description": "Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.",
          "type": "boolean"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "id": "RemoveAssetsFromGroupRequest"
    },
    "PayloadFile": {
      "id": "PayloadFile",
      "description": "Payload file for inline import job payload.",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte",
          "description": "The file data."
        },
        "name": {
          "type": "string",
          "description": "The file name."
        }
      },
      "type": "object"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "parameters": {
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "location": "query"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "type": "string",
      "location": "query"
    }
  },
  "kind": "discovery#restDescription",
  "canonicalName": "Migration Center API",
  "rootUrl": "https://migrationcenter.googleapis.com/",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "importJobs": {
              "resources": {
                "importDataFiles": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "ListImportDataFilesResponse"
                      },
                      "path": "v1alpha1/{+parent}/importDataFiles",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A page token, received from a previous `ListImportDataFiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListImportDataFiles` must match the call that provided the page token."
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of data files to return. The service may return fewer than this value. If unspecified, at most 500 data files will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. Name of the parent of the `ImportDataFiles` resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Filtering results."
                        },
                        "orderBy": {
                          "type": "string",
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "location": "query"
                        }
                      },
                      "httpMethod": "GET",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "List import data files."
                    },
                    "delete": {
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.delete",
                      "parameters": {
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "description": "Required. Name of the ImportDataFile to delete.",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "path": "v1alpha1/{+name}",
                      "httpMethod": "DELETE",
                      "description": "Delete an import data file."
                    },
                    "get": {
                      "path": "v1alpha1/{+name}",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. Name of the ImportDataFile.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "response": {
                        "$ref": "ImportDataFile"
                      },
                      "description": "Gets an import data file.",
                      "httpMethod": "GET"
                    },
                    "create": {
                      "parameters": {
                        "importDataFileId": {
                          "description": "Required. The ID of the new data file.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "description": "Required. Name of the parent of the ImportDataFile.",
                          "type": "string"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "httpMethod": "POST",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "ImportDataFile"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1alpha1/{+parent}/importDataFiles",
                      "description": "Creates an import data file.",
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "validate": {
                  "description": "Validates an import job.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "description": "Required. The name of the import job to validate.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate",
                  "id": "migrationcenter.projects.locations.importJobs.validate",
                  "request": {
                    "$ref": "ValidateImportJobRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}:validate",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "id": "migrationcenter.projects.locations.importJobs.list",
                  "response": {
                    "$ref": "ListImportJobsResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "filter": {
                      "description": "Filtering results.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `ListImportJobsRequest`."
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query"
                    },
                    "view": {
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "description": "Optional. The level of details of each import job. Default value is BASIC.",
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/importJobs",
                  "description": "Lists all import jobs."
                },
                "get": {
                  "id": "migrationcenter.projects.locations.importJobs.get",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "parameters": {
                    "view": {
                      "location": "query",
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "description": "Optional. The level of details of the import job. Default value is FULL.",
                      "type": "string",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ]
                    },
                    "name": {
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}",
                  "description": "Gets the details of an import job.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ImportJob"
                  },
                  "httpMethod": "GET"
                },
                "patch": {
                  "description": "Updates an import job.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "type": "string",
                      "location": "query"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "type": "string",
                      "description": "Output only. The full name of the import job.",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "httpMethod": "PATCH",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.importJobs.patch"
                },
                "create": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates an import job.",
                  "id": "migrationcenter.projects.locations.importJobs.create",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Value for parent."
                    },
                    "importJobId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. ID of the import job."
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "path": "v1alpha1/{+parent}/importJobs",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.delete",
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "force": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. If set to `true`, any `ImportDataFiles` of this job will also be deleted If set to `false`, the request only works if the job has no data files."
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "description": "Deletes an import job.",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "run": {
                  "path": "v1alpha1/{+name}:run",
                  "request": {
                    "$ref": "RunImportJobRequest"
                  },
                  "description": "Runs an import job.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the import job to run.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.run",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run"
                }
              }
            },
            "sources": {
              "methods": {
                "patch": {
                  "request": {
                    "$ref": "Source"
                  },
                  "httpMethod": "PATCH",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Source` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "description": "Output only. The full name of the source.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "id": "migrationcenter.projects.locations.sources.patch",
                  "description": "Updates the parameters of a source.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "delete": {
                  "id": "migrationcenter.projects.locations.sources.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "required": true
                    }
                  },
                  "description": "Deletes a source.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "id": "migrationcenter.projects.locations.sources.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Source"
                  },
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "description": "Gets the details of a source.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "httpMethod": "GET",
                  "description": "Lists all the sources in a given project and location.",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `ListSourcesRequest`.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results that the server should return."
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                      "format": "int32",
                      "location": "query"
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "id": "migrationcenter.projects.locations.sources.list",
                  "response": {
                    "$ref": "ListSourcesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/sources"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates a new source in a given project and location.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "sourceId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. User specified ID for the source. It will become the last component of the source name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`."
                    },
                    "parent": {
                      "description": "Required. Value for parent.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "id": "migrationcenter.projects.locations.sources.create",
                  "path": "v1alpha1/{+parent}/sources",
                  "request": {
                    "$ref": "Source"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              },
              "resources": {
                "errorFrames": {
                  "methods": {
                    "get": {
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/errorFrames/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the frame to retrieve. Format: projects/{project}/locations/{location}/sources/{source}/errorFrames/{error_frame}",
                          "required": true
                        },
                        "view": {
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ],
                          "description": "Optional. An optional view mode to control the level of details for the frame. The default is a basic frame view.",
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1alpha1/{+name}",
                      "response": {
                        "$ref": "ErrorFrame"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames/{errorFramesId}",
                      "description": "Gets the details of an error frame.",
                      "id": "migrationcenter.projects.locations.sources.errorFrames.get",
                      "httpMethod": "GET"
                    },
                    "list": {
                      "response": {
                        "$ref": "ListErrorFramesResponse"
                      },
                      "id": "migrationcenter.projects.locations.sources.errorFrames.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "parent": {
                          "description": "Required. Parent value (the source) for `ListErrorFramesRequest`.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "required": true
                        },
                        "view": {
                          "description": "Optional. An optional view mode to control the level of details of each error frame. The default is a BASIC frame view.",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ],
                          "type": "string",
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A token identifying a page of results the server should return."
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "path": "v1alpha1/{+parent}/errorFrames",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames",
                      "description": "Lists all error frames in a given source and location."
                    }
                  }
                }
              }
            },
            "assets": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.assets.get",
                  "description": "Gets the details of an asset.",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "parameters": {
                    "view": {
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ],
                      "location": "query",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data.",
                        "The asset view includes the standard metadata of an asset."
                      ],
                      "type": "string",
                      "description": "View of the assets. Defaults to BASIC."
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "response": {
                    "$ref": "Asset"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "batchDelete": {
                  "description": "Deletes list of Assets.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/assets:batchDelete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for batch asset delete.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.assets.batchDelete",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchDelete",
                  "request": {
                    "$ref": "BatchDeleteAssetsRequest"
                  }
                },
                "list": {
                  "description": "Lists all the assets in a given project and location.",
                  "response": {
                    "$ref": "ListAssetsResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets",
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.assets.list",
                  "parameters": {
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "view": {
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data.",
                        "The asset view includes the standard metadata of an asset."
                      ],
                      "type": "string",
                      "description": "View of the assets. Defaults to BASIC.",
                      "location": "query",
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ]
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "description": "Filtering results.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `ListAssetsRequest`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/assets",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "reportAssetFrames": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames",
                  "request": {
                    "$ref": "Frames"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent of the resource."
                    },
                    "source": {
                      "type": "string",
                      "description": "Required. Reference to a source.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Reports a set of frames.",
                  "path": "v1alpha1/{+parent}/assets:reportAssetFrames",
                  "id": "migrationcenter.projects.locations.assets.reportAssetFrames",
                  "response": {
                    "$ref": "ReportAssetFramesResponse"
                  }
                },
                "delete": {
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "DELETE",
                  "description": "Deletes an asset.",
                  "id": "migrationcenter.projects.locations.assets.delete",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "patch": {
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "description": "Output only. The full name of the asset.",
                      "location": "path"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "Asset"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "description": "Updates the parameters of an asset.",
                  "id": "migrationcenter.projects.locations.assets.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Asset"
                  },
                  "httpMethod": "PATCH"
                },
                "aggregateValues": {
                  "id": "migrationcenter.projects.locations.assets.aggregateValues",
                  "response": {
                    "$ref": "AggregateAssetsValuesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `AggregateAssetsValuesRequest`.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Aggregates the requested fields based on provided function.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "AggregateAssetsValuesRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/assets:aggregateValues"
                },
                "batchUpdate": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchUpdate",
                  "path": "v1alpha1/{+parent}/assets:batchUpdate",
                  "id": "migrationcenter.projects.locations.assets.batchUpdate",
                  "description": "Updates the parameters of a list of assets.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for batch asset update.",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "BatchUpdateAssetsRequest"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "BatchUpdateAssetsResponse"
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation resource."
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.operations.get",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}/operations",
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.operations.list",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation's parent resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  }
                },
                "cancel": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "path": "v1alpha1/{+name}:cancel",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.operations.cancel",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.operations.delete"
                }
              }
            },
            "reportConfigs": {
              "resources": {
                "reports": {
                  "methods": {
                    "create": {
                      "request": {
                        "$ref": "Report"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "required": true,
                          "description": "Required. Value for parent.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$"
                        },
                        "reportId": {
                          "location": "query",
                          "description": "Required. User specified id for the report. It will become the last component of the report name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The id must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "path": "v1alpha1/{+parent}/reports",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.create",
                      "description": "Creates a report.",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "delete": {
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "description": "Deletes a Report.",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1alpha1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "required": true,
                          "description": "Required. Name of the resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "location": "path"
                        }
                      },
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.delete",
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "Operation"
                      }
                    },
                    "get": {
                      "description": "Gets details of a single Report.",
                      "parameters": {
                        "view": {
                          "location": "query",
                          "description": "Determines what information to retrieve for the Report.",
                          "type": "string",
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ]
                        },
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. Name of the resource.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.get",
                      "path": "v1alpha1/{+name}",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "response": {
                        "$ref": "Report"
                      }
                    },
                    "list": {
                      "parameters": {
                        "pageSize": {
                          "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results that the server should return."
                        },
                        "view": {
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "location": "query",
                          "type": "string",
                          "description": "Determines what information to retrieve for each Report.",
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ]
                        },
                        "orderBy": {
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "description": "Required. Parent value for `ListReportsRequest`.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$"
                        },
                        "filter": {
                          "location": "query",
                          "description": "Filtering results.",
                          "type": "string"
                        }
                      },
                      "path": "v1alpha1/{+parent}/reports",
                      "description": "Lists Reports in a given ReportConfig.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.list",
                      "response": {
                        "$ref": "ListReportsResponse"
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListReportConfigsResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "parameters": {
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filtering results."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Parent value for `ListReportConfigsRequest`.",
                      "location": "path"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+parent}/reportConfigs",
                  "description": "Lists ReportConfigs in a given project and location.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.reportConfigs.list"
                },
                "create": {
                  "request": {
                    "$ref": "ReportConfig"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/reportConfigs",
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "reportConfigId": {
                      "description": "Required. User specified ID for the report config. It will become the last component of the report config name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Value for parent.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Creates a report configuration.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "id": "migrationcenter.projects.locations.reportConfigs.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ReportConfig"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "type": "string"
                    }
                  },
                  "description": "Gets details of a single ReportConfig.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "id": "migrationcenter.projects.locations.reportConfigs.get",
                  "path": "v1alpha1/{+name}"
                },
                "delete": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "httpMethod": "DELETE",
                  "description": "Deletes a ReportConfig.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$"
                    },
                    "force": {
                      "description": "Optional. If set to `true`, any child `Reports` of this entity will also be deleted. If set to `false`, the request only works if the resource has no children.",
                      "type": "boolean",
                      "location": "query"
                    }
                  },
                  "id": "migrationcenter.projects.locations.reportConfigs.delete"
                }
              }
            },
            "groups": {
              "methods": {
                "patch": {
                  "httpMethod": "PATCH",
                  "description": "Updates the parameters of a group.",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "description": "Output only. The name of the group.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Group` resource by the update. The values specified in the `update_mask` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "format": "google-fieldmask",
                      "location": "query"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Group"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "id": "migrationcenter.projects.locations.groups.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "description": "Required. Name of the group resource.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "description": "Deletes a group.",
                  "id": "migrationcenter.projects.locations.groups.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "description": "Lists all groups in a given project and location.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.groups.list",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `ListGroupsRequest`.",
                      "location": "path",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups",
                  "response": {
                    "$ref": "ListGroupsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/groups"
                },
                "addAssets": {
                  "description": "Adds assets to a group.",
                  "id": "migrationcenter.projects.locations.groups.addAssets",
                  "path": "v1alpha1/{+group}:addAssets",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "group"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addAssets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "group": {
                      "description": "Required. Group reference.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "AddAssetsToGroupRequest"
                  }
                },
                "removeAssets": {
                  "request": {
                    "$ref": "RemoveAssetsFromGroupRequest"
                  },
                  "id": "migrationcenter.projects.locations.groups.removeAssets",
                  "parameterOrder": [
                    "group"
                  ],
                  "parameters": {
                    "group": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "description": "Required. Group reference."
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+group}:removeAssets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeAssets",
                  "description": "Removes assets from a group."
                },
                "get": {
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "id": "migrationcenter.projects.locations.groups.get",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Group"
                  },
                  "description": "Gets the details of a group.",
                  "httpMethod": "GET"
                },
                "create": {
                  "path": "v1alpha1/{+parent}/groups",
                  "request": {
                    "$ref": "Group"
                  },
                  "id": "migrationcenter.projects.locations.groups.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "description": "Creates a new group in a given project and location.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "groupId": {
                      "description": "Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "location": "query",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "preferenceSets": {
              "methods": {
                "delete": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.preferenceSets.delete",
                  "httpMethod": "DELETE",
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "description": "Required. Name of the group resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a preference set.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}"
                },
                "create": {
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. Value for parent.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "preferenceSetId": {
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new preference set in a given project and location.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "id": "migrationcenter.projects.locations.preferenceSets.create",
                  "path": "v1alpha1/{+parent}/preferenceSets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Updates the parameters of a preference set.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `PreferenceSet` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Output only. Name of the preference set.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.preferenceSets.patch",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}"
                },
                "get": {
                  "id": "migrationcenter.projects.locations.preferenceSets.get",
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the details of a preference set.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "PreferenceSet"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}"
                },
                "list": {
                  "response": {
                    "$ref": "ListPreferenceSetsResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "path": "v1alpha1/{+parent}/preferenceSets",
                  "parameters": {
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, at most 500 preference sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "parent": {
                      "description": "Required. Parent value for `ListPreferenceSetsRequest`.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "id": "migrationcenter.projects.locations.preferenceSets.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Lists all the preference sets in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            }
          },
          "methods": {
            "list": {
              "httpMethod": "GET",
              "id": "migrationcenter.projects.locations.list",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameters": {
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "type": "integer",
                  "format": "int32"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                }
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}/locations",
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "get": {
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "response": {
                "$ref": "Location"
              },
              "id": "migrationcenter.projects.locations.get",
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location.",
              "httpMethod": "GET"
            },
            "updateSettings": {
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Output only. The name of the resource."
                },
                "requestId": {
                  "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                  "type": "string",
                  "location": "query"
                },
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "Required. Field mask is used to specify the fields to be overwritten in the `Settings` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
                }
              },
              "response": {
                "$ref": "Operation"
              },
              "httpMethod": "PATCH",
              "request": {
                "$ref": "Settings"
              },
              "id": "migrationcenter.projects.locations.updateSettings",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/settings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "description": "Updates the regional-level project settings."
            },
            "getSettings": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "description": "Required. Name of the resource."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Settings"
              },
              "id": "migrationcenter.projects.locations.getSettings",
              "httpMethod": "GET",
              "path": "v1alpha1/{+name}",
              "description": "Gets the details of regional settings.",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/settings"
            }
          }
        }
      }
    }
  },
  "revision": "20230714"
}

{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "title": "Migration Center API",
  "batchPath": "batch",
  "parameters": {
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "alt": {
      "default": "json",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    }
  },
  "version": "v1alpha1",
  "mtlsRootUrl": "https://migrationcenter.mtls.googleapis.com/",
  "documentationLink": "https://cloud.google.com/migration-center",
  "protocol": "rest",
  "fullyEncodeReservedExpansion": true,
  "baseUrl": "https://migrationcenter.googleapis.com/",
  "description": "",
  "schemas": {
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "GCSPayloadInfo": {
      "type": "object",
      "description": "A resource that represents a payload hosted on Google Cloud Storage.",
      "properties": {
        "path": {
          "type": "string",
          "description": "The payload path in Google Cloud Storage."
        },
        "format": {
          "description": "The import job format.",
          "type": "string",
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ],
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ]
        }
      },
      "id": "GCSPayloadInfo"
    },
    "NfsExportList": {
      "properties": {
        "entries": {
          "items": {
            "$ref": "NfsExport"
          },
          "type": "array",
          "description": "NFS export entries."
        }
      },
      "id": "NfsExportList",
      "type": "object",
      "description": "NFS exports."
    },
    "ComputeEngineMigrationTarget": {
      "id": "ComputeEngineMigrationTarget",
      "type": "object",
      "description": "Compute engine migration target.",
      "properties": {
        "shape": {
          "$ref": "ComputeEngineShapeDescriptor",
          "description": "Description of the suggested shape for the migration target."
        }
      }
    },
    "GenericPlatformDetails": {
      "id": "GenericPlatformDetails",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field."
        }
      },
      "description": "Generic platform details."
    },
    "ImportError": {
      "properties": {
        "severity": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ],
          "description": "The severity of the error."
        },
        "errorDetails": {
          "description": "The error information.",
          "type": "string"
        }
      },
      "description": "A resource that reports the errors encountered while processing an import job.",
      "type": "object",
      "id": "ImportError"
    },
    "NetworkAddress": {
      "properties": {
        "ipAddress": {
          "description": "Assigned or configured IP Address.",
          "type": "string"
        },
        "assignment": {
          "enumDescriptions": [
            "Unknown (default value).",
            "Staticly assigned IP.",
            "Dynamically assigned IP (DHCP)."
          ],
          "description": "Whether DHCP is used to assign addresses.",
          "enum": [
            "ADDRESS_ASSIGNMENT_UNSPECIFIED",
            "ADDRESS_ASSIGNMENT_STATIC",
            "ADDRESS_ASSIGNMENT_DHCP"
          ],
          "type": "string"
        },
        "bcast": {
          "type": "string",
          "description": "Broadcast address."
        },
        "fqdn": {
          "type": "string",
          "description": "Fully qualified domain name."
        },
        "subnetMask": {
          "type": "string",
          "description": "Subnet mask."
        }
      },
      "type": "object",
      "id": "NetworkAddress",
      "description": "Details of network address."
    },
    "AggregationResultSum": {
      "type": "object",
      "description": "The result of a sum aggregation.",
      "id": "AggregationResultSum",
      "properties": {
        "value": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "DateTime": {
      "type": "object",
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
      "id": "DateTime",
      "properties": {
        "utcOffset": {
          "format": "google-duration",
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.",
          "type": "string"
        },
        "timeZone": {
          "description": "Time zone.",
          "$ref": "TimeZone"
        },
        "day": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day."
        },
        "month": {
          "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.",
          "type": "integer",
          "format": "int32"
        },
        "hours": {
          "format": "int32",
          "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "type": "integer"
        },
        "minutes": {
          "format": "int32",
          "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
          "type": "integer"
        },
        "year": {
          "format": "int32",
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
          "type": "integer"
        },
        "seconds": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds."
        },
        "nanos": {
          "format": "int32",
          "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
          "type": "integer"
        }
      }
    },
    "NetworkAddressList": {
      "id": "NetworkAddressList",
      "type": "object",
      "description": "List of allocated/assigned network addresses.",
      "properties": {
        "addresses": {
          "type": "array",
          "description": "Network address entries.",
          "items": {
            "$ref": "NetworkAddress"
          }
        }
      }
    },
    "DiskEntry": {
      "id": "DiskEntry",
      "type": "object",
      "description": "Single disk entry.",
      "properties": {
        "partitions": {
          "$ref": "DiskPartitionList",
          "description": "Partition layout."
        },
        "status": {
          "type": "string",
          "description": "Disk status (e.g. online)."
        },
        "interfaceType": {
          "description": "Disks interface type (e.g. SATA/SCSI)",
          "type": "string"
        },
        "totalFreeBytes": {
          "type": "string",
          "description": "Disk free space.",
          "format": "int64"
        },
        "vmwareConfig": {
          "description": "VMware disk details.",
          "$ref": "VmwareDiskConfig"
        },
        "totalCapacityBytes": {
          "type": "string",
          "description": "Disk capacity.",
          "format": "int64"
        },
        "diskLabel": {
          "type": "string",
          "description": "Disk label."
        },
        "diskLabelType": {
          "type": "string",
          "description": "Disk label type (e.g. BIOS/GPT)"
        },
        "hwAddress": {
          "type": "string",
          "description": "Disk hardware address (e.g. 0:1 for SCSI)."
        }
      }
    },
    "HostsEntry": {
      "properties": {
        "ip": {
          "description": "IP (raw, IPv4/6 agnostic).",
          "type": "string"
        },
        "hostNames": {
          "type": "array",
          "description": "List of host names / aliases.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Single /etc/hosts entry.",
      "type": "object",
      "id": "HostsEntry"
    },
    "ListReportsResponse": {
      "description": "Response message for listing Reports.",
      "properties": {
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "reports": {
          "items": {
            "$ref": "Report"
          },
          "description": "The list of Reports.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      },
      "id": "ListReportsResponse",
      "type": "object"
    },
    "VmwareDiskConfig": {
      "id": "VmwareDiskConfig",
      "description": "VMware disk config details.",
      "type": "object",
      "properties": {
        "rdmCompatibilityMode": {
          "description": "RDM compatibility mode.",
          "type": "string"
        },
        "backingType": {
          "description": "VMDK backing type.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Flat v1.",
            "Flat v2.",
            "Persistent memory, also known as Non-Volatile Memory (NVM).",
            "Raw Disk Memory v1.",
            "Raw Disk Memory v2.",
            "SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.",
            "SEsparse v1.",
            "SEsparse v1."
          ],
          "enum": [
            "BACKING_TYPE_UNSPECIFIED",
            "BACKING_TYPE_FLAT_V1",
            "BACKING_TYPE_FLAT_V2",
            "BACKING_TYPE_PMEM",
            "BACKING_TYPE_RDM_V1",
            "BACKING_TYPE_RDM_V2",
            "BACKING_TYPE_SESPARSE",
            "BACKING_TYPE_SESPARSE_V1",
            "BACKING_TYPE_SESPARSE_V2"
          ]
        },
        "vmdkDiskMode": {
          "type": "string",
          "description": "VMDK disk mode."
        },
        "shared": {
          "type": "boolean",
          "description": "Is VMDK shared with other VMs."
        }
      }
    },
    "PreferenceSet": {
      "id": "PreferenceSet",
      "description": "The preferences that apply to all assets in a given context.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the preference set was last updated."
        },
        "createTime": {
          "description": "Output only. The timestamp when the preference set was created.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "description": {
          "description": "A description of the preference set.",
          "type": "string"
        },
        "name": {
          "description": "Output only. Name of the preference set.",
          "readOnly": true,
          "type": "string"
        },
        "virtualMachinePreferences": {
          "description": "A set of preferences that applies to all virtual machines in the context.",
          "$ref": "VirtualMachinePreferences"
        }
      },
      "type": "object"
    },
    "AssetPerformanceData": {
      "id": "AssetPerformanceData",
      "type": "object",
      "description": "Performance data for an asset.",
      "properties": {
        "dailyResourceUsageAggregations": {
          "items": {
            "$ref": "DailyResourceUsageAggregation"
          },
          "type": "array",
          "description": "Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days."
        }
      }
    },
    "FileValidationReport": {
      "properties": {
        "partialReport": {
          "type": "boolean",
          "description": "Flag indicating that processing was aborted due to maximum number of errors."
        },
        "fileName": {
          "description": "The name of the file.",
          "type": "string"
        },
        "rowErrors": {
          "items": {
            "$ref": "ImportRowError"
          },
          "description": "Partial list of rows that encountered validation error.",
          "type": "array"
        },
        "fileErrors": {
          "type": "array",
          "description": "List of file level errors.",
          "items": {
            "$ref": "ImportError"
          }
        }
      },
      "type": "object",
      "id": "FileValidationReport",
      "description": "A resource that aggregates the validation errors found in an import job file."
    },
    "ReportConfig": {
      "id": "ReportConfig",
      "properties": {
        "groupPreferencesetAssignments": {
          "items": {
            "$ref": "ReportConfigGroupPreferenceSetAssignment"
          },
          "type": "array",
          "description": "Required. Collection of combinations of groups and preference sets."
        },
        "name": {
          "description": "Output only. Name of resource.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was last updated.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the resource was created.",
          "type": "string"
        }
      },
      "description": "The groups and associated preference sets on which we can generate reports.",
      "type": "object"
    },
    "BatchUpdateAssetsResponse": {
      "properties": {
        "assets": {
          "items": {
            "$ref": "Asset"
          },
          "type": "array",
          "description": "Update asset content. The content only includes values after field mask being applied."
        }
      },
      "description": "Response for updating a list of assets.",
      "type": "object",
      "id": "BatchUpdateAssetsResponse"
    },
    "ListSourcesResponse": {
      "type": "object",
      "description": "Response message for listing sources.",
      "properties": {
        "sources": {
          "description": "The list of sources.",
          "type": "array",
          "items": {
            "$ref": "Source"
          }
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        }
      },
      "id": "ListSourcesResponse"
    },
    "OpenFileDetails": {
      "id": "OpenFileDetails",
      "properties": {
        "command": {
          "type": "string",
          "description": "Opened file command."
        },
        "fileType": {
          "type": "string",
          "description": "Opened file file type."
        },
        "user": {
          "type": "string",
          "description": "Opened file user."
        },
        "filePath": {
          "description": "Opened file file path.",
          "type": "string"
        }
      },
      "description": "Open file Information.",
      "type": "object"
    },
    "VirtualMachineDetails": {
      "properties": {
        "vcenterVmId": {
          "type": "string",
          "description": "vCenter VM ID."
        },
        "vcenterFolder": {
          "description": "Folder name in vCenter where asset resides.",
          "type": "string"
        },
        "osFamily": {
          "enum": [
            "OS_FAMILY_UNKNOWN",
            "OS_FAMILY_WINDOWS",
            "OS_FAMILY_LINUX",
            "OS_FAMILY_UNIX"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "Microsoft Windows Server and Desktop.",
            "Various Linux flavors.",
            "Non-Linux Unix flavors."
          ],
          "description": "What family the OS belong to, if known."
        },
        "vcenterUrl": {
          "type": "string",
          "description": "vCenter URL used in collection."
        },
        "vmName": {
          "description": "Virtual Machine display name.",
          "type": "string"
        },
        "vmDisks": {
          "$ref": "VirtualMachineDiskDetails",
          "description": "VM disk details."
        },
        "powerState": {
          "description": "Power state of VM (poweredOn or poweredOff).",
          "type": "string"
        },
        "guestOs": {
          "description": "Guest OS information.",
          "$ref": "GuestOsDetails"
        },
        "vmUuid": {
          "description": "Virtual Machine unique identifier.",
          "type": "string"
        },
        "vmNetwork": {
          "description": "VM network details.",
          "$ref": "VirtualMachineNetworkDetails"
        },
        "vmArchitecture": {
          "$ref": "VirtualMachineArchitectureDetails",
          "description": "VM architecture details (vendor, cpu arch)."
        },
        "osName": {
          "description": "The name of the operating system running on the VirtualMachine.",
          "type": "string"
        },
        "coreCount": {
          "type": "integer",
          "description": "Number of CPU cores in the VirtualMachine. Must be non-negative.",
          "format": "int32"
        },
        "osVersion": {
          "type": "string",
          "description": "The version of the operating system running on the virtual machine."
        },
        "createTime": {
          "type": "string",
          "description": "VM creation timestamp.",
          "format": "google-datetime"
        },
        "platform": {
          "description": "Platform information.",
          "$ref": "PlatformDetails"
        },
        "memoryMb": {
          "type": "integer",
          "format": "int32",
          "description": "The amount of memory in the VirtualMachine. Must be non-negative."
        }
      },
      "description": "Details of a VirtualMachine.",
      "type": "object",
      "id": "VirtualMachineDetails"
    },
    "MigrationInsight": {
      "type": "object",
      "description": "An insight about potential migrations for an asset.",
      "properties": {
        "vmwareEngineTarget": {
          "readOnly": true,
          "$ref": "VmwareEngineMigrationTarget",
          "description": "Output only. A VMWare Engine target."
        },
        "computeEngineTarget": {
          "$ref": "ComputeEngineMigrationTarget",
          "description": "Output only. A Google Compute Engine target.",
          "readOnly": true
        },
        "fit": {
          "$ref": "FitDescriptor",
          "description": "Output only. Description of how well the asset this insight is associated with fits the proposed migration.",
          "readOnly": true
        },
        "gkeTarget": {
          "readOnly": true,
          "$ref": "GoogleKubernetesEngineMigrationTarget",
          "description": "Output only. A Google Kubernetes Engine target."
        }
      },
      "id": "MigrationInsight"
    },
    "GuestConfigDetails": {
      "description": "Guest OS config information.",
      "type": "object",
      "id": "GuestConfigDetails",
      "properties": {
        "selinux": {
          "$ref": "Selinux",
          "description": "SELinux details."
        },
        "issue": {
          "type": "string",
          "description": "OS issue (typically /etc/issue in Linux)."
        },
        "hosts": {
          "description": "Hosts file (/etc/hosts).",
          "$ref": "HostsEntryList"
        },
        "nfsExports": {
          "description": "NFS exports.",
          "$ref": "NfsExportList"
        },
        "fstab": {
          "$ref": "FstabEntryList",
          "description": "Mount list (Linux fstab)."
        }
      }
    },
    "NetworkUsageSample": {
      "type": "object",
      "id": "NetworkUsageSample",
      "properties": {
        "averageEgressBps": {
          "format": "float",
          "description": "Average network egress in B/s sampled over a short window. Must be non-negative.",
          "type": "number"
        },
        "averageIngressBps": {
          "format": "float",
          "type": "number",
          "description": "Average network ingress in B/s sampled over a short window. Must be non-negative."
        }
      },
      "description": "Network usage sample. Values are across all network interfaces."
    },
    "InlinePayloadInfo": {
      "id": "InlinePayloadInfo",
      "properties": {
        "payload": {
          "type": "array",
          "description": "List of payload files.",
          "items": {
            "$ref": "PayloadFile"
          }
        },
        "format": {
          "description": "The import job format.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ]
        }
      },
      "description": "A resource that represents the inline import job payload.",
      "type": "object"
    },
    "DiskUsageSample": {
      "type": "object",
      "description": "Disk usage sample. Values are across all disks.",
      "properties": {
        "averageIops": {
          "format": "float",
          "description": "Average IOPS sampled over a short window. Must be non-negative.",
          "type": "number"
        }
      },
      "id": "DiskUsageSample"
    },
    "RuntimeNetworkInfo": {
      "properties": {
        "connections": {
          "$ref": "NetworkConnectionList",
          "description": "Network connections."
        },
        "netstat": {
          "description": "Netstat (raw, OS-agnostic).",
          "type": "string"
        },
        "netstatTime": {
          "description": "Netstat time collected.",
          "$ref": "DateTime"
        }
      },
      "description": "Runtime networking information.",
      "id": "RuntimeNetworkInfo",
      "type": "object"
    },
    "AggregationHistogram": {
      "id": "AggregationHistogram",
      "properties": {
        "lowerBounds": {
          "items": {
            "format": "double",
            "type": "number"
          },
          "description": "Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.",
          "type": "array"
        }
      },
      "description": "Histogram of bucketed assets counts by field value.",
      "type": "object"
    },
    "GuestOsDetails": {
      "description": "Information from Guest-level collections.",
      "id": "GuestOsDetails",
      "type": "object",
      "properties": {
        "config": {
          "description": "OS and app configuration.",
          "$ref": "GuestConfigDetails"
        },
        "runtime": {
          "description": "Runtime information.",
          "$ref": "GuestRuntimeDetails"
        }
      }
    },
    "Money": {
      "type": "object",
      "description": "Represents an amount of money with its currency type.",
      "id": "Money",
      "properties": {
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "units": {
          "type": "string",
          "format": "int64",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        }
      }
    },
    "DailyResourceUsageAggregationCPU": {
      "description": "Statistical aggregation of CPU usage.",
      "id": "DailyResourceUsageAggregationCPU",
      "type": "object",
      "properties": {
        "utilizationPercentage": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "CPU utilization percentage."
        }
      }
    },
    "GuestInstalledApplicationList": {
      "type": "object",
      "description": "Guest installed application list.",
      "id": "GuestInstalledApplicationList",
      "properties": {
        "entries": {
          "items": {
            "$ref": "GuestInstalledApplication"
          },
          "type": "array",
          "description": "Application entries."
        }
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "properties": {},
      "description": "The request message for Operations.CancelOperation.",
      "type": "object"
    },
    "ListImportJobsResponse": {
      "type": "object",
      "description": "A response for listing import jobs.",
      "id": "ListImportJobsResponse",
      "properties": {
        "importJobs": {
          "description": "The list of import jobs.",
          "items": {
            "$ref": "ImportJob"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      }
    },
    "AssetList": {
      "type": "object",
      "id": "AssetList",
      "properties": {
        "assetIds": {
          "description": "Required. A list of asset IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Lists the asset IDs of all assets."
    },
    "Source": {
      "id": "Source",
      "type": "object",
      "description": "Source represents an object from which asset information is streamed to Migration Center.",
      "properties": {
        "state": {
          "description": "Output only. The state of the source.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETING",
            "INVALID"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "The source is active and ready to be used.",
            "In the process of being deleted.",
            "Source is in an invalid state. Asset frames reported to it will be ignored."
          ],
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The timestamp when the source was created.",
          "readOnly": true
        },
        "description": {
          "description": "Free-text description.",
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "type": "integer",
          "description": "The information confidence of the source. The higher the value, the higher the confidence."
        },
        "type": {
          "enumDescriptions": [
            "Unspecified",
            "Manually uploaded file (e.g. CSV)",
            "Guest-level info",
            "Inventory-level scan",
            "Third-party owned sources."
          ],
          "type": "string",
          "enum": [
            "SOURCE_TYPE_UNKNOWN",
            "SOURCE_TYPE_UPLOAD",
            "SOURCE_TYPE_GUEST_OS_SCAN",
            "SOURCE_TYPE_INVENTORY_SCAN",
            "SOURCE_TYPE_CUSTOM"
          ],
          "description": "Data source type."
        },
        "errorFrameCount": {
          "readOnly": true,
          "format": "int32",
          "type": "integer",
          "description": "Output only. The number of frames that were reported by the source and contained errors."
        },
        "name": {
          "description": "Output only. The full name of the source.",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The timestamp when the source was last updated."
        },
        "pendingFrameCount": {
          "format": "int32",
          "type": "integer",
          "description": "Output only. Number of frames that are still being processed.",
          "readOnly": true
        },
        "isManaged": {
          "description": "If `true`, the source is managed by other service(s).",
          "type": "boolean"
        },
        "displayName": {
          "description": "User-friendly display name.",
          "type": "string"
        }
      }
    },
    "VmwarePlatformDetails": {
      "properties": {
        "osid": {
          "description": "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.",
          "type": "string"
        },
        "esxVersion": {
          "description": "ESX version.",
          "type": "string"
        },
        "vcenterVersion": {
          "description": "vCenter version.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "VMware specific details.",
      "id": "VmwarePlatformDetails"
    },
    "UploadFileInfo": {
      "id": "UploadFileInfo",
      "properties": {
        "uri": {
          "readOnly": true,
          "description": "Output only. Upload URI for the file.",
          "type": "string"
        },
        "signedUri": {
          "type": "string",
          "description": "Output only. Upload URI for the file.",
          "readOnly": true
        },
        "uriExpirationTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Expiration time of the upload URI.",
          "readOnly": true
        },
        "headers": {
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          },
          "description": "Output only. The headers that were used to sign the URL."
        }
      },
      "description": "A resource that contains a URI to which a data file can be uploaded.",
      "type": "object"
    },
    "ListReportConfigsResponse": {
      "type": "object",
      "id": "ListReportConfigsResponse",
      "description": "Response message for listing report configs.",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "reportConfigs": {
          "items": {
            "$ref": "ReportConfig"
          },
          "type": "array",
          "description": "A list of report configs."
        }
      }
    },
    "AggregateAssetsValuesResponse": {
      "id": "AggregateAssetsValuesResponse",
      "properties": {
        "results": {
          "items": {
            "$ref": "AggregationResult"
          },
          "description": "The aggregation results.",
          "type": "array"
        }
      },
      "description": "A response to a request to aggregated assets values.",
      "type": "object"
    },
    "PlatformDetails": {
      "properties": {
        "vmwareDetails": {
          "$ref": "VmwarePlatformDetails",
          "description": "VMware specific details."
        },
        "azureVmDetails": {
          "description": "Azure VM specific details.",
          "$ref": "AzureVmPlatformDetails"
        },
        "physicalDetails": {
          "$ref": "PhysicalPlatformDetails",
          "description": "Physical machines platform details."
        },
        "genericDetails": {
          "description": "Generic platform details.",
          "$ref": "GenericPlatformDetails"
        },
        "awsEc2Details": {
          "$ref": "AwsEc2PlatformDetails",
          "description": "AWS EC2 specific details."
        }
      },
      "type": "object",
      "id": "PlatformDetails",
      "description": "Information about the platform."
    },
    "Frames": {
      "id": "Frames",
      "type": "object",
      "properties": {
        "framesData": {
          "type": "array",
          "description": "A repeated field of asset data.",
          "items": {
            "$ref": "AssetFrame"
          }
        }
      },
      "description": "Collection of frame data."
    },
    "GoogleKubernetesEngineMigrationTarget": {
      "type": "object",
      "properties": {},
      "description": "GKE migration target.",
      "id": "GoogleKubernetesEngineMigrationTarget"
    },
    "RunImportJobRequest": {
      "type": "object",
      "description": "A request to run an import job.",
      "id": "RunImportJobRequest",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      }
    },
    "ReportSummaryMachineFinding": {
      "type": "object",
      "description": "A set of findings that applies to assets of type Virtual/Physical Machine.",
      "properties": {
        "allocatedAssetCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of assets which were allocated."
        },
        "machineSeriesAllocations": {
          "type": "array",
          "description": "Distribution of assets based on the Machine Series.",
          "items": {
            "$ref": "ReportSummaryMachineSeriesAllocation"
          }
        },
        "allocatedDiskTypes": {
          "type": "array",
          "description": "Set of disk types allocated to assets.",
          "items": {
            "enumDescriptions": [
              "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
              "Standard HDD Persistent Disk.",
              "Balanced Persistent Disk.",
              "SSD Persistent Disk."
            ],
            "enum": [
              "PERSISTENT_DISK_TYPE_UNSPECIFIED",
              "PERSISTENT_DISK_TYPE_STANDARD",
              "PERSISTENT_DISK_TYPE_BALANCED",
              "PERSISTENT_DISK_TYPE_SSD"
            ],
            "type": "string"
          }
        },
        "allocatedRegions": {
          "description": "Set of regions in which the assets were allocated.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ReportSummaryMachineFinding"
    },
    "PhysicalPlatformDetails": {
      "id": "PhysicalPlatformDetails",
      "type": "object",
      "description": "Platform specific details for Physical Machines.",
      "properties": {
        "location": {
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field.",
          "type": "string"
        }
      }
    },
    "AggregationFrequency": {
      "type": "object",
      "properties": {},
      "id": "AggregationFrequency",
      "description": "Frequency distribution of all field values."
    },
    "NetworkConnection": {
      "type": "object",
      "properties": {
        "state": {
          "description": "Connection state (e.g. CONNECTED).",
          "type": "string"
        },
        "pid": {
          "type": "string",
          "format": "int64",
          "description": "Process ID."
        },
        "localIpAddress": {
          "type": "string",
          "description": "Local IP address."
        },
        "localPort": {
          "format": "int32",
          "type": "integer",
          "description": "Local port."
        },
        "remotePort": {
          "type": "integer",
          "description": "Remote port.",
          "format": "int32"
        },
        "processName": {
          "description": "Process or service name.",
          "type": "string"
        },
        "protocol": {
          "description": "Connection protocol (e.g. TCP/UDP).",
          "type": "string"
        },
        "remoteIpAddress": {
          "description": "Remote IP address.",
          "type": "string"
        }
      },
      "id": "NetworkConnection"
    },
    "Group": {
      "id": "Group",
      "properties": {
        "updateTime": {
          "description": "Output only. The timestamp when the group was last updated.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "description": {
          "description": "The description of the resource.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the group was created.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the group.",
          "readOnly": true
        },
        "displayName": {
          "description": "User-friendly display name.",
          "type": "string"
        }
      },
      "description": "A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups.",
      "type": "object"
    },
    "ListPreferenceSetsResponse": {
      "properties": {
        "preferenceSets": {
          "type": "array",
          "description": "The list of PreferenceSets",
          "items": {
            "$ref": "PreferenceSet"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Response message for listing preference sets.",
      "type": "object",
      "id": "ListPreferenceSetsResponse"
    },
    "FstabEntryList": {
      "properties": {
        "entries": {
          "items": {
            "$ref": "FstabEntry"
          },
          "type": "array",
          "description": "Fstab entries."
        }
      },
      "id": "FstabEntryList",
      "description": "Fstab content.",
      "type": "object"
    },
    "MemoryUsageSample": {
      "id": "MemoryUsageSample",
      "type": "object",
      "properties": {
        "utilizedPercentage": {
          "type": "number",
          "format": "float",
          "description": "Percentage of system memory utilized. Must be in the interval [0, 100]."
        }
      },
      "description": "Memory usage sample."
    },
    "DiskEntryList": {
      "id": "DiskEntryList",
      "type": "object",
      "description": "VM disks.",
      "properties": {
        "entries": {
          "items": {
            "$ref": "DiskEntry"
          },
          "description": "Disk entries.",
          "type": "array"
        }
      }
    },
    "MachineSeries": {
      "properties": {
        "code": {
          "description": "Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "MachineSeries",
      "description": "A Compute Engine machine series."
    },
    "RunningProcessList": {
      "type": "object",
      "description": "List of running guest OS processes.",
      "properties": {
        "processes": {
          "items": {
            "$ref": "RunningProcess"
          },
          "type": "array",
          "description": "Running process entries."
        }
      },
      "id": "RunningProcessList"
    },
    "ComputeEnginePreferences": {
      "type": "object",
      "properties": {
        "machinePreferences": {
          "$ref": "MachinePreferences",
          "description": "Preferences concerning the machine types to consider on Compute Engine."
        },
        "persistentDiskType": {
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ],
          "description": "Persistent disk type to use. If unspecified (default), all types are considered, based on available usage data.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ]
        },
        "licenseType": {
          "enum": [
            "LICENSE_TYPE_UNSPECIFIED",
            "LICENSE_TYPE_DEFAULT",
            "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value).",
            "Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with.",
            "Bring-your-own-license (BYOL) plan. User provides the OS license."
          ],
          "description": "License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan."
        }
      },
      "description": "The user preferences relating to Compute Engine target platform.",
      "id": "ComputeEnginePreferences"
    },
    "VirtualMachineNetworkDetails": {
      "description": "Details of network adapters and settings.",
      "properties": {
        "defaultGw": {
          "description": "Default gateway address.",
          "type": "string"
        },
        "publicIpAddress": {
          "type": "string",
          "description": "Public IP address of the machine."
        },
        "primaryIpAddress": {
          "type": "string",
          "description": "IP address of the machine."
        },
        "primaryMacAddress": {
          "type": "string",
          "description": "MAC address of the machine. This property is used to uniqly identify the machine."
        },
        "networkAdapters": {
          "description": "List of network adapters.",
          "$ref": "NetworkAdapterList"
        }
      },
      "id": "VirtualMachineNetworkDetails",
      "type": "object"
    },
    "ExecutionReport": {
      "description": "A resource that reports result of the import job execution.",
      "properties": {
        "executionErrors": {
          "description": "Validation errors encountered during the execution of the import job.",
          "$ref": "ValidationReport"
        },
        "totalRowsCount": {
          "format": "int32",
          "type": "integer",
          "description": "Total number of rows in the import job."
        },
        "jobErrors": {
          "type": "array",
          "items": {
            "$ref": "ImportError"
          },
          "description": "List of job-level errors. Deprecated, use the job errors under execution_errors instead."
        },
        "framesReported": {
          "format": "int32",
          "type": "integer",
          "description": "Total number of asset frames reported for the import job."
        }
      },
      "type": "object",
      "id": "ExecutionReport"
    },
    "RunningProcess": {
      "properties": {
        "pid": {
          "description": "Process ID.",
          "format": "int64",
          "type": "string"
        },
        "user": {
          "description": "User running the process.",
          "type": "string"
        },
        "cmdline": {
          "description": "Process full command line.",
          "type": "string"
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Process extended attributes."
        },
        "exePath": {
          "description": "Process binary path.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "RunningProcess",
      "description": "Guest OS running process details."
    },
    "AggregationSum": {
      "id": "AggregationSum",
      "properties": {},
      "description": "Sum of field values.",
      "type": "object"
    },
    "AggregationResultFrequency": {
      "type": "object",
      "properties": {
        "values": {
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "type": "object"
        }
      },
      "description": "The result of a frequency distribution aggregation.",
      "id": "AggregationResultFrequency"
    },
    "Location": {
      "properties": {
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        }
      },
      "type": "object",
      "id": "Location",
      "description": "A resource that represents a Google Cloud location."
    },
    "ComputeEngineShapeDescriptor": {
      "id": "ComputeEngineShapeDescriptor",
      "properties": {
        "series": {
          "description": "Compute Engine machine series.",
          "type": "string"
        },
        "memoryMb": {
          "format": "int32",
          "type": "integer",
          "description": "Memory in mebibytes."
        },
        "machineType": {
          "description": "Compute Engine machine type.",
          "type": "string"
        },
        "physicalCoreCount": {
          "description": "Number of physical cores.",
          "type": "integer",
          "format": "int32"
        },
        "logicalCoreCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of logical cores."
        }
      },
      "description": "Compute Engine target shape descriptor.",
      "type": "object"
    },
    "ReportSummaryHistogramChartDataBucket": {
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "id": "ReportSummaryHistogramChartDataBucket",
      "type": "object",
      "properties": {
        "lowerBound": {
          "format": "int64",
          "description": "Lower bound - inclusive.",
          "type": "string"
        },
        "count": {
          "type": "string",
          "format": "int64",
          "description": "Count of items in the bucket."
        },
        "upperBound": {
          "format": "int64",
          "description": "Upper bound - exclusive.",
          "type": "string"
        }
      }
    },
    "FrameViolationEntry": {
      "type": "object",
      "properties": {
        "violation": {
          "description": "A message describing the violation.",
          "type": "string"
        },
        "field": {
          "description": "The field of the original frame where the violation occurred.",
          "type": "string"
        }
      },
      "description": "A resource that contains a single violation of a reported `AssetFrame` resource.",
      "id": "FrameViolationEntry"
    },
    "AggregationResultHistogramBucket": {
      "properties": {
        "upperBound": {
          "format": "double",
          "description": "Upper bound - exclusive.",
          "type": "number"
        },
        "lowerBound": {
          "format": "double",
          "type": "number",
          "description": "Lower bound - inclusive."
        },
        "count": {
          "type": "string",
          "description": "Count of items in the bucket.",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "id": "AggregationResultHistogramBucket"
    },
    "AddAssetsToGroupRequest": {
      "description": "A request to add assets to a group.",
      "id": "AddAssetsToGroupRequest",
      "type": "object",
      "properties": {
        "allowExisting": {
          "description": "Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.",
          "type": "boolean"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        },
        "assets": {
          "description": "Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000.",
          "$ref": "AssetList"
        }
      }
    },
    "AggregationResult": {
      "description": "Message describing a result of an aggregation.",
      "id": "AggregationResult",
      "properties": {
        "count": {
          "$ref": "AggregationResultCount"
        },
        "histogram": {
          "$ref": "AggregationResultHistogram"
        },
        "field": {
          "type": "string"
        },
        "frequency": {
          "$ref": "AggregationResultFrequency"
        },
        "sum": {
          "$ref": "AggregationResultSum"
        }
      },
      "type": "object"
    },
    "NfsExport": {
      "type": "object",
      "properties": {
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The hosts or networks to which the export is being shared."
        },
        "exportDirectory": {
          "description": "The directory being exported.",
          "type": "string"
        }
      },
      "description": "NFS export.",
      "id": "NfsExport"
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "properties": {
        "requestedCancellation": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "verb": {
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "apiVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. API version used to start the operation."
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Represents the metadata of the long-running operation."
    },
    "UpdateAssetRequest": {
      "type": "object",
      "properties": {
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
        },
        "asset": {
          "description": "Required. The resource being updated.",
          "$ref": "Asset"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "description": "A request to update an asset.",
      "id": "UpdateAssetRequest"
    },
    "FitDescriptor": {
      "description": "Describes the fit level of an asset for migration to a specific target.",
      "type": "object",
      "properties": {
        "fitLevel": {
          "enumDescriptions": [
            "Not enough information.",
            "Fit.",
            "No Fit.",
            "Fit with effort."
          ],
          "type": "string",
          "description": "Fit level.",
          "enum": [
            "FIT_LEVEL_UNSPECIFIED",
            "FIT",
            "NO_FIT",
            "REQUIRES_EFFORT"
          ]
        }
      },
      "id": "FitDescriptor"
    },
    "VirtualMachineDiskDetails": {
      "description": "Details of VM disks.",
      "properties": {
        "lsblkJson": {
          "description": "Raw lsblk output in json.",
          "type": "string"
        },
        "disks": {
          "$ref": "DiskEntryList",
          "description": "List of disks."
        },
        "hddTotalFreeBytes": {
          "format": "int64",
          "description": "Total Disk Free Space.",
          "type": "string"
        },
        "hddTotalCapacityBytes": {
          "type": "string",
          "description": "Disk total Capacity.",
          "format": "int64"
        }
      },
      "type": "object",
      "id": "VirtualMachineDiskDetails"
    },
    "VmwareEngineMigrationTarget": {
      "type": "object",
      "description": "VMWare engine migration target.",
      "properties": {},
      "id": "VmwareEngineMigrationTarget"
    },
    "AssetFrame": {
      "description": "Contains data reported from an inventory source on an asset.",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "performanceSamples": {
          "description": "Asset performance data samples.",
          "type": "array",
          "items": {
            "$ref": "PerformanceSample"
          }
        },
        "attributes": {
          "type": "object",
          "description": "Generic asset attributes.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "virtualMachineDetails": {
          "description": "Asset information specific for virtual machines.",
          "$ref": "VirtualMachineDetails"
        },
        "reportTime": {
          "type": "string",
          "description": "The time the data was reported.",
          "format": "google-datetime"
        },
        "traceToken": {
          "type": "string",
          "description": "Optional. Trace token is optionally provided to assist with debugging and traceability."
        }
      },
      "id": "AssetFrame",
      "type": "object"
    },
    "BatchUpdateAssetsRequest": {
      "description": "A request to update a list of assets.",
      "type": "object",
      "properties": {
        "requests": {
          "description": "Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.",
          "items": {
            "$ref": "UpdateAssetRequest"
          },
          "type": "array"
        }
      },
      "id": "BatchUpdateAssetsRequest"
    },
    "AggregationCount": {
      "type": "object",
      "description": "Object count.",
      "id": "AggregationCount",
      "properties": {}
    },
    "ListLocationsResponse": {
      "type": "object",
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListLocationsResponse"
    },
    "BatchDeleteAssetsRequest": {
      "type": "object",
      "properties": {
        "allowMissing": {
          "type": "boolean",
          "description": "Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`."
        },
        "names": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. The IDs of the assets to delete. A maximum of 10 assets can be deleted in a batch. format: projects/{project}/locations/{location}/asset/{name}."
        }
      },
      "description": "A request to delete a list of asset.",
      "id": "BatchDeleteAssetsRequest"
    },
    "CpuUsageSample": {
      "type": "object",
      "properties": {
        "utilizedPercentage": {
          "type": "number",
          "description": "Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.",
          "format": "float"
        }
      },
      "description": "CPU usage sample.",
      "id": "CpuUsageSample"
    },
    "DailyResourceUsageAggregationNetwork": {
      "id": "DailyResourceUsageAggregationNetwork",
      "type": "object",
      "description": "Statistical aggregation of network usage.",
      "properties": {
        "ingressBps": {
          "description": "Network ingress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        },
        "egressBps": {
          "description": "Network egress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      }
    },
    "GuestRuntimeDetails": {
      "description": "Guest OS runtime information.",
      "properties": {
        "processes": {
          "description": "Running processes.",
          "$ref": "RunningProcessList"
        },
        "openFileList": {
          "description": "Open files information.",
          "$ref": "OpenFileList"
        },
        "machineName": {
          "description": "Machine name.",
          "type": "string"
        },
        "networkInfo": {
          "description": "Runtime network information (connections, ports).",
          "$ref": "RuntimeNetworkInfo"
        },
        "services": {
          "$ref": "RunningServiceList",
          "description": "Running background services."
        },
        "installedApps": {
          "$ref": "GuestInstalledApplicationList",
          "description": "Installed applications information."
        },
        "lastUptime": {
          "$ref": "Date",
          "description": "Date since last booted (last uptime date)."
        },
        "domain": {
          "type": "string",
          "description": "Domain, e.g. c.stratozone-development.internal."
        }
      },
      "id": "GuestRuntimeDetails",
      "type": "object"
    },
    "FstabEntry": {
      "type": "object",
      "id": "FstabEntry",
      "properties": {
        "vfstype": {
          "type": "string",
          "description": "The type of the filesystem."
        },
        "passno": {
          "format": "int32",
          "description": "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.",
          "type": "integer"
        },
        "file": {
          "type": "string",
          "description": "The mount point for the filesystem."
        },
        "freq": {
          "format": "int32",
          "description": "Used by dump to determine which filesystems need to be dumped.",
          "type": "integer"
        },
        "mntops": {
          "description": "Mount options associated with the filesystem.",
          "type": "string"
        },
        "spec": {
          "description": "The block special device or remote filesystem to be mounted.",
          "type": "string"
        }
      },
      "description": "Single fstab entry."
    },
    "BiosDetails": {
      "id": "BiosDetails",
      "type": "object",
      "description": "Details about the BIOS.",
      "properties": {
        "biosName": {
          "description": "BIOS name.",
          "type": "string"
        },
        "biosReleaseDate": {
          "description": "BIOS release date.",
          "type": "string"
        },
        "smbiosUuid": {
          "description": "SMBIOS UUID.",
          "type": "string"
        },
        "biosManufacturer": {
          "description": "BIOS manufacturer.",
          "type": "string"
        },
        "biosVersion": {
          "type": "string",
          "description": "BIOS version."
        }
      }
    },
    "RegionPreferences": {
      "type": "object",
      "description": "The user preferences relating to target regions.",
      "id": "RegionPreferences",
      "properties": {
        "preferredRegions": {
          "description": "A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AwsEc2PlatformDetails": {
      "id": "AwsEc2PlatformDetails",
      "description": "AWS EC2 specific details.",
      "properties": {
        "machineTypeLabel": {
          "type": "string",
          "description": "AWS platform's machine type label."
        },
        "location": {
          "type": "string",
          "description": "The location of the machine in the AWS format."
        }
      },
      "type": "object"
    },
    "ListAssetsResponse": {
      "properties": {
        "assets": {
          "items": {
            "$ref": "Asset"
          },
          "type": "array",
          "description": "A list of assets."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        }
      },
      "description": "Response message for listing assets.",
      "id": "ListAssetsResponse",
      "type": "object"
    },
    "RunningServiceList": {
      "properties": {
        "services": {
          "type": "array",
          "description": "Running service entries.",
          "items": {
            "$ref": "RunningService"
          }
        }
      },
      "id": "RunningServiceList",
      "type": "object",
      "description": "List of running guest OS services."
    },
    "GuestInstalledApplication": {
      "properties": {
        "vendor": {
          "description": "Installed application vendor.",
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "Installed application version."
        },
        "name": {
          "description": "Installed application name.",
          "type": "string"
        },
        "path": {
          "description": "Source path.",
          "type": "string"
        },
        "time": {
          "description": "Date application was installed.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Guest installed application information.",
      "id": "GuestInstalledApplication"
    },
    "DailyResourceUsageAggregation": {
      "description": "Usage data aggregation for a single day.",
      "properties": {
        "network": {
          "description": "Network usage.",
          "$ref": "DailyResourceUsageAggregationNetwork"
        },
        "cpu": {
          "description": "CPU usage.",
          "$ref": "DailyResourceUsageAggregationCPU"
        },
        "date": {
          "$ref": "Date",
          "description": "Aggregation date. Day boundaries are at midnight UTC."
        },
        "memory": {
          "description": "Memory usage.",
          "$ref": "DailyResourceUsageAggregationMemory"
        },
        "disk": {
          "$ref": "DailyResourceUsageAggregationDisk",
          "description": "Disk usage."
        }
      },
      "type": "object",
      "id": "DailyResourceUsageAggregation"
    },
    "InsightList": {
      "type": "object",
      "description": "Message containing insights list.",
      "properties": {
        "updateTime": {
          "description": "Output only. Update timestamp.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "insights": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Insight"
          },
          "description": "Output only. Insights of the list."
        }
      },
      "id": "InsightList"
    },
    "ListErrorFramesResponse": {
      "description": "A response for listing error frames.",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "errorFrames": {
          "items": {
            "$ref": "ErrorFrame"
          },
          "type": "array",
          "description": "The list of error frames."
        }
      },
      "id": "ListErrorFramesResponse",
      "type": "object"
    },
    "RunningService": {
      "description": "Guest OS running service details.",
      "type": "object",
      "properties": {
        "pid": {
          "type": "string",
          "description": "Service pid.",
          "format": "int64"
        },
        "exePath": {
          "description": "Service binary path.",
          "type": "string"
        },
        "status": {
          "description": "Service status.",
          "type": "string"
        },
        "state": {
          "description": "Service state (raw, OS-agnostic).",
          "type": "string"
        },
        "startMode": {
          "description": "Service start mode (raw, OS-agnostic).",
          "type": "string"
        },
        "cmdline": {
          "type": "string",
          "description": "Service command line."
        },
        "name": {
          "description": "Service name.",
          "type": "string"
        }
      },
      "id": "RunningService"
    },
    "Insight": {
      "properties": {
        "migrationInsight": {
          "description": "Output only. An insight about potential migrations for an asset.",
          "$ref": "MigrationInsight",
          "readOnly": true
        }
      },
      "description": "An insight about an asset.",
      "id": "Insight",
      "type": "object"
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Settings": {
      "description": "Describes the Migration Center settings related to the project.",
      "id": "Settings",
      "properties": {
        "preferenceSet": {
          "description": "The preference set used by default for a project.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the resource.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "DiskPartitionList": {
      "type": "object",
      "properties": {
        "entries": {
          "description": "Partition entries.",
          "type": "array",
          "items": {
            "$ref": "DiskPartition"
          }
        }
      },
      "id": "DiskPartitionList",
      "description": "Disk partition list."
    },
    "ReportConfigGroupPreferenceSetAssignment": {
      "description": "Represents a combination of a group with a preference set.",
      "properties": {
        "group": {
          "description": "Required. Name of the group.",
          "type": "string"
        },
        "preferenceSet": {
          "type": "string",
          "description": "Required. Name of the Preference Set."
        }
      },
      "id": "ReportConfigGroupPreferenceSetAssignment",
      "type": "object"
    },
    "PerformanceSample": {
      "type": "object",
      "id": "PerformanceSample",
      "properties": {
        "disk": {
          "description": "Disk usage sample.",
          "$ref": "DiskUsageSample"
        },
        "cpu": {
          "description": "CPU usage sample.",
          "$ref": "CpuUsageSample"
        },
        "memory": {
          "$ref": "MemoryUsageSample",
          "description": "Memory usage sample."
        },
        "network": {
          "$ref": "NetworkUsageSample",
          "description": "Network usage sample."
        },
        "sampleTime": {
          "description": "Time the sample was collected.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "description": "Performance data sample."
    },
    "Date": {
      "properties": {
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
        },
        "day": {
          "format": "int32",
          "type": "integer",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
        }
      },
      "id": "Date",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "type": "object"
    },
    "Empty": {
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "id": "Empty"
    },
    "ImportJob": {
      "properties": {
        "inlinePayload": {
          "$ref": "InlinePayloadInfo",
          "description": "The payload is included in the request, mainly used for small import jobs."
        },
        "createTime": {
          "description": "Output only. The timestamp when the import job was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "state": {
          "readOnly": true,
          "description": "Output only. The state of the import job.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "The import job is pending.",
            "The processing of the import job is ongoing.",
            "The import job processing has completed.",
            "The import job failed to be processed.",
            "The import job is being validated.",
            "The import job contains blocking errors.",
            "The validation of the job completed with no blocking errors."
          ],
          "enum": [
            "IMPORT_JOB_STATE_UNSPECIFIED",
            "IMPORT_JOB_STATE_PENDING",
            "IMPORT_JOB_STATE_RUNNING",
            "IMPORT_JOB_STATE_COMPLETED",
            "IMPORT_JOB_STATE_FAILED",
            "IMPORT_JOB_STATE_VALIDATING",
            "IMPORT_JOB_STATE_FAILED_VALIDATION",
            "IMPORT_JOB_STATE_READY"
          ]
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the import job was last updated.",
          "type": "string"
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "completeTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp when the import job was completed."
        },
        "assetSource": {
          "type": "string",
          "description": "Required. Reference to a source."
        },
        "validationReport": {
          "description": "Output only. The report with the validation results of the import job.",
          "readOnly": true,
          "$ref": "ValidationReport"
        },
        "gcsPayload": {
          "$ref": "GCSPayloadInfo",
          "description": "The payload is in Google Cloud Storage."
        },
        "executionReport": {
          "readOnly": true,
          "$ref": "ExecutionReport",
          "description": "Output only. The report with the results of running the import job."
        },
        "name": {
          "description": "Output only. The full name of the import job.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "id": "ImportJob",
      "description": "A resource that represents the background job that imports asset frames."
    },
    "AggregationResultHistogram": {
      "properties": {
        "buckets": {
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "type": "array",
          "items": {
            "$ref": "AggregationResultHistogramBucket"
          }
        }
      },
      "id": "AggregationResultHistogram",
      "description": "The result of a bucketed histogram aggregation.",
      "type": "object"
    },
    "Report": {
      "id": "Report",
      "type": "object",
      "description": "Report represents a point-in-time rendering of the ReportConfig results.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. Name of resource.",
          "readOnly": true
        },
        "summary": {
          "$ref": "ReportSummary",
          "description": "Output only. Summary view of the Report.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "state": {
          "enumDescriptions": [
            "Default Report creation state.",
            "Creating Report.",
            "Successfully created Report.",
            "Failed to create Report."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "SUCCEEDED",
            "FAILED"
          ],
          "type": "string",
          "description": "Report creation state."
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "TOTAL_COST_OF_OWNERSHIP"
          ],
          "type": "string",
          "description": "Report type.",
          "enumDescriptions": [
            "Default Report type.",
            "Total cost of ownership Report type."
          ]
        },
        "createTime": {
          "description": "Output only. Creation timestamp.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Last update timestamp."
        },
        "description": {
          "description": "Free-text description.",
          "type": "string"
        }
      }
    },
    "OpenFileList": {
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "OpenFileDetails"
          },
          "description": "Open file details entries.",
          "type": "array"
        }
      },
      "description": "Open file list.",
      "id": "OpenFileList"
    },
    "Asset": {
      "id": "Asset",
      "description": "An asset represents a resource in your environment. Asset types include virtual machines and databases.",
      "properties": {
        "performanceData": {
          "description": "Output only. Performance data for the asset.",
          "readOnly": true,
          "$ref": "AssetPerformanceData"
        },
        "sources": {
          "type": "array",
          "description": "Output only. The list of sources contributing to the asset.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the asset was last updated.",
          "format": "google-datetime"
        },
        "virtualMachineDetails": {
          "description": "Output only. Asset information specific for virtual machines.",
          "$ref": "VirtualMachineDetails",
          "readOnly": true
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "insightList": {
          "description": "Output only. The list of insights associated with the asset.",
          "$ref": "InsightList",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The timestamp when the asset was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "name": {
          "description": "Output only. The full name of the asset.",
          "readOnly": true,
          "type": "string"
        },
        "attributes": {
          "description": "Generic asset attributes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "assignedGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Output only. The list of groups that the asset is assigned to."
        }
      },
      "type": "object"
    },
    "HostsEntryList": {
      "type": "object",
      "description": "Hosts content.",
      "id": "HostsEntryList",
      "properties": {
        "entries": {
          "items": {
            "$ref": "HostsEntry"
          },
          "description": "Hosts entries.",
          "type": "array"
        }
      }
    },
    "Selinux": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "description": "SELinux mode enforcing / permissive."
        },
        "enabled": {
          "description": "Is SELinux enabled.",
          "type": "boolean"
        }
      },
      "description": "SELinux details.",
      "id": "Selinux"
    },
    "DailyResourceUsageAggregationDisk": {
      "description": "Statistical aggregation of disk usage.",
      "id": "DailyResourceUsageAggregationDisk",
      "properties": {
        "iops": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Disk I/O operations per second."
        }
      },
      "type": "object"
    },
    "ReportSummaryUtilizationChartData": {
      "description": "Utilization Chart is a specific type of visualization which displays a metric classified into \"Used\" and \"Free\" buckets.",
      "id": "ReportSummaryUtilizationChartData",
      "properties": {
        "used": {
          "format": "int64",
          "description": "Aggregate value which falls into the \"Used\" bucket.",
          "type": "string"
        },
        "free": {
          "description": "Aggregate value which falls into the \"Free\" bucket.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ValidateImportJobRequest": {
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ValidateImportJobRequest",
      "description": "A request to validate an import job."
    },
    "VirtualMachinePreferences": {
      "id": "VirtualMachinePreferences",
      "type": "object",
      "properties": {
        "commitmentPlan": {
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan.",
            "1 year commitment.",
            "3 years commitment."
          ],
          "type": "string",
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "COMMITMENT_PLAN_NONE",
            "COMMITMENT_PLAN_ONE_YEAR",
            "COMMITMENT_PLAN_THREE_YEARS"
          ]
        },
        "regionPreferences": {
          "$ref": "RegionPreferences",
          "description": "Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with."
        },
        "computeEnginePreferences": {
          "$ref": "ComputeEnginePreferences",
          "description": "Compute Engine preferences concern insights and recommendations for Compute Engine target."
        },
        "sizingOptimizationStrategy": {
          "type": "string",
          "enum": [
            "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED",
            "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE",
            "SIZING_OPTIMIZATION_STRATEGY_MODERATE",
            "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE"
          ],
          "enumDescriptions": [
            "Unspecified (default value).",
            "No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.",
            "Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.",
            "Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs."
          ],
          "description": "Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with."
        }
      },
      "description": "VirtualMachinePreferences enables you to create sets of assumptions, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets."
    },
    "DailyResourceUsageAggregationMemory": {
      "description": "Statistical aggregation of memory usage.",
      "type": "object",
      "properties": {
        "utilizationPercentage": {
          "description": "Memory utilization percentage.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "id": "DailyResourceUsageAggregationMemory"
    },
    "ValidationReport": {
      "id": "ValidationReport",
      "properties": {
        "fileValidations": {
          "description": "List of errors found in files.",
          "type": "array",
          "items": {
            "$ref": "FileValidationReport"
          }
        },
        "jobErrors": {
          "type": "array",
          "items": {
            "$ref": "ImportError"
          },
          "description": "List of job level errors."
        }
      },
      "type": "object",
      "description": "A resource that aggregates errors across import job files."
    },
    "ImportDataFile": {
      "description": "A resource that represents a payload file in an import job.",
      "id": "ImportDataFile",
      "properties": {
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The timestamp when the file was created."
        },
        "format": {
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ],
          "description": "Required. The payload format.",
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the file."
        },
        "uploadFileInfo": {
          "description": "Information about a file that is uploaded to a storage service.",
          "$ref": "UploadFileInfo"
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The state of the import data file.",
          "enumDescriptions": [
            "Default value.",
            "The data file is being created.",
            "The data file completed initialization."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE"
          ]
        }
      },
      "type": "object"
    },
    "ListImportDataFilesResponse": {
      "description": "Response for listing payload files of an import job.",
      "id": "ListImportDataFilesResponse",
      "properties": {
        "importDataFiles": {
          "items": {
            "$ref": "ImportDataFile"
          },
          "description": "The list of import data files.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AggregationResultCount": {
      "properties": {
        "value": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The result of a count aggregation.",
      "id": "AggregationResultCount"
    },
    "Operation": {
      "type": "object",
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        }
      }
    },
    "ReportSummaryGroupFinding": {
      "id": "ReportSummaryGroupFinding",
      "description": "Summary Findings for a specific Group.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display Name for the Group."
        },
        "preferenceSetFindings": {
          "type": "array",
          "description": "Findings for each of the PreferenceSets for this group.",
          "items": {
            "$ref": "ReportSummaryGroupPreferenceSetFinding"
          }
        },
        "description": {
          "type": "string",
          "description": "Description for the Group."
        },
        "assetAggregateStats": {
          "description": "Summary statistics for all the assets in this group.",
          "$ref": "ReportSummaryAssetAggregateStats"
        },
        "overlappingAssetCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of the number of assets in this group which are also included in another group within the same report."
        }
      },
      "type": "object"
    },
    "DiskPartition": {
      "type": "object",
      "properties": {
        "capacityBytes": {
          "type": "string",
          "description": "Partition capacity.",
          "format": "int64"
        },
        "type": {
          "description": "Partition type (e.g. BIOS boot).",
          "type": "string"
        },
        "subPartitions": {
          "description": "Sub-partitions.",
          "$ref": "DiskPartitionList"
        },
        "freeBytes": {
          "format": "int64",
          "description": "Partition free space.",
          "type": "string"
        },
        "fileSystem": {
          "type": "string",
          "description": "Partition file system."
        },
        "uuid": {
          "description": "Partition UUID.",
          "type": "string"
        },
        "mountPoint": {
          "type": "string",
          "description": "Mount pount (Linux/Windows) or drive letter (Windows)."
        }
      },
      "description": "Disk Partition details.",
      "id": "DiskPartition"
    },
    "ReportSummaryMachineSeriesAllocation": {
      "id": "ReportSummaryMachineSeriesAllocation",
      "description": "Represents a data point tracking the count of assets allocated for a specific Machine Series.",
      "properties": {
        "allocatedAssetCount": {
          "description": "Count of assets allocated to this machine series.",
          "type": "string",
          "format": "int64"
        },
        "machineSeries": {
          "description": "The Machine Series (e.g. \"E2\", \"N2\")",
          "$ref": "MachineSeries"
        }
      },
      "type": "object"
    },
    "ReportSummaryGroupPreferenceSetFinding": {
      "description": "Summary Findings for a specific Group/PreferenceSet combination.",
      "id": "ReportSummaryGroupPreferenceSetFinding",
      "properties": {
        "monthlyCostCompute": {
          "$ref": "Money",
          "description": "Compute monthly cost for this preference set."
        },
        "monthlyCostOther": {
          "$ref": "Money",
          "description": "Miscellaneous monthly cost for this preference set."
        },
        "machineFinding": {
          "description": "A set of findings that applies to all machines in the input.",
          "$ref": "ReportSummaryMachineFinding"
        },
        "topPriority": {
          "type": "string",
          "description": "Text describing the business priority specified for this Preference Set"
        },
        "monthlyCostNetworkEgress": {
          "$ref": "Money",
          "description": "Network Egress monthly cost for this preference set."
        },
        "pricingTrack": {
          "description": "Text describing the pricing track specified for this Preference Set",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Display Name of the Preference Set"
        },
        "description": {
          "type": "string",
          "description": "Description for the Preference Set."
        },
        "monthlyCostStorage": {
          "$ref": "Money",
          "description": "Storage monthly cost for this preference set."
        },
        "preferredRegion": {
          "description": "Target region for this Preference Set",
          "type": "string"
        },
        "monthlyCostOsLicense": {
          "$ref": "Money",
          "description": "Licensing monthly cost for this preference set."
        },
        "machinePreferences": {
          "$ref": "VirtualMachinePreferences",
          "description": "A set of preferences that applies to all machines in the context."
        },
        "monthlyCostTotal": {
          "$ref": "Money",
          "description": "Total monthly cost for this preference set."
        }
      },
      "type": "object"
    },
    "VirtualMachineArchitectureDetails": {
      "description": "Details of the VM architecture.",
      "properties": {
        "cpuSocketCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of processor sockets allocated to the machine."
        },
        "vendor": {
          "description": "Hardware vendor.",
          "type": "string"
        },
        "cpuArchitecture": {
          "type": "string",
          "description": "CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc."
        },
        "hyperthreading": {
          "type": "string",
          "enum": [
            "HYPER_THREADING_UNSPECIFIED",
            "HYPER_THREADING_DISABLED",
            "HYPER_THREADING_ENABLED"
          ],
          "enumDescriptions": [
            "Unknown (default value).",
            "Hyperthreading is disabled.",
            "Hyperthreading is enabled."
          ],
          "description": "CPU hyperthreading support."
        },
        "firmware": {
          "description": "Firmware (BIOS/efi).",
          "type": "string"
        },
        "bios": {
          "description": "BIOS Details.",
          "$ref": "BiosDetails"
        },
        "cpuName": {
          "description": "CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc.",
          "type": "string"
        },
        "cpuManufacturer": {
          "type": "string",
          "description": "CPU manufacturer, e.g., \"Intel\", \"AMD\"."
        },
        "cpuThreadCount": {
          "description": "Number of CPU threads allocated to the machine.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "VirtualMachineArchitectureDetails"
    },
    "DailyResourceUsageAggregationStats": {
      "id": "DailyResourceUsageAggregationStats",
      "type": "object",
      "description": "Statistical aggregation of samples for a single resource usage.",
      "properties": {
        "peak": {
          "description": "Peak usage value.",
          "format": "float",
          "type": "number"
        },
        "average": {
          "format": "float",
          "type": "number",
          "description": "Average usage value."
        },
        "ninteyFifthPercentile": {
          "format": "float",
          "description": "95th percentile usage value.",
          "type": "number"
        },
        "median": {
          "format": "float",
          "description": "Median usage value.",
          "type": "number"
        }
      }
    },
    "ReportSummary": {
      "type": "object",
      "id": "ReportSummary",
      "properties": {
        "allAssetsStats": {
          "$ref": "ReportSummaryAssetAggregateStats",
          "description": "Aggregate statistics for all the assets across all the groups."
        },
        "groupFindings": {
          "description": "Findings for each Group included in this report.",
          "type": "array",
          "items": {
            "$ref": "ReportSummaryGroupFinding"
          }
        }
      },
      "description": "Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report."
    },
    "NetworkAdapterDetails": {
      "id": "NetworkAdapterDetails",
      "type": "object",
      "description": "Details of network adapter.",
      "properties": {
        "macAddress": {
          "type": "string",
          "description": "MAC address."
        },
        "addresses": {
          "description": "NetworkAddressList",
          "$ref": "NetworkAddressList"
        },
        "adapterType": {
          "type": "string",
          "description": "Network adapter type (e.g. VMXNET3)."
        }
      }
    },
    "ReportSummaryAssetAggregateStats": {
      "properties": {
        "coreCountHistogram": {
          "description": "Histogram showing a distribution of CPU core counts.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "operatingSystem": {
          "$ref": "ReportSummaryChartData",
          "description": "Count of assets grouped by Operating System families."
        },
        "totalAssets": {
          "description": "Count of the number of unique assets in this collection.",
          "type": "string",
          "format": "int64"
        },
        "storageBytesHistogram": {
          "$ref": "ReportSummaryHistogramChartData",
          "description": "Histogram showing a distribution of memory sizes."
        },
        "totalStorageBytes": {
          "description": "Sum of persistent storage in bytes of all the assets in this collection.",
          "format": "int64",
          "type": "string"
        },
        "totalMemoryBytes": {
          "format": "int64",
          "type": "string",
          "description": "Sum of the memory in bytes of all the assets in this collection."
        },
        "memoryBytesHistogram": {
          "$ref": "ReportSummaryHistogramChartData",
          "description": "Histogram showing a distribution of memory sizes."
        },
        "storageUtilizationChart": {
          "$ref": "ReportSummaryUtilizationChartData",
          "description": "Total memory split into Used/Free buckets."
        },
        "memoryUtilizationChart": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryUtilizationChartData"
        },
        "totalCores": {
          "type": "string",
          "description": "Sum of the CPU core count of all the assets in this collection.",
          "format": "int64"
        },
        "assetAge": {
          "description": "Count of assets grouped by age.",
          "$ref": "ReportSummaryChartData"
        },
        "storageUtilization": {
          "$ref": "ReportSummaryChartData",
          "description": "Total storage split into Used/Free buckets."
        },
        "memoryUtilization": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryChartData"
        }
      },
      "id": "ReportSummaryAssetAggregateStats",
      "description": "Aggregate statistics for a collection of assets.",
      "type": "object"
    },
    "RemoveAssetsFromGroupRequest": {
      "type": "object",
      "id": "RemoveAssetsFromGroupRequest",
      "description": "A request to remove assets from a group.",
      "properties": {
        "allowMissing": {
          "type": "boolean",
          "description": "Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`."
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        },
        "assets": {
          "description": "Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000.",
          "$ref": "AssetList"
        }
      }
    },
    "ImportRowError": {
      "type": "object",
      "id": "ImportRowError",
      "description": "A resource that reports the import job errors at row level.",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "ImportError"
          },
          "description": "The list of errors detected in the row."
        },
        "vmUuid": {
          "type": "string",
          "description": "The VM UUID."
        },
        "vmName": {
          "type": "string",
          "description": "The name of the VM in the row."
        },
        "rowNumber": {
          "type": "integer",
          "description": "The row number where the error was detected.",
          "format": "int32"
        }
      }
    },
    "MachinePreferences": {
      "properties": {
        "allowedMachineSeries": {
          "description": "Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.",
          "type": "array",
          "items": {
            "$ref": "MachineSeries"
          }
        }
      },
      "id": "MachinePreferences",
      "type": "object",
      "description": "The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions."
    },
    "NetworkConnectionList": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "NetworkConnection"
          },
          "description": "Network connection entries."
        }
      },
      "id": "NetworkConnectionList",
      "description": "Network connection list."
    },
    "Aggregation": {
      "id": "Aggregation",
      "type": "object",
      "description": "Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.",
      "properties": {
        "sum": {
          "description": "Sum over a numeric field.",
          "$ref": "AggregationSum"
        },
        "frequency": {
          "description": "Creates a frequency distribution of all field values.",
          "$ref": "AggregationFrequency"
        },
        "count": {
          "description": "Count the number of matching objects.",
          "$ref": "AggregationCount"
        },
        "histogram": {
          "$ref": "AggregationHistogram",
          "description": "Creates a bucketed histogram of field values."
        },
        "field": {
          "description": "The name of the field on which to aggregate.",
          "type": "string"
        }
      }
    },
    "ListGroupsResponse": {
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "Group"
          },
          "description": "The list of Group"
        }
      },
      "type": "object",
      "id": "ListGroupsResponse",
      "description": "A response for listing groups."
    },
    "AggregateAssetsValuesRequest": {
      "description": "A request to aggregate one or more values.",
      "id": "AggregateAssetsValuesRequest",
      "properties": {
        "aggregations": {
          "items": {
            "$ref": "Aggregation"
          },
          "type": "array",
          "description": "Array of aggregations to perform. Up to 25 aggregations can be defined."
        },
        "filter": {
          "type": "string",
          "description": "The aggregation will be performed on assets that match the provided filter."
        }
      },
      "type": "object"
    },
    "ReportSummaryChartData": {
      "properties": {
        "dataPoints": {
          "items": {
            "$ref": "ReportSummaryChartDataDataPoint"
          },
          "type": "array",
          "description": "Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value."
        }
      },
      "description": "Describes a collection of data points rendered as a Chart.",
      "id": "ReportSummaryChartData",
      "type": "object"
    },
    "NetworkAdapterList": {
      "description": "List of network adapters.",
      "properties": {
        "networkAdapters": {
          "items": {
            "$ref": "NetworkAdapterDetails"
          },
          "type": "array",
          "description": "Network adapter descriptions."
        }
      },
      "id": "NetworkAdapterList",
      "type": "object"
    },
    "PayloadFile": {
      "id": "PayloadFile",
      "description": "Payload file for inline import job payload.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The file name.",
          "type": "string"
        },
        "data": {
          "description": "The file data.",
          "format": "byte",
          "type": "string"
        }
      }
    },
    "ReportAssetFramesResponse": {
      "description": "A response to a call to `ReportAssetFrame`.",
      "type": "object",
      "id": "ReportAssetFramesResponse",
      "properties": {}
    },
    "ErrorFrame": {
      "properties": {
        "name": {
          "description": "Output only. The identifier of the ErrorFrame.",
          "type": "string",
          "readOnly": true
        },
        "originalFrame": {
          "readOnly": true,
          "description": "Output only. The frame that was originally reported.",
          "$ref": "AssetFrame"
        },
        "ingestionTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Frame ingestion time.",
          "readOnly": true
        },
        "violations": {
          "type": "array",
          "description": "Output only. All the violations that were detected for the frame.",
          "items": {
            "$ref": "FrameViolationEntry"
          },
          "readOnly": true
        }
      },
      "id": "ErrorFrame",
      "type": "object",
      "description": "Message representing a frame which failed to be processed due to an error."
    },
    "ReportSummaryHistogramChartData": {
      "description": "A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.",
      "id": "ReportSummaryHistogramChartData",
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "$ref": "ReportSummaryHistogramChartDataBucket"
          },
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity."
        }
      }
    },
    "AzureVmPlatformDetails": {
      "type": "object",
      "properties": {
        "machineTypeLabel": {
          "description": "Azure platform's machine type label.",
          "type": "string"
        },
        "location": {
          "description": "The location of the machine in the Azure format.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Azure platform's provisioning state.",
          "type": "string"
        }
      },
      "id": "AzureVmPlatformDetails",
      "description": "Azure VM specific details."
    },
    "ReportSummaryChartDataDataPoint": {
      "description": "Describes a single data point in the Chart.",
      "id": "ReportSummaryChartDataDataPoint",
      "properties": {
        "label": {
          "type": "string",
          "description": "The X-axis label for this data point."
        },
        "value": {
          "type": "number",
          "description": "The Y-axis value for this data point.",
          "format": "double"
        }
      },
      "type": "object"
    },
    "TimeZone": {
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "properties": {
        "version": {
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
          "type": "string"
        },
        "id": {
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
          "type": "string"
        }
      },
      "id": "TimeZone",
      "type": "object"
    }
  },
  "canonicalName": "Migration Center API",
  "servicePath": "",
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "basePath": "",
  "discoveryVersion": "v1",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "sources": {
              "resources": {
                "errorFrames": {
                  "methods": {
                    "get": {
                      "response": {
                        "$ref": "ErrorFrame"
                      },
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames/{errorFramesId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "view": {
                          "type": "string",
                          "description": "Optional. An optional view mode to control the level of details for the frame. The default is a basic frame view.",
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "location": "query",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ]
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/errorFrames/[^/]+$",
                          "type": "string",
                          "description": "Required. The name of the frame to retrieve. Format: projects/{project}/locations/{location}/sources/{source}/errorFrames/{error_frame}",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets the details of an error frame.",
                      "id": "migrationcenter.projects.locations.sources.errorFrames.get"
                    },
                    "list": {
                      "path": "v1alpha1/{+parent}/errorFrames",
                      "response": {
                        "$ref": "ListErrorFramesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "migrationcenter.projects.locations.sources.errorFrames.list",
                      "httpMethod": "GET",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists all error frames in a given source and location.",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. Parent value (the source) for `ListErrorFramesRequest`."
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "type": "integer",
                          "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A token identifying a page of results the server should return."
                        },
                        "view": {
                          "description": "Optional. An optional view mode to control the level of details of each error frame. The default is a BASIC frame view.",
                          "type": "string",
                          "location": "query",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ],
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "patch": {
                  "httpMethod": "PATCH",
                  "description": "Updates the parameters of a source.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "required": true,
                      "description": "Output only. The full name of the source.",
                      "location": "path",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "updateMask": {
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Source` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "request": {
                    "$ref": "Source"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.sources.patch",
                  "path": "v1alpha1/{+name}"
                },
                "get": {
                  "description": "Gets the details of a source.",
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "response": {
                    "$ref": "Source"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the resource."
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.sources.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "required": true
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "description": "Deletes a source.",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.sources.delete",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "description": "Lists all the sources in a given project and location.",
                  "response": {
                    "$ref": "ListSourcesResponse"
                  },
                  "path": "v1alpha1/{+parent}/sources",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Parent value for `ListSourcesRequest`.",
                      "location": "path"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results that the server should return."
                    },
                    "filter": {
                      "location": "query",
                      "description": "Filtering results.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                      "type": "integer"
                    }
                  },
                  "id": "migrationcenter.projects.locations.sources.list",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new source in a given project and location.",
                  "httpMethod": "POST",
                  "id": "migrationcenter.projects.locations.sources.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "sourceId": {
                      "description": "Required. User specified ID for the source. It will become the last component of the source name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Value for parent.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "Source"
                  },
                  "path": "v1alpha1/{+parent}/sources",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+name}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.operations.list",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the operation's parent resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The standard list page token.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true
                    }
                  },
                  "id": "migrationcenter.projects.locations.operations.get",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "cancel": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.operations.cancel",
                  "path": "v1alpha1/{+name}:cancel",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "httpMethod": "POST"
                },
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "id": "migrationcenter.projects.locations.operations.delete",
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  }
                }
              }
            },
            "assets": {
              "methods": {
                "list": {
                  "id": "migrationcenter.projects.locations.assets.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Lists all the assets in a given project and location.",
                  "parameters": {
                    "view": {
                      "type": "string",
                      "description": "View of the assets. Defaults to BASIC.",
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ],
                      "location": "query",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data.",
                        "The asset view includes the standard metadata of an asset."
                      ]
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filtering results."
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Parent value for `ListAssetsRequest`."
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ListAssetsResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/assets"
                },
                "aggregateValues": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Parent value for `AggregateAssetsValuesRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Aggregates the requested fields based on provided function.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "AggregateAssetsValuesRequest"
                  },
                  "path": "v1alpha1/{+parent}/assets:aggregateValues",
                  "response": {
                    "$ref": "AggregateAssetsValuesResponse"
                  },
                  "id": "migrationcenter.projects.locations.assets.aggregateValues"
                },
                "reportAssetFrames": {
                  "request": {
                    "$ref": "Frames"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. Parent of the resource.",
                      "location": "path",
                      "required": true
                    },
                    "source": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Reference to a source."
                    }
                  },
                  "description": "Reports a set of frames.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.assets.reportAssetFrames",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/assets:reportAssetFrames",
                  "response": {
                    "$ref": "ReportAssetFramesResponse"
                  },
                  "httpMethod": "POST"
                },
                "batchUpdate": {
                  "description": "Updates the parameters of a list of assets.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. Parent value for batch asset update.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "id": "migrationcenter.projects.locations.assets.batchUpdate",
                  "response": {
                    "$ref": "BatchUpdateAssetsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/assets:batchUpdate",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "BatchUpdateAssetsRequest"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchUpdate"
                },
                "get": {
                  "response": {
                    "$ref": "Asset"
                  },
                  "parameters": {
                    "view": {
                      "location": "query",
                      "description": "View of the assets. Defaults to BASIC.",
                      "type": "string",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data.",
                        "The asset view includes the standard metadata of an asset."
                      ],
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ]
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "description": "Gets the details of an asset.",
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.assets.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "batchDelete": {
                  "request": {
                    "$ref": "BatchDeleteAssetsRequest"
                  },
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/assets:batchDelete",
                  "description": "Deletes list of Assets.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for batch asset delete.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchDelete",
                  "id": "migrationcenter.projects.locations.assets.batchDelete",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "reportConfigs": {
              "resources": {
                "reports": {
                  "methods": {
                    "get": {
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.get",
                      "response": {
                        "$ref": "Report"
                      },
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "description": "Gets details of a single Report.",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "view": {
                          "description": "Determines what information to retrieve for the Report.",
                          "type": "string",
                          "location": "query",
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ]
                        },
                        "name": {
                          "location": "path",
                          "description": "Required. Name of the resource.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$"
                        }
                      }
                    },
                    "delete": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a Report.",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.delete",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "requestId": {
                          "location": "query",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        },
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. Name of the resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "required": true
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "path": "v1alpha1/{+name}",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "create": {
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.create",
                      "httpMethod": "POST",
                      "parameters": {
                        "reportId": {
                          "location": "query",
                          "description": "Required. User specified id for the report. It will become the last component of the report name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The id must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. Value for parent.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "required": true
                        },
                        "requestId": {
                          "location": "query",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1alpha1/{+parent}/reports",
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Report"
                      },
                      "description": "Creates a report."
                    },
                    "list": {
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. Parent value for `ListReportsRequest`."
                        },
                        "filter": {
                          "description": "Filtering results.",
                          "type": "string",
                          "location": "query"
                        },
                        "orderBy": {
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                          "type": "integer",
                          "location": "query",
                          "format": "int32"
                        },
                        "view": {
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "type": "string",
                          "description": "Determines what information to retrieve for each Report.",
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "location": "query"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results that the server should return.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.list",
                      "response": {
                        "$ref": "ListReportsResponse"
                      },
                      "description": "Lists Reports in a given ReportConfig.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1alpha1/{+parent}/reports"
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "path": "v1alpha1/{+parent}/reportConfigs",
                  "response": {
                    "$ref": "ListReportConfigsResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.reportConfigs.list",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filtering results."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. Parent value for `ListReportConfigsRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Lists ReportConfigs in a given project and location."
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single ReportConfig.",
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.reportConfigs.get",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "response": {
                    "$ref": "ReportConfig"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "description": "Required. Name of the resource."
                    }
                  }
                },
                "create": {
                  "httpMethod": "POST",
                  "id": "migrationcenter.projects.locations.reportConfigs.create",
                  "path": "v1alpha1/{+parent}/reportConfigs",
                  "request": {
                    "$ref": "ReportConfig"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a report configuration.",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "reportConfigId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. User specified ID for the report config. It will become the last component of the report config name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs"
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.reportConfigs.delete",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "description": "Deletes a ReportConfig.",
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "required": true
                    },
                    "force": {
                      "location": "query",
                      "description": "Optional. If set to `true`, any child `Reports` of this entity will also be deleted. If set to `false`, the request only works if the resource has no children.",
                      "type": "boolean"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            },
            "groups": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/groups",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups",
                  "description": "Lists all groups in a given project and location.",
                  "httpMethod": "GET",
                  "parameters": {
                    "orderBy": {
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `ListGroupsRequest`.",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results the server should return."
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                    }
                  },
                  "id": "migrationcenter.projects.locations.groups.list",
                  "response": {
                    "$ref": "ListGroupsResponse"
                  }
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Group"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.groups.create",
                  "description": "Creates a new group in a given project and location.",
                  "path": "v1alpha1/{+parent}/groups",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Value for parent.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "groupId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups"
                },
                "patch": {
                  "description": "Updates the parameters of a group.",
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "type": "string",
                      "description": "Output only. The name of the group.",
                      "location": "path",
                      "required": true
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Group` resource by the update. The values specified in the `update_mask` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "id": "migrationcenter.projects.locations.groups.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Group"
                  },
                  "httpMethod": "PATCH",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "addAssets": {
                  "parameters": {
                    "group": {
                      "required": true,
                      "description": "Required. Group reference.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path"
                    }
                  },
                  "path": "v1alpha1/{+group}:addAssets",
                  "request": {
                    "$ref": "AddAssetsToGroupRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "group"
                  ],
                  "description": "Adds assets to a group.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addAssets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.groups.addAssets",
                  "httpMethod": "POST"
                },
                "removeAssets": {
                  "description": "Removes assets from a group.",
                  "request": {
                    "$ref": "RemoveAssetsFromGroupRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "group"
                  ],
                  "path": "v1alpha1/{+group}:removeAssets",
                  "id": "migrationcenter.projects.locations.groups.removeAssets",
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeAssets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "group": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "required": true,
                      "description": "Required. Group reference.",
                      "location": "path"
                    }
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.groups.get",
                  "description": "Gets the details of a group.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Group"
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the group resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "id": "migrationcenter.projects.locations.groups.delete",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a group.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            },
            "importJobs": {
              "resources": {
                "importDataFiles": {
                  "methods": {
                    "create": {
                      "path": "v1alpha1/{+parent}/importDataFiles",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "description": "Required. Name of the parent of the ImportDataFile.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                        },
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string",
                          "location": "query"
                        },
                        "importDataFileId": {
                          "description": "Required. The ID of the new data file.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "description": "Creates an import data file.",
                      "request": {
                        "$ref": "ImportDataFile"
                      },
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "delete": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "description": "Required. Name of the ImportDataFile to delete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "type": "string"
                        },
                        "requestId": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        }
                      },
                      "description": "Delete an import data file.",
                      "httpMethod": "DELETE",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.delete",
                      "path": "v1alpha1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets an import data file.",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.get",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. Name of the ImportDataFile."
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "response": {
                        "$ref": "ImportDataFile"
                      },
                      "path": "v1alpha1/{+name}",
                      "httpMethod": "GET"
                    },
                    "list": {
                      "path": "v1alpha1/{+parent}/importDataFiles",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListImportDataFilesResponse"
                      },
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.list",
                      "description": "List import data files.",
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "type": "integer",
                          "description": "The maximum number of data files to return. The service may return fewer than this value. If unspecified, at most 500 data files will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. Name of the parent of the `ImportDataFiles` resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "location": "path",
                          "type": "string"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Filtering results."
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A page token, received from a previous `ListImportDataFiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListImportDataFiles` must match the call that provided the page token."
                        },
                        "orderBy": {
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "type": "string",
                          "location": "query"
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "run": {
                  "description": "Runs an import job.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.run",
                  "request": {
                    "$ref": "RunImportJobRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+name}:run",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the import job to run.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                    }
                  }
                },
                "delete": {
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "DELETE",
                  "description": "Deletes an import job.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "force": {
                      "description": "Optional. If set to `true`, any `ImportDataFiles` of this job will also be deleted If set to `false`, the request only works if the job has no data files.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.delete",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "validate": {
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the import job to validate.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "id": "migrationcenter.projects.locations.importJobs.validate",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate",
                  "path": "v1alpha1/{+name}:validate",
                  "description": "Validates an import job.",
                  "request": {
                    "$ref": "ValidateImportJobRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "get": {
                  "id": "migrationcenter.projects.locations.importJobs.get",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                    },
                    "view": {
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "location": "query",
                      "description": "Optional. The level of details of the import job. Default value is FULL.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the details of an import job.",
                  "response": {
                    "$ref": "ImportJob"
                  },
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "httpMethod": "GET"
                },
                "list": {
                  "parameters": {
                    "view": {
                      "description": "Optional. The level of details of each import job. Default value is BASIC.",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Parent value for `ListImportJobsRequest`.",
                      "required": true
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "filter": {
                      "type": "string",
                      "description": "Filtering results.",
                      "location": "query"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "path": "v1alpha1/{+parent}/importJobs",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListImportJobsResponse"
                  },
                  "id": "migrationcenter.projects.locations.importJobs.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists all import jobs."
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}",
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Updates an import job.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "description": "Output only. The full name of the import job.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path"
                    }
                  },
                  "id": "migrationcenter.projects.locations.importJobs.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "description": "Creates an import job.",
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "id": "migrationcenter.projects.locations.importJobs.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/importJobs",
                  "httpMethod": "POST",
                  "parameters": {
                    "importJobId": {
                      "description": "Required. ID of the import job.",
                      "type": "string",
                      "location": "query"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "preferenceSets": {
              "methods": {
                "create": {
                  "id": "migrationcenter.projects.locations.preferenceSets.create",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/preferenceSets",
                  "parameters": {
                    "preferenceSetId": {
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "description": "Creates a new preference set in a given project and location.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "get": {
                  "id": "migrationcenter.projects.locations.preferenceSets.get",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "PreferenceSet"
                  },
                  "description": "Gets the details of a preference set.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListPreferenceSetsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, at most 500 preference sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `ListPreferenceSetsRequest`.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "description": "Lists all the preference sets in a given project and location.",
                  "path": "v1alpha1/{+parent}/preferenceSets",
                  "id": "migrationcenter.projects.locations.preferenceSets.list"
                },
                "patch": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "description": "Updates the parameters of a preference set.",
                  "httpMethod": "PATCH",
                  "id": "migrationcenter.projects.locations.preferenceSets.patch",
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "parameters": {
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `PreferenceSet` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "description": "Output only. Name of the preference set.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  }
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the group resource."
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a preference set.",
                  "id": "migrationcenter.projects.locations.preferenceSets.delete"
                }
              }
            }
          },
          "methods": {
            "getSettings": {
              "path": "v1alpha1/{+name}",
              "id": "migrationcenter.projects.locations.getSettings",
              "response": {
                "$ref": "Settings"
              },
              "httpMethod": "GET",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/settings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "description": "Gets the details of regional settings.",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "description": "Required. Name of the resource.",
                  "required": true,
                  "type": "string"
                }
              }
            },
            "updateSettings": {
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "id": "migrationcenter.projects.locations.updateSettings",
              "response": {
                "$ref": "Operation"
              },
              "request": {
                "$ref": "Settings"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/settings",
              "httpMethod": "PATCH",
              "parameters": {
                "requestId": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                },
                "updateMask": {
                  "description": "Required. Field mask is used to specify the fields to be overwritten in the `Settings` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "required": true,
                  "location": "path",
                  "description": "Output only. The name of the resource.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$"
                }
              },
              "description": "Updates the regional-level project settings."
            },
            "get": {
              "path": "v1alpha1/{+name}",
              "description": "Gets information about a location.",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "id": "migrationcenter.projects.locations.get",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "description": "Resource name for the location.",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Location"
              },
              "httpMethod": "GET"
            },
            "list": {
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "pageToken": {
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}/locations",
              "httpMethod": "GET",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "id": "migrationcenter.projects.locations.list"
            }
          }
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "name": "migrationcenter",
  "version_module": true,
  "rootUrl": "https://migrationcenter.googleapis.com/",
  "id": "migrationcenter:v1alpha1",
  "revision": "20230428"
}

{
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "updateSettings": {
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/settings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1alpha1/{+name}",
              "description": "Updates the regional-level project settings.",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "updateMask": {
                  "description": "Required. Field mask is used to specify the fields to be overwritten in the `Settings` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "required": true,
                  "description": "Output only. The name of the resource.",
                  "type": "string",
                  "location": "path"
                },
                "requestId": {
                  "type": "string",
                  "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                  "location": "query"
                }
              },
              "httpMethod": "PATCH",
              "response": {
                "$ref": "Operation"
              },
              "id": "migrationcenter.projects.locations.updateSettings",
              "request": {
                "$ref": "Settings"
              }
            },
            "getSettings": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/settings",
              "parameters": {
                "name": {
                  "description": "Required. Name of the resource.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "location": "path"
                }
              },
              "id": "migrationcenter.projects.locations.getSettings",
              "response": {
                "$ref": "Settings"
              },
              "description": "Gets the details of regional settings."
            },
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "path": "v1alpha1/{+name}/locations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                },
                "pageToken": {
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "id": "migrationcenter.projects.locations.list"
            },
            "get": {
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "description": "Resource name for the location."
                }
              },
              "httpMethod": "GET",
              "id": "migrationcenter.projects.locations.get",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location.",
              "parameterOrder": [
                "name"
              ]
            }
          },
          "resources": {
            "sources": {
              "resources": {
                "errorFrames": {
                  "methods": {
                    "list": {
                      "description": "Lists all error frames in a given source and location.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1alpha1/{+parent}/errorFrames",
                      "id": "migrationcenter.projects.locations.sources.errorFrames.list",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListErrorFramesResponse"
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames",
                      "parameters": {
                        "view": {
                          "type": "string",
                          "location": "query",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ],
                          "description": "Optional. An optional view mode to control the level of details of each error frame. The default is a BASIC frame view.",
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ]
                        },
                        "parent": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. Parent value (the source) for `ListErrorFramesRequest`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A token identifying a page of results the server should return."
                        },
                        "pageSize": {
                          "format": "int32",
                          "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "location": "query",
                          "type": "integer"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "get": {
                      "description": "Gets the details of an error frame.",
                      "parameters": {
                        "view": {
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "location": "query",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ],
                          "type": "string",
                          "description": "Optional. An optional view mode to control the level of details for the frame. The default is a basic frame view."
                        },
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the frame to retrieve. Format: projects/{project}/locations/{location}/sources/{source}/errorFrames/{error_frame}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/errorFrames/[^/]+$",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1alpha1/{+name}",
                      "id": "migrationcenter.projects.locations.sources.errorFrames.get",
                      "response": {
                        "$ref": "ErrorFrame"
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames/{errorFramesId}"
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListSourcesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. Parent value for `ListSourcesRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results that the server should return.",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                      "location": "query",
                      "format": "int32"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filtering results."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/sources",
                  "id": "migrationcenter.projects.locations.sources.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists all the sources in a given project and location.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "httpMethod": "GET"
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a source.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Source` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Output only. The full name of the source.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "Source"
                  },
                  "httpMethod": "PATCH",
                  "id": "migrationcenter.projects.locations.sources.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "create": {
                  "parameters": {
                    "sourceId": {
                      "description": "Required. User specified ID for the source. It will become the last component of the source name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. Value for parent.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "path": "v1alpha1/{+parent}/sources",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new source in a given project and location.",
                  "request": {
                    "$ref": "Source"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "id": "migrationcenter.projects.locations.sources.create"
                },
                "delete": {
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a source.",
                  "id": "migrationcenter.projects.locations.sources.delete"
                },
                "get": {
                  "response": {
                    "$ref": "Source"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the details of a source.",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the resource."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.sources.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}"
                }
              }
            },
            "reportConfigs": {
              "resources": {
                "reports": {
                  "methods": {
                    "list": {
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "httpMethod": "GET",
                      "description": "Lists Reports in a given ReportConfig.",
                      "response": {
                        "$ref": "ListReportsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1alpha1/{+parent}/reports",
                      "parameters": {
                        "view": {
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "location": "query",
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "description": "Determines what information to retrieve for each Report.",
                          "type": "string"
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                          "type": "integer"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Filtering results."
                        },
                        "parent": {
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "description": "Required. Parent value for `ListReportsRequest`.",
                          "location": "path"
                        },
                        "orderBy": {
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A token identifying a page of results that the server should return."
                        }
                      }
                    },
                    "create": {
                      "parameters": {
                        "parent": {
                          "description": "Required. Value for parent.",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$"
                        },
                        "requestId": {
                          "location": "query",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        },
                        "reportId": {
                          "location": "query",
                          "description": "Required. User specified id for the report. It will become the last component of the report name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The id must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
                          "type": "string"
                        }
                      },
                      "description": "Creates a report.",
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1alpha1/{+parent}/reports",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "Report"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "httpMethod": "POST",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.create"
                    },
                    "get": {
                      "description": "Gets details of a single Report.",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1alpha1/{+name}",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.get",
                      "httpMethod": "GET",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "view": {
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "type": "string",
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "description": "Determines what information to retrieve for the Report.",
                          "location": "query"
                        },
                        "name": {
                          "required": true,
                          "description": "Required. Name of the resource.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "Report"
                      }
                    },
                    "delete": {
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "description": "Required. Name of the resource.",
                          "location": "path"
                        },
                        "requestId": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        }
                      },
                      "path": "v1alpha1/{+name}",
                      "description": "Deletes a Report."
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "response": {
                    "$ref": "ListReportConfigsResponse"
                  },
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "Filtering results.",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `ListReportConfigsRequest`.",
                      "location": "path"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "id": "migrationcenter.projects.locations.reportConfigs.list",
                  "description": "Lists ReportConfigs in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/reportConfigs",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "delete": {
                  "id": "migrationcenter.projects.locations.reportConfigs.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. If set to `true`, any child `Reports` of this entity will also be deleted. If set to `false`, the request only works if the resource has no children."
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "type": "string"
                    }
                  },
                  "description": "Deletes a ReportConfig.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Value for parent.",
                      "location": "path",
                      "required": true
                    },
                    "reportConfigId": {
                      "type": "string",
                      "description": "Required. User specified ID for the report config. It will become the last component of the report config name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
                      "location": "query"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ReportConfig"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.reportConfigs.create",
                  "description": "Creates a report configuration.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/reportConfigs"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the resource."
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "ReportConfig"
                  },
                  "id": "migrationcenter.projects.locations.reportConfigs.get",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets details of a single ReportConfig."
                }
              }
            },
            "assets": {
              "methods": {
                "batchUpdate": {
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchUpdate",
                  "id": "migrationcenter.projects.locations.assets.batchUpdate",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a list of assets.",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent value for batch asset update.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "BatchUpdateAssetsResponse"
                  },
                  "path": "v1alpha1/{+parent}/assets:batchUpdate",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "BatchUpdateAssetsRequest"
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "view": {
                      "description": "View of the assets. Defaults to BASIC.",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data.",
                        "The asset view includes the standard metadata of an asset."
                      ],
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ],
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Asset"
                  },
                  "id": "migrationcenter.projects.locations.assets.get",
                  "description": "Gets the details of an asset."
                },
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes an asset.",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "id": "migrationcenter.projects.locations.assets.delete",
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}"
                },
                "batchDelete": {
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Parent value for batch asset delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "BatchDeleteAssetsRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.assets.batchDelete",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchDelete",
                  "path": "v1alpha1/{+parent}/assets:batchDelete",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Deletes list of Assets.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "aggregateValues": {
                  "request": {
                    "$ref": "AggregateAssetsValuesRequest"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for `AggregateAssetsValuesRequest`.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "id": "migrationcenter.projects.locations.assets.aggregateValues",
                  "path": "v1alpha1/{+parent}/assets:aggregateValues",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues",
                  "description": "Aggregates the requested fields based on provided function.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "AggregateAssetsValuesResponse"
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.assets.list",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/assets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all the assets in a given project and location.",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results the server should return."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. Parent value for `ListAssetsRequest`.",
                      "location": "path",
                      "required": true
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "format": "int32"
                    },
                    "view": {
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data.",
                        "The asset view includes the standard metadata of an asset."
                      ],
                      "type": "string",
                      "location": "query",
                      "description": "View of the assets. Defaults to BASIC.",
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ]
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filtering results."
                    }
                  },
                  "response": {
                    "$ref": "ListAssetsResponse"
                  }
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "description": "Updates the parameters of an asset.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Output only. The full name of the asset.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "location": "path"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "id": "migrationcenter.projects.locations.assets.patch",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Asset"
                  },
                  "path": "v1alpha1/{+name}",
                  "request": {
                    "$ref": "Asset"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "reportAssetFrames": {
                  "response": {
                    "$ref": "ReportAssetFramesResponse"
                  },
                  "description": "Reports a set of frames.",
                  "httpMethod": "POST",
                  "parameters": {
                    "source": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Reference to a source."
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Parent of the resource."
                    }
                  },
                  "path": "v1alpha1/{+parent}/assets:reportAssetFrames",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames",
                  "id": "migrationcenter.projects.locations.assets.reportAssetFrames",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Frames"
                  }
                }
              }
            },
            "importJobs": {
              "resources": {
                "importDataFiles": {
                  "methods": {
                    "create": {
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.create",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "request": {
                        "$ref": "ImportDataFile"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1alpha1/{+parent}/importDataFiles",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates an import data file.",
                      "parameters": {
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "required": true,
                          "description": "Required. Name of the parent of the ImportDataFile.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "type": "string"
                        },
                        "importDataFileId": {
                          "type": "string",
                          "description": "Required. The ID of the new data file.",
                          "location": "query"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      }
                    },
                    "delete": {
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.delete",
                      "httpMethod": "DELETE",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1alpha1/{+name}",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the ImportDataFile to delete.",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "type": "string"
                        },
                        "requestId": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        }
                      },
                      "description": "Delete an import data file.",
                      "response": {
                        "$ref": "Operation"
                      }
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.list",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "response": {
                        "$ref": "ListImportDataFilesResponse"
                      },
                      "description": "List import data files.",
                      "parameters": {
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                        },
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. Name of the parent of the `ImportDataFiles` resource."
                        },
                        "filter": {
                          "location": "query",
                          "type": "string",
                          "description": "Filtering results."
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A page token, received from a previous `ListImportDataFiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListImportDataFiles` must match the call that provided the page token.",
                          "type": "string"
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "description": "The maximum number of data files to return. The service may return fewer than this value. If unspecified, at most 500 data files will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "type": "integer"
                        }
                      },
                      "httpMethod": "GET",
                      "path": "v1alpha1/{+parent}/importDataFiles",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "required": true,
                          "description": "Required. Name of the ImportDataFile."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ImportDataFile"
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "path": "v1alpha1/{+name}",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets an import data file."
                    }
                  }
                }
              },
              "methods": {
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.delete",
                  "httpMethod": "DELETE",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "path": "v1alpha1/{+name}",
                  "description": "Deletes an import job.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the resource."
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "description": "Optional. If set to `true`, any `ImportDataFiles` of this job will also be deleted If set to `false`, the request only works if the job has no data files.",
                      "type": "boolean",
                      "location": "query"
                    }
                  }
                },
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates an import job.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "description": "Output only. The full name of the import job.",
                      "type": "string"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "type": "string"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    }
                  },
                  "id": "migrationcenter.projects.locations.importJobs.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}",
                  "request": {
                    "$ref": "ImportJob"
                  }
                },
                "run": {
                  "id": "migrationcenter.projects.locations.importJobs.run",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}:run",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Runs an import job.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run",
                  "request": {
                    "$ref": "RunImportJobRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "description": "Required. The name of the import job to run.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST"
                },
                "create": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "httpMethod": "POST",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "importJobId": {
                      "location": "query",
                      "description": "Required. ID of the import job.",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Value for parent.",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates an import job.",
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "path": "v1alpha1/{+parent}/importJobs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.create"
                },
                "get": {
                  "description": "Gets the details of an import job.",
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "id": "migrationcenter.projects.locations.importJobs.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "view": {
                      "type": "string",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "location": "query",
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "description": "Optional. The level of details of the import job. Default value is FULL."
                    },
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "ImportJob"
                  }
                },
                "validate": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate",
                  "description": "Validates an import job.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.validate",
                  "request": {
                    "$ref": "ValidateImportJobRequest"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "description": "Required. The name of the import job to validate.",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+name}:validate"
                },
                "list": {
                  "id": "migrationcenter.projects.locations.importJobs.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/importJobs",
                  "httpMethod": "GET",
                  "parameters": {
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "parent": {
                      "description": "Required. Parent value for `ListImportJobsRequest`.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Filtering results.",
                      "type": "string"
                    },
                    "view": {
                      "type": "string",
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "location": "query",
                      "description": "Optional. The level of details of each import job. Default value is BASIC.",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ]
                    }
                  },
                  "description": "Lists all import jobs.",
                  "response": {
                    "$ref": "ListImportJobsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs"
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.operations.delete",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation resource to be deleted."
                    }
                  },
                  "httpMethod": "DELETE"
                },
                "get": {
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.operations.get",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  }
                },
                "cancel": {
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "path": "v1alpha1/{+name}:cancel",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "id": "migrationcenter.projects.locations.operations.cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "The name of the operation's parent resource.",
                      "location": "path"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "The standard list page size.",
                      "location": "query",
                      "format": "int32"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "path": "v1alpha1/{+name}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.operations.list",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "preferenceSets": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "PreferenceSet"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "location": "path"
                    }
                  },
                  "id": "migrationcenter.projects.locations.preferenceSets.get",
                  "path": "v1alpha1/{+name}",
                  "description": "Gets the details of a preference set."
                },
                "delete": {
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.preferenceSets.delete",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the group resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a preference set."
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new preference set in a given project and location.",
                  "path": "v1alpha1/{+parent}/preferenceSets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.preferenceSets.create",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "preferenceSetId": {
                      "type": "string",
                      "location": "query"
                    }
                  }
                },
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.preferenceSets.patch",
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a preference set.",
                  "httpMethod": "PATCH",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `PreferenceSet` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
                    },
                    "name": {
                      "type": "string",
                      "description": "Output only. Name of the preference set.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "httpMethod": "GET",
                  "description": "Lists all the preference sets in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.preferenceSets.list",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/preferenceSets",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, at most 500 preference sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results the server should return."
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. Parent value for `ListPreferenceSetsRequest`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "ListPreferenceSetsResponse"
                  }
                }
              }
            },
            "groups": {
              "methods": {
                "get": {
                  "description": "Gets the details of a group.",
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "response": {
                    "$ref": "Group"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$"
                    }
                  },
                  "id": "migrationcenter.projects.locations.groups.get",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "addAssets": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addAssets",
                  "parameters": {
                    "group": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "type": "string",
                      "description": "Required. Group reference.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "path": "v1alpha1/{+group}:addAssets",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Adds assets to a group.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "group"
                  ],
                  "request": {
                    "$ref": "AddAssetsToGroupRequest"
                  },
                  "id": "migrationcenter.projects.locations.groups.addAssets"
                },
                "patch": {
                  "request": {
                    "$ref": "Group"
                  },
                  "description": "Updates the parameters of a group.",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Group` resource by the update. The values specified in the `update_mask` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "description": "Output only. The name of the group.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.groups.patch",
                  "httpMethod": "PATCH",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "removeAssets": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "RemoveAssetsFromGroupRequest"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "group": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Group reference."
                    }
                  },
                  "path": "v1alpha1/{+group}:removeAssets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.groups.removeAssets",
                  "description": "Removes assets from a group.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeAssets",
                  "parameterOrder": [
                    "group"
                  ]
                },
                "list": {
                  "path": "v1alpha1/{+parent}/groups",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups",
                  "response": {
                    "$ref": "ListGroupsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results the server should return."
                    },
                    "parent": {
                      "description": "Required. Parent value for `ListGroupsRequest`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all groups in a given project and location.",
                  "id": "migrationcenter.projects.locations.groups.list"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.groups.delete",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "description": "Required. Name of the group resource.",
                      "location": "path",
                      "required": true
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a group."
                },
                "create": {
                  "id": "migrationcenter.projects.locations.groups.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+parent}/groups",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Group"
                  },
                  "description": "Creates a new group in a given project and location.",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Value for parent.",
                      "required": true
                    },
                    "groupId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`."
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups"
                }
              }
            }
          }
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "mtlsRootUrl": "https://migrationcenter.mtls.googleapis.com/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "parameters": {
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ]
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    }
  },
  "batchPath": "batch",
  "revision": "20230630",
  "documentationLink": "https://cloud.google.com/migration-center",
  "description": "A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.",
  "schemas": {
    "Selinux": {
      "description": "SELinux details.",
      "properties": {
        "mode": {
          "description": "SELinux mode enforcing / permissive.",
          "type": "string"
        },
        "enabled": {
          "description": "Is SELinux enabled.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "Selinux"
    },
    "ValidationReport": {
      "type": "object",
      "id": "ValidationReport",
      "description": "A resource that aggregates errors across import job files.",
      "properties": {
        "fileValidations": {
          "type": "array",
          "items": {
            "$ref": "FileValidationReport"
          },
          "description": "List of errors found in files."
        },
        "jobErrors": {
          "type": "array",
          "description": "List of job level errors.",
          "items": {
            "$ref": "ImportError"
          }
        }
      }
    },
    "ReportSummary": {
      "properties": {
        "allAssetsStats": {
          "description": "Aggregate statistics for all the assets across all the groups.",
          "$ref": "ReportSummaryAssetAggregateStats"
        },
        "groupFindings": {
          "description": "Findings for each Group included in this report.",
          "type": "array",
          "items": {
            "$ref": "ReportSummaryGroupFinding"
          }
        }
      },
      "type": "object",
      "description": "Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report.",
      "id": "ReportSummary"
    },
    "FrameViolationEntry": {
      "id": "FrameViolationEntry",
      "properties": {
        "violation": {
          "type": "string",
          "description": "A message describing the violation."
        },
        "field": {
          "type": "string",
          "description": "The field of the original frame where the violation occurred."
        }
      },
      "type": "object",
      "description": "A resource that contains a single violation of a reported `AssetFrame` resource."
    },
    "Insight": {
      "type": "object",
      "properties": {
        "migrationInsight": {
          "readOnly": true,
          "$ref": "MigrationInsight",
          "description": "Output only. An insight about potential migrations for an asset."
        }
      },
      "id": "Insight",
      "description": "An insight about an asset."
    },
    "OperationMetadata": {
      "properties": {
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        },
        "requestedCancellation": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "statusMessage": {
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true
        },
        "apiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. API version used to start the operation."
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created."
        }
      },
      "id": "OperationMetadata",
      "type": "object",
      "description": "Represents the metadata of the long-running operation."
    },
    "GoogleKubernetesEngineMigrationTarget": {
      "description": "GKE migration target.",
      "type": "object",
      "id": "GoogleKubernetesEngineMigrationTarget",
      "properties": {}
    },
    "AssetPerformanceData": {
      "properties": {
        "dailyResourceUsageAggregations": {
          "type": "array",
          "items": {
            "$ref": "DailyResourceUsageAggregation"
          },
          "description": "Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days. Aggregations are sorted from oldest to most recent."
        }
      },
      "id": "AssetPerformanceData",
      "type": "object",
      "description": "Performance data for an asset."
    },
    "ListErrorFramesResponse": {
      "type": "object",
      "description": "A response for listing error frames.",
      "properties": {
        "errorFrames": {
          "items": {
            "$ref": "ErrorFrame"
          },
          "type": "array",
          "description": "The list of error frames."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        }
      },
      "id": "ListErrorFramesResponse"
    },
    "ReportConfig": {
      "properties": {
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "groupPreferencesetAssignments": {
          "description": "Required. Collection of combinations of groups and preference sets.",
          "type": "array",
          "items": {
            "$ref": "ReportConfigGroupPreferenceSetAssignment"
          }
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the resource was last updated.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Output only. Name of resource.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "ReportConfig",
      "description": "The groups and associated preference sets on which we can generate reports."
    },
    "RemoveAssetsFromGroupRequest": {
      "description": "A request to remove assets from a group.",
      "id": "RemoveAssetsFromGroupRequest",
      "type": "object",
      "properties": {
        "allowMissing": {
          "type": "boolean",
          "description": "Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`."
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        },
        "assets": {
          "$ref": "AssetList",
          "description": "Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000."
        }
      }
    },
    "AzureVmPlatformDetails": {
      "id": "AzureVmPlatformDetails",
      "properties": {
        "provisioningState": {
          "description": "Azure platform's provisioning state.",
          "type": "string"
        },
        "location": {
          "description": "The location of the machine in the Azure format.",
          "type": "string"
        },
        "machineTypeLabel": {
          "type": "string",
          "description": "Azure platform's machine type label."
        }
      },
      "description": "Azure VM specific details.",
      "type": "object"
    },
    "RunningProcessList": {
      "properties": {
        "processes": {
          "items": {
            "$ref": "RunningProcess"
          },
          "description": "Running process entries.",
          "type": "array"
        }
      },
      "description": "List of running guest OS processes.",
      "type": "object",
      "id": "RunningProcessList"
    },
    "VirtualMachineNetworkDetails": {
      "id": "VirtualMachineNetworkDetails",
      "type": "object",
      "description": "Details of network adapters and settings.",
      "properties": {
        "primaryIpAddress": {
          "description": "IP address of the machine.",
          "type": "string"
        },
        "primaryMacAddress": {
          "type": "string",
          "description": "MAC address of the machine. This property is used to uniqly identify the machine."
        },
        "networkAdapters": {
          "description": "List of network adapters.",
          "$ref": "NetworkAdapterList"
        },
        "defaultGw": {
          "description": "Default gateway address.",
          "type": "string"
        },
        "publicIpAddress": {
          "description": "Public IP address of the machine.",
          "type": "string"
        }
      }
    },
    "ValidateImportJobRequest": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      },
      "description": "A request to validate an import job.",
      "id": "ValidateImportJobRequest"
    },
    "CpuUsageSample": {
      "description": "CPU usage sample.",
      "properties": {
        "utilizedPercentage": {
          "format": "float",
          "description": "Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.",
          "type": "number"
        }
      },
      "id": "CpuUsageSample",
      "type": "object"
    },
    "AggregationResult": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "sum": {
          "$ref": "AggregationResultSum"
        },
        "histogram": {
          "$ref": "AggregationResultHistogram"
        },
        "count": {
          "$ref": "AggregationResultCount"
        },
        "frequency": {
          "$ref": "AggregationResultFrequency"
        }
      },
      "id": "AggregationResult",
      "description": "Message describing a result of an aggregation."
    },
    "ListGroupsResponse": {
      "id": "ListGroupsResponse",
      "type": "object",
      "description": "A response for listing groups.",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "groups": {
          "description": "The list of Group",
          "items": {
            "$ref": "Group"
          },
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      }
    },
    "DiskPartitionList": {
      "properties": {
        "entries": {
          "description": "Partition entries.",
          "items": {
            "$ref": "DiskPartition"
          },
          "type": "array"
        }
      },
      "id": "DiskPartitionList",
      "description": "Disk partition list.",
      "type": "object"
    },
    "VirtualMachineDetails": {
      "type": "object",
      "properties": {
        "vmUuid": {
          "type": "string",
          "description": "Virtual Machine unique identifier."
        },
        "powerState": {
          "type": "string",
          "description": "Power state of VM (poweredOn or poweredOff)."
        },
        "vcenterVmId": {
          "type": "string",
          "description": "vCenter VM ID."
        },
        "osFamily": {
          "enum": [
            "OS_FAMILY_UNKNOWN",
            "OS_FAMILY_WINDOWS",
            "OS_FAMILY_LINUX",
            "OS_FAMILY_UNIX"
          ],
          "enumDescriptions": [
            "",
            "Microsoft Windows Server and Desktop.",
            "Various Linux flavors.",
            "Non-Linux Unix flavors."
          ],
          "type": "string",
          "description": "What family the OS belong to, if known."
        },
        "osVersion": {
          "type": "string",
          "description": "The version of the operating system running on the virtual machine."
        },
        "coreCount": {
          "description": "Number of CPU cores in the VirtualMachine. Must be non-negative.",
          "format": "int32",
          "type": "integer"
        },
        "vmNetwork": {
          "$ref": "VirtualMachineNetworkDetails",
          "description": "VM network details."
        },
        "guestOs": {
          "$ref": "GuestOsDetails",
          "description": "Guest OS information."
        },
        "vcenterUrl": {
          "type": "string",
          "description": "vCenter URL used in collection."
        },
        "vmArchitecture": {
          "description": "VM architecture details (vendor, cpu arch).",
          "$ref": "VirtualMachineArchitectureDetails"
        },
        "vmDisks": {
          "$ref": "VirtualMachineDiskDetails",
          "description": "VM disk details."
        },
        "platform": {
          "$ref": "PlatformDetails",
          "description": "Platform information."
        },
        "memoryMb": {
          "description": "The amount of memory in the VirtualMachine. Must be non-negative.",
          "format": "int32",
          "type": "integer"
        },
        "vcenterFolder": {
          "type": "string",
          "description": "Folder name in vCenter where asset resides."
        },
        "osName": {
          "description": "The name of the operating system running on the VirtualMachine.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "VM creation timestamp."
        },
        "vmName": {
          "type": "string",
          "description": "Virtual Machine display name."
        }
      },
      "id": "VirtualMachineDetails",
      "description": "Details of a VirtualMachine."
    },
    "NetworkAdapterDetails": {
      "id": "NetworkAdapterDetails",
      "type": "object",
      "properties": {
        "macAddress": {
          "type": "string",
          "description": "MAC address."
        },
        "adapterType": {
          "type": "string",
          "description": "Network adapter type (e.g. VMXNET3)."
        },
        "addresses": {
          "$ref": "NetworkAddressList",
          "description": "NetworkAddressList"
        }
      },
      "description": "Details of network adapter."
    },
    "AggregationResultHistogram": {
      "properties": {
        "buckets": {
          "type": "array",
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "items": {
            "$ref": "AggregationResultHistogramBucket"
          }
        }
      },
      "id": "AggregationResultHistogram",
      "description": "The result of a bucketed histogram aggregation.",
      "type": "object"
    },
    "NetworkAddress": {
      "description": "Details of network address.",
      "properties": {
        "assignment": {
          "enum": [
            "ADDRESS_ASSIGNMENT_UNSPECIFIED",
            "ADDRESS_ASSIGNMENT_STATIC",
            "ADDRESS_ASSIGNMENT_DHCP"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unknown (default value).",
            "Staticly assigned IP.",
            "Dynamically assigned IP (DHCP)."
          ],
          "description": "Whether DHCP is used to assign addresses."
        },
        "subnetMask": {
          "type": "string",
          "description": "Subnet mask."
        },
        "fqdn": {
          "type": "string",
          "description": "Fully qualified domain name."
        },
        "ipAddress": {
          "type": "string",
          "description": "Assigned or configured IP Address."
        },
        "bcast": {
          "description": "Broadcast address.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "NetworkAddress"
    },
    "VmwareDiskConfig": {
      "id": "VmwareDiskConfig",
      "type": "object",
      "properties": {
        "vmdkDiskMode": {
          "description": "VMDK disk mode.",
          "type": "string"
        },
        "rdmCompatibilityMode": {
          "type": "string",
          "description": "RDM compatibility mode."
        },
        "backingType": {
          "type": "string",
          "enum": [
            "BACKING_TYPE_UNSPECIFIED",
            "BACKING_TYPE_FLAT_V1",
            "BACKING_TYPE_FLAT_V2",
            "BACKING_TYPE_PMEM",
            "BACKING_TYPE_RDM_V1",
            "BACKING_TYPE_RDM_V2",
            "BACKING_TYPE_SESPARSE",
            "BACKING_TYPE_SESPARSE_V1",
            "BACKING_TYPE_SESPARSE_V2"
          ],
          "enumDescriptions": [
            "Default value.",
            "Flat v1.",
            "Flat v2.",
            "Persistent memory, also known as Non-Volatile Memory (NVM).",
            "Raw Disk Memory v1.",
            "Raw Disk Memory v2.",
            "SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.",
            "SEsparse v1.",
            "SEsparse v1."
          ],
          "description": "VMDK backing type."
        },
        "shared": {
          "description": "Is VMDK shared with other VMs.",
          "type": "boolean"
        }
      },
      "description": "VMware disk config details."
    },
    "AggregationHistogram": {
      "id": "AggregationHistogram",
      "properties": {
        "lowerBounds": {
          "items": {
            "format": "double",
            "type": "number"
          },
          "description": "Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Histogram of bucketed assets counts by field value."
    },
    "DateTime": {
      "id": "DateTime",
      "properties": {
        "nanos": {
          "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
          "format": "int32",
          "type": "integer"
        },
        "timeZone": {
          "$ref": "TimeZone",
          "description": "Time zone."
        },
        "utcOffset": {
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.",
          "type": "string",
          "format": "google-duration"
        },
        "minutes": {
          "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month."
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day."
        },
        "year": {
          "format": "int32",
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
          "type": "integer"
        },
        "seconds": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds."
        },
        "hours": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
        }
      },
      "type": "object",
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations."
    },
    "FstabEntry": {
      "properties": {
        "spec": {
          "description": "The block special device or remote filesystem to be mounted.",
          "type": "string"
        },
        "passno": {
          "type": "integer",
          "description": "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.",
          "format": "int32"
        },
        "vfstype": {
          "description": "The type of the filesystem.",
          "type": "string"
        },
        "freq": {
          "format": "int32",
          "type": "integer",
          "description": "Used by dump to determine which filesystems need to be dumped."
        },
        "mntops": {
          "type": "string",
          "description": "Mount options associated with the filesystem."
        },
        "file": {
          "type": "string",
          "description": "The mount point for the filesystem."
        }
      },
      "type": "object",
      "id": "FstabEntry",
      "description": "Single fstab entry."
    },
    "GuestInstalledApplication": {
      "type": "object",
      "properties": {
        "time": {
          "description": "Date application was installed.",
          "type": "string"
        },
        "version": {
          "description": "Installed application version.",
          "type": "string"
        },
        "name": {
          "description": "Installed application name.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "Source path."
        },
        "vendor": {
          "type": "string",
          "description": "Installed application vendor."
        }
      },
      "id": "GuestInstalledApplication",
      "description": "Guest installed application information."
    },
    "GuestConfigDetails": {
      "properties": {
        "selinux": {
          "description": "SELinux details.",
          "$ref": "Selinux"
        },
        "fstab": {
          "description": "Mount list (Linux fstab).",
          "$ref": "FstabEntryList"
        },
        "issue": {
          "type": "string",
          "description": "OS issue (typically /etc/issue in Linux)."
        },
        "nfsExports": {
          "$ref": "NfsExportList",
          "description": "NFS exports."
        },
        "hosts": {
          "description": "Hosts file (/etc/hosts).",
          "$ref": "HostsEntryList"
        }
      },
      "description": "Guest OS config information.",
      "type": "object",
      "id": "GuestConfigDetails"
    },
    "ReportSummaryGroupFinding": {
      "properties": {
        "overlappingAssetCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of the number of assets in this group which are also included in another group within the same report."
        },
        "displayName": {
          "description": "Display Name for the Group.",
          "type": "string"
        },
        "assetAggregateStats": {
          "$ref": "ReportSummaryAssetAggregateStats",
          "description": "Summary statistics for all the assets in this group."
        },
        "preferenceSetFindings": {
          "type": "array",
          "items": {
            "$ref": "ReportSummaryGroupPreferenceSetFinding"
          },
          "description": "Findings for each of the PreferenceSets for this group."
        },
        "description": {
          "description": "Description for the Group.",
          "type": "string"
        }
      },
      "id": "ReportSummaryGroupFinding",
      "description": "Summary Findings for a specific Group.",
      "type": "object"
    },
    "AssetFrame": {
      "properties": {
        "performanceSamples": {
          "type": "array",
          "items": {
            "$ref": "PerformanceSample"
          },
          "description": "Asset performance data samples. Samples that are older than 40 days are ignored."
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Generic asset attributes."
        },
        "virtualMachineDetails": {
          "description": "Asset information specific for virtual machines.",
          "$ref": "VirtualMachineDetails"
        },
        "reportTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the data was reported."
        },
        "traceToken": {
          "type": "string",
          "description": "Optional. Trace token is optionally provided to assist with debugging and traceability."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        }
      },
      "type": "object",
      "description": "Contains data reported from an inventory source on an asset.",
      "id": "AssetFrame"
    },
    "FileValidationReport": {
      "type": "object",
      "id": "FileValidationReport",
      "description": "A resource that aggregates the validation errors found in an import job file.",
      "properties": {
        "partialReport": {
          "description": "Flag indicating that processing was aborted due to maximum number of errors.",
          "type": "boolean"
        },
        "fileName": {
          "type": "string",
          "description": "The name of the file."
        },
        "fileErrors": {
          "type": "array",
          "description": "List of file level errors.",
          "items": {
            "$ref": "ImportError"
          }
        },
        "rowErrors": {
          "items": {
            "$ref": "ImportRowError"
          },
          "description": "Partial list of rows that encountered validation error.",
          "type": "array"
        }
      }
    },
    "DiskPartition": {
      "description": "Disk Partition details.",
      "id": "DiskPartition",
      "properties": {
        "fileSystem": {
          "type": "string",
          "description": "Partition file system."
        },
        "type": {
          "type": "string",
          "description": "Partition type (e.g. BIOS boot)."
        },
        "freeBytes": {
          "format": "int64",
          "type": "string",
          "description": "Partition free space."
        },
        "subPartitions": {
          "$ref": "DiskPartitionList",
          "description": "Sub-partitions."
        },
        "uuid": {
          "description": "Partition UUID.",
          "type": "string"
        },
        "capacityBytes": {
          "format": "int64",
          "description": "Partition capacity.",
          "type": "string"
        },
        "mountPoint": {
          "type": "string",
          "description": "Mount pount (Linux/Windows) or drive letter (Windows)."
        }
      },
      "type": "object"
    },
    "Frames": {
      "description": "Collection of frame data.",
      "id": "Frames",
      "type": "object",
      "properties": {
        "framesData": {
          "description": "A repeated field of asset data.",
          "type": "array",
          "items": {
            "$ref": "AssetFrame"
          }
        }
      }
    },
    "ComputeEngineMigrationTarget": {
      "id": "ComputeEngineMigrationTarget",
      "type": "object",
      "description": "Compute engine migration target.",
      "properties": {
        "shape": {
          "$ref": "ComputeEngineShapeDescriptor",
          "description": "Description of the suggested shape for the migration target."
        }
      }
    },
    "ReportSummaryAssetAggregateStats": {
      "description": "Aggregate statistics for a collection of assets.",
      "id": "ReportSummaryAssetAggregateStats",
      "properties": {
        "memoryUtilizationChart": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryUtilizationChartData"
        },
        "memoryBytesHistogram": {
          "description": "Histogram showing a distribution of memory sizes.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "storageUtilizationChart": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryUtilizationChartData"
        },
        "totalCores": {
          "format": "int64",
          "description": "Sum of the CPU core count of all the assets in this collection.",
          "type": "string"
        },
        "assetAge": {
          "$ref": "ReportSummaryChartData",
          "description": "Count of assets grouped by age.",
          "deprecated": true
        },
        "totalStorageBytes": {
          "format": "int64",
          "type": "string",
          "description": "Sum of persistent storage in bytes of all the assets in this collection."
        },
        "storageUtilization": {
          "description": "Total storage split into Used/Free buckets.",
          "deprecated": true,
          "$ref": "ReportSummaryChartData"
        },
        "memoryUtilization": {
          "deprecated": true,
          "$ref": "ReportSummaryChartData",
          "description": "Total memory split into Used/Free buckets."
        },
        "totalAssets": {
          "format": "int64",
          "description": "Count of the number of unique assets in this collection.",
          "type": "string"
        },
        "operatingSystem": {
          "description": "Count of assets grouped by Operating System families.",
          "$ref": "ReportSummaryChartData"
        },
        "coreCountHistogram": {
          "description": "Histogram showing a distribution of CPU core counts.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "storageBytesHistogram": {
          "$ref": "ReportSummaryHistogramChartData",
          "description": "Histogram showing a distribution of memory sizes."
        },
        "totalMemoryBytes": {
          "type": "string",
          "description": "Sum of the memory in bytes of all the assets in this collection.",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "ReportSummaryHistogramChartDataBucket": {
      "id": "ReportSummaryHistogramChartDataBucket",
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "type": "object",
      "properties": {
        "lowerBound": {
          "type": "string",
          "format": "int64",
          "description": "Lower bound - inclusive."
        },
        "count": {
          "format": "int64",
          "type": "string",
          "description": "Count of items in the bucket."
        },
        "upperBound": {
          "format": "int64",
          "description": "Upper bound - exclusive.",
          "type": "string"
        }
      }
    },
    "Source": {
      "properties": {
        "errorFrameCount": {
          "readOnly": true,
          "format": "int32",
          "description": "Output only. The number of frames that were reported by the source and contained errors.",
          "type": "integer"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the source was last updated.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        },
        "state": {
          "enumDescriptions": [
            "Unspecified.",
            "The source is active and ready to be used.",
            "In the process of being deleted.",
            "Source is in an invalid state. Asset frames reported to it will be ignored."
          ],
          "description": "Output only. The state of the source.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETING",
            "INVALID"
          ],
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name."
        },
        "name": {
          "type": "string",
          "description": "Output only. The full name of the source.",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The timestamp when the source was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The information confidence of the source. The higher the value, the higher the confidence."
        },
        "isManaged": {
          "description": "If `true`, the source is managed by other service(s).",
          "type": "boolean"
        },
        "type": {
          "enum": [
            "SOURCE_TYPE_UNKNOWN",
            "SOURCE_TYPE_UPLOAD",
            "SOURCE_TYPE_GUEST_OS_SCAN",
            "SOURCE_TYPE_INVENTORY_SCAN",
            "SOURCE_TYPE_CUSTOM"
          ],
          "enumDescriptions": [
            "Unspecified",
            "Manually uploaded file (e.g. CSV)",
            "Guest-level info",
            "Inventory-level scan",
            "Third-party owned sources."
          ],
          "type": "string",
          "description": "Data source type."
        },
        "pendingFrameCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Output only. Number of frames that are still being processed."
        }
      },
      "description": "Source represents an object from which asset information is streamed to Migration Center.",
      "id": "Source",
      "type": "object"
    },
    "HostsEntryList": {
      "id": "HostsEntryList",
      "properties": {
        "entries": {
          "items": {
            "$ref": "HostsEntry"
          },
          "type": "array",
          "description": "Hosts entries."
        }
      },
      "type": "object",
      "description": "Hosts content."
    },
    "RunImportJobRequest": {
      "description": "A request to run an import job.",
      "type": "object",
      "id": "RunImportJobRequest",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      }
    },
    "OpenFileList": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "description": "Open file details entries.",
          "items": {
            "$ref": "OpenFileDetails"
          }
        }
      },
      "id": "OpenFileList",
      "description": "Open file list."
    },
    "ReportSummarySoleTenantFinding": {
      "id": "ReportSummarySoleTenantFinding",
      "properties": {
        "nodeAllocations": {
          "items": {
            "$ref": "ReportSummarySoleTenantNodeAllocation"
          },
          "type": "array",
          "description": "Set of per-nodetype allocation records"
        },
        "allocatedRegions": {
          "description": "Set of regions in which the assets are allocated",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allocatedAssetCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of assets which are allocated"
        }
      },
      "description": "A set of findings that applies to assets destined for Sole-Tenant nodes.",
      "type": "object"
    },
    "ListPreferenceSetsResponse": {
      "id": "ListPreferenceSetsResponse",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "preferenceSets": {
          "type": "array",
          "description": "The list of PreferenceSets",
          "items": {
            "$ref": "PreferenceSet"
          }
        }
      },
      "description": "Response message for listing preference sets.",
      "type": "object"
    },
    "RunningProcess": {
      "description": "Guest OS running process details.",
      "type": "object",
      "id": "RunningProcess",
      "properties": {
        "pid": {
          "format": "int64",
          "type": "string",
          "description": "Process ID."
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Process extended attributes."
        },
        "user": {
          "description": "User running the process.",
          "type": "string"
        },
        "cmdline": {
          "type": "string",
          "description": "Process full command line."
        },
        "exePath": {
          "description": "Process binary path.",
          "type": "string"
        }
      }
    },
    "NetworkAdapterList": {
      "id": "NetworkAdapterList",
      "properties": {
        "networkAdapters": {
          "type": "array",
          "items": {
            "$ref": "NetworkAdapterDetails"
          },
          "description": "Network adapter descriptions."
        }
      },
      "type": "object",
      "description": "List of network adapters."
    },
    "RuntimeNetworkInfo": {
      "properties": {
        "netstatTime": {
          "$ref": "DateTime",
          "description": "Netstat time collected."
        },
        "netstat": {
          "description": "Netstat (raw, OS-agnostic).",
          "type": "string"
        },
        "connections": {
          "description": "Network connections.",
          "$ref": "NetworkConnectionList"
        }
      },
      "type": "object",
      "description": "Runtime networking information.",
      "id": "RuntimeNetworkInfo"
    },
    "AggregationSum": {
      "type": "object",
      "properties": {},
      "id": "AggregationSum",
      "description": "Sum of field values."
    },
    "AssetList": {
      "description": "Lists the asset IDs of all assets.",
      "properties": {
        "assetIds": {
          "items": {
            "type": "string"
          },
          "description": "Required. A list of asset IDs",
          "type": "array"
        }
      },
      "type": "object",
      "id": "AssetList"
    },
    "BatchUpdateAssetsRequest": {
      "id": "BatchUpdateAssetsRequest",
      "description": "A request to update a list of assets.",
      "properties": {
        "requests": {
          "type": "array",
          "description": "Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.",
          "items": {
            "$ref": "UpdateAssetRequest"
          }
        }
      },
      "type": "object"
    },
    "ReportSummaryGroupPreferenceSetFinding": {
      "id": "ReportSummaryGroupPreferenceSetFinding",
      "type": "object",
      "properties": {
        "topPriority": {
          "description": "Text describing the business priority specified for this Preference Set",
          "deprecated": true,
          "type": "string"
        },
        "soleTenantFinding": {
          "description": "A set of findings that applies to Stole-Tenant machines in the input.",
          "$ref": "ReportSummarySoleTenantFinding"
        },
        "displayName": {
          "type": "string",
          "description": "Display Name of the Preference Set"
        },
        "monthlyCostStorage": {
          "$ref": "Money",
          "description": "Storage monthly cost for this preference set."
        },
        "preferredRegion": {
          "description": "Target region for this Preference Set",
          "deprecated": true,
          "type": "string"
        },
        "monthlyCostOsLicense": {
          "description": "Licensing monthly cost for this preference set.",
          "$ref": "Money"
        },
        "monthlyCostCompute": {
          "$ref": "Money",
          "description": "Compute monthly cost for this preference set."
        },
        "pricingTrack": {
          "description": "Text describing the pricing track specified for this Preference Set",
          "type": "string",
          "deprecated": true
        },
        "machineFinding": {
          "$ref": "ReportSummaryMachineFinding",
          "description": "A set of findings that applies to all machines in the input."
        },
        "description": {
          "description": "Description for the Preference Set.",
          "type": "string"
        },
        "monthlyCostOther": {
          "$ref": "Money",
          "description": "Miscellaneous monthly cost for this preference set."
        },
        "vmwareEngineFinding": {
          "$ref": "ReportSummaryVMWareEngineFinding",
          "description": "A set of findings that applies to VMWare machines in the input."
        },
        "monthlyCostNetworkEgress": {
          "$ref": "Money",
          "description": "Network Egress monthly cost for this preference set."
        },
        "monthlyCostTotal": {
          "description": "Total monthly cost for this preference set.",
          "$ref": "Money"
        },
        "machinePreferences": {
          "description": "A set of preferences that applies to all machines in the context.",
          "$ref": "VirtualMachinePreferences"
        }
      },
      "description": "Summary Findings for a specific Group/PreferenceSet combination."
    },
    "DiskEntryList": {
      "type": "object",
      "description": "VM disks.",
      "id": "DiskEntryList",
      "properties": {
        "entries": {
          "description": "Disk entries.",
          "type": "array",
          "items": {
            "$ref": "DiskEntry"
          }
        }
      }
    },
    "AggregationResultCount": {
      "type": "object",
      "id": "AggregationResultCount",
      "description": "The result of a count aggregation.",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "RunningService": {
      "description": "Guest OS running service details.",
      "properties": {
        "name": {
          "description": "Service name.",
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "Service status."
        },
        "state": {
          "type": "string",
          "description": "Service state (raw, OS-agnostic)."
        },
        "pid": {
          "description": "Service pid.",
          "type": "string",
          "format": "int64"
        },
        "cmdline": {
          "type": "string",
          "description": "Service command line."
        },
        "startMode": {
          "description": "Service start mode (raw, OS-agnostic).",
          "type": "string"
        },
        "exePath": {
          "type": "string",
          "description": "Service binary path."
        }
      },
      "type": "object",
      "id": "RunningService"
    },
    "PerformanceSample": {
      "id": "PerformanceSample",
      "properties": {
        "network": {
          "description": "Network usage sample.",
          "$ref": "NetworkUsageSample"
        },
        "disk": {
          "$ref": "DiskUsageSample",
          "description": "Disk usage sample."
        },
        "sampleTime": {
          "description": "Required. Time the sample was collected.",
          "format": "google-datetime",
          "type": "string"
        },
        "memory": {
          "$ref": "MemoryUsageSample",
          "description": "Memory usage sample."
        },
        "cpu": {
          "description": "CPU usage sample.",
          "$ref": "CpuUsageSample"
        }
      },
      "type": "object",
      "description": "Performance data sample."
    },
    "ReportSummaryUtilizationChartData": {
      "properties": {
        "used": {
          "description": "Aggregate value which falls into the \"Used\" bucket.",
          "format": "int64",
          "type": "string"
        },
        "free": {
          "format": "int64",
          "description": "Aggregate value which falls into the \"Free\" bucket.",
          "type": "string"
        }
      },
      "id": "ReportSummaryUtilizationChartData",
      "description": "Utilization Chart is a specific type of visualization which displays a metric classified into \"Used\" and \"Free\" buckets.",
      "type": "object"
    },
    "ReportSummaryVMWareNode": {
      "properties": {
        "code": {
          "description": "Code to identify VMware Engine node series, e.g. \"ve1-standard-72\". Based on the displayName of cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.nodeTypes",
          "type": "string"
        }
      },
      "id": "ReportSummaryVMWareNode",
      "type": "object",
      "description": "A VMWare Engine Node"
    },
    "DiskUsageSample": {
      "type": "object",
      "id": "DiskUsageSample",
      "description": "Disk usage sample. Values are across all disks.",
      "properties": {
        "averageIops": {
          "type": "number",
          "description": "Average IOPS sampled over a short window. Must be non-negative.",
          "format": "float"
        }
      }
    },
    "Settings": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the resource."
        },
        "preferenceSet": {
          "description": "The preference set used by default for a project.",
          "type": "string"
        }
      },
      "id": "Settings",
      "description": "Describes the Migration Center settings related to the project.",
      "type": "object"
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "type": "object"
    },
    "ExecutionReport": {
      "properties": {
        "jobErrors": {
          "type": "array",
          "description": "List of job-level errors. Deprecated, use the job errors under execution_errors instead.",
          "deprecated": true,
          "items": {
            "$ref": "ImportError"
          }
        },
        "executionErrors": {
          "description": "Validation errors encountered during the execution of the import job.",
          "$ref": "ValidationReport"
        },
        "totalRowsCount": {
          "description": "Total number of rows in the import job.",
          "type": "integer",
          "format": "int32"
        },
        "framesReported": {
          "type": "integer",
          "description": "Total number of asset frames reported for the import job.",
          "format": "int32"
        }
      },
      "description": "A resource that reports result of the import job execution.",
      "id": "ExecutionReport",
      "type": "object"
    },
    "DiskEntry": {
      "type": "object",
      "id": "DiskEntry",
      "description": "Single disk entry.",
      "properties": {
        "status": {
          "description": "Disk status (e.g. online).",
          "type": "string"
        },
        "interfaceType": {
          "description": "Disks interface type (e.g. SATA/SCSI)",
          "type": "string"
        },
        "partitions": {
          "$ref": "DiskPartitionList",
          "description": "Partition layout."
        },
        "totalFreeBytes": {
          "format": "int64",
          "type": "string",
          "description": "Disk free space."
        },
        "vmwareConfig": {
          "description": "VMware disk details.",
          "$ref": "VmwareDiskConfig"
        },
        "hwAddress": {
          "type": "string",
          "description": "Disk hardware address (e.g. 0:1 for SCSI)."
        },
        "diskLabel": {
          "description": "Disk label.",
          "type": "string"
        },
        "totalCapacityBytes": {
          "format": "int64",
          "type": "string",
          "description": "Disk capacity."
        },
        "diskLabelType": {
          "type": "string",
          "description": "Disk label type (e.g. BIOS/GPT)"
        }
      }
    },
    "GenericPlatformDetails": {
      "type": "object",
      "description": "Generic platform details.",
      "id": "GenericPlatformDetails",
      "properties": {
        "location": {
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field.",
          "type": "string"
        }
      }
    },
    "DailyResourceUsageAggregationMemory": {
      "type": "object",
      "properties": {
        "utilizationPercentage": {
          "description": "Memory utilization percentage.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "id": "DailyResourceUsageAggregationMemory",
      "description": "Statistical aggregation of memory usage."
    },
    "Location": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        }
      },
      "description": "A resource that represents a Google Cloud location.",
      "id": "Location"
    },
    "ReportSummaryMachineFinding": {
      "id": "ReportSummaryMachineFinding",
      "properties": {
        "allocatedRegions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Set of regions in which the assets were allocated."
        },
        "allocatedAssetCount": {
          "description": "Count of assets which were allocated.",
          "format": "int64",
          "type": "string"
        },
        "machineSeriesAllocations": {
          "type": "array",
          "items": {
            "$ref": "ReportSummaryMachineSeriesAllocation"
          },
          "description": "Distribution of assets based on the Machine Series."
        },
        "allocatedDiskTypes": {
          "description": "Set of disk types allocated to assets.",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
              "Standard HDD Persistent Disk.",
              "Balanced Persistent Disk.",
              "SSD Persistent Disk."
            ],
            "enum": [
              "PERSISTENT_DISK_TYPE_UNSPECIFIED",
              "PERSISTENT_DISK_TYPE_STANDARD",
              "PERSISTENT_DISK_TYPE_BALANCED",
              "PERSISTENT_DISK_TYPE_SSD"
            ]
          },
          "type": "array"
        }
      },
      "description": "A set of findings that applies to assets of type Virtual/Physical Machine.",
      "type": "object"
    },
    "AggregationResultHistogramBucket": {
      "properties": {
        "upperBound": {
          "format": "double",
          "description": "Upper bound - exclusive.",
          "type": "number"
        },
        "count": {
          "description": "Count of items in the bucket.",
          "format": "int64",
          "type": "string"
        },
        "lowerBound": {
          "format": "double",
          "type": "number",
          "description": "Lower bound - inclusive."
        }
      },
      "type": "object",
      "id": "AggregationResultHistogramBucket",
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity."
    },
    "DailyResourceUsageAggregationStats": {
      "description": "Statistical aggregation of samples for a single resource usage.",
      "id": "DailyResourceUsageAggregationStats",
      "type": "object",
      "properties": {
        "ninteyFifthPercentile": {
          "format": "float",
          "description": "95th percentile usage value.",
          "type": "number"
        },
        "average": {
          "description": "Average usage value.",
          "type": "number",
          "format": "float"
        },
        "peak": {
          "type": "number",
          "format": "float",
          "description": "Peak usage value."
        },
        "median": {
          "type": "number",
          "format": "float",
          "description": "Median usage value."
        }
      }
    },
    "AggregateAssetsValuesRequest": {
      "type": "object",
      "properties": {
        "filter": {
          "type": "string",
          "description": "The aggregation will be performed on assets that match the provided filter."
        },
        "aggregations": {
          "description": "Array of aggregations to perform. Up to 25 aggregations can be defined.",
          "type": "array",
          "items": {
            "$ref": "Aggregation"
          }
        }
      },
      "id": "AggregateAssetsValuesRequest",
      "description": "A request to aggregate one or more values."
    },
    "VmwarePlatformDetails": {
      "description": "VMware specific details.",
      "type": "object",
      "properties": {
        "esxVersion": {
          "description": "ESX version.",
          "type": "string"
        },
        "osid": {
          "type": "string",
          "description": "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html."
        },
        "vcenterVersion": {
          "type": "string",
          "description": "vCenter version."
        }
      },
      "id": "VmwarePlatformDetails"
    },
    "Report": {
      "type": "object",
      "id": "Report",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Default Report type.",
            "Total cost of ownership Report type."
          ],
          "description": "Report type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "TOTAL_COST_OF_OWNERSHIP"
          ],
          "type": "string"
        },
        "summary": {
          "description": "Output only. Summary view of the Report.",
          "$ref": "ReportSummary",
          "readOnly": true
        },
        "name": {
          "description": "Output only. Name of resource.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. Last update timestamp.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Default Report creation state.",
            "Creating Report.",
            "Successfully created Report.",
            "Failed to create Report."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "SUCCEEDED",
            "FAILED"
          ],
          "description": "Report creation state."
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Creation timestamp."
        }
      },
      "description": "Report represents a point-in-time rendering of the ReportConfig results."
    },
    "OpenFileDetails": {
      "description": "Open file Information.",
      "id": "OpenFileDetails",
      "properties": {
        "user": {
          "type": "string",
          "description": "Opened file user."
        },
        "filePath": {
          "type": "string",
          "description": "Opened file file path."
        },
        "fileType": {
          "description": "Opened file file type.",
          "type": "string"
        },
        "command": {
          "description": "Opened file command.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Empty": {
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "AggregationResultFrequency": {
      "id": "AggregationResultFrequency",
      "properties": {
        "values": {
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "The result of a frequency distribution aggregation."
    },
    "RegionPreferences": {
      "properties": {
        "preferredRegions": {
          "description": "A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "The user preferences relating to target regions.",
      "type": "object",
      "id": "RegionPreferences"
    },
    "GuestInstalledApplicationList": {
      "properties": {
        "entries": {
          "type": "array",
          "description": "Application entries.",
          "items": {
            "$ref": "GuestInstalledApplication"
          }
        }
      },
      "id": "GuestInstalledApplicationList",
      "type": "object",
      "description": "Guest installed application list."
    },
    "PreferenceSet": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "createTime": {
          "description": "Output only. The timestamp when the preference set was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "virtualMachinePreferences": {
          "description": "A set of preferences that applies to all virtual machines in the context.",
          "$ref": "VirtualMachinePreferences"
        },
        "description": {
          "description": "A description of the preference set.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the preference set."
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the preference set was last updated."
        }
      },
      "description": "The preferences that apply to all assets in a given context.",
      "type": "object",
      "id": "PreferenceSet"
    },
    "ReportSummaryVMWareEngineFinding": {
      "type": "object",
      "id": "ReportSummaryVMWareEngineFinding",
      "description": "A set of findings that applies to assets destined for VMWare Engine.",
      "properties": {
        "nodeAllocations": {
          "items": {
            "$ref": "ReportSummaryVMWareNodeAllocation"
          },
          "description": "Set of per-nodetype allocation records",
          "type": "array"
        },
        "allocatedRegions": {
          "items": {
            "type": "string"
          },
          "description": "Set of regions in which the assets were allocated",
          "type": "array"
        },
        "allocatedAssetCount": {
          "description": "Count of assets which are allocated",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ListImportJobsResponse": {
      "description": "A response for listing import jobs.",
      "id": "ListImportJobsResponse",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "importJobs": {
          "type": "array",
          "items": {
            "$ref": "ImportJob"
          },
          "description": "The list of import jobs."
        }
      },
      "type": "object"
    },
    "GCSPayloadInfo": {
      "id": "GCSPayloadInfo",
      "description": "A resource that represents a payload hosted on Google Cloud Storage.",
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "The payload path in Google Cloud Storage."
        },
        "format": {
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false
          ],
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ],
          "description": "The import job format.",
          "type": "string"
        }
      }
    },
    "MachineSeries": {
      "type": "object",
      "id": "MachineSeries",
      "properties": {
        "code": {
          "description": "Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series.",
          "type": "string"
        }
      },
      "description": "A Compute Engine machine series."
    },
    "ReportSummaryChartDataDataPoint": {
      "description": "Describes a single data point in the Chart.",
      "id": "ReportSummaryChartDataDataPoint",
      "properties": {
        "value": {
          "description": "The Y-axis value for this data point.",
          "format": "double",
          "type": "number"
        },
        "label": {
          "description": "The X-axis label for this data point.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AggregationCount": {
      "type": "object",
      "properties": {},
      "description": "Object count.",
      "id": "AggregationCount"
    },
    "ComputeEnginePreferences": {
      "id": "ComputeEnginePreferences",
      "description": "The user preferences relating to Compute Engine target platform.",
      "properties": {
        "licenseType": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value).",
            "Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with.",
            "Bring-your-own-license (BYOL) plan. User provides the OS license."
          ],
          "description": "License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.",
          "enum": [
            "LICENSE_TYPE_UNSPECIFIED",
            "LICENSE_TYPE_DEFAULT",
            "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE"
          ]
        },
        "persistentDiskType": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ],
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ],
          "description": "Persistent disk type to use. If unspecified (default), all types are considered, based on available usage data."
        },
        "machinePreferences": {
          "description": "Preferences concerning the machine types to consider on Compute Engine.",
          "$ref": "MachinePreferences"
        }
      },
      "type": "object"
    },
    "DailyResourceUsageAggregationDisk": {
      "type": "object",
      "id": "DailyResourceUsageAggregationDisk",
      "properties": {
        "iops": {
          "description": "Disk I/O operations per second.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "description": "Statistical aggregation of disk usage."
    },
    "VirtualMachineDiskDetails": {
      "type": "object",
      "properties": {
        "hddTotalCapacityBytes": {
          "format": "int64",
          "type": "string",
          "description": "Disk total Capacity."
        },
        "disks": {
          "$ref": "DiskEntryList",
          "description": "List of disks."
        },
        "hddTotalFreeBytes": {
          "format": "int64",
          "type": "string",
          "description": "Total Disk Free Space."
        },
        "lsblkJson": {
          "description": "Raw lsblk output in json.",
          "type": "string"
        }
      },
      "id": "VirtualMachineDiskDetails",
      "description": "Details of VM disks."
    },
    "UpdateAssetRequest": {
      "type": "object",
      "description": "A request to update an asset.",
      "id": "UpdateAssetRequest",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        },
        "updateMask": {
          "format": "google-fieldmask",
          "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
          "type": "string"
        },
        "asset": {
          "$ref": "Asset",
          "description": "Required. The resource being updated."
        }
      }
    },
    "ReportSummaryChartData": {
      "description": "Describes a collection of data points rendered as a Chart.",
      "type": "object",
      "properties": {
        "dataPoints": {
          "description": "Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value.",
          "items": {
            "$ref": "ReportSummaryChartDataDataPoint"
          },
          "type": "array"
        }
      },
      "id": "ReportSummaryChartData"
    },
    "SoleTenantNodeType": {
      "id": "SoleTenantNodeType",
      "type": "object",
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes"
        }
      },
      "description": "A Sole Tenant node type."
    },
    "ListAssetsResponse": {
      "id": "ListAssetsResponse",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "assets": {
          "items": {
            "$ref": "Asset"
          },
          "type": "array",
          "description": "A list of assets."
        }
      },
      "type": "object",
      "description": "Response message for listing assets."
    },
    "ReportAssetFramesResponse": {
      "properties": {},
      "id": "ReportAssetFramesResponse",
      "type": "object",
      "description": "A response to a call to `ReportAssetFrame`."
    },
    "ReportSummarySoleTenantNodeAllocation": {
      "type": "object",
      "properties": {
        "nodeCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of this node type to be provisioned"
        },
        "node": {
          "$ref": "SoleTenantNodeType",
          "description": "Sole Tenant node type, e.g. \"m3-node-128-3904\""
        },
        "allocatedAssetCount": {
          "description": "Count of assets allocated to these nodes",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "ReportSummarySoleTenantNodeAllocation",
      "description": "Represents the assets allocated to a specific Sole-Tenant node type."
    },
    "UploadFileInfo": {
      "description": "A resource that contains a URI to which a data file can be uploaded.",
      "id": "UploadFileInfo",
      "type": "object",
      "properties": {
        "signedUri": {
          "description": "Output only. Upload URI for the file.",
          "type": "string",
          "readOnly": true
        },
        "uriExpirationTime": {
          "description": "Output only. Expiration time of the upload URI.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "headers": {
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          },
          "description": "Output only. The headers that were used to sign the URL."
        }
      }
    },
    "Asset": {
      "properties": {
        "insightList": {
          "description": "Output only. The list of insights associated with the asset.",
          "readOnly": true,
          "$ref": "InsightList"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The timestamp when the asset was last updated."
        },
        "performanceData": {
          "description": "Output only. Performance data for the asset.",
          "readOnly": true,
          "$ref": "AssetPerformanceData"
        },
        "assignedGroups": {
          "items": {
            "type": "string"
          },
          "description": "Output only. The list of groups that the asset is assigned to.",
          "readOnly": true,
          "type": "array"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The full name of the asset."
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Output only. The list of sources contributing to the asset."
        },
        "attributes": {
          "description": "Generic asset attributes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the asset was created."
        },
        "virtualMachineDetails": {
          "$ref": "VirtualMachineDetails",
          "description": "Output only. Asset information specific for virtual machines.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "An asset represents a resource in your environment. Asset types include virtual machines and databases.",
      "id": "Asset"
    },
    "ListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          }
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "id": "ListOperationsResponse"
    },
    "GuestOsDetails": {
      "id": "GuestOsDetails",
      "properties": {
        "runtime": {
          "description": "Runtime information.",
          "$ref": "GuestRuntimeDetails"
        },
        "config": {
          "description": "OS and app configuration.",
          "$ref": "GuestConfigDetails"
        }
      },
      "description": "Information from Guest-level collections.",
      "type": "object"
    },
    "ComputeEngineShapeDescriptor": {
      "id": "ComputeEngineShapeDescriptor",
      "type": "object",
      "properties": {
        "logicalCoreCount": {
          "format": "int32",
          "description": "Number of logical cores.",
          "type": "integer"
        },
        "physicalCoreCount": {
          "format": "int32",
          "description": "Number of physical cores.",
          "type": "integer"
        },
        "series": {
          "type": "string",
          "description": "Compute Engine machine series."
        },
        "machineType": {
          "type": "string",
          "description": "Compute Engine machine type."
        },
        "memoryMb": {
          "format": "int32",
          "description": "Memory in mebibytes.",
          "type": "integer"
        },
        "storage": {
          "type": "array",
          "items": {
            "$ref": "ComputeStorageDescriptor"
          },
          "description": "Compute Engine storage. Never empty."
        }
      },
      "description": "Compute Engine target shape descriptor."
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {},
      "id": "CancelOperationRequest"
    },
    "AggregationFrequency": {
      "description": "Frequency distribution of all field values.",
      "id": "AggregationFrequency",
      "properties": {},
      "type": "object"
    },
    "Date": {
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "properties": {
        "year": {
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer"
        },
        "day": {
          "type": "integer",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "format": "int32"
        },
        "month": {
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "format": "int32"
        }
      },
      "id": "Date",
      "type": "object"
    },
    "DailyResourceUsageAggregationNetwork": {
      "description": "Statistical aggregation of network usage.",
      "id": "DailyResourceUsageAggregationNetwork",
      "type": "object",
      "properties": {
        "egressBps": {
          "description": "Network egress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        },
        "ingressBps": {
          "description": "Network ingress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      }
    },
    "ImportError": {
      "description": "A resource that reports the errors encountered while processing an import job.",
      "properties": {
        "severity": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "The severity of the error.",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ]
        },
        "errorDetails": {
          "description": "The error information.",
          "type": "string"
        }
      },
      "id": "ImportError",
      "type": "object"
    },
    "FstabEntryList": {
      "type": "object",
      "description": "Fstab content.",
      "properties": {
        "entries": {
          "items": {
            "$ref": "FstabEntry"
          },
          "description": "Fstab entries.",
          "type": "array"
        }
      },
      "id": "FstabEntryList"
    },
    "TimeZone": {
      "properties": {
        "version": {
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
          "type": "string"
        },
        "id": {
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "TimeZone",
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones)."
    },
    "GuestRuntimeDetails": {
      "description": "Guest OS runtime information.",
      "properties": {
        "openFileList": {
          "description": "Open files information.",
          "$ref": "OpenFileList"
        },
        "lastUptime": {
          "$ref": "Date",
          "description": "Date since last booted (last uptime date)."
        },
        "processes": {
          "description": "Running processes.",
          "$ref": "RunningProcessList"
        },
        "installedApps": {
          "$ref": "GuestInstalledApplicationList",
          "description": "Installed applications information."
        },
        "networkInfo": {
          "description": "Runtime network information (connections, ports).",
          "$ref": "RuntimeNetworkInfo"
        },
        "machineName": {
          "type": "string",
          "description": "Machine name."
        },
        "domain": {
          "type": "string",
          "description": "Domain, e.g. c.stratozone-development.internal."
        },
        "services": {
          "description": "Running background services.",
          "$ref": "RunningServiceList"
        }
      },
      "id": "GuestRuntimeDetails",
      "type": "object"
    },
    "VirtualMachinePreferences": {
      "properties": {
        "regionPreferences": {
          "description": "Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with.",
          "$ref": "RegionPreferences"
        },
        "computeEnginePreferences": {
          "$ref": "ComputeEnginePreferences",
          "description": "Compute Engine preferences concern insights and recommendations for Compute Engine target."
        },
        "vmwareEnginePreferences": {
          "description": "Preferences concerning insights and recommendations for Google Cloud VMware Engine.",
          "$ref": "VmwareEnginePreferences"
        },
        "targetProduct": {
          "description": "Target product for assets using this preference set. Specify either target product or business goal, but not both.",
          "enum": [
            "COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY"
          ],
          "enumDescriptions": [
            "Unspecified (default value).",
            "Prefer to migrate to Google Cloud Compute Engine.",
            "Prefer to migrate to Google Cloud VMware Engine.",
            "Prefer to migrate to Google Cloud Sole Tenant Nodes."
          ],
          "type": "string"
        },
        "sizingOptimizationStrategy": {
          "description": "Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.",
          "enum": [
            "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED",
            "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE",
            "SIZING_OPTIMIZATION_STRATEGY_MODERATE",
            "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE"
          ],
          "enumDescriptions": [
            "Unspecified (default value).",
            "No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.",
            "Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.",
            "Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs."
          ],
          "type": "string"
        },
        "soleTenancyPreferences": {
          "$ref": "SoleTenancyPreferences",
          "description": "Preferences concerning Sole Tenant nodes and virtual machines."
        },
        "commitmentPlan": {
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "COMMITMENT_PLAN_NONE",
            "COMMITMENT_PLAN_ONE_YEAR",
            "COMMITMENT_PLAN_THREE_YEARS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan.",
            "1 year commitment.",
            "3 years commitment."
          ],
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with."
        }
      },
      "id": "VirtualMachinePreferences",
      "type": "object",
      "description": "VirtualMachinePreferences enables you to create sets of assumptions, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets."
    },
    "AwsEc2PlatformDetails": {
      "type": "object",
      "properties": {
        "machineTypeLabel": {
          "description": "AWS platform's machine type label.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "The location of the machine in the AWS format."
        }
      },
      "description": "AWS EC2 specific details.",
      "id": "AwsEc2PlatformDetails"
    },
    "ComputeStorageDescriptor": {
      "id": "ComputeStorageDescriptor",
      "properties": {
        "type": {
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ],
          "type": "string",
          "description": "Disk type backing the storage.",
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ]
        },
        "sizeGb": {
          "type": "integer",
          "description": "Disk size in GiB.",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "Compute Engine storage option descriptor."
    },
    "ListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "type": "object"
    },
    "VmwareEnginePreferences": {
      "description": "The user preferences relating to Google Cloud VMware Engine target platform.",
      "properties": {
        "commitmentPlan": {
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_3_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_1_YEAR_UPFRONT_PAYMENT",
            "COMMITMENT_3_YEAR_UPFRONT_PAYMENT"
          ],
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment (monthly payments).",
            "3 year commitment (monthly payments).",
            "1 year commitment (upfront payment).",
            "3 years commitment (upfront payment)."
          ]
        },
        "cpuOvercommitRatio": {
          "format": "double",
          "type": "number",
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment."
        },
        "memoryOvercommitRatio": {
          "description": "Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0.",
          "format": "double",
          "type": "number"
        },
        "storageDeduplicationCompressionRatio": {
          "type": "number",
          "description": "The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.",
          "format": "double"
        }
      },
      "id": "VmwareEnginePreferences",
      "type": "object"
    },
    "ReportSummaryVMWareNodeAllocation": {
      "description": "Represents assets allocated to a specific VMWare Node type.",
      "properties": {
        "vmwareNode": {
          "description": "VMWare node type, e.g. \"ve1-standard-72\"",
          "$ref": "ReportSummaryVMWareNode"
        },
        "nodeCount": {
          "type": "string",
          "description": "Count of this node type to be provisioned",
          "format": "int64"
        },
        "allocatedAssetCount": {
          "description": "Count of assets allocated to these nodes",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "ReportSummaryVMWareNodeAllocation",
      "type": "object"
    },
    "RunningServiceList": {
      "id": "RunningServiceList",
      "type": "object",
      "description": "List of running guest OS services.",
      "properties": {
        "services": {
          "type": "array",
          "description": "Running service entries.",
          "items": {
            "$ref": "RunningService"
          }
        }
      }
    },
    "BatchDeleteAssetsRequest": {
      "type": "object",
      "id": "BatchDeleteAssetsRequest",
      "properties": {
        "allowMissing": {
          "type": "boolean",
          "description": "Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`."
        },
        "names": {
          "description": "Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "A request to delete a list of asset."
    },
    "InlinePayloadInfo": {
      "properties": {
        "format": {
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false
          ],
          "description": "The import job format.",
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ],
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "type": "string"
        },
        "payload": {
          "type": "array",
          "description": "List of payload files.",
          "items": {
            "$ref": "PayloadFile"
          }
        }
      },
      "type": "object",
      "id": "InlinePayloadInfo",
      "description": "A resource that represents the inline import job payload."
    },
    "PayloadFile": {
      "properties": {
        "data": {
          "type": "string",
          "description": "The file data.",
          "format": "byte"
        },
        "name": {
          "description": "The file name.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "PayloadFile",
      "description": "Payload file for inline import job payload."
    },
    "ImportDataFile": {
      "properties": {
        "createTime": {
          "description": "Output only. The timestamp when the file was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "format": {
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false
          ],
          "description": "Required. The payload format.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually. For more information, see Manually create and upload data tables."
          ],
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_MANUAL_CSV"
          ]
        },
        "uploadFileInfo": {
          "description": "Information about a file that is uploaded to a storage service.",
          "$ref": "UploadFileInfo"
        },
        "state": {
          "description": "Output only. The state of the import data file.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "The data file is being created.",
            "The data file completed initialization."
          ],
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE"
          ]
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the file.",
          "type": "string"
        }
      },
      "id": "ImportDataFile",
      "type": "object",
      "description": "A resource that represents a payload file in an import job."
    },
    "PlatformDetails": {
      "id": "PlatformDetails",
      "description": "Information about the platform.",
      "type": "object",
      "properties": {
        "genericDetails": {
          "description": "Generic platform details.",
          "$ref": "GenericPlatformDetails"
        },
        "awsEc2Details": {
          "description": "AWS EC2 specific details.",
          "$ref": "AwsEc2PlatformDetails"
        },
        "physicalDetails": {
          "description": "Physical machines platform details.",
          "$ref": "PhysicalPlatformDetails"
        },
        "azureVmDetails": {
          "description": "Azure VM specific details.",
          "$ref": "AzureVmPlatformDetails"
        },
        "vmwareDetails": {
          "description": "VMware specific details.",
          "$ref": "VmwarePlatformDetails"
        }
      }
    },
    "ErrorFrame": {
      "id": "ErrorFrame",
      "type": "object",
      "properties": {
        "ingestionTime": {
          "type": "string",
          "description": "Output only. Frame ingestion time.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The identifier of the ErrorFrame."
        },
        "violations": {
          "description": "Output only. All the violations that were detected for the frame.",
          "type": "array",
          "items": {
            "$ref": "FrameViolationEntry"
          },
          "readOnly": true
        },
        "originalFrame": {
          "description": "Output only. The frame that was originally reported.",
          "readOnly": true,
          "$ref": "AssetFrame"
        }
      },
      "description": "Message representing a frame which failed to be processed due to an error."
    },
    "ImportRowError": {
      "type": "object",
      "id": "ImportRowError",
      "properties": {
        "errors": {
          "items": {
            "$ref": "ImportError"
          },
          "type": "array",
          "description": "The list of errors detected in the row."
        },
        "vmUuid": {
          "description": "The VM UUID.",
          "type": "string"
        },
        "vmName": {
          "type": "string",
          "description": "The name of the VM in the row."
        },
        "rowNumber": {
          "format": "int32",
          "type": "integer",
          "deprecated": true,
          "description": "The row number where the error was detected."
        }
      },
      "description": "A resource that reports the import job errors at row level."
    },
    "AddAssetsToGroupRequest": {
      "id": "AddAssetsToGroupRequest",
      "description": "A request to add assets to a group.",
      "properties": {
        "allowExisting": {
          "type": "boolean",
          "description": "Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`."
        },
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        },
        "assets": {
          "$ref": "AssetList",
          "description": "Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000."
        }
      },
      "type": "object"
    },
    "BiosDetails": {
      "id": "BiosDetails",
      "description": "Details about the BIOS.",
      "type": "object",
      "properties": {
        "biosName": {
          "description": "BIOS name.",
          "type": "string"
        },
        "biosManufacturer": {
          "description": "BIOS manufacturer.",
          "type": "string"
        },
        "smbiosUuid": {
          "description": "SMBIOS UUID.",
          "type": "string"
        },
        "biosReleaseDate": {
          "description": "BIOS release date.",
          "type": "string"
        },
        "biosVersion": {
          "description": "BIOS version.",
          "type": "string"
        }
      }
    },
    "ReportSummaryMachineSeriesAllocation": {
      "properties": {
        "allocatedAssetCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of assets allocated to this machine series."
        },
        "machineSeries": {
          "$ref": "MachineSeries",
          "description": "The Machine Series (e.g. \"E2\", \"N2\")"
        }
      },
      "type": "object",
      "id": "ReportSummaryMachineSeriesAllocation",
      "description": "Represents a data point tracking the count of assets allocated for a specific Machine Series."
    },
    "NfsExport": {
      "type": "object",
      "id": "NfsExport",
      "properties": {
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The hosts or networks to which the export is being shared."
        },
        "exportDirectory": {
          "type": "string",
          "description": "The directory being exported."
        }
      },
      "description": "NFS export."
    },
    "MigrationInsight": {
      "id": "MigrationInsight",
      "type": "object",
      "properties": {
        "computeEngineTarget": {
          "readOnly": true,
          "$ref": "ComputeEngineMigrationTarget",
          "description": "Output only. A Google Compute Engine target."
        },
        "fit": {
          "description": "Output only. Description of how well the asset this insight is associated with fits the proposed migration.",
          "readOnly": true,
          "$ref": "FitDescriptor"
        },
        "gkeTarget": {
          "$ref": "GoogleKubernetesEngineMigrationTarget",
          "description": "Output only. A Google Kubernetes Engine target.",
          "readOnly": true
        },
        "vmwareEngineTarget": {
          "readOnly": true,
          "description": "Output only. A VMWare Engine target.",
          "$ref": "VmwareEngineMigrationTarget"
        }
      },
      "description": "An insight about potential migrations for an asset."
    },
    "NetworkConnectionList": {
      "description": "Network connection list.",
      "properties": {
        "entries": {
          "description": "Network connection entries.",
          "type": "array",
          "items": {
            "$ref": "NetworkConnection"
          }
        }
      },
      "type": "object",
      "id": "NetworkConnectionList"
    },
    "AggregationResultSum": {
      "id": "AggregationResultSum",
      "properties": {
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object",
      "description": "The result of a sum aggregation."
    },
    "NetworkAddressList": {
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "NetworkAddress"
          },
          "description": "Network address entries."
        }
      },
      "type": "object",
      "description": "List of allocated/assigned network addresses.",
      "id": "NetworkAddressList"
    },
    "MachinePreferences": {
      "properties": {
        "allowedMachineSeries": {
          "type": "array",
          "description": "Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.",
          "items": {
            "$ref": "MachineSeries"
          }
        }
      },
      "type": "object",
      "id": "MachinePreferences",
      "description": "The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions."
    },
    "ListImportDataFilesResponse": {
      "properties": {
        "importDataFiles": {
          "items": {
            "$ref": "ImportDataFile"
          },
          "description": "The list of import data files.",
          "type": "array"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "description": "Response for listing payload files of an import job.",
      "id": "ListImportDataFilesResponse",
      "type": "object"
    },
    "DailyResourceUsageAggregation": {
      "id": "DailyResourceUsageAggregation",
      "properties": {
        "disk": {
          "$ref": "DailyResourceUsageAggregationDisk",
          "description": "Disk usage."
        },
        "memory": {
          "description": "Memory usage.",
          "$ref": "DailyResourceUsageAggregationMemory"
        },
        "date": {
          "$ref": "Date",
          "description": "Aggregation date. Day boundaries are at midnight UTC."
        },
        "cpu": {
          "$ref": "DailyResourceUsageAggregationCPU",
          "description": "CPU usage."
        },
        "network": {
          "description": "Network usage.",
          "$ref": "DailyResourceUsageAggregationNetwork"
        }
      },
      "description": "Usage data aggregation for a single day.",
      "type": "object"
    },
    "ListSourcesResponse": {
      "description": "Response message for listing sources.",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "sources": {
          "items": {
            "$ref": "Source"
          },
          "type": "array",
          "description": "The list of sources."
        }
      },
      "id": "ListSourcesResponse",
      "type": "object"
    },
    "HostsEntry": {
      "id": "HostsEntry",
      "properties": {
        "hostNames": {
          "description": "List of host names / aliases.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ip": {
          "type": "string",
          "description": "IP (raw, IPv4/6 agnostic)."
        }
      },
      "description": "Single /etc/hosts entry.",
      "type": "object"
    },
    "NetworkUsageSample": {
      "id": "NetworkUsageSample",
      "type": "object",
      "properties": {
        "averageEgressBps": {
          "format": "float",
          "type": "number",
          "description": "Average network egress in B/s sampled over a short window. Must be non-negative."
        },
        "averageIngressBps": {
          "description": "Average network ingress in B/s sampled over a short window. Must be non-negative.",
          "format": "float",
          "type": "number"
        }
      },
      "description": "Network usage sample. Values are across all network interfaces."
    },
    "FitDescriptor": {
      "properties": {
        "fitLevel": {
          "type": "string",
          "enumDescriptions": [
            "Not enough information.",
            "Fit.",
            "No Fit.",
            "Fit with effort."
          ],
          "enum": [
            "FIT_LEVEL_UNSPECIFIED",
            "FIT",
            "NO_FIT",
            "REQUIRES_EFFORT"
          ],
          "description": "Fit level."
        }
      },
      "id": "FitDescriptor",
      "description": "Describes the fit level of an asset for migration to a specific target.",
      "type": "object"
    },
    "DailyResourceUsageAggregationCPU": {
      "properties": {
        "utilizationPercentage": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "CPU utilization percentage."
        }
      },
      "description": "Statistical aggregation of CPU usage.",
      "id": "DailyResourceUsageAggregationCPU",
      "type": "object"
    },
    "ListReportConfigsResponse": {
      "type": "object",
      "description": "Response message for listing report configs.",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "reportConfigs": {
          "description": "A list of report configs.",
          "type": "array",
          "items": {
            "$ref": "ReportConfig"
          }
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ListReportConfigsResponse"
    },
    "BatchUpdateAssetsResponse": {
      "type": "object",
      "description": "Response for updating a list of assets.",
      "id": "BatchUpdateAssetsResponse",
      "properties": {
        "assets": {
          "type": "array",
          "description": "Update asset content. The content only includes values after field mask being applied.",
          "items": {
            "$ref": "Asset"
          }
        }
      }
    },
    "Aggregation": {
      "properties": {
        "frequency": {
          "$ref": "AggregationFrequency",
          "description": "Creates a frequency distribution of all field values."
        },
        "field": {
          "description": "The name of the field on which to aggregate.",
          "type": "string"
        },
        "count": {
          "$ref": "AggregationCount",
          "description": "Count the number of matching objects."
        },
        "histogram": {
          "description": "Creates a bucketed histogram of field values.",
          "$ref": "AggregationHistogram"
        },
        "sum": {
          "$ref": "AggregationSum",
          "description": "Sum over a numeric field."
        }
      },
      "description": "Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.",
      "id": "Aggregation",
      "type": "object"
    },
    "Group": {
      "id": "Group",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the group was last updated."
        },
        "name": {
          "description": "Output only. The name of the group.",
          "readOnly": true,
          "type": "string"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name."
        },
        "description": {
          "description": "The description of the resource.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the group was created."
        }
      },
      "type": "object",
      "description": "A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups."
    },
    "AggregateAssetsValuesResponse": {
      "description": "A response to a request to aggregated assets values.",
      "id": "AggregateAssetsValuesResponse",
      "properties": {
        "results": {
          "description": "The aggregation results.",
          "type": "array",
          "items": {
            "$ref": "AggregationResult"
          }
        }
      },
      "type": "object"
    },
    "VmwareEngineMigrationTarget": {
      "description": "VMWare engine migration target.",
      "type": "object",
      "properties": {},
      "id": "VmwareEngineMigrationTarget"
    },
    "ReportSummaryHistogramChartData": {
      "properties": {
        "buckets": {
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "items": {
            "$ref": "ReportSummaryHistogramChartDataBucket"
          },
          "type": "array"
        }
      },
      "description": "A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.",
      "id": "ReportSummaryHistogramChartData",
      "type": "object"
    },
    "ListReportsResponse": {
      "id": "ListReportsResponse",
      "properties": {
        "reports": {
          "items": {
            "$ref": "Report"
          },
          "type": "array",
          "description": "The list of Reports."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      },
      "description": "Response message for listing Reports.",
      "type": "object"
    },
    "ImportJob": {
      "type": "object",
      "description": "A resource that represents the background job that imports asset frames.",
      "id": "ImportJob",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the import job was last updated."
        },
        "inlinePayload": {
          "description": "The payload is included in the request, mainly used for small import jobs.",
          "$ref": "InlinePayloadInfo"
        },
        "name": {
          "description": "Output only. The full name of the import job.",
          "type": "string",
          "readOnly": true
        },
        "gcsPayload": {
          "deprecated": true,
          "$ref": "GCSPayloadInfo",
          "description": "The payload is in Google Cloud Storage."
        },
        "completeTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the import job was completed."
        },
        "state": {
          "type": "string",
          "enum": [
            "IMPORT_JOB_STATE_UNSPECIFIED",
            "IMPORT_JOB_STATE_PENDING",
            "IMPORT_JOB_STATE_RUNNING",
            "IMPORT_JOB_STATE_COMPLETED",
            "IMPORT_JOB_STATE_FAILED",
            "IMPORT_JOB_STATE_VALIDATING",
            "IMPORT_JOB_STATE_FAILED_VALIDATION",
            "IMPORT_JOB_STATE_READY"
          ],
          "description": "Output only. The state of the import job.",
          "enumDescriptions": [
            "Default value.",
            "The import job is pending.",
            "The processing of the import job is ongoing.",
            "The import job processing has completed.",
            "The import job failed to be processed.",
            "The import job is being validated.",
            "The import job contains blocking errors.",
            "The validation of the job completed with no blocking errors."
          ],
          "readOnly": true
        },
        "assetSource": {
          "type": "string",
          "description": "Required. Reference to a source."
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "validationReport": {
          "description": "Output only. The report with the validation results of the import job.",
          "$ref": "ValidationReport",
          "readOnly": true
        },
        "executionReport": {
          "readOnly": true,
          "description": "Output only. The report with the results of running the import job.",
          "$ref": "ExecutionReport"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the import job was created."
        }
      }
    },
    "ReportConfigGroupPreferenceSetAssignment": {
      "type": "object",
      "id": "ReportConfigGroupPreferenceSetAssignment",
      "properties": {
        "preferenceSet": {
          "type": "string",
          "description": "Required. Name of the Preference Set."
        },
        "group": {
          "description": "Required. Name of the group.",
          "type": "string"
        }
      },
      "description": "Represents a combination of a group with a preference set."
    },
    "NetworkConnection": {
      "id": "NetworkConnection",
      "properties": {
        "protocol": {
          "description": "Connection protocol (e.g. TCP/UDP).",
          "type": "string"
        },
        "processName": {
          "type": "string",
          "description": "Process or service name."
        },
        "localIpAddress": {
          "description": "Local IP address.",
          "type": "string"
        },
        "pid": {
          "description": "Process ID.",
          "format": "int64",
          "type": "string"
        },
        "localPort": {
          "format": "int32",
          "description": "Local port.",
          "type": "integer"
        },
        "remotePort": {
          "description": "Remote port.",
          "type": "integer",
          "format": "int32"
        },
        "remoteIpAddress": {
          "type": "string",
          "description": "Remote IP address."
        },
        "state": {
          "description": "Connection state (e.g. CONNECTED).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Money": {
      "properties": {
        "units": {
          "format": "int64",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "type": "string"
        },
        "nanos": {
          "format": "int32",
          "type": "integer",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        },
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        }
      },
      "description": "Represents an amount of money with its currency type.",
      "id": "Money",
      "type": "object"
    },
    "VirtualMachineArchitectureDetails": {
      "id": "VirtualMachineArchitectureDetails",
      "type": "object",
      "properties": {
        "bios": {
          "$ref": "BiosDetails",
          "description": "BIOS Details."
        },
        "cpuName": {
          "description": "CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc.",
          "type": "string"
        },
        "cpuArchitecture": {
          "type": "string",
          "description": "CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc."
        },
        "hyperthreading": {
          "enumDescriptions": [
            "Unknown (default value).",
            "Hyperthreading is disabled.",
            "Hyperthreading is enabled."
          ],
          "description": "CPU hyperthreading support.",
          "type": "string",
          "enum": [
            "HYPER_THREADING_UNSPECIFIED",
            "HYPER_THREADING_DISABLED",
            "HYPER_THREADING_ENABLED"
          ]
        },
        "cpuSocketCount": {
          "type": "integer",
          "description": "Number of processor sockets allocated to the machine.",
          "format": "int32"
        },
        "vendor": {
          "description": "Hardware vendor.",
          "type": "string"
        },
        "cpuManufacturer": {
          "description": "CPU manufacturer, e.g., \"Intel\", \"AMD\".",
          "type": "string"
        },
        "cpuThreadCount": {
          "description": "Number of CPU threads allocated to the machine.",
          "type": "integer",
          "format": "int32"
        },
        "firmware": {
          "type": "string",
          "description": "Firmware (BIOS/efi)."
        }
      },
      "description": "Details of the VM architecture."
    },
    "MemoryUsageSample": {
      "type": "object",
      "id": "MemoryUsageSample",
      "description": "Memory usage sample.",
      "properties": {
        "utilizedPercentage": {
          "description": "Percentage of system memory utilized. Must be in the interval [0, 100].",
          "format": "float",
          "type": "number"
        }
      }
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      },
      "id": "Operation",
      "type": "object"
    },
    "PhysicalPlatformDetails": {
      "type": "object",
      "description": "Platform specific details for Physical Machines.",
      "properties": {
        "location": {
          "type": "string",
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field."
        }
      },
      "id": "PhysicalPlatformDetails"
    },
    "NfsExportList": {
      "properties": {
        "entries": {
          "items": {
            "$ref": "NfsExport"
          },
          "type": "array",
          "description": "NFS export entries."
        }
      },
      "type": "object",
      "description": "NFS exports.",
      "id": "NfsExportList"
    },
    "SoleTenancyPreferences": {
      "description": "Preferences concerning Sole Tenancy nodes and VMs.",
      "properties": {
        "commitmentPlan": {
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR",
            "COMMITMENT_3_YEAR"
          ],
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment.",
            "3 years commitment."
          ],
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "type": "string"
        },
        "cpuOvercommitRatio": {
          "type": "number",
          "format": "double",
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive."
        },
        "hostMaintenancePolicy": {
          "enum": [
            "HOST_MAINTENANCE_POLICY_UNSPECIFIED",
            "HOST_MAINTENANCE_POLICY_DEFAULT",
            "HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE",
            "HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP"
          ],
          "enumDescriptions": [
            "Unspecified host maintenance policy.",
            "Default host maintenance policy.",
            "Restart in place host maintenance policy.",
            "Migrate within node group host maintenance policy."
          ],
          "description": "Sole Tenancy nodes maintenance policy.",
          "type": "string"
        },
        "nodeTypes": {
          "description": "A list of sole tenant node types. An empty list means that all possible node types will be considered.",
          "type": "array",
          "items": {
            "$ref": "SoleTenantNodeType"
          }
        }
      },
      "type": "object",
      "id": "SoleTenancyPreferences"
    },
    "InsightList": {
      "type": "object",
      "properties": {
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Update timestamp."
        },
        "insights": {
          "items": {
            "$ref": "Insight"
          },
          "readOnly": true,
          "description": "Output only. Insights of the list.",
          "type": "array"
        }
      },
      "id": "InsightList",
      "description": "Message containing insights list."
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "servicePath": "",
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "title": "Migration Center API",
  "discoveryVersion": "v1",
  "id": "migrationcenter:v1alpha1",
  "name": "migrationcenter",
  "version": "v1alpha1",
  "protocol": "rest",
  "ownerDomain": "google.com",
  "canonicalName": "Migration Center API",
  "basePath": "",
  "version_module": true,
  "baseUrl": "https://migrationcenter.googleapis.com/",
  "rootUrl": "https://migrationcenter.googleapis.com/"
}

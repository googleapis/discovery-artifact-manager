{
  "version": "v1alpha1",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "servicePath": "",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "path": "v1alpha1/{+name}/locations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service.",
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "type": "integer",
                  "format": "int32"
                },
                "filter": {
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "name": {
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "id": "migrationcenter.projects.locations.list"
            },
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "Location"
              },
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location.",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "id": "migrationcenter.projects.locations.get",
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ]
            }
          },
          "resources": {
            "sources": {
              "methods": {
                "get": {
                  "id": "migrationcenter.projects.locations.sources.get",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets the details of a source.",
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Source"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Value for parent.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "sourceId": {
                      "type": "string",
                      "description": "Required. User specified ID for the source. It will become the last component of the source name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "location": "query"
                    }
                  },
                  "path": "v1alpha1/{+parent}/sources",
                  "id": "migrationcenter.projects.locations.sources.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "description": "Creates a new source in a given project and location.",
                  "request": {
                    "$ref": "Source"
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a source.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "type": "string"
                    }
                  },
                  "id": "migrationcenter.projects.locations.sources.delete",
                  "path": "v1alpha1/{+name}"
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "description": "Output only. The full name of the source.",
                      "required": true
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Source` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "description": "Updates the parameters of a source.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Source"
                  },
                  "id": "migrationcenter.projects.locations.sources.patch"
                },
                "list": {
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.sources.list",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/sources",
                  "response": {
                    "$ref": "ListSourcesResponse"
                  },
                  "parameters": {
                    "filter": {
                      "description": "Filtering results.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Parent value for `ListSourcesRequest`."
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results that the server should return.",
                      "location": "query"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "description": "Lists all the sources in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "importJobs": {
              "methods": {
                "run": {
                  "id": "migrationcenter.projects.locations.importJobs.run",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}:run",
                  "request": {
                    "$ref": "RunImportJobRequest"
                  },
                  "description": "Runs an import job.",
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the import job to run.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "required": true
                    }
                  }
                },
                "validate": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate",
                  "path": "v1alpha1/{+name}:validate",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the import job to validate.",
                      "required": true
                    }
                  },
                  "id": "migrationcenter.projects.locations.importJobs.validate",
                  "request": {
                    "$ref": "ValidateImportJobRequest"
                  },
                  "description": "Validates an import job."
                },
                "list": {
                  "id": "migrationcenter.projects.locations.importJobs.list",
                  "response": {
                    "$ref": "ListImportJobsResponse"
                  },
                  "description": "Lists all import jobs.",
                  "parameters": {
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Parent value for `ListImportJobsRequest`.",
                      "type": "string"
                    },
                    "view": {
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "location": "query",
                      "description": "Optional. The level of details of each import job. Default value is BASIC.",
                      "type": "string"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/importJobs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs"
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.importJobs.patch",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. The full name of the import job.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates an import job."
                },
                "delete": {
                  "id": "migrationcenter.projects.locations.importJobs.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes an import job.",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE"
                },
                "create": {
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "importJobId": {
                      "type": "string",
                      "description": "Required. ID of the import job.",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+parent}/importJobs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "description": "Creates an import job.",
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "id": "migrationcenter.projects.locations.importJobs.create"
                },
                "get": {
                  "response": {
                    "$ref": "ImportJob"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "required": true
                    },
                    "view": {
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "type": "string",
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "description": "Optional. The level of details of the import job. Default value is FULL.",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "description": "Gets the details of an import job."
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "id": "migrationcenter.projects.locations.operations.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "parameters": {
                    "pageToken": {
                      "description": "The standard list page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The standard list page size.",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list filter."
                    },
                    "name": {
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "id": "migrationcenter.projects.locations.operations.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "path": "v1alpha1/{+name}/operations"
                },
                "cancel": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "path": "v1alpha1/{+name}:cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "migrationcenter.projects.locations.operations.cancel",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel"
                },
                "get": {
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.operations.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "assets": {
              "methods": {
                "patch": {
                  "request": {
                    "$ref": "Asset"
                  },
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.assets.patch",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "description": "Output only. The full name of the asset.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of an asset.",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "description": "Lists all the assets in a given project and location.",
                  "path": "v1alpha1/{+parent}/assets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets",
                  "response": {
                    "$ref": "ListAssetsResponse"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "location": "query"
                    },
                    "view": {
                      "description": "View of the assets. Defaults to BASIC.",
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ],
                      "location": "query",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset.",
                        "The asset view includes the standard metadata of an asset."
                      ],
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results the server should return."
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent value for `ListAssetsRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Filtering results.",
                      "type": "string"
                    }
                  },
                  "id": "migrationcenter.projects.locations.assets.list",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "delete": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.assets.delete",
                  "path": "v1alpha1/{+name}",
                  "description": "Deletes an asset.",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "aggregateValues": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent value for `AggregateAssetsValuesRequest`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues",
                  "request": {
                    "$ref": "AggregateAssetsValuesRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/assets:aggregateValues",
                  "description": "Aggregates the requested fields based on provided function.",
                  "id": "migrationcenter.projects.locations.assets.aggregateValues",
                  "response": {
                    "$ref": "AggregateAssetsValuesResponse"
                  }
                },
                "get": {
                  "description": "Gets the details of an asset.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.assets.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "view": {
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ],
                      "type": "string",
                      "location": "query",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset.",
                        "The asset view includes the standard metadata of an asset."
                      ],
                      "description": "View of the assets. Defaults to BASIC."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Asset"
                  }
                },
                "batchUpdate": {
                  "id": "migrationcenter.projects.locations.assets.batchUpdate",
                  "response": {
                    "$ref": "BatchUpdateAssetsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/assets:batchUpdate",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:batchUpdate",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent value for batch asset update.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Updates the parameters of a list of assets.",
                  "request": {
                    "$ref": "BatchUpdateAssetsRequest"
                  }
                },
                "reportAssetFrames": {
                  "path": "v1alpha1/{+parent}/assets:reportAssetFrames",
                  "response": {
                    "$ref": "ReportAssetFramesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. Parent of the resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "source": {
                      "location": "query",
                      "description": "Required. Reference to a source.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Reports a set of frames.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames",
                  "request": {
                    "$ref": "Frames"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "id": "migrationcenter.projects.locations.assets.reportAssetFrames"
                },
                "create": {
                  "request": {
                    "$ref": "Asset"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates a new asset in a given project and location. Deprecated: Use ReportAssetFrames instead.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/assets",
                  "id": "migrationcenter.projects.locations.assets.create",
                  "parameters": {
                    "assetId": {
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Value for parent."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "name": "migrationcenter",
  "documentationLink": "https://cloud.google.com/migration-center",
  "canonicalName": "Migration Center API",
  "protocol": "rest",
  "discoveryVersion": "v1",
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "$.xgafv": {
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "alt": {
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string"
    }
  },
  "schemas": {
    "DiskPartitionList": {
      "id": "DiskPartitionList",
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "description": "Partition entries.",
          "items": {
            "$ref": "DiskPartition"
          }
        }
      }
    },
    "RunningService": {
      "description": "Guest OS running service details.",
      "properties": {
        "pid": {
          "format": "int64",
          "description": "Service pid.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Service name."
        },
        "startMode": {
          "type": "string",
          "description": "Service start mode (raw, OS-agnostic)."
        },
        "cmdline": {
          "description": "Service command line.",
          "type": "string"
        },
        "exePath": {
          "type": "string",
          "description": "Service binary path."
        },
        "status": {
          "type": "string",
          "description": "Service status."
        },
        "state": {
          "description": "Service state (raw, OS-agnostic).",
          "type": "string"
        }
      },
      "type": "object",
      "id": "RunningService"
    },
    "DiskUsageSample": {
      "id": "DiskUsageSample",
      "description": "Disk usage sample. Values are across all disks.",
      "type": "object",
      "properties": {
        "averageIops": {
          "format": "float",
          "description": "Average IOPS sampled over a short window. Must be non-negative.",
          "type": "number"
        }
      }
    },
    "CpuUsageSample": {
      "description": "CPU usage sample.",
      "properties": {
        "utilizedPercentage": {
          "format": "float",
          "type": "number",
          "description": "Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage."
        }
      },
      "type": "object",
      "id": "CpuUsageSample"
    },
    "NetworkAdapterDetails": {
      "id": "NetworkAdapterDetails",
      "properties": {
        "adapterType": {
          "description": "Network adapter type (e.g. VMXNET3).",
          "type": "string"
        },
        "macAddress": {
          "description": "MAC address.",
          "type": "string"
        },
        "addresses": {
          "description": "NetworkAddressList",
          "$ref": "NetworkAddressList"
        }
      },
      "type": "object",
      "description": "Details of network adapter."
    },
    "RunningProcess": {
      "properties": {
        "cmdline": {
          "description": "Process full command line.",
          "type": "string"
        },
        "user": {
          "description": "User running the process.",
          "type": "string"
        },
        "pid": {
          "format": "int64",
          "type": "string",
          "description": "Process ID."
        },
        "exePath": {
          "type": "string",
          "description": "Process binary path."
        },
        "attributes": {
          "type": "object",
          "description": "Process extended attributes.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "Guest OS running process details.",
      "type": "object",
      "id": "RunningProcess"
    },
    "NfsExportList": {
      "type": "object",
      "id": "NfsExportList",
      "description": "NFS exports.",
      "properties": {
        "entries": {
          "items": {
            "$ref": "NfsExport"
          },
          "description": "NFS export entries.",
          "type": "array"
        }
      }
    },
    "GCSPayloadInfo": {
      "properties": {
        "path": {
          "type": "string",
          "description": "The payload path in Google Cloud Storage."
        },
        "format": {
          "description": "The import job format.",
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_JSON_FRAME"
          ],
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "`AssetFrame` list in JSON format."
          ],
          "type": "string"
        }
      },
      "id": "GCSPayloadInfo",
      "type": "object",
      "description": "A resource that represents a payload hosted on Google Cloud Storage."
    },
    "ListSourcesResponse": {
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "sources": {
          "description": "The list of sources.",
          "items": {
            "$ref": "Source"
          },
          "type": "array"
        }
      },
      "id": "ListSourcesResponse",
      "description": "Response message for listing sources.",
      "type": "object"
    },
    "VirtualMachineNetworkDetails": {
      "id": "VirtualMachineNetworkDetails",
      "description": "Details of network adapters and settings",
      "properties": {
        "networkAdapters": {
          "$ref": "NetworkAdapterList",
          "description": "List of Network Adapters."
        },
        "primaryIpAddress": {
          "type": "string",
          "description": "IP Address of the machine."
        },
        "defaultGw": {
          "description": "Default GW address. Top-level object, will be later encriched by full RouteInfo.",
          "type": "string"
        },
        "primaryMacAddress": {
          "type": "string",
          "description": "MAC Address of the machine. This property is used to uniqly identify the machine."
        }
      },
      "type": "object"
    },
    "AggregationResult": {
      "id": "AggregationResult",
      "type": "object",
      "description": "Message describing a result of an aggregation.",
      "properties": {
        "sum": {
          "$ref": "AggregationResultSum"
        },
        "field": {
          "type": "string"
        },
        "histogram": {
          "$ref": "AggregationResultHistogram"
        },
        "count": {
          "$ref": "AggregationResultCount"
        },
        "frequency": {
          "$ref": "AggregationResultFrequency"
        }
      }
    },
    "AggregateAssetsValuesRequest": {
      "description": "A request to aggregate one or more values.",
      "type": "object",
      "id": "AggregateAssetsValuesRequest",
      "properties": {
        "filter": {
          "description": "The aggregation will be performed on assets that match the provided filter.",
          "type": "string"
        },
        "aggregations": {
          "items": {
            "$ref": "Aggregation"
          },
          "type": "array",
          "description": "Array of aggregations to perform. Up to 25 aggregations can be defined."
        }
      }
    },
    "OpenFileDetails": {
      "description": "Open file Information.",
      "id": "OpenFileDetails",
      "type": "object",
      "properties": {
        "command": {
          "description": "Opened file command.",
          "type": "string"
        },
        "filePath": {
          "type": "string",
          "description": "Opened file file path."
        },
        "fileType": {
          "type": "string",
          "description": "Opened file file type."
        },
        "user": {
          "description": "Opened file user.",
          "type": "string"
        }
      }
    },
    "Frames": {
      "id": "Frames",
      "properties": {
        "framesData": {
          "items": {
            "$ref": "AssetFrame"
          },
          "type": "array",
          "description": "A repeated field of asset data."
        }
      },
      "description": "Collection of frame data.",
      "type": "object"
    },
    "AggregateAssetsValuesResponse": {
      "description": "A response to a request to aggregated assets values.",
      "type": "object",
      "properties": {
        "results": {
          "description": "The aggregation results.",
          "type": "array",
          "items": {
            "$ref": "AggregationResult"
          }
        }
      },
      "id": "AggregateAssetsValuesResponse"
    },
    "Source": {
      "id": "Source",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "User-friendly display name.",
          "type": "string"
        },
        "type": {
          "description": "Data source type.",
          "enum": [
            "SOURCE_TYPE_UNKNOWN",
            "SOURCE_TYPE_UPLOAD",
            "SOURCE_TYPE_GUEST_OS_SCAN",
            "SOURCE_TYPE_INVENTORY_SCAN",
            "SOURCE_TYPE_CUSTOM"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified",
            "Manually uploaded file (e.g. CSV)",
            "Guest-level info",
            "Inventory-level scan",
            "Third-party owned sources."
          ]
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The timestamp when the source was last updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "pendingFrameCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Output only. Number of frames that are still being processed.",
          "format": "int32"
        },
        "description": {
          "description": "Free-text description.",
          "type": "string"
        },
        "isManaged": {
          "type": "boolean",
          "description": "If `true`, the source is managed by other service(s)."
        },
        "name": {
          "description": "Output only. The full name of the source.",
          "type": "string",
          "readOnly": true
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The information confidence of the source. The higher the value, the higher the confidence."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The timestamp when the source was created.",
          "format": "google-datetime",
          "readOnly": true
        }
      },
      "description": "Source represents an object from which asset information is streamed to Migration Center."
    },
    "RunImportJobRequest": {
      "type": "object",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "id": "RunImportJobRequest",
      "description": "A request to run an import job."
    },
    "NfsExport": {
      "description": "NFS export.",
      "type": "object",
      "properties": {
        "exportDirectory": {
          "type": "string",
          "description": "The directory being exported."
        },
        "hosts": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The hosts or networks to which the export is being shared."
        }
      },
      "id": "NfsExport"
    },
    "GuestInstalledApplicationList": {
      "properties": {
        "entries": {
          "items": {
            "$ref": "GuestInstalledApplication"
          },
          "type": "array"
        }
      },
      "description": "Guest installed application list.",
      "type": "object",
      "id": "GuestInstalledApplicationList"
    },
    "OpenFileList": {
      "description": "Open file list.",
      "properties": {
        "entries": {
          "type": "array",
          "description": "Open file details entries.",
          "items": {
            "$ref": "OpenFileDetails"
          }
        }
      },
      "id": "OpenFileList",
      "type": "object"
    },
    "ListAssetsResponse": {
      "description": "Response message for listing assets.",
      "type": "object",
      "id": "ListAssetsResponse",
      "properties": {
        "assets": {
          "description": "A list of assets.",
          "type": "array",
          "items": {
            "$ref": "Asset"
          }
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        }
      }
    },
    "FileValidationReport": {
      "type": "object",
      "description": "A resource that aggregates the validation errors found in an import job file.",
      "id": "FileValidationReport",
      "properties": {
        "partialReport": {
          "type": "boolean",
          "description": "Flag indicating that processing was aborted due to maximum number of errors."
        },
        "fileName": {
          "description": "The name of the file.",
          "type": "string"
        },
        "rowErrors": {
          "type": "array",
          "items": {
            "$ref": "ImportRowError"
          },
          "description": "Partial list of rows that encountered validation error."
        },
        "fileErrors": {
          "type": "array",
          "items": {
            "$ref": "ImportError"
          },
          "description": "List of file level errors."
        }
      }
    },
    "AggregationResultHistogram": {
      "type": "object",
      "properties": {
        "buckets": {
          "items": {
            "$ref": "AggregationResultHistogramBucket"
          },
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "type": "array"
        }
      },
      "description": "The result of a bucketed histogram aggregation.",
      "id": "AggregationResultHistogram"
    },
    "DateTime": {
      "type": "object",
      "properties": {
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day."
        },
        "utcOffset": {
          "type": "string",
          "format": "google-duration",
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }."
        },
        "month": {
          "type": "integer",
          "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.",
          "format": "int32"
        },
        "timeZone": {
          "$ref": "TimeZone",
          "description": "Time zone."
        },
        "nanos": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0."
        },
        "year": {
          "format": "int32",
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
          "type": "integer"
        },
        "hours": {
          "type": "integer",
          "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "format": "int32"
        },
        "seconds": {
          "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.",
          "format": "int32",
          "type": "integer"
        },
        "minutes": {
          "format": "int32",
          "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
          "type": "integer"
        }
      },
      "id": "DateTime",
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations."
    },
    "Location": {
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        }
      },
      "type": "object",
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location."
    },
    "OperationMetadata": {
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        },
        "target": {
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true
        },
        "apiVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. API version used to start the operation."
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        },
        "statusMessage": {
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        }
      },
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object"
    },
    "DiskPartition": {
      "id": "DiskPartition",
      "type": "object",
      "description": "Disk Partition details.",
      "properties": {
        "freeBytes": {
          "format": "int64",
          "description": "Partition free space.",
          "type": "string"
        },
        "uuid": {
          "type": "string",
          "description": "Partition UUID."
        },
        "capacityBytes": {
          "format": "int64",
          "type": "string",
          "description": "Partition capacity."
        },
        "type": {
          "type": "string",
          "description": "Partition type (e.g. BIOS boot)."
        },
        "fileSystem": {
          "description": "Partition file system.",
          "type": "string"
        },
        "subPartitions": {
          "description": "Sub-partitions.",
          "$ref": "DiskPartitionList"
        },
        "mountPoint": {
          "description": "Mount pount (Linux/Windows) or drive letter (Windows).",
          "type": "string"
        }
      }
    },
    "BatchUpdateAssetsResponse": {
      "description": "Response for updating a list of assets.",
      "id": "BatchUpdateAssetsResponse",
      "type": "object",
      "properties": {
        "assets": {
          "description": "Update asset content. The content only includes values after field mask being applied.",
          "items": {
            "$ref": "Asset"
          },
          "type": "array"
        }
      }
    },
    "InlinePayloadInfo": {
      "id": "InlinePayloadInfo",
      "type": "object",
      "properties": {
        "format": {
          "type": "string",
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_JSON_FRAME"
          ],
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "`AssetFrame` list in JSON format."
          ],
          "description": "The import job format."
        },
        "payload": {
          "type": "array",
          "description": "List of payload files.",
          "items": {
            "$ref": "PayloadFile"
          }
        }
      },
      "description": "A resource that represents the inline import job payload."
    },
    "GuestOsDetails": {
      "id": "GuestOsDetails",
      "description": "Information from Guest-level collections.",
      "properties": {
        "config": {
          "$ref": "GuestConfigDetails",
          "description": "OS and app configuration."
        },
        "runtime": {
          "description": "Runtime information.",
          "$ref": "GuestRuntimeDetails"
        }
      },
      "type": "object"
    },
    "AggregationResultFrequency": {
      "properties": {
        "values": {
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "type": "object"
        }
      },
      "description": "The result of a frequency distribution aggregation.",
      "id": "AggregationResultFrequency",
      "type": "object"
    },
    "Date": {
      "type": "object",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
        },
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "id": "Date"
    },
    "HostsEntry": {
      "id": "HostsEntry",
      "properties": {
        "hostNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of host names / aliases."
        },
        "ip": {
          "type": "string",
          "description": "IP (raw, IPv4/6 agnostic)."
        }
      },
      "description": "Single /etc/hosts entry.",
      "type": "object"
    },
    "ExecutionReport": {
      "description": "A resource that reports result of the import job execution.",
      "id": "ExecutionReport",
      "type": "object",
      "properties": {
        "totalRowsCount": {
          "type": "integer",
          "description": "Total number of rows in the import job.",
          "format": "int32"
        },
        "executionErrors": {
          "$ref": "ValidationReport",
          "description": "Validation errors encountered during the execution of the import job."
        },
        "framesReported": {
          "description": "Total number of asset frames reported for the import job.",
          "type": "integer",
          "format": "int32"
        },
        "jobErrors": {
          "type": "array",
          "description": "List of job-level errors. Deprecated, use the job errors under execution_errors instead.",
          "items": {
            "$ref": "ImportError"
          }
        }
      }
    },
    "AggregationSum": {
      "type": "object",
      "id": "AggregationSum",
      "description": "Sum of field values.",
      "properties": {}
    },
    "HostsEntryList": {
      "properties": {
        "entries": {
          "items": {
            "$ref": "HostsEntry"
          },
          "description": "Hosts entries.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Hosts content.",
      "id": "HostsEntryList"
    },
    "AggregationFrequency": {
      "properties": {},
      "type": "object",
      "description": "Frequency distribution of all field values.",
      "id": "AggregationFrequency"
    },
    "BatchUpdateAssetsRequest": {
      "id": "BatchUpdateAssetsRequest",
      "properties": {
        "requests": {
          "description": "Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.",
          "items": {
            "$ref": "UpdateAssetRequest"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "A request to update a list of assets."
    },
    "ImportRowError": {
      "type": "object",
      "description": "A resource that reports the import job errors at row level.",
      "id": "ImportRowError",
      "properties": {
        "errors": {
          "description": "The list of errors detected in the row.",
          "items": {
            "$ref": "ImportError"
          },
          "type": "array"
        },
        "vmName": {
          "type": "string",
          "description": "The name of the VM in the row."
        },
        "rowNumber": {
          "type": "integer",
          "description": "The row number where the error was detected.",
          "format": "int32"
        },
        "vmUuid": {
          "description": "The VM UUID.",
          "type": "string"
        }
      }
    },
    "VirtualMachineArchitectureDetails": {
      "id": "VirtualMachineArchitectureDetails",
      "properties": {
        "bios": {
          "description": "Bios Details.",
          "$ref": "BiosDetails"
        },
        "cpuSocketCount": {
          "format": "int32",
          "description": "Number of processor sockets allocated to the machine.",
          "type": "integer"
        },
        "firmware": {
          "description": "Firmware (BIOS/efi).",
          "type": "string"
        },
        "cpuThreadCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of cpu threads allocated to the machine."
        },
        "cpuName": {
          "description": "CPU name e.g. \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc.",
          "type": "string"
        },
        "cpuManufacturer": {
          "description": "CPU manufacturer e.g.: \"Intel\", \"AMD\".",
          "type": "string"
        },
        "cpuArchitecture": {
          "description": "CPU architecture e.g.: \"x64-based PC\", \"x86_64\", \"i686\" etc.",
          "type": "string"
        },
        "hyperthreading": {
          "enum": [
            "HYPER_THREADING_UNSPECIFIED",
            "HYPER_THREADING_DISABLED",
            "HYPER_THREADING_ENABLED"
          ],
          "enumDescriptions": [
            "Unknown (default value).",
            "Hyperthreading is disabled.",
            "Hyperthreading is enabled."
          ],
          "type": "string",
          "description": "CPU hyperthreading support (inner enum)."
        },
        "vendor": {
          "description": "Hardware vendor.",
          "type": "string"
        }
      },
      "description": "Details of the VM architecture.",
      "type": "object"
    },
    "UpdateAssetRequest": {
      "id": "UpdateAssetRequest",
      "description": "A request to update an asset.",
      "properties": {
        "updateMask": {
          "format": "google-fieldmask",
          "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
          "type": "string"
        },
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        },
        "asset": {
          "description": "Required. The resource being updated.",
          "$ref": "Asset"
        }
      },
      "type": "object"
    },
    "RunningServiceList": {
      "type": "object",
      "id": "RunningServiceList",
      "description": "List of running guest OS services.",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "$ref": "RunningService"
          }
        }
      }
    },
    "NetworkConnection": {
      "type": "object",
      "properties": {
        "remoteIpAddress": {
          "description": "Remote IP address.",
          "type": "string"
        },
        "localIpAddress": {
          "description": "Local IP address.",
          "type": "string"
        },
        "processName": {
          "type": "string",
          "description": "Process or service name."
        },
        "remotePort": {
          "format": "int32",
          "type": "integer",
          "description": "Remote port."
        },
        "localPort": {
          "type": "integer",
          "format": "int32",
          "description": "Local port."
        },
        "pid": {
          "format": "int64",
          "type": "string",
          "description": "Process ID."
        },
        "state": {
          "description": "Connection state (e.g. CONNECTED).",
          "type": "string"
        },
        "protocol": {
          "description": "Connection protocol (e.g. TCP/UDP).",
          "type": "string"
        }
      },
      "id": "NetworkConnection"
    },
    "ReportAssetFramesResponse": {
      "type": "object",
      "id": "ReportAssetFramesResponse",
      "description": "A response to a call to `ReportAssetFrame`.",
      "properties": {}
    },
    "AggregationResultHistogramBucket": {
      "properties": {
        "lowerBound": {
          "description": "Lower bound - inclusive.",
          "format": "double",
          "type": "number"
        },
        "count": {
          "description": "Count of items in the bucket.",
          "format": "int64",
          "type": "string"
        },
        "upperBound": {
          "description": "Upper bound - exclusive.",
          "type": "number",
          "format": "double"
        }
      },
      "type": "object",
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "id": "AggregationResultHistogramBucket"
    },
    "DiskEntryList": {
      "properties": {
        "entries": {
          "type": "array",
          "description": "Disk entries.",
          "items": {
            "$ref": "DiskEntry"
          }
        }
      },
      "description": "VM disks.",
      "type": "object",
      "id": "DiskEntryList"
    },
    "VmwarePlatformDetails": {
      "description": "VMware specific details.",
      "properties": {
        "vcenterVersion": {
          "type": "string",
          "description": "vCenter version."
        },
        "osid": {
          "type": "string",
          "description": "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html."
        },
        "esxVersion": {
          "description": "ESX version.",
          "type": "string"
        }
      },
      "id": "VmwarePlatformDetails",
      "type": "object"
    },
    "NetworkAdapterList": {
      "id": "NetworkAdapterList",
      "properties": {
        "networkAdapters": {
          "items": {
            "$ref": "NetworkAdapterDetails"
          },
          "description": "Network Adapter descriptions.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "FstabEntry": {
      "description": "Single fstab entry.",
      "properties": {
        "spec": {
          "type": "string",
          "description": "The block special device or remote filesystem to be mounted."
        },
        "mntops": {
          "type": "string",
          "description": "Mount options associated with the filesystem."
        },
        "freq": {
          "type": "integer",
          "format": "int32",
          "description": "Used by dump to determine which filesystems need to be dumped."
        },
        "file": {
          "type": "string",
          "description": "The mount point for the filesystem."
        },
        "passno": {
          "description": "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.",
          "format": "int32",
          "type": "integer"
        },
        "vfstype": {
          "description": "The type of the filesystem.",
          "type": "string"
        }
      },
      "id": "FstabEntry",
      "type": "object"
    },
    "ListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object"
    },
    "PayloadFile": {
      "type": "object",
      "description": "Payload file for inline import job payload.",
      "properties": {
        "name": {
          "description": "The file name.",
          "type": "string"
        },
        "data": {
          "format": "byte",
          "description": "The file data.",
          "type": "string"
        }
      },
      "id": "PayloadFile"
    },
    "RunningProcessList": {
      "type": "object",
      "id": "RunningProcessList",
      "properties": {
        "processes": {
          "items": {
            "$ref": "RunningProcess"
          },
          "type": "array"
        }
      },
      "description": "List of running guest OS processes."
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "id": "ListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        }
      }
    },
    "AggregationCount": {
      "type": "object",
      "id": "AggregationCount",
      "description": "Object count.",
      "properties": {}
    },
    "BiosDetails": {
      "description": "Details about the bios.",
      "type": "object",
      "id": "BiosDetails",
      "properties": {
        "smbiosUuid": {
          "type": "string",
          "description": "SMBios UUID."
        },
        "biosReleaseDate": {
          "type": "string",
          "description": "Bios release date."
        },
        "biosVersion": {
          "type": "string",
          "description": "Bios version."
        },
        "biosName": {
          "type": "string",
          "description": "Bios name."
        },
        "biosManufacturer": {
          "description": "Bios manufacturer.",
          "type": "string"
        }
      }
    },
    "Status": {
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        }
      },
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object"
    },
    "PlatformDetails": {
      "id": "PlatformDetails",
      "description": "Information about the platform.",
      "properties": {
        "vmwareDetails": {
          "$ref": "VmwarePlatformDetails",
          "description": "VMware specific details."
        }
      },
      "type": "object"
    },
    "AssetFrame": {
      "properties": {
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Generic asset attributes.",
          "type": "object"
        },
        "reportTime": {
          "description": "The time the data was reported.",
          "format": "google-datetime",
          "type": "string"
        },
        "performanceSamples": {
          "description": "Asset performance data samples.",
          "items": {
            "$ref": "PerformanceSample"
          },
          "type": "array"
        },
        "virtualMachineDetails": {
          "description": "Asset information specific for virtual machines.",
          "$ref": "VirtualMachineDetails"
        },
        "traceToken": {
          "description": "Optional. Trace token is optionally provided to assist with debugging and traceability.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Contains data reported from an inventory source on an asset.",
      "id": "AssetFrame"
    },
    "Asset": {
      "id": "Asset",
      "type": "object",
      "description": "An asset represents a resource in your environment. Asset types include virtual machines and databases.",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The full name of the asset."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp when the asset was last updated.",
          "readOnly": true
        },
        "virtualMachineDetails": {
          "$ref": "VirtualMachineDetails",
          "description": "Output only. Asset information specific for virtual machines.",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the asset was created.",
          "format": "google-datetime"
        },
        "sources": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. The list of sources contributing to the asset.",
          "items": {
            "type": "string"
          }
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Generic asset attributes."
        }
      }
    },
    "AggregationHistogram": {
      "description": "Histogram of bucketed assets counts by field value.",
      "type": "object",
      "id": "AggregationHistogram",
      "properties": {
        "lowerBounds": {
          "items": {
            "format": "double",
            "type": "number"
          },
          "description": "Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.",
          "type": "array"
        }
      }
    },
    "GuestInstalledApplication": {
      "description": "Guest installed application information.",
      "id": "GuestInstalledApplication",
      "type": "object",
      "properties": {
        "vendor": {
          "type": "string",
          "description": "Installed application vendor."
        },
        "name": {
          "description": "Installed application name .",
          "type": "string"
        },
        "time": {
          "type": "string",
          "description": "Date application was installed."
        },
        "path": {
          "type": "string",
          "description": "Source path."
        },
        "version": {
          "type": "string",
          "description": "Installed application version."
        }
      }
    },
    "NetworkAddressList": {
      "description": "List of allocated/assigned network addresses.",
      "type": "object",
      "properties": {
        "addresses": {
          "items": {
            "$ref": "NetworkAddress"
          },
          "type": "array"
        }
      },
      "id": "NetworkAddressList"
    },
    "GuestConfigDetails": {
      "id": "GuestConfigDetails",
      "type": "object",
      "description": "Guest OS config information.",
      "properties": {
        "selinux": {
          "$ref": "Selinux",
          "description": "SELinux details."
        },
        "hosts": {
          "$ref": "HostsEntryList",
          "description": "Hosts file (/etc/hosts)."
        },
        "issue": {
          "description": "OS issue (typically /etc/issue in Linux).",
          "type": "string"
        },
        "nfsExports": {
          "$ref": "NfsExportList",
          "description": "NFS exports."
        },
        "fstab": {
          "$ref": "FstabEntryList",
          "description": "Mount list (Linux fstab)."
        }
      }
    },
    "PerformanceSample": {
      "properties": {
        "memory": {
          "$ref": "MemoryUsageSample",
          "description": "Memory usage sample."
        },
        "sampleTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Time the sample was collected."
        },
        "network": {
          "description": "Network usage sample.",
          "$ref": "NetworkUsageSample"
        },
        "disk": {
          "$ref": "DiskUsageSample",
          "description": "Disk usage sample."
        },
        "cpu": {
          "$ref": "CpuUsageSample",
          "description": "CPU usage sample."
        }
      },
      "type": "object",
      "id": "PerformanceSample",
      "description": "Performance data sample."
    },
    "ValidateImportJobRequest": {
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "id": "ValidateImportJobRequest",
      "type": "object",
      "description": "A request to validate an import job."
    },
    "ImportJob": {
      "properties": {
        "validationReport": {
          "readOnly": true,
          "$ref": "ValidationReport",
          "description": "Output only. The report with the validation results of the import job."
        },
        "gcsPayload": {
          "description": "The payload is in Google Cloud Storage.",
          "$ref": "GCSPayloadInfo"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "The import job is pending.",
            "The processing of the import job is ongoing.",
            "The import job processing has completed.",
            "The import job failed to be processed.",
            "The import job is being validated.",
            "The import job contains blocking errors.",
            "The validation of the job completed with no blocking errors."
          ],
          "readOnly": true,
          "enum": [
            "IMPORT_JOB_STATE_UNSPECIFIED",
            "IMPORT_JOB_STATE_PENDING",
            "IMPORT_JOB_STATE_RUNNING",
            "IMPORT_JOB_STATE_COMPLETED",
            "IMPORT_JOB_STATE_FAILED",
            "IMPORT_JOB_STATE_VALIDATING",
            "IMPORT_JOB_STATE_FAILED_VALIDATION",
            "IMPORT_JOB_STATE_READY"
          ],
          "description": "Output only. The state of the import job."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the import job was last updated."
        },
        "executionReport": {
          "readOnly": true,
          "description": "Output only. The report with the results of running the import job.",
          "$ref": "ExecutionReport"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The timestamp when the import job was created."
        },
        "name": {
          "description": "Output only. The full name of the import job.",
          "type": "string",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        },
        "completeTime": {
          "type": "string",
          "description": "Output only. The timestamp when the import job was completed.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "inlinePayload": {
          "$ref": "InlinePayloadInfo",
          "description": "The payload is included in the request, mainly used for small import jobs."
        },
        "assetSource": {
          "description": "Required. Reference to a source.",
          "type": "string"
        }
      },
      "description": "A resource that represents the background job that imports asset frames.",
      "type": "object",
      "id": "ImportJob"
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "properties": {},
      "id": "CancelOperationRequest",
      "type": "object"
    },
    "NetworkUsageSample": {
      "type": "object",
      "id": "NetworkUsageSample",
      "properties": {
        "averageEgressBps": {
          "description": "Average network egress in B/s sampled over a short window. Must be non-negative.",
          "format": "float",
          "type": "number"
        },
        "averageIngressBps": {
          "format": "float",
          "description": "Average network ingress in B/s sampled over a short window. Must be non-negative.",
          "type": "number"
        }
      },
      "description": "Network usage sample. Values are across all network interfaces."
    },
    "AggregationResultCount": {
      "properties": {
        "value": {
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "The result of a count aggregation.",
      "id": "AggregationResultCount"
    },
    "ListImportJobsResponse": {
      "id": "ListImportJobsResponse",
      "properties": {
        "importJobs": {
          "type": "array",
          "items": {
            "$ref": "ImportJob"
          },
          "description": "The list of import jobs."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "A response for listing import jobs.",
      "type": "object"
    },
    "Operation": {
      "id": "Operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "TimeZone": {
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
        },
        "id": {
          "type": "string",
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\"."
        }
      },
      "id": "TimeZone"
    },
    "VirtualMachineDetails": {
      "id": "VirtualMachineDetails",
      "type": "object",
      "properties": {
        "coreCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of CPU cores in the VirtualMachine. Must be non-negative."
        },
        "memoryMb": {
          "format": "int32",
          "description": "The amount of memory in the VirtualMachine. Must be non-negative.",
          "type": "integer"
        },
        "vmName": {
          "description": "Virtual Machine display name.",
          "type": "string"
        },
        "vcenterVmId": {
          "description": "vCenter VM ID.",
          "type": "string"
        },
        "vcenterFolder": {
          "type": "string",
          "description": "Folder name in vCenter where asset resides."
        },
        "vmNetwork": {
          "$ref": "VirtualMachineNetworkDetails",
          "description": "VM network details."
        },
        "vmDisks": {
          "description": "VM disk details.",
          "$ref": "VirtualMachineDiskDetails"
        },
        "guestOs": {
          "description": "Guest OS information.",
          "$ref": "GuestOsDetails"
        },
        "osFamily": {
          "type": "string",
          "enum": [
            "OS_FAMILY_UNKNOWN",
            "OS_FAMILY_WINDOWS",
            "OS_FAMILY_LINUX",
            "OS_FAMILY_UNIX"
          ],
          "description": "What family the OS belong to, if known.",
          "enumDescriptions": [
            "",
            "Microsoft Windows Server and Desktop",
            "Various Linux flavors",
            "Non-Linux Unix flavors"
          ]
        },
        "vmUuid": {
          "description": "Virtual Machine uniqe identifier.",
          "type": "string"
        },
        "vmArchitecture": {
          "$ref": "VirtualMachineArchitectureDetails",
          "description": "VM architecture details (vendor, cpu arch)."
        },
        "powerState": {
          "type": "string",
          "description": "Power state of VM (poweredOn or poweredOff)."
        },
        "platform": {
          "$ref": "PlatformDetails",
          "description": "Platform information."
        },
        "vcenterUrl": {
          "type": "string",
          "description": "vCenter URL used in collection."
        },
        "osName": {
          "description": "The name of the operating system running on the VirtualMachine.",
          "type": "string"
        }
      },
      "description": "Details of a VirtualMachine."
    },
    "ValidationReport": {
      "type": "object",
      "description": "A resource that aggregates errors across import job files.",
      "properties": {
        "fileValidations": {
          "items": {
            "$ref": "FileValidationReport"
          },
          "description": "List of errors found in files.",
          "type": "array"
        },
        "jobErrors": {
          "type": "array",
          "description": "List of job level errors.",
          "items": {
            "$ref": "ImportError"
          }
        }
      },
      "id": "ValidationReport"
    },
    "ImportError": {
      "id": "ImportError",
      "type": "object",
      "description": "A resource that reports the errors encountered while processing an import job.",
      "properties": {
        "severity": {
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "The severity of the error.",
          "type": "string"
        },
        "errorDetails": {
          "type": "string",
          "description": "The error information."
        }
      }
    },
    "AggregationResultSum": {
      "properties": {
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object",
      "description": "The result of a sum aggregation.",
      "id": "AggregationResultSum"
    },
    "GuestRuntimeDetails": {
      "description": "Guest OS runtime information.",
      "type": "object",
      "id": "GuestRuntimeDetails",
      "properties": {
        "machineName": {
          "type": "string",
          "description": "Machine name."
        },
        "domain": {
          "type": "string",
          "description": "Domain, e.g. c.stratozone-development.internal."
        },
        "installedApps": {
          "description": "Installed applications information.",
          "$ref": "GuestInstalledApplicationList"
        },
        "lastUptime": {
          "description": "Date since last booted (last uptime date).",
          "$ref": "Date"
        },
        "networkInfo": {
          "description": "Runtime network information (connections ports).",
          "$ref": "RuntimeNetworkInfo"
        },
        "processes": {
          "description": "Running processes.",
          "$ref": "RunningProcessList"
        },
        "services": {
          "$ref": "RunningServiceList",
          "description": "Running background services."
        },
        "openFileList": {
          "description": "Open files information.",
          "$ref": "OpenFileList"
        }
      }
    },
    "NetworkAddress": {
      "id": "NetworkAddress",
      "description": "Details of network address.",
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "Assigned or configured IP Address."
        },
        "subnetMask": {
          "description": "Subnet mask.",
          "type": "string"
        },
        "fqdn": {
          "description": "Fully qualified domain name.",
          "type": "string"
        },
        "bcast": {
          "type": "string",
          "description": "Broadcast address."
        },
        "assignment": {
          "enumDescriptions": [
            "Unknown (default value).",
            "Staticly assigned IP.",
            "Dynamically assigned IP (DHCP)."
          ],
          "type": "string",
          "description": "If DHCP is used to assign addresses.",
          "enum": [
            "ADDRESS_ASSIGNMENT_UNSPECIFIED",
            "ADDRESS_ASSIGNMENT_STATIC",
            "ADDRESS_ASSIGNMENT_DHCP"
          ]
        }
      }
    },
    "NetworkConnectionList": {
      "id": "NetworkConnectionList",
      "properties": {
        "entries": {
          "items": {
            "$ref": "NetworkConnection"
          },
          "type": "array"
        }
      },
      "description": "Network connection list.",
      "type": "object"
    },
    "RuntimeNetworkInfo": {
      "description": "Runtime networking information.",
      "type": "object",
      "properties": {
        "netstat": {
          "type": "string",
          "description": "Netstat (raw, OS-agnostic)."
        },
        "connections": {
          "description": "Network connections.",
          "$ref": "NetworkConnectionList"
        },
        "netstatTime": {
          "description": "Netstat time collected.",
          "$ref": "DateTime"
        }
      },
      "id": "RuntimeNetworkInfo"
    },
    "DiskEntry": {
      "id": "DiskEntry",
      "type": "object",
      "properties": {
        "totalCapacityBytes": {
          "type": "string",
          "description": "Disk Capacity (required).",
          "format": "int64"
        },
        "interfaceType": {
          "description": "Disks interface type (e.g. SATA/SCSI)",
          "type": "string"
        },
        "diskLabelType": {
          "type": "string",
          "description": "Disk label type (e.g. BIOS/GPT)"
        },
        "status": {
          "description": "Disk status (e.g. online).",
          "type": "string"
        },
        "diskLabel": {
          "type": "string",
          "description": "Disk label."
        },
        "partitions": {
          "$ref": "DiskPartitionList",
          "description": "Partition layout."
        },
        "totalFreeBytes": {
          "type": "string",
          "description": "Disk Free Space.",
          "format": "int64"
        },
        "vmwareConfig": {
          "description": "Optional. Optional disk VMware details.",
          "$ref": "VmwareDiskConfig"
        },
        "hwAddress": {
          "type": "string",
          "description": "Disk hardware address (e.g. 0:1 for SCSI)."
        }
      },
      "description": "Single disk entry."
    },
    "VmwareDiskConfig": {
      "id": "VmwareDiskConfig",
      "description": "VMware disk config details.",
      "type": "object",
      "properties": {
        "backingType": {
          "enum": [
            "BACKING_TYPE_UNSPECIFIED",
            "BACKING_TYPE_FLAT_V1",
            "BACKING_TYPE_FLAT_V2",
            "BACKING_TYPE_PMEM",
            "BACKING_TYPE_RDM_V1",
            "BACKING_TYPE_RDM_V2",
            "BACKING_TYPE_SESPARSE",
            "BACKING_TYPE_SESPARSE_V1",
            "BACKING_TYPE_SESPARSE_V2"
          ],
          "type": "string",
          "description": "VMDK backing type.",
          "enumDescriptions": [
            "Default value.",
            "Flat v1.",
            "Flat v2.",
            "Persistent memory, also known as Non-Volatile Memory (NVM).",
            "Raw Disk Memory v1.",
            "Raw Disk Memory v2.",
            "SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.",
            "SEsparse v1.",
            "SEsparse v1."
          ]
        },
        "vmdkDiskMode": {
          "description": "VMDK disk mode.",
          "type": "string"
        },
        "shared": {
          "type": "boolean",
          "description": "Is VMDK shared with other VMs."
        },
        "rdmCompatibilityMode": {
          "description": "RDM compatibility mode.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "Empty",
      "properties": {},
      "type": "object"
    },
    "Aggregation": {
      "properties": {
        "sum": {
          "$ref": "AggregationSum",
          "description": "Sum over a numeric field."
        },
        "frequency": {
          "description": "Creates a frequency distribution of all field values.",
          "$ref": "AggregationFrequency"
        },
        "count": {
          "$ref": "AggregationCount",
          "description": "Count the number of matching objects."
        },
        "field": {
          "description": "The name of the field on which to aggregate.",
          "type": "string"
        },
        "histogram": {
          "$ref": "AggregationHistogram",
          "description": "Creates a bucketed histogram of field values."
        }
      },
      "type": "object",
      "description": "Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.",
      "id": "Aggregation"
    },
    "Selinux": {
      "properties": {
        "mode": {
          "type": "string",
          "description": "SELinux mode enforcing / permissive."
        },
        "enabled": {
          "type": "boolean",
          "description": "Is SELinux enabled."
        }
      },
      "type": "object",
      "id": "Selinux",
      "description": "SELinux details."
    },
    "MemoryUsageSample": {
      "properties": {
        "utilizedPercentage": {
          "description": "Percentage of system memory utilized. Must be in the interval [0, 100].",
          "type": "number",
          "format": "float"
        }
      },
      "type": "object",
      "id": "MemoryUsageSample",
      "description": "Memory usage sample."
    },
    "FstabEntryList": {
      "properties": {
        "entries": {
          "items": {
            "$ref": "FstabEntry"
          },
          "type": "array",
          "description": "Fstab entries."
        }
      },
      "description": "Fstab content.",
      "type": "object",
      "id": "FstabEntryList"
    },
    "VirtualMachineDiskDetails": {
      "description": "Details of VM disks.",
      "type": "object",
      "id": "VirtualMachineDiskDetails",
      "properties": {
        "hddTotalCapacityBytes": {
          "format": "int64",
          "type": "string",
          "description": "Disk total Capacity."
        },
        "hddTotalFreeBytes": {
          "format": "int64",
          "description": "Total Disk Free Space.",
          "type": "string"
        },
        "disks": {
          "$ref": "DiskEntryList",
          "description": "List of disks."
        },
        "lsblkJson": {
          "description": "Raw lsblk output in json.",
          "type": "string"
        }
      }
    }
  },
  "baseUrl": "https://migrationcenter.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "ownerDomain": "google.com",
  "rootUrl": "https://migrationcenter.googleapis.com/",
  "mtlsRootUrl": "https://migrationcenter.mtls.googleapis.com/",
  "id": "migrationcenter:v1alpha1",
  "version_module": true,
  "basePath": "",
  "title": "Migration Center API",
  "revision": "20230301",
  "description": "",
  "batchPath": "batch"
}

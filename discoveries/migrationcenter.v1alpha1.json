{
  "revision": "20230224",
  "title": "Migration Center API",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "servicePath": "",
  "ownerDomain": "google.com",
  "name": "migrationcenter",
  "description": "",
  "documentationLink": "https://cloud.google.com/migration-center",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "operations": {
              "methods": {
                "cancel": {
                  "path": "v1alpha1/{+name}:cancel",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "httpMethod": "POST",
                  "id": "migrationcenter.projects.locations.operations.cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource to be deleted."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.operations.delete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1alpha1/{+name}"
                },
                "list": {
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.operations.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "The standard list page size.",
                      "type": "integer"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "location": "path"
                    }
                  }
                },
                "get": {
                  "id": "migrationcenter.projects.locations.operations.get",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                }
              }
            },
            "importJobs": {
              "methods": {
                "validate": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "ValidateImportJobRequest"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}:validate",
                  "id": "migrationcenter.projects.locations.importJobs.validate",
                  "description": "Validates an import job.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the import job to validate.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  }
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.importJobs.patch",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "description": "Output only. The full name of the import job.",
                      "location": "path",
                      "required": true
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "description": "Updates an import job.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "request": {
                    "$ref": "ImportJob"
                  }
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "description": "Deletes an import job.",
                  "id": "migrationcenter.projects.locations.importJobs.delete"
                },
                "list": {
                  "parameters": {
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Parent value for `ListImportJobsRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filtering results."
                    },
                    "view": {
                      "location": "query",
                      "type": "string",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "description": "Optional. The level of details of each import job. Default value is BASIC.",
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ]
                    }
                  },
                  "id": "migrationcenter.projects.locations.importJobs.list",
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/importJobs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListImportJobsResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "description": "Lists all import jobs.",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "create": {
                  "httpMethod": "POST",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "importJobId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. ID of the import job."
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Value for parent.",
                      "location": "path"
                    }
                  },
                  "description": "Creates an import job.",
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+parent}/importJobs",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "id": "migrationcenter.projects.locations.importJobs.create"
                },
                "run": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+name}:run",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the import job to run.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run",
                  "id": "migrationcenter.projects.locations.importJobs.run",
                  "request": {
                    "$ref": "RunImportJobRequest"
                  },
                  "description": "Runs an import job.",
                  "httpMethod": "POST"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "description": "Gets the details of an import job.",
                  "response": {
                    "$ref": "ImportJob"
                  },
                  "parameters": {
                    "view": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The level of details of the import job. Default value is FULL.",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ]
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.importJobs.get"
                }
              }
            },
            "assets": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the details of an asset.",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "view": {
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset.",
                        "The asset view includes the standard metadata of an asset."
                      ],
                      "description": "View of the assets. Defaults to BASIC.",
                      "location": "query",
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ],
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.assets.get",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Asset"
                  }
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.assets.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes an asset."
                },
                "reportAssetFrames": {
                  "id": "migrationcenter.projects.locations.assets.reportAssetFrames",
                  "path": "v1alpha1/{+parent}/assets:reportAssetFrames",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Frames"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Parent of the resource."
                    },
                    "source": {
                      "location": "query",
                      "description": "Required. Reference to a source.",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ReportAssetFramesResponse"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames",
                  "description": "Reports a set of frames."
                },
                "aggregateValues": {
                  "description": "Aggregates the requested fields based on provided function.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues",
                  "request": {
                    "$ref": "AggregateAssetsValuesRequest"
                  },
                  "response": {
                    "$ref": "AggregateAssetsValuesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.assets.aggregateValues",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for `AggregateAssetsValuesRequest`.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/assets:aggregateValues"
                },
                "list": {
                  "parameters": {
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string",
                      "location": "query"
                    },
                    "view": {
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset.",
                        "The asset view includes the standard metadata of an asset."
                      ],
                      "location": "query",
                      "description": "View of the assets. Defaults to BASIC.",
                      "type": "string",
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL",
                        "ASSET_VIEW_STANDARD"
                      ]
                    },
                    "parent": {
                      "description": "Required. Parent value for `ListAssetsRequest`.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filtering results."
                    }
                  },
                  "path": "v1alpha1/{+parent}/assets",
                  "id": "migrationcenter.projects.locations.assets.list",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListAssetsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists all the assets in a given project and location."
                },
                "patch": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Asset"
                  },
                  "id": "migrationcenter.projects.locations.assets.patch",
                  "httpMethod": "PATCH",
                  "description": "Updates the parameters of an asset.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "description": "Output only. The full name of the asset.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$"
                    }
                  },
                  "path": "v1alpha1/{+name}"
                },
                "create": {
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "assetId": {
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. Value for parent.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "id": "migrationcenter.projects.locations.assets.create",
                  "path": "v1alpha1/{+parent}/assets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new asset in a given project and location. Deprecated: Use ReportAssetFrames instead.",
                  "request": {
                    "$ref": "Asset"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/assets",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            },
            "sources": {
              "methods": {
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Source"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "path": "v1alpha1/{+name}",
                  "id": "migrationcenter.projects.locations.sources.patch",
                  "description": "Updates the parameters of a source.",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "description": "Output only. The full name of the source."
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Source` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string"
                    }
                  }
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Source"
                  },
                  "id": "migrationcenter.projects.locations.sources.create",
                  "path": "v1alpha1/{+parent}/sources",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new source in a given project and location.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "parameters": {
                    "sourceId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. User specified ID for the source. It will become the last component of the source name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`."
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Value for parent.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  }
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/sources",
                  "response": {
                    "$ref": "ListSourcesResponse"
                  },
                  "parameters": {
                    "filter": {
                      "description": "Filtering results.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results that the server should return.",
                      "type": "string",
                      "location": "query"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Parent value for `ListSourcesRequest`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "description": "Lists all the sources in a given project and location.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "id": "migrationcenter.projects.locations.sources.list"
                },
                "get": {
                  "description": "Gets the details of a source.",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Source"
                  },
                  "id": "migrationcenter.projects.locations.sources.get",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "description": "Deletes a source.",
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "id": "migrationcenter.projects.locations.sources.delete",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            }
          },
          "methods": {
            "list": {
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string",
                  "required": true
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer"
                },
                "filter": {
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query"
                }
              },
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "id": "migrationcenter.projects.locations.list",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "httpMethod": "GET",
              "path": "v1alpha1/{+name}/locations",
              "parameterOrder": [
                "name"
              ]
            },
            "get": {
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "id": "migrationcenter.projects.locations.get",
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1alpha1/{+name}",
              "description": "Gets information about a location.",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location.",
                  "type": "string",
                  "location": "path"
                }
              }
            }
          }
        }
      }
    }
  },
  "protocol": "rest",
  "discoveryVersion": "v1",
  "canonicalName": "Migration Center API",
  "version": "v1alpha1",
  "parameters": {
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean",
      "default": "true"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "location": "query",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "location": "query"
    }
  },
  "batchPath": "batch",
  "basePath": "",
  "id": "migrationcenter:v1alpha1",
  "schemas": {
    "FstabEntry": {
      "type": "object",
      "description": "Single fstab entry.",
      "id": "FstabEntry",
      "properties": {
        "spec": {
          "description": "The block special device or remote filesystem to be mounted.",
          "type": "string"
        },
        "file": {
          "type": "string",
          "description": "The mount point for the filesystem."
        },
        "freq": {
          "description": "Used by dump to determine which filesystems need to be dumped.",
          "type": "integer",
          "format": "int32"
        },
        "vfstype": {
          "description": "The type of the filesystem.",
          "type": "string"
        },
        "passno": {
          "description": "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.",
          "format": "int32",
          "type": "integer"
        },
        "mntops": {
          "description": "Mount options associated with the filesystem.",
          "type": "string"
        }
      }
    },
    "AggregateAssetsValuesRequest": {
      "type": "object",
      "description": "A request to aggregate one or more values.",
      "id": "AggregateAssetsValuesRequest",
      "properties": {
        "aggregations": {
          "type": "array",
          "items": {
            "$ref": "Aggregation"
          },
          "description": "Array of aggregations to perform. Up to 25 aggregations can be defined."
        },
        "filter": {
          "type": "string",
          "description": "The aggregation will be performed on assets that match the provided filter."
        }
      }
    },
    "AggregationResultHistogramBucket": {
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "description": "Count of items in the bucket.",
          "format": "int64"
        },
        "upperBound": {
          "type": "number",
          "description": "Upper bound - exclusive.",
          "format": "double"
        },
        "lowerBound": {
          "format": "double",
          "description": "Lower bound - inclusive.",
          "type": "number"
        }
      },
      "id": "AggregationResultHistogramBucket"
    },
    "TimeZone": {
      "id": "TimeZone",
      "properties": {
        "version": {
          "type": "string",
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
        },
        "id": {
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones)."
    },
    "Location": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        }
      },
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location."
    },
    "MemoryUsageSample": {
      "properties": {
        "utilizedPercentage": {
          "type": "number",
          "format": "float",
          "description": "Percentage of system memory utilized. Must be in the interval [0, 100]."
        }
      },
      "id": "MemoryUsageSample",
      "type": "object",
      "description": "Memory usage sample."
    },
    "FstabEntryList": {
      "properties": {
        "entries": {
          "description": "Fstab entries.",
          "items": {
            "$ref": "FstabEntry"
          },
          "type": "array"
        }
      },
      "id": "FstabEntryList",
      "type": "object",
      "description": "Fstab content."
    },
    "Selinux": {
      "properties": {
        "enabled": {
          "description": "Is SELinux enabled.",
          "type": "boolean"
        },
        "mode": {
          "description": "SELinux mode enforcing / permissive.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "SELinux details.",
      "id": "Selinux"
    },
    "CancelOperationRequest": {
      "properties": {},
      "type": "object",
      "description": "The request message for Operations.CancelOperation.",
      "id": "CancelOperationRequest"
    },
    "Date": {
      "type": "object",
      "properties": {
        "year": {
          "format": "int32",
          "type": "integer",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
        },
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "format": "int32",
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
        }
      },
      "id": "Date",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
    },
    "ExecutionReport": {
      "properties": {
        "jobErrors": {
          "items": {
            "$ref": "ImportError"
          },
          "description": "List of job-level errors. Deprecated, use the job errors under execution_errors instead.",
          "type": "array"
        },
        "totalRowsCount": {
          "type": "integer",
          "description": "Total number of rows in the import job.",
          "format": "int32"
        },
        "framesReported": {
          "format": "int32",
          "type": "integer",
          "description": "Total number of asset frames reported for the import job."
        },
        "executionErrors": {
          "$ref": "ValidationReport",
          "description": "Validation errors encountered during the execution of the import job."
        }
      },
      "description": "A resource that reports result of the import job execution.",
      "type": "object",
      "id": "ExecutionReport"
    },
    "RunningServiceList": {
      "type": "object",
      "id": "RunningServiceList",
      "properties": {
        "services": {
          "items": {
            "$ref": "RunningService"
          },
          "type": "array"
        }
      },
      "description": "List of running guest OS services."
    },
    "NetworkAdapterList": {
      "type": "object",
      "properties": {
        "networkAdapters": {
          "type": "array",
          "items": {
            "$ref": "NetworkAdapterDetails"
          },
          "description": "Network Adapter descriptions."
        }
      },
      "id": "NetworkAdapterList"
    },
    "GuestInstalledApplicationList": {
      "id": "GuestInstalledApplicationList",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "GuestInstalledApplication"
          }
        }
      },
      "type": "object",
      "description": "Guest installed application list."
    },
    "AssetFrame": {
      "type": "object",
      "properties": {
        "performanceSamples": {
          "items": {
            "$ref": "PerformanceSample"
          },
          "description": "Asset performance data samples.",
          "type": "array"
        },
        "virtualMachineDetails": {
          "description": "Asset information specific for virtual machines.",
          "$ref": "VirtualMachineDetails"
        },
        "reportTime": {
          "format": "google-datetime",
          "description": "The time the data was reported.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "traceToken": {
          "description": "Optional. Trace token is optionally provided to assist with debugging and traceability.",
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "description": "Generic asset attributes.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "AssetFrame",
      "description": "Contains data reported from an inventory source on an asset."
    },
    "PlatformDetails": {
      "properties": {
        "vmwareDetails": {
          "$ref": "VmwarePlatformDetails",
          "description": "VMware specific details."
        }
      },
      "description": "Information about the platform.",
      "id": "PlatformDetails",
      "type": "object"
    },
    "RunningService": {
      "properties": {
        "exePath": {
          "description": "Service binary path.",
          "type": "string"
        },
        "cmdline": {
          "type": "string",
          "description": "Service command line."
        },
        "pid": {
          "type": "string",
          "description": "Service pid.",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "Service name."
        },
        "state": {
          "description": "Service state (raw, OS-agnostic).",
          "type": "string"
        },
        "startMode": {
          "type": "string",
          "description": "Service start mode (raw, OS-agnostic)."
        },
        "status": {
          "description": "Service status.",
          "type": "string"
        }
      },
      "description": "Guest OS running service details.",
      "type": "object",
      "id": "RunningService"
    },
    "DateTime": {
      "type": "object",
      "id": "DateTime",
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
      "properties": {
        "year": {
          "type": "integer",
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
          "format": "int32"
        },
        "minutes": {
          "type": "integer",
          "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
          "format": "int32"
        },
        "seconds": {
          "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.",
          "format": "int32",
          "type": "integer"
        },
        "utcOffset": {
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.",
          "format": "google-duration",
          "type": "string"
        },
        "day": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day."
        },
        "nanos": {
          "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
          "format": "int32",
          "type": "integer"
        },
        "hours": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
        },
        "timeZone": {
          "description": "Time zone.",
          "$ref": "TimeZone"
        },
        "month": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month."
        }
      }
    },
    "NetworkUsageSample": {
      "properties": {
        "averageIngressBps": {
          "format": "float",
          "type": "number",
          "description": "Average network ingress in B/s sampled over a short window. Must be non-negative."
        },
        "averageEgressBps": {
          "description": "Average network egress in B/s sampled over a short window. Must be non-negative.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object",
      "id": "NetworkUsageSample",
      "description": "Network usage sample. Values are across all network interfaces."
    },
    "NetworkAddress": {
      "properties": {
        "ipAddress": {
          "description": "Assigned or configured IP Address.",
          "type": "string"
        },
        "assignment": {
          "description": "If DHCP is used to assign addresses.",
          "enumDescriptions": [
            "Unknown (default value).",
            "Staticly assigned IP.",
            "Dynamically assigned IP (DHCP)."
          ],
          "type": "string",
          "enum": [
            "ADDRESS_ASSIGNMENT_UNSPECIFIED",
            "ADDRESS_ASSIGNMENT_STATIC",
            "ADDRESS_ASSIGNMENT_DHCP"
          ]
        },
        "bcast": {
          "type": "string",
          "description": "Broadcast address."
        },
        "subnetMask": {
          "description": "Subnet mask.",
          "type": "string"
        },
        "fqdn": {
          "description": "Fully qualified domain name.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Details of network address.",
      "id": "NetworkAddress"
    },
    "AggregationResult": {
      "description": "Message describing a result of an aggregation.",
      "id": "AggregationResult",
      "type": "object",
      "properties": {
        "count": {
          "$ref": "AggregationResultCount"
        },
        "frequency": {
          "$ref": "AggregationResultFrequency"
        },
        "field": {
          "type": "string"
        },
        "histogram": {
          "$ref": "AggregationResultHistogram"
        },
        "sum": {
          "$ref": "AggregationResultSum"
        }
      }
    },
    "AggregationResultFrequency": {
      "properties": {
        "values": {
          "additionalProperties": {
            "format": "int64",
            "type": "string"
          },
          "type": "object"
        }
      },
      "description": "The result of a frequency distribution aggregation.",
      "type": "object",
      "id": "AggregationResultFrequency"
    },
    "OpenFileDetails": {
      "id": "OpenFileDetails",
      "properties": {
        "fileType": {
          "description": "Opened file file type.",
          "type": "string"
        },
        "filePath": {
          "description": "Opened file file path.",
          "type": "string"
        },
        "user": {
          "type": "string",
          "description": "Opened file user."
        },
        "command": {
          "description": "Opened file command.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Open file Information."
    },
    "AggregationHistogram": {
      "properties": {
        "lowerBounds": {
          "type": "array",
          "description": "Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "description": "Histogram of bucketed assets counts by field value.",
      "type": "object",
      "id": "AggregationHistogram"
    },
    "DiskUsageSample": {
      "properties": {
        "averageIops": {
          "description": "Average IOPS sampled over a short window. Must be non-negative.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object",
      "description": "Disk usage sample. Values are across all disks.",
      "id": "DiskUsageSample"
    },
    "Status": {
      "properties": {
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status"
    },
    "VirtualMachineArchitectureDetails": {
      "id": "VirtualMachineArchitectureDetails",
      "type": "object",
      "description": "Details of the VM architecture.",
      "properties": {
        "vendor": {
          "type": "string",
          "description": "Hardware vendor."
        },
        "cpuSocketCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of processor sockets allocated to the machine."
        },
        "cpuArchitecture": {
          "type": "string",
          "description": "CPU architecture e.g.: \"x64-based PC\", \"x86_64\", \"i686\" etc."
        },
        "cpuName": {
          "type": "string",
          "description": "CPU name e.g. \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc."
        },
        "firmware": {
          "type": "string",
          "description": "Firmware (BIOS/efi)."
        },
        "bios": {
          "$ref": "BiosDetails",
          "description": "Bios Details."
        },
        "cpuThreadCount": {
          "description": "Number of cpu threads allocated to the machine.",
          "format": "int32",
          "type": "integer"
        },
        "hyperthreading": {
          "enum": [
            "HYPER_THREADING_UNSPECIFIED",
            "HYPER_THREADING_DISABLED",
            "HYPER_THREADING_ENABLED"
          ],
          "description": "CPU hyperthreading support (inner enum).",
          "type": "string",
          "enumDescriptions": [
            "Unknown (default value).",
            "Hyperthreading is disabled.",
            "Hyperthreading is enabled."
          ]
        },
        "cpuManufacturer": {
          "description": "CPU manufacturer e.g.: \"Intel\", \"AMD\".",
          "type": "string"
        }
      }
    },
    "ReportAssetFramesResponse": {
      "id": "ReportAssetFramesResponse",
      "properties": {},
      "description": "A response to a call to `ReportAssetFrame`.",
      "type": "object"
    },
    "DiskPartitionList": {
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "DiskPartition"
          },
          "description": "Partition entries.",
          "type": "array"
        }
      },
      "id": "DiskPartitionList"
    },
    "ListLocationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          }
        }
      },
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations."
    },
    "ImportJob": {
      "description": "A resource that represents the background job that imports asset frames.",
      "type": "object",
      "properties": {
        "executionReport": {
          "$ref": "ExecutionReport",
          "description": "Output only. The report with the results of running the import job.",
          "readOnly": true
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "completeTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The timestamp when the import job was completed.",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The timestamp when the import job was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "validationReport": {
          "readOnly": true,
          "description": "Output only. The report with the validation results of the import job.",
          "$ref": "ValidationReport"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the import job was last updated.",
          "format": "google-datetime"
        },
        "state": {
          "type": "string",
          "enum": [
            "IMPORT_JOB_STATE_UNSPECIFIED",
            "IMPORT_JOB_STATE_PENDING",
            "IMPORT_JOB_STATE_RUNNING",
            "IMPORT_JOB_STATE_COMPLETED",
            "IMPORT_JOB_STATE_FAILED",
            "IMPORT_JOB_STATE_VALIDATING",
            "IMPORT_JOB_STATE_FAILED_VALIDATION",
            "IMPORT_JOB_STATE_READY"
          ],
          "enumDescriptions": [
            "Default value.",
            "The import job is pending.",
            "The processing of the import job is ongoing.",
            "The import job processing has completed.",
            "The import job failed to be processed.",
            "The import job is being validated.",
            "The import job contains blocking errors.",
            "The validation of the job completed with no blocking errors."
          ],
          "readOnly": true,
          "description": "Output only. The state of the import job."
        },
        "inlinePayload": {
          "$ref": "InlinePayloadInfo",
          "description": "The payload is included in the request, mainly used for small import jobs."
        },
        "assetSource": {
          "description": "Required. Reference to a source.",
          "type": "string"
        },
        "gcsPayload": {
          "$ref": "GCSPayloadInfo",
          "description": "The payload is in Google Cloud Storage."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The full name of the import job.",
          "type": "string"
        }
      },
      "id": "ImportJob"
    },
    "NfsExportList": {
      "id": "NfsExportList",
      "description": "NFS exports.",
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "NfsExport"
          },
          "description": "NFS export entries."
        }
      }
    },
    "ListOperationsResponse": {
      "type": "object",
      "id": "ListOperationsResponse",
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "description": "The response message for Operations.ListOperations."
    },
    "VirtualMachineDetails": {
      "type": "object",
      "properties": {
        "coreCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of CPU cores in the VirtualMachine. Must be non-negative."
        },
        "vcenterVmId": {
          "description": "vCenter VM ID.",
          "type": "string"
        },
        "vmName": {
          "description": "Virtual Machine display name.",
          "type": "string"
        },
        "guestOs": {
          "description": "Guest OS information.",
          "$ref": "GuestOsDetails"
        },
        "vmDisks": {
          "description": "VM disk details.",
          "$ref": "VirtualMachineDiskDetails"
        },
        "vmUuid": {
          "type": "string",
          "description": "Virtual Machine uniqe identifier."
        },
        "vcenterFolder": {
          "type": "string",
          "description": "Folder name in vCenter where asset resides."
        },
        "memoryMb": {
          "format": "int32",
          "description": "The amount of memory in the VirtualMachine. Must be non-negative.",
          "type": "integer"
        },
        "powerState": {
          "type": "string",
          "description": "Power state of VM (poweredOn or poweredOff)."
        },
        "vcenterUrl": {
          "type": "string",
          "description": "vCenter URL used in collection."
        },
        "platform": {
          "$ref": "PlatformDetails",
          "description": "Platform information."
        },
        "osName": {
          "description": "The name of the operating system running on the VirtualMachine.",
          "type": "string"
        },
        "vmNetwork": {
          "$ref": "VirtualMachineNetworkDetails",
          "description": "VM network details."
        },
        "vmArchitecture": {
          "description": "VM architecture details (vendor, cpu arch).",
          "$ref": "VirtualMachineArchitectureDetails"
        },
        "osFamily": {
          "type": "string",
          "enumDescriptions": [
            "",
            "Microsoft Windows Server and Desktop",
            "Various Linux flavors",
            "Non-Linux Unix flavors"
          ],
          "enum": [
            "OS_FAMILY_UNKNOWN",
            "OS_FAMILY_WINDOWS",
            "OS_FAMILY_LINUX",
            "OS_FAMILY_UNIX"
          ],
          "description": "What family the OS belong to, if known."
        }
      },
      "description": "Details of a VirtualMachine.",
      "id": "VirtualMachineDetails"
    },
    "ValidationReport": {
      "properties": {
        "fileValidations": {
          "description": "List of errors found in files.",
          "type": "array",
          "items": {
            "$ref": "FileValidationReport"
          }
        },
        "jobErrors": {
          "type": "array",
          "items": {
            "$ref": "ImportError"
          },
          "description": "List of job level errors."
        }
      },
      "type": "object",
      "description": "A resource that aggregates errors across import job files.",
      "id": "ValidationReport"
    },
    "DiskEntry": {
      "properties": {
        "interfaceType": {
          "type": "string",
          "description": "Disks interface type (e.g. SATA/SCSI)"
        },
        "totalCapacityBytes": {
          "type": "string",
          "description": "Disk Capacity (required).",
          "format": "int64"
        },
        "partitions": {
          "$ref": "DiskPartitionList",
          "description": "Partition layout."
        },
        "diskLabelType": {
          "description": "Disk label type (e.g. BIOS/GPT)",
          "type": "string"
        },
        "diskLabel": {
          "type": "string",
          "description": "Disk label."
        },
        "vmwareConfig": {
          "description": "Optional. Optional disk VMware details.",
          "$ref": "VmwareDiskConfig"
        },
        "status": {
          "type": "string",
          "description": "Disk status (e.g. online)."
        },
        "totalFreeBytes": {
          "format": "int64",
          "description": "Disk Free Space.",
          "type": "string"
        },
        "hwAddress": {
          "type": "string",
          "description": "Disk hardware address (e.g. 0:1 for SCSI)."
        }
      },
      "type": "object",
      "description": "Single disk entry.",
      "id": "DiskEntry"
    },
    "NetworkConnectionList": {
      "id": "NetworkConnectionList",
      "description": "Network connection list.",
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "NetworkConnection"
          }
        }
      }
    },
    "AggregationFrequency": {
      "description": "Frequency distribution of all field values.",
      "id": "AggregationFrequency",
      "properties": {},
      "type": "object"
    },
    "AggregationCount": {
      "description": "Object count.",
      "type": "object",
      "properties": {},
      "id": "AggregationCount"
    },
    "DiskEntryList": {
      "description": "VM disks.",
      "type": "object",
      "id": "DiskEntryList",
      "properties": {
        "entries": {
          "type": "array",
          "description": "Disk entries.",
          "items": {
            "$ref": "DiskEntry"
          }
        }
      }
    },
    "Aggregation": {
      "type": "object",
      "properties": {
        "sum": {
          "$ref": "AggregationSum",
          "description": "Sum over a numeric field."
        },
        "histogram": {
          "$ref": "AggregationHistogram",
          "description": "Creates a bucketed histogram of field values."
        },
        "frequency": {
          "description": "Creates a frequency distribution of all field values.",
          "$ref": "AggregationFrequency"
        },
        "field": {
          "description": "The name of the field on which to aggregate.",
          "type": "string"
        },
        "count": {
          "description": "Count the number of matching objects.",
          "$ref": "AggregationCount"
        }
      },
      "id": "Aggregation",
      "description": "Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation."
    },
    "ListImportJobsResponse": {
      "id": "ListImportJobsResponse",
      "type": "object",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "importJobs": {
          "description": "The list of import jobs.",
          "items": {
            "$ref": "ImportJob"
          },
          "type": "array"
        }
      },
      "description": "A response for listing import jobs."
    },
    "AggregateAssetsValuesResponse": {
      "id": "AggregateAssetsValuesResponse",
      "type": "object",
      "description": "A response to a request to aggregated assets values.",
      "properties": {
        "results": {
          "items": {
            "$ref": "AggregationResult"
          },
          "description": "The aggregation results.",
          "type": "array"
        }
      }
    },
    "ListSourcesResponse": {
      "id": "ListSourcesResponse",
      "type": "object",
      "properties": {
        "sources": {
          "items": {
            "$ref": "Source"
          },
          "type": "array",
          "description": "The list of sources."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Response message for listing sources."
    },
    "Asset": {
      "description": "An asset represents a resource in your environment. Asset types include virtual machines and databases.",
      "type": "object",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        },
        "name": {
          "type": "string",
          "description": "Output only. The full name of the asset.",
          "readOnly": true
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Generic asset attributes."
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the asset was last updated.",
          "format": "google-datetime"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the asset was created."
        },
        "virtualMachineDetails": {
          "$ref": "VirtualMachineDetails",
          "readOnly": true,
          "description": "Output only. Asset information specific for virtual machines."
        },
        "sources": {
          "type": "array",
          "description": "Output only. The list of sources contributing to the asset.",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        }
      },
      "id": "Asset"
    },
    "ValidateImportJobRequest": {
      "type": "object",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "id": "ValidateImportJobRequest",
      "description": "A request to validate an import job."
    },
    "RunImportJobRequest": {
      "type": "object",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "description": "A request to run an import job.",
      "id": "RunImportJobRequest"
    },
    "Operation": {
      "properties": {
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        }
      },
      "id": "Operation",
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "HostsEntry": {
      "id": "HostsEntry",
      "description": "Single /etc/hosts entry.",
      "properties": {
        "hostNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of host names / aliases."
        },
        "ip": {
          "description": "IP (raw, IPv4/6 agnostic).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Source": {
      "type": "object",
      "properties": {
        "isManaged": {
          "description": "If `true`, the source is managed by other service(s).",
          "type": "boolean"
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name."
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        },
        "pendingFrameCount": {
          "description": "Output only. Number of frames that are still being processed.",
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "priority": {
          "description": "The information confidence of the source. The higher the value, the higher the confidence.",
          "format": "int32",
          "type": "integer"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the source was last updated.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Data source type.",
          "enumDescriptions": [
            "Unspecified",
            "Manually uploaded file (e.g. CSV)",
            "Guest-level info",
            "Inventory-level scan",
            "Third-party owned sources."
          ],
          "enum": [
            "SOURCE_TYPE_UNKNOWN",
            "SOURCE_TYPE_UPLOAD",
            "SOURCE_TYPE_GUEST_OS_SCAN",
            "SOURCE_TYPE_INVENTORY_SCAN",
            "SOURCE_TYPE_CUSTOM"
          ],
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the source was created.",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The full name of the source."
        }
      },
      "description": "Source represents an object from which asset information is streamed to Migration Center.",
      "id": "Source"
    },
    "ImportError": {
      "properties": {
        "errorDetails": {
          "description": "The error information.",
          "type": "string"
        },
        "severity": {
          "description": "The severity of the error.",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        }
      },
      "id": "ImportError",
      "type": "object",
      "description": "A resource that reports the errors encountered while processing an import job."
    },
    "VirtualMachineDiskDetails": {
      "id": "VirtualMachineDiskDetails",
      "type": "object",
      "properties": {
        "disks": {
          "description": "List of disks.",
          "$ref": "DiskEntryList"
        },
        "hddTotalFreeBytes": {
          "type": "string",
          "description": "Total Disk Free Space.",
          "format": "int64"
        },
        "lsblkJson": {
          "type": "string",
          "description": "Raw lsblk output in json."
        },
        "hddTotalCapacityBytes": {
          "description": "Disk total Capacity.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "Details of VM disks."
    },
    "Empty": {
      "id": "Empty",
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "GuestInstalledApplication": {
      "description": "Guest installed application information.",
      "type": "object",
      "properties": {
        "time": {
          "description": "Date application was installed.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "Source path."
        },
        "version": {
          "description": "Installed application version.",
          "type": "string"
        },
        "vendor": {
          "type": "string",
          "description": "Installed application vendor."
        },
        "name": {
          "description": "Installed application name .",
          "type": "string"
        }
      },
      "id": "GuestInstalledApplication"
    },
    "NetworkConnection": {
      "properties": {
        "state": {
          "description": "Connection state (e.g. CONNECTED).",
          "type": "string"
        },
        "protocol": {
          "description": "Connection protocol (e.g. TCP/UDP).",
          "type": "string"
        },
        "localIpAddress": {
          "type": "string",
          "description": "Local IP address."
        },
        "pid": {
          "format": "int64",
          "description": "Process ID.",
          "type": "string"
        },
        "remoteIpAddress": {
          "type": "string",
          "description": "Remote IP address."
        },
        "localPort": {
          "description": "Local port.",
          "format": "int32",
          "type": "integer"
        },
        "processName": {
          "description": "Process or service name.",
          "type": "string"
        },
        "remotePort": {
          "format": "int32",
          "type": "integer",
          "description": "Remote port."
        }
      },
      "id": "NetworkConnection",
      "type": "object"
    },
    "GCSPayloadInfo": {
      "type": "object",
      "description": "A resource that represents a payload hosted on Google Cloud Storage.",
      "properties": {
        "path": {
          "description": "The payload path in Google Cloud Storage.",
          "type": "string"
        },
        "format": {
          "description": "The import job format.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "`AssetFrame` list in JSON format."
          ],
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_JSON_FRAME"
          ]
        }
      },
      "id": "GCSPayloadInfo"
    },
    "RunningProcess": {
      "description": "Guest OS running process details.",
      "properties": {
        "pid": {
          "type": "string",
          "format": "int64",
          "description": "Process ID."
        },
        "exePath": {
          "description": "Process binary path.",
          "type": "string"
        },
        "user": {
          "description": "User running the process.",
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "description": "Process extended attributes.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cmdline": {
          "description": "Process full command line.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "RunningProcess"
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "AggregationResultHistogram": {
      "id": "AggregationResultHistogram",
      "type": "object",
      "description": "The result of a bucketed histogram aggregation.",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "$ref": "AggregationResultHistogramBucket"
          },
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity."
        }
      }
    },
    "CpuUsageSample": {
      "id": "CpuUsageSample",
      "description": "CPU usage sample.",
      "type": "object",
      "properties": {
        "utilizedPercentage": {
          "type": "number",
          "description": "Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.",
          "format": "float"
        }
      }
    },
    "ListAssetsResponse": {
      "description": "Response message for listing assets.",
      "properties": {
        "assets": {
          "description": "A list of assets.",
          "type": "array",
          "items": {
            "$ref": "Asset"
          }
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        }
      },
      "type": "object",
      "id": "ListAssetsResponse"
    },
    "GuestOsDetails": {
      "id": "GuestOsDetails",
      "properties": {
        "config": {
          "description": "OS and app configuration.",
          "$ref": "GuestConfigDetails"
        },
        "runtime": {
          "$ref": "GuestRuntimeDetails",
          "description": "Runtime information."
        }
      },
      "description": "Information from Guest-level collections.",
      "type": "object"
    },
    "Frames": {
      "type": "object",
      "properties": {
        "framesData": {
          "type": "array",
          "items": {
            "$ref": "AssetFrame"
          },
          "description": "A repeated field of asset data."
        }
      },
      "description": "Collection of frame data.",
      "id": "Frames"
    },
    "NetworkAdapterDetails": {
      "id": "NetworkAdapterDetails",
      "type": "object",
      "description": "Details of network adapter.",
      "properties": {
        "macAddress": {
          "type": "string",
          "description": "MAC address."
        },
        "adapterType": {
          "type": "string",
          "description": "Network adapter type (e.g. VMXNET3)."
        },
        "addresses": {
          "description": "NetworkAddressList",
          "$ref": "NetworkAddressList"
        }
      }
    },
    "GuestConfigDetails": {
      "id": "GuestConfigDetails",
      "description": "Guest OS config information.",
      "properties": {
        "selinux": {
          "description": "SELinux details.",
          "$ref": "Selinux"
        },
        "hosts": {
          "$ref": "HostsEntryList",
          "description": "Hosts file (/etc/hosts)."
        },
        "fstab": {
          "$ref": "FstabEntryList",
          "description": "Mount list (Linux fstab)."
        },
        "issue": {
          "type": "string",
          "description": "OS issue (typically /etc/issue in Linux)."
        },
        "nfsExports": {
          "description": "NFS exports.",
          "$ref": "NfsExportList"
        }
      },
      "type": "object"
    },
    "PerformanceSample": {
      "id": "PerformanceSample",
      "properties": {
        "sampleTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Time the sample was collected."
        },
        "network": {
          "$ref": "NetworkUsageSample",
          "description": "Network usage sample."
        },
        "memory": {
          "description": "Memory usage sample.",
          "$ref": "MemoryUsageSample"
        },
        "cpu": {
          "description": "CPU usage sample.",
          "$ref": "CpuUsageSample"
        },
        "disk": {
          "description": "Disk usage sample.",
          "$ref": "DiskUsageSample"
        }
      },
      "description": "Performance data sample.",
      "type": "object"
    },
    "BiosDetails": {
      "id": "BiosDetails",
      "description": "Details about the bios.",
      "type": "object",
      "properties": {
        "biosVersion": {
          "type": "string",
          "description": "Bios version."
        },
        "biosName": {
          "description": "Bios name.",
          "type": "string"
        },
        "smbiosUuid": {
          "type": "string",
          "description": "SMBios UUID."
        },
        "biosManufacturer": {
          "type": "string",
          "description": "Bios manufacturer."
        },
        "biosReleaseDate": {
          "description": "Bios release date.",
          "type": "string"
        }
      }
    },
    "InlinePayloadInfo": {
      "id": "InlinePayloadInfo",
      "properties": {
        "payload": {
          "type": "array",
          "items": {
            "$ref": "PayloadFile"
          },
          "description": "List of payload files."
        },
        "format": {
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_CMDB",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_JSON_FRAME"
          ],
          "description": "The import job format.",
          "enumDescriptions": [
            "Default value.",
            "Configuration management DB format.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "`AssetFrame` list in JSON format."
          ],
          "type": "string"
        }
      },
      "type": "object",
      "description": "A resource that represents the inline import job payload."
    },
    "OpenFileList": {
      "type": "object",
      "description": "Open file list.",
      "properties": {
        "entries": {
          "description": "Open file details entries.",
          "type": "array",
          "items": {
            "$ref": "OpenFileDetails"
          }
        }
      },
      "id": "OpenFileList"
    },
    "RuntimeNetworkInfo": {
      "properties": {
        "netstat": {
          "type": "string",
          "description": "Netstat (raw, OS-agnostic)."
        },
        "connections": {
          "description": "Network connections.",
          "$ref": "NetworkConnectionList"
        },
        "netstatTime": {
          "$ref": "DateTime",
          "description": "Netstat time collected."
        }
      },
      "description": "Runtime networking information.",
      "type": "object",
      "id": "RuntimeNetworkInfo"
    },
    "AggregationSum": {
      "type": "object",
      "properties": {},
      "id": "AggregationSum",
      "description": "Sum of field values."
    },
    "VmwareDiskConfig": {
      "properties": {
        "rdmCompatibilityMode": {
          "type": "string",
          "description": "RDM compatibility mode."
        },
        "vmdkDiskMode": {
          "type": "string",
          "description": "VMDK disk mode."
        },
        "shared": {
          "description": "Is VMDK shared with other VMs.",
          "type": "boolean"
        },
        "backingType": {
          "enumDescriptions": [
            "Default value.",
            "Flat v1.",
            "Flat v2.",
            "Persistent memory, also known as Non-Volatile Memory (NVM).",
            "Raw Disk Memory v1.",
            "Raw Disk Memory v2.",
            "SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.",
            "SEsparse v1.",
            "SEsparse v1."
          ],
          "description": "VMDK backing type.",
          "type": "string",
          "enum": [
            "BACKING_TYPE_UNSPECIFIED",
            "BACKING_TYPE_FLAT_V1",
            "BACKING_TYPE_FLAT_V2",
            "BACKING_TYPE_PMEM",
            "BACKING_TYPE_RDM_V1",
            "BACKING_TYPE_RDM_V2",
            "BACKING_TYPE_SESPARSE",
            "BACKING_TYPE_SESPARSE_V1",
            "BACKING_TYPE_SESPARSE_V2"
          ]
        }
      },
      "type": "object",
      "id": "VmwareDiskConfig",
      "description": "VMware disk config details."
    },
    "AggregationResultCount": {
      "description": "The result of a count aggregation.",
      "type": "object",
      "id": "AggregationResultCount",
      "properties": {
        "value": {
          "format": "int64",
          "type": "string"
        }
      }
    },
    "HostsEntryList": {
      "description": "Hosts content.",
      "type": "object",
      "properties": {
        "entries": {
          "description": "Hosts entries.",
          "type": "array",
          "items": {
            "$ref": "HostsEntry"
          }
        }
      },
      "id": "HostsEntryList"
    },
    "VirtualMachineNetworkDetails": {
      "properties": {
        "networkAdapters": {
          "description": "List of Network Adapters.",
          "$ref": "NetworkAdapterList"
        },
        "primaryMacAddress": {
          "type": "string",
          "description": "MAC Address of the machine. This property is used to uniqly identify the machine."
        },
        "primaryIpAddress": {
          "type": "string",
          "description": "IP Address of the machine."
        },
        "defaultGw": {
          "description": "Default GW address. Top-level object, will be later encriched by full RouteInfo.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "VirtualMachineNetworkDetails",
      "description": "Details of network adapters and settings"
    },
    "VmwarePlatformDetails": {
      "id": "VmwarePlatformDetails",
      "type": "object",
      "properties": {
        "vcenterVersion": {
          "description": "vCenter version.",
          "type": "string"
        },
        "esxVersion": {
          "description": "ESX version.",
          "type": "string"
        },
        "osid": {
          "description": "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.",
          "type": "string"
        }
      },
      "description": "VMware specific details."
    },
    "PayloadFile": {
      "id": "PayloadFile",
      "description": "Payload file for inline import job payload.",
      "type": "object",
      "properties": {
        "data": {
          "format": "byte",
          "type": "string",
          "description": "The file data."
        },
        "name": {
          "description": "The file name.",
          "type": "string"
        }
      }
    },
    "NetworkAddressList": {
      "description": "List of allocated/assigned network addresses.",
      "type": "object",
      "id": "NetworkAddressList",
      "properties": {
        "addresses": {
          "items": {
            "$ref": "NetworkAddress"
          },
          "type": "array"
        }
      }
    },
    "NfsExport": {
      "id": "NfsExport",
      "description": "NFS export.",
      "properties": {
        "hosts": {
          "description": "The hosts or networks to which the export is being shared.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "exportDirectory": {
          "description": "The directory being exported.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ImportRowError": {
      "description": "A resource that reports the import job errors at row level.",
      "properties": {
        "vmUuid": {
          "type": "string",
          "description": "The VM UUID."
        },
        "rowNumber": {
          "description": "The row number where the error was detected.",
          "type": "integer",
          "format": "int32"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "ImportError"
          },
          "description": "The list of errors detected in the row."
        },
        "vmName": {
          "description": "The name of the VM in the row.",
          "type": "string"
        }
      },
      "id": "ImportRowError",
      "type": "object"
    },
    "GuestRuntimeDetails": {
      "description": "Guest OS runtime information.",
      "properties": {
        "lastUptime": {
          "description": "Date since last booted (last uptime date).",
          "$ref": "Date"
        },
        "installedApps": {
          "description": "Installed applications information.",
          "$ref": "GuestInstalledApplicationList"
        },
        "networkInfo": {
          "$ref": "RuntimeNetworkInfo",
          "description": "Runtime network information (connections ports)."
        },
        "services": {
          "description": "Running background services.",
          "$ref": "RunningServiceList"
        },
        "domain": {
          "description": "Domain, e.g. c.stratozone-development.internal.",
          "type": "string"
        },
        "openFileList": {
          "description": "Open files information.",
          "$ref": "OpenFileList"
        },
        "machineName": {
          "description": "Machine name.",
          "type": "string"
        },
        "processes": {
          "$ref": "RunningProcessList",
          "description": "Running processes."
        }
      },
      "id": "GuestRuntimeDetails",
      "type": "object"
    },
    "FileValidationReport": {
      "type": "object",
      "id": "FileValidationReport",
      "description": "A resource that aggregates the validation errors found in an import job file.",
      "properties": {
        "fileErrors": {
          "items": {
            "$ref": "ImportError"
          },
          "type": "array",
          "description": "List of file level errors."
        },
        "fileName": {
          "type": "string",
          "description": "The name of the file."
        },
        "partialReport": {
          "description": "Flag indicating that processing was aborted due to maximum number of errors.",
          "type": "boolean"
        },
        "rowErrors": {
          "type": "array",
          "items": {
            "$ref": "ImportRowError"
          },
          "description": "Partial list of rows that encountered validation error."
        }
      }
    },
    "DiskPartition": {
      "properties": {
        "uuid": {
          "description": "Partition UUID.",
          "type": "string"
        },
        "fileSystem": {
          "description": "Partition file system.",
          "type": "string"
        },
        "freeBytes": {
          "description": "Partition free space.",
          "format": "int64",
          "type": "string"
        },
        "type": {
          "description": "Partition type (e.g. BIOS boot).",
          "type": "string"
        },
        "capacityBytes": {
          "description": "Partition capacity.",
          "format": "int64",
          "type": "string"
        },
        "mountPoint": {
          "type": "string",
          "description": "Mount pount (Linux/Windows) or drive letter (Windows)."
        },
        "subPartitions": {
          "$ref": "DiskPartitionList",
          "description": "Sub-partitions."
        }
      },
      "description": "Disk Partition details.",
      "id": "DiskPartition",
      "type": "object"
    },
    "AggregationResultSum": {
      "type": "object",
      "id": "AggregationResultSum",
      "properties": {
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "description": "The result of a sum aggregation."
    },
    "RunningProcessList": {
      "properties": {
        "processes": {
          "type": "array",
          "items": {
            "$ref": "RunningProcess"
          }
        }
      },
      "type": "object",
      "description": "List of running guest OS processes.",
      "id": "RunningProcessList"
    }
  },
  "ownerName": "Google",
  "rootUrl": "https://migrationcenter.googleapis.com/",
  "kind": "discovery#restDescription",
  "baseUrl": "https://migrationcenter.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "mtlsRootUrl": "https://migrationcenter.mtls.googleapis.com/"
}

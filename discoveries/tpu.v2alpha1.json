{
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "kind": "discovery#restDescription",
  "batchPath": "batch",
  "id": "tpu:v2alpha1",
  "rootUrl": "https://tpu.googleapis.com/",
  "servicePath": "",
  "fullyEncodeReservedExpansion": true,
  "name": "tpu",
  "parameters": {
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    }
  },
  "basePath": "",
  "discoveryVersion": "v1",
  "schemas": {
    "GetGuestAttributesRequest": {
      "description": "Request for GetGuestAttributes.",
      "properties": {
        "queryPath": {
          "description": "The guest attributes path to be queried.",
          "type": "string"
        },
        "workerIds": {
          "type": "array",
          "description": "The 0-based worker ID. If it is empty, all workers' GuestAttributes will be returned.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GetGuestAttributesRequest",
      "type": "object"
    },
    "SchedulingConfig": {
      "id": "SchedulingConfig",
      "properties": {
        "preemptible": {
          "type": "boolean",
          "description": "Defines whether the node is preemptible."
        },
        "reserved": {
          "type": "boolean",
          "description": "Whether the node is created under a reservation."
        }
      },
      "type": "object",
      "description": "Sets the scheduling options for this node."
    },
    "Empty": {
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "OperationMetadata": {
      "type": "object",
      "description": "Metadata describing an Operation",
      "id": "OperationMetadata",
      "properties": {
        "cancelRequested": {
          "type": "boolean",
          "description": "Specifies if cancellation was requested for the operation."
        },
        "target": {
          "type": "string",
          "description": "Target of the operation - for example projects/project-1/connectivityTests/test-1"
        },
        "apiVersion": {
          "type": "string",
          "description": "API version."
        },
        "verb": {
          "type": "string",
          "description": "Name of the verb executed by the operation."
        },
        "endTime": {
          "description": "The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        },
        "statusDetail": {
          "description": "Human-readable status of the operation, if any.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation was created."
        }
      }
    },
    "ListAcceleratorTypesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The next page token or empty if none."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "acceleratorTypes": {
          "items": {
            "$ref": "AcceleratorType"
          },
          "type": "array",
          "description": "The listed nodes."
        }
      },
      "description": "Response for ListAcceleratorTypes.",
      "type": "object",
      "id": "ListAcceleratorTypesResponse"
    },
    "SuspendedData": {
      "type": "object",
      "id": "SuspendedData",
      "properties": {},
      "description": "Further data for the suspended state."
    },
    "AcceleratorConfig": {
      "type": "object",
      "description": "A TPU accelerator configuration.",
      "properties": {
        "type": {
          "description": "Required. Type of TPU.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "V2",
            "V3",
            "V4"
          ],
          "enumDescriptions": [
            "Unspecified version.",
            "TPU v2.",
            "TPU v3.",
            "TPU v4."
          ]
        },
        "topology": {
          "type": "string",
          "description": "Required. Topology of TPU in chips."
        }
      },
      "id": "AcceleratorConfig"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListLocationsResponse"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "id": "Status",
      "type": "object"
    },
    "AcceleratorType": {
      "properties": {
        "acceleratorConfigs": {
          "items": {
            "$ref": "AcceleratorConfig"
          },
          "description": "The accelerator config.",
          "type": "array"
        },
        "name": {
          "description": "The resource name.",
          "type": "string"
        },
        "type": {
          "description": "The accelerator type.",
          "type": "string"
        }
      },
      "description": "A accelerator type that a Node can be configured with.",
      "id": "AcceleratorType",
      "type": "object"
    },
    "AcceptedData": {
      "description": "Further data for the accepted state.",
      "properties": {},
      "type": "object",
      "id": "AcceptedData"
    },
    "FailedData": {
      "id": "FailedData",
      "type": "object",
      "description": "Further data for the failed state.",
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The error that caused the queued resource to enter the FAILED state."
        }
      }
    },
    "BestEffort": {
      "id": "BestEffort",
      "properties": {},
      "type": "object",
      "description": "BestEffort tier definition."
    },
    "ListRuntimeVersionsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The next page token or empty if none."
        },
        "runtimeVersions": {
          "description": "The listed nodes.",
          "items": {
            "$ref": "RuntimeVersion"
          },
          "type": "array"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      },
      "description": "Response for ListRuntimeVersions.",
      "id": "ListRuntimeVersionsResponse"
    },
    "ListQueuedResourcesResponse": {
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "queuedResources": {
          "description": "The listed queued resources.",
          "type": "array",
          "items": {
            "$ref": "QueuedResource"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The next page token or empty if none."
        }
      },
      "type": "object",
      "description": "Response for ListQueuedResources.",
      "id": "ListQueuedResourcesResponse"
    },
    "CreatingData": {
      "description": "Further data for the creating state.",
      "properties": {},
      "id": "CreatingData",
      "type": "object"
    },
    "DeletingData": {
      "description": "Further data for the deleting state.",
      "properties": {},
      "id": "DeletingData",
      "type": "object"
    },
    "Interval": {
      "description": "Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.",
      "properties": {
        "startTime": {
          "type": "string",
          "description": "Optional. Inclusive start of the interval. If specified, a Timestamp matching this interval will have to be the same or after the start.",
          "format": "google-datetime"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Optional. Exclusive end of the interval. If specified, a Timestamp matching this interval will have to be before the end.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Interval"
    },
    "SuspendingData": {
      "id": "SuspendingData",
      "properties": {},
      "description": "Further data for the suspending state.",
      "type": "object"
    },
    "Symptom": {
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Timestamp when the Symptom is created."
        },
        "details": {
          "type": "string",
          "description": "Detailed information of the current Symptom."
        },
        "workerId": {
          "description": "A string used to uniquely distinguish a worker within a TPU node.",
          "type": "string"
        },
        "symptomType": {
          "type": "string",
          "description": "Type of the Symptom.",
          "enum": [
            "SYMPTOM_TYPE_UNSPECIFIED",
            "LOW_MEMORY",
            "OUT_OF_MEMORY",
            "EXECUTE_TIMED_OUT",
            "MESH_BUILD_FAIL",
            "HBM_OUT_OF_MEMORY",
            "PROJECT_ABUSE"
          ],
          "enumDescriptions": [
            "Unspecified symptom.",
            "TPU VM memory is low.",
            "TPU runtime is out of memory.",
            "TPU runtime execution has timed out.",
            "TPU runtime fails to construct a mesh that recognizes each TPU device's neighbors.",
            "TPU HBM is out of memory.",
            "Abusive behaviors have been identified on the current project."
          ]
        }
      },
      "type": "object",
      "id": "Symptom",
      "description": "A Symptom instance."
    },
    "Location": {
      "id": "Location",
      "properties": {
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location."
    },
    "SimulateMaintenanceEventRequest": {
      "type": "object",
      "properties": {
        "workerIds": {
          "items": {
            "type": "string"
          },
          "description": "The 0-based worker ID. If it is empty, worker ID 0 will be selected for maintenance event simulation. A maintenance event will only be fired on the first specified worker ID. Future implementations may support firing on multiple workers.",
          "type": "array"
        }
      },
      "id": "SimulateMaintenanceEventRequest",
      "description": "Request for SimulateMaintenanceEvent."
    },
    "GuestAttributesValue": {
      "properties": {
        "items": {
          "items": {
            "$ref": "GuestAttributesEntry"
          },
          "type": "array",
          "description": "The list of guest attributes entries."
        }
      },
      "type": "object",
      "id": "GuestAttributesValue",
      "description": "Array of guest attribute namespace/key/value tuples."
    },
    "Operation": {
      "properties": {
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "id": "Operation"
    },
    "ListNodesResponse": {
      "properties": {
        "nodes": {
          "description": "The listed nodes.",
          "type": "array",
          "items": {
            "$ref": "Node"
          }
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "The next page token or empty if none.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response for ListNodes.",
      "id": "ListNodesResponse"
    },
    "NetworkConfig": {
      "type": "object",
      "description": "Network related configurations.",
      "id": "NetworkConfig",
      "properties": {
        "enableExternalIps": {
          "type": "boolean",
          "description": "Indicates that external IP addresses would be associated with the TPU workers. If set to false, the specified subnetwork or network should have Private Google Access enabled."
        },
        "subnetwork": {
          "description": "The name of the subnetwork for the TPU node. It must be a preexisting Google Compute Engine subnetwork. If none is provided, \"default\" will be used.",
          "type": "string"
        },
        "network": {
          "type": "string",
          "description": "The name of the network for the TPU node. It must be a preexisting Google Compute Engine network. If none is provided, \"default\" will be used."
        },
        "canIpForward": {
          "type": "boolean",
          "description": "Allows the TPU node to send and receive packets with non-matching destination or source IPs. This is required if you plan to use the TPU workers to forward routes."
        }
      }
    },
    "ProvisioningData": {
      "type": "object",
      "id": "ProvisioningData",
      "description": "Further data for the provisioning state.",
      "properties": {}
    },
    "QueueingPolicy": {
      "id": "QueueingPolicy",
      "type": "object",
      "description": "Defines the policy of the QueuedRequest.",
      "properties": {
        "validUntilTime": {
          "type": "string",
          "description": "An absolute time after which resources should not be created. If the request cannot be fulfilled by this time the request will be failed.",
          "format": "google-datetime"
        },
        "validUntilDuration": {
          "type": "string",
          "format": "google-duration",
          "description": "A relative time after which resources should not be created. If the request cannot be fulfilled by this time the request will be failed."
        },
        "validAfterTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "An absolute time at which resources may be created."
        },
        "validAfterDuration": {
          "format": "google-duration",
          "type": "string",
          "description": "A relative time after which resources may be created."
        },
        "validInterval": {
          "description": "An absolute time interval within which resources may be created.",
          "$ref": "Interval"
        }
      }
    },
    "NodeSpec": {
      "type": "object",
      "id": "NodeSpec",
      "properties": {
        "parent": {
          "description": "Required. The parent resource name.",
          "type": "string"
        },
        "node": {
          "description": "Required. The node.",
          "$ref": "Node"
        },
        "nodeId": {
          "description": "The unqualified resource name. Should follow the `^[A-Za-z0-9_.~+%-]+$` regex format. This is only specified when requesting a single node. In case of multi-node requests, multi_node_params must be populated instead. It's an error to specify both node_id and multi_node_params.",
          "type": "string"
        }
      },
      "description": "Details of the TPU node(s) being requested. Users can request either a single node or multiple nodes. NodeSpec provides the specification for node(s) to be created."
    },
    "GuestAttributesEntry": {
      "properties": {
        "key": {
          "description": "Key for the guest attribute entry.",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace for the guest attribute entry.",
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "Value for the guest attribute entry."
        }
      },
      "type": "object",
      "description": "A guest attributes namespace/key/value entry.",
      "id": "GuestAttributesEntry"
    },
    "GetGuestAttributesResponse": {
      "properties": {
        "guestAttributes": {
          "description": "The guest attributes for the TPU workers.",
          "items": {
            "$ref": "GuestAttributes"
          },
          "type": "array"
        }
      },
      "id": "GetGuestAttributesResponse",
      "type": "object",
      "description": "Response for GetGuestAttributes."
    },
    "Guaranteed": {
      "properties": {
        "minDuration": {
          "format": "google-duration",
          "description": "Optional. Defines the minimum duration of the guarantee. If specified, the requested resources will only be provisioned if they can be allocated for at least the given duration.",
          "type": "string"
        },
        "reserved": {
          "description": "Optional. Specifies the request should be scheduled on reserved capacity.",
          "type": "boolean"
        }
      },
      "description": "Guaranteed tier definition.",
      "id": "Guaranteed",
      "type": "object"
    },
    "StopNodeRequest": {
      "properties": {},
      "type": "object",
      "description": "Request for StopNode.",
      "id": "StopNodeRequest"
    },
    "QueuedResource": {
      "type": "object",
      "description": "A QueuedResource represents a request for resources that will be placed in a queue and fulfilled when the necessary resources are available.",
      "properties": {
        "tpu": {
          "description": "Defines a TPU resource.",
          "$ref": "Tpu"
        },
        "guaranteed": {
          "$ref": "Guaranteed",
          "description": "The Guaranteed tier"
        },
        "bestEffort": {
          "description": "The BestEffort tier.",
          "$ref": "BestEffort"
        },
        "queueingPolicy": {
          "description": "The queueing policy of the QueuedRequest.",
          "$ref": "QueueingPolicy"
        },
        "name": {
          "description": "Output only. Immutable. The name of the QueuedResource.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "$ref": "QueuedResourceState",
          "readOnly": true,
          "description": "Output only. State of the QueuedResource request."
        }
      },
      "id": "QueuedResource"
    },
    "AttachedDisk": {
      "type": "object",
      "description": "A node-attached disk resource. Next ID: 8;",
      "properties": {
        "mode": {
          "enumDescriptions": [
            "The disk mode is not known/set.",
            "Attaches the disk in read-write mode. Only one TPU node can attach a disk in read-write mode at a time.",
            "Attaches the disk in read-only mode. Multiple TPU nodes can attach a disk in read-only mode at a time."
          ],
          "type": "string",
          "enum": [
            "DISK_MODE_UNSPECIFIED",
            "READ_WRITE",
            "READ_ONLY"
          ],
          "description": "The mode in which to attach this disk. If not specified, the default is READ_WRITE mode. Only applicable to data_disks."
        },
        "sourceDisk": {
          "description": "Specifies the full path to an existing disk. For example: \"projects/my-project/zones/us-central1-c/disks/my-disk\".",
          "type": "string"
        }
      },
      "id": "AttachedDisk"
    },
    "GenerateServiceIdentityResponse": {
      "properties": {
        "identity": {
          "$ref": "ServiceIdentity",
          "description": "ServiceIdentity that was created or retrieved."
        }
      },
      "description": "Response for GenerateServiceIdentity.",
      "type": "object",
      "id": "GenerateServiceIdentityResponse"
    },
    "ServiceIdentity": {
      "description": "The per-product per-project service identity for Cloud TPU service.",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email address of the service identity."
        }
      },
      "type": "object",
      "id": "ServiceIdentity"
    },
    "RuntimeVersion": {
      "description": "A runtime version that a Node can be configured with.",
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "The runtime version."
        },
        "name": {
          "type": "string",
          "description": "The resource name."
        }
      },
      "id": "RuntimeVersion"
    },
    "QueuedResourceState": {
      "properties": {
        "state": {
          "type": "string",
          "description": "State of the QueuedResource request.",
          "enumDescriptions": [
            "State of the QueuedResource request is not known/set.",
            "The QueuedResource request has been received. We're still working on determining if we will be able to honor this request.",
            "The QueuedResource request has passed initial validation/admission control and has been persisted in the queue.",
            "The QueuedResource request has been selected. The associated resources are currently being provisioned (or very soon will begin provisioning).",
            "The request could not be completed. This may be due to some late-discovered problem with the request itself, or due to unavailability of resources within the constraints of the request (e.g., the 'valid until' start timing constraint expired).",
            "The QueuedResource is being deleted.",
            "The resources specified in the QueuedResource request have been provisioned and are ready for use by the end-user/consumer.",
            "The resources specified in the QueuedResource request are being deleted. This may have been initiated by the user, or the Cloud TPU service. Inspect the state data for more details.",
            "The resources specified in the QueuedResource request have been deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACCEPTED",
            "PROVISIONING",
            "FAILED",
            "DELETING",
            "ACTIVE",
            "SUSPENDING",
            "SUSPENDED"
          ]
        },
        "suspendedData": {
          "description": "Further data for the suspended state.",
          "$ref": "SuspendedData"
        },
        "provisioningData": {
          "description": "Further data for the provisioning state.",
          "$ref": "ProvisioningData"
        },
        "creatingData": {
          "description": "Further data for the creating state.",
          "$ref": "CreatingData"
        },
        "failedData": {
          "description": "Further data for the failed state.",
          "$ref": "FailedData"
        },
        "activeData": {
          "$ref": "ActiveData",
          "description": "Further data for the active state."
        },
        "deletingData": {
          "$ref": "DeletingData",
          "description": "Further data for the deleting state."
        },
        "suspendingData": {
          "$ref": "SuspendingData",
          "description": "Further data for the suspending state."
        },
        "acceptedData": {
          "$ref": "AcceptedData",
          "description": "Further data for the accepted state."
        }
      },
      "description": "QueuedResourceState defines the details of the QueuedResource request.",
      "type": "object",
      "id": "QueuedResourceState"
    },
    "ResetQueuedResourceRequest": {
      "type": "object",
      "id": "ResetQueuedResourceRequest",
      "description": "Request for ResetQueuedResource.",
      "properties": {}
    },
    "Node": {
      "id": "Node",
      "description": "A TPU instance.",
      "type": "object",
      "properties": {
        "dataDisks": {
          "description": "The additional data disks for the Node.",
          "items": {
            "$ref": "AttachedDisk"
          },
          "type": "array"
        },
        "healthDescription": {
          "description": "Output only. If this field is populated, it contains a description of why the TPU Node is unhealthy.",
          "readOnly": true,
          "type": "string"
        },
        "runtimeVersion": {
          "type": "string",
          "description": "Required. The runtime version running in the Node."
        },
        "apiVersion": {
          "enumDescriptions": [
            "API version is unknown.",
            "TPU API V1Alpha1 version.",
            "TPU API V1 version.",
            "TPU API V2Alpha1 version."
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. The API version that created this Node.",
          "enum": [
            "API_VERSION_UNSPECIFIED",
            "V1_ALPHA1",
            "V1",
            "V2_ALPHA1"
          ]
        },
        "schedulingConfig": {
          "description": "The scheduling options for this node.",
          "$ref": "SchedulingConfig"
        },
        "networkConfig": {
          "description": "Network configurations for the TPU node.",
          "$ref": "NetworkConfig"
        },
        "health": {
          "enumDescriptions": [
            "Health status is unknown: not initialized or failed to retrieve.",
            "The resource is healthy.",
            "The resource is unresponsive.",
            "The in-guest ML stack is unhealthy.",
            "The node is under maintenance/priority boost caused rescheduling and will resume running once rescheduled."
          ],
          "enum": [
            "HEALTH_UNSPECIFIED",
            "HEALTHY",
            "TIMEOUT",
            "UNHEALTHY_TENSORFLOW",
            "UNHEALTHY_MAINTENANCE"
          ],
          "description": "The health status of the TPU node.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. Immutable. The name of the TPU.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The user-supplied description of the TPU. Maximum of 512 characters."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The current state for the TPU Node.",
          "enumDescriptions": [
            "TPU node state is not known/set.",
            "TPU node is being created.",
            "TPU node has been created.",
            "TPU node is restarting.",
            "TPU node is undergoing reimaging.",
            "TPU node is being deleted.",
            "TPU node is being repaired and may be unusable. Details can be found in the 'help_description' field.",
            "TPU node is stopped.",
            "TPU node is currently stopping.",
            "TPU node is currently starting.",
            "TPU node has been preempted. Only applies to Preemptible TPU Nodes.",
            "TPU node has been terminated due to maintenance or has reached the end of its life cycle (for preemptible nodes).",
            "TPU node is currently hiding.",
            "TPU node has been hidden.",
            "TPU node is currently unhiding."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "RESTARTING",
            "REIMAGING",
            "DELETING",
            "REPAIRING",
            "STOPPED",
            "STOPPING",
            "STARTING",
            "PREEMPTED",
            "TERMINATED",
            "HIDING",
            "HIDDEN",
            "UNHIDING"
          ]
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource labels to represent user-provided metadata."
        },
        "serviceAccount": {
          "$ref": "ServiceAccount",
          "description": "The Google Cloud Platform Service Account to be used by the TPU node VMs. If None is specified, the default compute service account will be used."
        },
        "cidrBlock": {
          "type": "string",
          "description": "The CIDR block that the TPU node will use when selecting an IP address. This CIDR block must be a /29 block; the Compute Engine networks API forbids a smaller block, and using a larger block would be wasteful (a node can only consume one IP address). Errors will occur if the CIDR block has already been used for a currently existing TPU node, the CIDR block conflicts with any subnetworks in the user's provided network, or the provided network is peered with another network that is using that CIDR block."
        },
        "acceleratorType": {
          "type": "string",
          "description": "The type of hardware accelerators associated with this node."
        },
        "symptoms": {
          "items": {
            "$ref": "Symptom"
          },
          "readOnly": true,
          "description": "Output only. The Symptoms that have occurred to the TPU Node.",
          "type": "array"
        },
        "shieldedInstanceConfig": {
          "description": "Shielded Instance options.",
          "$ref": "ShieldedInstanceConfig"
        },
        "acceleratorConfig": {
          "$ref": "AcceleratorConfig",
          "description": "The AccleratorConfig for the TPU Node."
        },
        "createTime": {
          "description": "Output only. The time when the node was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom metadata to apply to the TPU Node. Can set startup-script and shutdown-script"
        },
        "tags": {
          "description": "Tags to apply to the TPU Node. Tags are used to identify valid sources or targets for network firewalls.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "networkEndpoints": {
          "items": {
            "$ref": "NetworkEndpoint"
          },
          "type": "array",
          "description": "Output only. The network endpoints where TPU workers can be accessed and sent work. It is recommended that runtime clients of the node reach out to the 0th entry in this map first.",
          "readOnly": true
        },
        "queuedResource": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The qualified name of the QueuedResource that requested this Node."
        },
        "id": {
          "format": "int64",
          "description": "Output only. The unique identifier for the TPU Node.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ShieldedInstanceConfig": {
      "properties": {
        "enableSecureBoot": {
          "type": "boolean",
          "description": "Defines whether the instance has Secure Boot enabled."
        }
      },
      "id": "ShieldedInstanceConfig",
      "type": "object",
      "description": "A set of Shielded Instance options."
    },
    "StartNodeRequest": {
      "properties": {},
      "type": "object",
      "description": "Request for StartNode.",
      "id": "StartNodeRequest"
    },
    "Tpu": {
      "id": "Tpu",
      "description": "Details of the TPU resource(s) being requested.",
      "properties": {
        "nodeSpec": {
          "description": "The TPU node(s) being requested.",
          "items": {
            "$ref": "NodeSpec"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GuestAttributes": {
      "type": "object",
      "description": "A guest attributes.",
      "properties": {
        "queryValue": {
          "$ref": "GuestAttributesValue",
          "description": "The value of the requested queried path."
        },
        "queryPath": {
          "description": "The path to be queried. This can be the default namespace ('/') or a nested namespace ('/\\/') or a specified key ('/\\/\\')",
          "type": "string"
        }
      },
      "id": "GuestAttributes"
    },
    "AccessConfig": {
      "properties": {
        "externalIp": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. An external IP address associated with the TPU worker."
        }
      },
      "description": "An access config attached to the TPU worker.",
      "id": "AccessConfig",
      "type": "object"
    },
    "GenerateServiceIdentityRequest": {
      "description": "Request for GenerateServiceIdentity.",
      "properties": {},
      "id": "GenerateServiceIdentityRequest",
      "type": "object"
    },
    "ServiceAccount": {
      "type": "object",
      "description": "A service account.",
      "properties": {
        "scope": {
          "description": "The list of scopes to be made available for this service account. If empty, access to all Cloud APIs will be allowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "email": {
          "description": "Email address of the service account. If empty, default Compute service account will be used.",
          "type": "string"
        }
      },
      "id": "ServiceAccount"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "type": "object",
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      }
    },
    "ActiveData": {
      "description": "Further data for the active state.",
      "type": "object",
      "properties": {},
      "id": "ActiveData"
    },
    "NetworkEndpoint": {
      "description": "A network endpoint over which a TPU worker can be reached.",
      "properties": {
        "port": {
          "format": "int32",
          "description": "The port of this network endpoint.",
          "type": "integer"
        },
        "ipAddress": {
          "description": "The internal IP address of this network endpoint.",
          "type": "string"
        },
        "accessConfig": {
          "description": "The access config for the TPU worker.",
          "$ref": "AccessConfig"
        }
      },
      "type": "object",
      "id": "NetworkEndpoint"
    }
  },
  "title": "Cloud TPU API",
  "version_module": true,
  "ownerDomain": "google.com",
  "revision": "20230316",
  "canonicalName": "TPU",
  "baseUrl": "https://tpu.googleapis.com/",
  "mtlsRootUrl": "https://tpu.mtls.googleapis.com/",
  "version": "v2alpha1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "protocol": "rest",
  "documentationLink": "https://cloud.google.com/tpu/",
  "description": "TPU API provides customers with access to Google TPU technology.",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "nodes": {
              "methods": {
                "stop": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:stop",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The resource name.",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2alpha1/{+name}:stop",
                  "id": "tpu.projects.locations.nodes.stop",
                  "request": {
                    "$ref": "StopNodeRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Stops a node. This operation is only available with single TPU nodes."
                },
                "simulateMaintenanceEvent": {
                  "description": "Simulates a maintenance event.",
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:simulateMaintenanceEvent",
                  "id": "tpu.projects.locations.nodes.simulateMaintenanceEvent",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2alpha1/{+name}:simulateMaintenanceEvent",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "SimulateMaintenanceEventRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The resource name."
                    }
                  }
                },
                "getGuestAttributes": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2alpha1/{+name}:getGuestAttributes",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "tpu.projects.locations.nodes.getGuestAttributes",
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:getGuestAttributes",
                  "httpMethod": "POST",
                  "description": "Retrieves the guest attributes for the node.",
                  "request": {
                    "$ref": "GetGuestAttributesRequest"
                  },
                  "response": {
                    "$ref": "GetGuestAttributesResponse"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The resource name."
                    }
                  }
                },
                "start": {
                  "path": "v2alpha1/{+name}:start",
                  "request": {
                    "$ref": "StartNodeRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Starts a node.",
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:start",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "tpu.projects.locations.nodes.start",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$",
                      "description": "Required. The resource name.",
                      "location": "path"
                    }
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "description": "Gets the details of a node.",
                  "id": "tpu.projects.locations.nodes.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}",
                  "response": {
                    "$ref": "Node"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$",
                      "required": true,
                      "description": "Required. The resource name.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v2alpha1/{+name}"
                },
                "create": {
                  "parameters": {
                    "nodeId": {
                      "location": "query",
                      "type": "string",
                      "description": "The unqualified resource name."
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Idempotent request UUID."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent resource name.",
                      "required": true
                    }
                  },
                  "path": "v2alpha1/{+parent}/nodes",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Node"
                  },
                  "id": "tpu.projects.locations.nodes.create",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates a node.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/nodes"
                },
                "list": {
                  "httpMethod": "GET",
                  "id": "tpu.projects.locations.nodes.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists nodes.",
                  "response": {
                    "$ref": "ListNodesResponse"
                  },
                  "path": "v2alpha1/{+parent}/nodes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "The maximum number of items to return."
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent resource name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any."
                    }
                  },
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/nodes"
                },
                "patch": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Output only. Immutable. The name of the TPU.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$",
                      "required": true
                    },
                    "updateMask": {
                      "location": "query",
                      "description": "Required. Mask of fields from Node to update. Supported fields: [description, tags, labels, metadata, network_config.enable_external_ips].",
                      "format": "google-fieldmask",
                      "type": "string"
                    }
                  },
                  "description": "Updates the configurations of a node.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2alpha1/{+name}",
                  "request": {
                    "$ref": "Node"
                  },
                  "id": "tpu.projects.locations.nodes.patch",
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "path": "v2alpha1/{+name}",
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The resource name.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Idempotent request UUID.",
                      "type": "string"
                    }
                  },
                  "id": "tpu.projects.locations.nodes.delete",
                  "description": "Deletes a node.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "list": {
                  "id": "tpu.projects.locations.operations.list",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The standard list page size.",
                      "type": "integer",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation's parent resource.",
                      "required": true
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "path": "v2alpha1/{+name}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "cancel": {
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2alpha1/{+name}:cancel",
                  "id": "tpu.projects.locations.operations.cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be deleted.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "id": "tpu.projects.locations.operations.delete",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "get": {
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource."
                    }
                  },
                  "id": "tpu.projects.locations.operations.get",
                  "httpMethod": "GET",
                  "path": "v2alpha1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "queuedResources": {
              "methods": {
                "get": {
                  "path": "v2alpha1/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The resource name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/queuedResources/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "tpu.projects.locations.queuedResources.get",
                  "description": "Gets details of a queued resource.",
                  "response": {
                    "$ref": "QueuedResource"
                  },
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/queuedResources/{queuedResourcesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "reset": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2alpha1/{+name}:reset",
                  "request": {
                    "$ref": "ResetQueuedResourceRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/queuedResources/{queuedResourcesId}:reset",
                  "id": "tpu.projects.locations.queuedResources.reset",
                  "description": "Resets a QueuedResource TPU instance",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/queuedResources/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the queued resource.",
                      "required": true
                    }
                  }
                },
                "list": {
                  "description": "Lists queued resources.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of items to return.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent resource name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "id": "tpu.projects.locations.queuedResources.list",
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/queuedResources",
                  "path": "v2alpha1/{+parent}/queuedResources",
                  "response": {
                    "$ref": "ListQueuedResourcesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/queuedResources/{queuedResourcesId}",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Idempotent request UUID."
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/queuedResources/[^/]+$",
                      "required": true,
                      "description": "Required. The resource name.",
                      "location": "path"
                    }
                  },
                  "path": "v2alpha1/{+name}",
                  "id": "tpu.projects.locations.queuedResources.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a QueuedResource TPU instance.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "path": "v2alpha1/{+parent}/queuedResources",
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/queuedResources",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Idempotent request UUID."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent resource name.",
                      "type": "string"
                    },
                    "queuedResourceId": {
                      "location": "query",
                      "type": "string",
                      "description": "The unqualified resource name. Should follow the ^[A-Za-z0-9_.~+%-]+$ regex format."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Creates a QueuedResource TPU instance.",
                  "id": "tpu.projects.locations.queuedResources.create",
                  "request": {
                    "$ref": "QueuedResource"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "runtimeVersions": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent resource name."
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Sort results."
                    },
                    "pageSize": {
                      "description": "The maximum number of items to return.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2alpha1/{+parent}/runtimeVersions",
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/runtimeVersions",
                  "description": "Lists runtime versions supported by this API.",
                  "response": {
                    "$ref": "ListRuntimeVersionsResponse"
                  },
                  "id": "tpu.projects.locations.runtimeVersions.list"
                },
                "get": {
                  "response": {
                    "$ref": "RuntimeVersion"
                  },
                  "httpMethod": "GET",
                  "path": "v2alpha1/{+name}",
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/runtimeVersions/{runtimeVersionsId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The resource name.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimeVersions/[^/]+$"
                    }
                  },
                  "description": "Gets a runtime version.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "tpu.projects.locations.runtimeVersions.get"
                }
              }
            },
            "acceleratorTypes": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/acceleratorTypes/[^/]+$",
                      "required": true,
                      "description": "Required. The resource name.",
                      "location": "path"
                    }
                  },
                  "description": "Gets AcceleratorType.",
                  "httpMethod": "GET",
                  "id": "tpu.projects.locations.acceleratorTypes.get",
                  "response": {
                    "$ref": "AcceleratorType"
                  },
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/acceleratorTypes/{acceleratorTypesId}",
                  "path": "v2alpha1/{+name}"
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The next_page_token value returned from a previous List request, if any."
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Sort results.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource name.",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "List filter."
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of items to return.",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "ListAcceleratorTypesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2alpha1/{+parent}/acceleratorTypes",
                  "httpMethod": "GET",
                  "description": "Lists accelerator types supported by this API.",
                  "id": "tpu.projects.locations.acceleratorTypes.list",
                  "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/acceleratorTypes",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            }
          },
          "methods": {
            "list": {
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2alpha1/projects/{projectsId}/locations",
              "path": "v2alpha1/{+name}/locations",
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "id": "tpu.projects.locations.list",
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET"
            },
            "generateServiceIdentity": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GenerateServiceIdentityResponse"
              },
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. The parent resource name.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "id": "tpu.projects.locations.generateServiceIdentity",
              "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}:generateServiceIdentity",
              "request": {
                "$ref": "GenerateServiceIdentityRequest"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "path": "v2alpha1/{+parent}:generateServiceIdentity",
              "description": "Generates the Cloud TPU service identity for the project."
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "id": "tpu.projects.locations.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}",
              "description": "Gets information about a location.",
              "path": "v2alpha1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "description": "Resource name for the location.",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Location"
              }
            }
          }
        }
      }
    }
  }
}

{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "ownerName": "Google",
  "baseUrl": "https://privateca.googleapis.com/",
  "schemas": {
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        }
      },
      "id": "Status",
      "type": "object"
    },
    "X509Extension": {
      "type": "object",
      "description": "An X509Extension specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.",
      "properties": {
        "objectId": {
          "description": "Required. The OID for this X.509 extension.",
          "$ref": "ObjectId"
        },
        "value": {
          "type": "string",
          "description": "Required. The value of this X.509 extension.",
          "format": "byte"
        },
        "critical": {
          "type": "boolean",
          "description": "Required. Indicates whether or not this extension is critical (i.e., if the client does not know how to handle this extension, the client should consider this to be an error)."
        }
      },
      "id": "X509Extension"
    },
    "CertificateDescription": {
      "properties": {
        "subjectKeyId": {
          "description": "Provides a means of identifiying certificates that contain a particular public key, per https://tools.ietf.org/html/rfc5280#section-4.2.1.2.",
          "$ref": "KeyId"
        },
        "configValues": {
          "description": "Describes some of the technical fields in a certificate.",
          "$ref": "ReusableConfigValues"
        },
        "publicKey": {
          "description": "The public key that corresponds to an issued certificate.",
          "$ref": "PublicKey"
        },
        "authorityKeyId": {
          "description": "Identifies the subject_key_id of the parent certificate, per https://tools.ietf.org/html/rfc5280#section-4.2.1.1",
          "$ref": "KeyId"
        },
        "crlDistributionPoints": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Describes a list of locations to obtain CRL information, i.e. the DistributionPoint.fullName described by https://tools.ietf.org/html/rfc5280#section-4.2.1.13"
        },
        "aiaIssuingCertificateUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Describes lists of issuer CA certificate URLs that appear in the \"Authority Information Access\" extension in the certificate."
        },
        "subjectDescription": {
          "description": "Describes some of the values in a certificate that are related to the subject and lifetime.",
          "$ref": "SubjectDescription"
        },
        "certFingerprint": {
          "description": "The hash of the x.509 certificate.",
          "$ref": "CertificateFingerprint"
        }
      },
      "type": "object",
      "description": "A CertificateDescription describes an X.509 certificate or CSR that has been issued, as an alternative to using ASN.1 / X.509.",
      "id": "CertificateDescription"
    },
    "SetIamPolicyRequest": {
      "properties": {
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
        },
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
          "$ref": "Policy"
        }
      },
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "id": "SetIamPolicyRequest"
    },
    "Certificate": {
      "id": "Certificate",
      "properties": {
        "pemCsr": {
          "type": "string",
          "description": "Immutable. A pem-encoded X.509 certificate signing request (CSR)."
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which this Certificate was updated.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. Labels with user-defined metadata."
        },
        "certificateDescription": {
          "description": "Output only. A structured description of the issued X.509 certificate.",
          "readOnly": true,
          "$ref": "CertificateDescription"
        },
        "lifetime": {
          "type": "string",
          "description": "Required. Immutable. The desired lifetime of a certificate. Used to create the \"not_before_time\" and \"not_after_time\" fields inside an X.509 certificate. Note that the lifetime may be truncated if it would extend past the life of any certificate authority in the issuing chain.",
          "format": "google-duration"
        },
        "revocationDetails": {
          "description": "Output only. Details regarding the revocation of this Certificate. This Certificate is considered revoked if and only if this field is present.",
          "$ref": "RevocationDetails",
          "readOnly": true
        },
        "config": {
          "description": "Immutable. A description of the certificate and key that does not require X.509 or ASN.1.",
          "$ref": "CertificateConfig"
        },
        "pemCertificateChain": {
          "description": "Output only. The chain that may be used to verify the X.509 certificate. Expected to be in issuer-to-root order according to RFC 5246.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "name": {
          "description": "Output only. The resource path for this Certificate in the format `projects/*/locations/*/certificateAuthorities/*/certificates/*`.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time at which this Certificate was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "pemCertificate": {
          "type": "string",
          "description": "Output only. The pem-encoded, signed X.509 certificate.",
          "readOnly": true
        }
      },
      "description": "A Certificate corresponds to a signed X.509 certificate issued by a CertificateAuthority.",
      "type": "object"
    },
    "SubjectAltNames": {
      "id": "SubjectAltNames",
      "description": "SubjectAltNames corresponds to a more modern way of listing what the asserted identity is in a certificate (i.e., compared to the \"common name\" in the distinguished name).",
      "properties": {
        "uris": {
          "items": {
            "type": "string"
          },
          "description": "Contains only valid RFC 3986 URIs.",
          "type": "array"
        },
        "ipAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses."
        },
        "customSans": {
          "type": "array",
          "description": "Contains additional subject alternative name values.",
          "items": {
            "$ref": "X509Extension"
          }
        },
        "emailAddresses": {
          "description": "Contains only valid RFC 2822 E-mail addresses.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dnsNames": {
          "type": "array",
          "description": "Contains only valid, fully-qualified host names.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "EnableCertificateAuthorityRequest": {
      "id": "EnableCertificateAuthorityRequest",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      },
      "type": "object",
      "description": "Request message for CertificateAuthorityService.EnableCertificateAuthority."
    },
    "IssuingOptions": {
      "properties": {
        "includeCrlAccessUrl": {
          "description": "Required. When true, includes a URL to the CRL corresponding to certificates issued from a CertificateAuthority. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are also rebuilt shortly after a certificate is revoked.",
          "type": "boolean"
        },
        "includeCaCertUrl": {
          "description": "Required. When true, includes a URL to the issuing CA certificate in the \"authority information access\" X.509 extension.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "IssuingOptions",
      "description": "Options that affect all certificates issued by a CertificateAuthority."
    },
    "SubjectConfig": {
      "type": "object",
      "id": "SubjectConfig",
      "description": "These values are used to create the distinguished name and subject alternative name fields in an X.509 certificate.",
      "properties": {
        "subjectAltName": {
          "description": "Optional. The subject alternative name fields.",
          "$ref": "SubjectAltNames"
        },
        "subject": {
          "description": "Required. Contains distinguished name fields such as the location and organization.",
          "$ref": "Subject"
        },
        "commonName": {
          "type": "string",
          "description": "Optional. The \"common name\" of the distinguished name."
        }
      }
    },
    "AllowedConfigList": {
      "id": "AllowedConfigList",
      "properties": {
        "allowedConfigValues": {
          "type": "array",
          "description": "Required. All Certificates issued by the CertificateAuthority must match at least one listed ReusableConfigWrapper. If a ReusableConfigWrapper has an empty field, any value will be allowed for that field.",
          "items": {
            "$ref": "ReusableConfigWrapper"
          }
        }
      },
      "type": "object"
    },
    "DisableCertificateAuthorityRequest": {
      "id": "DisableCertificateAuthorityRequest",
      "type": "object",
      "description": "Request message for CertificateAuthorityService.DisableCertificateAuthority.",
      "properties": {
        "requestId": {
          "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      }
    },
    "CertificateFingerprint": {
      "id": "CertificateFingerprint",
      "description": "A group of fingerprints for the x509 certificate.",
      "type": "object",
      "properties": {
        "sha256Hash": {
          "description": "The SHA 256 hash, encoded in hexadecimal, of the DER x509 certificate.",
          "type": "string"
        }
      }
    },
    "Binding": {
      "type": "object",
      "id": "Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "properties": {
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the principals requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "ReusableConfigWrapper": {
      "properties": {
        "reusableConfigValues": {
          "description": "Required. A user-specified inline ReusableConfigValues.",
          "$ref": "ReusableConfigValues"
        },
        "reusableConfig": {
          "type": "string",
          "description": "Required. A resource path to a ReusableConfig in the format `projects/*/locations/*/reusableConfigs/*`."
        }
      },
      "description": "A ReusableConfigWrapper describes values that may assist in creating an X.509 certificate, or a reference to a pre-defined set of values.",
      "id": "ReusableConfigWrapper",
      "type": "object"
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        }
      },
      "type": "object"
    },
    "KeyId": {
      "id": "KeyId",
      "properties": {
        "keyId": {
          "description": "Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key.",
          "type": "string"
        }
      },
      "description": "A KeyId identifies a specific public key, usually by hashing the public key.",
      "type": "object"
    },
    "AllowedSubjectAltNames": {
      "id": "AllowedSubjectAltNames",
      "type": "object",
      "description": "AllowedSubjectAltNames specifies the allowed values for SubjectAltNames by the CertificateAuthority when issuing Certificates.",
      "properties": {
        "allowedDnsNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. Contains valid, fully-qualified host names. Glob patterns are also supported. To allow an explicit wildcard certificate, escape with backlash (i.e. `\\*`). E.g. for globbed entries: `*bar.com` will allow `foo.bar.com`, but not `*.bar.com`, unless the allow_globbing_dns_wildcards field is set. E.g. for wildcard entries: `\\*.bar.com` will allow `*.bar.com`, but not `foo.bar.com`."
        },
        "allowCustomSans": {
          "type": "boolean",
          "description": "Optional. Specifies if to allow custom X509Extension values."
        },
        "allowedIps": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. Contains valid 32-bit IPv4 addresses and subnet ranges or RFC 4291 IPv6 addresses and subnet ranges. Subnet ranges are specified using the '/' notation (e.g. 10.0.0.0/8, 2001:700:300:1800::/64). Glob patterns are supported only for ip address entries (i.e. not for subnet ranges)."
        },
        "allowedEmailAddresses": {
          "type": "array",
          "description": "Optional. Contains valid RFC 2822 E-mail addresses. Glob patterns are also supported.",
          "items": {
            "type": "string"
          }
        },
        "allowedUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. Contains valid RFC 3986 URIs. Glob patterns are also supported. To match across path seperators (i.e. '/') use the double star glob pattern (i.e. '**')."
        },
        "allowGlobbingDnsWildcards": {
          "type": "boolean",
          "description": "Optional. Specifies if glob patterns used for allowed_dns_names allow wildcard certificates. If this is set, certificate requests with wildcard domains will be permitted to match a glob pattern specified in allowed_dns_names. Otherwise, certificate requests with wildcard domains will be permitted only if allowed_dns_names contains a literal wildcard."
        }
      }
    },
    "Empty": {
      "properties": {},
      "type": "object",
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "ScheduleDeleteCertificateAuthorityRequest": {
      "type": "object",
      "id": "ScheduleDeleteCertificateAuthorityRequest",
      "properties": {
        "requestId": {
          "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        },
        "ignoreActiveCertificates": {
          "type": "boolean",
          "description": "Optional. This field allows the CA to be scheduled for deletion even if the CA has active certs. Active certs include both unrevoked and unexpired certs."
        }
      },
      "description": "Request message for CertificateAuthorityService.ScheduleDeleteCertificateAuthority."
    },
    "Subject": {
      "type": "object",
      "id": "Subject",
      "description": "Subject describes parts of a distinguished name that, in turn, describes the subject of the certificate.",
      "properties": {
        "organizationalUnit": {
          "type": "string",
          "description": "The organizational_unit of the subject."
        },
        "province": {
          "type": "string",
          "description": "The province, territory, or regional state of the subject."
        },
        "postalCode": {
          "description": "The postal code of the subject.",
          "type": "string"
        },
        "organization": {
          "type": "string",
          "description": "The organization of the subject."
        },
        "countryCode": {
          "type": "string",
          "description": "The country code of the subject."
        },
        "streetAddress": {
          "description": "The street address of the subject.",
          "type": "string"
        },
        "locality": {
          "description": "The locality or city of the subject.",
          "type": "string"
        }
      }
    },
    "ActivateCertificateAuthorityRequest": {
      "id": "ActivateCertificateAuthorityRequest",
      "properties": {
        "requestId": {
          "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        },
        "subordinateConfig": {
          "$ref": "SubordinateConfig",
          "description": "Required. Must include information about the issuer of 'pem_ca_certificate', and any further issuers until the self-signed CA."
        },
        "pemCaCertificate": {
          "description": "Required. The signed CA certificate issued from FetchCertificateAuthorityCsrResponse.pem_csr.",
          "type": "string"
        }
      },
      "description": "Request message for CertificateAuthorityService.ActivateCertificateAuthority.",
      "type": "object"
    },
    "TestIamPermissionsRequest": {
      "properties": {
        "permissions": {
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Request message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsRequest",
      "type": "object"
    },
    "Location": {
      "description": "A resource that represents Google Cloud Platform location.",
      "id": "Location",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "ObjectId": {
      "description": "An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.",
      "type": "object",
      "id": "ObjectId",
      "properties": {
        "objectIdPath": {
          "type": "array",
          "description": "Required. The parts of an OID path. The most significant parts of the path come first.",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "CertificateAuthorityPolicy": {
      "properties": {
        "allowedLocationsAndOrganizations": {
          "type": "array",
          "description": "Optional. If any Subject is specified here, then all Certificates issued by the CertificateAuthority must match at least one listed Subject. If a Subject has an empty field, any value will be allowed for that field.",
          "items": {
            "$ref": "Subject"
          }
        },
        "allowedIssuanceModes": {
          "description": "Optional. If specified, then only methods allowed in the IssuanceModes may be used to issue Certificates.",
          "$ref": "IssuanceModes"
        },
        "maximumLifetime": {
          "description": "Optional. The maximum lifetime allowed by the CertificateAuthority. Note that if the any part if the issuing chain expires before a Certificate's requested maximum_lifetime, the effective lifetime will be explicitly truncated.",
          "type": "string",
          "format": "google-duration"
        },
        "allowedSans": {
          "description": "Optional. If a AllowedSubjectAltNames is specified here, then all Certificates issued by the CertificateAuthority must match AllowedSubjectAltNames. If no value or an empty value is specified, any value will be allowed for the SubjectAltNames field.",
          "$ref": "AllowedSubjectAltNames"
        },
        "allowedConfigList": {
          "$ref": "AllowedConfigList",
          "description": "Optional. All Certificates issued by the CertificateAuthority must match at least one listed ReusableConfigWrapper in the list."
        },
        "overwriteConfigValues": {
          "$ref": "ReusableConfigWrapper",
          "description": "Optional. All Certificates issued by the CertificateAuthority will use the provided configuration values, overwriting any requested configuration values."
        },
        "allowedCommonNames": {
          "description": "Optional. If any value is specified here, then all Certificates issued by the CertificateAuthority must match at least one listed value. If no value is specified, all values will be allowed for this fied. Glob patterns are also supported.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "CertificateAuthorityPolicy",
      "description": "The issuing policy for a CertificateAuthority. Certificates will not be successfully issued from this CertificateAuthority if they violate the policy.",
      "type": "object"
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "type": "object",
      "description": "The request message for Operations.CancelOperation.",
      "properties": {}
    },
    "CertificateRevocationList": {
      "properties": {
        "sequenceNumber": {
          "description": "Output only. The CRL sequence number that appears in pem_crl.",
          "type": "string",
          "format": "int64",
          "readOnly": true
        },
        "state": {
          "description": "Output only. The State for this CertificateRevocationList.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "SUPERSEDED"
          ],
          "enumDescriptions": [
            "Not specified.",
            "The CertificateRevocationList is up to date.",
            "The CertificateRevocationList is no longer current."
          ]
        },
        "name": {
          "description": "Output only. The resource path for this CertificateRevocationList in the format `projects/*/locations/*/certificateAuthorities/*/ certificateRevocationLists/*`.",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "description": "Output only. The time at which this CertificateRevocationList was updated.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "labels": {
          "description": "Optional. Labels with user-defined metadata.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "accessUrl": {
          "description": "Output only. The location where 'pem_crl' can be accessed.",
          "readOnly": true,
          "type": "string"
        },
        "pemCrl": {
          "readOnly": true,
          "description": "Output only. The PEM-encoded X.509 CRL.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time at which this CertificateRevocationList was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "revokedCertificates": {
          "readOnly": true,
          "items": {
            "$ref": "RevokedCertificate"
          },
          "description": "Output only. The revoked serial numbers that appear in pem_crl.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "A CertificateRevocationList corresponds to a signed X.509 certificate Revocation List (CRL). A CRL contains the serial numbers of certificates that should no longer be trusted.",
      "id": "CertificateRevocationList"
    },
    "RestoreCertificateAuthorityRequest": {
      "id": "RestoreCertificateAuthorityRequest",
      "description": "Request message for CertificateAuthorityService.RestoreCertificateAuthority.",
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      }
    },
    "KeyVersionSpec": {
      "description": "A Cloud KMS key configuration that a CertificateAuthority will use.",
      "type": "object",
      "properties": {
        "algorithm": {
          "type": "string",
          "enum": [
            "SIGN_HASH_ALGORITHM_UNSPECIFIED",
            "RSA_PSS_2048_SHA256",
            "RSA_PSS_3072_SHA256",
            "RSA_PSS_4096_SHA256",
            "RSA_PKCS1_2048_SHA256",
            "RSA_PKCS1_3072_SHA256",
            "RSA_PKCS1_4096_SHA256",
            "EC_P256_SHA256",
            "EC_P384_SHA384"
          ],
          "enumDescriptions": [
            "Not specified.",
            "maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PSS_2048_SHA256",
            "maps to CryptoKeyVersionAlgorithm. RSA_SIGN_PSS_3072_SHA256",
            "maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PSS_4096_SHA256",
            "maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PKCS1_2048_SHA256",
            "maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PKCS1_3072_SHA256",
            "maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PKCS1_4096_SHA256",
            "maps to CryptoKeyVersionAlgorithm.EC_SIGN_P256_SHA256",
            "maps to CryptoKeyVersionAlgorithm.EC_SIGN_P384_SHA384"
          ],
          "description": "Required. The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as `HSM`."
        },
        "cloudKmsKeyVersion": {
          "description": "Required. The resource name for an existing Cloud KMS CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`. This option enables full flexibility in the key's capabilities and properties.",
          "type": "string"
        }
      },
      "id": "KeyVersionSpec"
    },
    "KeyUsage": {
      "type": "object",
      "description": "A KeyUsage describes key usage values that may appear in an X.509 certificate.",
      "properties": {
        "baseKeyUsage": {
          "description": "Describes high-level ways in which a key may be used.",
          "$ref": "KeyUsageOptions"
        },
        "unknownExtendedKeyUsages": {
          "description": "Used to describe extended key usages that are not listed in the KeyUsage.ExtendedKeyUsageOptions message.",
          "type": "array",
          "items": {
            "$ref": "ObjectId"
          }
        },
        "extendedKeyUsage": {
          "$ref": "ExtendedKeyUsageOptions",
          "description": "Detailed scenarios in which a key may be used."
        }
      },
      "id": "KeyUsage"
    },
    "RevokeCertificateRequest": {
      "description": "Request message for CertificateAuthorityService.RevokeCertificate.",
      "properties": {
        "reason": {
          "description": "Required. The RevocationReason for revoking this certificate.",
          "type": "string",
          "enum": [
            "REVOCATION_REASON_UNSPECIFIED",
            "KEY_COMPROMISE",
            "CERTIFICATE_AUTHORITY_COMPROMISE",
            "AFFILIATION_CHANGED",
            "SUPERSEDED",
            "CESSATION_OF_OPERATION",
            "CERTIFICATE_HOLD",
            "PRIVILEGE_WITHDRAWN",
            "ATTRIBUTE_AUTHORITY_COMPROMISE"
          ],
          "enumDescriptions": [
            "Default unspecified value. This value does indicate that a Certificate has been revoked, but that a reason has not been recorded.",
            "Key material for this Certificate may have leaked.",
            "The key material for a certificate authority in the issuing path may have leaked.",
            "The subject or other attributes in this Certificate have changed.",
            "This Certificate has been superseded.",
            "This Certificate or entities in the issuing path have ceased to operate.",
            "This Certificate should not be considered valid, it is expected that it may become valid in the future.",
            "This Certificate no longer has permission to assert the listed attributes.",
            "The authority which determines appropriate attributes for a Certificate may have been compromised."
          ]
        },
        "requestId": {
          "type": "string",
          "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      },
      "id": "RevokeCertificateRequest",
      "type": "object"
    },
    "ReusableConfig": {
      "type": "object",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which this ReusableConfig was created.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "Optional. A human-readable description of scenarios these ReusableConfigValues may be compatible with.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource path for this ReusableConfig in the format `projects/*/locations/*/reusableConfigs/*`."
        },
        "values": {
          "$ref": "ReusableConfigValues",
          "description": "Required. The config values."
        },
        "labels": {
          "type": "object",
          "description": "Optional. Labels with user-defined metadata.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The time at which this ReusableConfig was updated.",
          "readOnly": true,
          "format": "google-datetime"
        }
      },
      "id": "ReusableConfig",
      "description": "A ReusableConfig refers to a managed ReusableConfigValues. Those, in turn, are used to describe certain fields of an X.509 certificate, such as the key usage fields, fields specific to CA certificates, certificate policy extensions and custom extensions."
    },
    "SubordinateConfigChain": {
      "type": "object",
      "id": "SubordinateConfigChain",
      "description": "This message describes a subordinate CA's issuer certificate chain. This wrapper exists for compatibility reasons.",
      "properties": {
        "pemCertificates": {
          "description": "Required. Expected to be in leaf-to-root order according to RFC 5246.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "ListCertificatesResponse": {
      "type": "object",
      "properties": {
        "certificates": {
          "type": "array",
          "description": "The list of Certificates.",
          "items": {
            "$ref": "Certificate"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve next page of results. Pass this value in ListCertificatesRequest.next_page_token to retrieve the next page of results.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "A list of locations (e.g. \"us-west1\") that could not be reached.",
          "type": "array"
        }
      },
      "id": "ListCertificatesResponse",
      "description": "Response message for CertificateAuthorityService.ListCertificates."
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      },
      "type": "object"
    },
    "ReusableConfigValues": {
      "description": "A ReusableConfigValues is used to describe certain fields of an X.509 certificate, such as the key usage fields, fields specific to CA certificates, certificate policy extensions and custom extensions.",
      "type": "object",
      "id": "ReusableConfigValues",
      "properties": {
        "caOptions": {
          "$ref": "CaOptions",
          "description": "Optional. Describes options in this ReusableConfigValues that are relevant in a CA certificate."
        },
        "additionalExtensions": {
          "type": "array",
          "items": {
            "$ref": "X509Extension"
          },
          "description": "Optional. Describes custom X.509 extensions."
        },
        "policyIds": {
          "type": "array",
          "items": {
            "$ref": "ObjectId"
          },
          "description": "Optional. Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4."
        },
        "aiaOcspServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate."
        },
        "keyUsage": {
          "description": "Optional. Indicates the intended use for keys that correspond to a certificate.",
          "$ref": "KeyUsage"
        }
      }
    },
    "KeyUsageOptions": {
      "type": "object",
      "properties": {
        "contentCommitment": {
          "type": "boolean",
          "description": "The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\"."
        },
        "decipherOnly": {
          "description": "The key may be used to decipher only.",
          "type": "boolean"
        },
        "digitalSignature": {
          "description": "The key may be used for digital signatures.",
          "type": "boolean"
        },
        "encipherOnly": {
          "description": "The key may be used to encipher only.",
          "type": "boolean"
        },
        "certSign": {
          "description": "The key may be used to sign certificates.",
          "type": "boolean"
        },
        "crlSign": {
          "description": "The key may be used sign certificate revocation lists.",
          "type": "boolean"
        },
        "keyEncipherment": {
          "description": "The key may be used to encipher other keys.",
          "type": "boolean"
        },
        "keyAgreement": {
          "description": "The key may be used in a key agreement protocol.",
          "type": "boolean"
        },
        "dataEncipherment": {
          "description": "The key may be used to encipher data.",
          "type": "boolean"
        }
      },
      "id": "KeyUsageOptions",
      "description": "KeyUsage.KeyUsageOptions corresponds to the key usage values described in https://tools.ietf.org/html/rfc5280#section-4.2.1.3."
    },
    "RevokedCertificate": {
      "type": "object",
      "description": "Describes a revoked Certificate.",
      "properties": {
        "hexSerialNumber": {
          "description": "The serial number of the Certificate.",
          "type": "string"
        },
        "certificate": {
          "type": "string",
          "description": "The resource path for the Certificate in the format `projects/*/locations/*/certificateAuthorities/*/certificates/*`."
        },
        "revocationReason": {
          "description": "The reason the Certificate was revoked.",
          "enum": [
            "REVOCATION_REASON_UNSPECIFIED",
            "KEY_COMPROMISE",
            "CERTIFICATE_AUTHORITY_COMPROMISE",
            "AFFILIATION_CHANGED",
            "SUPERSEDED",
            "CESSATION_OF_OPERATION",
            "CERTIFICATE_HOLD",
            "PRIVILEGE_WITHDRAWN",
            "ATTRIBUTE_AUTHORITY_COMPROMISE"
          ],
          "enumDescriptions": [
            "Default unspecified value. This value does indicate that a Certificate has been revoked, but that a reason has not been recorded.",
            "Key material for this Certificate may have leaked.",
            "The key material for a certificate authority in the issuing path may have leaked.",
            "The subject or other attributes in this Certificate have changed.",
            "This Certificate has been superseded.",
            "This Certificate or entities in the issuing path have ceased to operate.",
            "This Certificate should not be considered valid, it is expected that it may become valid in the future.",
            "This Certificate no longer has permission to assert the listed attributes.",
            "The authority which determines appropriate attributes for a Certificate may have been compromised."
          ],
          "type": "string"
        }
      },
      "id": "RevokedCertificate"
    },
    "FetchCertificateAuthorityCsrResponse": {
      "properties": {
        "pemCsr": {
          "type": "string",
          "description": "Output only. The PEM-encoded signed certificate signing request (CSR).",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "FetchCertificateAuthorityCsrResponse",
      "description": "Response message for CertificateAuthorityService.FetchCertificateAuthorityCsr."
    },
    "AccessUrls": {
      "id": "AccessUrls",
      "type": "object",
      "description": "URLs where a CertificateAuthority will publish content.",
      "properties": {
        "crlAccessUrl": {
          "type": "string",
          "description": "The URL where this CertificateAuthority's CRLs are published. This will only be set for CAs that have been activated."
        },
        "caCertificateAccessUrl": {
          "description": "The URL where this CertificateAuthority's CA certificate is published. This will only be set for CAs that have been activated.",
          "type": "string"
        }
      }
    },
    "ReconciliationOperationMetadata": {
      "properties": {
        "deleteResource": {
          "description": "DEPRECATED. Use exclusive_action instead.",
          "type": "boolean"
        },
        "exclusiveAction": {
          "enum": [
            "UNKNOWN_REPAIR_ACTION",
            "DELETE",
            "RETRY"
          ],
          "enumDescriptions": [
            "",
            "The resource has to be deleted. When using this bit, the CLH should fail the operation.",
            "This resource could not be repaired but the repair should be tried again at a later time. This can happen if there is a dependency that needs to be resolved first- e.g. if a parent resource must be repaired before a child resource."
          ],
          "type": "string"
        }
      },
      "description": "Operation metadata returned by the CLH during resource state reconciliation.",
      "type": "object",
      "id": "ReconciliationOperationMetadata"
    },
    "ListCertificateAuthoritiesResponse": {
      "id": "ListCertificateAuthoritiesResponse",
      "description": "Response message for CertificateAuthorityService.ListCertificateAuthorities.",
      "type": "object",
      "properties": {
        "unreachable": {
          "description": "A list of locations (e.g. \"us-west1\") that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token to retrieve next page of results. Pass this value in ListCertificateAuthoritiesRequest.next_page_token to retrieve the next page of results.",
          "type": "string"
        },
        "certificateAuthorities": {
          "items": {
            "$ref": "CertificateAuthority"
          },
          "type": "array",
          "description": "The list of CertificateAuthorities."
        }
      }
    },
    "CertificateAuthority": {
      "id": "CertificateAuthority",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "SELF_SIGNED",
            "SUBORDINATE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Self-signed CA.",
            "Subordinate CA. Could be issued by a Private CA CertificateAuthority or an unmanaged CA."
          ],
          "description": "Required. Immutable. The Type of this CertificateAuthority."
        },
        "config": {
          "$ref": "CertificateConfig",
          "description": "Required. Immutable. The config used to create a self-signed X.509 certificate or CSR."
        },
        "caCertificateDescriptions": {
          "readOnly": true,
          "description": "Output only. A structured description of this CertificateAuthority's CA certificate and its issuers. Ordered as self-to-root.",
          "items": {
            "$ref": "CertificateDescription"
          },
          "type": "array"
        },
        "tier": {
          "enumDescriptions": [
            "Not specified.",
            "Enterprise tier.",
            "DevOps tier."
          ],
          "enum": [
            "TIER_UNSPECIFIED",
            "ENTERPRISE",
            "DEVOPS"
          ],
          "description": "Required. Immutable. The Tier of this CertificateAuthority.",
          "type": "string"
        },
        "issuingOptions": {
          "$ref": "IssuingOptions",
          "description": "Optional. The IssuingOptions to follow when issuing Certificates from this CertificateAuthority."
        },
        "updateTime": {
          "description": "Output only. The time at which this CertificateAuthority was updated.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "subordinateConfig": {
          "$ref": "SubordinateConfig",
          "description": "Optional. If this is a subordinate CertificateAuthority, this field will be set with the subordinate configuration, which describes its issuers. This may be updated, but this CertificateAuthority must continue to validate."
        },
        "certificatePolicy": {
          "description": "Optional. The CertificateAuthorityPolicy to enforce when issuing Certificates from this CertificateAuthority.",
          "$ref": "CertificateAuthorityPolicy"
        },
        "keySpec": {
          "$ref": "KeyVersionSpec",
          "description": "Required. Immutable. Used when issuing certificates for this CertificateAuthority. If this CertificateAuthority is a self-signed CertificateAuthority, this key is also used to sign the self-signed CA certificate. Otherwise, it is used to sign a CSR."
        },
        "lifetime": {
          "type": "string",
          "format": "google-duration",
          "description": "Required. The desired lifetime of the CA certificate. Used to create the \"not_before_time\" and \"not_after_time\" fields inside an X.509 certificate."
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time at which this CertificateAuthority was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "description": "Output only. The resource name for this CertificateAuthority in the format `projects/*/locations/*/certificateAuthorities/*`.",
          "readOnly": true,
          "type": "string"
        },
        "gcsBucket": {
          "type": "string",
          "description": "Immutable. The name of a Cloud Storage bucket where this CertificateAuthority will publish content, such as the CA certificate and CRLs. This must be a bucket name, without any prefixes (such as `gs://`) or suffixes (such as `.googleapis.com`). For example, to use a bucket named `my-bucket`, you would simply specify `my-bucket`. If not specified, a managed bucket will be created."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Labels with user-defined metadata.",
          "type": "object"
        },
        "pemCaCertificates": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. This CertificateAuthority's certificate chain, including the current CertificateAuthority's certificate. Ordered such that the root issuer is the final element (consistent with RFC 5246). For a self-signed CA, this will only list the current CertificateAuthority's certificate."
        },
        "accessUrls": {
          "description": "Output only. URLs for accessing content published by this CA, such as the CA certificate and CRLs.",
          "readOnly": true,
          "$ref": "AccessUrls"
        },
        "deleteTime": {
          "description": "Output only. The time at which this CertificateAuthority will be deleted, if scheduled for deletion.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "state": {
          "enumDescriptions": [
            "Not specified.",
            "Certificates can be issued from this CA. CRLs will be generated for this CA.",
            "Certificates cannot be issued from this CA. CRLs will still be generated.",
            "Certificates cannot be issued from this CA. CRLs will not be generated.",
            "Certificates cannot be issued from this CA. CRLs will not be generated."
          ],
          "description": "Output only. The State for this CertificateAuthority.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ENABLED",
            "DISABLED",
            "PENDING_ACTIVATION",
            "PENDING_DELETION"
          ],
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "description": "A CertificateAuthority represents an individual Certificate Authority. A CertificateAuthority can be used to create Certificates."
    },
    "IssuanceModes": {
      "type": "object",
      "properties": {
        "allowCsrBasedIssuance": {
          "type": "boolean",
          "description": "Required. When true, allows callers to create Certificates by specifying a CSR."
        },
        "allowConfigBasedIssuance": {
          "description": "Required. When true, allows callers to create Certificates by specifying a CertificateConfig.",
          "type": "boolean"
        }
      },
      "id": "IssuanceModes",
      "description": "IssuanceModes specifies the allowed ways in which Certificates may be requested from this CertificateAuthority."
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "requestedCancellation": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "statusMessage": {
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true
        },
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "apiVersion": {
          "readOnly": true,
          "description": "Output only. API version used to start the operation.",
          "type": "string"
        }
      },
      "description": "Represents the metadata of the long-running operation."
    },
    "CaOptions": {
      "type": "object",
      "description": "Describes values that are relevant in a CA certificate.",
      "id": "CaOptions",
      "properties": {
        "maxIssuerPathLength": {
          "format": "int32",
          "description": "Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate.",
          "type": "integer"
        },
        "isCa": {
          "description": "Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate.",
          "type": "boolean"
        }
      }
    },
    "ListCertificateRevocationListsResponse": {
      "id": "ListCertificateRevocationListsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve next page of results. Pass this value in ListCertificateRevocationListsRequest.next_page_token to retrieve the next page of results."
        },
        "certificateRevocationLists": {
          "items": {
            "$ref": "CertificateRevocationList"
          },
          "type": "array",
          "description": "The list of CertificateRevocationLists."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "A list of locations (e.g. \"us-west1\") that could not be reached.",
          "type": "array"
        }
      },
      "description": "Response message for CertificateAuthorityService.ListCertificateRevocationLists."
    },
    "TestIamPermissionsResponse": {
      "type": "object",
      "description": "Response message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsResponse"
    },
    "SubordinateConfig": {
      "description": "Describes a subordinate CA's issuers. This is either a resource path to a known issuing CertificateAuthority, or a PEM issuer certificate chain.",
      "id": "SubordinateConfig",
      "type": "object",
      "properties": {
        "pemIssuerChain": {
          "description": "Required. Contains the PEM certificate chain for the issuers of this CertificateAuthority, but not pem certificate for this CA itself.",
          "$ref": "SubordinateConfigChain"
        },
        "certificateAuthority": {
          "description": "Required. This can refer to a CertificateAuthority that was used to create a subordinate CertificateAuthority. This field is used for information and usability purposes only. The resource name is in the format `projects/*/locations/*/certificateAuthorities/*`.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "properties": {
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "items": {
            "$ref": "AuditLogConfig"
          },
          "type": "array"
        },
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        }
      },
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "id": "AuditConfig"
    },
    "ExtendedKeyUsageOptions": {
      "description": "KeyUsage.ExtendedKeyUsageOptions has fields that correspond to certain common OIDs that could be specified as an extended key usage value.",
      "properties": {
        "serverAuth": {
          "description": "Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS.",
          "type": "boolean"
        },
        "ocspSigning": {
          "description": "Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\".",
          "type": "boolean"
        },
        "clientAuth": {
          "type": "boolean",
          "description": "Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS."
        },
        "emailProtection": {
          "type": "boolean",
          "description": "Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\"."
        },
        "codeSigning": {
          "type": "boolean",
          "description": "Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\"."
        },
        "timeStamping": {
          "description": "Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\".",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "ExtendedKeyUsageOptions"
    },
    "ListOperationsResponse": {
      "properties": {
        "operations": {
          "type": "array",
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "type": "object",
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations."
    },
    "SubjectDescription": {
      "id": "SubjectDescription",
      "description": "These values describe fields in an issued X.509 certificate such as the distinguished name, subject alternative names, serial number, and lifetime.",
      "type": "object",
      "properties": {
        "subjectAltName": {
          "description": "The subject alternative name fields.",
          "$ref": "SubjectAltNames"
        },
        "commonName": {
          "type": "string",
          "description": "The \"common name\" of the distinguished name."
        },
        "subject": {
          "$ref": "Subject",
          "description": "Contains distinguished name fields such as the location and organization."
        },
        "lifetime": {
          "type": "string",
          "description": "For convenience, the actual lifetime of an issued certificate. Corresponds to 'not_after_time' - 'not_before_time'.",
          "format": "google-duration"
        },
        "notBeforeTime": {
          "format": "google-datetime",
          "description": "The time at which the certificate becomes valid.",
          "type": "string"
        },
        "notAfterTime": {
          "description": "The time at which the certificate expires.",
          "format": "google-datetime",
          "type": "string"
        },
        "hexSerialNumber": {
          "type": "string",
          "description": "The serial number encoded in lowercase hexadecimal."
        }
      }
    },
    "AuditLogConfig": {
      "type": "object",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "id": "AuditLogConfig",
      "properties": {
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "logType": {
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "description": "The log type that this config enables.",
          "type": "string"
        }
      }
    },
    "ListReusableConfigsResponse": {
      "id": "ListReusableConfigsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve next page of results. Pass this value in ListReusableConfigsRequest.next_page_token to retrieve the next page of results."
        },
        "unreachable": {
          "description": "A list of locations (e.g. \"us-west1\") that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "reusableConfigs": {
          "type": "array",
          "description": "The list of ReusableConfigs.",
          "items": {
            "$ref": "ReusableConfig"
          }
        }
      },
      "description": "Response message for CertificateAuthorityService.ListReusableConfigs.",
      "type": "object"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          }
        }
      },
      "id": "ListLocationsResponse",
      "type": "object"
    },
    "CertificateConfig": {
      "properties": {
        "reusableConfig": {
          "description": "Required. Describes how some of the technical fields in a certificate should be populated.",
          "$ref": "ReusableConfigWrapper"
        },
        "publicKey": {
          "description": "Optional. The public key that corresponds to this config. This is, for example, used when issuing Certificates, but not when creating a self-signed CertificateAuthority or CertificateAuthority CSR.",
          "$ref": "PublicKey"
        },
        "subjectConfig": {
          "description": "Required. Specifies some of the values in a certificate that are related to the subject.",
          "$ref": "SubjectConfig"
        }
      },
      "id": "CertificateConfig",
      "description": "A CertificateConfig describes an X.509 certificate or CSR that is to be created, as an alternative to using ASN.1.",
      "type": "object"
    },
    "PublicKey": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Optional. The type of public key. If specified, it must match the public key used for the`key` field.",
          "enumDescriptions": [
            "Default unspecified value.",
            "A PEM-encoded PKCS#1/RFC 3447 RSAPublicKey structure, or an RFC 5280 [SubjectPublicKeyInfo](https://tools.ietf.org/html/rfc5280#section-4.1) structure containing the former.",
            "An RFC 5280 [SubjectPublicKeyInfo](https://tools.ietf.org/html/rfc5280#section-4.1) structure containing a PEM-encoded compressed NIST P-256/secp256r1/prime256v1 or P-384 key."
          ],
          "enum": [
            "KEY_TYPE_UNSPECIFIED",
            "PEM_RSA_KEY",
            "PEM_EC_KEY"
          ]
        },
        "key": {
          "description": "Required. A public key. When this is specified in a request, the padding and encoding can be any of the options described by the respective 'KeyType' value. When this is generated by the service, it will always be an RFC 5280 [SubjectPublicKeyInfo](https://tools.ietf.org/html/rfc5280#section-4.1) structure containing an algorithm identifier and a key.",
          "type": "string",
          "format": "byte"
        }
      },
      "description": "A PublicKey describes a public key.",
      "id": "PublicKey"
    },
    "Policy": {
      "properties": {
        "etag": {
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string"
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "AuditConfig"
          },
          "type": "array"
        },
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array"
        },
        "version": {
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32"
        }
      },
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object",
      "id": "Policy"
    },
    "RevocationDetails": {
      "id": "RevocationDetails",
      "description": "Describes fields that are relavent to the revocation of a Certificate.",
      "properties": {
        "revocationTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which this Certificate was revoked."
        },
        "revocationState": {
          "enum": [
            "REVOCATION_REASON_UNSPECIFIED",
            "KEY_COMPROMISE",
            "CERTIFICATE_AUTHORITY_COMPROMISE",
            "AFFILIATION_CHANGED",
            "SUPERSEDED",
            "CESSATION_OF_OPERATION",
            "CERTIFICATE_HOLD",
            "PRIVILEGE_WITHDRAWN",
            "ATTRIBUTE_AUTHORITY_COMPROMISE"
          ],
          "type": "string",
          "description": "Indicates why a Certificate was revoked.",
          "enumDescriptions": [
            "Default unspecified value. This value does indicate that a Certificate has been revoked, but that a reason has not been recorded.",
            "Key material for this Certificate may have leaked.",
            "The key material for a certificate authority in the issuing path may have leaked.",
            "The subject or other attributes in this Certificate have changed.",
            "This Certificate has been superseded.",
            "This Certificate or entities in the issuing path have ceased to operate.",
            "This Certificate should not be considered valid, it is expected that it may become valid in the future.",
            "This Certificate no longer has permission to assert the listed attributes.",
            "The authority which determines appropriate attributes for a Certificate may have been compromised."
          ]
        }
      },
      "type": "object"
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}",
              "path": "v1beta1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "privateca.projects.locations.get",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "Resource name for the location.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "response": {
                "$ref": "Location"
              },
              "description": "Gets information about a location."
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "description": "Lists information about the supported locations for this service.",
              "path": "v1beta1/{+name}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "id": "privateca.projects.locations.list",
              "flatPath": "v1beta1/projects/{projectsId}/locations",
              "parameters": {
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "name": {
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                }
              },
              "parameterOrder": [
                "name"
              ]
            }
          },
          "resources": {
            "reusableConfigs": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Only include resources that match the filter in the response."
                    },
                    "pageToken": {
                      "description": "Optional. Pagination token, returned earlier via ListReusableConfigsResponse.next_page_token.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. Limit on the number of ReusableConfigs to include in the response. Further ReusableConfigs can subsequently be obtained by including the ListReusableConfigsResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default."
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Optional. Specify how the results should be sorted.",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. The resource name of the location associated with the ReusableConfigs, in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "privateca.projects.locations.reusableConfigs.list",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reusableConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListReusableConfigsResponse"
                  },
                  "description": "Lists ReusableConfigs.",
                  "path": "v1beta1/{+parent}/reusableConfigs"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Returns a ReusableConfig.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the ReusableConfigs to get.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reusableConfigs/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "ReusableConfig"
                  },
                  "id": "privateca.projects.locations.reusableConfigs.get",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reusableConfigs/{reusableConfigsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "path": "v1beta1/{+name}"
                },
                "setIamPolicy": {
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/reusableConfigs/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1beta1/{+resource}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "response": {
                    "$ref": "Policy"
                  },
                  "id": "privateca.projects.locations.reusableConfigs.setIamPolicy",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reusableConfigs/{reusableConfigsId}:setIamPolicy"
                },
                "getIamPolicy": {
                  "response": {
                    "$ref": "Policy"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reusableConfigs/{reusableConfigsId}:getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "id": "privateca.projects.locations.reusableConfigs.getIamPolicy",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer"
                    },
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/reusableConfigs/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field."
                    }
                  },
                  "path": "v1beta1/{+resource}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reusableConfigs/{reusableConfigsId}:testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "path": "v1beta1/{+resource}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reusableConfigs/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "id": "privateca.projects.locations.reusableConfigs.testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "certificateAuthorities": {
              "resources": {
                "certificateRevocationLists": {
                  "methods": {
                    "getIamPolicy": {
                      "path": "v1beta1/{+resource}:getIamPolicy",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Policy"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificateRevocationLists/{certificateRevocationListsId}:getIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "id": "privateca.projects.locations.certificateAuthorities.certificateRevocationLists.getIamPolicy",
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "type": "integer",
                          "location": "query",
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "format": "int32"
                        },
                        "resource": {
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+/certificateRevocationLists/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      }
                    },
                    "setIamPolicy": {
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificateRevocationLists/{certificateRevocationListsId}:setIamPolicy",
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "parameters": {
                        "resource": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+/certificateRevocationLists/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "privateca.projects.locations.certificateAuthorities.certificateRevocationLists.setIamPolicy",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "path": "v1beta1/{+resource}:setIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ]
                    },
                    "patch": {
                      "httpMethod": "PATCH",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificateRevocationLists/{certificateRevocationListsId}",
                      "id": "privateca.projects.locations.certificateAuthorities.certificateRevocationLists.patch",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "CertificateRevocationList"
                      },
                      "parameters": {
                        "updateMask": {
                          "location": "query",
                          "format": "google-fieldmask",
                          "description": "Required. A list of fields to be updated in this request.",
                          "type": "string"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        },
                        "name": {
                          "required": true,
                          "type": "string",
                          "description": "Output only. The resource path for this CertificateRevocationList in the format `projects/*/locations/*/certificateAuthorities/*/ certificateRevocationLists/*`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+/certificateRevocationLists/[^/]+$",
                          "location": "path"
                        }
                      },
                      "path": "v1beta1/{+name}",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Update a CertificateRevocationList."
                    },
                    "list": {
                      "path": "v1beta1/{+parent}/certificateRevocationLists",
                      "id": "privateca.projects.locations.certificateAuthorities.certificateRevocationLists.list",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificateRevocationLists",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists CertificateRevocationLists.",
                      "parameters": {
                        "orderBy": {
                          "description": "Optional. Specify how the results should be sorted.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "description": "Required. The resource name of the location associated with the CertificateRevocationLists, in the format `projects/*/locations/*/certificateauthorities/*`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        },
                        "filter": {
                          "description": "Optional. Only include resources that match the filter in the response.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "Optional. Limit on the number of CertificateRevocationLists to include in the response. Further CertificateRevocationLists can subsequently be obtained by including the ListCertificateRevocationListsResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default."
                        },
                        "pageToken": {
                          "description": "Optional. Pagination token, returned earlier via ListCertificateRevocationListsResponse.next_page_token.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListCertificateRevocationListsResponse"
                      }
                    },
                    "testIamPermissions": {
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+/certificateRevocationLists/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                          "location": "path"
                        }
                      },
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "parameterOrder": [
                        "resource"
                      ],
                      "id": "privateca.projects.locations.certificateAuthorities.certificateRevocationLists.testIamPermissions",
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificateRevocationLists/{certificateRevocationListsId}:testIamPermissions",
                      "path": "v1beta1/{+resource}:testIamPermissions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificateRevocationLists/{certificateRevocationListsId}",
                      "description": "Returns a CertificateRevocationList.",
                      "response": {
                        "$ref": "CertificateRevocationList"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+/certificateRevocationLists/[^/]+$",
                          "description": "Required. The name of the CertificateRevocationList to get.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "id": "privateca.projects.locations.certificateAuthorities.certificateRevocationLists.get"
                    }
                  }
                },
                "certificates": {
                  "methods": {
                    "revoke": {
                      "httpMethod": "POST",
                      "path": "v1beta1/{+name}:revoke",
                      "response": {
                        "$ref": "Certificate"
                      },
                      "id": "privateca.projects.locations.certificateAuthorities.certificates.revoke",
                      "description": "Revoke a Certificate.",
                      "request": {
                        "$ref": "RevokeCertificateRequest"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificates/{certificatesId}:revoke",
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name for this Certificate in the format `projects/*/locations/*/certificateAuthorities/*/certificates/*`.",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+/certificates/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "create": {
                      "description": "Create a new Certificate in a given Project, Location from a particular CertificateAuthority.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificates",
                      "parameters": {
                        "certificateId": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. It must be unique within a location and match the regular expression `[a-zA-Z0-9_-]{1,63}`. This field is required when using a CertificateAuthority in the Enterprise CertificateAuthority.Tier, but is optional and its value is ignored otherwise."
                        },
                        "requestId": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. The resource name of the location and CertificateAuthority associated with the Certificate, in the format `projects/*/locations/*/certificateAuthorities/*`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "Certificate"
                      },
                      "path": "v1beta1/{+parent}/certificates",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "Certificate"
                      },
                      "id": "privateca.projects.locations.certificateAuthorities.certificates.create"
                    },
                    "patch": {
                      "request": {
                        "$ref": "Certificate"
                      },
                      "httpMethod": "PATCH",
                      "id": "privateca.projects.locations.certificateAuthorities.certificates.patch",
                      "path": "v1beta1/{+name}",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+/certificates/[^/]+$",
                          "required": true,
                          "description": "Output only. The resource path for this Certificate in the format `projects/*/locations/*/certificateAuthorities/*/certificates/*`.",
                          "type": "string"
                        },
                        "updateMask": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. A list of fields to be updated in this request.",
                          "format": "google-fieldmask"
                        },
                        "requestId": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        }
                      },
                      "description": "Update a Certificate. Currently, the only field you can update is the labels field.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Certificate"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificates/{certificatesId}"
                    },
                    "list": {
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListCertificatesResponse"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificates",
                      "path": "v1beta1/{+parent}/certificates",
                      "description": "Lists Certificates.",
                      "id": "privateca.projects.locations.certificateAuthorities.certificates.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "Required. The resource name of the location associated with the Certificates, in the format `projects/*/locations/*/certificateauthorities/*`.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                          "location": "path"
                        },
                        "orderBy": {
                          "description": "Optional. Specify how the results should be sorted. For details on supported fields and syntax, see [Certificates Sorting documentation](https://cloud.google.com/certificate-authority-service/docs/sorting-filtering-certificates#sorting_support).",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "description": "Optional. Limit on the number of Certificates to include in the response. Further Certificates can subsequently be obtained by including the ListCertificatesResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default.",
                          "format": "int32"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Optional. Pagination token, returned earlier via ListCertificatesResponse.next_page_token.",
                          "type": "string"
                        },
                        "filter": {
                          "type": "string",
                          "description": "Optional. Only include resources that match the filter in the response. For details on supported filters and syntax, see [Certificates Filtering documentation](https://cloud.google.com/certificate-authority-service/docs/sorting-filtering-certificates#filtering_support).",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The name of the Certificate to get.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+/certificates/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "path": "v1beta1/{+name}",
                      "httpMethod": "GET",
                      "id": "privateca.projects.locations.certificateAuthorities.certificates.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Certificate"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificates/{certificatesId}",
                      "description": "Returns a Certificate."
                    }
                  }
                }
              },
              "methods": {
                "activate": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "description": "Required. The resource name for this CertificateAuthority in the format `projects/*/locations/*/certificateAuthorities/*`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+name}:activate",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}:activate",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ActivateCertificateAuthorityRequest"
                  },
                  "id": "privateca.projects.locations.certificateAuthorities.activate",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Activate a CertificateAuthority that is in state PENDING_ACTIVATION and is of type SUBORDINATE. After the parent Certificate Authority signs a certificate signing request from FetchCertificateAuthorityCsr, this method can complete the activation process.",
                  "httpMethod": "POST"
                },
                "create": {
                  "description": "Create a new CertificateAuthority in a given Project and Location.",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "CertificateAuthority"
                  },
                  "path": "v1beta1/{+parent}/certificateAuthorities",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "privateca.projects.locations.certificateAuthorities.create",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the location associated with the CertificateAuthorities, in the format `projects/*/locations/*`.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "certificateAuthorityId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. It must be unique within a location and match the regular expression `[a-zA-Z0-9_-]{1,63}`"
                    }
                  }
                },
                "restore": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "privateca.projects.locations.certificateAuthorities.restore",
                  "description": "Restore a CertificateAuthority that is scheduled for deletion.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "RestoreCertificateAuthorityRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}:restore",
                  "path": "v1beta1/{+name}:restore",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "type": "string",
                      "description": "Required. The resource name for this CertificateAuthority in the format `projects/*/locations/*/certificateAuthorities/*`.",
                      "required": true
                    }
                  }
                },
                "setIamPolicy": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Policy"
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+resource}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "privateca.projects.locations.certificateAuthorities.setIamPolicy",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "scheduleDelete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}:scheduleDelete",
                  "id": "privateca.projects.locations.certificateAuthorities.scheduleDelete",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The resource name for this CertificateAuthority in the format `projects/*/locations/*/certificateAuthorities/*`.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+name}:scheduleDelete",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ScheduleDeleteCertificateAuthorityRequest"
                  },
                  "description": "Schedule a CertificateAuthority for deletion.",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "path": "v1beta1/{+parent}/certificateAuthorities",
                  "description": "Lists CertificateAuthorities.",
                  "parameters": {
                    "orderBy": {
                      "type": "string",
                      "description": "Optional. Specify how the results should be sorted.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The resource name of the location associated with the CertificateAuthorities, in the format `projects/*/locations/*`."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Optional. Pagination token, returned earlier via ListCertificateAuthoritiesResponse.next_page_token.",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. Only include resources that match the filter in the response.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. Limit on the number of CertificateAuthorities to include in the response. Further CertificateAuthorities can subsequently be obtained by including the ListCertificateAuthoritiesResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListCertificateAuthoritiesResponse"
                  },
                  "id": "privateca.projects.locations.certificateAuthorities.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities",
                  "httpMethod": "GET"
                },
                "testIamPermissions": {
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "path": "v1beta1/{+resource}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "privateca.projects.locations.certificateAuthorities.testIamPermissions",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                },
                "patch": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CertificateAuthority"
                  },
                  "description": "Update a CertificateAuthority.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "privateca.projects.locations.certificateAuthorities.patch",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "required": true,
                      "description": "Output only. The resource name for this CertificateAuthority in the format `projects/*/locations/*/certificateAuthorities/*`.",
                      "type": "string"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Required. A list of fields to be updated in this request.",
                      "type": "string",
                      "location": "query"
                    },
                    "requestId": {
                      "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "path": "v1beta1/{+name}"
                },
                "disable": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Disable a CertificateAuthority.",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The resource name for this CertificateAuthority in the format `projects/*/locations/*/certificateAuthorities/*`."
                    }
                  },
                  "request": {
                    "$ref": "DisableCertificateAuthorityRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "privateca.projects.locations.certificateAuthorities.disable",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}:disable",
                  "path": "v1beta1/{+name}:disable",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "description": "Returns a CertificateAuthority.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}",
                  "httpMethod": "GET",
                  "id": "privateca.projects.locations.certificateAuthorities.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the CertificateAuthority to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "CertificateAuthority"
                  },
                  "path": "v1beta1/{+name}"
                },
                "fetch": {
                  "response": {
                    "$ref": "FetchCertificateAuthorityCsrResponse"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}:fetch",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name for this CertificateAuthority in the format `projects/*/locations/*/certificateAuthorities/*`.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$"
                    }
                  },
                  "description": "Fetch a certificate signing request (CSR) from a CertificateAuthority that is in state PENDING_ACTIVATION and is of type SUBORDINATE. The CSR must then be signed by the desired parent Certificate Authority, which could be another CertificateAuthority resource, or could be an on-prem certificate authority. See also ActivateCertificateAuthority.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "privateca.projects.locations.certificateAuthorities.fetch",
                  "path": "v1beta1/{+name}:fetch"
                },
                "enable": {
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name for this CertificateAuthority in the format `projects/*/locations/*/certificateAuthorities/*`.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}:enable",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "EnableCertificateAuthorityRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Enable a CertificateAuthority.",
                  "id": "privateca.projects.locations.certificateAuthorities.enable",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1beta1/{+name}:enable"
                },
                "getIamPolicy": {
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field."
                    },
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "format": "int32"
                    }
                  },
                  "id": "privateca.projects.locations.certificateAuthorities.getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "path": "v1beta1/{+resource}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "path": "v1beta1/{+name}:cancel",
                  "id": "privateca.projects.locations.operations.cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel"
                },
                "get": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "id": "privateca.projects.locations.operations.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "path": "v1beta1/{+name}"
                },
                "delete": {
                  "id": "privateca.projects.locations.operations.delete",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta1/{+name}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "id": "privateca.projects.locations.operations.list",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the operation's parent resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "path": "v1beta1/{+name}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations"
                }
              }
            }
          }
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "mtlsRootUrl": "https://privateca.mtls.googleapis.com/",
  "canonicalName": "Certificate Authority Service",
  "documentationLink": "https://cloud.google.com/",
  "servicePath": "",
  "basePath": "",
  "batchPath": "batch",
  "parameters": {
    "alt": {
      "location": "query",
      "default": "json",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    }
  },
  "description": "The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. ",
  "discoveryVersion": "v1",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "version": "v1beta1",
  "title": "Certificate Authority API",
  "protocol": "rest",
  "revision": "20211103",
  "fullyEncodeReservedExpansion": true,
  "version_module": true,
  "rootUrl": "https://privateca.googleapis.com/",
  "id": "privateca:v1beta1",
  "ownerDomain": "google.com",
  "name": "privateca"
}

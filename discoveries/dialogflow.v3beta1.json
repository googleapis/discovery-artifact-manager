{
  "canonicalName": "Dialogflow",
  "rootUrl": "https://dialogflow.googleapis.com/",
  "id": "dialogflow:v3beta1",
  "version": "v3beta1",
  "revision": "20220824",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "id": "dialogflow.projects.locations.list",
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "response": {
                "$ref": "GoogleCloudLocationListLocationsResponse"
              },
              "path": "v3beta1/{+name}/locations",
              "flatPath": "v3beta1/projects/{projectsId}/locations",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "type": "integer"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              }
            },
            "get": {
              "response": {
                "$ref": "GoogleCloudLocationLocation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Resource name for the location."
                }
              },
              "description": "Gets information about a location.",
              "id": "dialogflow.projects.locations.get",
              "path": "v3beta1/{+name}",
              "httpMethod": "GET"
            }
          },
          "resources": {
            "securitySettings": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3beta1ListSecuritySettingsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "description": "Returns the list of all security settings in the specified location.",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "The next_page_token value returned from a previous list request.",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. The location to list all security settings for. Format: `projects//locations/`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of items to return in a single page. By default 20 and at most 100.",
                      "location": "query"
                    }
                  },
                  "path": "v3beta1/{+parent}/securitySettings",
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/securitySettings",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "dialogflow.projects.locations.securitySettings.list"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "DELETE",
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/securitySettings/{securitySettingsId}",
                  "id": "dialogflow.projects.locations.securitySettings.delete",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "description": "Deletes the specified SecuritySettings.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v3beta1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the SecuritySettings to delete. Format: `projects//locations//securitySettings/`.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/securitySettings/[^/]+$"
                    }
                  }
                },
                "create": {
                  "path": "v3beta1/{+parent}/securitySettings",
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/securitySettings",
                  "httpMethod": "POST",
                  "description": "Create security settings in the specified location.",
                  "request": {
                    "$ref": "GoogleCloudDialogflowCxV3beta1SecuritySettings"
                  },
                  "id": "dialogflow.projects.locations.securitySettings.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The location to create an SecuritySettings for. Format: `projects//locations/`."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3beta1SecuritySettings"
                  }
                },
                "get": {
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/securitySettings/{securitySettingsId}",
                  "httpMethod": "GET",
                  "id": "dialogflow.projects.locations.securitySettings.get",
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3beta1SecuritySettings"
                  },
                  "path": "v3beta1/{+name}",
                  "description": "Retrieves the specified SecuritySettings. The returned settings may be stale by up to 1 minute.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/securitySettings/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Resource name of the settings. Format: `projects//locations//securitySettings/`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "path": "v3beta1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudDialogflowCxV3beta1SecuritySettings"
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3beta1SecuritySettings"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/securitySettings/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Resource name of the settings. Required for the SecuritySettingsService.UpdateSecuritySettings method. SecuritySettingsService.CreateSecuritySettings populates the name automatically. Format: `projects//locations//securitySettings/`.",
                      "location": "path"
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Required. The mask to control which fields get updated. If the mask is not present, all fields will be updated."
                    }
                  },
                  "httpMethod": "PATCH",
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/securitySettings/{securitySettingsId}",
                  "description": "Updates the specified SecuritySettings.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "dialogflow.projects.locations.securitySettings.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                }
              }
            },
            "agents": {
              "methods": {
                "validate": {
                  "id": "dialogflow.projects.locations.agents.validate",
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}:validate",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                      "description": "Required. The agent to validate. Format: `projects//locations//agents/`.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v3beta1/{+name}:validate",
                  "description": "Validates the specified agent and creates or updates validation results. The agent in draft version is validated. Please call this API after the training is completed to get the complete validation results.",
                  "request": {
                    "$ref": "GoogleCloudDialogflowCxV3beta1ValidateAgentRequest"
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3beta1AgentValidationResult"
                  }
                },
                "getValidationResult": {
                  "description": "Gets the latest agent validation result. Agent validation is performed when ValidateAgent is called.",
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3beta1AgentValidationResult"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v3beta1/{+name}",
                  "parameters": {
                    "languageCode": {
                      "type": "string",
                      "description": "If not specified, the agent's default language is used.",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/validationResult$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The agent name. Format: `projects//locations//agents//validationResult`.",
                      "type": "string"
                    }
                  },
                  "id": "dialogflow.projects.locations.agents.getValidationResult",
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/validationResult"
                },
                "delete": {
                  "id": "dialogflow.projects.locations.agents.delete",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the agent to delete. Format: `projects//locations//agents/`.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v3beta1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}",
                  "description": "Deletes the specified agent."
                },
                "get": {
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3beta1Agent"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the agent. Format: `projects//locations//agents/`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                      "location": "path"
                    }
                  },
                  "id": "dialogflow.projects.locations.agents.get",
                  "path": "v3beta1/{+name}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "description": "Retrieves the specified agent.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}"
                },
                "list": {
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3beta1ListAgentsResponse"
                  },
                  "description": "Returns the list of all agents in the specified location.",
                  "path": "v3beta1/{+parent}/agents",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The location to list all agents for. Format: `projects//locations/`."
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of items to return in a single page. By default 100 and at most 1000."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The next_page_token value returned from a previous list request."
                    }
                  },
                  "id": "dialogflow.projects.locations.agents.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents"
                },
                "create": {
                  "description": "Creates an agent in the specified location. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The location to create a agent for. Format: `projects//locations/`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3beta1Agent"
                  },
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "dialogflow.projects.locations.agents.create",
                  "path": "v3beta1/{+parent}/agents",
                  "request": {
                    "$ref": "GoogleCloudDialogflowCxV3beta1Agent"
                  }
                },
                "export": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "dialogflow.projects.locations.agents.export",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the agent to export. Format: `projects//locations//agents/`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}:export",
                  "path": "v3beta1/{+name}:export",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudDialogflowCxV3beta1ExportAgentRequest"
                  },
                  "description": "Exports the specified agent to a binary file. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: ExportAgentResponse"
                },
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "description": "The mask to control which fields get updated. If the mask is not present, all fields will be updated.",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                      "location": "path",
                      "description": "The unique identifier of the agent. Required for the Agents.UpdateAgent method. Agents.CreateAgent populates the name automatically. Format: `projects//locations//agents/`.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}",
                  "description": "Updates the specified agent. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.locations.agents.patch",
                  "httpMethod": "PATCH",
                  "path": "v3beta1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudDialogflowCxV3beta1Agent"
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3beta1Agent"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "restore": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the agent to restore into. Format: `projects//locations//agents/`.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Restores the specified agent from a binary file. Replaces the current agent with a new one. Note that all existing resources in agent (e.g. intents, entity types, flows) will be removed. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.locations.agents.restore",
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}:restore",
                  "path": "v3beta1/{+name}:restore",
                  "request": {
                    "$ref": "GoogleCloudDialogflowCxV3beta1RestoreAgentRequest"
                  }
                }
              },
              "resources": {
                "sessions": {
                  "methods": {
                    "fulfillIntent": {
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}:fulfillIntent",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1FulfillIntentResponse"
                      },
                      "path": "v3beta1/{+session}:fulfillIntent",
                      "description": "Fulfills a matched intent returned by MatchIntent. Must be called after MatchIntent, with input from MatchIntentResponse. Otherwise, the behavior is undefined.",
                      "parameterOrder": [
                        "session"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "session": {
                          "description": "Required. The name of the session this query is sent to. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length of the `Session ID` must not exceed 36 characters. For more information, see the [sessions guide](https://cloud.google.com/dialogflow/cx/docs/concept/session).",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/sessions/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "id": "dialogflow.projects.locations.agents.sessions.fulfillIntent",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1FulfillIntentRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    },
                    "matchIntent": {
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}:matchIntent",
                      "parameters": {
                        "session": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/sessions/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the session this query is sent to. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length of the `Session ID` must not exceed 36 characters. For more information, see the [sessions guide](https://cloud.google.com/dialogflow/cx/docs/concept/session)."
                        }
                      },
                      "parameterOrder": [
                        "session"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Returns preliminary intent match results, doesn't change the session status.",
                      "path": "v3beta1/{+session}:matchIntent",
                      "id": "dialogflow.projects.locations.agents.sessions.matchIntent",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1MatchIntentResponse"
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1MatchIntentRequest"
                      }
                    },
                    "detectIntent": {
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1DetectIntentResponse"
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1DetectIntentRequest"
                      },
                      "parameterOrder": [
                        "session"
                      ],
                      "id": "dialogflow.projects.locations.agents.sessions.detectIntent",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}:detectIntent",
                      "parameters": {
                        "session": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/sessions/[^/]+$",
                          "required": true,
                          "description": "Required. The name of the session this query is sent to. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length of the `Session ID` must not exceed 36 characters. For more information, see the [sessions guide](https://cloud.google.com/dialogflow/cx/docs/concept/session). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/cx/docs/concept/version)."
                        }
                      },
                      "path": "v3beta1/{+session}:detectIntent",
                      "description": "Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause session entity types to be updated, which in turn might affect results of future queries. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/cx/docs/concept/version)."
                    }
                  },
                  "resources": {
                    "entityTypes": {
                      "methods": {
                        "get": {
                          "description": "Retrieves the specified session entity type.",
                          "path": "v3beta1/{+name}",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1SessionEntityType"
                          },
                          "httpMethod": "GET",
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "name": {
                              "required": true,
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                              "type": "string",
                              "description": "Required. The name of the session entity type. Format: `projects//locations//agents//sessions//entityTypes/` or `projects//locations//agents//environments//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment."
                            }
                          },
                          "id": "dialogflow.projects.locations.agents.sessions.entityTypes.get"
                        },
                        "delete": {
                          "parameters": {
                            "name": {
                              "location": "path",
                              "type": "string",
                              "description": "Required. The name of the session entity type to delete. Format: `projects//locations//agents//sessions//entityTypes/` or `projects//locations//agents//environments//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                              "required": true
                            }
                          },
                          "path": "v3beta1/{+name}",
                          "description": "Deletes the specified session entity type.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "httpMethod": "DELETE",
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "dialogflow.projects.locations.agents.sessions.entityTypes.delete",
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}/entityTypes/{entityTypesId}"
                        },
                        "create": {
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}/entityTypes",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1SessionEntityType"
                          },
                          "httpMethod": "POST",
                          "path": "v3beta1/{+parent}/entityTypes",
                          "description": "Creates a session entity type.",
                          "id": "dialogflow.projects.locations.agents.sessions.entityTypes.create",
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1SessionEntityType"
                          },
                          "parameters": {
                            "parent": {
                              "description": "Required. The session to create a session entity type for. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/sessions/[^/]+$",
                              "required": true,
                              "location": "path",
                              "type": "string"
                            }
                          }
                        },
                        "patch": {
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "PATCH",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                          "path": "v3beta1/{+name}",
                          "id": "dialogflow.projects.locations.agents.sessions.entityTypes.patch",
                          "description": "Updates the specified session entity type.",
                          "parameters": {
                            "updateMask": {
                              "format": "google-fieldmask",
                              "description": "The mask to control which fields get updated.",
                              "type": "string",
                              "location": "query"
                            },
                            "name": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                              "description": "Required. The unique identifier of the session entity type. Format: `projects//locations//agents//sessions//entityTypes/` or `projects//locations//agents//environments//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment.",
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1SessionEntityType"
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1SessionEntityType"
                          }
                        },
                        "list": {
                          "parameters": {
                            "pageToken": {
                              "type": "string",
                              "description": "The next_page_token value returned from a previous list request.",
                              "location": "query"
                            },
                            "parent": {
                              "description": "Required. The session to list all session entity types from. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment.",
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/sessions/[^/]+$",
                              "location": "path"
                            },
                            "pageSize": {
                              "location": "query",
                              "format": "int32",
                              "type": "integer",
                              "description": "The maximum number of items to return in a single page. By default 100 and at most 1000."
                            }
                          },
                          "httpMethod": "GET",
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}/entityTypes",
                          "id": "dialogflow.projects.locations.agents.sessions.entityTypes.list",
                          "description": "Returns the list of all session entity types in the specified session.",
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1ListSessionEntityTypesResponse"
                          },
                          "path": "v3beta1/{+parent}/entityTypes"
                        }
                      }
                    }
                  }
                },
                "entityTypes": {
                  "methods": {
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PATCH",
                      "id": "dialogflow.projects.locations.agents.entityTypes.patch",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1EntityType"
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1EntityType"
                      },
                      "parameters": {
                        "updateMask": {
                          "type": "string",
                          "description": "The mask to control which fields get updated.",
                          "location": "query",
                          "format": "google-fieldmask"
                        },
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/entityTypes/[^/]+$",
                          "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.",
                          "required": true,
                          "location": "path"
                        },
                        "languageCode": {
                          "description": "The language of the following fields in `entity_type`: * `EntityType.entities.value` * `EntityType.entities.synonyms` * `EntityType.excluded_phrases.value` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/entityTypes/{entityTypesId}",
                      "path": "v3beta1/{+name}",
                      "description": "Updates the specified entity type. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training)."
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Deletes the specified entity type. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).",
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the entity type to delete. Format: `projects//locations//agents//entityTypes/`.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/entityTypes/[^/]+$"
                        },
                        "force": {
                          "location": "query",
                          "description": "This field has no effect for entity type not being used. For entity types that are used by intents or pages: * If `force` is set to false, an error will be returned with message indicating the referencing resources. * If `force` is set to true, Dialogflow will remove the entity type, as well as any references to the entity type (i.e. Page parameter of the entity type will be changed to '@sys.any' and intent parameter of the entity type will be removed).",
                          "type": "boolean"
                        }
                      },
                      "path": "v3beta1/{+name}",
                      "id": "dialogflow.projects.locations.agents.entityTypes.delete",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/entityTypes/{entityTypesId}",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "httpMethod": "DELETE"
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dialogflow.projects.locations.agents.entityTypes.list",
                      "httpMethod": "GET",
                      "description": "Returns the list of all entity types in the specified agent.",
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/entityTypes",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1ListEntityTypesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "languageCode": {
                          "type": "string",
                          "description": "The language to list entity types for. The following fields are language dependent: * `EntityType.entities.value` * `EntityType.entities.synonyms` * `EntityType.excluded_phrases.value` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "The next_page_token value returned from a previous list request.",
                          "type": "string"
                        },
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. The agent to list all entity types for. Format: `projects//locations//agents/`."
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "The maximum number of items to return in a single page. By default 100 and at most 1000."
                        }
                      },
                      "path": "v3beta1/{+parent}/entityTypes"
                    },
                    "get": {
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/entityTypes/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the entity type. Format: `projects//locations//agents//entityTypes/`."
                        },
                        "languageCode": {
                          "type": "string",
                          "location": "query",
                          "description": "The language to retrieve the entity type for. The following fields are language dependent: * `EntityType.entities.value` * `EntityType.entities.synonyms` * `EntityType.excluded_phrases.value` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
                        }
                      },
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/entityTypes/{entityTypesId}",
                      "id": "dialogflow.projects.locations.agents.entityTypes.get",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1EntityType"
                      },
                      "description": "Retrieves the specified entity type.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v3beta1/{+name}",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "create": {
                      "path": "v3beta1/{+parent}/entityTypes",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Creates an entity type in the specified agent.",
                      "httpMethod": "POST",
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/entityTypes",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dialogflow.projects.locations.agents.entityTypes.create",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1EntityType"
                      },
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "description": "Required. The agent to create a entity type for. Format: `projects//locations//agents/`.",
                          "location": "path",
                          "type": "string",
                          "required": true
                        },
                        "languageCode": {
                          "description": "The language of the following fields in `entity_type`: * `EntityType.entities.value` * `EntityType.entities.synonyms` * `EntityType.excluded_phrases.value` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1EntityType"
                      }
                    }
                  }
                },
                "flows": {
                  "resources": {
                    "pages": {
                      "methods": {
                        "list": {
                          "path": "v3beta1/{+parent}/pages",
                          "parameterOrder": [
                            "parent"
                          ],
                          "description": "Returns the list of all pages in the specified flow.",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1ListPagesResponse"
                          },
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameters": {
                            "languageCode": {
                              "type": "string",
                              "description": "The language to list pages for. The following fields are language dependent: * `Page.entry_fulfillment.messages` * `Page.entry_fulfillment.conditional_cases` * `Page.event_handlers.trigger_fulfillment.messages` * `Page.event_handlers.trigger_fulfillment.conditional_cases` * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages` * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases` * `Page.form.parameters.fill_behavior.reprompt_event_handlers.messages` * `Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases` * `Page.transition_routes.trigger_fulfillment.messages` * `Page.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                              "location": "query"
                            },
                            "parent": {
                              "required": true,
                              "type": "string",
                              "description": "Required. The flow to list all pages for. Format: `projects//locations//agents//flows/`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$",
                              "location": "path"
                            },
                            "pageToken": {
                              "description": "The next_page_token value returned from a previous list request.",
                              "type": "string",
                              "location": "query"
                            },
                            "pageSize": {
                              "location": "query",
                              "type": "integer",
                              "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                              "format": "int32"
                            }
                          },
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/pages",
                          "id": "dialogflow.projects.locations.agents.flows.pages.list"
                        },
                        "delete": {
                          "parameters": {
                            "force": {
                              "description": "This field has no effect for pages with no incoming transitions. For pages with incoming transitions: * If `force` is set to false, an error will be returned with message indicating the incoming transitions. * If `force` is set to true, Dialogflow will remove the page, as well as any transitions to the page (i.e. Target page in event handlers or Target page in transition routes that point to this page will be cleared).",
                              "type": "boolean",
                              "location": "query"
                            },
                            "name": {
                              "description": "Required. The name of the page to delete. Format: `projects//locations//agents//Flows//pages/`.",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/pages/[^/]+$",
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "id": "dialogflow.projects.locations.agents.flows.pages.delete",
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Deletes the specified page.",
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/pages/{pagesId}",
                          "httpMethod": "DELETE",
                          "path": "v3beta1/{+name}"
                        },
                        "get": {
                          "path": "v3beta1/{+name}",
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "GET",
                          "parameters": {
                            "languageCode": {
                              "location": "query",
                              "type": "string",
                              "description": "The language to retrieve the page for. The following fields are language dependent: * `Page.entry_fulfillment.messages` * `Page.entry_fulfillment.conditional_cases` * `Page.event_handlers.trigger_fulfillment.messages` * `Page.event_handlers.trigger_fulfillment.conditional_cases` * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages` * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases` * `Page.form.parameters.fill_behavior.reprompt_event_handlers.messages` * `Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases` * `Page.transition_routes.trigger_fulfillment.messages` * `Page.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
                            },
                            "name": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/pages/[^/]+$",
                              "location": "path",
                              "required": true,
                              "description": "Required. The name of the page. Format: `projects//locations//agents//flows//pages/`."
                            }
                          },
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/pages/{pagesId}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "id": "dialogflow.projects.locations.agents.flows.pages.get",
                          "description": "Retrieves the specified page.",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1Page"
                          }
                        },
                        "patch": {
                          "description": "Updates the specified page.",
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1Page"
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1Page"
                          },
                          "id": "dialogflow.projects.locations.agents.flows.pages.patch",
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/pages/{pagesId}",
                          "httpMethod": "PATCH",
                          "parameters": {
                            "updateMask": {
                              "format": "google-fieldmask",
                              "description": "The mask to control which fields get updated. If the mask is not present, all fields will be updated.",
                              "location": "query",
                              "type": "string"
                            },
                            "languageCode": {
                              "description": "The language of the following fields in `page`: * `Page.entry_fulfillment.messages` * `Page.entry_fulfillment.conditional_cases` * `Page.event_handlers.trigger_fulfillment.messages` * `Page.event_handlers.trigger_fulfillment.conditional_cases` * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages` * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases` * `Page.form.parameters.fill_behavior.reprompt_event_handlers.messages` * `Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases` * `Page.transition_routes.trigger_fulfillment.messages` * `Page.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                              "location": "query",
                              "type": "string"
                            },
                            "name": {
                              "location": "path",
                              "description": "The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/pages/[^/]+$",
                              "type": "string",
                              "required": true
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "path": "v3beta1/{+name}"
                        },
                        "create": {
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1Page"
                          },
                          "description": "Creates a page in the specified flow.",
                          "id": "dialogflow.projects.locations.agents.flows.pages.create",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1Page"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "path": "v3beta1/{+parent}/pages",
                          "parameters": {
                            "parent": {
                              "description": "Required. The flow to create a page for. Format: `projects//locations//agents//flows/`.",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$",
                              "type": "string",
                              "location": "path"
                            },
                            "languageCode": {
                              "description": "The language of the following fields in `page`: * `Page.entry_fulfillment.messages` * `Page.entry_fulfillment.conditional_cases` * `Page.event_handlers.trigger_fulfillment.messages` * `Page.event_handlers.trigger_fulfillment.conditional_cases` * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages` * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases` * `Page.form.parameters.fill_behavior.reprompt_event_handlers.messages` * `Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases` * `Page.transition_routes.trigger_fulfillment.messages` * `Page.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/pages",
                          "httpMethod": "POST"
                        }
                      }
                    },
                    "versions": {
                      "methods": {
                        "list": {
                          "path": "v3beta1/{+parent}/versions",
                          "description": "Returns the list of all versions in the specified Flow.",
                          "parameters": {
                            "pageToken": {
                              "description": "The next_page_token value returned from a previous list request.",
                              "type": "string",
                              "location": "query"
                            },
                            "parent": {
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "description": "Required. The Flow to list all versions for. Format: `projects//locations//agents//flows/`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$"
                            },
                            "pageSize": {
                              "type": "integer",
                              "location": "query",
                              "format": "int32",
                              "description": "The maximum number of items to return in a single page. By default 20 and at most 100."
                            }
                          },
                          "id": "dialogflow.projects.locations.agents.flows.versions.list",
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/versions",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1ListVersionsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "GET"
                        },
                        "delete": {
                          "description": "Deletes the specified Version.",
                          "id": "dialogflow.projects.locations.agents.flows.versions.delete",
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v3beta1/{+name}",
                          "parameters": {
                            "name": {
                              "required": true,
                              "description": "Required. The name of the Version to delete. Format: `projects//locations//agents//flows//versions/`.",
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/versions/[^/]+$"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/versions/{versionsId}",
                          "httpMethod": "DELETE"
                        },
                        "create": {
                          "path": "v3beta1/{+parent}/versions",
                          "parameters": {
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$",
                              "description": "Required. The Flow to create an Version for. Format: `projects//locations//agents//flows/`.",
                              "required": true,
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "description": "Creates a Version in the specified Flow. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: CreateVersionOperationMetadata - `response`: Version",
                          "httpMethod": "POST",
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/versions",
                          "parameterOrder": [
                            "parent"
                          ],
                          "id": "dialogflow.projects.locations.agents.flows.versions.create",
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1Version"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          }
                        },
                        "compareVersions": {
                          "id": "dialogflow.projects.locations.agents.flows.versions.compareVersions",
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "baseVersion"
                          ],
                          "path": "v3beta1/{+baseVersion}:compareVersions",
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1CompareVersionsRequest"
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1CompareVersionsResponse"
                          },
                          "description": "Compares the specified base version with target version.",
                          "parameters": {
                            "baseVersion": {
                              "required": true,
                              "type": "string",
                              "description": "Required. Name of the base flow version to compare with the target version. Use version ID `0` to indicate the draft version of the specified flow. Format: `projects//locations//agents/ /flows//versions/`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/versions/[^/]+$",
                              "location": "path"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/versions/{versionsId}:compareVersions"
                        },
                        "load": {
                          "parameters": {
                            "name": {
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/versions/[^/]+$",
                              "location": "path",
                              "description": "Required. The Version to be loaded to draft flow. Format: `projects//locations//agents//flows//versions/`."
                            }
                          },
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "dialogflow.projects.locations.agents.flows.versions.load",
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/versions/{versionsId}:load",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1LoadVersionRequest"
                          },
                          "description": "Loads resources in the specified version to the draft flow. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "path": "v3beta1/{+name}:load"
                        },
                        "get": {
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/versions/{versionsId}",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1Version"
                          },
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/versions/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string",
                              "description": "Required. The name of the Version. Format: `projects//locations//agents//flows//versions/`."
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "path": "v3beta1/{+name}",
                          "id": "dialogflow.projects.locations.agents.flows.versions.get",
                          "description": "Retrieves the specified Version.",
                          "httpMethod": "GET"
                        },
                        "patch": {
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/versions/{versionsId}",
                          "id": "dialogflow.projects.locations.agents.flows.versions.patch",
                          "description": "Updates the specified Version.",
                          "path": "v3beta1/{+name}",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1Version"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1Version"
                          },
                          "parameters": {
                            "name": {
                              "location": "path",
                              "required": true,
                              "description": "Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow upon version creation.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/versions/[^/]+$",
                              "type": "string"
                            },
                            "updateMask": {
                              "description": "Required. The mask to control which fields get updated. Currently only `description` and `display_name` can be updated.",
                              "location": "query",
                              "type": "string",
                              "format": "google-fieldmask"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "httpMethod": "PATCH"
                        }
                      }
                    },
                    "transitionRouteGroups": {
                      "methods": {
                        "delete": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/transitionRouteGroups/{transitionRouteGroupsId}",
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "dialogflow.projects.locations.agents.flows.transitionRouteGroups.delete",
                          "path": "v3beta1/{+name}",
                          "description": "Deletes the specified TransitionRouteGroup. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).",
                          "parameters": {
                            "force": {
                              "type": "boolean",
                              "description": "This field has no effect for transition route group that no page is using. If the transition route group is referenced by any page: * If `force` is set to false, an error will be returned with message indicating pages that reference the transition route group. * If `force` is set to true, Dialogflow will remove the transition route group, as well as any reference to it.",
                              "location": "query"
                            },
                            "name": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/transitionRouteGroups/[^/]+$",
                              "location": "path",
                              "description": "Required. The name of the TransitionRouteGroup to delete. Format: `projects//locations//agents//flows//transitionRouteGroups/`.",
                              "type": "string"
                            }
                          },
                          "httpMethod": "DELETE"
                        },
                        "get": {
                          "id": "dialogflow.projects.locations.agents.flows.transitionRouteGroups.get",
                          "description": "Retrieves the specified TransitionRouteGroup.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/transitionRouteGroups/{transitionRouteGroupsId}",
                          "path": "v3beta1/{+name}",
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/transitionRouteGroups/[^/]+$",
                              "type": "string",
                              "description": "Required. The name of the TransitionRouteGroup. Format: `projects//locations//agents//flows//transitionRouteGroups/`.",
                              "required": true,
                              "location": "path"
                            },
                            "languageCode": {
                              "location": "query",
                              "description": "The language to retrieve the transition route group for. The following fields are language dependent: * `TransitionRouteGroup.transition_routes.trigger_fulfillment.messages` * `TransitionRouteGroup.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                              "type": "string"
                            }
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1TransitionRouteGroup"
                          }
                        },
                        "create": {
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1TransitionRouteGroup"
                          },
                          "id": "dialogflow.projects.locations.agents.flows.transitionRouteGroups.create",
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/transitionRouteGroups",
                          "httpMethod": "POST",
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1TransitionRouteGroup"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameters": {
                            "languageCode": {
                              "type": "string",
                              "description": "The language of the following fields in `TransitionRouteGroup`: * `TransitionRouteGroup.transition_routes.trigger_fulfillment.messages` * `TransitionRouteGroup.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                              "location": "query"
                            },
                            "parent": {
                              "type": "string",
                              "description": "Required. The flow to create an TransitionRouteGroup for. Format: `projects//locations//agents//flows/`.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$",
                              "required": true
                            }
                          },
                          "description": "Creates an TransitionRouteGroup in the specified flow. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).",
                          "path": "v3beta1/{+parent}/transitionRouteGroups"
                        },
                        "list": {
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/transitionRouteGroups",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse"
                          },
                          "path": "v3beta1/{+parent}/transitionRouteGroups",
                          "description": "Returns the list of all transition route groups in the specified flow.",
                          "parameters": {
                            "languageCode": {
                              "type": "string",
                              "description": "The language to list transition route groups for. The following fields are language dependent: * `TransitionRouteGroup.transition_routes.trigger_fulfillment.messages` * `TransitionRouteGroup.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                              "location": "query"
                            },
                            "pageSize": {
                              "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                              "location": "query",
                              "format": "int32",
                              "type": "integer"
                            },
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "description": "Required. The flow to list all transition route groups for. Format: `projects//locations//agents//flows/`."
                            },
                            "pageToken": {
                              "description": "The next_page_token value returned from a previous list request.",
                              "type": "string",
                              "location": "query"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "id": "dialogflow.projects.locations.agents.flows.transitionRouteGroups.list",
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ]
                        },
                        "patch": {
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/transitionRouteGroups/{transitionRouteGroupsId}",
                          "httpMethod": "PATCH",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "path": "v3beta1/{+name}",
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1TransitionRouteGroup"
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1TransitionRouteGroup"
                          },
                          "description": "Updates the specified TransitionRouteGroup. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).",
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "updateMask": {
                              "description": "The mask to control which fields get updated.",
                              "location": "query",
                              "type": "string",
                              "format": "google-fieldmask"
                            },
                            "languageCode": {
                              "description": "The language of the following fields in `TransitionRouteGroup`: * `TransitionRouteGroup.transition_routes.trigger_fulfillment.messages` * `TransitionRouteGroup.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                              "type": "string",
                              "location": "query"
                            },
                            "name": {
                              "description": "The unique identifier of the transition route group. TransitionRouteGroups.CreateTransitionRouteGroup populates the name automatically. Format: `projects//locations//agents//flows//transitionRouteGroups/`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/transitionRouteGroups/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "required": true
                            }
                          },
                          "id": "dialogflow.projects.locations.agents.flows.transitionRouteGroups.patch"
                        }
                      }
                    }
                  },
                  "methods": {
                    "train": {
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1TrainFlowRequest"
                      },
                      "id": "dialogflow.projects.locations.agents.flows.train",
                      "description": "Trains the specified flow. Note that only the flow in 'draft' environment is trained. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. The flow to train. Format: `projects//locations//agents//flows/`.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$"
                        }
                      },
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}:train",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v3beta1/{+name}:train",
                      "httpMethod": "POST"
                    },
                    "get": {
                      "id": "dialogflow.projects.locations.agents.flows.get",
                      "description": "Retrieves the specified flow.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v3beta1/{+name}",
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}",
                      "parameters": {
                        "languageCode": {
                          "location": "query",
                          "type": "string",
                          "description": "The language to retrieve the flow for. The following fields are language dependent: * `Flow.event_handlers.trigger_fulfillment.messages` * `Flow.event_handlers.trigger_fulfillment.conditional_cases` * `Flow.transition_routes.trigger_fulfillment.messages` * `Flow.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
                        },
                        "name": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. The name of the flow to get. Format: `projects//locations//agents//flows/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Flow"
                      }
                    },
                    "getValidationResult": {
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/validationResult",
                      "parameters": {
                        "languageCode": {
                          "type": "string",
                          "location": "query",
                          "description": "If not specified, the agent's default language is used."
                        },
                        "name": {
                          "description": "Required. The flow name. Format: `projects//locations//agents//flows//validationResult`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/validationResult$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets the latest flow validation result. Flow validation is performed when ValidateFlow is called.",
                      "path": "v3beta1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "GET",
                      "id": "dialogflow.projects.locations.agents.flows.getValidationResult",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1FlowValidationResult"
                      }
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}",
                      "id": "dialogflow.projects.locations.agents.flows.delete",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Deletes a specified flow.",
                      "path": "v3beta1/{+name}",
                      "parameters": {
                        "force": {
                          "location": "query",
                          "description": "This field has no effect for flows with no incoming transitions. For flows with incoming transitions: * If `force` is set to false, an error will be returned with message indicating the incoming transitions. * If `force` is set to true, Dialogflow will remove the flow, as well as any transitions to the flow (i.e. Target flow in event handlers or Target flow in transition routes that point to this flow will be cleared).",
                          "type": "boolean"
                        },
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$",
                          "required": true,
                          "description": "Required. The name of the flow to delete. Format: `projects//locations//agents//flows/`.",
                          "type": "string"
                        }
                      }
                    },
                    "create": {
                      "httpMethod": "POST",
                      "id": "dialogflow.projects.locations.agents.flows.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Flow"
                      },
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. The agent to create a flow for. Format: `projects//locations//agents/`.",
                          "type": "string"
                        },
                        "languageCode": {
                          "description": "The language of the following fields in `flow`: * `Flow.event_handlers.trigger_fulfillment.messages` * `Flow.event_handlers.trigger_fulfillment.conditional_cases` * `Flow.transition_routes.trigger_fulfillment.messages` * `Flow.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v3beta1/{+parent}/flows",
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Flow"
                      },
                      "description": "Creates a flow in the specified agent. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training)."
                    },
                    "import": {
                      "parameters": {
                        "parent": {
                          "description": "Required. The agent to import the flow into. Format: `projects//locations//agents/`.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "required": true
                        }
                      },
                      "httpMethod": "POST",
                      "id": "dialogflow.projects.locations.agents.flows.import",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows:import",
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1ImportFlowRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v3beta1/{+parent}/flows:import",
                      "description": "Imports the specified flow to the specified agent from a binary file. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: ImportFlowResponse Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training)."
                    },
                    "patch": {
                      "httpMethod": "PATCH",
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}",
                      "description": "Updates the specified flow. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dialogflow.projects.locations.agents.flows.patch",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Flow"
                      },
                      "path": "v3beta1/{+name}",
                      "parameters": {
                        "name": {
                          "description": "The unique identifier of the flow. Format: `projects//locations//agents//flows/`.",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$"
                        },
                        "updateMask": {
                          "description": "The mask to control which fields get updated. If the mask is not present, all fields will be updated.",
                          "format": "google-fieldmask",
                          "location": "query",
                          "type": "string"
                        },
                        "languageCode": {
                          "type": "string",
                          "description": "The language of the following fields in `flow`: * `Flow.event_handlers.trigger_fulfillment.messages` * `Flow.event_handlers.trigger_fulfillment.conditional_cases` * `Flow.transition_routes.trigger_fulfillment.messages` * `Flow.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                          "location": "query"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Flow"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    },
                    "export": {
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the flow to export. Format: `projects//locations//agents//flows/`."
                        }
                      },
                      "description": "Exports the specified flow to a binary file. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: ExportFlowResponse Note that resources (e.g. intents, entities, webhooks) that the flow references will also be exported.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1ExportFlowRequest"
                      },
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}:export",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v3beta1/{+name}:export",
                      "id": "dialogflow.projects.locations.agents.flows.export",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "validate": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1FlowValidationResult"
                      },
                      "path": "v3beta1/{+name}:validate",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "description": "Required. The flow to validate. Format: `projects//locations//agents//flows/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$",
                          "location": "path"
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1ValidateFlowRequest"
                      },
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}:validate",
                      "httpMethod": "POST",
                      "id": "dialogflow.projects.locations.agents.flows.validate",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Validates the specified flow and creates or updates validation results. Please call this API after the training is completed to get the complete validation results."
                    },
                    "list": {
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "type": "integer"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "The next_page_token value returned from a previous list request.",
                          "type": "string"
                        },
                        "languageCode": {
                          "description": "The language to list flows for. The following fields are language dependent: * `Flow.event_handlers.trigger_fulfillment.messages` * `Flow.event_handlers.trigger_fulfillment.conditional_cases` * `Flow.transition_routes.trigger_fulfillment.messages` * `Flow.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The agent containing the flows. Format: `projects//locations//agents/`."
                        }
                      },
                      "path": "v3beta1/{+parent}/flows",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "id": "dialogflow.projects.locations.agents.flows.list",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1ListFlowsResponse"
                      },
                      "httpMethod": "GET",
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows",
                      "description": "Returns the list of all flows in the specified agent."
                    }
                  }
                },
                "testCases": {
                  "methods": {
                    "patch": {
                      "description": "Updates the specified test case.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1TestCase"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases/{testCasesId}",
                      "parameters": {
                        "updateMask": {
                          "location": "query",
                          "description": "Required. The mask to specify which fields should be updated. The `creationTime` and `lastTestResult` cannot be updated.",
                          "type": "string",
                          "format": "google-fieldmask"
                        },
                        "name": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/testCases/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1TestCase"
                      },
                      "httpMethod": "PATCH",
                      "id": "dialogflow.projects.locations.agents.testCases.patch",
                      "path": "v3beta1/{+name}"
                    },
                    "run": {
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Kicks off a test case run. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: RunTestCaseMetadata - `response`: RunTestCaseResponse",
                      "id": "dialogflow.projects.locations.agents.testCases.run",
                      "httpMethod": "POST",
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases/{testCasesId}:run",
                      "parameters": {
                        "name": {
                          "description": "Required. Format of test case name to run: `projects//locations/ /agents//testCases/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/testCases/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1RunTestCaseRequest"
                      },
                      "path": "v3beta1/{+name}:run"
                    },
                    "batchRun": {
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesRequest"
                      },
                      "description": "Kicks off a batch run of test cases. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: BatchRunTestCasesMetadata - `response`: BatchRunTestCasesResponse",
                      "path": "v3beta1/{+parent}/testCases:batchRun",
                      "id": "dialogflow.projects.locations.agents.testCases.batchRun",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases:batchRun",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "Required. Agent name. Format: `projects//locations//agents/ `.",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "httpMethod": "POST"
                    },
                    "calculateCoverage": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "id": "dialogflow.projects.locations.agents.testCases.calculateCoverage",
                      "description": "Calculates the test coverage for an agent.",
                      "path": "v3beta1/{+agent}/testCases:calculateCoverage",
                      "parameterOrder": [
                        "agent"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases:calculateCoverage",
                      "parameters": {
                        "type": {
                          "description": "Required. The type of coverage requested.",
                          "location": "query",
                          "enum": [
                            "COVERAGE_TYPE_UNSPECIFIED",
                            "INTENT",
                            "PAGE_TRANSITION",
                            "TRANSITION_ROUTE_GROUP"
                          ],
                          "enumDescriptions": [
                            "Should never be used.",
                            "Intent coverage.",
                            "Page transition coverage.",
                            "Transition route group coverage."
                          ],
                          "type": "string"
                        },
                        "agent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The agent to calculate coverage for. Format: `projects//locations//agents/`."
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse"
                      }
                    },
                    "export": {
                      "httpMethod": "POST",
                      "id": "dialogflow.projects.locations.agents.testCases.export",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "Required. The agent where to export test cases from. Format: `projects//locations//agents/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "description": "Exports the test cases under the agent to a Cloud Storage bucket or a local file. Filter can be applied to export a subset of test cases. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: ExportTestCasesMetadata - `response`: ExportTestCasesResponse",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest"
                      },
                      "path": "v3beta1/{+parent}/testCases:export",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases:export"
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v3beta1/{+name}",
                      "description": "Gets a test case.",
                      "id": "dialogflow.projects.locations.agents.testCases.get",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1TestCase"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The name of the testcase. Format: `projects//locations//agents//testCases/`.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/testCases/[^/]+$"
                        }
                      },
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases/{testCasesId}",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    },
                    "batchDelete": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "path": "v3beta1/{+parent}/testCases:batchDelete",
                      "description": "Batch deletes test cases.",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1BatchDeleteTestCasesRequest"
                      },
                      "id": "dialogflow.projects.locations.agents.testCases.batchDelete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases:batchDelete",
                      "parameters": {
                        "parent": {
                          "description": "Required. The agent to delete test cases from. Format: `projects//locations//agents/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      }
                    },
                    "import": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases:import",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "location": "path",
                          "description": "Required. The agent to import test cases to. Format: `projects//locations//agents/`.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "path": "v3beta1/{+parent}/testCases:import",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1ImportTestCasesRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "id": "dialogflow.projects.locations.agents.testCases.import",
                      "description": "Imports the test cases from a Cloud Storage bucket or a local file. It always creates new test cases and won't overwrite any existing ones. The provided ID in the imported test case is neglected. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: ImportTestCasesMetadata - `response`: ImportTestCasesResponse",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "create": {
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The agent to create the test case for. Format: `projects//locations//agents/`.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "required": true
                        }
                      },
                      "description": "Creates a test case for the given agent.",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1TestCase"
                      },
                      "id": "dialogflow.projects.locations.agents.testCases.create",
                      "path": "v3beta1/{+parent}/testCases",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1TestCase"
                      }
                    },
                    "list": {
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1ListTestCasesResponse"
                      },
                      "parameters": {
                        "view": {
                          "enum": [
                            "TEST_CASE_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "location": "query",
                          "enumDescriptions": [
                            "The default / unset value. The API will default to the BASIC view.",
                            "Include basic metadata about the test case, but not the conversation turns. This is the default value.",
                            "Include everything."
                          ],
                          "type": "string",
                          "description": "Specifies whether response should include all fields or just the metadata."
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "type": "integer",
                          "description": "The maximum number of items to return in a single page. By default 20. Note that when TestCaseView = FULL, the maximum page size allowed is 20. When TestCaseView = BASIC, the maximum page size allowed is 500."
                        },
                        "pageToken": {
                          "description": "The next_page_token value returned from a previous list request.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "description": "Required. The agent to list all pages for. Format: `projects//locations//agents/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v3beta1/{+parent}/testCases",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dialogflow.projects.locations.agents.testCases.list",
                      "description": "Fetches a list of test cases for a given agent.",
                      "httpMethod": "GET"
                    }
                  },
                  "resources": {
                    "results": {
                      "methods": {
                        "get": {
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases/{testCasesId}/results/{resultsId}",
                          "description": "Gets a test case result.",
                          "id": "dialogflow.projects.locations.agents.testCases.results.get",
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v3beta1/{+name}",
                          "parameters": {
                            "name": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/testCases/[^/]+/results/[^/]+$",
                              "required": true,
                              "description": "Required. The name of the testcase. Format: `projects//locations//agents//testCases//results/`.",
                              "location": "path"
                            }
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1TestCaseResult"
                          }
                        },
                        "list": {
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "description": "Fetches a list of results for a given test case.",
                          "path": "v3beta1/{+parent}/results",
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases/{testCasesId}/results",
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1ListTestCaseResultsResponse"
                          },
                          "parameters": {
                            "pageToken": {
                              "description": "The next_page_token value returned from a previous list request.",
                              "location": "query",
                              "type": "string"
                            },
                            "filter": {
                              "location": "query",
                              "type": "string",
                              "description": "The filter expression used to filter test case results. See [API Filtering](https://aip.dev/160). The expression is case insensitive. Only 'AND' is supported for logical operators. The supported syntax is listed below in detail: [AND ] ... [AND latest] The supported fields and operators are: field operator `environment` `=`, `IN` (Use value `draft` for draft environment) `test_time` `\u003e`, `\u003c` `latest` only returns the latest test result in all results for each test case. Examples: * \"environment=draft AND latest\" matches the latest test result for each test case in the draft environment. * \"environment IN (e1,e2)\" matches any test case results with an environment resource name of either \"e1\" or \"e2\". * \"test_time \u003e 1602540713\" matches any test case results with test time later than a unix timestamp in seconds 1602540713."
                            },
                            "parent": {
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/testCases/[^/]+$",
                              "location": "path",
                              "description": "Required. The test case to list results for. Format: `projects//locations//agents// testCases/`. Specify a `-` as a wildcard for TestCase ID to list results across multiple test cases."
                            },
                            "pageSize": {
                              "location": "query",
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum number of items to return in a single page. By default 100 and at most 1000."
                            }
                          },
                          "id": "dialogflow.projects.locations.agents.testCases.results.list"
                        }
                      }
                    }
                  }
                },
                "webhooks": {
                  "methods": {
                    "patch": {
                      "path": "v3beta1/{+name}",
                      "httpMethod": "PATCH",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Webhook"
                      },
                      "description": "Updates the specified webhook.",
                      "id": "dialogflow.projects.locations.agents.webhooks.patch",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Webhook"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "description": "The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/webhooks/[^/]+$",
                          "location": "path"
                        },
                        "updateMask": {
                          "type": "string",
                          "description": "The mask to control which fields get updated. If the mask is not present, all fields will be updated.",
                          "location": "query",
                          "format": "google-fieldmask"
                        }
                      },
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/webhooks/{webhooksId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. The agent to list all webhooks for. Format: `projects//locations//agents/`."
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "type": "integer"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "The next_page_token value returned from a previous list request."
                        }
                      },
                      "description": "Returns the list of all webhooks in the specified agent.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v3beta1/{+parent}/webhooks",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1ListWebhooksResponse"
                      },
                      "httpMethod": "GET",
                      "id": "dialogflow.projects.locations.agents.webhooks.list",
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/webhooks"
                    },
                    "create": {
                      "description": "Creates a webhook in the specified agent.",
                      "path": "v3beta1/{+parent}/webhooks",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Webhook"
                      },
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/webhooks",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The agent to create a webhook for. Format: `projects//locations//agents/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Webhook"
                      },
                      "id": "dialogflow.projects.locations.agents.webhooks.create"
                    },
                    "get": {
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Webhook"
                      },
                      "description": "Retrieves the specified webhook.",
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/webhooks/{webhooksId}",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The name of the webhook. Format: `projects//locations//agents//webhooks/`.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/webhooks/[^/]+$",
                          "location": "path"
                        }
                      },
                      "id": "dialogflow.projects.locations.agents.webhooks.get",
                      "path": "v3beta1/{+name}",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "delete": {
                      "description": "Deletes the specified webhook.",
                      "parameters": {
                        "force": {
                          "type": "boolean",
                          "description": "This field has no effect for webhook not being used. For webhooks that are used by pages/flows/transition route groups: * If `force` is set to false, an error will be returned with message indicating the referenced resources. * If `force` is set to true, Dialogflow will remove the webhook, as well as any references to the webhook (i.e. Webhook and tagin fulfillments that point to this webhook will be removed).",
                          "location": "query"
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/webhooks/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the webhook to delete. Format: `projects//locations//agents//webhooks/`.",
                          "required": true
                        }
                      },
                      "id": "dialogflow.projects.locations.agents.webhooks.delete",
                      "path": "v3beta1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/webhooks/{webhooksId}",
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      }
                    }
                  }
                },
                "changelogs": {
                  "methods": {
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/changelogs",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1ListChangelogsResponse"
                      },
                      "description": "Returns the list of Changelogs.",
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "The filter string. Supports filter by user_email, resource, type and create_time. Some examples: 1. By user email: user_email = \"someone@google.com\" 2. By resource name: resource = \"projects/123/locations/global/agents/456/flows/789\" 3. By resource display name: display_name = \"my agent\" 4. By action: action = \"Create\" 5. By type: type = \"flows\" 6. By create time. Currently predicates on `create_time` and `create_time_epoch_seconds` are supported: create_time_epoch_seconds \u003e 1551790877 AND create_time \u003c= 2017-01-15T01:30:15.01Z 7. Combination of above filters: resource = \"projects/123/locations/global/agents/456/flows/789\" AND user_email = \"someone@google.com\" AND create_time \u003c= 2017-01-15T01:30:15.01Z"
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "type": "integer"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. The agent containing the changelogs. Format: `projects//locations//agents/`.",
                          "type": "string"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "The next_page_token value returned from a previous list request."
                        }
                      },
                      "id": "dialogflow.projects.locations.agents.changelogs.list",
                      "path": "v3beta1/{+parent}/changelogs",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET"
                    },
                    "get": {
                      "description": "Retrieves the specified Changelog.",
                      "id": "dialogflow.projects.locations.agents.changelogs.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/changelogs/[^/]+$",
                          "description": "Required. The name of the changelog to get. Format: `projects//locations//agents//changelogs/`.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Changelog"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/changelogs/{changelogsId}",
                      "path": "v3beta1/{+name}",
                      "httpMethod": "GET"
                    }
                  }
                },
                "intents": {
                  "methods": {
                    "get": {
                      "description": "Retrieves the specified intent.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Intent"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dialogflow.projects.locations.agents.intents.get",
                      "path": "v3beta1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/intents/{intentsId}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. The name of the intent. Format: `projects//locations//agents//intents/`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/intents/[^/]+$"
                        },
                        "languageCode": {
                          "type": "string",
                          "location": "query",
                          "description": "The language to retrieve the intent for. The following fields are language dependent: * `Intent.training_phrases.parts.text` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
                        }
                      }
                    },
                    "create": {
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Intent"
                      },
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Intent"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dialogflow.projects.locations.agents.intents.create",
                      "description": "Creates an intent in the specified agent. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).",
                      "path": "v3beta1/{+parent}/intents",
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/intents",
                      "parameters": {
                        "parent": {
                          "description": "Required. The agent to create an intent for. Format: `projects//locations//agents/`.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "location": "path"
                        },
                        "languageCode": {
                          "description": "The language of the following fields in `intent`: * `Intent.training_phrases.parts.text` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                          "location": "query",
                          "type": "string"
                        }
                      }
                    },
                    "patch": {
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Intent"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Updates the specified intent. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).",
                      "path": "v3beta1/{+name}",
                      "id": "dialogflow.projects.locations.agents.intents.patch",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PATCH",
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/intents/{intentsId}",
                      "parameters": {
                        "updateMask": {
                          "format": "google-fieldmask",
                          "description": "The mask to control which fields get updated. If the mask is not present, all fields will be updated.",
                          "location": "query",
                          "type": "string"
                        },
                        "languageCode": {
                          "description": "The language of the following fields in `intent`: * `Intent.training_phrases.parts.text` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                          "type": "string",
                          "location": "query"
                        },
                        "name": {
                          "description": "The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/intents/[^/]+$",
                          "type": "string"
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Intent"
                      }
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "description": "Deletes the specified intent. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/intents/{intentsId}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/intents/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the intent to delete. Format: `projects//locations//agents//intents/`.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v3beta1/{+name}",
                      "id": "dialogflow.projects.locations.agents.intents.delete"
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "path": "v3beta1/{+parent}/intents",
                      "id": "dialogflow.projects.locations.agents.intents.list",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1ListIntentsResponse"
                      },
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "Required. The agent to list all intents for. Format: `projects//locations//agents/`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$"
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "type": "integer",
                          "description": "The maximum number of items to return in a single page. By default 100 and at most 1000."
                        },
                        "languageCode": {
                          "type": "string",
                          "description": "The language to list intents for. The following fields are language dependent: * `Intent.training_phrases.parts.text` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                          "location": "query"
                        },
                        "pageToken": {
                          "description": "The next_page_token value returned from a previous list request.",
                          "type": "string",
                          "location": "query"
                        },
                        "intentView": {
                          "type": "string",
                          "enum": [
                            "INTENT_VIEW_UNSPECIFIED",
                            "INTENT_VIEW_PARTIAL",
                            "INTENT_VIEW_FULL"
                          ],
                          "enumDescriptions": [
                            "Not specified. Treated as INTENT_VIEW_FULL.",
                            "Training phrases field is not populated in the response.",
                            "All fields are populated."
                          ],
                          "location": "query",
                          "description": "The resource view to apply to the returned intent."
                        }
                      },
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/intents",
                      "description": "Returns the list of all intents in the specified agent."
                    }
                  }
                },
                "environments": {
                  "methods": {
                    "runContinuousTest": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}:runContinuousTest",
                      "httpMethod": "POST",
                      "id": "dialogflow.projects.locations.agents.environments.runContinuousTest",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "description": "Kicks off a continuous test under the specified Environment. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: RunContinuousTestMetadata - `response`: RunContinuousTestResponse",
                      "path": "v3beta1/{+environment}:runContinuousTest",
                      "parameters": {
                        "environment": {
                          "type": "string",
                          "description": "Required. Format: `projects//locations//agents//environments/`.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+$",
                          "required": true
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1RunContinuousTestRequest"
                      },
                      "parameterOrder": [
                        "environment"
                      ]
                    },
                    "lookupEnvironmentHistory": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. Resource name of the environment to look up the history for. Format: `projects//locations//agents//environments/`.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+$"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "pageToken": {
                          "description": "The next_page_token value returned from a previous list request.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "path": "v3beta1/{+name}:lookupEnvironmentHistory",
                      "description": "Looks up the history of the specified Environment.",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1LookupEnvironmentHistoryResponse"
                      },
                      "id": "dialogflow.projects.locations.agents.environments.lookupEnvironmentHistory",
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}:lookupEnvironmentHistory"
                    },
                    "patch": {
                      "id": "dialogflow.projects.locations.agents.environments.patch",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "updateMask": {
                          "description": "Required. The mask to control which fields get updated.",
                          "format": "google-fieldmask",
                          "type": "string",
                          "location": "query"
                        },
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "The name of the environment. Format: `projects//locations//agents//environments/`.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Environment"
                      },
                      "description": "Updates the specified Environment. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: Environment",
                      "path": "v3beta1/{+name}",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}",
                      "httpMethod": "PATCH"
                    },
                    "list": {
                      "parameters": {
                        "pageToken": {
                          "description": "The next_page_token value returned from a previous list request.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "description": "Required. The Agent to list all environments for. Format: `projects//locations//agents/`.",
                          "required": true,
                          "location": "path"
                        },
                        "pageSize": {
                          "description": "The maximum number of items to return in a single page. By default 20 and at most 100.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        }
                      },
                      "id": "dialogflow.projects.locations.agents.environments.list",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1ListEnvironmentsResponse"
                      },
                      "description": "Returns the list of all environments in the specified Agent.",
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v3beta1/{+parent}/environments",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "GET",
                      "description": "Retrieves the specified Environment.",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+$",
                          "required": true,
                          "description": "Required. The name of the Environment. Format: `projects//locations//agents//environments/`.",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dialogflow.projects.locations.agents.environments.get",
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Environment"
                      },
                      "path": "v3beta1/{+name}"
                    },
                    "create": {
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "Required. The Agent to create an Environment for. Format: `projects//locations//agents/`.",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "description": "Creates an Environment in the specified Agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: Environment",
                      "httpMethod": "POST",
                      "path": "v3beta1/{+parent}/environments",
                      "id": "dialogflow.projects.locations.agents.environments.create",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1Environment"
                      }
                    },
                    "delete": {
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "httpMethod": "DELETE",
                      "id": "dialogflow.projects.locations.agents.environments.delete",
                      "description": "Deletes the specified Environment.",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the Environment to delete. Format: `projects//locations//agents//environments/`.",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+$",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v3beta1/{+name}",
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}"
                    },
                    "deployFlow": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "environment"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3beta1DeployFlowRequest"
                      },
                      "id": "dialogflow.projects.locations.agents.environments.deployFlow",
                      "description": "Deploys a flow to the specified Environment. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: DeployFlowMetadata - `response`: DeployFlowResponse",
                      "path": "v3beta1/{+environment}:deployFlow",
                      "httpMethod": "POST",
                      "parameters": {
                        "environment": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. The environment to deploy the flow to. Format: `projects//locations//agents// environments/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+$"
                        }
                      },
                      "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}:deployFlow"
                    }
                  },
                  "resources": {
                    "experiments": {
                      "methods": {
                        "create": {
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "POST",
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1Experiment"
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1Experiment"
                          },
                          "parameters": {
                            "parent": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+$",
                              "required": true,
                              "location": "path",
                              "description": "Required. The Agent to create an Environment for. Format: `projects//locations//agents//environments/`."
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/experiments",
                          "path": "v3beta1/{+parent}/experiments",
                          "description": "Creates an Experiment in the specified Environment.",
                          "id": "dialogflow.projects.locations.agents.environments.experiments.create"
                        },
                        "get": {
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1Experiment"
                          },
                          "httpMethod": "GET",
                          "path": "v3beta1/{+name}",
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/experiments/{experimentsId}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "description": "Retrieves the specified Experiment.",
                          "parameters": {
                            "name": {
                              "location": "path",
                              "description": "Required. The name of the Environment. Format: `projects//locations//agents//environments//experiments/`.",
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/experiments/[^/]+$"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "dialogflow.projects.locations.agents.environments.experiments.get"
                        },
                        "patch": {
                          "id": "dialogflow.projects.locations.agents.environments.experiments.patch",
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/experiments/{experimentsId}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameters": {
                            "updateMask": {
                              "description": "Required. The mask to control which fields get updated.",
                              "format": "google-fieldmask",
                              "location": "query",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the experiment. Format: projects//locations//agents//environments//experiments/..",
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/experiments/[^/]+$"
                            }
                          },
                          "description": "Updates the specified Experiment.",
                          "httpMethod": "PATCH",
                          "path": "v3beta1/{+name}",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1Experiment"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1Experiment"
                          }
                        },
                        "start": {
                          "id": "dialogflow.projects.locations.agents.environments.experiments.start",
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1StartExperimentRequest"
                          },
                          "path": "v3beta1/{+name}:start",
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/experiments/[^/]+$",
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "description": "Required. Resource name of the experiment to start. Format: `projects//locations//agents//environments//experiments/`."
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/experiments/{experimentsId}:start",
                          "description": "Starts the specified Experiment. This rpc only changes the state of experiment from PENDING to RUNNING.",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1Experiment"
                          },
                          "httpMethod": "POST"
                        },
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "httpMethod": "GET",
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/experiments",
                          "parameters": {
                            "parent": {
                              "required": true,
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+$",
                              "type": "string",
                              "description": "Required. The Environment to list all environments for. Format: `projects//locations//agents//environments/`."
                            },
                            "pageToken": {
                              "type": "string",
                              "description": "The next_page_token value returned from a previous list request.",
                              "location": "query"
                            },
                            "pageSize": {
                              "format": "int32",
                              "description": "The maximum number of items to return in a single page. By default 20 and at most 100.",
                              "type": "integer",
                              "location": "query"
                            }
                          },
                          "path": "v3beta1/{+parent}/experiments",
                          "id": "dialogflow.projects.locations.agents.environments.experiments.list",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1ListExperimentsResponse"
                          },
                          "description": "Returns the list of all experiments in the specified Environment.",
                          "parameterOrder": [
                            "parent"
                          ]
                        },
                        "delete": {
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the Environment to delete. Format: `projects//locations//agents//environments//experiments/`.",
                              "type": "string",
                              "required": true,
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/experiments/[^/]+$"
                            }
                          },
                          "description": "Deletes the specified Experiment.",
                          "httpMethod": "DELETE",
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/experiments/{experimentsId}",
                          "path": "v3beta1/{+name}",
                          "id": "dialogflow.projects.locations.agents.environments.experiments.delete"
                        },
                        "stop": {
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/experiments/{experimentsId}:stop",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameters": {
                            "name": {
                              "type": "string",
                              "location": "path",
                              "description": "Required. Resource name of the experiment to stop. Format: `projects//locations//agents//environments//experiments/`.",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/experiments/[^/]+$"
                            }
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1Experiment"
                          },
                          "httpMethod": "POST",
                          "description": "Stops the specified Experiment. This rpc only changes the state of experiment from RUNNING to DONE.",
                          "path": "v3beta1/{+name}:stop",
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1StopExperimentRequest"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "dialogflow.projects.locations.agents.environments.experiments.stop"
                        }
                      }
                    },
                    "continuousTestResults": {
                      "methods": {
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "path": "v3beta1/{+parent}/continuousTestResults",
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1ListContinuousTestResultsResponse"
                          },
                          "httpMethod": "GET",
                          "id": "dialogflow.projects.locations.agents.environments.continuousTestResults.list",
                          "description": "Fetches a list of continuous test results for a given environment.",
                          "parameters": {
                            "parent": {
                              "description": "Required. The environment to list results for. Format: `projects//locations//agents// environments/`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+$",
                              "type": "string",
                              "required": true,
                              "location": "path"
                            },
                            "pageSize": {
                              "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                              "type": "integer",
                              "format": "int32",
                              "location": "query"
                            },
                            "pageToken": {
                              "description": "The next_page_token value returned from a previous list request.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/continuousTestResults"
                        }
                      }
                    },
                    "deployments": {
                      "methods": {
                        "list": {
                          "description": "Returns the list of all deployments in the specified Environment.",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1ListDeploymentsResponse"
                          },
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "parent"
                          ],
                          "path": "v3beta1/{+parent}/deployments",
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/deployments",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameters": {
                            "pageSize": {
                              "format": "int32",
                              "location": "query",
                              "description": "The maximum number of items to return in a single page. By default 20 and at most 100.",
                              "type": "integer"
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "The next_page_token value returned from a previous list request."
                            },
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+$",
                              "description": "Required. The Environment to list all environments for. Format: `projects//locations//agents//environments/`.",
                              "required": true,
                              "type": "string",
                              "location": "path"
                            }
                          },
                          "id": "dialogflow.projects.locations.agents.environments.deployments.list"
                        },
                        "get": {
                          "description": "Retrieves the specified Deployment.",
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the Deployment. Format: `projects//locations//agents//environments//deployments/`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/deployments/[^/]+$",
                              "required": true,
                              "type": "string",
                              "location": "path"
                            }
                          },
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1Deployment"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/deployments/{deploymentsId}",
                          "id": "dialogflow.projects.locations.agents.environments.deployments.get",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "path": "v3beta1/{+name}"
                        }
                      }
                    },
                    "sessions": {
                      "methods": {
                        "fulfillIntent": {
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}:fulfillIntent",
                          "id": "dialogflow.projects.locations.agents.environments.sessions.fulfillIntent",
                          "httpMethod": "POST",
                          "description": "Fulfills a matched intent returned by MatchIntent. Must be called after MatchIntent, with input from MatchIntentResponse. Otherwise, the behavior is undefined.",
                          "path": "v3beta1/{+session}:fulfillIntent",
                          "parameterOrder": [
                            "session"
                          ],
                          "parameters": {
                            "session": {
                              "type": "string",
                              "required": true,
                              "description": "Required. The name of the session this query is sent to. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length of the `Session ID` must not exceed 36 characters. For more information, see the [sessions guide](https://cloud.google.com/dialogflow/cx/docs/concept/session).",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/sessions/[^/]+$",
                              "location": "path"
                            }
                          },
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1FulfillIntentRequest"
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1FulfillIntentResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ]
                        },
                        "matchIntent": {
                          "httpMethod": "POST",
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}:matchIntent",
                          "parameterOrder": [
                            "session"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "path": "v3beta1/{+session}:matchIntent",
                          "description": "Returns preliminary intent match results, doesn't change the session status.",
                          "id": "dialogflow.projects.locations.agents.environments.sessions.matchIntent",
                          "parameters": {
                            "session": {
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/sessions/[^/]+$",
                              "description": "Required. The name of the session this query is sent to. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length of the `Session ID` must not exceed 36 characters. For more information, see the [sessions guide](https://cloud.google.com/dialogflow/cx/docs/concept/session)."
                            }
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1MatchIntentResponse"
                          },
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1MatchIntentRequest"
                          }
                        },
                        "detectIntent": {
                          "parameters": {
                            "session": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/sessions/[^/]+$",
                              "description": "Required. The name of the session this query is sent to. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length of the `Session ID` must not exceed 36 characters. For more information, see the [sessions guide](https://cloud.google.com/dialogflow/cx/docs/concept/session). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).",
                              "location": "path",
                              "required": true
                            }
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1DetectIntentResponse"
                          },
                          "httpMethod": "POST",
                          "path": "v3beta1/{+session}:detectIntent",
                          "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}:detectIntent",
                          "id": "dialogflow.projects.locations.agents.environments.sessions.detectIntent",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3beta1DetectIntentRequest"
                          },
                          "parameterOrder": [
                            "session"
                          ],
                          "description": "Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause session entity types to be updated, which in turn might affect results of future queries. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/cx/docs/concept/version)."
                        }
                      },
                      "resources": {
                        "entityTypes": {
                          "methods": {
                            "list": {
                              "parameterOrder": [
                                "parent"
                              ],
                              "description": "Returns the list of all session entity types in the specified session.",
                              "httpMethod": "GET",
                              "response": {
                                "$ref": "GoogleCloudDialogflowCxV3beta1ListSessionEntityTypesResponse"
                              },
                              "id": "dialogflow.projects.locations.agents.environments.sessions.entityTypes.list",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "path": "v3beta1/{+parent}/entityTypes",
                              "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}/entityTypes",
                              "parameters": {
                                "parent": {
                                  "required": true,
                                  "location": "path",
                                  "type": "string",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/sessions/[^/]+$",
                                  "description": "Required. The session to list all session entity types from. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment."
                                },
                                "pageToken": {
                                  "type": "string",
                                  "location": "query",
                                  "description": "The next_page_token value returned from a previous list request."
                                },
                                "pageSize": {
                                  "type": "integer",
                                  "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                                  "format": "int32",
                                  "location": "query"
                                }
                              }
                            },
                            "get": {
                              "description": "Retrieves the specified session entity type.",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "httpMethod": "GET",
                              "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                              "parameterOrder": [
                                "name"
                              ],
                              "id": "dialogflow.projects.locations.agents.environments.sessions.entityTypes.get",
                              "parameters": {
                                "name": {
                                  "type": "string",
                                  "description": "Required. The name of the session entity type. Format: `projects//locations//agents//sessions//entityTypes/` or `projects//locations//agents//environments//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment.",
                                  "location": "path",
                                  "required": true,
                                  "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/sessions/[^/]+/entityTypes/[^/]+$"
                                }
                              },
                              "path": "v3beta1/{+name}",
                              "response": {
                                "$ref": "GoogleCloudDialogflowCxV3beta1SessionEntityType"
                              }
                            },
                            "patch": {
                              "description": "Updates the specified session entity type.",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "parameterOrder": [
                                "name"
                              ],
                              "request": {
                                "$ref": "GoogleCloudDialogflowCxV3beta1SessionEntityType"
                              },
                              "path": "v3beta1/{+name}",
                              "response": {
                                "$ref": "GoogleCloudDialogflowCxV3beta1SessionEntityType"
                              },
                              "id": "dialogflow.projects.locations.agents.environments.sessions.entityTypes.patch",
                              "httpMethod": "PATCH",
                              "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                              "parameters": {
                                "name": {
                                  "required": true,
                                  "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                  "description": "Required. The unique identifier of the session entity type. Format: `projects//locations//agents//sessions//entityTypes/` or `projects//locations//agents//environments//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment.",
                                  "location": "path",
                                  "type": "string"
                                },
                                "updateMask": {
                                  "location": "query",
                                  "format": "google-fieldmask",
                                  "description": "The mask to control which fields get updated.",
                                  "type": "string"
                                }
                              }
                            },
                            "delete": {
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "httpMethod": "DELETE",
                              "response": {
                                "$ref": "GoogleProtobufEmpty"
                              },
                              "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                              "description": "Deletes the specified session entity type.",
                              "path": "v3beta1/{+name}",
                              "id": "dialogflow.projects.locations.agents.environments.sessions.entityTypes.delete",
                              "parameters": {
                                "name": {
                                  "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                  "description": "Required. The name of the session entity type to delete. Format: `projects//locations//agents//sessions//entityTypes/` or `projects//locations//agents//environments//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment.",
                                  "required": true,
                                  "type": "string",
                                  "location": "path"
                                }
                              },
                              "parameterOrder": [
                                "name"
                              ]
                            },
                            "create": {
                              "parameterOrder": [
                                "parent"
                              ],
                              "response": {
                                "$ref": "GoogleCloudDialogflowCxV3beta1SessionEntityType"
                              },
                              "request": {
                                "$ref": "GoogleCloudDialogflowCxV3beta1SessionEntityType"
                              },
                              "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}/entityTypes",
                              "path": "v3beta1/{+parent}/entityTypes",
                              "parameters": {
                                "parent": {
                                  "description": "Required. The session to create a session entity type for. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment.",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/sessions/[^/]+$",
                                  "location": "path",
                                  "required": true,
                                  "type": "string"
                                }
                              },
                              "httpMethod": "POST",
                              "description": "Creates a session entity type.",
                              "id": "dialogflow.projects.locations.agents.environments.sessions.entityTypes.create",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "path": "v3beta1/{+name}:cancel",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "dialogflow.projects.locations.operations.cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                },
                "get": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "dialogflow.projects.locations.operations.get",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation resource."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v3beta1/{+name}",
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list filter."
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list page token."
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "The standard list page size."
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "location": "path"
                    }
                  },
                  "path": "v3beta1/{+name}/operations",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "httpMethod": "GET",
                  "id": "dialogflow.projects.locations.operations.list",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/operations"
                }
              }
            }
          }
        },
        "operations": {
          "methods": {
            "get": {
              "id": "dialogflow.projects.operations.get",
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "The name of the operation resource.",
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "required": true
                }
              },
              "path": "v3beta1/{+name}",
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "httpMethod": "GET",
              "flatPath": "v3beta1/projects/{projectsId}/operations/{operationsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "path": "v3beta1/{+name}/operations",
              "response": {
                "$ref": "GoogleLongrunningListOperationsResponse"
              },
              "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v3beta1/projects/{projectsId}/operations",
              "httpMethod": "GET",
              "parameters": {
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "description": "The standard list page token.",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "description": "The standard list page size.",
                  "type": "integer"
                },
                "name": {
                  "description": "The name of the operation's parent resource.",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "id": "dialogflow.projects.operations.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ]
            },
            "cancel": {
              "parameterOrder": [
                "name"
              ],
              "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "The name of the operation resource to be cancelled."
                }
              },
              "path": "v3beta1/{+name}:cancel",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "flatPath": "v3beta1/projects/{projectsId}/operations/{operationsId}:cancel",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "httpMethod": "POST",
              "id": "dialogflow.projects.operations.cancel"
            }
          }
        }
      }
    }
  },
  "discoveryVersion": "v1",
  "batchPath": "batch",
  "baseUrl": "https://dialogflow.googleapis.com/",
  "basePath": "",
  "fullyEncodeReservedExpansion": true,
  "documentationLink": "https://cloud.google.com/dialogflow/",
  "name": "dialogflow",
  "schemas": {
    "GoogleCloudDialogflowV2IntentMessage": {
      "properties": {
        "simpleResponses": {
          "description": "The voice and text-only responses for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageSimpleResponses"
        },
        "platform": {
          "type": "string",
          "description": "Optional. The platform that this message is intended for.",
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "FACEBOOK",
            "SLACK",
            "TELEGRAM",
            "KIK",
            "SKYPE",
            "LINE",
            "VIBER",
            "ACTIONS_ON_GOOGLE",
            "GOOGLE_HANGOUTS"
          ],
          "enumDescriptions": [
            "Default platform.",
            "Facebook.",
            "Slack.",
            "Telegram.",
            "Kik.",
            "Skype.",
            "Line.",
            "Viber.",
            "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
            "Google Hangouts."
          ]
        },
        "browseCarouselCard": {
          "description": "Browse carousel card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard"
        },
        "listSelect": {
          "description": "The list card response for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageListSelect"
        },
        "mediaContent": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageMediaContent",
          "description": "The media content card for Actions on Google."
        },
        "text": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageText",
          "description": "The text response."
        },
        "card": {
          "description": "The card response.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageCard"
        },
        "quickReplies": {
          "description": "The quick replies response.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageQuickReplies"
        },
        "tableCard": {
          "description": "Table card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageTableCard"
        },
        "carouselSelect": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageCarouselSelect",
          "description": "The carousel card response for Actions on Google."
        },
        "linkOutSuggestion": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion",
          "description": "The link out suggestion chip for Actions on Google."
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "The image response."
        },
        "suggestions": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageSuggestions",
          "description": "The suggestion chips for Actions on Google."
        },
        "payload": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "A custom platform-specific response."
        },
        "basicCard": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCard",
          "description": "The basic card response for Actions on Google."
        }
      },
      "description": "A rich response message. Corresponds to the intent `Response` field in the Dialogflow console. For more information, see [Rich response messages](https://cloud.google.com/dialogflow/docs/intents-rich-messages).",
      "id": "GoogleCloudDialogflowV2IntentMessage",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction": {
      "id": "GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction",
      "properties": {
        "parameter": {
          "type": "string",
          "description": "Display name of the parameter."
        },
        "value": {
          "type": "any",
          "description": "The new value of the parameter. A null value clears the parameter."
        }
      },
      "type": "object",
      "description": "Setting a parameter value."
    },
    "GoogleCloudDialogflowV2Sentiment": {
      "id": "GoogleCloudDialogflowV2Sentiment",
      "description": "The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text.",
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "format": "float",
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment)."
        },
        "magnitude": {
          "type": "number",
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
          "format": "float"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1TransitionRoute": {
      "properties": {
        "targetFlow": {
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        },
        "condition": {
          "type": "string",
          "description": "The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled."
        },
        "triggerFulfillment": {
          "description": "The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first.",
          "$ref": "GoogleCloudDialogflowCxV3beta1Fulfillment"
        },
        "targetPage": {
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        },
        "intent": {
          "description": "The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The unique identifier of this transition route.",
          "readOnly": true
        }
      },
      "description": "A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1TransitionRoute"
    },
    "GoogleCloudDialogflowCxV3beta1Match": {
      "description": "Represents one match result of MatchIntent.",
      "properties": {
        "confidence": {
          "description": "The confidence of this match. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation.",
          "type": "number",
          "format": "float"
        },
        "resolvedInput": {
          "type": "string",
          "description": "Final text input which was matched during MatchIntent. This value can be different from original input sent in request because of spelling correction or other processing."
        },
        "parameters": {
          "type": "object",
          "description": "The collection of parameters extracted from the query. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "intent": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Intent",
          "description": "The Intent that matched the query. Some, not all fields are filled in this message, including but not limited to: `name` and `display_name`. Only filled for `INTENT` match type."
        },
        "event": {
          "description": "The event that matched the query. Filled for `EVENT`, `NO_MATCH` and `NO_INPUT` match types.",
          "type": "string"
        },
        "matchType": {
          "description": "Type of this Match.",
          "enum": [
            "MATCH_TYPE_UNSPECIFIED",
            "INTENT",
            "DIRECT_INTENT",
            "PARAMETER_FILLING",
            "NO_MATCH",
            "NO_INPUT",
            "EVENT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not specified. Should never be used.",
            "The query was matched to an intent.",
            "The query directly triggered an intent.",
            "The query was used for parameter filling.",
            "No match was found for the query.",
            "Indicates an empty query.",
            "The query directly triggered an event."
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1Match"
    },
    "GoogleCloudDialogflowV2beta1QueryResult": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1QueryResult",
      "properties": {
        "queryText": {
          "description": "The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user input.",
          "type": "string"
        },
        "action": {
          "type": "string",
          "description": "The action name from the matched intent."
        },
        "parameters": {
          "description": "The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "outputContexts": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Context"
          },
          "description": "The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query."
        },
        "fulfillmentText": {
          "description": "The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred.",
          "type": "string"
        },
        "intent": {
          "description": "The intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name`, `display_name`, `end_interaction` and `is_fallback`.",
          "$ref": "GoogleCloudDialogflowV2beta1Intent"
        },
        "webhookSource": {
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response.",
          "type": "string"
        },
        "intentDetectionConfidence": {
          "format": "float",
          "description": "The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list.",
          "type": "number"
        },
        "languageCode": {
          "description": "The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.",
          "type": "string"
        },
        "speechRecognitionConfidence": {
          "type": "number",
          "description": "The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult.",
          "format": "float"
        },
        "diagnosticInfo": {
          "description": "Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "allRequiredParamsPresent": {
          "type": "boolean",
          "description": "This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter values have been collected, or if the matched intent doesn't contain any required parameters."
        },
        "cancelsSlotFilling": {
          "type": "boolean",
          "description": "Indicates whether the conversational query triggers a cancellation for slot filling. For more information, see the [cancel slot filling documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel)."
        },
        "knowledgeAnswers": {
          "description": "The result from Knowledge Connector (if any), ordered by decreasing `KnowledgeAnswers.match_confidence`.",
          "$ref": "GoogleCloudDialogflowV2beta1KnowledgeAnswers"
        },
        "fulfillmentMessages": {
          "type": "array",
          "description": "The collection of rich messages to present to the user.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessage"
          }
        },
        "sentimentAnalysisResult": {
          "description": "The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the request.",
          "$ref": "GoogleCloudDialogflowV2beta1SentimentAnalysisResult"
        },
        "webhookPayload": {
          "type": "object",
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      },
      "description": "Represents the result of conversational query or event processing."
    },
    "GoogleCloudDialogflowV2DeployConversationModelOperationMetadata": {
      "description": "Metadata for a ConversationModels.DeployConversationModel operation.",
      "type": "object",
      "properties": {
        "conversationModel": {
          "description": "The resource name of the conversation model. Format: `projects//conversationModels/`",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Timestamp when request to deploy conversation model was submitted. The time is measured on server side.",
          "format": "google-datetime"
        }
      },
      "id": "GoogleCloudDialogflowV2DeployConversationModelOperationMetadata"
    },
    "GoogleCloudDialogflowCxV3beta1ExportFlowResponse": {
      "properties": {
        "flowUri": {
          "type": "string",
          "description": "The URI to a file containing the exported flow. This field is populated only if `flow_uri` is specified in ExportFlowRequest."
        },
        "flowContent": {
          "type": "string",
          "format": "byte",
          "description": "Uncompressed raw byte content for flow."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ExportFlowResponse",
      "description": "The response message for Flows.ExportFlow."
    },
    "GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse": {
      "type": "object",
      "description": "The response message for Participants.SuggestSmartReplies.",
      "properties": {
        "smartReplyAnswers": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1SmartReplyAnswer"
          },
          "description": "Output only. Multiple reply options provided by smart reply service. The order is based on the rank of the model prediction. The maximum number of the returned replies is set in SmartReplyConfig."
        },
        "contextSize": {
          "type": "integer",
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestSmartRepliesRequest.context_size field in the request if there aren't that many messages in the conversation.",
          "format": "int32"
        },
        "latestMessage": {
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse"
    },
    "GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior": {
      "properties": {
        "initialPromptFulfillment": {
          "description": "Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.",
          "$ref": "GoogleCloudDialogflowCxV3beta1Fulfillment"
        },
        "repromptEventHandlers": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1EventHandler"
          },
          "description": "The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior",
      "description": "Configuration for how the filling of a parameter should be handled."
    },
    "GoogleCloudDialogflowV2SuggestionResult": {
      "description": "One response of different type of suggestion response which is used in the response of Participants.AnalyzeContent and Participants.AnalyzeContent, as well as HumanAgentAssistantEvent.",
      "id": "GoogleCloudDialogflowV2SuggestionResult",
      "properties": {
        "suggestArticlesResponse": {
          "$ref": "GoogleCloudDialogflowV2SuggestArticlesResponse",
          "description": "SuggestArticlesResponse if request is for ARTICLE_SUGGESTION."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Error status if the request failed."
        },
        "suggestFaqAnswersResponse": {
          "description": "SuggestFaqAnswersResponse if request is for FAQ_ANSWER.",
          "$ref": "GoogleCloudDialogflowV2SuggestFaqAnswersResponse"
        },
        "suggestSmartRepliesResponse": {
          "$ref": "GoogleCloudDialogflowV2SuggestSmartRepliesResponse",
          "description": "SuggestSmartRepliesResponse if request is for SMART_REPLY."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1SessionEntityType": {
      "id": "GoogleCloudDialogflowCxV3beta1SessionEntityType",
      "properties": {
        "entityOverrideMode": {
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "The collection of session entities overrides the collection of entities in the corresponding custom entity type.",
            "The collection of session entities extends the collection of entities in the corresponding custom entity type. Note: Even in this override mode calls to `ListSessionEntityTypes`, `GetSessionEntityType`, `CreateSessionEntityType` and `UpdateSessionEntityType` only return the additional entities added in this session entity type. If you want to get the supplemented list, please call EntityTypes.GetEntityType on the custom entity type and merge."
          ],
          "enum": [
            "ENTITY_OVERRIDE_MODE_UNSPECIFIED",
            "ENTITY_OVERRIDE_MODE_OVERRIDE",
            "ENTITY_OVERRIDE_MODE_SUPPLEMENT"
          ],
          "description": "Required. Indicates whether the additional data should override or supplement the custom entity type definition.",
          "type": "string"
        },
        "entities": {
          "type": "array",
          "description": "Required. The collection of entities to override or supplement the custom entity type.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1EntityTypeEntity"
          }
        },
        "name": {
          "description": "Required. The unique identifier of the session entity type. Format: `projects//locations//agents//sessions//entityTypes/` or `projects//locations//agents//environments//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Session entity types are referred to as **User** entity types and are entities that are built for an individual user such as favorites, preferences, playlists, and so on. You can redefine a session entity type at the session level to extend or replace a custom entity type at the user session level (we refer to the entity types defined at the agent level as \"custom entity types\"). Note: session entity types apply to all queries, regardless of the language. For more information about entity types, see the [Dialogflow documentation](https://cloud.google.com/dialogflow/docs/entities-overview)."
    },
    "GoogleCloudDialogflowCxV3InputAudioConfig": {
      "description": "Instructs the speech recognizer on how to process the audio content.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3InputAudioConfig",
      "properties": {
        "model": {
          "type": "string",
          "description": "Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details."
        },
        "enableWordInfo": {
          "type": "boolean",
          "description": "Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information."
        },
        "modelVariant": {
          "enumDescriptions": [
            "No model variant specified. In this case Dialogflow defaults to USE_BEST_AVAILABLE.",
            "Use the best available variant of the Speech model that the caller is eligible for. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible for enhanced models.",
            "Use standard model variant even if an enhanced model is available. See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) for details about enhanced models.",
            "Use an enhanced model variant: * If an enhanced variant does not exist for the given model and request language, Dialogflow falls back to the standard variant. The [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) describes which models have enhanced variants. * If the API caller isn't eligible for enhanced models, Dialogflow returns an error. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible."
          ],
          "description": "Optional. Which variant of the Speech model to use.",
          "enum": [
            "SPEECH_MODEL_VARIANT_UNSPECIFIED",
            "USE_BEST_AVAILABLE",
            "USE_STANDARD",
            "USE_ENHANCED"
          ],
          "type": "string"
        },
        "sampleRateHertz": {
          "description": "Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.",
          "format": "int32",
          "type": "integer"
        },
        "singleUtterance": {
          "type": "boolean",
          "description": "Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods."
        },
        "phraseHints": {
          "description": "Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "audioEncoding": {
          "enum": [
            "AUDIO_ENCODING_UNSPECIFIED",
            "AUDIO_ENCODING_LINEAR_16",
            "AUDIO_ENCODING_FLAC",
            "AUDIO_ENCODING_MULAW",
            "AUDIO_ENCODING_AMR",
            "AUDIO_ENCODING_AMR_WB",
            "AUDIO_ENCODING_OGG_OPUS",
            "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE"
          ],
          "type": "string",
          "description": "Required. Audio encoding of the audio content to process.",
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM).",
            "[`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio Codec) is the recommended encoding because it is lossless (therefore recognition is not compromised) and requires only about half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are supported.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.",
            "Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.",
            "Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.",
            "Opus encoded audio frames in Ogg container ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be 16000.",
            "Although the use of lossy encodings is not recommended, if a very low bitrate encoding is required, `OGG_OPUS` is highly preferred over Speex encoding. The [Speex](https://speex.org/) encoding supported by Dialogflow API has a header byte in each block, as in MIME type `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex encoding defined in [RFC 5574](https://tools.ietf.org/html/rfc5574). The stream is a sequence of blocks, one block per RTP packet. Each block starts with a byte containing the length of the block, in bytes, followed by one or more frames of Speex data, padded to an integral number of bytes (octets) as specified in RFC 5574. In other words, each RTP header is replaced with a single byte containing the block length. Only Speex wideband is supported. `sample_rate_hertz` must be 16000."
          ]
        }
      }
    },
    "GoogleCloudDialogflowV2beta1ImportDocumentsResponse": {
      "id": "GoogleCloudDialogflowV2beta1ImportDocumentsResponse",
      "properties": {
        "warnings": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Includes details about skipped documents or any other warnings.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response message for Documents.ImportDocuments."
    },
    "GoogleCloudDialogflowCxV3beta1CompareVersionsRequest": {
      "id": "GoogleCloudDialogflowCxV3beta1CompareVersionsRequest",
      "description": "The request message for Versions.CompareVersions.",
      "properties": {
        "targetVersion": {
          "type": "string",
          "description": "Required. Name of the target flow version to compare with the base version. Use version ID `0` to indicate the draft version of the specified flow. Format: `projects//locations//agents//flows//versions/`."
        },
        "languageCode": {
          "description": "The language to compare the flow versions for. If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion",
      "properties": {
        "uri": {
          "description": "Required. The URI of the app or site to open when the user taps the suggestion chip.",
          "type": "string"
        },
        "destinationName": {
          "description": "Required. The name of the app or site this chip is linking to.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The suggestion chip message that allows the user to jump out to the app or website associated with this agent."
    },
    "GoogleCloudDialogflowV2beta1ExportOperationMetadata": {
      "description": "Metadata related to the Export Data Operations (e.g. ExportDocument).",
      "id": "GoogleCloudDialogflowV2beta1ExportOperationMetadata",
      "type": "object",
      "properties": {
        "exportedGcsDestination": {
          "$ref": "GoogleCloudDialogflowV2beta1GcsDestination",
          "description": "Cloud Storage file path of the exported data."
        }
      }
    },
    "GoogleCloudDialogflowCxV3ResponseMessagePlayAudio": {
      "description": "Specifies an audio clip to be played by the client as part of the response.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ResponseMessagePlayAudio",
      "properties": {
        "audioUri": {
          "description": "Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.",
          "type": "string"
        },
        "allowPlaybackInterruption": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ListIntentsResponse": {
      "id": "GoogleCloudDialogflowCxV3beta1ListIntentsResponse",
      "properties": {
        "intents": {
          "description": "The list of intents. There will be a maximum number of items returned based on the page_size field in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1Intent"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "description": "The response message for Intents.ListIntents.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer": {
      "type": "object",
      "properties": {
        "matchConfidence": {
          "description": "The system's confidence score that this Knowledge answer is a good match for this conversational query. The range is from 0.0 (completely uncertain) to 1.0 (completely certain). Note: The confidence score is likely to vary somewhat (possibly even for identical requests), as the underlying model is under constant improvement. It may be deprecated in the future. We recommend using `match_confidence_level` which should be generally more stable.",
          "format": "float",
          "type": "number"
        },
        "matchConfidenceLevel": {
          "type": "string",
          "description": "The system's confidence level that this knowledge answer is a good match for this conversational query. NOTE: The confidence level for a given `` pair may change without notice, as it depends on models that are constantly being improved. However, it will change less frequently than the confidence score below, and should be preferred for referencing the quality of an answer.",
          "enum": [
            "MATCH_CONFIDENCE_LEVEL_UNSPECIFIED",
            "LOW",
            "MEDIUM",
            "HIGH"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Indicates that the confidence is low.",
            "Indicates our confidence is medium.",
            "Indicates our confidence is high."
          ]
        },
        "source": {
          "type": "string",
          "description": "Indicates which Knowledge Document this answer was extracted from. Format: `projects//knowledgeBases//documents/`."
        },
        "answer": {
          "type": "string",
          "description": "The piece of text from the `source` knowledge base document that answers this conversational query."
        },
        "faqQuestion": {
          "type": "string",
          "description": "The corresponding FAQ question if the answer was extracted from a FAQ Document, empty otherwise."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer",
      "description": "An answer from Knowledge Connector."
    },
    "GoogleCloudDialogflowCxV3beta1ExportFlowRequest": {
      "type": "object",
      "description": "The request message for Flows.ExportFlow.",
      "properties": {
        "includeReferencedFlows": {
          "type": "boolean",
          "description": "Optional. Whether to export flows referenced by the specified flow."
        },
        "flowUri": {
          "type": "string",
          "description": "Optional. The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the flow to. The format of this URI must be `gs:///`. If left unspecified, the serialized flow is returned inline. Dialogflow performs a write operation for the Cloud Storage object on the caller's behalf, so your request authentication must have write permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage)."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ExportFlowRequest"
    },
    "GoogleCloudDialogflowV2CreateConversationDatasetOperationMetadata": {
      "type": "object",
      "properties": {
        "conversationDataset": {
          "type": "string",
          "description": "The resource name of the conversation dataset that will be created. Format: `projects//locations//conversationDatasets/`"
        }
      },
      "id": "GoogleCloudDialogflowV2CreateConversationDatasetOperationMetadata",
      "description": "Metadata for ConversationDatasets."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Required. The title of the button."
        },
        "openUriAction": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction",
          "description": "Required. Action to take when a user taps on the button."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton",
      "type": "object",
      "description": "The button object that appears at the bottom of a card."
    },
    "GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig": {
      "type": "object",
      "properties": {
        "service": {
          "description": "Required. The name of [Service Directory](https://cloud.google.com/service-directory) service. Format: `projects//locations//namespaces//services/`. `Location ID` of the service directory must be the same as the location of the agent.",
          "type": "string"
        },
        "genericWebService": {
          "description": "Generic Service configuration of this webhook.",
          "$ref": "GoogleCloudDialogflowCxV3WebhookGenericWebService"
        }
      },
      "id": "GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig",
      "description": "Represents configuration for a [Service Directory](https://cloud.google.com/service-directory) service."
    },
    "GoogleCloudDialogflowV2EventInput": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The unique identifier of the event."
        },
        "languageCode": {
          "description": "Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language. This field is ignored when used in the context of a WebhookResponse.followup_event_input field, because the language was already defined in the originating detect intent request.",
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "description": "The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2EventInput",
      "description": "Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `\"Hello #welcome_event.name! What can I do for you today?\"`."
    },
    "GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig": {
      "description": "Configuration for webhooks.",
      "id": "GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig",
      "properties": {
        "webhookOverrides": {
          "description": "The list of webhooks to override for the agent environment. The webhook must exist in the agent. You can override fields in `generic_web_service` and `service_directory`.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1Webhook"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ImportFlowRequest": {
      "id": "GoogleCloudDialogflowCxV3beta1ImportFlowRequest",
      "type": "object",
      "properties": {
        "flowContent": {
          "format": "byte",
          "description": "Uncompressed raw byte content for flow.",
          "type": "string"
        },
        "importOption": {
          "description": "Flow import mode. If not specified, `KEEP` is assumed.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified. Treated as `KEEP`.",
            "Always respect settings in exported flow content. It may cause a import failure if some settings (e.g. custom NLU) are not supported in the agent to import into.",
            "Fallback to default settings if some settings are not supported in the agent to import into. E.g. Standard NLU will be used if custom NLU is not available."
          ],
          "enum": [
            "IMPORT_OPTION_UNSPECIFIED",
            "KEEP",
            "FALLBACK"
          ]
        },
        "flowUri": {
          "description": "The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to import flow from. The format of this URI must be `gs:///`. Dialogflow performs a read operation for the Cloud Storage object on the caller's behalf, so your request authentication must have read permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).",
          "type": "string"
        }
      },
      "description": "The request message for Flows.ImportFlow."
    },
    "GoogleCloudDialogflowCxV3ResponseMessage": {
      "description": "Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.",
      "id": "GoogleCloudDialogflowCxV3ResponseMessage",
      "properties": {
        "outputAudioText": {
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText",
          "description": "A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message."
        },
        "mixedAudio": {
          "description": "Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.",
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageMixedAudio",
          "readOnly": true
        },
        "text": {
          "description": "Returns a text response.",
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageText"
        },
        "playAudio": {
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessagePlayAudio",
          "description": "Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way."
        },
        "payload": {
          "type": "object",
          "description": "Returns a response containing a custom, platform-specific payload.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "conversationSuccess": {
          "description": "Indicates that the conversation succeeded.",
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess"
        },
        "liveAgentHandoff": {
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff",
          "description": "Hands off conversation to a human agent."
        },
        "endInteraction": {
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageEndInteraction",
          "description": "Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.",
          "readOnly": true
        },
        "telephonyTransferCall": {
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall",
          "description": "A signal that the client should transfer the phone call connected to this agent to a third-party endpoint."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3TestError": {
      "type": "object",
      "description": "Error info for running a test.",
      "id": "GoogleCloudDialogflowCxV3TestError",
      "properties": {
        "testTime": {
          "description": "The timestamp when the test was completed.",
          "type": "string",
          "format": "google-datetime"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status associated with the test."
        },
        "testCase": {
          "type": "string",
          "description": "The test case resource name."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageListSelectItem": {
      "properties": {
        "image": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage",
          "description": "Optional. The image to display."
        },
        "title": {
          "type": "string",
          "description": "Required. The title of the list item."
        },
        "description": {
          "description": "Optional. The main text describing the item.",
          "type": "string"
        },
        "info": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo",
          "description": "Required. Additional information about this option."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageListSelectItem",
      "description": "An item in the list."
    },
    "GoogleCloudDialogflowV2Intent": {
      "description": "An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification. For more information, see the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview).",
      "type": "object",
      "properties": {
        "endInteraction": {
          "description": "Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.",
          "type": "boolean"
        },
        "resetContexts": {
          "description": "Optional. Indicates whether to delete all contexts in the current session when this intent is matched.",
          "type": "boolean"
        },
        "mlDisabled": {
          "type": "boolean",
          "description": "Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off."
        },
        "trainingPhrases": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentTrainingPhrase"
          },
          "description": "Optional. The collection of examples that the agent is trained on.",
          "type": "array"
        },
        "name": {
          "description": "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`.",
          "type": "string"
        },
        "parentFollowupIntentName": {
          "description": "Read-only after creation. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`.",
          "type": "string"
        },
        "events": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters."
        },
        "rootFollowupIntentName": {
          "description": "Output only. Read-only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. We populate this field only in the output. Format: `projects//agent/intents/`.",
          "readOnly": true,
          "type": "string"
        },
        "parameters": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentParameter"
          },
          "type": "array",
          "description": "Optional. The collection of parameters associated with the intent."
        },
        "isFallback": {
          "type": "boolean",
          "description": "Optional. Indicates whether this is a fallback intent."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The name of this intent."
        },
        "followupIntentInfo": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentFollowupIntentInfo"
          },
          "description": "Output only. Read-only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output.",
          "readOnly": true,
          "type": "array"
        },
        "priority": {
          "format": "int32",
          "description": "Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.",
          "type": "integer"
        },
        "liveAgentHandoff": {
          "type": "boolean",
          "description": "Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false."
        },
        "defaultResponsePlatforms": {
          "type": "array",
          "description": "Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).",
          "items": {
            "enumDescriptions": [
              "Default platform.",
              "Facebook.",
              "Slack.",
              "Telegram.",
              "Kik.",
              "Skype.",
              "Line.",
              "Viber.",
              "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
              "Google Hangouts."
            ],
            "type": "string",
            "enum": [
              "PLATFORM_UNSPECIFIED",
              "FACEBOOK",
              "SLACK",
              "TELEGRAM",
              "KIK",
              "SKYPE",
              "LINE",
              "VIBER",
              "ACTIONS_ON_GOOGLE",
              "GOOGLE_HANGOUTS"
            ]
          }
        },
        "outputContexts": {
          "type": "array",
          "description": "Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          }
        },
        "inputContextNames": {
          "description": "Optional. The list of context names required for this intent to be triggered. Format: `projects//agent/sessions/-/contexts/`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "type": "string",
          "description": "Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces."
        },
        "webhookState": {
          "description": "Optional. Indicates whether webhooks are enabled for the intent.",
          "enumDescriptions": [
            "Webhook is disabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent. Also, each slot filling prompt is forwarded to the webhook."
          ],
          "type": "string",
          "enum": [
            "WEBHOOK_STATE_UNSPECIFIED",
            "WEBHOOK_STATE_ENABLED",
            "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"
          ]
        },
        "messages": {
          "description": "Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessage"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowV2Intent"
    },
    "GoogleCloudDialogflowV2beta1AnnotatedMessagePart": {
      "type": "object",
      "properties": {
        "formattedValue": {
          "description": "Optional. The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for a system entity of type `@sys.unit-currency`, this may contain: { \"amount\": 5, \"currency\": \"USD\" } ",
          "type": "any"
        },
        "text": {
          "type": "string",
          "description": "Required. A part of a message possibly annotated with an entity."
        },
        "entityType": {
          "type": "string",
          "description": "Optional. The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity."
        }
      },
      "description": "Represents a part of a message possibly annotated with an entity. The part can be an entity or purely a part of the message between two entities or message start/end.",
      "id": "GoogleCloudDialogflowV2beta1AnnotatedMessagePart"
    },
    "GoogleCloudDialogflowCxV3QueryInput": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3QueryInput",
      "description": "Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered. ",
      "properties": {
        "audio": {
          "$ref": "GoogleCloudDialogflowCxV3AudioInput",
          "description": "The natural language speech audio to be processed."
        },
        "event": {
          "description": "The event to be triggered.",
          "$ref": "GoogleCloudDialogflowCxV3EventInput"
        },
        "languageCode": {
          "type": "string",
          "description": "Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language."
        },
        "intent": {
          "$ref": "GoogleCloudDialogflowCxV3IntentInput",
          "description": "The intent to be triggered."
        },
        "text": {
          "$ref": "GoogleCloudDialogflowCxV3TextInput",
          "description": "The natural language text to be processed."
        },
        "dtmf": {
          "description": "The DTMF event to be handled.",
          "$ref": "GoogleCloudDialogflowCxV3DtmfInput"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo": {
      "properties": {
        "justCollected": {
          "description": "Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just collected on the last conversation turn.",
          "type": "boolean"
        },
        "required": {
          "description": "Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.",
          "type": "boolean"
        },
        "state": {
          "type": "string",
          "description": "Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This field can be set to INVALID by the webhook to invalidate the parameter; other values set by the webhook will be ignored.",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Indicates that the parameter does not have a value.",
            "Indicates that the parameter value is invalid. This field can be used by the webhook to invalidate the parameter and ask the server to collect it from the user again.",
            "Indicates that the parameter has a value."
          ],
          "enum": [
            "PARAMETER_STATE_UNSPECIFIED",
            "EMPTY",
            "INVALID",
            "FILLED"
          ]
        },
        "value": {
          "type": "any",
          "description": "Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be set by the webhook to change the parameter value."
        },
        "displayName": {
          "description": "Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the parameter, unique within the form. This field cannot be modified by the webhook.",
          "type": "string"
        }
      },
      "description": "Represents parameter information.",
      "id": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo",
      "type": "object"
    },
    "GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata": {
      "description": "Metadata for a ConversationProfile.ClearSuggestionFeatureConfig operation.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Timestamp whe the request was created. The time is measured on server side."
        },
        "conversationProfile": {
          "type": "string",
          "description": "The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`"
        },
        "participantRole": {
          "type": "string",
          "description": "Required. The participant role to remove the suggestion feature config. Only HUMAN_AGENT or END_USER can be used.",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER"
          ],
          "enumDescriptions": [
            "Participant role not set.",
            "Participant is a human agent.",
            "Participant is an automated agent, such as a Dialogflow agent.",
            "Participant is an end user that has called or chatted with Dialogflow services."
          ]
        },
        "suggestionFeatureType": {
          "type": "string",
          "description": "Required. The type of the suggestion feature to remove.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "ARTICLE_SUGGESTION",
            "FAQ",
            "SMART_REPLY"
          ],
          "enumDescriptions": [
            "Unspecified feature type.",
            "Run article suggestion model for chat.",
            "Run FAQ model for chat.",
            "Run smart reply model for chat."
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata"
    },
    "GoogleCloudDialogflowCxV3beta1DeployFlowResponse": {
      "type": "object",
      "description": "The response message for Environments.DeployFlow.",
      "id": "GoogleCloudDialogflowCxV3beta1DeployFlowResponse",
      "properties": {
        "environment": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Environment",
          "description": "The updated environment where the flow is deployed."
        },
        "deployment": {
          "description": "The name of the flow version deployment. Format: `projects//locations//agents// environments//deployments/`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageImage": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageImage",
      "description": "The image response message.",
      "properties": {
        "imageUri": {
          "description": "Optional. The public URI to an image file.",
          "type": "string"
        },
        "accessibilityText": {
          "type": "string",
          "description": "A text description of the image to be used for accessibility, e.g., screen readers. Required if image_uri is set for CarouselSelect."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ImportTestCasesMetadata": {
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors for failed test cases.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestCaseError"
          }
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ImportTestCasesMetadata",
      "description": "Metadata returned for the TestCases.ImportTestCases long running operation.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3UpdateDocumentOperationMetadata": {
      "description": "Metadata for UpdateDocument operation.",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3UpdateDocumentOperationMetadata"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent": {
      "type": "object",
      "description": "Rich Business Messaging (RBM) Card content",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent",
      "properties": {
        "suggestions": {
          "description": "Optional. List of suggestions to include in the card.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion"
          },
          "type": "array"
        },
        "media": {
          "description": "Optional. However at least one of the title, description or media must be set. Media (image, GIF or a video) to include in the card.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the card (at most 2000 bytes). At least one of the title, description or media must be set."
        },
        "title": {
          "description": "Optional. Title of the card (at most 200 bytes). At least one of the title, description or media must be set.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ListSessionEntityTypesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "sessionEntityTypes": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1SessionEntityType"
          },
          "description": "The list of session entity types. There will be a maximum number of items returned based on the page_size field in the request."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ListSessionEntityTypesResponse",
      "description": "The response message for SessionEntityTypes.ListSessionEntityTypes."
    },
    "GoogleCloudDialogflowV2ConversationModel": {
      "id": "GoogleCloudDialogflowV2ConversationModel",
      "type": "object",
      "description": "Represents a conversation model.",
      "properties": {
        "smartReplyModelMetadata": {
          "description": "Metadata for smart reply models.",
          "$ref": "GoogleCloudDialogflowV2SmartReplyModelMetadata"
        },
        "languageCode": {
          "type": "string",
          "description": "Language code for the conversation model. If not specified, the language is en-US. Language at ConversationModel should be set for all non en-us languages. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\"."
        },
        "state": {
          "description": "Output only. State of the model. A model can only serve prediction requests after it gets deployed.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UNDEPLOYED",
            "DEPLOYING",
            "DEPLOYED",
            "UNDEPLOYING",
            "DELETING",
            "FAILED",
            "PENDING"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Should not be used, an un-set enum has this value by default.",
            "Model being created.",
            "Model is not deployed but ready to deploy.",
            "Model is deploying.",
            "Model is deployed and ready to use.",
            "Model is undeploying.",
            "Model is deleting.",
            "Model is in error state. Not ready to deploy and use.",
            "Model is being created but the training has not started, The model may remain in this state until there is enough capacity to start training."
          ],
          "type": "string"
        },
        "datasets": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2InputDataset"
          },
          "description": "Required. Datasets used to create model."
        },
        "name": {
          "description": "ConversationModel resource name. Format: `projects//conversationModels/`",
          "type": "string"
        },
        "displayName": {
          "description": "Required. The display name of the model. At most 64 bytes long.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Creation time of this model.",
          "type": "string"
        },
        "articleSuggestionModelMetadata": {
          "$ref": "GoogleCloudDialogflowV2ArticleSuggestionModelMetadata",
          "description": "Metadata for article suggestion models."
        }
      }
    },
    "GoogleCloudDialogflowV2UndeployConversationModelOperationMetadata": {
      "type": "object",
      "description": "Metadata for a ConversationModels.UndeployConversationModel operation.",
      "properties": {
        "conversationModel": {
          "description": "The resource name of the conversation model. Format: `projects//conversationModels/`",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Timestamp when the request to undeploy conversation model was submitted. The time is measured on server side."
        }
      },
      "id": "GoogleCloudDialogflowV2UndeployConversationModelOperationMetadata"
    },
    "GoogleCloudDialogflowCxV3beta1TestConfig": {
      "type": "object",
      "description": "Represents configurations for a test case.",
      "properties": {
        "trackingParameters": {
          "type": "array",
          "description": "Session parameters to be compared when calculating differences.",
          "items": {
            "type": "string"
          }
        },
        "flow": {
          "type": "string",
          "description": "Flow name to start the test case with. Format: `projects//locations//agents//flows/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow."
        },
        "page": {
          "description": "The page to start the test case with. Format: `projects//locations//agents//flows//pages/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1TestConfig"
    },
    "GoogleCloudDialogflowCxV3beta1BatchDeleteTestCasesRequest": {
      "type": "object",
      "description": "The request message for TestCases.BatchDeleteTestCases.",
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. Format of test case names: `projects//locations/ /agents//testCases/`."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1BatchDeleteTestCasesRequest"
    },
    "GoogleCloudDialogflowV2beta1WebhookRequest": {
      "type": "object",
      "properties": {
        "responseId": {
          "type": "string",
          "description": "The unique identifier of the response. Contains the same value as `[Streaming]DetectIntentResponse.response_id`."
        },
        "originalDetectIntentRequest": {
          "description": "Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call.",
          "$ref": "GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest"
        },
        "queryResult": {
          "description": "The result of the conversational query or event processing. Contains the same value as `[Streaming]DetectIntentResponse.query_result`.",
          "$ref": "GoogleCloudDialogflowV2beta1QueryResult"
        },
        "alternativeQueryResults": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1QueryResult"
          },
          "type": "array",
          "description": "Alternative query results from KnowledgeService."
        },
        "session": {
          "type": "string",
          "description": "The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook implementation. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, - `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`,"
        }
      },
      "description": "The request message for a webhook call.",
      "id": "GoogleCloudDialogflowV2beta1WebhookRequest"
    },
    "GoogleCloudDialogflowCxV3beta1LoadVersionRequest": {
      "properties": {
        "allowOverrideAgentResources": {
          "type": "boolean",
          "description": "This field is used to prevent accidental overwrite of other agent resources, which can potentially impact other flow's behavior. If `allow_override_agent_resources` is false, conflicted agent-level resources will not be overridden (i.e. intents, entities, webhooks)."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1LoadVersionRequest",
      "description": "The request message for Versions.LoadVersion."
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio": {
      "description": "Specifies an audio clip to be played by the client as part of the response.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio",
      "properties": {
        "audioUri": {
          "type": "string",
          "description": "Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it."
        },
        "allowPlaybackInterruption": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request."
        }
      }
    },
    "GoogleCloudDialogflowV2OriginalDetectIntentRequest": {
      "properties": {
        "version": {
          "description": "Optional. The version of the protocol used for this request. This field is AoG-specific.",
          "type": "string"
        },
        "payload": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: { \"telephony\": { \"caller_id\": \"+18558363987\" } } Note: The caller ID field (`caller_id`) will be redacted for Trial Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition agents."
        },
        "source": {
          "description": "The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2OriginalDetectIntentRequest",
      "description": "Represents the contents of the original request that was passed to the `[Streaming]DetectIntent` call.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageCarouselSelectItem": {
      "type": "object",
      "description": "An item in the carousel.",
      "id": "GoogleCloudDialogflowV2IntentMessageCarouselSelectItem",
      "properties": {
        "image": {
          "description": "Optional. The image to display.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        },
        "title": {
          "description": "Required. Title of the carousel item.",
          "type": "string"
        },
        "description": {
          "description": "Optional. The body text of the card.",
          "type": "string"
        },
        "info": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageSelectItemInfo",
          "description": "Required. Additional info about the option item."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ExportAgentRequest": {
      "properties": {
        "environment": {
          "description": "Optional. Environment name. If not set, draft environment is assumed. Format: `projects//locations//agents//environments/`.",
          "type": "string"
        },
        "dataFormat": {
          "enumDescriptions": [
            "Unspecified format.",
            "Agent content will be exported as raw bytes."
          ],
          "type": "string",
          "enum": [
            "DATA_FORMAT_UNSPECIFIED",
            "BLOB"
          ],
          "description": "Optional. The data format of the exported agent. If not specified, `BLOB` is assumed."
        },
        "agentUri": {
          "description": "Optional. The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the agent to. The format of this URI must be `gs:///`. If left unspecified, the serialized agent is returned inline. Dialogflow performs a write operation for the Cloud Storage object on the caller's behalf, so your request authentication must have write permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ExportAgentRequest",
      "description": "The request message for Agents.ExportAgent."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion",
      "description": "Rich Business Messaging (RBM) suggestion. Suggestions allow user to easily select/click a predefined response or perform an action (like opening a web uri).",
      "type": "object",
      "properties": {
        "reply": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply",
          "description": "Predefined replies for user to select instead of typing"
        },
        "action": {
          "description": "Predefined client side actions that user can choose",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. The text for this part."
        },
        "parameterId": {
          "type": "string",
          "description": "The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart",
      "description": "Represents a part of a training phrase."
    },
    "GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse": {
      "id": "GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse",
      "properties": {
        "entityTypes": {
          "type": "array",
          "description": "The collection of updated or created entity types.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1EntityType"
          }
        }
      },
      "description": "The response message for EntityTypes.BatchUpdateEntityTypes.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3DeleteDocumentOperationMetadata": {
      "description": "Metadata for DeleteDocument operation.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3DeleteDocumentOperationMetadata",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      }
    },
    "GoogleCloudDialogflowCxV3TestCaseResult": {
      "type": "object",
      "description": "Represents a result from running a test case in an agent environment.",
      "id": "GoogleCloudDialogflowCxV3TestCaseResult",
      "properties": {
        "testResult": {
          "type": "string",
          "enumDescriptions": [
            "Not specified. Should never be used.",
            "The test passed.",
            "The test did not pass."
          ],
          "enum": [
            "TEST_RESULT_UNSPECIFIED",
            "PASSED",
            "FAILED"
          ],
          "description": "Whether the test case passed in the agent environment."
        },
        "testTime": {
          "type": "string",
          "description": "The time that the test was run.",
          "format": "google-datetime"
        },
        "conversationTurns": {
          "type": "array",
          "description": "The conversation turns uttered during the test case replay in chronological order.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ConversationTurn"
          }
        },
        "environment": {
          "description": "Environment where the test was run. If not set, it indicates the draft environment.",
          "type": "string"
        },
        "name": {
          "description": "The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2FaqAnswer": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2FaqAnswer",
      "description": "Represents answer from \"frequently asked questions\".",
      "properties": {
        "source": {
          "description": "Indicates which Knowledge Document this answer was extracted from. Format: `projects//locations//agent/knowledgeBases//documents/`.",
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "description": "The system's confidence score that this Knowledge answer is a good match for this conversational query, range from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float"
        },
        "question": {
          "type": "string",
          "description": "The corresponding FAQ question."
        },
        "answer": {
          "description": "The piece of text from the `source` knowledge base document.",
          "type": "string"
        },
        "answerRecord": {
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\"",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "description": "A map that contains metadata about the answer and the document from which it originates.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDialogflowV3alpha1UpdateDocumentOperationMetadata": {
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "description": "Metadata for UpdateDocument operation.",
      "id": "GoogleCloudDialogflowV3alpha1UpdateDocumentOperationMetadata",
      "type": "object"
    },
    "GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata": {
      "id": "GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata",
      "properties": {
        "conversationProfile": {
          "type": "string",
          "description": "The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`"
        },
        "participantRole": {
          "type": "string",
          "description": "Required. The participant role to add or update the suggestion feature config. Only HUMAN_AGENT or END_USER can be used.",
          "enumDescriptions": [
            "Participant role not set.",
            "Participant is a human agent.",
            "Participant is an automated agent, such as a Dialogflow agent.",
            "Participant is an end user that has called or chatted with Dialogflow services."
          ],
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER"
          ]
        },
        "suggestionFeatureType": {
          "type": "string",
          "description": "Required. The type of the suggestion feature to add or update.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "ARTICLE_SUGGESTION",
            "FAQ",
            "SMART_REPLY"
          ],
          "enumDescriptions": [
            "Unspecified feature type.",
            "Run article suggestion model for chat.",
            "Run FAQ model for chat.",
            "Run smart reply model for chat."
          ]
        },
        "createTime": {
          "description": "Timestamp whe the request was created. The time is measured on server side.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "Metadata for a ConversationProfile.SetSuggestionFeatureConfig operation."
    },
    "GoogleCloudDialogflowV2IntentMessageCard": {
      "id": "GoogleCloudDialogflowV2IntentMessageCard",
      "type": "object",
      "properties": {
        "subtitle": {
          "type": "string",
          "description": "Optional. The subtitle of the card."
        },
        "title": {
          "description": "Optional. The title of the card.",
          "type": "string"
        },
        "buttons": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageCardButton"
          },
          "description": "Optional. The collection of card buttons."
        },
        "imageUri": {
          "description": "Optional. The public URI to an image file for the card.",
          "type": "string"
        }
      },
      "description": "The card response message."
    },
    "GoogleCloudDialogflowV2beta1EventInput": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1EventInput",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language. This field is ignored when used in the context of a WebhookResponse.followup_event_input field, because the language was already defined in the originating detect intent request."
        },
        "name": {
          "type": "string",
          "description": "Required. The unique identifier of the event."
        },
        "parameters": {
          "type": "object",
          "description": "The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        }
      },
      "description": "Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `\"Hello #welcome_event.name! What can I do for you today?\"`."
    },
    "GoogleCloudDialogflowCxV3beta1Changelog": {
      "id": "GoogleCloudDialogflowCxV3beta1Changelog",
      "description": "Changelogs represents a change made to a given agent.",
      "properties": {
        "resource": {
          "description": "The affected resource name of the change.",
          "type": "string"
        },
        "type": {
          "description": "The affected resource type.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the changelog. Format: `projects//locations//agents//changelogs/`."
        },
        "action": {
          "description": "The action of the change.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The affected resource display name of the change."
        },
        "userEmail": {
          "description": "Email address of the authenticated user.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The timestamp of the change."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata": {
      "id": "GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata",
      "description": "Metadata for a ConversationProfile.ClearSuggestionFeatureConfig operation.",
      "properties": {
        "participantRole": {
          "description": "Required. The participant role to remove the suggestion feature config. Only HUMAN_AGENT or END_USER can be used.",
          "type": "string",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER"
          ],
          "enumDescriptions": [
            "Participant role not set.",
            "Participant is a human agent.",
            "Participant is an automated agent, such as a Dialogflow agent.",
            "Participant is an end user that has called or chatted with Dialogflow services."
          ]
        },
        "suggestionFeatureType": {
          "enumDescriptions": [
            "Unspecified feature type.",
            "Run article suggestion model for chat.",
            "Run FAQ model.",
            "Run smart reply model for chat."
          ],
          "description": "Required. The type of the suggestion feature to remove.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "ARTICLE_SUGGESTION",
            "FAQ",
            "SMART_REPLY"
          ],
          "type": "string"
        },
        "createTime": {
          "description": "Timestamp whe the request was created. The time is measured on server side.",
          "type": "string",
          "format": "google-datetime"
        },
        "conversationProfile": {
          "description": "The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2ImportConversationDataOperationResponse": {
      "type": "object",
      "description": "Response used for ConversationDatasets.ImportConversationData long running operation.",
      "id": "GoogleCloudDialogflowV2ImportConversationDataOperationResponse",
      "properties": {
        "importCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of conversations imported successfully."
        },
        "conversationDataset": {
          "type": "string",
          "description": "The resource name of the imported conversation dataset. Format: `projects//locations//conversationDatasets/`"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessage": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessage",
      "description": "Corresponds to the `Response` field in the Dialogflow console.",
      "properties": {
        "platform": {
          "enumDescriptions": [
            "Not specified.",
            "Facebook.",
            "Slack.",
            "Telegram.",
            "Kik.",
            "Skype.",
            "Line.",
            "Viber.",
            "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
            "Telephony Gateway.",
            "Google Hangouts."
          ],
          "description": "Optional. The platform that this message is intended for.",
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "FACEBOOK",
            "SLACK",
            "TELEGRAM",
            "KIK",
            "SKYPE",
            "LINE",
            "VIBER",
            "ACTIONS_ON_GOOGLE",
            "TELEPHONY",
            "GOOGLE_HANGOUTS"
          ],
          "type": "string"
        },
        "linkOutSuggestion": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion",
          "description": "Displays a link out suggestion chip for Actions on Google."
        },
        "suggestions": {
          "description": "Displays suggestion chips for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSuggestions"
        },
        "text": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageText",
          "description": "Returns a text response."
        },
        "mediaContent": {
          "description": "The media content card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageMediaContent"
        },
        "rbmText": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmText",
          "description": "Rich Business Messaging (RBM) text response. RBM allows businesses to send enriched and branded versions of SMS. See https://jibe.google.com/business-messaging."
        },
        "telephonyPlayAudio": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio",
          "description": "Plays audio from a file in Telephony Gateway."
        },
        "image": {
          "description": "Displays an image.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "basicCard": {
          "description": "Displays a basic card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCard"
        },
        "payload": {
          "type": "object",
          "description": "A custom platform-specific response.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "rbmCarouselRichCard": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard",
          "description": "Rich Business Messaging (RBM) carousel rich card response."
        },
        "card": {
          "description": "Displays a card.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCard"
        },
        "tableCard": {
          "description": "Table card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTableCard"
        },
        "browseCarouselCard": {
          "description": "Browse carousel card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard"
        },
        "carouselSelect": {
          "description": "Displays a carousel card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect"
        },
        "quickReplies": {
          "description": "Displays quick replies.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageQuickReplies"
        },
        "telephonySynthesizeSpeech": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech",
          "description": "Synthesizes speech in Telephony Gateway."
        },
        "rbmStandaloneRichCard": {
          "description": "Standalone Rich Business Messaging (RBM) rich card response.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard"
        },
        "listSelect": {
          "description": "Displays a list card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageListSelect"
        },
        "telephonyTransferCall": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall",
          "description": "Transfers the call in Telephony Gateway."
        },
        "simpleResponses": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses",
          "description": "Returns a voice or text-only response for Actions on Google."
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageColumnProperties": {
      "id": "GoogleCloudDialogflowV2IntentMessageColumnProperties",
      "properties": {
        "header": {
          "description": "Required. Column heading.",
          "type": "string"
        },
        "horizontalAlignment": {
          "enumDescriptions": [
            "Text is aligned to the leading edge of the column.",
            "Text is aligned to the leading edge of the column.",
            "Text is centered in the column.",
            "Text is aligned to the trailing edge of the column."
          ],
          "enum": [
            "HORIZONTAL_ALIGNMENT_UNSPECIFIED",
            "LEADING",
            "CENTER",
            "TRAILING"
          ],
          "description": "Optional. Defines text alignment for all cells in this column.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Column properties for TableCard."
    },
    "GoogleCloudDialogflowV2Context": {
      "properties": {
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value"
        },
        "name": {
          "type": "string",
          "description": "Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`"
        },
        "lifespanCount": {
          "type": "integer",
          "description": "Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if there are no matching queries.",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "Dialogflow contexts are similar to natural language context. If a person says to you \"they are orange\", you need context in order to understand what \"they\" is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent. Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts. For more information about context, see the [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).",
      "id": "GoogleCloudDialogflowV2Context"
    },
    "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesMetadata": {
      "id": "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesMetadata",
      "description": "Metadata returned for the TestCases.BatchRunTestCases long running operation.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "The test errors.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestError"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1StartExperimentRequest": {
      "id": "GoogleCloudDialogflowCxV3beta1StartExperimentRequest",
      "description": "The request message for Experiments.StartExperiment.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDialogflowV2AnnotatedMessagePart": {
      "properties": {
        "entityType": {
          "description": "The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity.",
          "type": "string"
        },
        "text": {
          "type": "string",
          "description": "A part of a message possibly annotated with an entity."
        },
        "formattedValue": {
          "description": "The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for a system entity of type `@sys.unit-currency`, this may contain: { \"amount\": 5, \"currency\": \"USD\" } ",
          "type": "any"
        }
      },
      "id": "GoogleCloudDialogflowV2AnnotatedMessagePart",
      "type": "object",
      "description": "Represents a part of a message possibly annotated with an entity. The part can be an entity or purely a part of the message between two entities or message start/end."
    },
    "GoogleCloudDialogflowCxV3beta1IntentInput": {
      "id": "GoogleCloudDialogflowCxV3beta1IntentInput",
      "properties": {
        "intent": {
          "description": "Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents the intent to trigger programmatically rather than as a result of natural language processing."
    },
    "GoogleCloudDialogflowCxV3WebhookRequestIntentInfo": {
      "description": "Represents intent information communicated to the webhook.",
      "id": "GoogleCloudDialogflowCxV3WebhookRequestIntentInfo",
      "type": "object",
      "properties": {
        "parameters": {
          "additionalProperties": {
            "$ref": "GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue"
          },
          "description": "Parameters identified as a result of intent matching. This is a map of the name of the identified parameter to the value of the parameter identified from the user's utterance. All parameters defined in the matched intent that are identified will be surfaced here.",
          "type": "object"
        },
        "displayName": {
          "type": "string",
          "description": "Always present. The display name of the last matched intent."
        },
        "lastMatchedIntent": {
          "type": "string",
          "description": "Always present. The unique identifier of the last matched intent. Format: `projects//locations//agents//intents/`."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "The confidence of the matched intent. Values range from 0.0 (completely uncertain) to 1.0 (completely certain)."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1Context": {
      "id": "GoogleCloudDialogflowV2beta1Context",
      "type": "object",
      "description": "Dialogflow contexts are similar to natural language context. If a person says to you \"they are orange\", you need context in order to understand what \"they\" is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent. Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts. For more information about context, see the [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).",
      "properties": {
        "parameters": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value"
        },
        "name": {
          "type": "string",
          "description": "Required. The unique identifier of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, - `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`"
        },
        "lifespanCount": {
          "type": "integer",
          "description": "Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if there are no matching queries.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDialogflowCxV3AudioInput": {
      "type": "object",
      "properties": {
        "audio": {
          "format": "byte",
          "description": "The natural language speech audio to be processed. A single request can contain up to 1 minute of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.",
          "type": "string"
        },
        "config": {
          "description": "Required. Instructs the speech recognizer how to process the speech audio.",
          "$ref": "GoogleCloudDialogflowCxV3InputAudioConfig"
        }
      },
      "description": "Represents the natural speech audio to be processed.",
      "id": "GoogleCloudDialogflowCxV3AudioInput"
    },
    "GoogleCloudDialogflowCxV3beta1ResourceName": {
      "properties": {
        "displayName": {
          "description": "Display name.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name."
        }
      },
      "type": "object",
      "description": "Resource name and display name.",
      "id": "GoogleCloudDialogflowCxV3beta1ResourceName"
    },
    "GoogleCloudDialogflowV2IntentMessageCarouselSelect": {
      "description": "The card for presenting a carousel of options to select from.",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageCarouselSelectItem"
          },
          "description": "Required. Carousel items."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageCarouselSelect"
    },
    "GoogleCloudDialogflowCxV3beta1RolloutConfigRolloutStep": {
      "description": "A single rollout step with specified traffic allocation.",
      "type": "object",
      "properties": {
        "minDuration": {
          "type": "string",
          "description": "The minimum time that this step should last. Should be longer than 1 hour. If not set, the default minimum duration for each step will be 1 hour.",
          "format": "google-duration"
        },
        "displayName": {
          "description": "The name of the rollout step;",
          "type": "string"
        },
        "trafficPercent": {
          "format": "int32",
          "description": "The percentage of traffic allocated to the flow version of this rollout step. (0%, 100%].",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1RolloutConfigRolloutStep"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig": {
      "properties": {
        "genericWebService": {
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookGenericWebService",
          "description": "Generic Service configuration of this webhook."
        },
        "service": {
          "type": "string",
          "description": "Required. The name of [Service Directory](https://cloud.google.com/service-directory) service. Format: `projects//locations//namespaces//services/`. `Location ID` of the service directory must be the same as the location of the agent."
        }
      },
      "type": "object",
      "description": "Represents configuration for a [Service Directory](https://cloud.google.com/service-directory) service.",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig"
    },
    "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase": {
      "properties": {
        "condition": {
          "description": "The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).",
          "type": "string"
        },
        "caseContent": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent"
          },
          "type": "array",
          "description": "A list of case content."
        }
      },
      "type": "object",
      "description": "Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively.",
      "id": "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase"
    },
    "GoogleCloudDialogflowV2beta1MessageAnnotation": {
      "id": "GoogleCloudDialogflowV2beta1MessageAnnotation",
      "properties": {
        "parts": {
          "description": "Optional. The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text].",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1AnnotatedMessagePart"
          }
        },
        "containEntities": {
          "type": "boolean",
          "description": "Required. Indicates whether the text message contains entities."
        }
      },
      "description": "Represents the result of annotation for the message.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2ImportConversationDataOperationMetadata": {
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Timestamp when import conversation data request was created. The time is measured on server side.",
          "format": "google-datetime",
          "type": "string"
        },
        "partialFailures": {
          "description": "Partial failures are failures that don't fail the whole long running operation, e.g. single files that couldn't be read.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "conversationDataset": {
          "description": "The resource name of the imported conversation dataset. Format: `projects//locations//conversationDatasets/`",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2ImportConversationDataOperationMetadata",
      "description": "Metadata for a ConversationDatasets.ImportConversationData operation."
    },
    "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata": {
      "properties": {
        "state": {
          "description": "Required. Output only. The current state of this operation.",
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ],
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata",
      "description": "Metadata in google::longrunning::Operation for Knowledge operations.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1Page": {
      "properties": {
        "entryFulfillment": {
          "description": "The fulfillment to call when the session is entering the page.",
          "$ref": "GoogleCloudDialogflowCxV3beta1Fulfillment"
        },
        "transitionRouteGroups": {
          "type": "array",
          "description": "Ordered list of `TransitionRouteGroups` associated with the page. Transition route groups must be unique within a page. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -\u003e page's transition route group -\u003e flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/`.",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`."
        },
        "eventHandlers": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1EventHandler"
          },
          "description": "Handlers associated with the page to handle events such as webhook errors, no match or no input.",
          "type": "array"
        },
        "transitionRoutes": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TransitionRoute"
          },
          "description": "A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified."
        },
        "form": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Form",
          "description": "The form associated with the page, used for collecting parameters relevant to the page."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the page, unique within the flow."
        }
      },
      "description": "A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1Page"
    },
    "GoogleCloudDialogflowCxV3Page": {
      "properties": {
        "eventHandlers": {
          "description": "Handlers associated with the page to handle events such as webhook errors, no match or no input.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3EventHandler"
          }
        },
        "transitionRoutes": {
          "description": "A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TransitionRoute"
          }
        },
        "entryFulfillment": {
          "$ref": "GoogleCloudDialogflowCxV3Fulfillment",
          "description": "The fulfillment to call when the session is entering the page."
        },
        "transitionRouteGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Ordered list of `TransitionRouteGroups` associated with the page. Transition route groups must be unique within a page. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -\u003e page's transition route group -\u003e flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/`."
        },
        "name": {
          "description": "The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. The human-readable name of the page, unique within the flow.",
          "type": "string"
        },
        "form": {
          "$ref": "GoogleCloudDialogflowCxV3Form",
          "description": "The form associated with the page, used for collecting parameters relevant to the page."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3Page",
      "description": "A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page)."
    },
    "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata": {
      "type": "object",
      "properties": {
        "state": {
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ],
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "description": "Required. Output only. The current state of this operation.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata",
      "description": "Metadata in google::longrunning::Operation for Knowledge operations."
    },
    "GoogleCloudDialogflowV2DeleteConversationDatasetOperationMetadata": {
      "type": "object",
      "description": "Metadata for ConversationDatasets.",
      "id": "GoogleCloudDialogflowV2DeleteConversationDatasetOperationMetadata",
      "properties": {}
    },
    "GoogleCloudDialogflowCxV3beta1DeploymentResult": {
      "type": "object",
      "description": "Result of the deployment.",
      "id": "GoogleCloudDialogflowCxV3beta1DeploymentResult",
      "properties": {
        "experiment": {
          "description": "The name of the experiment triggered by this deployment. Format: projects//locations//agents//environments//experiments/.",
          "type": "string"
        },
        "deploymentTestResults": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Results of test cases running before the deployment. Format: `projects//locations//agents//testCases//results/`."
        }
      }
    },
    "GoogleCloudDialogflowV2IntentParameter": {
      "id": "GoogleCloudDialogflowV2IntentParameter",
      "description": "Represents intent parameters.",
      "properties": {
        "defaultValue": {
          "description": "Optional. The default value to use when the `value` yields an empty result. Default values can be extracted from contexts by using the following syntax: `#context_name.parameter_name`.",
          "type": "string"
        },
        "name": {
          "description": "The unique identifier of this parameter.",
          "type": "string"
        },
        "prompts": {
          "description": "Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "entityTypeDisplayName": {
          "description": "Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the parameter is required, this must be provided.",
          "type": "string"
        },
        "value": {
          "description": "Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined as `$parameter_name.original`, - a parameter value from some context defined as `#context_name.parameter_name`.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The name of the parameter."
        },
        "isList": {
          "type": "boolean",
          "description": "Optional. Indicates whether the parameter represents a list of values."
        },
        "mandatory": {
          "description": "Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings": {
      "type": "object",
      "description": "Define behaviors on logging.",
      "id": "GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings",
      "properties": {
        "enableStackdriverLogging": {
          "description": "If true, StackDriver logging is currently enabled.",
          "type": "boolean"
        },
        "enableInteractionLogging": {
          "type": "boolean",
          "description": "If true, DF Interaction logging is currently enabled."
        }
      }
    },
    "GoogleCloudDialogflowCxV3ImportDocumentsOperationMetadata": {
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata"
        }
      },
      "id": "GoogleCloudDialogflowCxV3ImportDocumentsOperationMetadata",
      "description": "Metadata for ImportDocuments operation.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageListSelectItem": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. The main text describing the item."
        },
        "image": {
          "description": "Optional. The image to display.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        },
        "info": {
          "description": "Required. Additional information about this option.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageSelectItemInfo"
        },
        "title": {
          "type": "string",
          "description": "Required. The title of the list item."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageListSelectItem",
      "type": "object",
      "description": "An item in the list."
    },
    "GoogleCloudDialogflowCxV3beta1PageInfoFormInfo": {
      "id": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfo",
      "description": "Represents form information.",
      "type": "object",
      "properties": {
        "parameterInfo": {
          "description": "Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note that the webhook cannot add or remove any form parameter.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageTableCard": {
      "type": "object",
      "description": "Table card for Actions on Google.",
      "properties": {
        "image": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "Optional. Image which should be displayed on the card."
        },
        "buttons": {
          "description": "Optional. List of buttons for the card.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCardButton"
          }
        },
        "rows": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageTableCardRow"
          },
          "type": "array",
          "description": "Optional. Rows in this table of data."
        },
        "title": {
          "type": "string",
          "description": "Required. Title of the card."
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. Subtitle to the title."
        },
        "columnProperties": {
          "type": "array",
          "description": "Optional. Display properties for the columns in this table.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageColumnProperties"
          }
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageTableCard"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageText": {
      "description": "The text response message.",
      "properties": {
        "text": {
          "type": "array",
          "description": "Optional. The collection of the agent's responses.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageText",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1TextInput": {
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters."
        }
      },
      "description": "Represents the natural language text to be processed.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1TextInput"
    },
    "GoogleCloudDialogflowCxV3RunTestCaseMetadata": {
      "description": "Metadata returned for the TestCases.RunTestCase long running operation. This message currently has no fields.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3RunTestCaseMetadata",
      "properties": {}
    },
    "GoogleCloudDialogflowCxV3beta1ValidateAgentRequest": {
      "type": "object",
      "description": "The request message for Agents.ValidateAgent.",
      "id": "GoogleCloudDialogflowCxV3beta1ValidateAgentRequest",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "If not specified, the agent's default language is used."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1QueryResult": {
      "properties": {
        "intent": {
          "description": "The Intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name` and `display_name`. This field is deprecated, please use QueryResult.match instead.",
          "$ref": "GoogleCloudDialogflowCxV3beta1Intent"
        },
        "triggerIntent": {
          "description": "If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`.",
          "type": "string"
        },
        "dtmf": {
          "$ref": "GoogleCloudDialogflowCxV3beta1DtmfInput",
          "description": "If a DTMF was provided as input, this field will contain a copy of the DTMFInput."
        },
        "currentPage": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Page",
          "description": "The current Page. Some, not all fields are filled in this message, including but not limited to `name` and `display_name`."
        },
        "webhookPayloads": {
          "description": "The list of webhook payload in WebhookResponse.payload, in the order of call sequence. If some webhook call fails or doesn't return any payload, an empty `Struct` would be used instead.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            }
          }
        },
        "parameters": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "The collected session parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value.",
          "type": "object"
        },
        "intentDetectionConfidence": {
          "description": "The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. This field is deprecated, please use QueryResult.match instead.",
          "format": "float",
          "type": "number"
        },
        "languageCode": {
          "type": "string",
          "description": "The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes."
        },
        "sentimentAnalysisResult": {
          "description": "The sentiment analyss result, which depends on `analyze_query_text_sentiment`, specified in the request.",
          "$ref": "GoogleCloudDialogflowCxV3beta1SentimentAnalysisResult"
        },
        "responseMessages": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage"
          },
          "type": "array",
          "description": "The list of rich messages returned to the client. Responses vary from simple text messages to more sophisticated, structured payloads used to drive complex logic."
        },
        "diagnosticInfo": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The free-form diagnostic info. For example, this field could contain webhook call latency. The fields of this data can change without notice, so you should not write code that depends on its structure. One of the fields is called \"Alternative Matched Intents\", which may aid with debugging. The following describes these intent results: - The list is empty if no intent was matched to end-user input. - Only intents that are referenced in the currently active flow are included. - The matched intent is included. - Other intents that could have matched end-user input, but did not match because they are referenced by intent routes that are out of [scope](https://cloud.google.com/dialogflow/cx/docs/concept/handler#scope), are included. - Other intents referenced by intent routes in scope that matched end-user input, but had a lower confidence score.",
          "type": "object"
        },
        "match": {
          "description": "Intent match result, could be an intent or an event.",
          "$ref": "GoogleCloudDialogflowCxV3beta1Match"
        },
        "webhookStatuses": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "The list of webhook call status in the order of call sequence."
        },
        "transcript": {
          "description": "If natural language speech audio was provided as input, this field will contain the transcript for the audio.",
          "type": "string"
        },
        "triggerEvent": {
          "type": "string",
          "description": "If an event was provided as input, this field will contain the name of the event."
        },
        "text": {
          "type": "string",
          "description": "If natural language text was provided as input, this field will contain a copy of the text."
        }
      },
      "description": "Represents the result of a conversational query.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1QueryResult"
    },
    "GoogleCloudDialogflowCxV3ReloadDocumentOperationMetadata": {
      "description": "Metadata for ReloadDocument operation.",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ReloadDocumentOperationMetadata"
    },
    "GoogleCloudDialogflowCxV3beta1SecuritySettingsInsightsExportSettings": {
      "properties": {
        "enableInsightsExport": {
          "description": "If enabled, we will automatically exports conversations to Insights and Insights runs its analyzers.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1SecuritySettingsInsightsExportSettings",
      "description": "Settings for exporting conversations to [Insights](https://cloud.google.com/contact-center/insights/docs).",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSuggestions": {
      "properties": {
        "suggestions": {
          "description": "Required. The list of suggested replies.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSuggestion"
          },
          "type": "array"
        }
      },
      "description": "The collection of suggestions.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSuggestions"
    },
    "GoogleCloudDialogflowV2beta1Message": {
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time when the message was created in Contact Center AI.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "languageCode": {
          "type": "string",
          "description": "Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\"."
        },
        "content": {
          "description": "Required. The message content.",
          "type": "string"
        },
        "sentimentAnalysis": {
          "description": "Output only. The sentiment analysis result for the message.",
          "$ref": "GoogleCloudDialogflowV2beta1SentimentAnalysisResult",
          "readOnly": true
        },
        "participantRole": {
          "description": "Output only. The role of the participant.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Participant role not set.",
            "Participant is a human agent.",
            "Participant is an automated agent, such as a Dialogflow agent.",
            "Participant is an end user that has called or chatted with Dialogflow services."
          ],
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER"
          ]
        },
        "sendTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Optional. The time when the message was sent."
        },
        "participant": {
          "description": "Output only. The participant that sends this message.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`."
        },
        "messageAnnotation": {
          "description": "Output only. The annotation for the message.",
          "readOnly": true,
          "$ref": "GoogleCloudDialogflowV2beta1MessageAnnotation"
        }
      },
      "description": "Represents a message posted into a conversation.",
      "id": "GoogleCloudDialogflowV2beta1Message"
    },
    "GoogleCloudDialogflowCxV3beta1SpeechToTextSettings": {
      "id": "GoogleCloudDialogflowCxV3beta1SpeechToTextSettings",
      "properties": {
        "enableSpeechAdaptation": {
          "description": "Whether to use speech adaptation for speech recognition.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Settings related to speech recognition."
    },
    "GoogleCloudDialogflowCxV3beta1Webhook": {
      "description": "Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or trigger actions on the backend.",
      "id": "GoogleCloudDialogflowCxV3beta1Webhook",
      "properties": {
        "disabled": {
          "type": "boolean",
          "description": "Indicates whether the webhook is disabled."
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`."
        },
        "serviceDirectory": {
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig",
          "description": "Configuration for a [Service Directory](https://cloud.google.com/service-directory) service."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the webhook, unique within the agent."
        },
        "genericWebService": {
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookGenericWebService",
          "description": "Configuration for a generic web service."
        },
        "timeout": {
          "type": "string",
          "description": "Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.",
          "format": "google-duration"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3TestRunDifference": {
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the diff, showing the actual output vs expected output."
        },
        "type": {
          "description": "The type of diff.",
          "enumDescriptions": [
            "Should never be used.",
            "The intent.",
            "The page.",
            "The parameters.",
            "The message utterance."
          ],
          "type": "string",
          "enum": [
            "DIFF_TYPE_UNSPECIFIED",
            "INTENT",
            "PAGE",
            "PARAMETERS",
            "UTTERANCE"
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3TestRunDifference",
      "description": "The description of differences between original and replayed agent output."
    },
    "GoogleCloudDialogflowCxV3beta1SecuritySettings": {
      "description": "Represents the settings related to security issues, such as data redaction and data retention. It may take hours for updates on the settings to propagate to all the related components and take effect.",
      "id": "GoogleCloudDialogflowCxV3beta1SecuritySettings",
      "properties": {
        "retentionWindowDays": {
          "type": "integer",
          "format": "int32",
          "description": "Retains data in interaction logging for the specified number of days. This does not apply to Cloud logging, which is owned by the user - not Dialogflow. User must set a value lower than Dialogflow's default 365d TTL. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use Dialogflow's default TTL. Note: Interaction logging is a limited access feature. Talk to your Google representative to check availability for you."
        },
        "insightsExportSettings": {
          "description": "Controls conversation exporting settings to Insights after conversation is completed. If retention_strategy is set to REMOVE_AFTER_CONVERSATION, Insights export is disabled no matter what you configure here.",
          "$ref": "GoogleCloudDialogflowCxV3beta1SecuritySettingsInsightsExportSettings"
        },
        "inspectTemplate": {
          "type": "string",
          "description": "[DLP](https://cloud.google.com/dlp/docs) inspect template name. Use this template to define inspect base settings. The `DLP Inspect Templates Reader` role is needed on the Dialogflow service identity service account (has the form `service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com`) for your agent's project. If empty, we use the default DLP inspect config. The template name will have one of the following formats: `projects//locations//inspectTemplates/` OR `organizations//locations//inspectTemplates/` Note: `inspect_template` must be located in the same region as the `SecuritySettings`."
        },
        "name": {
          "type": "string",
          "description": "Resource name of the settings. Required for the SecuritySettingsService.UpdateSecuritySettings method. SecuritySettingsService.CreateSecuritySettings populates the name automatically. Format: `projects//locations//securitySettings/`."
        },
        "purgeDataTypes": {
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Unspecified. Do not use.",
              "Dialogflow history. This does not include Cloud logging, which is owned by the user - not Dialogflow."
            ],
            "enum": [
              "PURGE_DATA_TYPE_UNSPECIFIED",
              "DIALOGFLOW_HISTORY"
            ],
            "type": "string"
          },
          "description": "List of types of data to remove when retention settings triggers purge."
        },
        "displayName": {
          "description": "Required. The human-readable name of the security settings, unique within the location.",
          "type": "string"
        },
        "redactionStrategy": {
          "enum": [
            "REDACTION_STRATEGY_UNSPECIFIED",
            "REDACT_WITH_SERVICE"
          ],
          "description": "Strategy that defines how we do redaction.",
          "enumDescriptions": [
            "Do not redact.",
            "Call redaction service to clean up the data to be persisted."
          ],
          "type": "string"
        },
        "audioExportSettings": {
          "$ref": "GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings",
          "description": "Controls audio export settings for post-conversation analytics when ingesting audio to conversations via Participants.AnalyzeContent or Participants.StreamingAnalyzeContent. If retention_strategy is set to REMOVE_AFTER_CONVERSATION or audio_export_settings.gcs_bucket is empty, audio export is disabled. If audio export is enabled, audio is recorded and saved to audio_export_settings.gcs_bucket, subject to retention policy of audio_export_settings.gcs_bucket. This setting won't effect audio input for implicit sessions via Sessions.DetectIntent or Sessions.StreamingDetectIntent."
        },
        "redactionScope": {
          "enumDescriptions": [
            "Don't redact any kind of data.",
            "On data to be written to disk or similar devices that are capable of holding data even if power is disconnected. This includes data that are temporarily saved on disk."
          ],
          "description": "Defines the data for which Dialogflow applies redaction. Dialogflow does not redact data that it does not have access to – for example, Cloud logging.",
          "type": "string",
          "enum": [
            "REDACTION_SCOPE_UNSPECIFIED",
            "REDACT_DISK_STORAGE"
          ]
        },
        "deidentifyTemplate": {
          "type": "string",
          "description": "[DLP](https://cloud.google.com/dlp/docs) deidentify template name. Use this template to define de-identification configuration for the content. The `DLP De-identify Templates Reader` role is needed on the Dialogflow service identity service account (has the form `service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com`) for your agent's project. If empty, Dialogflow replaces sensitive info with `[redacted]` text. The template name will have one of the following formats: `projects//locations//deidentifyTemplates/` OR `organizations//locations//deidentifyTemplates/` Note: `deidentify_template` must be located in the same region as the `SecuritySettings`."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2DeleteConversationModelOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2DeleteConversationModelOperationMetadata",
      "description": "Metadata for a ConversationModels.DeleteConversationModel operation.",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "Timestamp when delete conversation model request was created. The time is measured on server side.",
          "format": "google-datetime"
        },
        "conversationModel": {
          "type": "string",
          "description": "The resource name of the conversation model. Format: `projects//conversationModels/`"
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageSimpleResponses": {
      "type": "object",
      "description": "The collection of simple response candidates. This message in `QueryResult.fulfillment_messages` and `WebhookResponse.fulfillment_messages` should contain only one `SimpleResponse`.",
      "id": "GoogleCloudDialogflowV2IntentMessageSimpleResponses",
      "properties": {
        "simpleResponses": {
          "type": "array",
          "description": "Required. The list of simple responses.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageSimpleResponse"
          }
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings": {
      "properties": {
        "enableAudioRedaction": {
          "type": "boolean",
          "description": "Enable audio redaction if it is true."
        },
        "gcsBucket": {
          "description": "Cloud Storage bucket to export audio record to. You need to grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Storage Object Admin` role in this bucket.",
          "type": "string"
        },
        "audioFormat": {
          "description": "File format for exported audio file. Currently only in telephony recordings.",
          "enum": [
            "AUDIO_FORMAT_UNSPECIFIED",
            "MULAW",
            "MP3",
            "OGG"
          ],
          "enumDescriptions": [
            "Unspecified. Do not use.",
            "G.711 mu-law PCM with 8kHz sample rate.",
            "MP3 file format.",
            "OGG Vorbis."
          ],
          "type": "string"
        },
        "audioExportPattern": {
          "type": "string",
          "description": "Filename pattern for exported audio."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings",
      "description": "Settings for exporting audio."
    },
    "GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess": {
      "description": "Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess",
      "properties": {
        "metadata": {
          "description": "Custom metadata. Dialogflow doesn't impose any structure on this.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessage": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessage",
      "description": "Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.",
      "properties": {
        "endInteraction": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction",
          "readOnly": true,
          "description": "Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response."
        },
        "conversationSuccess": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess",
          "description": "Indicates that the conversation succeeded."
        },
        "outputAudioText": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText",
          "description": "A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message."
        },
        "payload": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Returns a response containing a custom, platform-specific payload.",
          "type": "object"
        },
        "telephonyTransferCall": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageTelephonyTransferCall",
          "description": "A signal that the client should transfer the phone call connected to this agent to a third-party endpoint."
        },
        "mixedAudio": {
          "description": "Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.",
          "readOnly": true,
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio"
        },
        "text": {
          "description": "Returns a text response.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageText"
        },
        "liveAgentHandoff": {
          "description": "Hands off conversation to a human agent.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff"
        },
        "playAudio": {
          "description": "Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio"
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction",
      "properties": {
        "urlTypeHint": {
          "description": "Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web browser.",
          "enum": [
            "URL_TYPE_HINT_UNSPECIFIED",
            "AMP_ACTION",
            "AMP_CONTENT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified",
            "Url would be an amp action",
            "URL that points directly to AMP content, or to a canonical URL which refers to AMP content via ."
          ]
        },
        "url": {
          "type": "string",
          "description": "Required. URL"
        }
      },
      "description": "Actions on Google action to open a given url."
    },
    "GoogleCloudDialogflowCxV3beta1ExperimentResult": {
      "id": "GoogleCloudDialogflowCxV3beta1ExperimentResult",
      "description": "The inference result which includes an objective metric to optimize and the confidence interval.",
      "properties": {
        "lastUpdateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last time the experiment's stats data was updated. Will have default value if stats have never been computed for this experiment."
        },
        "versionMetrics": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ExperimentResultVersionMetrics"
          },
          "type": "array",
          "description": "Version variants and metrics."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3PageInfo": {
      "id": "GoogleCloudDialogflowCxV3PageInfo",
      "type": "object",
      "description": "Represents page information communicated to and from the webhook.",
      "properties": {
        "currentPage": {
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the current page. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        },
        "displayName": {
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The display name of the current page.",
          "type": "string"
        },
        "formInfo": {
          "$ref": "GoogleCloudDialogflowCxV3PageInfoFormInfo",
          "description": "Optional for both WebhookRequest and WebhookResponse. Information about the form."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ListDeploymentsResponse": {
      "description": "The response message for Deployments.ListDeployments.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "deployments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1Deployment"
          },
          "description": "The list of deployments. There will be a maximum number of items returned based on the page_size field in the request. The list may in some cases be empty or contain fewer entries than page_size even if this isn't the last page."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ListDeploymentsResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata": {
      "description": "Metadata for a ConversationProfile.SetSuggestionFeatureConfig operation.",
      "properties": {
        "createTime": {
          "description": "Timestamp whe the request was created. The time is measured on server side.",
          "type": "string",
          "format": "google-datetime"
        },
        "conversationProfile": {
          "type": "string",
          "description": "The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`"
        },
        "participantRole": {
          "description": "Required. The participant role to add or update the suggestion feature config. Only HUMAN_AGENT or END_USER can be used.",
          "type": "string",
          "enumDescriptions": [
            "Participant role not set.",
            "Participant is a human agent.",
            "Participant is an automated agent, such as a Dialogflow agent.",
            "Participant is an end user that has called or chatted with Dialogflow services."
          ],
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER"
          ]
        },
        "suggestionFeatureType": {
          "type": "string",
          "description": "Required. The type of the suggestion feature to add or update.",
          "enumDescriptions": [
            "Unspecified feature type.",
            "Run article suggestion model for chat.",
            "Run FAQ model.",
            "Run smart reply model for chat."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "ARTICLE_SUGGESTION",
            "FAQ",
            "SMART_REPLY"
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata"
    },
    "GoogleCloudDialogflowV2beta1SentimentAnalysisResult": {
      "description": "The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config",
      "properties": {
        "queryTextSentiment": {
          "description": "The sentiment analysis result for `query_text`.",
          "$ref": "GoogleCloudDialogflowV2beta1Sentiment"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1SentimentAnalysisResult",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCard": {
      "properties": {
        "buttons": {
          "description": "Optional. The collection of card buttons.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCardButton"
          },
          "type": "array"
        },
        "subtitle": {
          "description": "Optional. The subtitle of the card.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Optional. The title of the card."
        },
        "imageUri": {
          "type": "string",
          "description": "Optional. The public URI to an image file for the card."
        }
      },
      "type": "object",
      "description": "The card response message.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCard"
    },
    "GoogleCloudDialogflowCxV3beta1Fulfillment": {
      "properties": {
        "webhook": {
          "description": "The webhook to call. Format: `projects//locations//agents//webhooks/`.",
          "type": "string"
        },
        "tag": {
          "description": "The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.",
          "type": "string"
        },
        "conditionalCases": {
          "description": "Conditional cases for this fulfillment.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases"
          }
        },
        "setParameterActions": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction"
          },
          "description": "Set parameter values before executing the webhook.",
          "type": "array"
        },
        "returnPartialResponses": {
          "type": "boolean",
          "description": "Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks."
        },
        "messages": {
          "type": "array",
          "description": "The list of rich message responses to present to the user.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage"
          }
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1Fulfillment",
      "description": "A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult": {
      "description": "Represents the result of sentiment analysis.",
      "properties": {
        "magnitude": {
          "format": "float",
          "type": "number",
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative)."
        },
        "score": {
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult"
    },
    "GoogleCloudDialogflowCxV3FulfillmentSetParameterAction": {
      "description": "Setting a parameter value.",
      "properties": {
        "parameter": {
          "description": "Display name of the parameter.",
          "type": "string"
        },
        "value": {
          "description": "The new value of the parameter. A null value clears the parameter.",
          "type": "any"
        }
      },
      "id": "GoogleCloudDialogflowCxV3FulfillmentSetParameterAction",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ExportTestCasesMetadata": {
      "description": "Metadata returned for the TestCases.ExportTestCases long running operation. This message currently has no fields.",
      "id": "GoogleCloudDialogflowCxV3beta1ExportTestCasesMetadata",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ListAgentsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "agents": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1Agent"
          },
          "description": "The list of agents. There will be a maximum number of items returned based on the page_size field in the request.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ListAgentsResponse",
      "description": "The response message for Agents.ListAgents."
    },
    "GoogleCloudDialogflowV2EntityType": {
      "id": "GoogleCloudDialogflowV2EntityType",
      "description": "Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted. Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent. For more information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview).",
      "properties": {
        "kind": {
          "description": "Required. Indicates the kind of entity type.",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Map entity types allow mapping of a group of synonyms to a reference value.",
            "List entity types contain a set of entries that do not map to reference values. However, list entity types can contain references to other entity types (with or without aliases).",
            "Regexp entity types allow to specify regular expressions in entries values."
          ],
          "type": "string",
          "enum": [
            "KIND_UNSPECIFIED",
            "KIND_MAP",
            "KIND_LIST",
            "KIND_REGEXP"
          ]
        },
        "entities": {
          "type": "array",
          "description": "Optional. The collection of entity entries associated with the entity type.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityTypeEntity"
          }
        },
        "displayName": {
          "type": "string",
          "description": "Required. The name of the entity type."
        },
        "name": {
          "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`.",
          "type": "string"
        },
        "autoExpansionMode": {
          "description": "Optional. Indicates whether the entity type can be automatically expanded.",
          "enum": [
            "AUTO_EXPANSION_MODE_UNSPECIFIED",
            "AUTO_EXPANSION_MODE_DEFAULT"
          ],
          "enumDescriptions": [
            "Auto expansion disabled for the entity.",
            "Allows an agent to recognize values that have not been explicitly listed in the entity."
          ],
          "type": "string"
        },
        "enableFuzzyExtraction": {
          "description": "Optional. Enables fuzzy entity extraction during classification.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3RunContinuousTestResponse": {
      "type": "object",
      "properties": {
        "continuousTestResult": {
          "description": "The result for a continuous test run.",
          "$ref": "GoogleCloudDialogflowCxV3ContinuousTestResult"
        }
      },
      "id": "GoogleCloudDialogflowCxV3RunContinuousTestResponse",
      "description": "The response message for Environments.RunContinuousTest."
    },
    "GoogleCloudDialogflowV2GcsDestination": {
      "id": "GoogleCloudDialogflowV2GcsDestination",
      "properties": {
        "uri": {
          "description": "The Google Cloud Storage URIs for the output. A URI is of the form: gs://bucket/object-prefix-or-name Whether a prefix or name is used depends on the use case. The requesting user must have \"write-permission\" to the bucket.",
          "type": "string"
        }
      },
      "description": "Google Cloud Storage location for the output.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageQuickReplies": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageQuickReplies",
      "description": "The quick replies response message.",
      "type": "object",
      "properties": {
        "quickReplies": {
          "items": {
            "type": "string"
          },
          "description": "Optional. The collection of quick replies.",
          "type": "array"
        },
        "title": {
          "description": "Optional. The title of the collection of quick replies.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2Message": {
      "type": "object",
      "properties": {
        "participant": {
          "description": "Output only. The participant that sends this message.",
          "readOnly": true,
          "type": "string"
        },
        "messageAnnotation": {
          "readOnly": true,
          "$ref": "GoogleCloudDialogflowV2MessageAnnotation",
          "description": "Output only. The annotation for the message."
        },
        "languageCode": {
          "type": "string",
          "description": "Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\"."
        },
        "sentimentAnalysis": {
          "readOnly": true,
          "description": "Output only. The sentiment analysis result for the message.",
          "$ref": "GoogleCloudDialogflowV2SentimentAnalysisResult"
        },
        "name": {
          "type": "string",
          "description": "Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`."
        },
        "participantRole": {
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER"
          ],
          "readOnly": true,
          "description": "Output only. The role of the participant.",
          "type": "string",
          "enumDescriptions": [
            "Participant role not set.",
            "Participant is a human agent.",
            "Participant is an automated agent, such as a Dialogflow agent.",
            "Participant is an end user that has called or chatted with Dialogflow services."
          ]
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time when the message was created in Contact Center AI.",
          "format": "google-datetime",
          "type": "string"
        },
        "content": {
          "type": "string",
          "description": "Required. The message content."
        },
        "sendTime": {
          "description": "Optional. The time when the message was sent.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2Message",
      "description": "Represents a message posted into a conversation."
    },
    "GoogleCloudDialogflowCxV3beta1ListEntityTypesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "entityTypes": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1EntityType"
          },
          "description": "The list of entity types. There will be a maximum number of items returned based on the page_size field in the request."
        }
      },
      "description": "The response message for EntityTypes.ListEntityTypes.",
      "id": "GoogleCloudDialogflowCxV3beta1ListEntityTypesResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ListSecuritySettingsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "securitySettings": {
          "description": "The list of security settings.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1SecuritySettings"
          }
        }
      },
      "description": "The response message for SecuritySettings.ListSecuritySettings.",
      "id": "GoogleCloudDialogflowCxV3beta1ListSecuritySettingsResponse",
      "type": "object"
    },
    "GoogleLongrunningOperation": {
      "type": "object",
      "properties": {
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "GoogleLongrunningOperation"
    },
    "GoogleCloudDialogflowCxV3beta1AudioInput": {
      "properties": {
        "config": {
          "description": "Required. Instructs the speech recognizer how to process the speech audio.",
          "$ref": "GoogleCloudDialogflowCxV3beta1InputAudioConfig"
        },
        "audio": {
          "description": "The natural language speech audio to be processed. A single request can contain up to 1 minute of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.",
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Represents the natural speech audio to be processed.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1AudioInput"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue": {
      "description": "Represents a value for an intent parameter.",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue",
      "type": "object",
      "properties": {
        "resolvedValue": {
          "type": "any",
          "description": "Always present. Structured value for the parameter extracted from user utterance."
        },
        "originalValue": {
          "type": "string",
          "description": "Always present. Original text value extracted from user utterance."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1DeployFlowMetadata": {
      "description": "Metadata returned for the Environments.DeployFlow long running operation.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1DeployFlowMetadata",
      "properties": {
        "testErrors": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestError"
          },
          "type": "array",
          "description": "Errors of running deployment tests."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1SuggestArticlesResponse": {
      "description": "The response message for Participants.SuggestArticles.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1SuggestArticlesResponse",
      "properties": {
        "contextSize": {
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestArticlesResponse.context_size field in the request if there aren't that many messages in the conversation.",
          "type": "integer",
          "format": "int32"
        },
        "articleAnswers": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1ArticleAnswer"
          },
          "type": "array",
          "description": "Output only. Articles ordered by score in descending order."
        },
        "latestMessage": {
          "type": "string",
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1RunTestCaseMetadata": {
      "properties": {},
      "description": "Metadata returned for the TestCases.RunTestCase long running operation. This message currently has no fields.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1RunTestCaseMetadata"
    },
    "GoogleCloudDialogflowV2IntentMessageSelectItemInfo": {
      "id": "GoogleCloudDialogflowV2IntentMessageSelectItemInfo",
      "description": "Additional info about the select item for when it is triggered in a dialog.",
      "type": "object",
      "properties": {
        "key": {
          "description": "Required. A unique key that will be sent back to the agent if this response is given.",
          "type": "string"
        },
        "synonyms": {
          "items": {
            "type": "string"
          },
          "description": "Optional. A list of synonyms that can also be used to trigger this item in dialog.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1FulfillIntentResponse": {
      "id": "GoogleCloudDialogflowCxV3beta1FulfillIntentResponse",
      "description": "Response of FulfillIntent",
      "properties": {
        "responseId": {
          "description": "Output only. The unique identifier of the response. It can be used to locate a response in the training example set or for reporting issues.",
          "type": "string"
        },
        "outputAudio": {
          "format": "byte",
          "type": "string",
          "description": "The audio data bytes encoded as specified in the request. Note: The output audio is generated based on the values of default platform text responses found in the `query_result.response_messages` field. If multiple default text responses exist, they will be concatenated when generating audio. If no default platform text responses exist, the generated audio content will be empty. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio output has content."
        },
        "outputAudioConfig": {
          "$ref": "GoogleCloudDialogflowCxV3beta1OutputAudioConfig",
          "description": "The config used by the speech synthesizer to generate the output audio."
        },
        "queryResult": {
          "description": "The result of the conversational query.",
          "$ref": "GoogleCloudDialogflowCxV3beta1QueryResult"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3TestCaseError": {
      "properties": {
        "status": {
          "description": "The status associated with the test case.",
          "$ref": "GoogleRpcStatus"
        },
        "testCase": {
          "description": "The test case.",
          "$ref": "GoogleCloudDialogflowCxV3TestCase"
        }
      },
      "id": "GoogleCloudDialogflowCxV3TestCaseError",
      "description": "Error info for importing a test.",
      "type": "object"
    },
    "GoogleTypeLatLng": {
      "type": "object",
      "properties": {
        "longitude": {
          "type": "number",
          "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
          "format": "double"
        },
        "latitude": {
          "type": "number",
          "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
          "format": "double"
        }
      },
      "id": "GoogleTypeLatLng",
      "description": "An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges."
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction": {
      "description": "Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction"
    },
    "GoogleCloudDialogflowV2beta1SessionEntityType": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1SessionEntityType",
      "description": "A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities, called session entities, during a session. Session entities can extend or replace custom entity types and only exist during the session that they were created for. All session data, including session entities, is stored by Dialogflow for 20 minutes. For more information, see the [session entity guide](https://cloud.google.com/dialogflow/docs/entities-session).",
      "properties": {
        "name": {
          "description": "Required. The unique identifier of this session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` - `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.",
          "type": "string"
        },
        "entities": {
          "description": "Required. The collection of entities associated with this session entity type.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1EntityTypeEntity"
          },
          "type": "array"
        },
        "entityOverrideMode": {
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "The collection of session entities overrides the collection of entities in the corresponding custom entity type.",
            "The collection of session entities extends the collection of entities in the corresponding custom entity type. Note: Even in this override mode calls to `ListSessionEntityTypes`, `GetSessionEntityType`, `CreateSessionEntityType` and `UpdateSessionEntityType` only return the additional entities added in this session entity type. If you want to get the supplemented list, please call EntityTypes.GetEntityType on the custom entity type and merge."
          ],
          "description": "Required. Indicates whether the additional data should override or supplement the custom entity type definition.",
          "enum": [
            "ENTITY_OVERRIDE_MODE_UNSPECIFIED",
            "ENTITY_OVERRIDE_MODE_OVERRIDE",
            "ENTITY_OVERRIDE_MODE_SUPPLEMENT"
          ],
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3EnvironmentWebhookConfig": {
      "description": "Configuration for webhooks.",
      "properties": {
        "webhookOverrides": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3Webhook"
          },
          "description": "The list of webhooks to override for the agent environment. The webhook must exist in the agent. You can override fields in `generic_web_service` and `service_directory`.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3EnvironmentWebhookConfig"
    },
    "GoogleCloudDialogflowCxV3TestCase": {
      "type": "object",
      "description": "Represents a test case.",
      "properties": {
        "notes": {
          "type": "string",
          "description": "Additional freeform notes about the test case. Limit of 400 characters."
        },
        "lastTestResult": {
          "description": "The latest test result.",
          "$ref": "GoogleCloudDialogflowCxV3TestCaseResult"
        },
        "creationTime": {
          "description": "Output only. When the test was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "testConfig": {
          "$ref": "GoogleCloudDialogflowCxV3TestConfig",
          "description": "Config for the test case."
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`."
        },
        "testCaseConversationTurns": {
          "description": "The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ConversationTurn"
          }
        },
        "displayName": {
          "description": "Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters.",
          "type": "string"
        },
        "tags": {
          "description": "Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with \"#\" and has a limit of 30 characters.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3TestCase"
    },
    "GoogleCloudDialogflowV2IntentMessageSimpleResponse": {
      "id": "GoogleCloudDialogflowV2IntentMessageSimpleResponse",
      "description": "The simple response message containing speech or text.",
      "type": "object",
      "properties": {
        "textToSpeech": {
          "description": "One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml.",
          "type": "string"
        },
        "displayText": {
          "description": "Optional. The text to display.",
          "type": "string"
        },
        "ssml": {
          "type": "string",
          "description": "One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1WebhookResponse": {
      "properties": {
        "followupEventInput": {
          "description": "Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`, and `payload` fields.",
          "$ref": "GoogleCloudDialogflowV2beta1EventInput"
        },
        "liveAgentHandoff": {
          "description": "Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.",
          "type": "boolean"
        },
        "payload": {
          "description": "Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "fulfillmentMessages": {
          "description": "Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API caller.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessage"
          },
          "type": "array"
        },
        "sessionEntityTypes": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1SessionEntityType"
          },
          "type": "array",
          "description": "Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods."
        },
        "source": {
          "description": "Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API caller.",
          "type": "string"
        },
        "fulfillmentText": {
          "type": "string",
          "description": "Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_text sent to the integration or API caller."
        },
        "endInteraction": {
          "description": "Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.",
          "type": "boolean"
        },
        "outputContexts": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Context"
          },
          "description": "Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to populate QueryResult.output_contexts sent to the integration or API caller."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1WebhookResponse",
      "type": "object",
      "description": "The response message for a webhook call. This response is validated by the Dialogflow server. If validation fails, an error will be returned in the QueryResult.diagnostic_info field. Setting JSON fields to an empty value with the wrong type is a common error. To avoid this error: - Use `\"\"` for empty strings - Use `{}` or `null` for empty objects - Use `[]` or `null` for empty arrays For more information, see the [Protocol Buffers Language Guide](https://developers.google.com/protocol-buffers/docs/proto3#json)."
    },
    "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent": {
      "properties": {
        "message": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage",
          "description": "Returned message."
        },
        "additionalCases": {
          "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases",
          "description": "Additional cases to be evaluated."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent",
      "description": "The list of messages or conditional cases to activate for this case."
    },
    "GoogleCloudDialogflowCxV3TransitionRoute": {
      "type": "object",
      "properties": {
        "targetFlow": {
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        },
        "triggerFulfillment": {
          "description": "The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first.",
          "$ref": "GoogleCloudDialogflowCxV3Fulfillment"
        },
        "intent": {
          "type": "string",
          "description": "The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled."
        },
        "condition": {
          "type": "string",
          "description": "The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The unique identifier of this transition route.",
          "type": "string"
        },
        "targetPage": {
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3TransitionRoute",
      "description": "A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow."
    },
    "GoogleCloudDialogflowCxV3WebhookGenericWebService": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "The password for HTTP Basic authentication."
        },
        "username": {
          "description": "The user name for HTTP Basic authentication.",
          "type": "string"
        },
        "requestHeaders": {
          "description": "The HTTP request headers to send together with webhook requests.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "uri": {
          "type": "string",
          "description": "Required. The webhook URI for receiving POST requests. It must use https protocol."
        },
        "allowedCaCerts": {
          "type": "array",
          "items": {
            "format": "byte",
            "type": "string"
          },
          "description": "Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with \"subject alt name\". For instance a certificate can be self-signed using the following command, ``` openssl x509 -req -days 200 -in example.com.csr \\ -signkey example.com.key \\ -out example.com.crt \\ -extfile \u003c(printf \"\\nsubjectAltName='DNS:www.example.com'\") ```"
        }
      },
      "id": "GoogleCloudDialogflowCxV3WebhookGenericWebService",
      "description": "Represents configuration for a generic web service."
    },
    "GoogleCloudDialogflowCxV3beta1EventInput": {
      "description": "Represents the event to trigger.",
      "type": "object",
      "properties": {
        "event": {
          "description": "Name of the event.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1EventInput"
    },
    "GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig": {
      "description": "The configuration for continuous tests.",
      "type": "object",
      "properties": {
        "testCases": {
          "description": "A list of test case names to run. They should be under the same agent. Format of each test case name: `projects//locations/ /agents//testCases/`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enablePredeploymentRun": {
          "description": "Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment. Default false.",
          "type": "boolean"
        },
        "enableContinuousRun": {
          "type": "boolean",
          "description": "Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to true, run once a day."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig"
    },
    "GoogleCloudDialogflowCxV3beta1EntityTypeEntity": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1EntityTypeEntity",
      "properties": {
        "value": {
          "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A canonical value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).",
          "type": "string"
        },
        "synonyms": {
          "type": "array",
          "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "An **entity entry** for an associated entity type."
    },
    "GoogleCloudDialogflowV2IntentMessageMediaContent": {
      "id": "GoogleCloudDialogflowV2IntentMessageMediaContent",
      "description": "The media content card for Actions on Google.",
      "properties": {
        "mediaType": {
          "description": "Optional. What type of media is the content (ie \"audio\").",
          "enumDescriptions": [
            "Unspecified.",
            "Response media type is audio."
          ],
          "type": "string",
          "enum": [
            "RESPONSE_MEDIA_TYPE_UNSPECIFIED",
            "AUDIO"
          ]
        },
        "mediaObjects": {
          "type": "array",
          "description": "Required. List of media objects.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1KnowledgeAnswers": {
      "description": "Represents the result of querying a Knowledge base.",
      "id": "GoogleCloudDialogflowV2beta1KnowledgeAnswers",
      "type": "object",
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer"
          },
          "description": "A list of answers from Knowledge Connector."
        }
      }
    },
    "GoogleCloudDialogflowCxV3ImportTestCasesResponse": {
      "id": "GoogleCloudDialogflowCxV3ImportTestCasesResponse",
      "properties": {
        "names": {
          "type": "array",
          "description": "The unique identifiers of the new test cases. Format: `projects//locations//agents//testCases/`.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "The response message for TestCases.ImportTestCases.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard": {
      "description": "Browse Carousel Card for Actions on Google. https://developers.google.com/actions/assistant/responses#browsing_carousel",
      "id": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard",
      "type": "object",
      "properties": {
        "imageDisplayOptions": {
          "type": "string",
          "enum": [
            "IMAGE_DISPLAY_OPTIONS_UNSPECIFIED",
            "GRAY",
            "WHITE",
            "CROPPED",
            "BLURRED_BACKGROUND"
          ],
          "enumDescriptions": [
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with white bars.",
            "Image is scaled such that the image width and height match or exceed the container dimensions. This may crop the top and bottom of the image if the scaled image height is greater than the container height, or crop the left and right of the image if the scaled image width is greater than the container width. This is similar to \"Zoom Mode\" on a widescreen TV when playing a 4:3 video.",
            "Pad the gaps between image and image frame with a blurred copy of the same image."
          ],
          "description": "Optional. Settings for displaying the image. Applies to every image in items."
        },
        "items": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem"
          },
          "type": "array",
          "description": "Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten."
        }
      }
    },
    "GoogleCloudDialogflowV3alpha1ImportDocumentsResponse": {
      "description": "Response message for Documents.ImportDocuments.",
      "id": "GoogleCloudDialogflowV3alpha1ImportDocumentsResponse",
      "type": "object",
      "properties": {
        "warnings": {
          "type": "array",
          "description": "Includes details about skipped documents or any other warnings.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1RestoreAgentRequest": {
      "properties": {
        "restoreOption": {
          "enum": [
            "RESTORE_OPTION_UNSPECIFIED",
            "KEEP",
            "FALLBACK"
          ],
          "enumDescriptions": [
            "Unspecified. Treated as KEEP.",
            "Always respect the settings from the exported agent file. It may cause a restoration failure if some settings (e.g. model type) are not supported in the target agent.",
            "Fallback to default settings if some settings are not supported in the target agent."
          ],
          "description": "Agent restore mode. If not specified, `KEEP` is assumed.",
          "type": "string"
        },
        "agentUri": {
          "type": "string",
          "description": "The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to restore agent from. The format of this URI must be `gs:///`. Dialogflow performs a read operation for the Cloud Storage object on the caller's behalf, so your request authentication must have read permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage)."
        },
        "agentContent": {
          "type": "string",
          "format": "byte",
          "description": "Uncompressed raw byte content for agent."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1RestoreAgentRequest",
      "type": "object",
      "description": "The request message for Agents.RestoreAgent."
    },
    "GoogleCloudDialogflowV2IntentMessageListSelect": {
      "properties": {
        "subtitle": {
          "type": "string",
          "description": "Optional. Subtitle of the list."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageListSelectItem"
          },
          "description": "Required. List items."
        },
        "title": {
          "description": "Optional. The overall title of the list.",
          "type": "string"
        }
      },
      "description": "The card for presenting a list of options to select from.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageListSelect"
    },
    "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent",
      "description": "The list of messages or conditional cases to activate for this case.",
      "properties": {
        "message": {
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessage",
          "description": "Returned message."
        },
        "additionalCases": {
          "$ref": "GoogleCloudDialogflowCxV3FulfillmentConditionalCases",
          "description": "Additional cases to be evaluated."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1Version": {
      "properties": {
        "nluSettings": {
          "description": "Output only. The NLU settings of the flow at version creation.",
          "$ref": "GoogleCloudDialogflowCxV3beta1NluSettings",
          "readOnly": true
        },
        "description": {
          "description": "The description of the version. The maximum length is 500 characters. If exceeded, the request is rejected.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "SUCCEEDED",
            "FAILED"
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. The state of this version. This field is read-only and cannot be set by create and update methods.",
          "enumDescriptions": [
            "Not specified. This value is not used.",
            "Version is not ready to serve (e.g. training is running).",
            "Training has succeeded and this version is ready to serve.",
            "Version training failed."
          ]
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Create time of the version.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. The human-readable name of the version. Limit of 64 characters.",
          "type": "string"
        },
        "name": {
          "description": "Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow upon version creation.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1Version",
      "description": "Represents a version of a flow.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageTelephonyTransferCall": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageTelephonyTransferCall",
      "description": "Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "Transfer the call to a phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164)."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1SessionInfo": {
      "id": "GoogleCloudDialogflowCxV3beta1SessionInfo",
      "description": "Represents session information communicated to and from the webhook.",
      "type": "object",
      "properties": {
        "session": {
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the session. This field can be used by the webhook to identify a session. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/` if environment is specified.",
          "type": "string"
        },
        "parameters": {
          "description": "Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and intents during the session. Parameters can be created, updated, or removed by the webhook. To remove a parameter from the session, the webhook should explicitly set the parameter value to null in WebhookResponse. The map is keyed by parameters' display names.",
          "type": "object",
          "additionalProperties": {
            "type": "any"
          }
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig": {
      "description": "Configuration of how speech should be synthesized.",
      "properties": {
        "pitch": {
          "format": "double",
          "description": "Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.",
          "type": "number"
        },
        "voice": {
          "description": "Optional. The desired voice of the synthesized audio.",
          "$ref": "GoogleCloudDialogflowCxV3beta1VoiceSelectionParams"
        },
        "volumeGainDb": {
          "description": "Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.",
          "type": "number",
          "format": "double"
        },
        "effectsProfileId": {
          "description": "Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "speakingRate": {
          "type": "number",
          "description": "Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values \u003c 0.25 or \u003e 4.0 will return an error.",
          "format": "double"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig"
    },
    "GoogleCloudDialogflowCxV3beta1DeleteDocumentOperationMetadata": {
      "type": "object",
      "description": "Metadata for DeleteDocument operation.",
      "id": "GoogleCloudDialogflowCxV3beta1DeleteDocumentOperationMetadata",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      }
    },
    "GoogleCloudDialogflowCxV3Fulfillment": {
      "id": "GoogleCloudDialogflowCxV3Fulfillment",
      "properties": {
        "returnPartialResponses": {
          "type": "boolean",
          "description": "Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks."
        },
        "webhook": {
          "type": "string",
          "description": "The webhook to call. Format: `projects//locations//agents//webhooks/`."
        },
        "setParameterActions": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FulfillmentSetParameterAction"
          },
          "description": "Set parameter values before executing the webhook."
        },
        "messages": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessage"
          },
          "type": "array",
          "description": "The list of rich message responses to present to the user."
        },
        "tag": {
          "description": "The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.",
          "type": "string"
        },
        "conditionalCases": {
          "type": "array",
          "description": "Conditional cases for this fulfillment.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FulfillmentConditionalCases"
          }
        }
      },
      "description": "A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ImportDocumentsOperationMetadata": {
      "id": "GoogleCloudDialogflowCxV3beta1ImportDocumentsOperationMetadata",
      "type": "object",
      "description": "Metadata for ImportDocuments operation.",
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
        }
      }
    },
    "GoogleCloudDialogflowV2SuggestFaqAnswersResponse": {
      "properties": {
        "faqAnswers": {
          "type": "array",
          "description": "Answers extracted from FAQ documents.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2FaqAnswer"
          }
        },
        "contextSize": {
          "format": "int32",
          "type": "integer",
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestFaqAnswersRequest.context_size field in the request if there aren't that many messages in the conversation."
        },
        "latestMessage": {
          "type": "string",
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
        }
      },
      "type": "object",
      "description": "The request message for Participants.SuggestFaqAnswers.",
      "id": "GoogleCloudDialogflowV2SuggestFaqAnswersResponse"
    },
    "GoogleCloudDialogflowCxV3beta1ReloadDocumentOperationMetadata": {
      "id": "GoogleCloudDialogflowCxV3beta1ReloadDocumentOperationMetadata",
      "description": "Metadata for ReloadDocument operation.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTableCardRow": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTableCardRow",
      "properties": {
        "cells": {
          "description": "Optional. List of cells that make up this row.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTableCardCell"
          },
          "type": "array"
        },
        "dividerAfter": {
          "type": "boolean",
          "description": "Optional. Whether to add a visual divider after this row."
        }
      },
      "description": "Row of TableCard."
    },
    "GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse",
      "description": "The request message for Participants.SuggestFaqAnswers.",
      "properties": {
        "contextSize": {
          "format": "int32",
          "type": "integer",
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestFaqAnswersRequest.context_size field in the request if there aren't that many messages in the conversation."
        },
        "latestMessage": {
          "type": "string",
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
        },
        "faqAnswers": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1FaqAnswer"
          },
          "type": "array",
          "description": "Output only. Answers extracted from FAQ documents."
        }
      }
    },
    "GoogleCloudDialogflowCxV3CreateVersionOperationMetadata": {
      "properties": {
        "version": {
          "type": "string",
          "description": "Name of the created version. Format: `projects//locations//agents//flows//versions/`."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3CreateVersionOperationMetadata",
      "description": "Metadata associated with the long running operation for Versions.CreateVersion."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall": {
      "type": "object",
      "description": "Transfers the call in Telephony Gateway.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall",
      "properties": {
        "phoneNumber": {
          "description": "Required. The phone number to transfer the call to in [E.164 format](https://en.wikipedia.org/wiki/E.164). We currently only allow transferring to US numbers (+1xxxyyyzzzz).",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest": {
      "type": "object",
      "description": "Represents the contents of the original request that was passed to the `[Streaming]DetectIntent` call.",
      "id": "GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest",
      "properties": {
        "payload": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: { \"telephony\": { \"caller_id\": \"+18558363987\" } } Note: The caller ID field (`caller_id`) will be redacted for Trial Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition agents."
        },
        "version": {
          "description": "Optional. The version of the protocol used for this request. This field is AoG-specific.",
          "type": "string"
        },
        "source": {
          "type": "string",
          "description": "The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1RunTestCaseResponse": {
      "properties": {
        "result": {
          "description": "The result.",
          "$ref": "GoogleCloudDialogflowCxV3beta1TestCaseResult"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1RunTestCaseResponse",
      "description": "The response message for TestCases.RunTestCase."
    },
    "GoogleCloudLocationLocation": {
      "properties": {
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location.",
      "id": "GoogleCloudLocationLocation"
    },
    "GoogleCloudDialogflowCxV3beta1MatchIntentResponse": {
      "properties": {
        "triggerEvent": {
          "description": "If an event was provided as input, this field will contain a copy of the event name.",
          "type": "string"
        },
        "matches": {
          "type": "array",
          "description": "Match results, if more than one, ordered descendingly by the confidence we have that the particular intent matches the query.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1Match"
          }
        },
        "transcript": {
          "type": "string",
          "description": "If natural language speech audio was provided as input, this field will contain the transcript for the audio."
        },
        "currentPage": {
          "description": "The current Page. Some, not all fields are filled in this message, including but not limited to `name` and `display_name`.",
          "$ref": "GoogleCloudDialogflowCxV3beta1Page"
        },
        "triggerIntent": {
          "type": "string",
          "description": "If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`."
        },
        "text": {
          "description": "If natural language text was provided as input, this field will contain a copy of the text.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1MatchIntentResponse",
      "type": "object",
      "description": "Response of MatchIntent."
    },
    "GoogleCloudDialogflowV2beta1Sentiment": {
      "description": "The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text.",
      "type": "object",
      "properties": {
        "magnitude": {
          "format": "float",
          "type": "number",
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative)."
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment)."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1Sentiment"
    },
    "GoogleCloudDialogflowV2ConversationEvent": {
      "type": "object",
      "description": "Represents a notification sent to Pub/Sub subscribers for conversation lifecycle events.",
      "id": "GoogleCloudDialogflowV2ConversationEvent",
      "properties": {
        "newMessagePayload": {
          "$ref": "GoogleCloudDialogflowV2Message",
          "description": "Payload of NEW_MESSAGE event."
        },
        "errorStatus": {
          "description": "More detailed information about an error. Only set for type UNRECOVERABLE_ERROR_IN_PHONE_CALL.",
          "$ref": "GoogleRpcStatus"
        },
        "conversation": {
          "description": "The unique identifier of the conversation this notification refers to. Format: `projects//conversations/`.",
          "type": "string"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CONVERSATION_STARTED",
            "CONVERSATION_FINISHED",
            "HUMAN_INTERVENTION_NEEDED",
            "NEW_MESSAGE",
            "UNRECOVERABLE_ERROR"
          ],
          "description": "The type of the event that this notification refers to.",
          "enumDescriptions": [
            "Type not set.",
            "A new conversation has been opened. This is fired when a telephone call is answered, or a conversation is created via the API.",
            "An existing conversation has closed. This is fired when a telephone call is terminated, or a conversation is closed via the API.",
            "An existing conversation has received notification from Dialogflow that human intervention is required.",
            "An existing conversation has received a new message, either from API or telephony. It is configured in ConversationProfile.new_message_event_notification_config",
            "Unrecoverable error during a telephone call. In general non-recoverable errors only occur if something was misconfigured in the ConversationProfile corresponding to the call. After a non-recoverable error, Dialogflow may stop responding. We don't fire this event: * in an API call because we can directly return the error, or, * when we can recover from an error."
          ],
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV3alpha1CreateDocumentOperationMetadata": {
      "id": "GoogleCloudDialogflowV3alpha1CreateDocumentOperationMetadata",
      "type": "object",
      "description": "Metadata for CreateDocument operation.",
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard": {
      "properties": {
        "cardContents": {
          "type": "array",
          "description": "Required. The cards in the carousel. A carousel must have at least 2 cards and at most 10.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent"
          }
        },
        "cardWidth": {
          "enumDescriptions": [
            "Not specified.",
            "120 DP. Note that tall media cannot be used.",
            "232 DP."
          ],
          "type": "string",
          "enum": [
            "CARD_WIDTH_UNSPECIFIED",
            "SMALL",
            "MEDIUM"
          ],
          "description": "Required. The width of the cards in the carousel."
        }
      },
      "type": "object",
      "description": "Carousel Rich Business Messaging (RBM) rich card. Rich cards allow you to respond to users with more vivid content, e.g. with media and suggestions. If you want to show a single card with more control over the layout, please use RbmStandaloneCard instead.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard"
    },
    "GoogleCloudDialogflowCxV3Environment": {
      "description": "Represents an environment for an agent. You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for testing, development, production, etc.",
      "id": "GoogleCloudDialogflowCxV3Environment",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Required. The human-readable name of the environment (unique in an agent). Limit of 64 characters.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the environment. Format: `projects//locations//agents//environments/`."
        },
        "description": {
          "description": "The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected.",
          "type": "string"
        },
        "versionConfigs": {
          "description": "Required. A list of configurations for flow versions. You should include version configs for all flows that are reachable from `Start Flow` in the agent. Otherwise, an error will be returned.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3EnvironmentVersionConfig"
          }
        },
        "testCasesConfig": {
          "$ref": "GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig",
          "description": "The test cases config for continuous tests of this environment."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Update time of this environment."
        },
        "webhookConfig": {
          "description": "The webhook configuration for this environment.",
          "$ref": "GoogleCloudDialogflowCxV3EnvironmentWebhookConfig"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1PageInfo": {
      "description": "Represents page information communicated to and from the webhook.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The display name of the current page."
        },
        "currentPage": {
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the current page. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        },
        "formInfo": {
          "$ref": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfo",
          "description": "Optional for both WebhookRequest and WebhookResponse. Information about the form."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1PageInfo"
    },
    "GoogleCloudDialogflowCxV3beta1DtmfInput": {
      "description": "Represents the input for dtmf event.",
      "properties": {
        "finishDigit": {
          "description": "The finish digit (if any).",
          "type": "string"
        },
        "digits": {
          "description": "The dtmf digits.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1DtmfInput",
      "type": "object"
    },
    "GoogleCloudDialogflowV2ArticleSuggestionModelMetadata": {
      "id": "GoogleCloudDialogflowV2ArticleSuggestionModelMetadata",
      "type": "object",
      "properties": {
        "trainingModelType": {
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "SMART_REPLY_DUAL_ENCODER_MODEL",
            "SMART_REPLY_BERT_MODEL"
          ],
          "type": "string",
          "enumDescriptions": [
            "ModelType unspecified.",
            "ModelType smart reply dual encoder model.",
            "ModelType smart reply bert model."
          ],
          "description": "Optional. Type of the article suggestion model. If not provided, model_type is used."
        }
      },
      "description": "Metadata for article suggestion models."
    },
    "GoogleCloudDialogflowCxV3beta1CreateVersionOperationMetadata": {
      "description": "Metadata associated with the long running operation for Versions.CreateVersion.",
      "properties": {
        "version": {
          "description": "Name of the created version. Format: `projects//locations//agents//flows//versions/`.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1CreateVersionOperationMetadata"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment": {
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it.",
          "type": "string"
        },
        "audio": {
          "type": "string",
          "description": "Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.",
          "format": "byte"
        },
        "allowPlaybackInterruption": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request."
        }
      },
      "description": "Represents one segment of audio."
    },
    "GoogleCloudDialogflowV3alpha1DeleteDocumentOperationMetadata": {
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
        }
      },
      "description": "Metadata for DeleteDocument operation.",
      "id": "GoogleCloudDialogflowV3alpha1DeleteDocumentOperationMetadata",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1TrainFlowRequest": {
      "properties": {},
      "type": "object",
      "description": "The request message for Flows.TrainFlow.",
      "id": "GoogleCloudDialogflowCxV3beta1TrainFlowRequest"
    },
    "GoogleCloudDialogflowCxV3IntentTrainingPhrasePart": {
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. The text for this part."
        },
        "parameterId": {
          "description": "The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3IntentTrainingPhrasePart",
      "description": "Represents a part of a training phrase."
    },
    "GoogleCloudDialogflowV2beta1ExportAgentResponse": {
      "properties": {
        "agentContent": {
          "format": "byte",
          "description": "Zip compressed raw byte content for agent.",
          "type": "string"
        },
        "agentUri": {
          "type": "string",
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in `ExportAgentRequest`."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1ExportAgentResponse",
      "type": "object",
      "description": "The response message for Agents.ExportAgent."
    },
    "GoogleCloudDialogflowCxV3beta1ImportTestCasesResponse": {
      "description": "The response message for TestCases.ImportTestCases.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ImportTestCasesResponse",
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The unique identifiers of the new test cases. Format: `projects//locations//agents//testCases/`."
        }
      }
    },
    "GoogleCloudDialogflowCxV3Webhook": {
      "type": "object",
      "description": "Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or trigger actions on the backend.",
      "properties": {
        "serviceDirectory": {
          "description": "Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.",
          "$ref": "GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig"
        },
        "genericWebService": {
          "description": "Configuration for a generic web service.",
          "$ref": "GoogleCloudDialogflowCxV3WebhookGenericWebService"
        },
        "disabled": {
          "description": "Indicates whether the webhook is disabled.",
          "type": "boolean"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the webhook, unique within the agent."
        },
        "timeout": {
          "description": "Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.",
          "format": "google-duration",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`."
        }
      },
      "id": "GoogleCloudDialogflowCxV3Webhook"
    },
    "GoogleLongrunningListOperationsResponse": {
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleCloudDialogflowV2SessionEntityType": {
      "properties": {
        "entities": {
          "description": "Required. The collection of entities associated with this session entity type.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityTypeEntity"
          },
          "type": "array"
        },
        "entityOverrideMode": {
          "enum": [
            "ENTITY_OVERRIDE_MODE_UNSPECIFIED",
            "ENTITY_OVERRIDE_MODE_OVERRIDE",
            "ENTITY_OVERRIDE_MODE_SUPPLEMENT"
          ],
          "description": "Required. Indicates whether the additional data should override or supplement the custom entity type definition.",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "The collection of session entities overrides the collection of entities in the corresponding custom entity type.",
            "The collection of session entities extends the collection of entities in the corresponding custom entity type. Note: Even in this override mode calls to `ListSessionEntityTypes`, `GetSessionEntityType`, `CreateSessionEntityType` and `UpdateSessionEntityType` only return the additional entities added in this session entity type. If you want to get the supplemented list, please call EntityTypes.GetEntityType on the custom entity type and merge."
          ],
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2SessionEntityType",
      "description": "A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities, called session entities, during a session. Session entities can extend or replace custom entity types and only exist during the session that they were created for. All session data, including session entities, is stored by Dialogflow for 20 minutes. For more information, see the [session entity guide](https://cloud.google.com/dialogflow/docs/entities-session)."
    },
    "GoogleCloudDialogflowCxV3IntentInput": {
      "description": "Represents the intent to trigger programmatically rather than as a result of natural language processing.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3IntentInput",
      "properties": {
        "intent": {
          "description": "Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess": {
      "properties": {
        "metadata": {
          "description": "Custom metadata. Dialogflow doesn't impose any structure on this.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess",
      "description": "Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue."
    },
    "GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest": {
      "properties": {
        "dataFormat": {
          "enumDescriptions": [
            "Unspecified format.",
            "Raw bytes.",
            "JSON format."
          ],
          "type": "string",
          "enum": [
            "DATA_FORMAT_UNSPECIFIED",
            "BLOB",
            "JSON"
          ],
          "description": "The data format of the exported test cases. If not specified, `BLOB` is assumed."
        },
        "filter": {
          "description": "The filter expression used to filter exported test cases, see [API Filtering](https://aip.dev/160). The expression is case insensitive and supports the following syntax: name = [OR name = ] ... For example: * \"name = t1 OR name = t2\" matches the test case with the exact resource name \"t1\" or \"t2\".",
          "type": "string"
        },
        "gcsUri": {
          "description": "The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the test cases to. The format of this URI must be `gs:///`. If unspecified, the serialized test cases is returned inline. Dialogflow performs a write operation for the Cloud Storage object on the caller's behalf, so your request authentication must have write permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest",
      "description": "The request message for TestCases.ExportTestCases."
    },
    "GoogleCloudDialogflowCxV3beta1ListTestCasesResponse": {
      "description": "The response message for TestCases.ListTestCases.",
      "id": "GoogleCloudDialogflowCxV3beta1ListTestCasesResponse",
      "properties": {
        "testCases": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestCase"
          },
          "description": "The list of test cases. There will be a maximum number of items returned based on the page_size field in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3WebhookResponse": {
      "properties": {
        "targetPage": {
          "type": "string",
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
        },
        "targetFlow": {
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        },
        "pageInfo": {
          "$ref": "GoogleCloudDialogflowCxV3PageInfo",
          "description": "Information about page status. This field can be omitted by the webhook if it does not intend to modify page status."
        },
        "fulfillmentResponse": {
          "description": "The fulfillment response to send to the user. This field can be omitted by the webhook if it does not intend to send any response to the user.",
          "$ref": "GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse"
        },
        "sessionInfo": {
          "$ref": "GoogleCloudDialogflowCxV3SessionInfo",
          "description": "Information about session status. This field can be omitted by the webhook if it does not intend to modify session status."
        },
        "payload": {
          "description": "Value to append directly to QueryResult.webhook_payloads.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      },
      "description": "The response message for a webhook call.",
      "id": "GoogleCloudDialogflowCxV3WebhookResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3WebhookRequest": {
      "properties": {
        "messages": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessage"
          },
          "type": "array",
          "description": "The list of rich message responses to present to the user. Webhook can choose to append or replace this list in WebhookResponse.fulfillment_response;"
        },
        "sessionInfo": {
          "$ref": "GoogleCloudDialogflowCxV3SessionInfo",
          "description": "Information about session status."
        },
        "languageCode": {
          "description": "The language code specified in the original request.",
          "type": "string"
        },
        "detectIntentResponseId": {
          "description": "Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller.",
          "type": "string"
        },
        "intentInfo": {
          "$ref": "GoogleCloudDialogflowCxV3WebhookRequestIntentInfo",
          "description": "Information about the last matched intent."
        },
        "transcript": {
          "type": "string",
          "description": "If natural language speech audio was provided as input, this field will contain the transcript for the audio."
        },
        "triggerIntent": {
          "type": "string",
          "description": "If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`."
        },
        "sentimentAnalysisResult": {
          "$ref": "GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult",
          "description": "The sentiment analysis result of the current user request. The field is filled when sentiment analysis is configured to be enabled for the request."
        },
        "triggerEvent": {
          "type": "string",
          "description": "If an event was provided as input, this field will contain the name of the event."
        },
        "pageInfo": {
          "description": "Information about page status.",
          "$ref": "GoogleCloudDialogflowCxV3PageInfo"
        },
        "payload": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Custom data set in QueryParameters.payload.",
          "type": "object"
        },
        "fulfillmentInfo": {
          "description": "Always present. Information about the fulfillment that triggered this webhook call.",
          "$ref": "GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo"
        },
        "text": {
          "type": "string",
          "description": "If natural language text was provided as input, this field will contain a copy of the text."
        }
      },
      "description": "The request message for a webhook call. The request is sent as a JSON object and the field names will be presented in camel cases. You may see undocumented fields in an actual request. These fields are used internally by Dialogflow and should be ignored.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3WebhookRequest"
    },
    "GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall": {
      "description": "Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "Transfer the call to a phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164)."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookGenericWebService": {
      "properties": {
        "username": {
          "type": "string",
          "description": "The user name for HTTP Basic authentication."
        },
        "requestHeaders": {
          "type": "object",
          "description": "The HTTP request headers to send together with webhook requests.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "allowedCaCerts": {
          "items": {
            "format": "byte",
            "type": "string"
          },
          "description": "Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with \"subject alt name\". For instance a certificate can be self-signed using the following command, ``` openssl x509 -req -days 200 -in example.com.csr \\ -signkey example.com.key \\ -out example.com.crt \\ -extfile \u003c(printf \"\\nsubjectAltName='DNS:www.example.com'\") ```",
          "type": "array"
        },
        "password": {
          "type": "string",
          "description": "The password for HTTP Basic authentication."
        },
        "uri": {
          "description": "Required. The webhook URI for receiving POST requests. It must use https protocol.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1WebhookGenericWebService",
      "description": "Represents configuration for a generic web service.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2SentimentAnalysisResult": {
      "properties": {
        "queryTextSentiment": {
          "description": "The sentiment analysis result for `query_text`.",
          "$ref": "GoogleCloudDialogflowV2Sentiment"
        }
      },
      "description": "The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config",
      "type": "object",
      "id": "GoogleCloudDialogflowV2SentimentAnalysisResult"
    },
    "GoogleCloudDialogflowV2IntentMessageTableCardCell": {
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. Text in this cell."
        }
      },
      "type": "object",
      "description": "Cell of TableCardRow.",
      "id": "GoogleCloudDialogflowV2IntentMessageTableCardCell"
    },
    "GoogleCloudDialogflowV2ExportOperationMetadata": {
      "description": "Metadata related to the Export Data Operations (e.g. ExportDocument).",
      "properties": {
        "exportedGcsDestination": {
          "description": "Cloud Storage file path of the exported data.",
          "$ref": "GoogleCloudDialogflowV2GcsDestination"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2ExportOperationMetadata"
    },
    "GoogleCloudDialogflowCxV3beta1ContinuousTestResult": {
      "properties": {
        "name": {
          "description": "The resource name for the continuous test result. Format: `projects//locations//agents//environments//continuousTestResults/`.",
          "type": "string"
        },
        "runTime": {
          "description": "Time when the continuous testing run starts.",
          "format": "google-datetime",
          "type": "string"
        },
        "result": {
          "enumDescriptions": [
            "Not specified. Should never be used.",
            "All the tests passed.",
            "At least one test did not pass."
          ],
          "enum": [
            "AGGREGATED_TEST_RESULT_UNSPECIFIED",
            "PASSED",
            "FAILED"
          ],
          "type": "string",
          "description": "The result of this continuous test run, i.e. whether all the tests in this continuous test run pass or not."
        },
        "testCaseResults": {
          "type": "array",
          "description": "A list of individual test case results names in this continuous test run.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ContinuousTestResult",
      "description": "Represents a result from running a test case in an agent environment.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1Flow": {
      "id": "GoogleCloudDialogflowCxV3beta1Flow",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the flow."
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the flow. Format: `projects//locations//agents//flows/`."
        },
        "nluSettings": {
          "$ref": "GoogleCloudDialogflowCxV3beta1NluSettings",
          "description": "NLU related settings of the flow."
        },
        "transitionRouteGroups": {
          "description": "A flow's transition route group serve two purposes: * They are responsible for matching the user's first utterances in the flow. * They are inherited by every page's transition route groups. Transition route groups defined in the page have higher priority than those defined in the flow. Format:`projects//locations//agents//flows//transitionRouteGroups/`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "description": {
          "description": "The description of the flow. The maximum length is 500 characters. If exceeded, the request is rejected.",
          "type": "string"
        },
        "transitionRoutes": {
          "description": "A flow's transition routes serve two purposes: * They are responsible for matching the user's first utterances in the flow. * They are inherited by every page's transition routes and can support use cases such as the user saying \"help\" or \"can I talk to a human?\", which can be handled in a common way regardless of the current page. Transition routes defined in the page have higher priority than those defined in the flow. TransitionRoutes are evalauted in the following order: * TransitionRoutes with intent specified. * TransitionRoutes with only condition specified. TransitionRoutes with intent specified are inherited by pages in the flow.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TransitionRoute"
          },
          "type": "array"
        },
        "eventHandlers": {
          "type": "array",
          "description": "A flow's event handlers serve two purposes: * They are responsible for handling events (e.g. no match, webhook errors) in the flow. * They are inherited by every page's event handlers, which can be used to handle common events regardless of the current page. Event handlers defined in the page have higher priority than those defined in the flow. Unlike transition_routes, these handlers are evaluated on a first-match basis. The first one that matches the event get executed, with the rest being ignored.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1EventHandler"
          }
        }
      },
      "description": "Flows represents the conversation flows when you build your chatbot agent. A flow consists of many pages connected by the transition routes. Conversations always start with the built-in Start Flow (with an all-0 ID). Transition routes can direct the conversation session from the current flow (parent flow) to another flow (sub flow). When the sub flow is finished, Dialogflow will bring the session back to the parent flow, where the sub flow is started. Usually, when a transition route is followed by a matched intent, the intent will be \"consumed\". This means the intent won't activate more transition routes. However, when the followed transition route moves the conversation session into a different flow, the matched intent can be carried over and to be consumed in the target flow.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ExperimentDefinition": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ExperimentDefinition",
      "description": "Definition of the experiment.",
      "properties": {
        "versionVariants": {
          "$ref": "GoogleCloudDialogflowCxV3beta1VersionVariants",
          "description": "The flow versions as the variants of this experiment."
        },
        "condition": {
          "type": "string",
          "description": "The condition defines which subset of sessions are selected for this experiment. If not specified, all sessions are eligible. E.g. \"query_input.language_code=en\" See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition)."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1HumanAgentAssistantEvent": {
      "description": "Output only. Represents a notification sent to Pub/Sub subscribers for agent assistant events in a specific conversation.",
      "id": "GoogleCloudDialogflowV2beta1HumanAgentAssistantEvent",
      "properties": {
        "suggestionResults": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1SuggestionResult"
          },
          "description": "The suggestion results payload that this notification refers to. It will only be set when HumanAgentAssistantConfig.SuggestionConfig.group_suggestion_responses sets to true.",
          "type": "array"
        },
        "participant": {
          "type": "string",
          "description": "The participant that the suggestion is compiled for. And This field is used to call Participants.ListSuggestions API. Format: `projects//conversations//participants/`. It will not be set in legacy workflow. HumanAgentAssistantConfig.name for more information."
        },
        "conversation": {
          "type": "string",
          "description": "The conversation this notification refers to. Format: `projects//conversations/`."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ExperimentResultConfidenceInterval": {
      "id": "GoogleCloudDialogflowCxV3beta1ExperimentResultConfidenceInterval",
      "properties": {
        "ratio": {
          "description": "The percent change between an experiment metric's value and the value for its control.",
          "format": "double",
          "type": "number"
        },
        "confidenceLevel": {
          "description": "The confidence level used to construct the interval, i.e. there is X% chance that the true value is within this interval.",
          "type": "number",
          "format": "double"
        },
        "lowerBound": {
          "format": "double",
          "description": "Lower bound of the interval.",
          "type": "number"
        },
        "upperBound": {
          "format": "double",
          "type": "number",
          "description": "Upper bound of the interval."
        }
      },
      "description": "A confidence interval is a range of possible values for the experiment objective you are trying to measure.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1OutputAudioConfig": {
      "description": "Instructs the speech synthesizer how to generate the output audio content.",
      "id": "GoogleCloudDialogflowCxV3beta1OutputAudioConfig",
      "properties": {
        "audioEncoding": {
          "type": "string",
          "enum": [
            "OUTPUT_AUDIO_ENCODING_UNSPECIFIED",
            "OUTPUT_AUDIO_ENCODING_LINEAR_16",
            "OUTPUT_AUDIO_ENCODING_MP3",
            "OUTPUT_AUDIO_ENCODING_MP3_64_KBPS",
            "OUTPUT_AUDIO_ENCODING_OGG_OPUS",
            "OUTPUT_AUDIO_ENCODING_MULAW"
          ],
          "description": "Required. Audio encoding of the synthesized audio content.",
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM). Audio content returned as LINEAR16 also contains a WAV header.",
            "MP3 audio at 32kbps.",
            "MP3 audio at 64kbps.",
            "Opus encoded audio wrapped in an ogg container. The result will be a file which can be played natively on Android, and in browsers (at least Chrome and Firefox). The quality of the encoding is considerably higher than MP3 while using approximately the same bitrate.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law."
          ]
        },
        "sampleRateHertz": {
          "description": "Optional. The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).",
          "format": "int32",
          "type": "integer"
        },
        "synthesizeSpeechConfig": {
          "description": "Optional. Configuration of how speech should be synthesized.",
          "$ref": "GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1TransitionCoverage": {
      "id": "GoogleCloudDialogflowCxV3beta1TransitionCoverage",
      "properties": {
        "coverageScore": {
          "description": "The percent of transitions in the agent that are covered.",
          "type": "number",
          "format": "float"
        },
        "transitions": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition"
          },
          "type": "array",
          "description": "The list of Transitions present in the agent."
        }
      },
      "description": "Transition coverage represents the percentage of all possible page transitions (page-level transition routes and event handlers, excluding transition route groups) present within any of a parent's test cases.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo",
      "description": "Additional info about the select item for when it is triggered in a dialog.",
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Required. A unique key that will be sent back to the agent if this response is given."
        },
        "synonyms": {
          "type": "array",
          "description": "Optional. A list of synonyms that can also be used to trigger this item in dialog.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCardButton": {
      "properties": {
        "text": {
          "description": "Optional. The text to show on the button.",
          "type": "string"
        },
        "postback": {
          "description": "Optional. The text to send back to the Dialogflow API or a URI to open.",
          "type": "string"
        }
      },
      "description": "Optional. Contains information about a button.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCardButton",
      "type": "object"
    },
    "GoogleCloudDialogflowV2KnowledgeOperationMetadata": {
      "description": "Metadata in google::longrunning::Operation for Knowledge operations.",
      "id": "GoogleCloudDialogflowV2KnowledgeOperationMetadata",
      "properties": {
        "exportOperationMetadata": {
          "$ref": "GoogleCloudDialogflowV2ExportOperationMetadata",
          "description": "Metadata for the Export Data Operation such as the destination of export."
        },
        "knowledgeBase": {
          "description": "The name of the knowledge base interacted with during the operation.",
          "type": "string"
        },
        "state": {
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "type": "string",
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ],
          "description": "Output only. The current state of this operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction": {
      "properties": {
        "text": {
          "description": "Text to display alongside the action.",
          "type": "string"
        },
        "shareLocation": {
          "description": "Suggested client side action: Share user location",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation"
        },
        "openUrl": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri",
          "description": "Suggested client side action: Open a URI on device"
        },
        "postbackData": {
          "description": "Opaque payload that the Dialogflow receives in a user event when the user taps the suggested action. This data will be also forwarded to webhook to allow performing custom business logic.",
          "type": "string"
        },
        "dial": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial",
          "description": "Suggested client side action: Dial a phone number"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction",
      "type": "object",
      "description": "Rich Business Messaging (RBM) suggested client-side action that the user can choose from the card."
    },
    "GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult": {
      "type": "object",
      "properties": {
        "score": {
          "format": "float",
          "type": "number",
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment)."
        },
        "magnitude": {
          "type": "number",
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
          "format": "float"
        }
      },
      "id": "GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult",
      "description": "Represents the result of sentiment analysis."
    },
    "GoogleCloudDialogflowV2beta1FaqAnswer": {
      "properties": {
        "answer": {
          "description": "The piece of text from the `source` knowledge base document.",
          "type": "string"
        },
        "metadata": {
          "description": "A map that contains metadata about the answer and the document from which it originates.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "source": {
          "description": "Indicates which Knowledge Document this answer was extracted from. Format: `projects//locations//agent/knowledgeBases//documents/`.",
          "type": "string"
        },
        "question": {
          "type": "string",
          "description": "The corresponding FAQ question."
        },
        "answerRecord": {
          "type": "string",
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\""
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "The system's confidence score that this Knowledge answer is a good match for this conversational query, range from 0.0 (completely uncertain) to 1.0 (completely certain)."
        }
      },
      "description": "Represents answer from \"frequently asked questions\".",
      "id": "GoogleCloudDialogflowV2beta1FaqAnswer",
      "type": "object"
    },
    "GoogleCloudDialogflowV2MessageAnnotation": {
      "description": "Represents the result of annotation for the message.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2MessageAnnotation",
      "properties": {
        "containEntities": {
          "type": "boolean",
          "description": "Indicates whether the text message contains entities."
        },
        "parts": {
          "description": "The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text].",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2AnnotatedMessagePart"
          }
        }
      }
    },
    "GoogleCloudDialogflowCxV3ImportDocumentsResponse": {
      "id": "GoogleCloudDialogflowCxV3ImportDocumentsResponse",
      "type": "object",
      "properties": {
        "warnings": {
          "description": "Includes details about skipped documents or any other warnings.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      },
      "description": "Response message for Documents.ImportDocuments."
    },
    "GoogleCloudDialogflowCxV3RunContinuousTestMetadata": {
      "id": "GoogleCloudDialogflowCxV3RunContinuousTestMetadata",
      "description": "Metadata returned for the Environments.RunContinuousTest long running operation.",
      "properties": {
        "errors": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestError"
          },
          "description": "The test errors.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1VariantsHistory": {
      "id": "GoogleCloudDialogflowCxV3beta1VariantsHistory",
      "type": "object",
      "description": "The history of variants update.",
      "properties": {
        "versionVariants": {
          "$ref": "GoogleCloudDialogflowCxV3beta1VersionVariants",
          "description": "The flow versions as the variants."
        },
        "updateTime": {
          "description": "Update time of the variants.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction": {
      "description": "Opens the given URI.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Required. The HTTP or HTTPS scheme URI."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction"
    },
    "GoogleCloudDialogflowV2beta1Intent": {
      "properties": {
        "parameters": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentParameter"
          },
          "description": "Optional. The collection of parameters associated with the intent.",
          "type": "array"
        },
        "priority": {
          "description": "Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.",
          "type": "integer",
          "format": "int32"
        },
        "endInteraction": {
          "description": "Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.",
          "type": "boolean"
        },
        "webhookState": {
          "enum": [
            "WEBHOOK_STATE_UNSPECIFIED",
            "WEBHOOK_STATE_ENABLED",
            "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"
          ],
          "enumDescriptions": [
            "Webhook is disabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent. Also, each slot filling prompt is forwarded to the webhook."
          ],
          "description": "Optional. Indicates whether webhooks are enabled for the intent.",
          "type": "string"
        },
        "parentFollowupIntentName": {
          "type": "string",
          "description": "Optional. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`."
        },
        "name": {
          "type": "string",
          "description": "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` - `projects//locations//agent/intents/`"
        },
        "inputContextNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The list of context names required for this intent to be triggered. Formats: - `projects//agent/sessions/-/contexts/` - `projects//locations//agent/sessions/-/contexts/`"
        },
        "action": {
          "type": "string",
          "description": "Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces."
        },
        "outputContexts": {
          "type": "array",
          "description": "Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Context"
          }
        },
        "defaultResponsePlatforms": {
          "items": {
            "enumDescriptions": [
              "Not specified.",
              "Facebook.",
              "Slack.",
              "Telegram.",
              "Kik.",
              "Skype.",
              "Line.",
              "Viber.",
              "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
              "Telephony Gateway.",
              "Google Hangouts."
            ],
            "enum": [
              "PLATFORM_UNSPECIFIED",
              "FACEBOOK",
              "SLACK",
              "TELEGRAM",
              "KIK",
              "SKYPE",
              "LINE",
              "VIBER",
              "ACTIONS_ON_GOOGLE",
              "TELEPHONY",
              "GOOGLE_HANGOUTS"
            ],
            "type": "string"
          },
          "description": "Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).",
          "type": "array"
        },
        "mlEnabled": {
          "type": "boolean",
          "description": "Optional. Indicates whether Machine Learning is enabled for the intent. Note: If `ml_enabled` setting is set to false, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off. DEPRECATED! Please use `ml_disabled` field instead. NOTE: If both `ml_enabled` and `ml_disabled` are either not set or false, then the default value is determined as follows: - Before April 15th, 2018 the default is: ml_enabled = false / ml_disabled = true. - After April 15th, 2018 the default is: ml_enabled = true / ml_disabled = false."
        },
        "messages": {
          "description": "Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessage"
          },
          "type": "array"
        },
        "displayName": {
          "description": "Required. The name of this intent.",
          "type": "string"
        },
        "trainingPhrases": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentTrainingPhrase"
          },
          "type": "array",
          "description": "Optional. The collection of examples that the agent is trained on."
        },
        "resetContexts": {
          "description": "Optional. Indicates whether to delete all contexts in the current session when this intent is matched.",
          "type": "boolean"
        },
        "mlDisabled": {
          "description": "Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.",
          "type": "boolean"
        },
        "followupIntentInfo": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo"
          },
          "description": "Output only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output.",
          "type": "array",
          "readOnly": true
        },
        "isFallback": {
          "description": "Optional. Indicates whether this is a fallback intent.",
          "type": "boolean"
        },
        "liveAgentHandoff": {
          "type": "boolean",
          "description": "Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false."
        },
        "events": {
          "description": "Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rootFollowupIntentName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. Format: `projects//agent/intents/`."
        }
      },
      "type": "object",
      "description": "An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification. For more information, see the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview).",
      "id": "GoogleCloudDialogflowV2beta1Intent"
    },
    "GoogleCloudDialogflowCxV3beta1EventHandler": {
      "properties": {
        "targetFlow": {
          "type": "string",
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`."
        },
        "triggerFulfillment": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Fulfillment",
          "description": "The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The unique identifier of this event handler.",
          "type": "string"
        },
        "event": {
          "type": "string",
          "description": "Required. The name of the event to handle."
        },
        "targetPage": {
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        }
      },
      "description": "An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow.",
      "id": "GoogleCloudDialogflowCxV3beta1EventHandler",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1AgentValidationResult": {
      "properties": {
        "flowValidationResults": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FlowValidationResult"
          },
          "description": "Contains all flow validation results."
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the agent validation result. Format: `projects//locations//agents//validationResult`."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1AgentValidationResult",
      "description": "The response message for Agents.GetAgentValidationResult.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2WebhookRequest": {
      "type": "object",
      "description": "The request message for a webhook call.",
      "id": "GoogleCloudDialogflowV2WebhookRequest",
      "properties": {
        "session": {
          "type": "string",
          "description": "The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook implementation. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`."
        },
        "originalDetectIntentRequest": {
          "description": "Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call.",
          "$ref": "GoogleCloudDialogflowV2OriginalDetectIntentRequest"
        },
        "queryResult": {
          "description": "The result of the conversational query or event processing. Contains the same value as `[Streaming]DetectIntentResponse.query_result`.",
          "$ref": "GoogleCloudDialogflowV2QueryResult"
        },
        "responseId": {
          "type": "string",
          "description": "The unique identifier of the response. Contains the same value as `[Streaming]DetectIntentResponse.response_id`."
        }
      }
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleRpcStatus"
    },
    "GoogleCloudDialogflowCxV3beta1FlowValidationResult": {
      "description": "The response message for Flows.GetFlowValidationResult.",
      "id": "GoogleCloudDialogflowCxV3beta1FlowValidationResult",
      "properties": {
        "updateTime": {
          "description": "Last time the flow was validated.",
          "type": "string",
          "format": "google-datetime"
        },
        "validationMessages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ValidationMessage"
          },
          "description": "Contains all validation messages."
        },
        "name": {
          "description": "The unique identifier of the flow validation result. Format: `projects//locations//agents//flows//validationResult`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ListExperimentsResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ListExperimentsResponse",
      "properties": {
        "experiments": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1Experiment"
          },
          "description": "The list of experiments. There will be a maximum number of items returned based on the page_size field in the request. The list may in some cases be empty or contain fewer entries than page_size even if this isn't the last page.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "description": "The response message for Experiments.ListExperiments."
    },
    "GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverageCoverageTransition": {
      "type": "object",
      "description": "A transition coverage in a transition route group.",
      "properties": {
        "transitionRoute": {
          "$ref": "GoogleCloudDialogflowCxV3beta1TransitionRoute",
          "description": "Intent route or condition route."
        },
        "covered": {
          "description": "Whether or not the transition route is covered by at least one of the agent's test cases.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverageCoverageTransition"
    },
    "GoogleCloudDialogflowCxV3beta1Experiment": {
      "id": "GoogleCloudDialogflowCxV3beta1Experiment",
      "description": "Represents an experiment in an environment.",
      "type": "object",
      "properties": {
        "experimentLength": {
          "format": "google-duration",
          "description": "Maximum number of days to run the experiment. If auto-rollout is not enabled, default value and maximum will be 30 days. If auto-rollout is enabled, default value and maximum will be 6 days.",
          "type": "string"
        },
        "rolloutState": {
          "description": "State of the auto rollout process.",
          "$ref": "GoogleCloudDialogflowCxV3beta1RolloutState"
        },
        "state": {
          "enumDescriptions": [
            "State unspecified.",
            "The experiment is created but not started yet.",
            "The experiment is running.",
            "The experiment is done.",
            "The experiment with auto-rollout enabled has failed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "RUNNING",
            "DONE",
            "ROLLOUT_FAILED"
          ],
          "description": "The current state of the experiment. Transition triggered by Experiments.StartExperiment: DRAFT-\u003eRUNNING. Transition triggered by Experiments.CancelExperiment: DRAFT-\u003eDONE or RUNNING-\u003eDONE.",
          "type": "string"
        },
        "variantsHistory": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1VariantsHistory"
          },
          "description": "The history of updates to the experiment variants.",
          "type": "array"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "End time of this experiment."
        },
        "rolloutFailureReason": {
          "description": "The reason why rollout has failed. Should only be set when state is ROLLOUT_FAILED.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the experiment (unique in an environment). Limit of 64 characters."
        },
        "createTime": {
          "description": "Creation time of this experiment.",
          "type": "string",
          "format": "google-datetime"
        },
        "rolloutConfig": {
          "$ref": "GoogleCloudDialogflowCxV3beta1RolloutConfig",
          "description": "The configuration for auto rollout. If set, there should be exactly two variants in the experiment (control variant being the default version of the flow), the traffic allocation for the non-control variant will gradually increase to 100% when conditions are met, and eventually replace the control variant to become the default version of the flow."
        },
        "name": {
          "description": "The name of the experiment. Format: projects//locations//agents//environments//experiments/..",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "The human-readable description of the experiment."
        },
        "definition": {
          "description": "The definition of the experiment.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ExperimentDefinition"
        },
        "startTime": {
          "description": "Start time of this experiment.",
          "type": "string",
          "format": "google-datetime"
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Last update time of this experiment."
        },
        "result": {
          "description": "Inference result of the experiment.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ExperimentResult"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverageCoverage": {
      "properties": {
        "transitions": {
          "description": "The list of transition routes and coverage in the transition route group.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverageCoverageTransition"
          }
        },
        "routeGroup": {
          "$ref": "GoogleCloudDialogflowCxV3beta1TransitionRouteGroup",
          "description": "Transition route group metadata. Only name and displayName will be set."
        },
        "coverageScore": {
          "format": "float",
          "type": "number",
          "description": "The percent of transition routes in the transition route group that are covered."
        }
      },
      "type": "object",
      "description": "Coverage result message for one transition route group.",
      "id": "GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverageCoverage"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageListSelect": {
      "description": "The card for presenting a list of options to select from.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. The overall title of the list."
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. Subtitle of the list."
        },
        "items": {
          "description": "Required. List items.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageListSelectItem"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageListSelect"
    },
    "GoogleCloudDialogflowCxV3IntentTrainingPhrase": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3IntentTrainingPhrase",
      "properties": {
        "id": {
          "description": "Output only. The unique identifier of the training phrase.",
          "type": "string"
        },
        "repeatCount": {
          "format": "int32",
          "description": "Indicates how many times this example was added to the intent.",
          "type": "integer"
        },
        "parts": {
          "description": "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3IntentTrainingPhrasePart"
          }
        }
      },
      "description": "Represents an example that the agent is trained on to identify the intent."
    },
    "GoogleCloudDialogflowCxV3beta1ValidateFlowRequest": {
      "type": "object",
      "description": "The request message for Flows.ValidateFlow.",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "If not specified, the agent's default language is used."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ValidateFlowRequest"
    },
    "GoogleCloudDialogflowCxV3ExportAgentResponse": {
      "type": "object",
      "description": "The response message for Agents.ExportAgent.",
      "properties": {
        "agentContent": {
          "description": "Uncompressed raw byte content for agent.",
          "type": "string",
          "format": "byte"
        },
        "agentUri": {
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in ExportAgentRequest.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3ExportAgentResponse"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageColumnProperties": {
      "properties": {
        "horizontalAlignment": {
          "description": "Optional. Defines text alignment for all cells in this column.",
          "type": "string",
          "enum": [
            "HORIZONTAL_ALIGNMENT_UNSPECIFIED",
            "LEADING",
            "CENTER",
            "TRAILING"
          ],
          "enumDescriptions": [
            "Text is aligned to the leading edge of the column.",
            "Text is aligned to the leading edge of the column.",
            "Text is centered in the column.",
            "Text is aligned to the trailing edge of the column."
          ]
        },
        "header": {
          "description": "Required. Column heading.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Column properties for TableCard.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageColumnProperties"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSuggestion": {
      "description": "The suggestion chip message that the user can tap to quickly post a reply to the conversation.",
      "properties": {
        "title": {
          "description": "Required. The text shown the in the suggestion chip.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSuggestion"
    },
    "GoogleCloudDialogflowV2beta1ConversationEvent": {
      "properties": {
        "errorStatus": {
          "description": "Optional. More detailed information about an error. Only set for type UNRECOVERABLE_ERROR_IN_PHONE_CALL.",
          "$ref": "GoogleRpcStatus"
        },
        "newMessagePayload": {
          "description": "Payload of NEW_MESSAGE event.",
          "$ref": "GoogleCloudDialogflowV2beta1Message"
        },
        "conversation": {
          "type": "string",
          "description": "Required. The unique identifier of the conversation this notification refers to. Format: `projects//conversations/`."
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CONVERSATION_STARTED",
            "CONVERSATION_FINISHED",
            "HUMAN_INTERVENTION_NEEDED",
            "NEW_MESSAGE",
            "UNRECOVERABLE_ERROR"
          ],
          "enumDescriptions": [
            "Type not set.",
            "A new conversation has been opened. This is fired when a telephone call is answered, or a conversation is created via the API.",
            "An existing conversation has closed. This is fired when a telephone call is terminated, or a conversation is closed via the API.",
            "An existing conversation has received notification from Dialogflow that human intervention is required.",
            "An existing conversation has received a new message, either from API or telephony. It is configured in ConversationProfile.new_message_event_notification_config",
            "Unrecoverable error during a telephone call. In general non-recoverable errors only occur if something was misconfigured in the ConversationProfile corresponding to the call. After a non-recoverable error, Dialogflow may stop responding. We don't fire this event: * in an API call because we can directly return the error, or, * when we can recover from an error."
          ],
          "description": "Required. The type of the event that this notification refers to.",
          "type": "string"
        }
      },
      "description": "Represents a notification sent to Pub/Sub subscribers for conversation lifecycle events.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1ConversationEvent"
    },
    "GoogleCloudDialogflowV2beta1ArticleAnswer": {
      "description": "Represents article answer.",
      "id": "GoogleCloudDialogflowV2beta1ArticleAnswer",
      "properties": {
        "uri": {
          "description": "The article URI.",
          "type": "string"
        },
        "answerRecord": {
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\"",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map that contains metadata about the answer and the document from which it originates.",
          "type": "object"
        },
        "title": {
          "type": "string",
          "description": "The article title."
        },
        "snippets": {
          "description": "Output only. Article snippets.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2BatchUpdateIntentsResponse": {
      "description": "The response message for Intents.BatchUpdateIntents.",
      "properties": {
        "intents": {
          "description": "The collection of updated or created intents.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Intent"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2BatchUpdateIntentsResponse"
    },
    "GoogleCloudDialogflowV2WebhookResponse": {
      "description": "The response message for a webhook call. This response is validated by the Dialogflow server. If validation fails, an error will be returned in the QueryResult.diagnostic_info field. Setting JSON fields to an empty value with the wrong type is a common error. To avoid this error: - Use `\"\"` for empty strings - Use `{}` or `null` for empty objects - Use `[]` or `null` for empty arrays For more information, see the [Protocol Buffers Language Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).",
      "properties": {
        "followupEventInput": {
          "$ref": "GoogleCloudDialogflowV2EventInput",
          "description": "Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`, and `payload` fields."
        },
        "payload": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)"
        },
        "sessionEntityTypes": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
          },
          "description": "Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods."
        },
        "source": {
          "type": "string",
          "description": "Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API caller."
        },
        "outputContexts": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          },
          "type": "array",
          "description": "Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to populate QueryResult.output_contexts sent to the integration or API caller."
        },
        "fulfillmentText": {
          "type": "string",
          "description": "Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_text sent to the integration or API caller."
        },
        "fulfillmentMessages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessage"
          },
          "description": "Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API caller."
        }
      },
      "id": "GoogleCloudDialogflowV2WebhookResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowV3alpha1ImportDocumentsOperationMetadata": {
      "type": "object",
      "description": "Metadata for ImportDocuments operation.",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "id": "GoogleCloudDialogflowV3alpha1ImportDocumentsOperationMetadata"
    },
    "GoogleCloudLocationListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudLocationLocation"
          },
          "description": "A list of locations that matches the specified filter in the request."
        }
      },
      "id": "GoogleCloudLocationListLocationsResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. The text for this part."
        },
        "alias": {
          "type": "string",
          "description": "Optional. The parameter name for the value extracted from the annotated part of the example. This field is required for annotated parts of the training phrase."
        },
        "entityType": {
          "type": "string",
          "description": "Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training phrase."
        },
        "userDefined": {
          "description": "Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow Console is used to manually annotate the part. When creating an annotated part with the API, you must set this to true.",
          "type": "boolean"
        }
      },
      "description": "Represents a part of a training phrase.",
      "id": "GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart"
    },
    "GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverage": {
      "description": "Transition route group coverage represents the percentage of all possible transition routes present within any of a parent's test cases. The results are grouped by the transition route group.",
      "id": "GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverage",
      "type": "object",
      "properties": {
        "coverageScore": {
          "description": "The percent of transition routes in all the transition route groups that are covered.",
          "type": "number",
          "format": "float"
        },
        "coverages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverageCoverage"
          },
          "description": "Transition route group coverages."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply",
      "properties": {
        "text": {
          "description": "Suggested reply text.",
          "type": "string"
        },
        "postbackData": {
          "type": "string",
          "description": "Opaque payload that the Dialogflow receives in a user event when the user taps the suggested reply. This data will be also forwarded to webhook to allow performing custom business logic."
        }
      },
      "description": "Rich Business Messaging (RBM) suggested reply that the user can click instead of typing in their own response.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject": {
      "type": "object",
      "description": "Response media object for media content card.",
      "id": "GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject",
      "properties": {
        "name": {
          "description": "Required. Name of media card.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of media card.",
          "type": "string"
        },
        "contentUrl": {
          "description": "Required. Url where the media is stored.",
          "type": "string"
        },
        "icon": {
          "description": "Optional. Icon to display above media content.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        },
        "largeImage": {
          "description": "Optional. Image to display above media content.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio",
      "description": "Plays audio from a file in Telephony Gateway.",
      "type": "object",
      "properties": {
        "audioUri": {
          "description": "Required. URI to a Google Cloud Storage object containing the audio to play, e.g., \"gs://bucket/object\". The object must contain a single channel (mono) of linear PCM audio (2 bytes / sample) at 8kHz. This object must be readable by the `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` service account where is the number of the Telephony Gateway project (usually the same as the Dialogflow agent project). If the Google Cloud Storage bucket is in the Telephony Gateway project, this permission is added by default when enabling the Dialogflow V2 API. For audio from other sources, consider using the `TelephonySynthesizeSpeech` message with SSML.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ExportTestCasesResponse": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "Uncompressed raw byte content for test cases.",
          "format": "byte"
        },
        "gcsUri": {
          "type": "string",
          "description": "The URI to a file containing the exported test cases. This field is populated only if `gcs_uri` is specified in ExportTestCasesRequest."
        }
      },
      "description": "The response message for TestCases.ExportTestCases.",
      "id": "GoogleCloudDialogflowCxV3beta1ExportTestCasesResponse"
    },
    "GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo": {
      "id": "GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo",
      "type": "object",
      "properties": {
        "followupIntentName": {
          "description": "The unique identifier of the followup intent. Format: `projects//agent/intents/`.",
          "type": "string"
        },
        "parentFollowupIntentName": {
          "description": "The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`.",
          "type": "string"
        }
      },
      "description": "Represents a single followup intent in the chain."
    },
    "GoogleCloudDialogflowCxV3beta1RunTestCaseRequest": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1RunTestCaseRequest",
      "description": "The request message for TestCases.RunTestCase.",
      "properties": {
        "environment": {
          "type": "string",
          "description": "Optional. Environment name. If not set, draft environment is assumed. Format: `projects//locations//agents//environments/`."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo": {
      "properties": {
        "tag": {
          "type": "string",
          "description": "Always present. The value of the Fulfillment.tag field will be populated in this field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes."
        }
      },
      "type": "object",
      "description": "Represents fulfillment information communicated to the webhook.",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo"
    },
    "GoogleCloudDialogflowCxV3beta1ListVersionsResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ListVersionsResponse",
      "description": "The response message for Versions.ListVersions.",
      "properties": {
        "versions": {
          "type": "array",
          "description": "A list of versions. There will be a maximum number of items returned based on the page_size field in the request. The list may in some cases be empty or contain fewer entries than page_size even if this isn't the last page.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1Version"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3FulfillmentConditionalCases": {
      "description": "A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.",
      "properties": {
        "cases": {
          "description": "A list of cascading if-else conditions.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3FulfillmentConditionalCases",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1RolloutState": {
      "description": "State of the auto-rollout process.",
      "id": "GoogleCloudDialogflowCxV3beta1RolloutState",
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "description": "Start time of the current step.",
          "type": "string"
        },
        "step": {
          "description": "Display name of the current auto rollout step.",
          "type": "string"
        },
        "stepIndex": {
          "type": "integer",
          "description": "Index of the current step in the auto rollout steps list.",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3TextInput": {
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3TextInput",
      "description": "Represents the natural language text to be processed."
    },
    "GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText": {
      "properties": {
        "ssml": {
          "description": "The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).",
          "type": "string"
        },
        "allowPlaybackInterruption": {
          "type": "boolean",
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.",
          "readOnly": true
        },
        "text": {
          "type": "string",
          "description": "The raw text to be synthesized."
        }
      },
      "id": "GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText",
      "description": "A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1FulfillIntentRequest": {
      "properties": {
        "match": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Match",
          "description": "The matched intent/event to fulfill."
        },
        "matchIntentRequest": {
          "description": "Must be same as the corresponding MatchIntent request, otherwise the behavior is undefined.",
          "$ref": "GoogleCloudDialogflowCxV3beta1MatchIntentRequest"
        },
        "outputAudioConfig": {
          "description": "Instructs the speech synthesizer how to generate output audio.",
          "$ref": "GoogleCloudDialogflowCxV3beta1OutputAudioConfig"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1FulfillIntentRequest",
      "type": "object",
      "description": "Request of FulfillIntent"
    },
    "GoogleCloudDialogflowCxV3BatchRunTestCasesResponse": {
      "description": "The response message for TestCases.BatchRunTestCases.",
      "id": "GoogleCloudDialogflowCxV3BatchRunTestCasesResponse",
      "type": "object",
      "properties": {
        "results": {
          "description": "The test case results. The detailed conversation turns are empty in this response.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestCaseResult"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem": {
      "type": "object",
      "properties": {
        "title": {
          "description": "Required. Title of the carousel item. Maximum of two lines of text.",
          "type": "string"
        },
        "image": {
          "description": "Optional. Hero image for the carousel item.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "footer": {
          "description": "Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text.",
          "type": "string"
        },
        "openUriAction": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction",
          "description": "Required. Action to present to the user."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the carousel item. Maximum of four lines of text."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem",
      "description": "Browsing carousel tile"
    },
    "GoogleCloudDialogflowV2ArticleAnswer": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2ArticleAnswer",
      "properties": {
        "uri": {
          "description": "The article URI.",
          "type": "string"
        },
        "answerRecord": {
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\"",
          "type": "string"
        },
        "snippets": {
          "type": "array",
          "description": "Article snippets.",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string",
          "description": "The article title."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map that contains metadata about the answer and the document from which it originates.",
          "type": "object"
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Article match confidence. The system's confidence score that this article is a good match for this conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely certain)."
        }
      },
      "description": "Represents article answer."
    },
    "GoogleCloudDialogflowCxV3ContinuousTestResult": {
      "description": "Represents a result from running a test case in an agent environment.",
      "properties": {
        "name": {
          "description": "The resource name for the continuous test result. Format: `projects//locations//agents//environments//continuousTestResults/`.",
          "type": "string"
        },
        "testCaseResults": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of individual test case results names in this continuous test run."
        },
        "runTime": {
          "description": "Time when the continuous testing run starts.",
          "type": "string",
          "format": "google-datetime"
        },
        "result": {
          "enumDescriptions": [
            "Not specified. Should never be used.",
            "All the tests passed.",
            "At least one test did not pass."
          ],
          "enum": [
            "AGGREGATED_TEST_RESULT_UNSPECIFIED",
            "PASSED",
            "FAILED"
          ],
          "type": "string",
          "description": "The result of this continuous test run, i.e. whether all the tests in this continuous test run pass or not."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ContinuousTestResult"
    },
    "GoogleCloudDialogflowCxV3ConversationTurnUserInput": {
      "id": "GoogleCloudDialogflowCxV3ConversationTurnUserInput",
      "type": "object",
      "description": "The input from the human user.",
      "properties": {
        "injectedParameters": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Parameters that need to be injected into the conversation during intent detection.",
          "type": "object"
        },
        "enableSentimentAnalysis": {
          "type": "boolean",
          "description": "Whether sentiment analysis is enabled."
        },
        "input": {
          "$ref": "GoogleCloudDialogflowCxV3QueryInput",
          "description": "Supports text input, event input, dtmf input in the test case."
        },
        "isWebhookEnabled": {
          "description": "If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDialogflowCxV3ExportTestCasesMetadata": {
      "description": "Metadata returned for the TestCases.ExportTestCases long running operation. This message currently has no fields.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ExportTestCasesMetadata",
      "properties": {}
    },
    "GoogleCloudDialogflowV2beta1EntityType": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1EntityType",
      "description": "Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted. Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent. For more information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview).",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1EntityTypeEntity"
          },
          "description": "Optional. The collection of entity entries associated with the entity type."
        },
        "autoExpansionMode": {
          "type": "string",
          "description": "Optional. Indicates whether the entity type can be automatically expanded.",
          "enum": [
            "AUTO_EXPANSION_MODE_UNSPECIFIED",
            "AUTO_EXPANSION_MODE_DEFAULT"
          ],
          "enumDescriptions": [
            "Auto expansion disabled for the entity.",
            "Allows an agent to recognize values that have not been explicitly listed in the entity."
          ]
        },
        "name": {
          "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`",
          "type": "string"
        },
        "enableFuzzyExtraction": {
          "type": "boolean",
          "description": "Optional. Enables fuzzy entity extraction during classification."
        },
        "kind": {
          "enum": [
            "KIND_UNSPECIFIED",
            "KIND_MAP",
            "KIND_LIST",
            "KIND_REGEXP"
          ],
          "description": "Required. Indicates the kind of entity type.",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Map entity types allow mapping of a group of synonyms to a reference value.",
            "List entity types contain a set of entries that do not map to reference values. However, list entity types can contain references to other entity types (with or without aliases).",
            "Regexp entity types allow to specify regular expressions in entries values."
          ],
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The name of the entity type."
        }
      }
    },
    "GoogleCloudDialogflowV2QueryResult": {
      "description": "Represents the result of conversational query or event processing.",
      "id": "GoogleCloudDialogflowV2QueryResult",
      "type": "object",
      "properties": {
        "allRequiredParamsPresent": {
          "type": "boolean",
          "description": "This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter values have been collected, or if the matched intent doesn't contain any required parameters."
        },
        "parameters": {
          "description": "The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        },
        "intent": {
          "description": "The intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name`, `display_name`, `end_interaction` and `is_fallback`.",
          "$ref": "GoogleCloudDialogflowV2Intent"
        },
        "languageCode": {
          "type": "string",
          "description": "The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes."
        },
        "outputContexts": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          },
          "type": "array",
          "description": "The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query."
        },
        "webhookPayload": {
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "intentDetectionConfidence": {
          "description": "The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list.",
          "type": "number",
          "format": "float"
        },
        "speechRecognitionConfidence": {
          "format": "float",
          "type": "number",
          "description": "The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult."
        },
        "sentimentAnalysisResult": {
          "description": "The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the request.",
          "$ref": "GoogleCloudDialogflowV2SentimentAnalysisResult"
        },
        "cancelsSlotFilling": {
          "description": "Indicates whether the conversational query triggers a cancellation for slot filling. For more information, see the [cancel slot filling documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel).",
          "type": "boolean"
        },
        "fulfillmentText": {
          "description": "The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred.",
          "type": "string"
        },
        "queryText": {
          "description": "The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user input.",
          "type": "string"
        },
        "fulfillmentMessages": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessage"
          },
          "description": "The collection of rich messages to present to the user.",
          "type": "array"
        },
        "action": {
          "type": "string",
          "description": "The action name from the matched intent."
        },
        "webhookSource": {
          "type": "string",
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response."
        },
        "diagnosticInfo": {
          "type": "object",
          "description": "Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        }
      }
    },
    "GoogleCloudDialogflowCxV3BatchRunTestCasesMetadata": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestError"
          },
          "description": "The test errors."
        }
      },
      "description": "Metadata returned for the TestCases.BatchRunTestCases long running operation.",
      "id": "GoogleCloudDialogflowCxV3BatchRunTestCasesMetadata"
    },
    "GoogleCloudDialogflowCxV3beta1TestCase": {
      "properties": {
        "displayName": {
          "description": "Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters.",
          "type": "string"
        },
        "tags": {
          "description": "Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with \"#\" and has a limit of 30 characters.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "lastTestResult": {
          "description": "The latest test result.",
          "$ref": "GoogleCloudDialogflowCxV3beta1TestCaseResult"
        },
        "creationTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. When the test was created.",
          "format": "google-datetime"
        },
        "testCaseConversationTurns": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ConversationTurn"
          },
          "description": "The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly."
        },
        "testConfig": {
          "$ref": "GoogleCloudDialogflowCxV3beta1TestConfig",
          "description": "Config for the test case."
        },
        "name": {
          "description": "The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`.",
          "type": "string"
        },
        "notes": {
          "type": "string",
          "description": "Additional freeform notes about the test case. Limit of 400 characters."
        }
      },
      "type": "object",
      "description": "Represents a test case.",
      "id": "GoogleCloudDialogflowCxV3beta1TestCase"
    },
    "GoogleCloudDialogflowCxV3beta1ListWebhooksResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ListWebhooksResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "webhooks": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1Webhook"
          },
          "description": "The list of webhooks. There will be a maximum number of items returned based on the page_size field in the request.",
          "type": "array"
        }
      },
      "description": "The response message for Webhooks.ListWebhooks."
    },
    "GoogleCloudDialogflowCxV3beta1TestCaseError": {
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status associated with the test case."
        },
        "testCase": {
          "$ref": "GoogleCloudDialogflowCxV3beta1TestCase",
          "description": "The test case."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1TestCaseError",
      "type": "object",
      "description": "Error info for importing a test."
    },
    "GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput": {
      "id": "GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput",
      "type": "object",
      "description": "The output from the virtual agent.",
      "properties": {
        "diagnosticInfo": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Required. Input only. The diagnostic info output for the turn. Required to calculate the testing coverage."
        },
        "currentPage": {
          "description": "The Page on which the utterance was spoken. Only name and displayName will be set.",
          "$ref": "GoogleCloudDialogflowCxV3Page"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "Response error from the agent in the test result. If set, other output is empty."
        },
        "sessionParameters": {
          "type": "object",
          "description": "The session parameters available to the bot at this point.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "triggeredIntent": {
          "description": "The Intent that triggered the response. Only name and displayName will be set.",
          "$ref": "GoogleCloudDialogflowCxV3Intent"
        },
        "differences": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestRunDifference"
          },
          "description": "Output only. If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any."
        },
        "textResponses": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessageText"
          },
          "description": "The text responses from the agent for the turn.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1RolloutConfig": {
      "id": "GoogleCloudDialogflowCxV3beta1RolloutConfig",
      "description": "The configuration for auto rollout.",
      "properties": {
        "failureCondition": {
          "description": "The conditions that are used to evaluate the failure of a rollout step. If not specified, no rollout steps will fail. E.g. \"containment_rate \u003c 10% OR average_turn_count \u003c 3\". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).",
          "type": "string"
        },
        "rolloutCondition": {
          "description": "The conditions that are used to evaluate the success of a rollout step. If not specified, all rollout steps will proceed to the next one unless failure conditions are met. E.g. \"containment_rate \u003e 60% AND callback_rate \u003c 20%\". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).",
          "type": "string"
        },
        "rolloutSteps": {
          "description": "Steps to roll out a flow version. Steps should be sorted by percentage in ascending order.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1RolloutConfigRolloutStep"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleProtobufEmpty": {
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "GoogleProtobufEmpty",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1DeployFlowRequest": {
      "description": "The request message for Environments.DeployFlow.",
      "type": "object",
      "properties": {
        "flowVersion": {
          "description": "Required. The flow version to deploy. Format: `projects//locations//agents// flows//versions/`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1DeployFlowRequest"
    },
    "GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput": {
      "description": "The input from the human user.",
      "properties": {
        "injectedParameters": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Parameters that need to be injected into the conversation during intent detection.",
          "type": "object"
        },
        "enableSentimentAnalysis": {
          "type": "boolean",
          "description": "Whether sentiment analysis is enabled."
        },
        "input": {
          "description": "Supports text input, event input, dtmf input in the test case.",
          "$ref": "GoogleCloudDialogflowCxV3beta1QueryInput"
        },
        "isWebhookEnabled": {
          "type": "boolean",
          "description": "If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3FormParameter": {
      "id": "GoogleCloudDialogflowCxV3FormParameter",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the parameter, unique within the form."
        },
        "isList": {
          "type": "boolean",
          "description": "Indicates whether the parameter represents a list of values."
        },
        "defaultValue": {
          "type": "any",
          "description": "The default value of an optional parameter. If the parameter is required, the default value will be ignored."
        },
        "redact": {
          "type": "boolean",
          "description": "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled."
        },
        "entityType": {
          "description": "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.",
          "type": "string"
        },
        "fillBehavior": {
          "$ref": "GoogleCloudDialogflowCxV3FormParameterFillBehavior",
          "description": "Required. Defines fill behavior for the parameter."
        },
        "required": {
          "description": "Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Represents a form parameter."
    },
    "GoogleCloudDialogflowCxV3beta1LookupEnvironmentHistoryResponse": {
      "id": "GoogleCloudDialogflowCxV3beta1LookupEnvironmentHistoryResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "environments": {
          "description": "Represents a list of snapshots for an environment. Time of the snapshots is stored in `update_time`.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1Environment"
          },
          "type": "array"
        }
      },
      "description": "The response message for Environments.LookupEnvironmentHistory."
    },
    "GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue": {
      "properties": {
        "originalValue": {
          "description": "Always present. Original text value extracted from user utterance.",
          "type": "string"
        },
        "resolvedValue": {
          "type": "any",
          "description": "Always present. Structured value for the parameter extracted from user utterance."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue",
      "description": "Represents a value for an intent parameter."
    },
    "GoogleCloudDialogflowCxV3ImportFlowResponse": {
      "description": "The response message for Flows.ImportFlow.",
      "id": "GoogleCloudDialogflowCxV3ImportFlowResponse",
      "properties": {
        "flow": {
          "type": "string",
          "description": "The unique identifier of the new flow. Format: `projects//locations//agents//flows/`."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ResponseMessageEndInteraction": {
      "properties": {},
      "description": "Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageEndInteraction"
    },
    "GoogleCloudDialogflowV2beta1SuggestionResult": {
      "id": "GoogleCloudDialogflowV2beta1SuggestionResult",
      "description": "One response of different type of suggestion response which is used in the response of Participants.AnalyzeContent and Participants.AnalyzeContent, as well as HumanAgentAssistantEvent.",
      "properties": {
        "suggestArticlesResponse": {
          "$ref": "GoogleCloudDialogflowV2beta1SuggestArticlesResponse",
          "description": "SuggestArticlesResponse if request is for ARTICLE_SUGGESTION."
        },
        "suggestFaqAnswersResponse": {
          "description": "SuggestFaqAnswersResponse if request is for FAQ_ANSWER.",
          "$ref": "GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse"
        },
        "error": {
          "description": "Error status if the request failed.",
          "$ref": "GoogleRpcStatus"
        },
        "suggestSmartRepliesResponse": {
          "description": "SuggestSmartRepliesResponse if request is for SMART_REPLY.",
          "$ref": "GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem": {
      "description": "An item in the carousel.",
      "properties": {
        "info": {
          "description": "Required. Additional info about the option item.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo"
        },
        "description": {
          "description": "Optional. The body text of the card.",
          "type": "string"
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage",
          "description": "Optional. The image to display."
        },
        "title": {
          "type": "string",
          "description": "Required. Title of the carousel item."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem"
    },
    "GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse",
      "properties": {
        "mergeBehavior": {
          "enum": [
            "MERGE_BEHAVIOR_UNSPECIFIED",
            "APPEND",
            "REPLACE"
          ],
          "enumDescriptions": [
            "Not specified. `APPEND` will be used.",
            "`messages` will be appended to the list of messages waiting to be sent to the user.",
            "`messages` will replace the list of messages waiting to be sent to the user."
          ],
          "type": "string",
          "description": "Merge behavior for `messages`."
        },
        "messages": {
          "type": "array",
          "description": "The list of rich message responses to present to the user.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessage"
          }
        }
      },
      "description": "Represents a fulfillment response to the user."
    },
    "GoogleCloudDialogflowCxV3ExportTestCasesResponse": {
      "type": "object",
      "description": "The response message for TestCases.ExportTestCases.",
      "id": "GoogleCloudDialogflowCxV3ExportTestCasesResponse",
      "properties": {
        "content": {
          "description": "Uncompressed raw byte content for test cases.",
          "type": "string",
          "format": "byte"
        },
        "gcsUri": {
          "description": "The URI to a file containing the exported test cases. This field is populated only if `gcs_uri` is specified in ExportTestCasesRequest.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2SmartReplyModelMetadata": {
      "properties": {
        "trainingModelType": {
          "description": "Optional. Type of the smart reply model. If not provided, model_type is used.",
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "SMART_REPLY_DUAL_ENCODER_MODEL",
            "SMART_REPLY_BERT_MODEL"
          ],
          "enumDescriptions": [
            "ModelType unspecified.",
            "ModelType smart reply dual encoder model.",
            "ModelType smart reply bert model."
          ],
          "type": "string"
        }
      },
      "type": "object",
      "description": "Metadata for smart reply models.",
      "id": "GoogleCloudDialogflowV2SmartReplyModelMetadata"
    },
    "GoogleCloudDialogflowCxV3beta1ExportAgentResponse": {
      "type": "object",
      "description": "The response message for Agents.ExportAgent.",
      "properties": {
        "agentUri": {
          "type": "string",
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in ExportAgentRequest."
        },
        "agentContent": {
          "format": "byte",
          "description": "Uncompressed raw byte content for agent.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ExportAgentResponse"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse": {
      "id": "GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse",
      "type": "object",
      "properties": {
        "mergeBehavior": {
          "type": "string",
          "enumDescriptions": [
            "Not specified. `APPEND` will be used.",
            "`messages` will be appended to the list of messages waiting to be sent to the user.",
            "`messages` will replace the list of messages waiting to be sent to the user."
          ],
          "enum": [
            "MERGE_BEHAVIOR_UNSPECIFIED",
            "APPEND",
            "REPLACE"
          ],
          "description": "Merge behavior for `messages`."
        },
        "messages": {
          "description": "The list of rich message responses to present to the user.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage"
          }
        }
      },
      "description": "Represents a fulfillment response to the user."
    },
    "GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction": {
      "description": "Opens the given URI.",
      "properties": {
        "uri": {
          "description": "Required. The HTTP or HTTPS scheme URI.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction"
    },
    "GoogleCloudDialogflowCxV3EventHandler": {
      "type": "object",
      "properties": {
        "targetPage": {
          "type": "string",
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
        },
        "triggerFulfillment": {
          "description": "The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.",
          "$ref": "GoogleCloudDialogflowCxV3Fulfillment"
        },
        "event": {
          "description": "Required. The name of the event to handle.",
          "type": "string"
        },
        "targetFlow": {
          "type": "string",
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`."
        },
        "name": {
          "description": "Output only. The unique identifier of this event handler.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow.",
      "id": "GoogleCloudDialogflowCxV3EventHandler"
    },
    "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase": {
      "type": "object",
      "description": "Represents an example that the agent is trained on to identify the intent.",
      "id": "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase",
      "properties": {
        "repeatCount": {
          "type": "integer",
          "description": "Indicates how many times this example was added to the intent.",
          "format": "int32"
        },
        "parts": {
          "description": "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart"
          }
        },
        "id": {
          "description": "Output only. The unique identifier of the training phrase.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases": {
      "properties": {
        "cases": {
          "description": "A list of cascading if-else conditions.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase"
          }
        }
      },
      "description": "A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation",
      "description": "Opens the device's location chooser so the user can pick a location to send back to the agent.",
      "properties": {}
    },
    "GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata": {
      "id": "GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata",
      "description": "Metadata for a ConversationModels.CreateConversationModelEvaluation operation.",
      "type": "object",
      "properties": {
        "conversationModelEvaluation": {
          "type": "string",
          "description": "The resource name of the conversation model. Format: `projects//locations//conversationModels//evaluations/`"
        },
        "conversationModel": {
          "type": "string",
          "description": "The resource name of the conversation model. Format: `projects//locations//conversationModels/`"
        },
        "createTime": {
          "type": "string",
          "description": "Timestamp when the request to create conversation model was submitted. The time is measured on server side.",
          "format": "google-datetime"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "INITIALIZING",
            "RUNNING",
            "CANCELLED",
            "SUCCEEDED",
            "FAILED"
          ],
          "enumDescriptions": [
            "Operation status not specified.",
            "The operation is being prepared.",
            "The operation is running.",
            "The operation is cancelled.",
            "The operation has succeeded.",
            "The operation has failed."
          ],
          "description": "State of CreateConversationModel operation.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ListPagesResponse": {
      "id": "GoogleCloudDialogflowCxV3beta1ListPagesResponse",
      "description": "The response message for Pages.ListPages.",
      "properties": {
        "pages": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1Page"
          },
          "type": "array",
          "description": "The list of pages. There will be a maximum number of items returned based on the page_size field in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2InputDataset": {
      "description": "InputDataset used to create model or do evaluation. NextID:5",
      "type": "object",
      "id": "GoogleCloudDialogflowV2InputDataset",
      "properties": {
        "dataset": {
          "description": "Required. ConversationDataset resource name. Format: `projects//locations//conversationDatasets/`",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2SuggestSmartRepliesResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2SuggestSmartRepliesResponse",
      "description": "The response message for Participants.SuggestSmartReplies.",
      "properties": {
        "contextSize": {
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestSmartRepliesRequest.context_size field in the request if there aren't that many messages in the conversation.",
          "type": "integer",
          "format": "int32"
        },
        "latestMessage": {
          "type": "string",
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
        },
        "smartReplyAnswers": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2SmartReplyAnswer"
          },
          "readOnly": true,
          "description": "Output only. Multiple reply options provided by smart reply service. The order is based on the rank of the model prediction. The maximum number of the returned replies is set in SmartReplyConfig.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1Intent": {
      "properties": {
        "isFallback": {
          "description": "Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.",
          "type": "boolean"
        },
        "description": {
          "description": "Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.",
          "type": "string"
        },
        "name": {
          "description": "The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. The human-readable name of the intent, unique within the agent.",
          "type": "string"
        },
        "parameters": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1IntentParameter"
          },
          "type": "array",
          "description": "The collection of parameters associated with the intent."
        },
        "priority": {
          "type": "integer",
          "description": "The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.",
          "format": "int32"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix \"sys-\" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. \"sys-head\" means the intent is a head intent. \"sys-contextual\" means the intent is a contextual intent."
        },
        "trainingPhrases": {
          "type": "array",
          "description": "The collection of training phrases the agent is trained on to identify the intent.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase"
          }
        }
      },
      "description": "An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1Intent"
    },
    "GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode": {
      "properties": {
        "flow": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Flow",
          "description": "Indicates a transition to a Flow. Only some fields such as name and displayname will be set."
        },
        "page": {
          "description": "Indicates a transition to a Page. Only some fields such as name and displayname will be set.",
          "$ref": "GoogleCloudDialogflowCxV3beta1Page"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode",
      "description": "The source or target of a transition.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2SuggestArticlesResponse": {
      "description": "The response message for Participants.SuggestArticles.",
      "properties": {
        "contextSize": {
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestArticlesRequest.context_size field in the request if there aren't that many messages in the conversation.",
          "type": "integer",
          "format": "int32"
        },
        "articleAnswers": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2ArticleAnswer"
          },
          "description": "Articles ordered by score in descending order.",
          "type": "array"
        },
        "latestMessage": {
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2SuggestArticlesResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ImportDocumentsResponse": {
      "description": "Response message for Documents.ImportDocuments.",
      "properties": {
        "warnings": {
          "description": "Includes details about skipped documents or any other warnings.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ImportDocumentsResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1MatchIntentRequest": {
      "description": "Request of MatchIntent.",
      "properties": {
        "queryParams": {
          "description": "The parameters of this query.",
          "$ref": "GoogleCloudDialogflowCxV3beta1QueryParameters"
        },
        "queryInput": {
          "description": "Required. The input specification.",
          "$ref": "GoogleCloudDialogflowCxV3beta1QueryInput"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1MatchIntentRequest",
      "type": "object"
    },
    "GoogleCloudDialogflowV2CreateConversationModelOperationMetadata": {
      "properties": {
        "conversationModel": {
          "description": "The resource name of the conversation model. Format: `projects//conversationModels/`",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Timestamp when the request to create conversation model is submitted. The time is measured on server side."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED",
            "CANCELLING",
            "TRAINING"
          ],
          "description": "State of CreateConversationModel operation.",
          "enumDescriptions": [
            "Invalid.",
            "Request is submitted, but training has not started yet. The model may remain in this state until there is enough capacity to start training.",
            "The training has succeeded.",
            "The training has succeeded.",
            "The training has been cancelled.",
            "The training is in cancelling state.",
            "Custom model is training."
          ],
          "type": "string"
        }
      },
      "type": "object",
      "description": "Metadata for a ConversationModels.CreateConversationModel operation.",
      "id": "GoogleCloudDialogflowV2CreateConversationModelOperationMetadata"
    },
    "GoogleCloudDialogflowV2beta1IntentTrainingPhrase": {
      "description": "Represents an example that the agent is trained on.",
      "id": "GoogleCloudDialogflowV2beta1IntentTrainingPhrase",
      "type": "object",
      "properties": {
        "parts": {
          "description": "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart"
          }
        },
        "timesAddedCount": {
          "format": "int32",
          "description": "Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased.",
          "type": "integer"
        },
        "name": {
          "type": "string",
          "description": "Output only. The unique identifier of this training phrase."
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "EXAMPLE",
            "TEMPLATE"
          ],
          "enumDescriptions": [
            "Not specified. This value should never be used.",
            "Examples do not contain @-prefixed entity type names, but example parts can be annotated with entity types.",
            "Templates are not annotated with entity types, but they can contain @-prefixed entity type names as substrings. Note: Template mode has been deprecated. Example mode is the only supported way to create new training phrases. If you have existing training phrases in template mode, they will be removed during training and it can cause a drop in agent performance."
          ],
          "description": "Required. The type of the training phrase.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3EnvironmentVersionConfig": {
      "properties": {
        "version": {
          "type": "string",
          "description": "Required. Format: projects//locations//agents//flows//versions/."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3EnvironmentVersionConfig",
      "description": "Configuration for the version."
    },
    "GoogleCloudDialogflowCxV3beta1StopExperimentRequest": {
      "type": "object",
      "description": "The request message for Experiments.StopExperiment.",
      "id": "GoogleCloudDialogflowCxV3beta1StopExperimentRequest",
      "properties": {}
    },
    "GoogleCloudDialogflowCxV3beta1VersionVariants": {
      "type": "object",
      "description": "A list of flow version variants.",
      "id": "GoogleCloudDialogflowCxV3beta1VersionVariants",
      "properties": {
        "variants": {
          "type": "array",
          "description": "A list of flow version variants.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1VersionVariantsVariant"
          }
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhrase": {
      "type": "object",
      "description": "An excluded entity phrase that should not be matched.",
      "properties": {
        "value": {
          "description": "Required. The word or phrase to be excluded.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhrase"
    },
    "GoogleCloudDialogflowCxV3beta1NluSettings": {
      "description": "Settings related to NLU.",
      "id": "GoogleCloudDialogflowCxV3beta1NluSettings",
      "properties": {
        "modelTrainingMode": {
          "description": "Indicates NLU model training mode.",
          "type": "string",
          "enumDescriptions": [
            "Not specified. `MODEL_TRAINING_MODE_AUTOMATIC` will be used.",
            "NLU model training is automatically triggered when a flow gets modified. User can also manually trigger model training in this mode.",
            "User needs to manually trigger NLU model training. Best for large flows whose models take long time to train."
          ],
          "enum": [
            "MODEL_TRAINING_MODE_UNSPECIFIED",
            "MODEL_TRAINING_MODE_AUTOMATIC",
            "MODEL_TRAINING_MODE_MANUAL"
          ]
        },
        "modelType": {
          "description": "Indicates the type of NLU model.",
          "type": "string",
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "MODEL_TYPE_STANDARD",
            "MODEL_TYPE_ADVANCED"
          ],
          "enumDescriptions": [
            "Not specified. `MODEL_TYPE_STANDARD` will be used.",
            "Use standard NLU model.",
            "Use advanced NLU model."
          ]
        },
        "classificationThreshold": {
          "type": "number",
          "format": "float",
          "description": "To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageBasicCardButton": {
      "id": "GoogleCloudDialogflowV2IntentMessageBasicCardButton",
      "properties": {
        "openUriAction": {
          "description": "Required. Action to take when a user taps on the button.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction"
        },
        "title": {
          "description": "Required. The title of the button.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The button object that appears at the bottom of a card."
    },
    "GoogleCloudDialogflowCxV3beta1Deployment": {
      "type": "object",
      "description": "Represents an deployment in an environment. A deployment happens when a flow version configured to be active in the environment. You can configure running pre-deployment steps, e.g. running validation test cases, experiment auto-rollout, etc.",
      "id": "GoogleCloudDialogflowCxV3beta1Deployment",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "End time of this deployment."
        },
        "startTime": {
          "type": "string",
          "description": "Start time of this deployment.",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "The name of the deployment. Format: projects//locations//agents//environments//deployments/."
        },
        "result": {
          "$ref": "GoogleCloudDialogflowCxV3beta1DeploymentResult",
          "description": "Result of the deployment."
        },
        "state": {
          "enumDescriptions": [
            "State unspecified.",
            "The deployment is running.",
            "The deployment succeeded.",
            "The deployment failed."
          ],
          "description": "The current state of the deployment.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "SUCCEEDED",
            "FAILED"
          ]
        },
        "flowVersion": {
          "type": "string",
          "description": "The name of the flow version for this deployment. Format: projects//locations//agents//flows//versions/."
        }
      }
    },
    "GoogleCloudDialogflowV2ExportAgentResponse": {
      "id": "GoogleCloudDialogflowV2ExportAgentResponse",
      "description": "The response message for Agents.ExportAgent.",
      "properties": {
        "agentContent": {
          "description": "Zip compressed raw byte content for agent.",
          "type": "string",
          "format": "byte"
        },
        "agentUri": {
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in `ExportAgentRequest`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3DeployFlowMetadata": {
      "description": "Metadata returned for the Environments.DeployFlow long running operation.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3DeployFlowMetadata",
      "properties": {
        "testErrors": {
          "description": "Errors of running deployment tests.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestError"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1InputAudioConfig": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1InputAudioConfig",
      "properties": {
        "singleUtterance": {
          "description": "Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods.",
          "type": "boolean"
        },
        "enableWordInfo": {
          "type": "boolean",
          "description": "Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information."
        },
        "audioEncoding": {
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM).",
            "[`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio Codec) is the recommended encoding because it is lossless (therefore recognition is not compromised) and requires only about half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are supported.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.",
            "Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.",
            "Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.",
            "Opus encoded audio frames in Ogg container ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be 16000.",
            "Although the use of lossy encodings is not recommended, if a very low bitrate encoding is required, `OGG_OPUS` is highly preferred over Speex encoding. The [Speex](https://speex.org/) encoding supported by Dialogflow API has a header byte in each block, as in MIME type `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex encoding defined in [RFC 5574](https://tools.ietf.org/html/rfc5574). The stream is a sequence of blocks, one block per RTP packet. Each block starts with a byte containing the length of the block, in bytes, followed by one or more frames of Speex data, padded to an integral number of bytes (octets) as specified in RFC 5574. In other words, each RTP header is replaced with a single byte containing the block length. Only Speex wideband is supported. `sample_rate_hertz` must be 16000."
          ],
          "type": "string",
          "enum": [
            "AUDIO_ENCODING_UNSPECIFIED",
            "AUDIO_ENCODING_LINEAR_16",
            "AUDIO_ENCODING_FLAC",
            "AUDIO_ENCODING_MULAW",
            "AUDIO_ENCODING_AMR",
            "AUDIO_ENCODING_AMR_WB",
            "AUDIO_ENCODING_OGG_OPUS",
            "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE"
          ],
          "description": "Required. Audio encoding of the audio content to process."
        },
        "model": {
          "type": "string",
          "description": "Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details."
        },
        "modelVariant": {
          "description": "Optional. Which variant of the Speech model to use.",
          "type": "string",
          "enumDescriptions": [
            "No model variant specified. In this case Dialogflow defaults to USE_BEST_AVAILABLE.",
            "Use the best available variant of the Speech model that the caller is eligible for. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible for enhanced models.",
            "Use standard model variant even if an enhanced model is available. See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) for details about enhanced models.",
            "Use an enhanced model variant: * If an enhanced variant does not exist for the given model and request language, Dialogflow falls back to the standard variant. The [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) describes which models have enhanced variants. * If the API caller isn't eligible for enhanced models, Dialogflow returns an error. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible."
          ],
          "enum": [
            "SPEECH_MODEL_VARIANT_UNSPECIFIED",
            "USE_BEST_AVAILABLE",
            "USE_STANDARD",
            "USE_ENHANCED"
          ]
        },
        "phraseHints": {
          "type": "array",
          "description": "Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.",
          "items": {
            "type": "string"
          }
        },
        "sampleRateHertz": {
          "description": "Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Instructs the speech recognizer on how to process the audio content."
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText": {
      "properties": {
        "allowPlaybackInterruption": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request."
        },
        "ssml": {
          "type": "string",
          "description": "The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml)."
        },
        "text": {
          "type": "string",
          "description": "The raw text to be synthesized."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText",
      "type": "object",
      "description": "A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message."
    },
    "GoogleCloudDialogflowCxV3RunTestCaseResponse": {
      "description": "The response message for TestCases.RunTestCase.",
      "id": "GoogleCloudDialogflowCxV3RunTestCaseResponse",
      "properties": {
        "result": {
          "$ref": "GoogleCloudDialogflowCxV3TestCaseResult",
          "description": "The result."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2SmartReplyAnswer": {
      "properties": {
        "answerRecord": {
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\"",
          "type": "string"
        },
        "confidence": {
          "description": "Smart reply confidence. The system's confidence score that this reply is a good match for this conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "float"
        },
        "reply": {
          "description": "The content of the reply.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2SmartReplyAnswer",
      "description": "Represents a smart reply answer."
    },
    "GoogleCloudDialogflowV2IntentMessageTableCardRow": {
      "description": "Row of TableCard.",
      "id": "GoogleCloudDialogflowV2IntentMessageTableCardRow",
      "properties": {
        "dividerAfter": {
          "description": "Optional. Whether to add a visual divider after this row.",
          "type": "boolean"
        },
        "cells": {
          "description": "Optional. List of cells that make up this row.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageTableCardCell"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageCardButton": {
      "id": "GoogleCloudDialogflowV2IntentMessageCardButton",
      "type": "object",
      "description": "Contains information about a button.",
      "properties": {
        "postback": {
          "type": "string",
          "description": "Optional. The text to send back to the Dialogflow API or a URI to open."
        },
        "text": {
          "type": "string",
          "description": "Optional. The text to show on the button."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput": {
      "properties": {
        "diagnosticInfo": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Required. Input only. The diagnostic info output for the turn. Required to calculate the testing coverage.",
          "type": "object"
        },
        "currentPage": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Page",
          "description": "The Page on which the utterance was spoken. Only name and displayName will be set."
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "Response error from the agent in the test result. If set, other output is empty."
        },
        "textResponses": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageText"
          },
          "type": "array",
          "description": "The text responses from the agent for the turn."
        },
        "triggeredIntent": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Intent",
          "description": "The Intent that triggered the response. Only name and displayName will be set."
        },
        "sessionParameters": {
          "type": "object",
          "description": "The session parameters available to the bot at this point.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "differences": {
          "description": "Output only. If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestRunDifference"
          },
          "readOnly": true
        }
      },
      "description": "The output from the virtual agent.",
      "id": "GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentFollowupIntentInfo": {
      "properties": {
        "followupIntentName": {
          "type": "string",
          "description": "The unique identifier of the followup intent. Format: `projects//agent/intents/`."
        },
        "parentFollowupIntentName": {
          "type": "string",
          "description": "The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`."
        }
      },
      "type": "object",
      "description": "Represents a single followup intent in the chain.",
      "id": "GoogleCloudDialogflowV2IntentFollowupIntentInfo"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction": {
      "type": "object",
      "properties": {
        "urlTypeHint": {
          "description": "Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web browser.",
          "type": "string",
          "enum": [
            "URL_TYPE_HINT_UNSPECIFIED",
            "AMP_ACTION",
            "AMP_CONTENT"
          ],
          "enumDescriptions": [
            "Unspecified",
            "Url would be an amp action",
            "URL that points directly to AMP content, or to a canonical URL which refers to AMP content via ."
          ]
        },
        "url": {
          "type": "string",
          "description": "Required. URL"
        }
      },
      "description": "Actions on Google action to open a given url.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect": {
      "properties": {
        "items": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem"
          },
          "description": "Required. Carousel items.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "The card for presenting a carousel of options to select from.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect"
    },
    "GoogleCloudDialogflowCxV3beta1ExperimentResultMetric": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number",
          "format": "double",
          "description": "Count value of a metric."
        },
        "countType": {
          "enumDescriptions": [
            "Count type unspecified.",
            "Total number of occurrences of a 'NO_MATCH'.",
            "Total number of turn counts.",
            "Average turn count in a session."
          ],
          "type": "string",
          "enum": [
            "COUNT_TYPE_UNSPECIFIED",
            "TOTAL_NO_MATCH_COUNT",
            "TOTAL_TURN_COUNT",
            "AVERAGE_TURN_COUNT"
          ],
          "description": "Count-based metric type. Only one of type or count_type is specified in each Metric."
        },
        "ratio": {
          "format": "double",
          "type": "number",
          "description": "Ratio value of a metric."
        },
        "confidenceInterval": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ExperimentResultConfidenceInterval",
          "description": "The probability that the treatment is better than all other treatments in the experiment"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Metric unspecified.",
            "Percentage of contained sessions without user calling back in 24 hours.",
            "Percentage of sessions that were handed to a human agent.",
            "Percentage of sessions with the same user calling back.",
            "Percentage of sessions where user hung up.",
            "Percentage of sessions reached Dialogflow 'END_PAGE' or 'END_SESSION'."
          ],
          "description": "Ratio-based metric type. Only one of type or count_type is specified in each Metric.",
          "enum": [
            "METRIC_UNSPECIFIED",
            "CONTAINED_SESSION_NO_CALLBACK_RATE",
            "LIVE_AGENT_HANDOFF_RATE",
            "CALLBACK_SESSION_RATE",
            "ABANDONED_SESSION_RATE",
            "SESSION_END_RATE"
          ]
        }
      },
      "description": "Metric and corresponding confidence intervals.",
      "id": "GoogleCloudDialogflowCxV3beta1ExperimentResultMetric"
    },
    "GoogleCloudDialogflowCxV3beta1ImportTestCasesRequest": {
      "properties": {
        "content": {
          "description": "Uncompressed raw byte content for test cases.",
          "format": "byte",
          "type": "string"
        },
        "gcsUri": {
          "type": "string",
          "description": "The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to import test cases from. The format of this URI must be `gs:///`. Dialogflow performs a read operation for the Cloud Storage object on the caller's behalf, so your request authentication must have read permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage)."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ImportTestCasesRequest",
      "type": "object",
      "description": "The request message for TestCases.ImportTestCases."
    },
    "GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse": {
      "properties": {
        "routeGroupCoverage": {
          "$ref": "GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverage",
          "description": "Transition route group coverage."
        },
        "agent": {
          "type": "string",
          "description": "The agent to calculate coverage for. Format: `projects//locations//agents/`."
        },
        "transitionCoverage": {
          "$ref": "GoogleCloudDialogflowCxV3beta1TransitionCoverage",
          "description": "Transition (excluding transition route groups) coverage."
        },
        "intentCoverage": {
          "description": "Intent coverage.",
          "$ref": "GoogleCloudDialogflowCxV3beta1IntentCoverage"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse",
      "description": "The response message for TestCases.CalculateCoverage."
    },
    "GoogleCloudDialogflowCxV3beta1FormParameter": {
      "description": "Represents a form parameter.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1FormParameter",
      "properties": {
        "isList": {
          "type": "boolean",
          "description": "Indicates whether the parameter represents a list of values."
        },
        "entityType": {
          "type": "string",
          "description": "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the parameter, unique within the form."
        },
        "required": {
          "description": "Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.",
          "type": "boolean"
        },
        "redact": {
          "type": "boolean",
          "description": "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled."
        },
        "fillBehavior": {
          "$ref": "GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior",
          "description": "Required. Defines fill behavior for the parameter."
        },
        "defaultValue": {
          "type": "any",
          "description": "The default value of an optional parameter. If the parameter is required, the default value will be ignored."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1DetectIntentRequest": {
      "description": "The request to detect user's intent.",
      "properties": {
        "outputAudioConfig": {
          "description": "Instructs the speech synthesizer how to generate the output audio.",
          "$ref": "GoogleCloudDialogflowCxV3beta1OutputAudioConfig"
        },
        "queryParams": {
          "$ref": "GoogleCloudDialogflowCxV3beta1QueryParameters",
          "description": "The parameters of this query."
        },
        "queryInput": {
          "description": "Required. The input specification.",
          "$ref": "GoogleCloudDialogflowCxV3beta1QueryInput"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1DetectIntentRequest",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1RunContinuousTestResponse": {
      "description": "The response message for Environments.RunContinuousTest.",
      "id": "GoogleCloudDialogflowCxV3beta1RunContinuousTestResponse",
      "type": "object",
      "properties": {
        "continuousTestResult": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ContinuousTestResult",
          "description": "The result for a continuous test run."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ExperimentResultVersionMetrics": {
      "description": "Version variant and associated metrics.",
      "properties": {
        "version": {
          "description": "The name of the flow Version. Format: `projects//locations//agents//flows//versions/`.",
          "type": "string"
        },
        "metrics": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ExperimentResultMetric"
          },
          "description": "The metrics and corresponding confidence intervals in the inference result.",
          "type": "array"
        },
        "sessionCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of sessions that were allocated to this version."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ExperimentResultVersionMetrics"
    },
    "GoogleCloudDialogflowV2IntentMessageSuggestions": {
      "description": "The collection of suggestions.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageSuggestions",
      "properties": {
        "suggestions": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageSuggestion"
          },
          "type": "array",
          "description": "Required. The list of suggested replies."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ListChangelogsResponse": {
      "id": "GoogleCloudDialogflowCxV3beta1ListChangelogsResponse",
      "type": "object",
      "properties": {
        "changelogs": {
          "description": "The list of changelogs. There will be a maximum number of items returned based on the page_size field in the request. The changelogs will be ordered by timestamp.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1Changelog"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "description": "The response message for Changelogs.ListChangelogs."
    },
    "GoogleCloudDialogflowCxV3beta1ImportFlowResponse": {
      "id": "GoogleCloudDialogflowCxV3beta1ImportFlowResponse",
      "properties": {
        "flow": {
          "description": "The unique identifier of the new flow. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        }
      },
      "description": "The response message for Flows.ImportFlow.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo": {
      "type": "object",
      "properties": {
        "justCollected": {
          "type": "boolean",
          "description": "Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just collected on the last conversation turn."
        },
        "displayName": {
          "description": "Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the parameter, unique within the form. This field cannot be modified by the webhook.",
          "type": "string"
        },
        "required": {
          "description": "Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.",
          "type": "boolean"
        },
        "state": {
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Indicates that the parameter does not have a value.",
            "Indicates that the parameter value is invalid. This field can be used by the webhook to invalidate the parameter and ask the server to collect it from the user again.",
            "Indicates that the parameter has a value."
          ],
          "description": "Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This field can be set to INVALID by the webhook to invalidate the parameter; other values set by the webhook will be ignored.",
          "enum": [
            "PARAMETER_STATE_UNSPECIFIED",
            "EMPTY",
            "INVALID",
            "FILLED"
          ],
          "type": "string"
        },
        "value": {
          "type": "any",
          "description": "Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be set by the webhook to change the parameter value."
        }
      },
      "description": "Represents parameter information.",
      "id": "GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo"
    },
    "GoogleCloudDialogflowV2IntentMessageSuggestion": {
      "description": "The suggestion chip message that the user can tap to quickly post a reply to the conversation.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageSuggestion",
      "properties": {
        "title": {
          "type": "string",
          "description": "Required. The text shown the in the suggestion chip."
        }
      }
    },
    "GoogleCloudDialogflowCxV3ResponseMessageText": {
      "type": "object",
      "properties": {
        "text": {
          "description": "Required. A collection of text responses.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowPlaybackInterruption": {
          "readOnly": true,
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudDialogflowCxV3ResponseMessageText",
      "description": "The text response message."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses": {
      "properties": {
        "simpleResponses": {
          "description": "Required. The list of simple responses.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse"
          }
        }
      },
      "description": "The collection of simple response candidates. This message in `QueryResult.fulfillment_messages` and `WebhookResponse.fulfillment_messages` should contain only one `SimpleResponse`.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses"
    },
    "GoogleCloudDialogflowCxV3SessionInfo": {
      "type": "object",
      "description": "Represents session information communicated to and from the webhook.",
      "id": "GoogleCloudDialogflowCxV3SessionInfo",
      "properties": {
        "parameters": {
          "description": "Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and intents during the session. Parameters can be created, updated, or removed by the webhook. To remove a parameter from the session, the webhook should explicitly set the parameter value to null in WebhookResponse. The map is keyed by parameters' display names.",
          "additionalProperties": {
            "type": "any"
          },
          "type": "object"
        },
        "session": {
          "type": "string",
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the session. This field can be used by the webhook to identify a session. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/` if environment is specified."
        }
      }
    },
    "GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment": {
      "description": "Represents one segment of audio.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment",
      "properties": {
        "uri": {
          "description": "Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it.",
          "type": "string"
        },
        "allowPlaybackInterruption": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request."
        },
        "audio": {
          "description": "Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.",
          "format": "byte",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageQuickReplies": {
      "description": "The quick replies response message.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageQuickReplies",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. The title of the collection of quick replies."
        },
        "quickReplies": {
          "items": {
            "type": "string"
          },
          "description": "Optional. The collection of quick replies.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1CompareVersionsResponse": {
      "id": "GoogleCloudDialogflowCxV3beta1CompareVersionsResponse",
      "properties": {
        "targetVersionContentJson": {
          "description": "JSON representation of the target version content.",
          "type": "string"
        },
        "compareTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The timestamp when the two version compares."
        },
        "baseVersionContentJson": {
          "description": "JSON representation of the base version content.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The response message for Versions.CompareVersions."
    },
    "GoogleCloudDialogflowCxV3beta1RunContinuousTestRequest": {
      "id": "GoogleCloudDialogflowCxV3beta1RunContinuousTestRequest",
      "description": "The request message for Environments.RunContinuousTest.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3Form": {
      "id": "GoogleCloudDialogflowCxV3Form",
      "type": "object",
      "properties": {
        "parameters": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FormParameter"
          },
          "type": "array",
          "description": "Parameters to collect from the user."
        }
      },
      "description": "A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session."
    },
    "GoogleCloudDialogflowCxV3beta1ConversationTurn": {
      "description": "One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ConversationTurn",
      "properties": {
        "userInput": {
          "description": "The user input.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput"
        },
        "virtualAgentOutput": {
          "description": "The virtual agent output.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1Agent": {
      "description": "Agents are best described as Natural Language Understanding (NLU) modules that transform user requests into actionable data. You can include agents in your app, product, or service to determine user intent and respond to the user in a natural way. After you create an agent, you can add Intents, Entity Types, Flows, Fulfillments, Webhooks, and so on to manage the conversation flows..",
      "id": "GoogleCloudDialogflowCxV3beta1Agent",
      "type": "object",
      "properties": {
        "timeZone": {
          "type": "string",
          "description": "Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris."
        },
        "supportedLanguageCodes": {
          "description": "The list of all languages supported by the agent (except for the `default_language_code`).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "The description of the agent. The maximum length is 500 characters. If exceeded, the request is rejected.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the agent, unique within the location."
        },
        "speechToTextSettings": {
          "$ref": "GoogleCloudDialogflowCxV3beta1SpeechToTextSettings",
          "description": "Speech recognition related settings."
        },
        "avatarUri": {
          "description": "The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted [Web Demo](https://cloud.google.com/dialogflow/docs/integrations/web-demo) integration.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the agent. Required for the Agents.UpdateAgent method. Agents.CreateAgent populates the name automatically. Format: `projects//locations//agents/`."
        },
        "enableSpellCorrection": {
          "description": "Indicates if automatic spell correction is enabled in detect intent requests.",
          "type": "boolean"
        },
        "defaultLanguageCode": {
          "description": "Required. Immutable. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. This field cannot be set by the Agents.UpdateAgent method.",
          "type": "string"
        },
        "startFlow": {
          "type": "string",
          "description": "Immutable. Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: `projects//locations//agents//flows/`."
        },
        "enableStackdriverLogging": {
          "description": "Indicates if stackdriver logging is enabled for the agent. Please use agent.advanced_settings instead.",
          "type": "boolean"
        },
        "securitySettings": {
          "type": "string",
          "description": "Name of the SecuritySettings reference for the agent. Format: `projects//locations//securitySettings/`."
        },
        "locked": {
          "description": "Indicates whether the agent is locked for changes. If the agent is locked, modifications to the agent will be rejected except for RestoreAgent.",
          "type": "boolean"
        },
        "advancedSettings": {
          "description": "Hierarchical advanced settings for this agent. The settings exposed at the lower level overrides the settings exposed at the higher level.",
          "$ref": "GoogleCloudDialogflowCxV3beta1AdvancedSettings"
        }
      }
    },
    "GoogleCloudDialogflowV2IntentTrainingPhrase": {
      "description": "Represents an example that the agent is trained on.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentTrainingPhrase",
      "properties": {
        "name": {
          "description": "Output only. The unique identifier of this training phrase.",
          "type": "string"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "EXAMPLE",
            "TEMPLATE"
          ],
          "description": "Required. The type of the training phrase.",
          "enumDescriptions": [
            "Not specified. This value should never be used.",
            "Examples do not contain @-prefixed entity type names, but example parts can be annotated with entity types.",
            "Templates are not annotated with entity types, but they can contain @-prefixed entity type names as substrings. Template mode has been deprecated. Example mode is the only supported way to create new training phrases. If you have existing training phrases that you've created in template mode, those will continue to work."
          ],
          "type": "string"
        },
        "parts": {
          "type": "array",
          "description": "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentTrainingPhrasePart"
          }
        },
        "timesAddedCount": {
          "description": "Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudDialogflowCxV3DeployFlowResponse": {
      "id": "GoogleCloudDialogflowCxV3DeployFlowResponse",
      "description": "The response message for Environments.DeployFlow.",
      "properties": {
        "deployment": {
          "type": "string",
          "description": "The name of the flow version Deployment. Format: `projects//locations//agents// environments//deployments/`."
        },
        "environment": {
          "description": "The updated environment where the flow is deployed.",
          "$ref": "GoogleCloudDialogflowCxV3Environment"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1SentimentAnalysisResult": {
      "properties": {
        "score": {
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
          "type": "number",
          "format": "float"
        },
        "magnitude": {
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
          "format": "float",
          "type": "number"
        }
      },
      "description": "The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral.",
      "id": "GoogleCloudDialogflowCxV3beta1SentimentAnalysisResult",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1Form": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "Parameters to collect from the user.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FormParameter"
          }
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1Form",
      "description": "A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session."
    },
    "GoogleCloudDialogflowCxV3beta1UpdateDocumentOperationMetadata": {
      "type": "object",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1UpdateDocumentOperationMetadata",
      "description": "Metadata for UpdateDocument operation."
    },
    "GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata": {
      "properties": {
        "exportOperationMetadata": {
          "$ref": "GoogleCloudDialogflowV2beta1ExportOperationMetadata",
          "description": "Metadata for the Export Data Operation such as the destination of export."
        },
        "knowledgeBase": {
          "description": "The name of the knowledge base interacted with during the operation.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ],
          "description": "Required. Output only. The current state of this operation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata",
      "description": "Metadata in google::longrunning::Operation for Knowledge operations."
    },
    "GoogleCloudDialogflowV2ImportDocumentsResponse": {
      "id": "GoogleCloudDialogflowV2ImportDocumentsResponse",
      "properties": {
        "warnings": {
          "description": "Includes details about skipped documents or any other warnings.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      },
      "description": "Response message for Documents.ImportDocuments.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial": {
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "Required. The phone number to fill in the default dialer app. This field should be in [E.164](https://en.wikipedia.org/wiki/E.164) format. An example of a correctly formatted phone number: +15556767888."
        }
      },
      "type": "object",
      "description": "Opens the user's default dialer app with the specified phone number but does not dial automatically.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTableCard": {
      "properties": {
        "image": {
          "description": "Optional. Image which should be displayed on the card.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "buttons": {
          "type": "array",
          "description": "Optional. List of buttons for the card.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton"
          }
        },
        "title": {
          "description": "Required. Title of the card.",
          "type": "string"
        },
        "rows": {
          "description": "Optional. Rows in this table of data.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTableCardRow"
          },
          "type": "array"
        },
        "columnProperties": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageColumnProperties"
          },
          "type": "array",
          "description": "Optional. Display properties for the columns in this table."
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. Subtitle to the title."
        }
      },
      "description": "Table card for Actions on Google.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTableCard"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse": {
      "type": "object",
      "description": "The simple response message containing speech or text.",
      "properties": {
        "textToSpeech": {
          "type": "string",
          "description": "One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml."
        },
        "ssml": {
          "type": "string",
          "description": "One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech."
        },
        "displayText": {
          "description": "Optional. The text to display.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse"
    },
    "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesRequest": {
      "properties": {
        "testCases": {
          "items": {
            "type": "string"
          },
          "description": "Required. Format: `projects//locations//agents//testCases/`.",
          "type": "array"
        },
        "environment": {
          "type": "string",
          "description": "Optional. If not set, draft environment is assumed. Format: `projects//locations//agents//environments/`."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesRequest",
      "description": "The request message for TestCases.BatchRunTestCases."
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequest": {
      "description": "The request message for a webhook call. The request is sent as a JSON object and the field names will be presented in camel cases. You may see undocumented fields in an actual request. These fields are used internally by Dialogflow and should be ignored.",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequest",
      "properties": {
        "pageInfo": {
          "$ref": "GoogleCloudDialogflowCxV3beta1PageInfo",
          "description": "Information about page status."
        },
        "text": {
          "type": "string",
          "description": "If natural language text was provided as input, this field will contain a copy of the text."
        },
        "languageCode": {
          "description": "The language code specified in the original request.",
          "type": "string"
        },
        "triggerEvent": {
          "description": "If an event was provided as input, this field will contain the name of the event.",
          "type": "string"
        },
        "sentimentAnalysisResult": {
          "description": "The sentiment analysis result of the current user request. The field is filled when sentiment analysis is configured to be enabled for the request.",
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult"
        },
        "payload": {
          "type": "object",
          "description": "Custom data set in QueryParameters.payload.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage"
          },
          "description": "The list of rich message responses to present to the user. Webhook can choose to append or replace this list in WebhookResponse.fulfillment_response;"
        },
        "detectIntentResponseId": {
          "description": "Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller.",
          "type": "string"
        },
        "intentInfo": {
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo",
          "description": "Information about the last matched intent."
        },
        "transcript": {
          "description": "If natural language speech audio was provided as input, this field will contain the transcript for the audio.",
          "type": "string"
        },
        "triggerIntent": {
          "type": "string",
          "description": "If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`."
        },
        "fulfillmentInfo": {
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo",
          "description": "Always present. Information about the fulfillment that triggered this webhook call."
        },
        "sessionInfo": {
          "$ref": "GoogleCloudDialogflowCxV3beta1SessionInfo",
          "description": "Information about session status."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1QueryParameters": {
      "id": "GoogleCloudDialogflowCxV3beta1QueryParameters",
      "properties": {
        "analyzeQueryTextSentiment": {
          "type": "boolean",
          "description": "Configures whether sentiment analysis should be performed. If not provided, sentiment analysis is not performed."
        },
        "webhookHeaders": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "This field can be used to pass HTTP headers for a webhook call. These headers will be sent to webhook along with the headers that have been configured through Dialogflow web console. The headers defined within this field will overwrite the headers configured through Dialogflow console if there is a conflict. Header names are case-insensitive. Google's specified headers are not allowed. Including: \"Host\", \"Content-Length\", \"Connection\", \"From\", \"User-Agent\", \"Accept-Encoding\", \"If-Modified-Since\", \"If-None-Match\", \"X-Forwarded-For\", etc.",
          "type": "object"
        },
        "sessionEntityTypes": {
          "description": "Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session of this query.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1SessionEntityType"
          },
          "type": "array"
        },
        "flowVersions": {
          "description": "A list of flow versions to override for the request. Format: `projects//locations//agents//flows//versions/`. If version 1 of flow X is included in this list, the traffic of flow X will go through version 1 regardless of the version configuration in the environment. Each flow can have at most one version specified in this list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "geoLocation": {
          "$ref": "GoogleTypeLatLng",
          "description": "The geo location of this conversational query."
        },
        "currentPage": {
          "type": "string",
          "description": "The unique identifier of the page to override the current page in the session. Format: `projects//locations//agents//flows//pages/`. If `current_page` is specified, the previous state of the session will be ignored by Dialogflow, including the previous page and the previous session parameters. In most cases, current_page and parameters should be configured together to direct a session to a specific state."
        },
        "timeZone": {
          "description": "The time zone of this conversational query from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. If not provided, the time zone specified in the agent is used.",
          "type": "string"
        },
        "payload": {
          "type": "object",
          "description": "This field can be used to pass custom data into the webhook associated with the agent. Arbitrary JSON objects are supported. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: ``` { \"telephony\": { \"caller_id\": \"+18558363987\" } } ```",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "disableWebhook": {
          "type": "boolean",
          "description": "Whether to disable webhook calls for this request."
        },
        "parameters": {
          "description": "Additional parameters to be put into session parameters. To remove a parameter from the session, clients should explicitly set the parameter value to null. You can reference the session parameters in the agent with the following format: $session.params.parameter-id. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        }
      },
      "description": "Represents the parameters of a conversational query.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig": {
      "description": "Configuration for the version.",
      "properties": {
        "version": {
          "description": "Required. Format: projects//locations//agents//flows//versions/.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig"
    },
    "GoogleCloudDialogflowCxV3ConversationTurn": {
      "description": "One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response.",
      "properties": {
        "virtualAgentOutput": {
          "$ref": "GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput",
          "description": "The virtual agent output."
        },
        "userInput": {
          "$ref": "GoogleCloudDialogflowCxV3ConversationTurnUserInput",
          "description": "The user input."
        }
      },
      "id": "GoogleCloudDialogflowCxV3ConversationTurn",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ImportTestCasesMetadata": {
      "id": "GoogleCloudDialogflowCxV3ImportTestCasesMetadata",
      "type": "object",
      "description": "Metadata returned for the TestCases.ImportTestCases long running operation.",
      "properties": {
        "errors": {
          "description": "Errors for failed test cases.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestCaseError"
          }
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageBasicCard": {
      "description": "The basic card message. Useful for displaying information.",
      "properties": {
        "formattedText": {
          "description": "Required, unless image is present. The body text of the card.",
          "type": "string"
        },
        "subtitle": {
          "description": "Optional. The subtitle of the card.",
          "type": "string"
        },
        "buttons": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCardButton"
          },
          "description": "Optional. The collection of card buttons."
        },
        "image": {
          "description": "Optional. The image for the card.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        },
        "title": {
          "description": "Optional. The title of the card.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageBasicCard",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3TestConfig": {
      "type": "object",
      "properties": {
        "page": {
          "type": "string",
          "description": "The page to start the test case with. Format: `projects//locations//agents//flows//pages/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow."
        },
        "flow": {
          "type": "string",
          "description": "Flow name to start the test case with. Format: `projects//locations//agents//flows/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow."
        },
        "trackingParameters": {
          "items": {
            "type": "string"
          },
          "description": "Session parameters to be compared when calculating differences.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3TestConfig",
      "description": "Represents configurations for a test case."
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageText": {
      "description": "The text response message.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageText",
      "properties": {
        "allowPlaybackInterruption": {
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.",
          "type": "boolean",
          "readOnly": true
        },
        "text": {
          "type": "array",
          "description": "Required. A collection of text responses.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. Name of media card."
        },
        "contentUrl": {
          "type": "string",
          "description": "Required. Url where the media is stored."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of media card."
        },
        "largeImage": {
          "description": "Optional. Image to display above media content.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "icon": {
          "description": "Optional. Icon to display above media content.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        }
      },
      "type": "object",
      "description": "Response media object for media content card."
    },
    "GoogleCloudDialogflowCxV3beta1WebhookResponse": {
      "type": "object",
      "properties": {
        "pageInfo": {
          "$ref": "GoogleCloudDialogflowCxV3beta1PageInfo",
          "description": "Information about page status. This field can be omitted by the webhook if it does not intend to modify page status."
        },
        "sessionInfo": {
          "$ref": "GoogleCloudDialogflowCxV3beta1SessionInfo",
          "description": "Information about session status. This field can be omitted by the webhook if it does not intend to modify session status."
        },
        "targetPage": {
          "type": "string",
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
        },
        "fulfillmentResponse": {
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse",
          "description": "The fulfillment response to send to the user. This field can be omitted by the webhook if it does not intend to send any response to the user."
        },
        "payload": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Value to append directly to QueryResult.webhook_payloads.",
          "type": "object"
        },
        "targetFlow": {
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        }
      },
      "description": "The response message for a webhook call.",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookResponse"
    },
    "GoogleCloudDialogflowCxV3DtmfInput": {
      "properties": {
        "digits": {
          "type": "string",
          "description": "The dtmf digits."
        },
        "finishDigit": {
          "type": "string",
          "description": "The finish digit (if any)."
        }
      },
      "id": "GoogleCloudDialogflowCxV3DtmfInput",
      "description": "Represents the input for dtmf event.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard",
      "type": "object",
      "properties": {
        "items": {
          "description": "Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem"
          }
        },
        "imageDisplayOptions": {
          "enum": [
            "IMAGE_DISPLAY_OPTIONS_UNSPECIFIED",
            "GRAY",
            "WHITE",
            "CROPPED",
            "BLURRED_BACKGROUND"
          ],
          "description": "Optional. Settings for displaying the image. Applies to every image in items.",
          "type": "string",
          "enumDescriptions": [
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with white bars.",
            "Image is scaled such that the image width and height match or exceed the container dimensions. This may crop the top and bottom of the image if the scaled image height is greater than the container height, or crop the left and right of the image if the scaled image width is greater than the container width. This is similar to \"Zoom Mode\" on a widescreen TV when playing a 4:3 video.",
            "Pad the gaps between image and image frame with a blurred copy of the same image."
          ]
        }
      },
      "description": "Browse Carousel Card for Actions on Google. https://developers.google.com/actions/assistant/responses#browsing_carousel"
    },
    "GoogleCloudDialogflowCxV3Intent": {
      "properties": {
        "trainingPhrases": {
          "description": "The collection of training phrases the agent is trained on to identify the intent.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3IntentTrainingPhrase"
          },
          "type": "array"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the intent, unique within the agent."
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3IntentParameter"
          },
          "description": "The collection of parameters associated with the intent."
        },
        "priority": {
          "description": "The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.",
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "description": "The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`.",
          "type": "string"
        },
        "isFallback": {
          "description": "Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.",
          "type": "boolean"
        },
        "labels": {
          "type": "object",
          "description": "The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix \"sys-\" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. \"sys-head\" means the intent is a head intent. \"sys.contextual\" means the intent is a contextual intent.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "description": "Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters."
        }
      },
      "id": "GoogleCloudDialogflowCxV3Intent",
      "type": "object",
      "description": "An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent."
    },
    "GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition": {
      "id": "GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition",
      "description": "A transition in a page.",
      "properties": {
        "covered": {
          "description": "Whether or not the transition is covered by at least one of the agent's test cases.",
          "type": "boolean"
        },
        "eventHandler": {
          "description": "Event handler.",
          "$ref": "GoogleCloudDialogflowCxV3beta1EventHandler"
        },
        "index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of a transition in the transition list. Starting from 0."
        },
        "target": {
          "description": "The end node of a transition.",
          "$ref": "GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode"
        },
        "transitionRoute": {
          "$ref": "GoogleCloudDialogflowCxV3beta1TransitionRoute",
          "description": "Intent route or condition route."
        },
        "source": {
          "description": "The start node of a transition.",
          "$ref": "GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1EntityTypeEntity": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1EntityTypeEntity",
      "properties": {
        "synonyms": {
          "type": "array",
          "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`.",
          "items": {
            "type": "string"
          }
        },
        "value": {
          "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).",
          "type": "string"
        }
      },
      "description": "An **entity entry** for an associated entity type."
    },
    "GoogleCloudDialogflowCxV3beta1AdvancedSettings": {
      "description": "Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playback_interruption_settings at fulfillment level only overrides the playback_interruption_settings at the agent level, leaving other settings at the agent level unchanged. DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Hierarchy: Agent-\u003eFlow-\u003ePage-\u003eFulfillment/Parameter.",
      "properties": {
        "loggingSettings": {
          "description": "Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech logging. Exposed at the following levels: - Agent level.",
          "$ref": "GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1AdvancedSettings"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard": {
      "description": "Standalone Rich Business Messaging (RBM) rich card. Rich cards allow you to respond to users with more vivid content, e.g. with media and suggestions. You can group multiple rich cards into one using RbmCarouselCard but carousel cards will give you less control over the card layout.",
      "properties": {
        "cardOrientation": {
          "description": "Required. Orientation of the card.",
          "enum": [
            "CARD_ORIENTATION_UNSPECIFIED",
            "HORIZONTAL",
            "VERTICAL"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Horizontal layout.",
            "Vertical layout."
          ],
          "type": "string"
        },
        "thumbnailImageAlignment": {
          "enum": [
            "THUMBNAIL_IMAGE_ALIGNMENT_UNSPECIFIED",
            "LEFT",
            "RIGHT"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Thumbnail preview is left-aligned.",
            "Thumbnail preview is right-aligned."
          ],
          "description": "Required if orientation is horizontal. Image preview alignment for standalone cards with horizontal layout.",
          "type": "string"
        },
        "cardContent": {
          "description": "Required. Card content.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard"
    },
    "GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig": {
      "description": "The configuration for continuous tests.",
      "id": "GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig",
      "type": "object",
      "properties": {
        "enableContinuousRun": {
          "description": "Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to true, run once a day.",
          "type": "boolean"
        },
        "enablePredeploymentRun": {
          "description": "Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment. Default false.",
          "type": "boolean"
        },
        "testCases": {
          "type": "array",
          "description": "A list of test case names to run. They should be under the same agent. Format of each test case name: `projects//locations/ /agents//testCases/`",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata": {
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ],
          "description": "Required. Output only. The current state of this operation.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Metadata in google::longrunning::Operation for Knowledge operations.",
      "id": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata"
    },
    "GoogleCloudDialogflowCxV3ResponseMessageMixedAudio": {
      "type": "object",
      "description": "Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageMixedAudio",
      "properties": {
        "segments": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment"
          },
          "type": "array",
          "description": "Segments this audio response is composed of."
        }
      }
    },
    "GoogleCloudDialogflowV2EntityTypeEntity": {
      "type": "object",
      "description": "An **entity entry** for an associated entity type.",
      "id": "GoogleCloudDialogflowV2EntityTypeEntity",
      "properties": {
        "value": {
          "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).",
          "type": "string"
        },
        "synonyms": {
          "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ListContinuousTestResultsResponse": {
      "id": "GoogleCloudDialogflowCxV3beta1ListContinuousTestResultsResponse",
      "description": "The response message for Environments.ListTestCaseResults.",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "continuousTestResults": {
          "description": "The list of continuous test results.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ContinuousTestResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageMediaContent": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageMediaContent",
      "properties": {
        "mediaObjects": {
          "type": "array",
          "description": "Required. List of media objects.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject"
          }
        },
        "mediaType": {
          "type": "string",
          "description": "Optional. What type of media is the content (ie \"audio\").",
          "enum": [
            "RESPONSE_MEDIA_TYPE_UNSPECIFIED",
            "AUDIO"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Response media type is audio."
          ]
        }
      },
      "type": "object",
      "description": "The media content card for Actions on Google."
    },
    "GoogleCloudDialogflowCxV3ExportFlowResponse": {
      "properties": {
        "flowUri": {
          "description": "The URI to a file containing the exported flow. This field is populated only if `flow_uri` is specified in ExportFlowRequest.",
          "type": "string"
        },
        "flowContent": {
          "description": "Uncompressed raw byte content for flow.",
          "type": "string",
          "format": "byte"
        }
      },
      "description": "The response message for Flows.ExportFlow.",
      "id": "GoogleCloudDialogflowCxV3ExportFlowResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio": {
      "description": "Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.",
      "properties": {
        "segments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment"
          },
          "description": "Segments this audio response is composed of."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesResponse": {
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestCaseResult"
          },
          "description": "The test case results. The detailed conversation turns are empty in this response."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesResponse",
      "description": "The response message for TestCases.BatchRunTestCases.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1Environment": {
      "type": "object",
      "description": "Represents an environment for an agent. You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for testing, development, production, etc.",
      "properties": {
        "webhookConfig": {
          "$ref": "GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig",
          "description": "The webhook configuration for this environment."
        },
        "testCasesConfig": {
          "description": "The test cases config for continuous tests of this environment.",
          "$ref": "GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Update time of this environment."
        },
        "versionConfigs": {
          "description": "Required. A list of configurations for flow versions. You should include version configs for all flows that are reachable from `Start Flow` in the agent. Otherwise, an error will be returned.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig"
          },
          "type": "array"
        },
        "displayName": {
          "description": "Required. The human-readable name of the environment (unique in an agent). Limit of 64 characters.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected."
        },
        "name": {
          "type": "string",
          "description": "The name of the environment. Format: `projects//locations//agents//environments/`."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1Environment"
    },
    "GoogleCloudDialogflowV2IntentTrainingPhrasePart": {
      "type": "object",
      "properties": {
        "userDefined": {
          "type": "boolean",
          "description": "Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow Console is used to manually annotate the part. When creating an annotated part with the API, you must set this to true."
        },
        "alias": {
          "description": "Optional. The parameter name for the value extracted from the annotated part of the example. This field is required for annotated parts of the training phrase.",
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "description": "Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training phrase."
        },
        "text": {
          "type": "string",
          "description": "Required. The text for this part."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentTrainingPhrasePart",
      "description": "Represents a part of a training phrase."
    },
    "GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse": {
      "description": "The response message for EntityTypes.BatchUpdateEntityTypes.",
      "type": "object",
      "properties": {
        "entityTypes": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityType"
          },
          "description": "The collection of updated or created entity types.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse"
    },
    "GoogleCloudDialogflowCxV3beta1VoiceSelectionParams": {
      "type": "object",
      "description": "Description of which voice to use for speech synthesis.",
      "id": "GoogleCloudDialogflowCxV3beta1VoiceSelectionParams",
      "properties": {
        "name": {
          "description": "Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender. For the list of available voices, please refer to [Supported voices and languages](https://cloud.google.com/text-to-speech/docs/voices).",
          "type": "string"
        },
        "ssmlGender": {
          "description": "Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request.",
          "type": "string",
          "enumDescriptions": [
            "An unspecified gender, which means that the client doesn't care which gender the selected voice will have.",
            "A male voice.",
            "A female voice.",
            "A gender-neutral voice."
          ],
          "enum": [
            "SSML_VOICE_GENDER_UNSPECIFIED",
            "SSML_VOICE_GENDER_MALE",
            "SSML_VOICE_GENDER_FEMALE",
            "SSML_VOICE_GENDER_NEUTRAL"
          ]
        }
      }
    },
    "GoogleCloudDialogflowCxV3CreateDocumentOperationMetadata": {
      "id": "GoogleCloudDialogflowCxV3CreateDocumentOperationMetadata",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "description": "Metadata for CreateDocument operation."
    },
    "GoogleCloudDialogflowCxV3beta1RunContinuousTestMetadata": {
      "id": "GoogleCloudDialogflowCxV3beta1RunContinuousTestMetadata",
      "properties": {
        "errors": {
          "description": "The test errors.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestError"
          }
        }
      },
      "type": "object",
      "description": "Metadata returned for the Environments.RunContinuousTest long running operation."
    },
    "GoogleCloudDialogflowV2beta1GcsDestination": {
      "id": "GoogleCloudDialogflowV2beta1GcsDestination",
      "properties": {
        "uri": {
          "description": "Required. The Google Cloud Storage URIs for the output. A URI is of the form: gs://bucket/object-prefix-or-name Whether a prefix or name is used depends on the use case. The requesting user must have \"write-permission\" to the bucket.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Google Cloud Storage location for the output."
    },
    "GoogleCloudDialogflowCxV3beta1TestRunDifference": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1TestRunDifference",
      "description": "The description of differences between original and replayed agent output.",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the diff, showing the actual output vs expected output."
        },
        "type": {
          "enumDescriptions": [
            "Should never be used.",
            "The intent.",
            "The page.",
            "The parameters.",
            "The message utterance."
          ],
          "type": "string",
          "enum": [
            "DIFF_TYPE_UNSPECIFIED",
            "INTENT",
            "PAGE",
            "PARAMETERS",
            "UTTERANCE"
          ],
          "description": "The type of diff."
        }
      }
    },
    "GoogleCloudDialogflowCxV3EventInput": {
      "id": "GoogleCloudDialogflowCxV3EventInput",
      "type": "object",
      "properties": {
        "event": {
          "type": "string",
          "description": "Name of the event."
        }
      },
      "description": "Represents the event to trigger."
    },
    "GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff",
      "description": "Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human.",
      "properties": {
        "metadata": {
          "description": "Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ListFlowsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "flows": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1Flow"
          },
          "description": "The list of flows. There will be a maximum number of items returned based on the page_size field in the request."
        }
      },
      "description": "The response message for Flows.ListFlows.",
      "id": "GoogleCloudDialogflowCxV3beta1ListFlowsResponse"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech": {
      "type": "object",
      "properties": {
        "text": {
          "description": "The raw text to be synthesized.",
          "type": "string"
        },
        "ssml": {
          "description": "The SSML to be synthesized. For more information, see [SSML](https://developers.google.com/actions/reference/ssml).",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech",
      "description": "Synthesizes speech and plays back the synthesized audio to the caller in Telephony Gateway. Telephony Gateway takes the synthesizer settings from `DetectIntentResponse.output_audio_config` which can either be set at request-level or can come from the agent-level synthesizer config."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia",
      "properties": {
        "fileUri": {
          "description": "Required. Publicly reachable URI of the file. The RBM platform determines the MIME type of the file from the content-type field in the HTTP headers when the platform fetches the file. The content-type field must be present and accurate in the HTTP response from the URL.",
          "type": "string"
        },
        "height": {
          "enumDescriptions": [
            "Not specified.",
            "112 DP.",
            "168 DP.",
            "264 DP. Not available for rich card carousels when the card width is set to small."
          ],
          "enum": [
            "HEIGHT_UNSPECIFIED",
            "SHORT",
            "MEDIUM",
            "TALL"
          ],
          "type": "string",
          "description": "Required for cards with vertical orientation. The height of the media within a rich card with a vertical layout. For a standalone card with horizontal layout, height is not customizable, and this field is ignored."
        },
        "thumbnailUri": {
          "description": "Optional. Publicly reachable URI of the thumbnail.If you don't provide a thumbnail URI, the RBM platform displays a blank placeholder thumbnail until the user's device downloads the file. Depending on the user's setting, the file may not download automatically and may require the user to tap a download button.",
          "type": "string"
        }
      },
      "description": "Rich Business Messaging (RBM) Media displayed in Cards The following media-types are currently supported: Image Types * image/jpeg * image/jpg' * image/gif * image/png Video Types * video/h263 * video/m4v * video/mp4 * video/mpeg * video/mpeg4 * video/webm",
      "type": "object"
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantEvent": {
      "description": "Represents a notification sent to Cloud Pub/Sub subscribers for human agent assistant events in a specific conversation.",
      "properties": {
        "suggestionResults": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2SuggestionResult"
          },
          "type": "array",
          "description": "The suggestion results payload that this notification refers to."
        },
        "participant": {
          "description": "The participant that the suggestion is compiled for. Format: `projects//conversations//participants/`. It will not be set in legacy workflow.",
          "type": "string"
        },
        "conversation": {
          "type": "string",
          "description": "The conversation this notification refers to. Format: `projects//conversations/`."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantEvent"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo": {
      "type": "object",
      "description": "Represents intent information communicated to the webhook.",
      "properties": {
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "The confidence of the matched intent. Values range from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "lastMatchedIntent": {
          "description": "Always present. The unique identifier of the last matched intent. Format: `projects//locations//agents//intents/`.",
          "type": "string"
        },
        "parameters": {
          "description": "Parameters identified as a result of intent matching. This is a map of the name of the identified parameter to the value of the parameter identified from the user's utterance. All parameters defined in the matched intent that are identified will be surfaced here.",
          "additionalProperties": {
            "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue"
          },
          "type": "object"
        },
        "displayName": {
          "type": "string",
          "description": "Always present. The display name of the last matched intent."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo"
    },
    "GoogleCloudDialogflowV3alpha1ReloadDocumentOperationMetadata": {
      "id": "GoogleCloudDialogflowV3alpha1ReloadDocumentOperationMetadata",
      "type": "object",
      "description": "Metadata for ReloadDocument operation.",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1EntityType": {
      "description": "Entities are extracted from user input and represent parameters that are meaningful to your application. For example, a date range, a proper name such as a geographic location or landmark, and so on. Entities represent actionable data for your application. When you define an entity, you can also include synonyms that all map to that entity. For example, \"soft drink\", \"soda\", \"pop\", and so on. There are three types of entities: * **System** - entities that are defined by the Dialogflow API for common data types such as date, time, currency, and so on. A system entity is represented by the `EntityType` type. * **Custom** - entities that are defined by you that represent actionable data that is meaningful to your application. For example, you could define a `pizza.sauce` entity for red or white pizza sauce, a `pizza.cheese` entity for the different types of cheese on a pizza, a `pizza.topping` entity for different toppings, and so on. A custom entity is represented by the `EntityType` type. * **User** - entities that are built for an individual user such as favorites, preferences, playlists, and so on. A user entity is represented by the SessionEntityType type. For more information about entity types, see the [Dialogflow documentation](https://cloud.google.com/dialogflow/docs/entities-overview).",
      "id": "GoogleCloudDialogflowCxV3beta1EntityType",
      "type": "object",
      "properties": {
        "autoExpansionMode": {
          "enumDescriptions": [
            "Auto expansion disabled for the entity.",
            "Allows an agent to recognize values that have not been explicitly listed in the entity."
          ],
          "type": "string",
          "enum": [
            "AUTO_EXPANSION_MODE_UNSPECIFIED",
            "AUTO_EXPANSION_MODE_DEFAULT"
          ],
          "description": "Indicates whether the entity type can be automatically expanded."
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`."
        },
        "excludedPhrases": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhrase"
          },
          "description": "Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive."
        },
        "displayName": {
          "description": "Required. The human-readable name of the entity type, unique within the agent.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Map entity types allow mapping of a group of synonyms to a canonical value.",
            "List entity types contain a set of entries that do not map to canonical values. However, list entity types can contain references to other entity types (with or without aliases).",
            "Regexp entity types allow to specify regular expressions in entries values."
          ],
          "enum": [
            "KIND_UNSPECIFIED",
            "KIND_MAP",
            "KIND_LIST",
            "KIND_REGEXP"
          ],
          "description": "Required. Indicates the kind of entity type."
        },
        "redact": {
          "type": "boolean",
          "description": "Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name during logging."
        },
        "entities": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1EntityTypeEntity"
          },
          "type": "array",
          "description": "The collection of entity entries associated with the entity type."
        },
        "enableFuzzyExtraction": {
          "description": "Enables fuzzy entity extraction during classification.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBasicCard": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBasicCard",
      "properties": {
        "buttons": {
          "type": "array",
          "description": "Optional. The collection of card buttons.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton"
          }
        },
        "title": {
          "description": "Optional. The title of the card.",
          "type": "string"
        },
        "subtitle": {
          "description": "Optional. The subtitle of the card.",
          "type": "string"
        },
        "formattedText": {
          "description": "Required, unless image is present. The body text of the card.",
          "type": "string"
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage",
          "description": "Optional. The image for the card."
        }
      },
      "type": "object",
      "description": "The basic card message. Useful for displaying information."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmText": {
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. Text sent and displayed to the user."
        },
        "rbmSuggestion": {
          "description": "Optional. One or more suggestions to show to the user.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion"
          },
          "type": "array"
        }
      },
      "description": "Rich Business Messaging (RBM) text response with suggestions.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmText"
    },
    "GoogleCloudDialogflowCxV3PageInfoFormInfo": {
      "properties": {
        "parameterInfo": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo"
          },
          "description": "Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note that the webhook cannot add or remove any form parameter.",
          "type": "array"
        }
      },
      "description": "Represents form information.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3PageInfoFormInfo"
    },
    "GoogleCloudDialogflowCxV3beta1TestCaseResult": {
      "id": "GoogleCloudDialogflowCxV3beta1TestCaseResult",
      "properties": {
        "testResult": {
          "enumDescriptions": [
            "Not specified. Should never be used.",
            "The test passed.",
            "The test did not pass."
          ],
          "enum": [
            "TEST_RESULT_UNSPECIFIED",
            "PASSED",
            "FAILED"
          ],
          "description": "Whether the test case passed in the agent environment.",
          "type": "string"
        },
        "environment": {
          "description": "Environment where the test was run. If not set, it indicates the draft environment.",
          "type": "string"
        },
        "testTime": {
          "format": "google-datetime",
          "description": "The time that the test was run.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`."
        },
        "conversationTurns": {
          "type": "array",
          "description": "The conversation turns uttered during the test case replay in chronological order.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ConversationTurn"
          }
        }
      },
      "type": "object",
      "description": "Represents a result from running a test case in an agent environment."
    },
    "GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse": {
      "properties": {
        "intents": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Intent"
          },
          "description": "The collection of updated or created intents."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse",
      "description": "The response message for Intents.BatchUpdateIntents."
    },
    "GoogleCloudDialogflowCxV3beta1IntentParameter": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1IntentParameter",
      "description": "Represents an intent parameter.",
      "properties": {
        "redact": {
          "type": "boolean",
          "description": "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled."
        },
        "id": {
          "type": "string",
          "description": "Required. The unique identifier of the parameter. This field is used by training phrases to annotate their parts."
        },
        "isList": {
          "description": "Indicates whether the parameter represents a list of values.",
          "type": "boolean"
        },
        "entityType": {
          "type": "string",
          "description": "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff": {
      "properties": {
        "metadata": {
          "description": "Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff",
      "description": "Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ValidationMessage": {
      "type": "object",
      "properties": {
        "resources": {
          "items": {
            "type": "string"
          },
          "description": "The names of the resources where the message is found.",
          "type": "array"
        },
        "resourceNames": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResourceName"
          },
          "type": "array",
          "description": "The resource names of the resources where the message is found."
        },
        "detail": {
          "description": "The message detail.",
          "type": "string"
        },
        "resourceType": {
          "description": "The type of the resources where the message is found.",
          "type": "string",
          "enum": [
            "RESOURCE_TYPE_UNSPECIFIED",
            "AGENT",
            "INTENT",
            "INTENT_TRAINING_PHRASE",
            "INTENT_PARAMETER",
            "INTENTS",
            "INTENT_TRAINING_PHRASES",
            "ENTITY_TYPE",
            "ENTITY_TYPES",
            "WEBHOOK",
            "FLOW",
            "PAGE",
            "PAGES",
            "TRANSITION_ROUTE_GROUP"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Agent.",
            "Intent.",
            "Intent training phrase.",
            "Intent parameter.",
            "Multiple intents.",
            "Multiple training phrases.",
            "Entity type.",
            "Multiple entity types.",
            "Webhook.",
            "Flow.",
            "Page.",
            "Multiple pages.",
            "Transition route group."
          ]
        },
        "severity": {
          "enumDescriptions": [
            "Unspecified.",
            "The agent doesn't follow Dialogflow best practices.",
            "The agent may not behave as expected.",
            "The agent may experience failures."
          ],
          "type": "string",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "INFO",
            "WARNING",
            "ERROR"
          ],
          "description": "Indicates the severity of the message."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ValidationMessage",
      "description": "Agent/flow validation message."
    },
    "GoogleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse": {
      "id": "GoogleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "transitionRouteGroups": {
          "description": "The list of transition route groups. There will be a maximum number of items returned based on the page_size field in the request. The list may in some cases be empty or contain fewer entries than page_size even if this isn't the last page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TransitionRouteGroup"
          }
        }
      },
      "type": "object",
      "description": "The response message for TransitionRouteGroups.ListTransitionRouteGroups."
    },
    "GoogleCloudDialogflowCxV3beta1IntentCoverage": {
      "properties": {
        "intents": {
          "description": "The list of Intents present in the agent",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1IntentCoverageIntent"
          },
          "type": "array"
        },
        "coverageScore": {
          "description": "The percent of intents in the agent that are covered.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1IntentCoverage",
      "description": "Intent coverage represents the percentage of all possible intents in the agent that are triggered in any of a parent's test cases.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1TestError": {
      "description": "Error info for running a test.",
      "properties": {
        "testTime": {
          "type": "string",
          "description": "The timestamp when the test was completed.",
          "format": "google-datetime"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status associated with the test."
        },
        "testCase": {
          "description": "The test case resource name.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1TestError",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1SmartReplyAnswer": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1SmartReplyAnswer",
      "description": "Represents a smart reply answer.",
      "properties": {
        "answerRecord": {
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\"",
          "type": "string"
        },
        "confidence": {
          "description": "Smart reply confidence. The system's confidence score that this reply is a good match for this conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float",
          "type": "number"
        },
        "reply": {
          "type": "string",
          "description": "The content of the reply."
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageText": {
      "properties": {
        "text": {
          "type": "array",
          "description": "Optional. The collection of the agent's responses.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "The text response message.",
      "id": "GoogleCloudDialogflowV2IntentMessageText",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTableCardCell": {
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. Text in this cell."
        }
      },
      "description": "Cell of TableCardRow.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTableCardCell"
    },
    "GoogleCloudDialogflowCxV3IntentParameter": {
      "type": "object",
      "description": "Represents an intent parameter.",
      "id": "GoogleCloudDialogflowCxV3IntentParameter",
      "properties": {
        "redact": {
          "type": "boolean",
          "description": "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled."
        },
        "isList": {
          "description": "Indicates whether the parameter represents a list of values.",
          "type": "boolean"
        },
        "entityType": {
          "description": "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.",
          "type": "string"
        },
        "id": {
          "description": "Required. The unique identifier of the parameter. This field is used by training phrases to annotate their parts.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo": {
      "properties": {
        "tag": {
          "description": "Always present. The value of the Fulfillment.tag field will be populated in this field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents fulfillment information communicated to the webhook.",
      "id": "GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo"
    },
    "GoogleCloudDialogflowCxV3beta1ListTestCaseResultsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "testCaseResults": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestCaseResult"
          },
          "type": "array",
          "description": "The list of test case results."
        }
      },
      "description": "The response message for TestCases.ListTestCaseResults.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ListTestCaseResultsResponse"
    },
    "GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion": {
      "type": "object",
      "properties": {
        "destinationName": {
          "type": "string",
          "description": "Required. The name of the app or site this chip is linking to."
        },
        "uri": {
          "description": "Required. The URI of the app or site to open when the user taps the suggestion chip.",
          "type": "string"
        }
      },
      "description": "The suggestion chip message that allows the user to jump out to the app or website associated with this agent.",
      "id": "GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion"
    },
    "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase": {
      "type": "object",
      "description": "Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively.",
      "properties": {
        "condition": {
          "type": "string",
          "description": "The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition)."
        },
        "caseContent": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent"
          },
          "description": "A list of case content.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase"
    },
    "GoogleCloudDialogflowCxV3beta1DetectIntentResponse": {
      "type": "object",
      "description": "The message returned from the DetectIntent method.",
      "properties": {
        "queryResult": {
          "$ref": "GoogleCloudDialogflowCxV3beta1QueryResult",
          "description": "The result of the conversational query."
        },
        "outputAudioConfig": {
          "description": "The config used by the speech synthesizer to generate the output audio.",
          "$ref": "GoogleCloudDialogflowCxV3beta1OutputAudioConfig"
        },
        "responseId": {
          "description": "Output only. The unique identifier of the response. It can be used to locate a response in the training example set or for reporting issues.",
          "type": "string"
        },
        "outputAudio": {
          "format": "byte",
          "description": "The audio data bytes encoded as specified in the request. Note: The output audio is generated based on the values of default platform text responses found in the `query_result.response_messages` field. If multiple default text responses exist, they will be concatenated when generating audio. If no default platform text responses exist, the generated audio content will be empty. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio output has content.",
          "type": "string"
        },
        "responseType": {
          "type": "string",
          "enumDescriptions": [
            "Not specified. This should never happen.",
            "Partial response. e.g. Aggregated responses in a Fulfillment that enables `return_partial_response` can be returned as partial response. WARNING: partial response is not eligible for barge-in.",
            "Final response."
          ],
          "description": "Response type.",
          "enum": [
            "RESPONSE_TYPE_UNSPECIFIED",
            "PARTIAL",
            "FINAL"
          ]
        },
        "allowCancellation": {
          "description": "Indicates whether the partial response can be cancelled when a later response arrives. e.g. if the agent specified some music as partial response, it can be cancelled.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1DetectIntentResponse"
    },
    "GoogleCloudDialogflowCxV3beta1CreateDocumentOperationMetadata": {
      "id": "GoogleCloudDialogflowCxV3beta1CreateDocumentOperationMetadata",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "description": "Metadata for CreateDocument operation."
    },
    "GoogleCloudDialogflowCxV3beta1ListEnvironmentsResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ListEnvironmentsResponse",
      "description": "The response message for Environments.ListEnvironments.",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "environments": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1Environment"
          },
          "description": "The list of environments. There will be a maximum number of items returned based on the page_size field in the request. The list may in some cases be empty or contain fewer entries than page_size even if this isn't the last page.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageImage": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageImage",
      "description": "The image response message.",
      "properties": {
        "accessibilityText": {
          "description": "Optional. A text description of the image to be used for accessibility, e.g., screen readers.",
          "type": "string"
        },
        "imageUri": {
          "description": "Optional. The public URI to an image file.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentParameter": {
      "type": "object",
      "description": "Represents intent parameters.",
      "properties": {
        "entityTypeDisplayName": {
          "description": "Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the parameter is required, this must be provided.",
          "type": "string"
        },
        "value": {
          "description": "Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined as `$parameter_name.original`, - a parameter value from some context defined as `#context_name.parameter_name`.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The name of the parameter."
        },
        "name": {
          "description": "The unique identifier of this parameter.",
          "type": "string"
        },
        "isList": {
          "type": "boolean",
          "description": "Optional. Indicates whether the parameter represents a list of values."
        },
        "mandatory": {
          "type": "boolean",
          "description": "Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value."
        },
        "prompts": {
          "type": "array",
          "description": "Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter.",
          "items": {
            "type": "string"
          }
        },
        "defaultValue": {
          "type": "string",
          "description": "Optional. The default value to use when the `value` yields an empty result. Default values can be extracted from contexts by using the following syntax: `#context_name.parameter_name`."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentParameter"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri": {
      "type": "object",
      "description": "Opens the user's default web browser app to the specified uri If the user has an app installed that is registered as the default handler for the URL, then this app will be opened instead, and its icon will be used in the suggested action UI.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Required. The uri to open on the user device"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1VersionVariantsVariant": {
      "id": "GoogleCloudDialogflowCxV3beta1VersionVariantsVariant",
      "type": "object",
      "properties": {
        "version": {
          "description": "The name of the flow version. Format: `projects//locations//agents//flows//versions/`.",
          "type": "string"
        },
        "trafficAllocation": {
          "description": "Percentage of the traffic which should be routed to this version of flow. Traffic allocation for a single flow must sum up to 1.0.",
          "type": "number",
          "format": "float"
        },
        "isControlGroup": {
          "description": "Whether the variant is for the control group.",
          "type": "boolean"
        }
      },
      "description": "A single flow version with specified traffic allocation."
    },
    "GoogleCloudDialogflowCxV3beta1TransitionRouteGroup": {
      "id": "GoogleCloudDialogflowCxV3beta1TransitionRouteGroup",
      "properties": {
        "transitionRoutes": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TransitionRoute"
          },
          "description": "Transition routes associated with the TransitionRouteGroup."
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the transition route group. TransitionRouteGroups.CreateTransitionRouteGroup populates the name automatically. Format: `projects//locations//agents//flows//transitionRouteGroups/`."
        },
        "displayName": {
          "description": "Required. The human-readable name of the transition route group, unique within the flow. The display name can be no longer than 30 characters.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "An TransitionRouteGroup represents a group of `TransitionRoutes` to be used by a Page."
    },
    "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem": {
      "id": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem",
      "type": "object",
      "description": "Browsing carousel tile",
      "properties": {
        "image": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "Optional. Hero image for the carousel item."
        },
        "title": {
          "type": "string",
          "description": "Required. Title of the carousel item. Maximum of two lines of text."
        },
        "openUriAction": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction",
          "description": "Required. Action to present to the user."
        },
        "footer": {
          "type": "string",
          "description": "Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the carousel item. Maximum of four lines of text."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1QueryInput": {
      "description": "Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered. ",
      "id": "GoogleCloudDialogflowCxV3beta1QueryInput",
      "properties": {
        "languageCode": {
          "description": "Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.",
          "type": "string"
        },
        "audio": {
          "description": "The natural language speech audio to be processed.",
          "$ref": "GoogleCloudDialogflowCxV3beta1AudioInput"
        },
        "intent": {
          "$ref": "GoogleCloudDialogflowCxV3beta1IntentInput",
          "description": "The intent to be triggered."
        },
        "text": {
          "description": "The natural language text to be processed.",
          "$ref": "GoogleCloudDialogflowCxV3beta1TextInput"
        },
        "event": {
          "$ref": "GoogleCloudDialogflowCxV3beta1EventInput",
          "description": "The event to be triggered."
        },
        "dtmf": {
          "$ref": "GoogleCloudDialogflowCxV3beta1DtmfInput",
          "description": "The DTMF event to be handled."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3FormParameterFillBehavior": {
      "id": "GoogleCloudDialogflowCxV3FormParameterFillBehavior",
      "type": "object",
      "description": "Configuration for how the filling of a parameter should be handled.",
      "properties": {
        "initialPromptFulfillment": {
          "description": "Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.",
          "$ref": "GoogleCloudDialogflowCxV3Fulfillment"
        },
        "repromptEventHandlers": {
          "description": "The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3EventHandler"
          }
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1IntentCoverageIntent": {
      "description": "The agent's intent.",
      "id": "GoogleCloudDialogflowCxV3beta1IntentCoverageIntent",
      "properties": {
        "intent": {
          "type": "string",
          "description": "The intent full resource name"
        },
        "covered": {
          "type": "boolean",
          "description": "Whether or not the intent is covered by at least one of the agent's test cases."
        }
      },
      "type": "object"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        },
        "https://www.googleapis.com/auth/dialogflow": {
          "description": "View, manage and query your Dialogflow agents"
        }
      }
    }
  },
  "version_module": true,
  "protocol": "rest",
  "servicePath": "",
  "parameters": {
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "description": "V1 error format.",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "alt": {
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    }
  },
  "description": "Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).",
  "ownerDomain": "google.com",
  "kind": "discovery#restDescription",
  "title": "Dialogflow API",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "ownerName": "Google",
  "mtlsRootUrl": "https://dialogflow.mtls.googleapis.com/"
}

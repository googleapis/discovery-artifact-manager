{
  "revision": "20220322",
  "ownerDomain": "google.com",
  "version_module": true,
  "version": "v1beta",
  "name": "analyticsdata",
  "baseUrl": "https://analyticsdata.googleapis.com/",
  "canonicalName": "AnalyticsData",
  "basePath": "",
  "resources": {
    "properties": {
      "methods": {
        "batchRunReports": {
          "parameters": {
            "property": {
              "location": "path",
              "required": true,
              "description": "A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id). This property must be specified for the batch. The property within RunReportRequest may either be unspecified or consistent with this property. Example: properties/1234",
              "pattern": "^properties/[^/]+$",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "httpMethod": "POST",
          "flatPath": "v1beta/properties/{propertiesId}:batchRunReports",
          "path": "v1beta/{+property}:batchRunReports",
          "parameterOrder": [
            "property"
          ],
          "id": "analyticsdata.properties.batchRunReports",
          "description": "Returns multiple reports in a batch. All reports must be for the same GA4 Property.",
          "request": {
            "$ref": "BatchRunReportsRequest"
          },
          "response": {
            "$ref": "BatchRunReportsResponse"
          }
        },
        "runPivotReport": {
          "httpMethod": "POST",
          "id": "analyticsdata.properties.runPivotReport",
          "description": "Returns a customized pivot report of your Google Analytics event data. Pivot reports are more advanced and expressive formats than regular reports. In a pivot report, dimensions are only visible if they are included in a pivot. Multiple pivots can be specified to further dissect your data.",
          "response": {
            "$ref": "RunPivotReportResponse"
          },
          "path": "v1beta/{+property}:runPivotReport",
          "parameterOrder": [
            "property"
          ],
          "flatPath": "v1beta/properties/{propertiesId}:runPivotReport",
          "parameters": {
            "property": {
              "location": "path",
              "description": "A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id). Within a batch request, this property should either be unspecified or consistent with the batch-level property. Example: properties/1234",
              "pattern": "^properties/[^/]+$",
              "type": "string",
              "required": true
            }
          },
          "request": {
            "$ref": "RunPivotReportRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ]
        },
        "runReport": {
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "parameters": {
            "property": {
              "description": "A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id). Within a batch request, this property should either be unspecified or consistent with the batch-level property. Example: properties/1234",
              "pattern": "^properties/[^/]+$",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "parameterOrder": [
            "property"
          ],
          "path": "v1beta/{+property}:runReport",
          "httpMethod": "POST",
          "id": "analyticsdata.properties.runReport",
          "response": {
            "$ref": "RunReportResponse"
          },
          "description": "Returns a customized report of your Google Analytics event data. Reports contain statistics derived from data collected by the Google Analytics tracking code. The data returned from the API is as a table with columns for the requested dimensions and metrics. Metrics are individual measurements of user activity on your property, such as active users or event count. Dimensions break down metrics across some common criteria, such as country or event name.",
          "request": {
            "$ref": "RunReportRequest"
          },
          "flatPath": "v1beta/properties/{propertiesId}:runReport"
        },
        "runRealtimeReport": {
          "path": "v1beta/{+property}:runRealtimeReport",
          "parameters": {
            "property": {
              "required": true,
              "pattern": "^properties/[^/]+$",
              "description": "A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id). Example: properties/1234",
              "type": "string",
              "location": "path"
            }
          },
          "parameterOrder": [
            "property"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "response": {
            "$ref": "RunRealtimeReportResponse"
          },
          "httpMethod": "POST",
          "description": "The Google Analytics Realtime API returns a customized report of realtime event data for your property. These reports show events and usage from the last 30 minutes.",
          "id": "analyticsdata.properties.runRealtimeReport",
          "flatPath": "v1beta/properties/{propertiesId}:runRealtimeReport",
          "request": {
            "$ref": "RunRealtimeReportRequest"
          }
        },
        "batchRunPivotReports": {
          "httpMethod": "POST",
          "parameters": {
            "property": {
              "location": "path",
              "pattern": "^properties/[^/]+$",
              "type": "string",
              "required": true,
              "description": "A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id). This property must be specified for the batch. The property within RunPivotReportRequest may either be unspecified or consistent with this property. Example: properties/1234"
            }
          },
          "path": "v1beta/{+property}:batchRunPivotReports",
          "flatPath": "v1beta/properties/{propertiesId}:batchRunPivotReports",
          "parameterOrder": [
            "property"
          ],
          "request": {
            "$ref": "BatchRunPivotReportsRequest"
          },
          "id": "analyticsdata.properties.batchRunPivotReports",
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "response": {
            "$ref": "BatchRunPivotReportsResponse"
          },
          "description": "Returns multiple pivot reports in a batch. All reports must be for the same GA4 Property."
        },
        "checkCompatibility": {
          "description": "This compatibility method lists dimensions and metrics that can be added to a report request and maintain compatibility. This method fails if the request's dimensions and metrics are incompatible. In Google Analytics, reports fail if they request incompatible dimensions and/or metrics; in that case, you will need to remove dimensions and/or metrics from the incompatible report until the report is compatible. The Realtime and Core reports have different compatibility rules. This method checks compatibility for Core reports.",
          "parameterOrder": [
            "property"
          ],
          "flatPath": "v1beta/properties/{propertiesId}:checkCompatibility",
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "parameters": {
            "property": {
              "required": true,
              "location": "path",
              "type": "string",
              "pattern": "^properties/[^/]+$",
              "description": "A Google Analytics GA4 property identifier whose events are tracked. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id). `property` should be the same value as in your `runReport` request. Example: properties/1234 Set the Property ID to 0 for compatibility checking on dimensions and metrics common to all properties. In this special mode, this method will not return custom dimensions and metrics."
            }
          },
          "path": "v1beta/{+property}:checkCompatibility",
          "httpMethod": "POST",
          "id": "analyticsdata.properties.checkCompatibility",
          "request": {
            "$ref": "CheckCompatibilityRequest"
          },
          "response": {
            "$ref": "CheckCompatibilityResponse"
          }
        },
        "getMetadata": {
          "parameters": {
            "name": {
              "pattern": "^properties/[^/]+/metadata$",
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Required. The resource name of the metadata to retrieve. This name field is specified in the URL path and not URL parameters. Property is a numeric Google Analytics GA4 Property identifier. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id). Example: properties/1234/metadata Set the Property ID to 0 for dimensions and metrics common to all properties. In this special mode, this method will not return custom dimensions and metrics."
            }
          },
          "id": "analyticsdata.properties.getMetadata",
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "path": "v1beta/{+name}",
          "response": {
            "$ref": "Metadata"
          },
          "description": "Returns metadata for dimensions and metrics available in reporting methods. Used to explore the dimensions and metrics. In this method, a Google Analytics GA4 Property Identifier is specified in the request, and the metadata response includes Custom dimensions and metrics as well as Universal metadata. For example if a custom metric with parameter name `levels_unlocked` is registered to a property, the Metadata response will contain `customEvent:levels_unlocked`. Universal metadata are dimensions and metrics applicable to any property such as `country` and `totalUsers`.",
          "httpMethod": "GET",
          "flatPath": "v1beta/properties/{propertiesId}/metadata",
          "parameterOrder": [
            "name"
          ]
        }
      }
    }
  },
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "servicePath": "",
  "kind": "discovery#restDescription",
  "title": "Google Analytics Data API",
  "ownerName": "Google",
  "batchPath": "batch",
  "mtlsRootUrl": "https://analyticsdata.mtls.googleapis.com/",
  "rootUrl": "https://analyticsdata.googleapis.com/",
  "description": "Accesses report data in Google Analytics.",
  "documentationLink": "https://developers.google.com/analytics/devguides/reporting/data/v1/",
  "schemas": {
    "MetricValue": {
      "description": "The value of a metric.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Measurement value. See MetricHeader for type.",
          "type": "string"
        }
      },
      "id": "MetricValue"
    },
    "Metadata": {
      "properties": {
        "metrics": {
          "items": {
            "$ref": "MetricMetadata"
          },
          "description": "The metric descriptions.",
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "Resource name of this metadata."
        },
        "dimensions": {
          "items": {
            "$ref": "DimensionMetadata"
          },
          "description": "The dimension descriptions.",
          "type": "array"
        }
      },
      "id": "Metadata",
      "description": "The dimensions and metrics currently accepted in reporting methods.",
      "type": "object"
    },
    "ResponseMetaData": {
      "description": "Response's metadata carrying additional information about the report content.",
      "properties": {
        "dataLossFromOtherRow": {
          "type": "boolean",
          "description": "If true, indicates some buckets of dimension combinations are rolled into \"(other)\" row. This can happen for high cardinality reports."
        },
        "emptyReason": {
          "description": "If empty reason is specified, the report is empty for this reason.",
          "type": "string"
        },
        "timeZone": {
          "type": "string",
          "description": "The property's current timezone. Intended to be used to interpret time-based dimensions like `hour` and `minute`. Formatted as strings from the IANA Time Zone database (https://www.iana.org/time-zones); for example \"America/New_York\" or \"Asia/Tokyo\"."
        },
        "currencyCode": {
          "type": "string",
          "description": "The currency code used in this report. Intended to be used in formatting currency metrics like `purchaseRevenue` for visualization. If currency_code was specified in the request, this response parameter will echo the request parameter; otherwise, this response parameter is the property's current currency_code. Currency codes are string encodings of currency types from the ISO 4217 standard (https://en.wikipedia.org/wiki/ISO_4217); for example \"USD\", \"EUR\", \"JPY\". To learn more, see https://support.google.com/analytics/answer/9796179."
        },
        "schemaRestrictionResponse": {
          "description": "Describes the schema restrictions actively enforced in creating this report. To learn more, see [Access and data-restriction management](https://support.google.com/analytics/answer/10851388).",
          "$ref": "SchemaRestrictionResponse"
        },
        "subjectToThresholding": {
          "description": "If `subjectToThresholding` is true, this report is subject to thresholding and only returns data that meets the minimum aggregation thresholds. It is possible for a request to be subject to thresholding thresholding and no data is absent from the report, and this happens when all data is above the thresholds. To learn more, see [Data thresholds](https://support.google.com/analytics/answer/9383630) and [About Demographics and Interests](https://support.google.com/analytics/answer/2799357).",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "ResponseMetaData"
    },
    "RunRealtimeReportRequest": {
      "description": "The request to generate a realtime report.",
      "properties": {
        "dimensions": {
          "description": "The dimensions requested and displayed.",
          "items": {
            "$ref": "Dimension"
          },
          "type": "array"
        },
        "limit": {
          "format": "int64",
          "type": "string",
          "description": "The number of rows to return. If unspecified, 10,000 rows are returned. The API returns a maximum of 100,000 rows per request, no matter how many you ask for. `limit` must be positive. The API can also return fewer rows than the requested `limit`, if there aren't as many dimension values as the `limit`. For instance, there are fewer than 300 possible values for the dimension `country`, so when reporting on only `country`, you can't get more than 300 rows, even if you set `limit` to a higher value."
        },
        "minuteRanges": {
          "items": {
            "$ref": "MinuteRange"
          },
          "description": "The minute ranges of event data to read. If unspecified, one minute range for the last 30 minutes will be used. If multiple minute ranges are requested, each response row will contain a zero based minute range index. If two minute ranges overlap, the event data for the overlapping minutes is included in the response rows for both minute ranges.",
          "type": "array"
        },
        "metricAggregations": {
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Unspecified operator.",
              "SUM operator.",
              "Minimum operator.",
              "Maximum operator.",
              "Count operator."
            ],
            "type": "string",
            "enum": [
              "METRIC_AGGREGATION_UNSPECIFIED",
              "TOTAL",
              "MINIMUM",
              "MAXIMUM",
              "COUNT"
            ]
          },
          "description": "Aggregation of metrics. Aggregated metric values will be shown in rows where the dimension_values are set to \"RESERVED_(MetricAggregation)\"."
        },
        "metricFilter": {
          "$ref": "FilterExpression",
          "description": "The filter clause of metrics. Applied at post aggregation phase, similar to SQL having-clause. Metrics must be requested to be used in this filter. Dimensions cannot be used in this filter."
        },
        "returnPropertyQuota": {
          "description": "Toggles whether to return the current state of this Analytics Property's Realtime quota. Quota is returned in [PropertyQuota](#PropertyQuota).",
          "type": "boolean"
        },
        "orderBys": {
          "description": "Specifies how rows are ordered in the response.",
          "items": {
            "$ref": "OrderBy"
          },
          "type": "array"
        },
        "dimensionFilter": {
          "description": "The filter clause of dimensions. Dimensions must be requested to be used in this filter. Metrics cannot be used in this filter.",
          "$ref": "FilterExpression"
        },
        "metrics": {
          "items": {
            "$ref": "Metric"
          },
          "description": "The metrics requested and displayed.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "RunRealtimeReportRequest"
    },
    "DimensionOrderBy": {
      "description": "Sorts by dimension values.",
      "properties": {
        "dimensionName": {
          "description": "A dimension name in the request to order by.",
          "type": "string"
        },
        "orderType": {
          "enum": [
            "ORDER_TYPE_UNSPECIFIED",
            "ALPHANUMERIC",
            "CASE_INSENSITIVE_ALPHANUMERIC",
            "NUMERIC"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Alphanumeric sort by Unicode code point. For example, \"2\" \u003c \"A\" \u003c \"X\" \u003c \"b\" \u003c \"z\".",
            "Case insensitive alphanumeric sort by lower case Unicode code point. For example, \"2\" \u003c \"A\" \u003c \"b\" \u003c \"X\" \u003c \"z\".",
            "Dimension values are converted to numbers before sorting. For example in NUMERIC sort, \"25\" \u003c \"100\", and in `ALPHANUMERIC` sort, \"100\" \u003c \"25\". Non-numeric dimension values all have equal ordering value below all numeric values."
          ],
          "type": "string",
          "description": "Controls the rule for dimension value ordering."
        }
      },
      "id": "DimensionOrderBy",
      "type": "object"
    },
    "BatchRunReportsRequest": {
      "properties": {
        "requests": {
          "description": "Individual requests. Each request has a separate report response. Each batch request is allowed up to 5 requests.",
          "type": "array",
          "items": {
            "$ref": "RunReportRequest"
          }
        }
      },
      "id": "BatchRunReportsRequest",
      "description": "The batch request containing multiple report requests.",
      "type": "object"
    },
    "DimensionHeader": {
      "properties": {
        "name": {
          "description": "The dimension's name.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Describes a dimension column in the report. Dimensions requested in a report produce column entries within rows and DimensionHeaders. However, dimensions used exclusively within filters or expressions do not produce columns in a report; correspondingly, those dimensions do not produce headers.",
      "id": "DimensionHeader"
    },
    "CheckCompatibilityRequest": {
      "id": "CheckCompatibilityRequest",
      "description": "The request for compatibility information for a report's dimensions and metrics. Check compatibility provides a preview of the compatibility of a report; fields shared with the `runReport` request should be the same values as in your `runReport` request.",
      "properties": {
        "metricFilter": {
          "description": "The filter clause of metrics. `metricFilter` should be the same value as in your `runReport` request",
          "$ref": "FilterExpression"
        },
        "dimensionFilter": {
          "$ref": "FilterExpression",
          "description": "The filter clause of dimensions. `dimensionFilter` should be the same value as in your `runReport` request."
        },
        "compatibilityFilter": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified compatibility.",
            "The dimension or metric is compatible. This dimension or metric can be successfully added to a report.",
            "The dimension or metric is incompatible. This dimension or metric cannot be successfully added to a report."
          ],
          "enum": [
            "COMPATIBILITY_UNSPECIFIED",
            "COMPATIBLE",
            "INCOMPATIBLE"
          ],
          "description": "Filters the dimensions and metrics in the response to just this compatibility. Commonly used as `”compatibilityFilter”: “COMPATIBLE”` to only return compatible dimensions & metrics."
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "Metric"
          },
          "description": "The metrics in this report. `metrics` should be the same value as in your `runReport` request."
        },
        "dimensions": {
          "items": {
            "$ref": "Dimension"
          },
          "type": "array",
          "description": "The dimensions in this report. `dimensions` should be the same value as in your `runReport` request."
        }
      },
      "type": "object"
    },
    "Row": {
      "id": "Row",
      "properties": {
        "dimensionValues": {
          "items": {
            "$ref": "DimensionValue"
          },
          "description": "List of requested dimension values. In a PivotReport, dimension_values are only listed for dimensions included in a pivot.",
          "type": "array"
        },
        "metricValues": {
          "description": "List of requested visible metric values.",
          "type": "array",
          "items": {
            "$ref": "MetricValue"
          }
        }
      },
      "description": "Report data for each row. For example if RunReportRequest contains: ```none \"dimensions\": [ { \"name\": \"eventName\" }, { \"name\": \"countryId\" } ], \"metrics\": [ { \"name\": \"eventCount\" } ] ``` One row with 'in_app_purchase' as the eventName, 'JP' as the countryId, and 15 as the eventCount, would be: ```none \"dimensionValues\": [ { \"value\": \"in_app_purchase\" }, { \"value\": \"JP\" } ], \"metricValues\": [ { \"value\": \"15\" } ] ```",
      "type": "object"
    },
    "RunRealtimeReportResponse": {
      "properties": {
        "minimums": {
          "type": "array",
          "items": {
            "$ref": "Row"
          },
          "description": "If requested, the minimum values of metrics."
        },
        "dimensionHeaders": {
          "items": {
            "$ref": "DimensionHeader"
          },
          "type": "array",
          "description": "Describes dimension columns. The number of DimensionHeaders and ordering of DimensionHeaders matches the dimensions present in rows."
        },
        "maximums": {
          "description": "If requested, the maximum values of metrics.",
          "type": "array",
          "items": {
            "$ref": "Row"
          }
        },
        "rows": {
          "items": {
            "$ref": "Row"
          },
          "description": "Rows of dimension value combinations and metric values in the report.",
          "type": "array"
        },
        "totals": {
          "items": {
            "$ref": "Row"
          },
          "description": "If requested, the totaled values of metrics.",
          "type": "array"
        },
        "rowCount": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of rows in the query result. `rowCount` is independent of the number of rows returned in the response and the `limit` request parameter. For example if a query returns 175 rows and includes `limit` of 50 in the API request, the response will contain `rowCount` of 175 but only 50 rows."
        },
        "metricHeaders": {
          "items": {
            "$ref": "MetricHeader"
          },
          "description": "Describes metric columns. The number of MetricHeaders and ordering of MetricHeaders matches the metrics present in rows.",
          "type": "array"
        },
        "propertyQuota": {
          "$ref": "PropertyQuota",
          "description": "This Analytics Property's Realtime quota state including this request."
        },
        "kind": {
          "description": "Identifies what kind of resource this message is. This `kind` is always the fixed string \"analyticsData#runRealtimeReport\". Useful to distinguish between response types in JSON.",
          "type": "string"
        }
      },
      "id": "RunRealtimeReportResponse",
      "type": "object",
      "description": "The response realtime report table corresponding to a request."
    },
    "DimensionCompatibility": {
      "type": "object",
      "id": "DimensionCompatibility",
      "properties": {
        "dimensionMetadata": {
          "$ref": "DimensionMetadata",
          "description": "The dimension metadata contains the API name for this compatibility information. The dimension metadata also contains other helpful information like the UI name and description."
        },
        "compatibility": {
          "description": "The compatibility of this dimension. If the compatibility is COMPATIBLE, this dimension can be successfully added to the report.",
          "type": "string",
          "enum": [
            "COMPATIBILITY_UNSPECIFIED",
            "COMPATIBLE",
            "INCOMPATIBLE"
          ],
          "enumDescriptions": [
            "Unspecified compatibility.",
            "The dimension or metric is compatible. This dimension or metric can be successfully added to a report.",
            "The dimension or metric is incompatible. This dimension or metric cannot be successfully added to a report."
          ]
        }
      },
      "description": "The compatibility for a single dimension."
    },
    "ConcatenateExpression": {
      "description": "Used to combine dimension values to a single dimension.",
      "type": "object",
      "id": "ConcatenateExpression",
      "properties": {
        "delimiter": {
          "type": "string",
          "description": "The delimiter placed between dimension names. Delimiters are often single characters such as \"|\" or \",\" but can be longer strings. If a dimension value contains the delimiter, both will be present in response with no distinction. For example if dimension 1 value = \"US,FR\", dimension 2 value = \"JP\", and delimiter = \",\", then the response will contain \"US,FR,JP\"."
        },
        "dimensionNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Names of dimensions. The names must refer back to names in the dimensions field of the request."
        }
      }
    },
    "RunReportResponse": {
      "id": "RunReportResponse",
      "properties": {
        "totals": {
          "items": {
            "$ref": "Row"
          },
          "description": "If requested, the totaled values of metrics.",
          "type": "array"
        },
        "dimensionHeaders": {
          "items": {
            "$ref": "DimensionHeader"
          },
          "description": "Describes dimension columns. The number of DimensionHeaders and ordering of DimensionHeaders matches the dimensions present in rows.",
          "type": "array"
        },
        "minimums": {
          "description": "If requested, the minimum values of metrics.",
          "items": {
            "$ref": "Row"
          },
          "type": "array"
        },
        "rowCount": {
          "format": "int32",
          "description": "The total number of rows in the query result. `rowCount` is independent of the number of rows returned in the response, the `limit` request parameter, and the `offset` request parameter. For example if a query returns 175 rows and includes `limit` of 50 in the API request, the response will contain `rowCount` of 175 but only 50 rows. To learn more about this pagination parameter, see [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).",
          "type": "integer"
        },
        "metadata": {
          "$ref": "ResponseMetaData",
          "description": "Metadata for the report."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this message is. This `kind` is always the fixed string \"analyticsData#runReport\". Useful to distinguish between response types in JSON."
        },
        "propertyQuota": {
          "description": "This Analytics Property's quota state including this request.",
          "$ref": "PropertyQuota"
        },
        "rows": {
          "description": "Rows of dimension value combinations and metric values in the report.",
          "type": "array",
          "items": {
            "$ref": "Row"
          }
        },
        "metricHeaders": {
          "description": "Describes metric columns. The number of MetricHeaders and ordering of MetricHeaders matches the metrics present in rows.",
          "type": "array",
          "items": {
            "$ref": "MetricHeader"
          }
        },
        "maximums": {
          "items": {
            "$ref": "Row"
          },
          "description": "If requested, the maximum values of metrics.",
          "type": "array"
        }
      },
      "description": "The response report table corresponding to a request.",
      "type": "object"
    },
    "ActiveMetricRestriction": {
      "id": "ActiveMetricRestriction",
      "description": "A metric actively restricted in creating the report.",
      "properties": {
        "restrictedMetricTypes": {
          "items": {
            "type": "string",
            "enum": [
              "RESTRICTED_METRIC_TYPE_UNSPECIFIED",
              "COST_DATA",
              "REVENUE_DATA"
            ],
            "enumDescriptions": [
              "Unspecified type.",
              "Cost metrics such as `adCost`.",
              "Revenue metrics such as `purchaseRevenue`."
            ]
          },
          "description": "The reason for this metric's restriction.",
          "type": "array"
        },
        "metricName": {
          "type": "string",
          "description": "The name of the restricted metric."
        }
      },
      "type": "object"
    },
    "MetricMetadata": {
      "description": "Explains a metric.",
      "id": "MetricMetadata",
      "properties": {
        "description": {
          "description": "Description of how this metric is used and calculated.",
          "type": "string"
        },
        "deprecatedApiNames": {
          "type": "array",
          "description": "Still usable but deprecated names for this metric. If populated, this metric is available by either `apiName` or one of `deprecatedApiNames` for a period of time. After the deprecation period, the metric will be available only by `apiName`.",
          "items": {
            "type": "string"
          }
        },
        "expression": {
          "description": "The mathematical expression for this derived metric. Can be used in [Metric](#Metric)'s `expression` field for equivalent reports. Most metrics are not expressions, and for non-expressions, this field is empty.",
          "type": "string"
        },
        "blockedReasons": {
          "type": "array",
          "description": "If reasons are specified, your access is blocked to this metric for this property. API requests from you to this property for this metric will succeed; however, the report will contain only zeros for this metric. API requests with metric filters on blocked metrics will fail. If reasons are empty, you have access to this metric. To learn more, see [Access and data-restriction management](https://support.google.com/analytics/answer/10851388).",
          "items": {
            "enum": [
              "BLOCKED_REASON_UNSPECIFIED",
              "NO_REVENUE_METRICS",
              "NO_COST_METRICS"
            ],
            "type": "string",
            "enumDescriptions": [
              "Will never be specified in API response.",
              "If present, your access is blocked to revenue related metrics for this property, and this metric is revenue related.",
              "If present, your access is blocked to cost related metrics for this property, and this metric is cost related."
            ]
          }
        },
        "type": {
          "enumDescriptions": [
            "Unspecified type.",
            "Integer type.",
            "Floating point type.",
            "A duration of seconds; a special floating point type.",
            "A duration in milliseconds; a special floating point type.",
            "A duration in minutes; a special floating point type.",
            "A duration in hours; a special floating point type.",
            "A custom metric of standard type; a special floating point type.",
            "An amount of money; a special floating point type.",
            "A length in feet; a special floating point type.",
            "A length in miles; a special floating point type.",
            "A length in meters; a special floating point type.",
            "A length in kilometers; a special floating point type."
          ],
          "type": "string",
          "enum": [
            "METRIC_TYPE_UNSPECIFIED",
            "TYPE_INTEGER",
            "TYPE_FLOAT",
            "TYPE_SECONDS",
            "TYPE_MILLISECONDS",
            "TYPE_MINUTES",
            "TYPE_HOURS",
            "TYPE_STANDARD",
            "TYPE_CURRENCY",
            "TYPE_FEET",
            "TYPE_MILES",
            "TYPE_METERS",
            "TYPE_KILOMETERS"
          ],
          "description": "The type of this metric."
        },
        "category": {
          "description": "The display name of the category that this metrics belongs to. Similar dimensions and metrics are categorized together.",
          "type": "string"
        },
        "customDefinition": {
          "description": "True if the metric is a custom metric for this property.",
          "type": "boolean"
        },
        "apiName": {
          "description": "A metric name. Useable in [Metric](#Metric)'s `name`. For example, `eventCount`.",
          "type": "string"
        },
        "uiName": {
          "type": "string",
          "description": "This metric's name within the Google Analytics user interface. For example, `Event count`."
        }
      },
      "type": "object"
    },
    "CaseExpression": {
      "description": "Used to convert a dimension value to a single case.",
      "id": "CaseExpression",
      "type": "object",
      "properties": {
        "dimensionName": {
          "type": "string",
          "description": "Name of a dimension. The name must refer back to a name in dimensions field of the request."
        }
      }
    },
    "BetweenFilter": {
      "id": "BetweenFilter",
      "type": "object",
      "description": "To express that the result needs to be between two numbers (inclusive).",
      "properties": {
        "fromValue": {
          "description": "Begins with this number.",
          "$ref": "NumericValue"
        },
        "toValue": {
          "description": "Ends with this number.",
          "$ref": "NumericValue"
        }
      }
    },
    "DateRange": {
      "description": "A contiguous set of days: startDate, startDate + 1, ..., endDate. Requests are allowed up to 4 date ranges.",
      "type": "object",
      "id": "DateRange",
      "properties": {
        "startDate": {
          "description": "The inclusive start date for the query in the format `YYYY-MM-DD`. Cannot be after `end_date`. The format `NdaysAgo`, `yesterday`, or `today` is also accepted, and in that case, the date is inferred based on the property's reporting time zone.",
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "description": "The inclusive end date for the query in the format `YYYY-MM-DD`. Cannot be before `start_date`. The format `NdaysAgo`, `yesterday`, or `today` is also accepted, and in that case, the date is inferred based on the property's reporting time zone."
        },
        "name": {
          "description": "Assigns a name to this date range. The dimension `dateRange` is valued to this name in a report response. If set, cannot begin with `date_range_` or `RESERVED_`. If not set, date ranges are named by their zero based index in the request: `date_range_0`, `date_range_1`, etc.",
          "type": "string"
        }
      }
    },
    "MetricHeader": {
      "description": "Describes a metric column in the report. Visible metrics requested in a report produce column entries within rows and MetricHeaders. However, metrics used exclusively within filters or expressions do not produce columns in a report; correspondingly, those metrics do not produce headers.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The metric's data type.",
          "enum": [
            "METRIC_TYPE_UNSPECIFIED",
            "TYPE_INTEGER",
            "TYPE_FLOAT",
            "TYPE_SECONDS",
            "TYPE_MILLISECONDS",
            "TYPE_MINUTES",
            "TYPE_HOURS",
            "TYPE_STANDARD",
            "TYPE_CURRENCY",
            "TYPE_FEET",
            "TYPE_MILES",
            "TYPE_METERS",
            "TYPE_KILOMETERS"
          ],
          "enumDescriptions": [
            "Unspecified type.",
            "Integer type.",
            "Floating point type.",
            "A duration of seconds; a special floating point type.",
            "A duration in milliseconds; a special floating point type.",
            "A duration in minutes; a special floating point type.",
            "A duration in hours; a special floating point type.",
            "A custom metric of standard type; a special floating point type.",
            "An amount of money; a special floating point type.",
            "A length in feet; a special floating point type.",
            "A length in miles; a special floating point type.",
            "A length in meters; a special floating point type.",
            "A length in kilometers; a special floating point type."
          ]
        },
        "name": {
          "type": "string",
          "description": "The metric's name."
        }
      },
      "id": "MetricHeader",
      "type": "object"
    },
    "CohortsRange": {
      "properties": {
        "endOffset": {
          "description": "Required. `endOffset` specifies the end date of the extended reporting date range for a cohort report. `endOffset` can be any positive integer but is commonly set to 5 to 10 so that reports contain data on the cohort for the next several granularity time periods. If `granularity` is `DAILY`, the `endDate` of the extended reporting date range is `endDate` of the cohort plus `endOffset` days. If `granularity` is `WEEKLY`, the `endDate` of the extended reporting date range is `endDate` of the cohort plus `endOffset * 7` days. If `granularity` is `MONTHLY`, the `endDate` of the extended reporting date range is `endDate` of the cohort plus `endOffset * 30` days.",
          "type": "integer",
          "format": "int32"
        },
        "startOffset": {
          "format": "int32",
          "description": "`startOffset` specifies the start date of the extended reporting date range for a cohort report. `startOffset` is commonly set to 0 so that reports contain data from the acquisition of the cohort forward. If `granularity` is `DAILY`, the `startDate` of the extended reporting date range is `startDate` of the cohort plus `startOffset` days. If `granularity` is `WEEKLY`, the `startDate` of the extended reporting date range is `startDate` of the cohort plus `startOffset * 7` days. If `granularity` is `MONTHLY`, the `startDate` of the extended reporting date range is `startDate` of the cohort plus `startOffset * 30` days.",
          "type": "integer"
        },
        "granularity": {
          "type": "string",
          "description": "Required. The granularity used to interpret the `startOffset` and `endOffset` for the extended reporting date range for a cohort report.",
          "enumDescriptions": [
            "Should never be specified.",
            "Daily granularity. Commonly used if the cohort's `dateRange` is a single day and the request contains `cohortNthDay`.",
            "Weekly granularity. Commonly used if the cohort's `dateRange` is a week in duration (starting on Sunday and ending on Saturday) and the request contains `cohortNthWeek`.",
            "Monthly granularity. Commonly used if the cohort's `dateRange` is a month in duration and the request contains `cohortNthMonth`."
          ],
          "enum": [
            "GRANULARITY_UNSPECIFIED",
            "DAILY",
            "WEEKLY",
            "MONTHLY"
          ]
        }
      },
      "id": "CohortsRange",
      "type": "object",
      "description": "Configures the extended reporting date range for a cohort report. Specifies an offset duration to follow the cohorts over."
    },
    "PivotSelection": {
      "properties": {
        "dimensionName": {
          "description": "Must be a dimension name from the request.",
          "type": "string"
        },
        "dimensionValue": {
          "description": "Order by only when the named dimension is this value.",
          "type": "string"
        }
      },
      "description": "A pair of dimension names and values. Rows with this dimension pivot pair are ordered by the metric's value. For example if pivots = {{\"browser\", \"Chrome\"}} and metric_name = \"Sessions\", then the rows will be sorted based on Sessions in Chrome. ---------|----------|----------------|----------|---------------- | Chrome | Chrome | Safari | Safari ---------|----------|----------------|----------|---------------- Country | Sessions | Pages/Sessions | Sessions | Pages/Sessions ---------|----------|----------------|----------|---------------- US | 2 | 2 | 3 | 1 ---------|----------|----------------|----------|---------------- Canada | 3 | 1 | 4 | 1 ---------|----------|----------------|----------|----------------",
      "id": "PivotSelection",
      "type": "object"
    },
    "RunReportRequest": {
      "type": "object",
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "Metric"
          },
          "description": "The metrics requested and displayed."
        },
        "dateRanges": {
          "items": {
            "$ref": "DateRange"
          },
          "type": "array",
          "description": "Date ranges of data to read. If multiple date ranges are requested, each response row will contain a zero based date range index. If two date ranges overlap, the event data for the overlapping days is included in the response rows for both date ranges. In a cohort request, this `dateRanges` must be unspecified."
        },
        "dimensions": {
          "type": "array",
          "items": {
            "$ref": "Dimension"
          },
          "description": "The dimensions requested and displayed."
        },
        "orderBys": {
          "description": "Specifies how rows are ordered in the response.",
          "items": {
            "$ref": "OrderBy"
          },
          "type": "array"
        },
        "keepEmptyRows": {
          "type": "boolean",
          "description": "If false or unspecified, each row with all metrics equal to 0 will not be returned. If true, these rows will be returned if they are not separately removed by a filter."
        },
        "metricFilter": {
          "description": "The filter clause of metrics. Applied after aggregating the report's rows, similar to SQL having-clause. Dimensions cannot be used in this filter.",
          "$ref": "FilterExpression"
        },
        "offset": {
          "description": "The row count of the start row. The first row is counted as row 0. When paging, the first request does not specify offset; or equivalently, sets offset to 0; the first request returns the first `limit` of rows. The second request sets offset to the `limit` of the first request; the second request returns the second `limit` of rows. To learn more about this pagination parameter, see [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).",
          "type": "string",
          "format": "int64"
        },
        "limit": {
          "description": "The number of rows to return. If unspecified, 10,000 rows are returned. The API returns a maximum of 100,000 rows per request, no matter how many you ask for. `limit` must be positive. The API can also return fewer rows than the requested `limit`, if there aren't as many dimension values as the `limit`. For instance, there are fewer than 300 possible values for the dimension `country`, so when reporting on only `country`, you can't get more than 300 rows, even if you set `limit` to a higher value. To learn more about this pagination parameter, see [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).",
          "format": "int64",
          "type": "string"
        },
        "currencyCode": {
          "description": "A currency code in ISO4217 format, such as \"AED\", \"USD\", \"JPY\". If the field is empty, the report uses the property's default currency.",
          "type": "string"
        },
        "cohortSpec": {
          "description": "Cohort group associated with this request. If there is a cohort group in the request the 'cohort' dimension must be present.",
          "$ref": "CohortSpec"
        },
        "property": {
          "type": "string",
          "description": "A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id). Within a batch request, this property should either be unspecified or consistent with the batch-level property. Example: properties/1234"
        },
        "metricAggregations": {
          "items": {
            "enum": [
              "METRIC_AGGREGATION_UNSPECIFIED",
              "TOTAL",
              "MINIMUM",
              "MAXIMUM",
              "COUNT"
            ],
            "enumDescriptions": [
              "Unspecified operator.",
              "SUM operator.",
              "Minimum operator.",
              "Maximum operator.",
              "Count operator."
            ],
            "type": "string"
          },
          "type": "array",
          "description": "Aggregation of metrics. Aggregated metric values will be shown in rows where the dimension_values are set to \"RESERVED_(MetricAggregation)\"."
        },
        "dimensionFilter": {
          "$ref": "FilterExpression",
          "description": "Dimension filters allow you to ask for only specific dimension values in the report. To learn more, see [Fundamentals of Dimension Filters](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#dimension_filters) for examples. Metrics cannot be used in this filter."
        },
        "returnPropertyQuota": {
          "type": "boolean",
          "description": "Toggles whether to return the current state of this Analytics Property's quota. Quota is returned in [PropertyQuota](#PropertyQuota)."
        }
      },
      "id": "RunReportRequest",
      "description": "The request to generate a report."
    },
    "SchemaRestrictionResponse": {
      "properties": {
        "activeMetricRestrictions": {
          "description": "All restrictions actively enforced in creating the report. For example, `purchaseRevenue` always has the restriction type `REVENUE_DATA`. However, this active response restriction is only populated if the user's custom role disallows access to `REVENUE_DATA`.",
          "items": {
            "$ref": "ActiveMetricRestriction"
          },
          "type": "array"
        }
      },
      "id": "SchemaRestrictionResponse",
      "type": "object",
      "description": "The schema restrictions actively enforced in creating this report. To learn more, see [Access and data-restriction management](https://support.google.com/analytics/answer/10851388)."
    },
    "Dimension": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the dimension. See the [API Dimensions](https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#dimensions) for the list of dimension names. If `dimensionExpression` is specified, `name` can be any string that you would like within the allowed character set. For example if a `dimensionExpression` concatenates `country` and `city`, you could call that dimension `countryAndCity`. Dimension names that you choose must match the regular expression `^[a-zA-Z0-9_]$`. Dimensions are referenced by `name` in `dimensionFilter`, `orderBys`, `dimensionExpression`, and `pivots`."
        },
        "dimensionExpression": {
          "$ref": "DimensionExpression",
          "description": "One dimension can be the result of an expression of multiple dimensions. For example, dimension \"country, city\": concatenate(country, \", \", city)."
        }
      },
      "description": "Dimensions are attributes of your data. For example, the dimension city indicates the city from which an event originates. Dimension values in report responses are strings; for example, the city could be \"Paris\" or \"New York\". Requests are allowed up to 9 dimensions.",
      "type": "object",
      "id": "Dimension"
    },
    "OrderBy": {
      "id": "OrderBy",
      "properties": {
        "desc": {
          "description": "If true, sorts by descending order.",
          "type": "boolean"
        },
        "dimension": {
          "description": "Sorts results by a dimension's values.",
          "$ref": "DimensionOrderBy"
        },
        "metric": {
          "description": "Sorts results by a metric's values.",
          "$ref": "MetricOrderBy"
        },
        "pivot": {
          "$ref": "PivotOrderBy",
          "description": "Sorts results by a metric's values within a pivot column group."
        }
      },
      "description": "Order bys define how rows will be sorted in the response. For example, ordering rows by descending event count is one ordering, and ordering rows by the event name string is a different ordering.",
      "type": "object"
    },
    "PropertyQuota": {
      "description": "Current state of all quotas for this Analytics Property. If any quota for a property is exhausted, all requests to that property will return Resource Exhausted errors.",
      "properties": {
        "serverErrorsPerProjectPerHour": {
          "description": "Standard Analytics Properties and cloud project pairs can have up to 10 server errors per hour; Analytics 360 Properties and cloud project pairs can have up to 50 server errors per hour.",
          "$ref": "QuotaStatus"
        },
        "concurrentRequests": {
          "description": "Standard Analytics Properties can send up to 10 concurrent requests; Analytics 360 Properties can use up to 50 concurrent requests.",
          "$ref": "QuotaStatus"
        },
        "tokensPerHour": {
          "$ref": "QuotaStatus",
          "description": "Standard Analytics Properties can use up to 5,000 tokens per hour; Analytics 360 Properties can use 50,000 tokens per hour. An API request consumes a single number of tokens, and that number is deducted from both the hourly and daily quotas."
        },
        "tokensPerDay": {
          "$ref": "QuotaStatus",
          "description": "Standard Analytics Properties can use up to 25,000 tokens per day; Analytics 360 Properties can use 250,000 tokens per day. Most requests consume fewer than 10 tokens."
        },
        "potentiallyThresholdedRequestsPerHour": {
          "$ref": "QuotaStatus",
          "description": "Analytics Properties can send up to 120 requests with potentially thresholded dimensions per hour. In a batch request, each report request is individually counted for this quota if the request contains potentially thresholded dimensions."
        }
      },
      "id": "PropertyQuota",
      "type": "object"
    },
    "CheckCompatibilityResponse": {
      "type": "object",
      "id": "CheckCompatibilityResponse",
      "description": "The compatibility response with the compatibility of each dimension & metric.",
      "properties": {
        "metricCompatibilities": {
          "description": "The compatibility of each metric.",
          "items": {
            "$ref": "MetricCompatibility"
          },
          "type": "array"
        },
        "dimensionCompatibilities": {
          "description": "The compatibility of each dimension.",
          "items": {
            "$ref": "DimensionCompatibility"
          },
          "type": "array"
        }
      }
    },
    "RunPivotReportResponse": {
      "id": "RunPivotReportResponse",
      "description": "The response pivot report table corresponding to a pivot request.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "ResponseMetaData",
          "description": "Metadata for the report."
        },
        "pivotHeaders": {
          "description": "Summarizes the columns and rows created by a pivot. Each pivot in the request produces one header in the response. If we have a request like this: \"pivots\": [{ \"fieldNames\": [\"country\", \"city\"] }, { \"fieldNames\": \"eventName\" }] We will have the following `pivotHeaders` in the response: \"pivotHeaders\" : [{ \"dimensionHeaders\": [{ \"dimensionValues\": [ { \"value\": \"United Kingdom\" }, { \"value\": \"London\" } ] }, { \"dimensionValues\": [ { \"value\": \"Japan\" }, { \"value\": \"Osaka\" } ] }] }, { \"dimensionHeaders\": [{ \"dimensionValues\": [{ \"value\": \"session_start\" }] }, { \"dimensionValues\": [{ \"value\": \"scroll\" }] }] }]",
          "type": "array",
          "items": {
            "$ref": "PivotHeader"
          }
        },
        "propertyQuota": {
          "$ref": "PropertyQuota",
          "description": "This Analytics Property's quota state including this request."
        },
        "aggregates": {
          "type": "array",
          "description": "Aggregation of metric values. Can be totals, minimums, or maximums. The returned aggregations are controlled by the metric_aggregations in the pivot. The type of aggregation returned in each row is shown by the dimension_values which are set to \"RESERVED_\".",
          "items": {
            "$ref": "Row"
          }
        },
        "metricHeaders": {
          "description": "Describes metric columns. The number of MetricHeaders and ordering of MetricHeaders matches the metrics present in rows.",
          "type": "array",
          "items": {
            "$ref": "MetricHeader"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this message is. This `kind` is always the fixed string \"analyticsData#runPivotReport\". Useful to distinguish between response types in JSON.",
          "type": "string"
        },
        "dimensionHeaders": {
          "description": "Describes dimension columns. The number of DimensionHeaders and ordering of DimensionHeaders matches the dimensions present in rows.",
          "items": {
            "$ref": "DimensionHeader"
          },
          "type": "array"
        },
        "rows": {
          "description": "Rows of dimension value combinations and metric values in the report.",
          "items": {
            "$ref": "Row"
          },
          "type": "array"
        }
      }
    },
    "FilterExpression": {
      "properties": {
        "filter": {
          "description": "A primitive filter. In the same FilterExpression, all of the filter's field names need to be either all dimensions or all metrics.",
          "$ref": "Filter"
        },
        "andGroup": {
          "$ref": "FilterExpressionList",
          "description": "The FilterExpressions in and_group have an AND relationship."
        },
        "orGroup": {
          "$ref": "FilterExpressionList",
          "description": "The FilterExpressions in or_group have an OR relationship."
        },
        "notExpression": {
          "$ref": "FilterExpression",
          "description": "The FilterExpression is NOT of not_expression."
        }
      },
      "description": "To express dimension or metric filters. The fields in the same FilterExpression need to be either all dimensions or all metrics.",
      "type": "object",
      "id": "FilterExpression"
    },
    "StringFilter": {
      "description": "The filter for string",
      "properties": {
        "caseSensitive": {
          "description": "If true, the string value is case sensitive.",
          "type": "boolean"
        },
        "matchType": {
          "type": "string",
          "description": "The match type for this filter.",
          "enum": [
            "MATCH_TYPE_UNSPECIFIED",
            "EXACT",
            "BEGINS_WITH",
            "ENDS_WITH",
            "CONTAINS",
            "FULL_REGEXP",
            "PARTIAL_REGEXP"
          ],
          "enumDescriptions": [
            "Unspecified",
            "Exact match of the string value.",
            "Begins with the string value.",
            "Ends with the string value.",
            "Contains the string value.",
            "Full match for the regular expression with the string value.",
            "Partial match for the regular expression with the string value."
          ]
        },
        "value": {
          "type": "string",
          "description": "The string value used for the matching."
        }
      },
      "id": "StringFilter",
      "type": "object"
    },
    "DimensionValue": {
      "description": "The value of a dimension.",
      "id": "DimensionValue",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value as a string if the dimension type is a string."
        }
      }
    },
    "PivotDimensionHeader": {
      "properties": {
        "dimensionValues": {
          "description": "Values of multiple dimensions in a pivot.",
          "type": "array",
          "items": {
            "$ref": "DimensionValue"
          }
        }
      },
      "type": "object",
      "description": "Summarizes dimension values from a row for this pivot.",
      "id": "PivotDimensionHeader"
    },
    "CohortReportSettings": {
      "type": "object",
      "id": "CohortReportSettings",
      "properties": {
        "accumulate": {
          "description": "If true, accumulates the result from first touch day to the end day. Not supported in `RunReportRequest`.",
          "type": "boolean"
        }
      },
      "description": "Optional settings of a cohort report."
    },
    "InListFilter": {
      "properties": {
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of string values. Must be non-empty."
        },
        "caseSensitive": {
          "type": "boolean",
          "description": "If true, the string value is case sensitive."
        }
      },
      "description": "The result needs to be in a list of string values.",
      "type": "object",
      "id": "InListFilter"
    },
    "PivotOrderBy": {
      "id": "PivotOrderBy",
      "properties": {
        "metricName": {
          "type": "string",
          "description": "In the response to order by, order rows by this column. Must be a metric name from the request."
        },
        "pivotSelections": {
          "type": "array",
          "description": "Used to select a dimension name and value pivot. If multiple pivot selections are given, the sort occurs on rows where all pivot selection dimension name and value pairs match the row's dimension name and value pair.",
          "items": {
            "$ref": "PivotSelection"
          }
        }
      },
      "type": "object",
      "description": "Sorts by a pivot column group."
    },
    "BatchRunReportsResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this message is. This `kind` is always the fixed string \"analyticsData#batchRunReports\". Useful to distinguish between response types in JSON.",
          "type": "string"
        },
        "reports": {
          "type": "array",
          "items": {
            "$ref": "RunReportResponse"
          },
          "description": "Individual responses. Each response has a separate report request."
        }
      },
      "id": "BatchRunReportsResponse",
      "description": "The batch response containing multiple reports.",
      "type": "object"
    },
    "Filter": {
      "properties": {
        "inListFilter": {
          "$ref": "InListFilter",
          "description": "A filter for in list values."
        },
        "fieldName": {
          "description": "The dimension name or metric name. Must be a name defined in dimensions or metrics.",
          "type": "string"
        },
        "numericFilter": {
          "description": "A filter for numeric or date values.",
          "$ref": "NumericFilter"
        },
        "stringFilter": {
          "$ref": "StringFilter",
          "description": "Strings related filter."
        },
        "betweenFilter": {
          "$ref": "BetweenFilter",
          "description": "A filter for two values."
        }
      },
      "id": "Filter",
      "type": "object",
      "description": "An expression to filter dimension or metric values."
    },
    "NumericValue": {
      "id": "NumericValue",
      "description": "To represent a number.",
      "type": "object",
      "properties": {
        "int64Value": {
          "description": "Integer value",
          "type": "string",
          "format": "int64"
        },
        "doubleValue": {
          "description": "Double value",
          "type": "number",
          "format": "double"
        }
      }
    },
    "RunPivotReportRequest": {
      "id": "RunPivotReportRequest",
      "description": "The request to generate a pivot report.",
      "properties": {
        "pivots": {
          "items": {
            "$ref": "Pivot"
          },
          "description": "Describes the visual format of the report's dimensions in columns or rows. The union of the fieldNames (dimension names) in all pivots must be a subset of dimension names defined in Dimensions. No two pivots can share a dimension. A dimension is only visible if it appears in a pivot.",
          "type": "array"
        },
        "dimensionFilter": {
          "$ref": "FilterExpression",
          "description": "The filter clause of dimensions. Dimensions must be requested to be used in this filter. Metrics cannot be used in this filter."
        },
        "keepEmptyRows": {
          "description": "If false or unspecified, each row with all metrics equal to 0 will not be returned. If true, these rows will be returned if they are not separately removed by a filter.",
          "type": "boolean"
        },
        "metricFilter": {
          "$ref": "FilterExpression",
          "description": "The filter clause of metrics. Applied at post aggregation phase, similar to SQL having-clause. Metrics must be requested to be used in this filter. Dimensions cannot be used in this filter."
        },
        "cohortSpec": {
          "description": "Cohort group associated with this request. If there is a cohort group in the request the 'cohort' dimension must be present.",
          "$ref": "CohortSpec"
        },
        "property": {
          "type": "string",
          "description": "A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id). Within a batch request, this property should either be unspecified or consistent with the batch-level property. Example: properties/1234"
        },
        "dateRanges": {
          "items": {
            "$ref": "DateRange"
          },
          "description": "The date range to retrieve event data for the report. If multiple date ranges are specified, event data from each date range is used in the report. A special dimension with field name \"dateRange\" can be included in a Pivot's field names; if included, the report compares between date ranges. In a cohort request, this `dateRanges` must be unspecified.",
          "type": "array"
        },
        "currencyCode": {
          "description": "A currency code in ISO4217 format, such as \"AED\", \"USD\", \"JPY\". If the field is empty, the report uses the property's default currency.",
          "type": "string"
        },
        "dimensions": {
          "description": "The dimensions requested. All defined dimensions must be used by one of the following: dimension_expression, dimension_filter, pivots, order_bys.",
          "type": "array",
          "items": {
            "$ref": "Dimension"
          }
        },
        "returnPropertyQuota": {
          "type": "boolean",
          "description": "Toggles whether to return the current state of this Analytics Property's quota. Quota is returned in [PropertyQuota](#PropertyQuota)."
        },
        "metrics": {
          "items": {
            "$ref": "Metric"
          },
          "type": "array",
          "description": "The metrics requested, at least one metric needs to be specified. All defined metrics must be used by one of the following: metric_expression, metric_filter, order_bys."
        }
      },
      "type": "object"
    },
    "Pivot": {
      "type": "object",
      "description": "Describes the visible dimension columns and rows in the report response.",
      "properties": {
        "fieldNames": {
          "type": "array",
          "description": "Dimension names for visible columns in the report response. Including \"dateRange\" produces a date range column; for each row in the response, dimension values in the date range column will indicate the corresponding date range from the request.",
          "items": {
            "type": "string"
          }
        },
        "metricAggregations": {
          "items": {
            "enumDescriptions": [
              "Unspecified operator.",
              "SUM operator.",
              "Minimum operator.",
              "Maximum operator.",
              "Count operator."
            ],
            "type": "string",
            "enum": [
              "METRIC_AGGREGATION_UNSPECIFIED",
              "TOTAL",
              "MINIMUM",
              "MAXIMUM",
              "COUNT"
            ]
          },
          "type": "array",
          "description": "Aggregate the metrics by dimensions in this pivot using the specified metric_aggregations."
        },
        "orderBys": {
          "items": {
            "$ref": "OrderBy"
          },
          "description": "Specifies how dimensions are ordered in the pivot. In the first Pivot, the OrderBys determine Row and PivotDimensionHeader ordering; in subsequent Pivots, the OrderBys determine only PivotDimensionHeader ordering. Dimensions specified in these OrderBys must be a subset of Pivot.field_names.",
          "type": "array"
        },
        "offset": {
          "format": "int64",
          "description": "The row count of the start row. The first row is counted as row 0.",
          "type": "string"
        },
        "limit": {
          "description": "The number of unique combinations of dimension values to return in this pivot. The `limit` parameter is required. A `limit` of 10,000 is common for single pivot requests. The product of the `limit` for each `pivot` in a `RunPivotReportRequest` must not exceed 100,000. For example, a two pivot request with `limit: 1000` in each pivot will fail because the product is `1,000,000`.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "Pivot"
    },
    "MetricCompatibility": {
      "id": "MetricCompatibility",
      "type": "object",
      "description": "The compatibility for a single metric.",
      "properties": {
        "metricMetadata": {
          "description": "The metric metadata contains the API name for this compatibility information. The metric metadata also contains other helpful information like the UI name and description.",
          "$ref": "MetricMetadata"
        },
        "compatibility": {
          "description": "The compatibility of this metric. If the compatibility is COMPATIBLE, this metric can be successfully added to the report.",
          "type": "string",
          "enum": [
            "COMPATIBILITY_UNSPECIFIED",
            "COMPATIBLE",
            "INCOMPATIBLE"
          ],
          "enumDescriptions": [
            "Unspecified compatibility.",
            "The dimension or metric is compatible. This dimension or metric can be successfully added to a report.",
            "The dimension or metric is incompatible. This dimension or metric cannot be successfully added to a report."
          ]
        }
      }
    },
    "BatchRunPivotReportsResponse": {
      "type": "object",
      "id": "BatchRunPivotReportsResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this message is. This `kind` is always the fixed string \"analyticsData#batchRunPivotReports\". Useful to distinguish between response types in JSON."
        },
        "pivotReports": {
          "items": {
            "$ref": "RunPivotReportResponse"
          },
          "description": "Individual responses. Each response has a separate pivot report request.",
          "type": "array"
        }
      },
      "description": "The batch response containing multiple pivot reports."
    },
    "DimensionMetadata": {
      "type": "object",
      "properties": {
        "customDefinition": {
          "type": "boolean",
          "description": "True if the dimension is a custom dimension for this property."
        },
        "category": {
          "description": "The display name of the category that this dimension belongs to. Similar dimensions and metrics are categorized together.",
          "type": "string"
        },
        "apiName": {
          "description": "This dimension's name. Useable in [Dimension](#Dimension)'s `name`. For example, `eventName`.",
          "type": "string"
        },
        "deprecatedApiNames": {
          "description": "Still usable but deprecated names for this dimension. If populated, this dimension is available by either `apiName` or one of `deprecatedApiNames` for a period of time. After the deprecation period, the dimension will be available only by `apiName`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "uiName": {
          "type": "string",
          "description": "This dimension's name within the Google Analytics user interface. For example, `Event name`."
        },
        "description": {
          "type": "string",
          "description": "Description of how this dimension is used and calculated."
        }
      },
      "description": "Explains a dimension.",
      "id": "DimensionMetadata"
    },
    "DimensionExpression": {
      "description": "Used to express a dimension which is the result of a formula of multiple dimensions. Example usages: 1) lower_case(dimension) 2) concatenate(dimension1, symbol, dimension2).",
      "id": "DimensionExpression",
      "type": "object",
      "properties": {
        "upperCase": {
          "description": "Used to convert a dimension value to upper case.",
          "$ref": "CaseExpression"
        },
        "lowerCase": {
          "description": "Used to convert a dimension value to lower case.",
          "$ref": "CaseExpression"
        },
        "concatenate": {
          "$ref": "ConcatenateExpression",
          "description": "Used to combine dimension values to a single dimension. For example, dimension \"country, city\": concatenate(country, \", \", city)."
        }
      }
    },
    "NumericFilter": {
      "type": "object",
      "id": "NumericFilter",
      "description": "Filters for numeric or date values.",
      "properties": {
        "operation": {
          "description": "The operation type for this filter.",
          "enumDescriptions": [
            "Unspecified.",
            "Equal",
            "Less than",
            "Less than or equal",
            "Greater than",
            "Greater than or equal"
          ],
          "enum": [
            "OPERATION_UNSPECIFIED",
            "EQUAL",
            "LESS_THAN",
            "LESS_THAN_OR_EQUAL",
            "GREATER_THAN",
            "GREATER_THAN_OR_EQUAL"
          ],
          "type": "string"
        },
        "value": {
          "$ref": "NumericValue",
          "description": "A numeric value or a date value."
        }
      }
    },
    "BatchRunPivotReportsRequest": {
      "type": "object",
      "properties": {
        "requests": {
          "description": "Individual requests. Each request has a separate pivot report response. Each batch request is allowed up to 5 requests.",
          "items": {
            "$ref": "RunPivotReportRequest"
          },
          "type": "array"
        }
      },
      "description": "The batch request containing multiple pivot report requests.",
      "id": "BatchRunPivotReportsRequest"
    },
    "FilterExpressionList": {
      "properties": {
        "expressions": {
          "items": {
            "$ref": "FilterExpression"
          },
          "type": "array",
          "description": "A list of filter expressions."
        }
      },
      "description": "A list of filter expressions.",
      "type": "object",
      "id": "FilterExpressionList"
    },
    "Cohort": {
      "properties": {
        "dimension": {
          "type": "string",
          "description": "Dimension used by the cohort. Required and only supports `firstSessionDate`."
        },
        "name": {
          "type": "string",
          "description": "Assigns a name to this cohort. The dimension `cohort` is valued to this name in a report response. If set, cannot begin with `cohort_` or `RESERVED_`. If not set, cohorts are named by their zero based index `cohort_0`, `cohort_1`, etc."
        },
        "dateRange": {
          "$ref": "DateRange",
          "description": "The cohort selects users whose first touch date is between start date and end date defined in the `dateRange`. This `dateRange` does not specify the full date range of event data that is present in a cohort report. In a cohort report, this `dateRange` is extended by the granularity and offset present in the `cohortsRange`; event data for the extended reporting date range is present in a cohort report. In a cohort request, this `dateRange` is required and the `dateRanges` in the `RunReportRequest` or `RunPivotReportRequest` must be unspecified. This `dateRange` should generally be aligned with the cohort's granularity. If `CohortsRange` uses daily granularity, this `dateRange` can be a single day. If `CohortsRange` uses weekly granularity, this `dateRange` can be aligned to a week boundary, starting at Sunday and ending Saturday. If `CohortsRange` uses monthly granularity, this `dateRange` can be aligned to a month, starting at the first and ending on the last day of the month."
        }
      },
      "type": "object",
      "description": "Defines a cohort selection criteria. A cohort is a group of users who share a common characteristic. For example, users with the same `firstSessionDate` belong to the same cohort.",
      "id": "Cohort"
    },
    "MetricOrderBy": {
      "properties": {
        "metricName": {
          "description": "A metric name in the request to order by.",
          "type": "string"
        }
      },
      "description": "Sorts by metric values.",
      "type": "object",
      "id": "MetricOrderBy"
    },
    "QuotaStatus": {
      "id": "QuotaStatus",
      "type": "object",
      "description": "Current state for a particular quota group.",
      "properties": {
        "consumed": {
          "format": "int32",
          "type": "integer",
          "description": "Quota consumed by this request."
        },
        "remaining": {
          "type": "integer",
          "description": "Quota remaining after this request.",
          "format": "int32"
        }
      }
    },
    "CohortSpec": {
      "properties": {
        "cohortReportSettings": {
          "description": "Optional settings for a cohort report.",
          "$ref": "CohortReportSettings"
        },
        "cohorts": {
          "description": "Defines the selection criteria to group users into cohorts. Most cohort reports define only a single cohort. If multiple cohorts are specified, each cohort can be recognized in the report by their name.",
          "type": "array",
          "items": {
            "$ref": "Cohort"
          }
        },
        "cohortsRange": {
          "$ref": "CohortsRange",
          "description": "Cohort reports follow cohorts over an extended reporting date range. This range specifies an offset duration to follow the cohorts over."
        }
      },
      "description": "The specification of cohorts for a cohort report. Cohort reports create a time series of user retention for the cohort. For example, you could select the cohort of users that were acquired in the first week of September and follow that cohort for the next six weeks. Selecting the users acquired in the first week of September cohort is specified in the `cohort` object. Following that cohort for the next six weeks is specified in the `cohortsRange` object. For examples, see [Cohort Report Examples](https://developers.google.com/analytics/devguides/reporting/data/v1/advanced#cohort_report_examples). The report response could show a weekly time series where say your app has retained 60% of this cohort after three weeks and 25% of this cohort after six weeks. These two percentages can be calculated by the metric `cohortActiveUsers/cohortTotalUsers` and will be separate rows in the report.",
      "type": "object",
      "id": "CohortSpec"
    },
    "PivotHeader": {
      "id": "PivotHeader",
      "type": "object",
      "description": "Dimensions' values in a single pivot.",
      "properties": {
        "rowCount": {
          "type": "integer",
          "description": "The cardinality of the pivot. The total number of rows for this pivot's fields regardless of how the parameters `offset` and `limit` are specified in the request.",
          "format": "int32"
        },
        "pivotDimensionHeaders": {
          "description": "The size is the same as the cardinality of the corresponding dimension combinations.",
          "items": {
            "$ref": "PivotDimensionHeader"
          },
          "type": "array"
        }
      }
    },
    "Metric": {
      "description": "The quantitative measurements of a report. For example, the metric `eventCount` is the total number of events. Requests are allowed up to 10 metrics.",
      "id": "Metric",
      "type": "object",
      "properties": {
        "invisible": {
          "description": "Indicates if a metric is invisible in the report response. If a metric is invisible, the metric will not produce a column in the response, but can be used in `metricFilter`, `orderBys`, or a metric `expression`.",
          "type": "boolean"
        },
        "expression": {
          "description": "A mathematical expression for derived metrics. For example, the metric Event count per user is `eventCount/totalUsers`.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the metric. See the [API Metrics](https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#metrics) for the list of metric names. If `expression` is specified, `name` can be any string that you would like within the allowed character set. For example if `expression` is `screenPageViews/sessions`, you could call that metric's name = `viewsPerSession`. Metric names that you choose must match the regular expression `^[a-zA-Z0-9_]$`. Metrics are referenced by `name` in `metricFilter`, `orderBys`, and metric `expression`."
        }
      }
    },
    "MinuteRange": {
      "id": "MinuteRange",
      "type": "object",
      "description": "A contiguous set of minutes: startMinutesAgo, startMinutesAgo + 1, ..., endMinutesAgo. Requests are allowed up to 2 minute ranges.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Assigns a name to this minute range. The dimension `dateRange` is valued to this name in a report response. If set, cannot begin with `date_range_` or `RESERVED_`. If not set, minute ranges are named by their zero based index in the request: `date_range_0`, `date_range_1`, etc."
        },
        "startMinutesAgo": {
          "description": "The inclusive start minute for the query as a number of minutes before now. For example, `\"startMinutesAgo\": 29` specifies the report should include event data from 29 minutes ago and after. Cannot be after `endMinutesAgo`. If unspecified, `startMinutesAgo` is defaulted to 29. Standard Analytics properties can request up to the last 30 minutes of event data (`startMinutesAgo \u003c= 29`), and 360 Analytics properties can request up to the last 60 minutes of event data (`startMinutesAgo \u003c= 59`).",
          "type": "integer",
          "format": "int32"
        },
        "endMinutesAgo": {
          "format": "int32",
          "type": "integer",
          "description": "The inclusive end minute for the query as a number of minutes before now. Cannot be before `startMinutesAgo`. For example, `\"endMinutesAgo\": 15` specifies the report should include event data from prior to 15 minutes ago. If unspecified, `endMinutesAgo` is defaulted to 0. Standard Analytics properties can request any minute in the last 30 minutes of event data (`endMinutesAgo \u003c= 29`), and 360 Analytics properties can request any minute in the last 60 minutes of event data (`endMinutesAgo \u003c= 59`)."
        }
      }
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/analytics": {
          "description": "View and manage your Google Analytics data"
        },
        "https://www.googleapis.com/auth/analytics.readonly": {
          "description": "See and download your Google Analytics data"
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "location": "query"
    },
    "alt": {
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    }
  },
  "id": "analyticsdata:v1beta",
  "discoveryVersion": "v1"
}

{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "title": "BeyondCorp API",
  "revision": "20231011",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "servicePath": "",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "kind": "discovery#restDescription",
  "name": "beyondcorp",
  "mtlsRootUrl": "https://beyondcorp.mtls.googleapis.com/",
  "protocol": "rest",
  "description": "Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.",
  "rootUrl": "https://beyondcorp.googleapis.com/",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "documentationLink": "https://cloud.google.com/",
  "batchPath": "batch",
  "version": "v1alpha",
  "parameters": {
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "location": "query",
      "description": "Data format for response.",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    }
  },
  "basePath": "",
  "baseUrl": "https://beyondcorp.googleapis.com/",
  "canonicalName": "BeyondCorp",
  "resources": {
    "organizations": {
      "resources": {
        "locations": {
          "resources": {
            "insights": {
              "methods": {
                "list": {
                  "description": "Lists for all the available insights that could be fetched from the system. Allows to filter using category. Setting the `view` to `BASIC` will let you iterate over the list of insight metadatas.",
                  "httpMethod": "GET",
                  "id": "beyondcorp.organizations.locations.insights.list",
                  "path": "v1alpha/{+parent}/insights",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^organizations/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The resource name of InsightMetadata using the form: `organizations/{organization_id}/locations/{location}` `projects/{project_id}/locations/{location_id}`",
                      "location": "path"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default. NOTE: Default page size is 50.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Optional. A token identifying a page of results the server should return.",
                      "location": "query"
                    },
                    "orderBy": {
                      "description": "Optional. Hint for how to order the results. This is currently ignored.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Filter expression to restrict the insights returned. Supported filter fields: * `type` * `category` * `subCategory` Examples: * \"category = application AND type = count\" * \"category = application AND subCategory = iap\" * \"type = status\" Allowed values: * type: [count, latency, status, list] * category: [application, device, request, security] * subCategory: [iap, webprotect] NOTE: Only equality based comparison is allowed. Only `AND` conjunction is allowed. NOTE: The 'AND' in the filter field needs to be in capital letters only. NOTE: Just filtering on `subCategory` is not allowed. It should be passed in with the parent `category` too. (These expressions are based on the filter language described at https://google.aip.dev/160)."
                    },
                    "view": {
                      "location": "query",
                      "enumDescriptions": [
                        "The default / unset value. The API will default to the BASIC view.",
                        "Include basic metadata about the insight, but not the insight data. This is the default value (for both ListInsights and GetInsight).",
                        "Include everything."
                      ],
                      "enum": [
                        "INSIGHT_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "description": "Required. List only metadata or full data.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha/organizations/{organizationsId}/locations/{locationsId}/insights",
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaListInsightsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "configuredInsight": {
                  "path": "v1alpha/{+insight}:configuredInsight",
                  "description": "Gets the value for a selected particular insight based on the provided filters. Use the organization level path for fetching at org level and project level path for fetching the insight value specific to a particular project.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaConfiguredInsightResponse"
                  },
                  "parameters": {
                    "startTime": {
                      "type": "string",
                      "description": "Required. Starting time for the duration for which insight is to be pulled.",
                      "location": "query",
                      "format": "google-datetime"
                    },
                    "aggregation": {
                      "type": "string",
                      "enumDescriptions": [
                        "Unspecified.",
                        "Insight should be aggregated at hourly level.",
                        "Insight should be aggregated at daily level.",
                        "Insight should be aggregated at weekly level.",
                        "Insight should be aggregated at monthly level.",
                        "Insight should be aggregated at the custom date range passed in as the start and end time in the request."
                      ],
                      "description": "Required. Aggregation type. Available aggregation could be fetched by calling insight list and get APIs in `BASIC` view.",
                      "enum": [
                        "AGGREGATION_UNSPECIFIED",
                        "HOURLY",
                        "DAILY",
                        "WEEKLY",
                        "MONTHLY",
                        "CUSTOM_DATE_RANGE"
                      ],
                      "location": "query"
                    },
                    "customGrouping.groupFields": {
                      "repeated": true,
                      "description": "Required. Fields to be used for grouping. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for declaring the fields to be grouped-by here.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "Optional. Used to fetch the page represented by the token. Fetches the first page when not set.",
                      "location": "query",
                      "type": "string"
                    },
                    "fieldFilter": {
                      "description": "Optional. Other filterable/configurable parameters as applicable to the selected insight. Available fields could be fetched by calling insight list and get APIs in `BASIC` view. `=` is the only comparison operator supported. `AND` is the only logical operator supported. Usage: field_filter=\"fieldName1=fieldVal1 AND fieldName2=fieldVal2\". NOTE: Only `AND` conditions are allowed. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for the filtering the corresponding fields in this filter field. (These expressions are based on the filter language described at https://google.aip.dev/160).",
                      "location": "query",
                      "type": "string"
                    },
                    "customGrouping.fieldFilter": {
                      "description": "Optional. Filterable parameters to be added to the grouping clause. Available fields could be fetched by calling insight list and get APIs in `BASIC` view. `=` is the only comparison operator supported. `AND` is the only logical operator supported. Usage: field_filter=\"fieldName1=fieldVal1 AND fieldName2=fieldVal2\". NOTE: Only `AND` conditions are allowed. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for the filtering the corresponding fields in this filter field. (These expressions are based on the filter language described at https://google.aip.dev/160).",
                      "location": "query",
                      "type": "string"
                    },
                    "insight": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The resource name of the insight using the form: `organizations/{organization_id}/locations/{location_id}/insights/{insight_id}` `projects/{project_id}/locations/{location_id}/insights/{insight_id}`.",
                      "pattern": "^organizations/[^/]+/locations/[^/]+/insights/[^/]+$"
                    },
                    "endTime": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Ending time for the duration for which insight is to be pulled.",
                      "format": "google-datetime"
                    },
                    "group": {
                      "description": "Optional. Group id of the available groupings for the insight. Available groupings could be fetched by calling insight list and get APIs in `BASIC` view.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer"
                    }
                  },
                  "flatPath": "v1alpha/organizations/{organizationsId}/locations/{locationsId}/insights/{insightsId}:configuredInsight",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "insight"
                  ],
                  "id": "beyondcorp.organizations.locations.insights.configuredInsight"
                },
                "get": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The resource name of the insight using the form: `organizations/{organization_id}/locations/{location_id}/insights/{insight_id}` `projects/{project_id}/locations/{location_id}/insights/{insight_id}`",
                      "pattern": "^organizations/[^/]+/locations/[^/]+/insights/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "view": {
                      "location": "query",
                      "description": "Required. Metadata only or full data view.",
                      "type": "string",
                      "enum": [
                        "INSIGHT_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "enumDescriptions": [
                        "The default / unset value. The API will default to the BASIC view.",
                        "Include basic metadata about the insight, but not the insight data. This is the default value (for both ListInsights and GetInsight).",
                        "Include everything."
                      ]
                    }
                  },
                  "description": "Gets the value for a selected particular insight with default configuration. The default aggregation level is 'DAILY' and no grouping will be applied or default grouping if applicable. The data will be returned for recent 7 days starting the day before. The insight data size will be limited to 50 rows. Use the organization level path for fetching at org level and project level path for fetching the insight value specific to a particular project. Setting the `view` to `BASIC` will only return the metadata for the insight.",
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha/{+name}",
                  "id": "beyondcorp.organizations.locations.insights.get",
                  "flatPath": "v1alpha/organizations/{organizationsId}/locations/{locationsId}/insights/{insightsId}"
                }
              }
            },
            "global": {
              "resources": {
                "partnerTenants": {
                  "methods": {
                    "create": {
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants",
                      "description": "Creates a new BeyondCorp Enterprise partnerTenant in a given organization and can only be called by onboarded BeyondCorp Enterprise partner.",
                      "path": "v1alpha/{+parent}/partnerTenants",
                      "parameters": {
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "description": "Required. The resource name of the parent organization using the form: `organizations/{organization_id}/locations/global`",
                          "pattern": "^organizations/[^/]+/locations/global$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "beyondcorp.organizations.locations.global.partnerTenants.create"
                    },
                    "testIamPermissions": {
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "required": true,
                          "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+$"
                        }
                      },
                      "path": "v1alpha/{+resource}:testIamPermissions",
                      "id": "beyondcorp.organizations.locations.global.partnerTenants.testIamPermissions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}:testIamPermissions",
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      }
                    },
                    "list": {
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "pattern": "^organizations/[^/]+/locations/global$",
                          "type": "string",
                          "description": "Required. The parent organization to which the PartnerTenants belong. Format: `organizations/{organization_id}/locations/global`"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "path": "v1alpha/{+parent}/partnerTenants",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants",
                      "response": {
                        "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse"
                      },
                      "id": "beyondcorp.organizations.locations.global.partnerTenants.list",
                      "description": "Lists PartnerTenants in a given organization."
                    },
                    "setIamPolicy": {
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "path": "v1alpha/{+resource}:setIamPolicy",
                      "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}:setIamPolicy",
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "id": "beyondcorp.organizations.locations.global.partnerTenants.setIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                        }
                      },
                      "httpMethod": "POST"
                    },
                    "getIamPolicy": {
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "location": "query",
                          "format": "int32",
                          "type": "integer"
                        },
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "beyondcorp.organizations.locations.global.partnerTenants.getIamPolicy",
                      "httpMethod": "GET",
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}:getIamPolicy",
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "path": "v1alpha/{+resource}:getIamPolicy"
                    },
                    "delete": {
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "httpMethod": "DELETE",
                      "description": "Deletes a single PartnerTenant.",
                      "path": "v1alpha/{+name}",
                      "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "requestId": {
                          "type": "string",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        },
                        "name": {
                          "type": "string",
                          "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+$",
                          "location": "path",
                          "description": "Required. Name of the resource.",
                          "required": true
                        }
                      },
                      "id": "beyondcorp.organizations.locations.global.partnerTenants.delete"
                    },
                    "get": {
                      "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}",
                      "description": "Gets details of a single PartnerTenant.",
                      "httpMethod": "GET",
                      "path": "v1alpha/{+name}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The resource name of the PartnerTenant using the form: `organizations/{organization_id}/locations/global/partnerTenants/{partner_tenant_id}`"
                        }
                      },
                      "id": "beyondcorp.organizations.locations.global.partnerTenants.get",
                      "response": {
                        "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "patch": {
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Output only. Unique resource name of the PartnerTenant. The name is ignored when creating PartnerTenant.",
                          "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+$"
                        },
                        "requestId": {
                          "location": "query",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        },
                        "updateMask": {
                          "type": "string",
                          "format": "google-fieldmask",
                          "location": "query",
                          "description": "Required. Field mask is used to specify the fields to be overwritten in the PartnerTenant resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten. Mutable fields: display_name, partner_metadata, group_information."
                        }
                      },
                      "id": "beyondcorp.organizations.locations.global.partnerTenants.patch",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates a single PartnerTenant.",
                      "httpMethod": "PATCH",
                      "request": {
                        "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant"
                      },
                      "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}",
                      "path": "v1alpha/{+name}"
                    }
                  },
                  "resources": {
                    "browserDlpRules": {
                      "methods": {
                        "patch": {
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "httpMethod": "PATCH",
                          "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}/browserDlpRules/{browserDlpRulesId}",
                          "request": {
                            "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaBrowserDlpRule"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "beyondcorp.organizations.locations.global.partnerTenants.browserDlpRules.patch",
                          "parameters": {
                            "requestId": {
                              "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                              "location": "query",
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/browserDlpRules/[^/]+$",
                              "description": "Output only. Unique resource name. The name is ignored when creating BrowserDlpRule."
                            },
                            "updateMask": {
                              "type": "string",
                              "location": "query",
                              "description": "Required. Supported fields include: rule_setting.value.*, group.id/group.email.",
                              "format": "google-fieldmask"
                            }
                          },
                          "path": "v1alpha/{+name}",
                          "description": "Update an existing BrowserDlpRule in a given organization and PartnerTenant."
                        },
                        "getIamPolicy": {
                          "parameters": {
                            "options.requestedPolicyVersion": {
                              "type": "integer",
                              "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                              "location": "query",
                              "format": "int32"
                            },
                            "resource": {
                              "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/browserDlpRules/[^/]+$"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                          "id": "beyondcorp.organizations.locations.global.partnerTenants.browserDlpRules.getIamPolicy",
                          "path": "v1alpha/{+resource}:getIamPolicy",
                          "parameterOrder": [
                            "resource"
                          ],
                          "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}/browserDlpRules/{browserDlpRulesId}:getIamPolicy",
                          "response": {
                            "$ref": "GoogleIamV1Policy"
                          },
                          "httpMethod": "GET"
                        },
                        "testIamPermissions": {
                          "response": {
                            "$ref": "GoogleIamV1TestIamPermissionsResponse"
                          },
                          "parameters": {
                            "resource": {
                              "location": "path",
                              "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "type": "string",
                              "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/browserDlpRules/[^/]+$",
                              "required": true
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1alpha/{+resource}:testIamPermissions",
                          "id": "beyondcorp.organizations.locations.global.partnerTenants.browserDlpRules.testIamPermissions",
                          "request": {
                            "$ref": "GoogleIamV1TestIamPermissionsRequest"
                          },
                          "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                          "parameterOrder": [
                            "resource"
                          ],
                          "httpMethod": "POST",
                          "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}/browserDlpRules/{browserDlpRulesId}:testIamPermissions"
                        },
                        "list": {
                          "id": "beyondcorp.organizations.locations.global.partnerTenants.browserDlpRules.list",
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "parent": {
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "description": "Required. The parent partnerTenant to which the BrowserDlpRules belong. Format: `organizations/{organization_id}/locations/global/partnerTenants/{partner_tenant_id}`",
                              "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+$"
                            }
                          },
                          "response": {
                            "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaListBrowserDlpRulesResponse"
                          },
                          "path": "v1alpha/{+parent}/browserDlpRules",
                          "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}/browserDlpRules",
                          "description": "Lists BrowserDlpRules for PartnerTenant in a given organization."
                        },
                        "delete": {
                          "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}/browserDlpRules/{browserDlpRulesId}",
                          "description": "Deletes an existing BrowserDlpRule.",
                          "id": "beyondcorp.organizations.locations.global.partnerTenants.browserDlpRules.delete",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "DELETE",
                          "path": "v1alpha/{+name}",
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "name": {
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "description": "Required. The resource name of the BrowserDlpRule using the form: `organizations/{organization_id}/locations/global/partnerTenants/{partner_tenant_id}/browserDlpRules/{browser_dlp_rule_id}`",
                              "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/browserDlpRules/[^/]+$"
                            },
                            "requestId": {
                              "location": "query",
                              "type": "string",
                              "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                            }
                          }
                        },
                        "get": {
                          "description": "Gets details of a single BrowserDlpRule.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "beyondcorp.organizations.locations.global.partnerTenants.browserDlpRules.get",
                          "path": "v1alpha/{+name}",
                          "response": {
                            "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaBrowserDlpRule"
                          },
                          "httpMethod": "GET",
                          "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}/browserDlpRules/{browserDlpRulesId}",
                          "parameters": {
                            "name": {
                              "description": "Required. The resource name of the BrowserDlpRule using the form: `organizations/{organization_id}/locations/global/partnerTenants/{partner_tenant_id}/browserDlpRules/{browser_dlp_rule_id}`",
                              "location": "path",
                              "required": true,
                              "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/browserDlpRules/[^/]+$",
                              "type": "string"
                            }
                          }
                        },
                        "setIamPolicy": {
                          "parameterOrder": [
                            "resource"
                          ],
                          "parameters": {
                            "resource": {
                              "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/browserDlpRules/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "required": true
                            }
                          },
                          "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "beyondcorp.organizations.locations.global.partnerTenants.browserDlpRules.setIamPolicy",
                          "request": {
                            "$ref": "GoogleIamV1SetIamPolicyRequest"
                          },
                          "httpMethod": "POST",
                          "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}/browserDlpRules/{browserDlpRulesId}:setIamPolicy",
                          "path": "v1alpha/{+resource}:setIamPolicy",
                          "response": {
                            "$ref": "GoogleIamV1Policy"
                          }
                        },
                        "create": {
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "parameters": {
                            "requestId": {
                              "location": "query",
                              "type": "string",
                              "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                            },
                            "parent": {
                              "description": "Required. The resource name of the BrowserDlpRule parent using the form: `organizations/{organization_id}/locations/global/partnerTenants/{partner_tenant_id}`",
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+$"
                            }
                          },
                          "request": {
                            "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaBrowserDlpRule"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}/browserDlpRules",
                          "description": "Creates a new BrowserDlpRule in a given organization and PartnerTenant.",
                          "path": "v1alpha/{+parent}/browserDlpRules",
                          "id": "beyondcorp.organizations.locations.global.partnerTenants.browserDlpRules.create"
                        }
                      }
                    },
                    "proxyConfigs": {
                      "methods": {
                        "patch": {
                          "path": "v1alpha/{+name}",
                          "request": {
                            "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig"
                          },
                          "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}/proxyConfigs/{proxyConfigsId}",
                          "httpMethod": "PATCH",
                          "id": "beyondcorp.organizations.locations.global.partnerTenants.proxyConfigs.patch",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/proxyConfigs/[^/]+$",
                              "type": "string",
                              "required": true,
                              "description": "Output only. ProxyConfig resource name.",
                              "location": "path"
                            },
                            "updateMask": {
                              "description": "Required. Mutable fields include: display_name, proxy_uri, routing_info, transport_info, encryption_info.",
                              "location": "query",
                              "format": "google-fieldmask",
                              "type": "string"
                            },
                            "requestId": {
                              "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                              "type": "string",
                              "location": "query"
                            }
                          },
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Updates a single proxy config."
                        },
                        "create": {
                          "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}/proxyConfigs",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "request": {
                            "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig"
                          },
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "parameters": {
                            "parent": {
                              "type": "string",
                              "description": "Required. The resource name of the parent PartnerTenant using the form: `organizations/{organization_id}/locations/global/partnerTenants/{partner_tenant_id}`",
                              "location": "path",
                              "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+$",
                              "required": true
                            },
                            "requestId": {
                              "type": "string",
                              "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                              "location": "query"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "POST",
                          "description": "Creates a new BeyondCorp Enterprise ProxyConfig in a given organization and PartnerTenant. Can only be called by on onboarded Beyondcorp Enterprise partner.",
                          "path": "v1alpha/{+parent}/proxyConfigs",
                          "id": "beyondcorp.organizations.locations.global.partnerTenants.proxyConfigs.create"
                        },
                        "setIamPolicy": {
                          "parameterOrder": [
                            "resource"
                          ],
                          "id": "beyondcorp.organizations.locations.global.partnerTenants.proxyConfigs.setIamPolicy",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "POST",
                          "parameters": {
                            "resource": {
                              "type": "string",
                              "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "location": "path",
                              "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/proxyConfigs/[^/]+$",
                              "required": true
                            }
                          },
                          "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}/proxyConfigs/{proxyConfigsId}:setIamPolicy",
                          "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                          "response": {
                            "$ref": "GoogleIamV1Policy"
                          },
                          "path": "v1alpha/{+resource}:setIamPolicy",
                          "request": {
                            "$ref": "GoogleIamV1SetIamPolicyRequest"
                          }
                        },
                        "getIamPolicy": {
                          "parameters": {
                            "resource": {
                              "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/proxyConfigs/[^/]+$",
                              "location": "path",
                              "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "type": "string",
                              "required": true
                            },
                            "options.requestedPolicyVersion": {
                              "format": "int32",
                              "location": "query",
                              "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                              "type": "integer"
                            }
                          },
                          "id": "beyondcorp.organizations.locations.global.partnerTenants.proxyConfigs.getIamPolicy",
                          "path": "v1alpha/{+resource}:getIamPolicy",
                          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "resource"
                          ],
                          "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}/proxyConfigs/{proxyConfigsId}:getIamPolicy",
                          "response": {
                            "$ref": "GoogleIamV1Policy"
                          }
                        },
                        "delete": {
                          "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}/proxyConfigs/{proxyConfigsId}",
                          "path": "v1alpha/{+name}",
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Deletes a single ProxyConfig.",
                          "id": "beyondcorp.organizations.locations.global.partnerTenants.proxyConfigs.delete",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "requestId": {
                              "location": "query",
                              "type": "string",
                              "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                            },
                            "name": {
                              "description": "Required. Name of the resource.",
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/proxyConfigs/[^/]+$"
                            }
                          },
                          "httpMethod": "DELETE"
                        },
                        "list": {
                          "path": "v1alpha/{+parent}/proxyConfigs",
                          "id": "beyondcorp.organizations.locations.global.partnerTenants.proxyConfigs.list",
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}/proxyConfigs",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse"
                          },
                          "description": "Lists ProxyConfigs for PartnerTenant in a given organization.",
                          "parameters": {
                            "parent": {
                              "description": "Required. The parent organization to which the ProxyConfigs belong. Format: `organizations/{organization_id}/locations/global/partnerTenants/{partner_tenant_id}`",
                              "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+$",
                              "required": true,
                              "location": "path",
                              "type": "string"
                            }
                          }
                        },
                        "testIamPermissions": {
                          "path": "v1alpha/{+resource}:testIamPermissions",
                          "request": {
                            "$ref": "GoogleIamV1TestIamPermissionsRequest"
                          },
                          "response": {
                            "$ref": "GoogleIamV1TestIamPermissionsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "resource"
                          ],
                          "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}/proxyConfigs/{proxyConfigsId}:testIamPermissions",
                          "parameters": {
                            "resource": {
                              "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/proxyConfigs/[^/]+$"
                            }
                          },
                          "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                          "id": "beyondcorp.organizations.locations.global.partnerTenants.proxyConfigs.testIamPermissions"
                        },
                        "get": {
                          "httpMethod": "GET",
                          "flatPath": "v1alpha/organizations/{organizationsId}/locations/global/partnerTenants/{partnerTenantsId}/proxyConfigs/{proxyConfigsId}",
                          "id": "beyondcorp.organizations.locations.global.partnerTenants.proxyConfigs.get",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1alpha/{+name}",
                          "response": {
                            "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig"
                          },
                          "parameters": {
                            "name": {
                              "location": "path",
                              "pattern": "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/proxyConfigs/[^/]+$",
                              "required": true,
                              "description": "Required. The resource name of the ProxyConfig using the form: `organizations/{organization_id}/locations/global/partnerTenants/{partner_tenant_id}/proxyConfigs/{proxy_config_id}`",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Gets details of a single ProxyConfig."
                        }
                      }
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^organizations/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation resource."
                    }
                  },
                  "flatPath": "v1alpha/organizations/{organizationsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1alpha/{+name}",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "beyondcorp.organizations.locations.operations.get"
                },
                "list": {
                  "flatPath": "v1alpha/organizations/{organizationsId}/locations/{locationsId}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha/{+name}/operations",
                  "id": "beyondcorp.organizations.locations.operations.list",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the operation's parent resource.",
                      "required": true,
                      "pattern": "^organizations/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "cancel": {
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "request": {
                    "$ref": "GoogleLongrunningCancelOperationRequest"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^organizations/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "flatPath": "v1alpha/organizations/{organizationsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "beyondcorp.organizations.locations.operations.cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1alpha/{+name}:cancel"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "flatPath": "v1alpha/organizations/{organizationsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "beyondcorp.organizations.locations.operations.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha/{+name}",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^organizations/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "subscriptions": {
              "methods": {
                "get": {
                  "id": "beyondcorp.organizations.locations.subscriptions.get",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The resource name of Subscription using the form: `organizations/{organization_id}/locations/{location}/subscriptions/{subscription_id}`",
                      "pattern": "^organizations/[^/]+/locations/[^/]+/subscriptions/[^/]+$"
                    }
                  },
                  "path": "v1alpha/{+name}",
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha/organizations/{organizationsId}/locations/{locationsId}/subscriptions/{subscriptionsId}",
                  "httpMethod": "GET",
                  "description": "Gets details of a single Subscription."
                },
                "create": {
                  "httpMethod": "POST",
                  "description": "Creates a new BeyondCorp Enterprise Subscription in a given organization. Location will always be global as BeyondCorp subscriptions are per organization.",
                  "parameters": {
                    "parent": {
                      "pattern": "^organizations/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The resource name of the subscription location using the form: `organizations/{organization_id}/locations/{location}`",
                      "type": "string",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "beyondcorp.organizations.locations.subscriptions.create",
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription"
                  },
                  "path": "v1alpha/{+parent}/subscriptions",
                  "request": {
                    "$ref": "GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription"
                  },
                  "flatPath": "v1alpha/organizations/{organizationsId}/locations/{locationsId}/subscriptions"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaListSubscriptionsResponse"
                  },
                  "description": "Lists Subscriptions in a given organization and location.",
                  "flatPath": "v1alpha/organizations/{organizationsId}/locations/{locationsId}/subscriptions",
                  "path": "v1alpha/{+parent}/subscriptions",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The next_page_token value returned from a previous ListSubscriptionsRequest, if any."
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^organizations/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The resource name of Subscription using the form: `organizations/{organization_id}/locations/{location}`",
                      "required": true
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "beyondcorp.organizations.locations.subscriptions.list"
                }
              }
            }
          }
        }
      }
    },
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "flatPath": "v1alpha/projects/{projectsId}/locations",
              "description": "Lists information about the supported locations for this service.",
              "response": {
                "$ref": "GoogleCloudLocationListLocationsResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "name": {
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$"
                }
              },
              "id": "beyondcorp.projects.locations.list",
              "httpMethod": "GET",
              "path": "v1alpha/{+name}/locations"
            },
            "get": {
              "id": "beyondcorp.projects.locations.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Resource name for the location."
                }
              },
              "description": "Gets information about a location.",
              "path": "v1alpha/{+name}",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}",
              "response": {
                "$ref": "GoogleCloudLocationLocation"
              }
            }
          },
          "resources": {
            "operations": {
              "methods": {
                "get": {
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "path": "v1alpha/{+name}",
                  "id": "beyondcorp.projects.locations.operations.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  }
                },
                "delete": {
                  "path": "v1alpha/{+name}",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "httpMethod": "DELETE",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "beyondcorp.projects.locations.operations.delete",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "list": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list page token."
                    },
                    "filter": {
                      "location": "query",
                      "description": "The standard list filter.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "The standard list page size."
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v1alpha/{+name}/operations",
                  "httpMethod": "GET",
                  "id": "beyondcorp.projects.locations.operations.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations"
                },
                "cancel": {
                  "id": "beyondcorp.projects.locations.operations.cancel",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleLongrunningCancelOperationRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "httpMethod": "POST",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1alpha/{+name}:cancel"
                }
              }
            },
            "applicationDomains": {
              "methods": {
                "getIamPolicy": {
                  "path": "v1alpha/{+resource}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "id": "beyondcorp.projects.locations.applicationDomains.getIamPolicy",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/applicationDomains/{applicationDomainsId}:getIamPolicy",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/applicationDomains/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    },
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    }
                  },
                  "httpMethod": "GET"
                },
                "testIamPermissions": {
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/applicationDomains/{applicationDomainsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "path": "v1alpha/{+resource}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "beyondcorp.projects.locations.applicationDomains.testIamPermissions",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/applicationDomains/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "setIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "beyondcorp.projects.locations.applicationDomains.setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "path": "v1alpha/{+resource}:setIamPolicy",
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/applicationDomains/[^/]+$"
                    }
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/applicationDomains/{applicationDomainsId}:setIamPolicy",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST"
                }
              }
            },
            "connectors": {
              "methods": {
                "getIamPolicy": {
                  "httpMethod": "GET",
                  "id": "beyondcorp.projects.locations.connectors.getIamPolicy",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectors/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "path": "v1alpha/{+resource}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connectors/{connectorsId}:getIamPolicy"
                },
                "reportStatus": {
                  "parameters": {
                    "connector": {
                      "description": "Required. BeyondCorp Connector name using the form: `projects/{project_id}/locations/{location_id}/connectors/{connector}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectors/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Report status for a given connector.",
                  "id": "beyondcorp.projects.locations.connectors.reportStatus",
                  "request": {
                    "$ref": "ReportStatusRequest"
                  },
                  "path": "v1alpha/{+connector}:reportStatus",
                  "parameterOrder": [
                    "connector"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connectors/{connectorsId}:reportStatus"
                },
                "testIamPermissions": {
                  "id": "beyondcorp.projects.locations.connectors.testIamPermissions",
                  "path": "v1alpha/{+resource}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connectors/{connectorsId}:testIamPermissions",
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectors/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  }
                },
                "list": {
                  "path": "v1alpha/{+parent}/connectors",
                  "id": "beyondcorp.projects.locations.connectors.list",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The resource name of the connector location using the form: `projects/{project_id}/locations/{location_id}`",
                      "type": "string",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The next_page_token value returned from a previous ListConnectorsRequest, if any."
                    },
                    "filter": {
                      "location": "query",
                      "description": "Optional. A filter specifying constraints of a list operation.",
                      "type": "string"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Optional. Specifies the ordering of results. See [Sorting order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connectors",
                  "description": "Lists Connectors in a given project and location.",
                  "response": {
                    "$ref": "ListConnectorsResponse"
                  }
                },
                "patch": {
                  "request": {
                    "$ref": "Connector"
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connectors/{connectorsId}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "validateOnly": {
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Mask of fields to update. At least one path must be supplied in this field. The elements of the repeated paths field may only include these fields from [BeyondCorp.Connector]: * `labels` * `display_name`",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "type": "string",
                      "description": "Required. Unique resource name of the connector. The name is ignored when creating a connector.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectors/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "beyondcorp.projects.locations.connectors.patch",
                  "path": "v1alpha/{+name}",
                  "description": "Updates the parameters of a single Connector."
                },
                "resolveInstanceConfig": {
                  "path": "v1alpha/{+connector}:resolveInstanceConfig",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets instance configuration for a given connector. An internal method called by a connector to get its container config.",
                  "response": {
                    "$ref": "ResolveInstanceConfigResponse"
                  },
                  "parameterOrder": [
                    "connector"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connectors/{connectorsId}:resolveInstanceConfig",
                  "id": "beyondcorp.projects.locations.connectors.resolveInstanceConfig",
                  "parameters": {
                    "connector": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectors/[^/]+$",
                      "location": "path",
                      "description": "Required. BeyondCorp Connector name using the form: `projects/{project_id}/locations/{location_id}/connectors/{connector}`"
                    }
                  }
                },
                "setIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "id": "beyondcorp.projects.locations.connectors.setIamPolicy",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connectors/{connectorsId}:setIamPolicy",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "parameters": {
                    "resource": {
                      "required": true,
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectors/[^/]+$"
                    }
                  },
                  "path": "v1alpha/{+resource}:setIamPolicy"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Connector"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connectors",
                  "description": "Creates a new Connector in a given project and location.",
                  "httpMethod": "POST",
                  "id": "beyondcorp.projects.locations.connectors.create",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "connectorId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. User-settable connector resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter."
                    },
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way."
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The resource project name of the connector location using the form: `projects/{project_id}/locations/{location_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v1alpha/{+parent}/connectors",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connectors/{connectorsId}",
                  "description": "Deletes a single Connector.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "beyondcorp.projects.locations.connectors.delete",
                  "parameters": {
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "location": "query"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectors/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. BeyondCorp Connector name using the form: `projects/{project_id}/locations/{location_id}/connectors/{connector_id}`"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "get": {
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connectors/{connectorsId}",
                  "id": "beyondcorp.projects.locations.connectors.get",
                  "path": "v1alpha/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectors/[^/]+$",
                      "description": "Required. BeyondCorp Connector name using the form: `projects/{project_id}/locations/{location_id}/connectors/{connector_id}`",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Connector"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets details of a single Connector."
                }
              }
            },
            "connections": {
              "methods": {
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single Connection.",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "Required. Mask of fields to update. At least one path must be supplied in this field. The elements of the repeated paths field may only include these fields from [BeyondCorp.Connection]: * `labels` * `display_name` * `application_endpoint` * `connectors`",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "validateOnly": {
                      "location": "query",
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "type": "boolean"
                    },
                    "allowMissing": {
                      "description": "Optional. If set as true, will create the resource if it is not found.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "name": {
                      "description": "Required. Unique resource name of the connection. The name is ignored when creating a connection.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "location": "path"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}",
                  "request": {
                    "$ref": "Connection"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "beyondcorp.projects.locations.connections.patch",
                  "httpMethod": "PATCH"
                },
                "delete": {
                  "description": "Deletes a single Connection.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "beyondcorp.projects.locations.connections.delete",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}",
                  "httpMethod": "DELETE",
                  "path": "v1alpha/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. BeyondCorp Connector name using the form: `projects/{project_id}/locations/{location_id}/connections/{connection_id}`"
                    }
                  }
                },
                "create": {
                  "httpMethod": "POST",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connections",
                  "description": "Creates a new Connection in a given project and location.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "beyondcorp.projects.locations.connections.create",
                  "path": "v1alpha/{+parent}/connections",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The resource project name of the connection location using the form: `projects/{project_id}/locations/{location_id}`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "connectionId": {
                      "location": "query",
                      "description": "Optional. User-settable connection resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "location": "query",
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "type": "boolean"
                    }
                  },
                  "request": {
                    "$ref": "Connection"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "type": "string",
                      "description": "Required. BeyondCorp Connection name using the form: `projects/{project_id}/locations/{location_id}/connections/{connection_id}`",
                      "required": true
                    }
                  },
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single Connection.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Connection"
                  },
                  "id": "beyondcorp.projects.locations.connections.get",
                  "httpMethod": "GET"
                },
                "testIamPermissions": {
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:testIamPermissions",
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "beyondcorp.projects.locations.connections.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1alpha/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  }
                },
                "getIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "id": "beyondcorp.projects.locations.connections.getIamPolicy",
                  "path": "v1alpha/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:getIamPolicy",
                  "httpMethod": "GET"
                },
                "setIamPolicy": {
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "path": "v1alpha/{+resource}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:setIamPolicy",
                  "id": "beyondcorp.projects.locations.connections.setIamPolicy",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connections",
                  "id": "beyondcorp.projects.locations.connections.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListConnectionsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "Optional. A filter specifying constraints of a list operation.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The resource name of the connection location using the form: `projects/{project_id}/locations/{location_id}`",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Optional. Specifies the ordering of results. See [Sorting order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Optional. The next_page_token value returned from a previous ListConnectionsRequest, if any.",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha/{+parent}/connections",
                  "description": "Lists Connections in a given project and location."
                },
                "resolve": {
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/connections:resolve",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Resolves connections details for a given connector. An internal method called by a connector to find connections to connect to.",
                  "parameters": {
                    "pageSize": {
                      "description": "Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The resource name of the connection location using the form: `projects/{project_id}/locations/{location_id}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "connectorId": {
                      "location": "query",
                      "description": "Required. BeyondCorp Connector name of the connector associated with those connections using the form: `projects/{project_id}/locations/{location_id}/connectors/{connector_id}`",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The next_page_token value returned from a previous ResolveConnectionsResponse, if any."
                    }
                  },
                  "id": "beyondcorp.projects.locations.connections.resolve",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ResolveConnectionsResponse"
                  },
                  "path": "v1alpha/{+parent}/connections:resolve"
                }
              }
            },
            "insights": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaListInsightsResponse"
                  },
                  "id": "beyondcorp.projects.locations.insights.list",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/insights",
                  "httpMethod": "GET",
                  "path": "v1alpha/{+parent}/insights",
                  "parameters": {
                    "pageToken": {
                      "description": "Optional. A token identifying a page of results the server should return.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The resource name of InsightMetadata using the form: `organizations/{organization_id}/locations/{location}` `projects/{project_id}/locations/{location_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. Filter expression to restrict the insights returned. Supported filter fields: * `type` * `category` * `subCategory` Examples: * \"category = application AND type = count\" * \"category = application AND subCategory = iap\" * \"type = status\" Allowed values: * type: [count, latency, status, list] * category: [application, device, request, security] * subCategory: [iap, webprotect] NOTE: Only equality based comparison is allowed. Only `AND` conjunction is allowed. NOTE: The 'AND' in the filter field needs to be in capital letters only. NOTE: Just filtering on `subCategory` is not allowed. It should be passed in with the parent `category` too. (These expressions are based on the filter language described at https://google.aip.dev/160).",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default. NOTE: Default page size is 50.",
                      "format": "int32",
                      "location": "query"
                    },
                    "view": {
                      "type": "string",
                      "location": "query",
                      "enum": [
                        "INSIGHT_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "description": "Required. List only metadata or full data.",
                      "enumDescriptions": [
                        "The default / unset value. The API will default to the BASIC view.",
                        "Include basic metadata about the insight, but not the insight data. This is the default value (for both ListInsights and GetInsight).",
                        "Include everything."
                      ]
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Hint for how to order the results. This is currently ignored."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists for all the available insights that could be fetched from the system. Allows to filter using category. Setting the `view` to `BASIC` will let you iterate over the list of insight metadatas.",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "configuredInsight": {
                  "id": "beyondcorp.projects.locations.insights.configuredInsight",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "location": "query"
                    },
                    "customGrouping.fieldFilter": {
                      "description": "Optional. Filterable parameters to be added to the grouping clause. Available fields could be fetched by calling insight list and get APIs in `BASIC` view. `=` is the only comparison operator supported. `AND` is the only logical operator supported. Usage: field_filter=\"fieldName1=fieldVal1 AND fieldName2=fieldVal2\". NOTE: Only `AND` conditions are allowed. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for the filtering the corresponding fields in this filter field. (These expressions are based on the filter language described at https://google.aip.dev/160).",
                      "type": "string",
                      "location": "query"
                    },
                    "insight": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/insights/[^/]+$",
                      "location": "path",
                      "description": "Required. The resource name of the insight using the form: `organizations/{organization_id}/locations/{location_id}/insights/{insight_id}` `projects/{project_id}/locations/{location_id}/insights/{insight_id}`.",
                      "required": true
                    },
                    "aggregation": {
                      "type": "string",
                      "enum": [
                        "AGGREGATION_UNSPECIFIED",
                        "HOURLY",
                        "DAILY",
                        "WEEKLY",
                        "MONTHLY",
                        "CUSTOM_DATE_RANGE"
                      ],
                      "description": "Required. Aggregation type. Available aggregation could be fetched by calling insight list and get APIs in `BASIC` view.",
                      "location": "query",
                      "enumDescriptions": [
                        "Unspecified.",
                        "Insight should be aggregated at hourly level.",
                        "Insight should be aggregated at daily level.",
                        "Insight should be aggregated at weekly level.",
                        "Insight should be aggregated at monthly level.",
                        "Insight should be aggregated at the custom date range passed in as the start and end time in the request."
                      ]
                    },
                    "endTime": {
                      "format": "google-datetime",
                      "type": "string",
                      "location": "query",
                      "description": "Required. Ending time for the duration for which insight is to be pulled."
                    },
                    "pageToken": {
                      "description": "Optional. Used to fetch the page represented by the token. Fetches the first page when not set.",
                      "type": "string",
                      "location": "query"
                    },
                    "customGrouping.groupFields": {
                      "type": "string",
                      "repeated": true,
                      "description": "Required. Fields to be used for grouping. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for declaring the fields to be grouped-by here.",
                      "location": "query"
                    },
                    "startTime": {
                      "format": "google-datetime",
                      "type": "string",
                      "description": "Required. Starting time for the duration for which insight is to be pulled.",
                      "location": "query"
                    },
                    "group": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Group id of the available groupings for the insight. Available groupings could be fetched by calling insight list and get APIs in `BASIC` view."
                    },
                    "fieldFilter": {
                      "type": "string",
                      "description": "Optional. Other filterable/configurable parameters as applicable to the selected insight. Available fields could be fetched by calling insight list and get APIs in `BASIC` view. `=` is the only comparison operator supported. `AND` is the only logical operator supported. Usage: field_filter=\"fieldName1=fieldVal1 AND fieldName2=fieldVal2\". NOTE: Only `AND` conditions are allowed. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for the filtering the corresponding fields in this filter field. (These expressions are based on the filter language described at https://google.aip.dev/160).",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "insight"
                  ],
                  "path": "v1alpha/{+insight}:configuredInsight",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/insights/{insightsId}:configuredInsight",
                  "httpMethod": "GET",
                  "description": "Gets the value for a selected particular insight based on the provided filters. Use the organization level path for fetching at org level and project level path for fetching the insight value specific to a particular project.",
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaConfiguredInsightResponse"
                  }
                },
                "get": {
                  "id": "beyondcorp.projects.locations.insights.get",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/insights/[^/]+$",
                      "description": "Required. The resource name of the insight using the form: `organizations/{organization_id}/locations/{location_id}/insights/{insight_id}` `projects/{project_id}/locations/{location_id}/insights/{insight_id}`"
                    },
                    "view": {
                      "enum": [
                        "INSIGHT_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "enumDescriptions": [
                        "The default / unset value. The API will default to the BASIC view.",
                        "Include basic metadata about the insight, but not the insight data. This is the default value (for both ListInsights and GetInsight).",
                        "Include everything."
                      ],
                      "type": "string",
                      "description": "Required. Metadata only or full data view.",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the value for a selected particular insight with default configuration. The default aggregation level is 'DAILY' and no grouping will be applied or default grouping if applicable. The data will be returned for recent 7 days starting the day before. The insight data size will be limited to 50 rows. Use the organization level path for fetching at org level and project level path for fetching the insight value specific to a particular project. Setting the `view` to `BASIC` will only return the metadata for the insight.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight"
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/insights/{insightsId}",
                  "path": "v1alpha/{+name}",
                  "httpMethod": "GET"
                }
              }
            },
            "appConnections": {
              "methods": {
                "testIamPermissions": {
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnections/{appConnectionsId}:testIamPermissions",
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true
                    }
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "path": "v1alpha/{+resource}:testIamPermissions",
                  "id": "beyondcorp.projects.locations.appConnections.testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  }
                },
                "setIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "beyondcorp.projects.locations.appConnections.setIamPolicy",
                  "path": "v1alpha/{+resource}:setIamPolicy",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "httpMethod": "POST",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnections/{appConnectionsId}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  }
                },
                "delete": {
                  "path": "v1alpha/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "beyondcorp.projects.locations.appConnections.delete",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "validateOnly": {
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$",
                      "description": "Required. BeyondCorp Connector name using the form: `projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}`",
                      "location": "path"
                    }
                  },
                  "httpMethod": "DELETE",
                  "description": "Deletes a single AppConnection.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnections/{appConnectionsId}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "getIamPolicy": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1alpha/{+resource}:getIamPolicy",
                  "id": "beyondcorp.projects.locations.appConnections.getIamPolicy",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnections/{appConnectionsId}:getIamPolicy"
                },
                "get": {
                  "id": "beyondcorp.projects.locations.appConnections.get",
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnection"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. BeyondCorp AppConnection name using the form: `projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}`"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnections/{appConnectionsId}",
                  "description": "Gets details of a single AppConnection.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha/{+name}"
                },
                "list": {
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnections",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The resource name of the AppConnection location using the form: `projects/{project_id}/locations/{location_id}`"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The next_page_token value returned from a previous ListAppConnectionsRequest, if any."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A filter specifying constraints of a list operation."
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried."
                    },
                    "orderBy": {
                      "description": "Optional. Specifies the ordering of results. See [Sorting order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha/{+parent}/appConnections",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "beyondcorp.projects.locations.appConnections.list",
                  "description": "Lists AppConnections in a given project and location.",
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectionsV1alphaListAppConnectionsResponse"
                  }
                },
                "resolve": {
                  "path": "v1alpha/{+parent}/appConnections:resolve",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "beyondcorp.projects.locations.appConnections.resolve",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnections:resolve",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectionsV1alphaResolveAppConnectionsResponse"
                  },
                  "description": "Resolves AppConnections details for a given AppConnector. An internal method called by a connector to find AppConnections to connect to.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The resource name of the AppConnection location using the form: `projects/{project_id}/locations/{location_id}`",
                      "type": "string",
                      "required": true
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token value returned from a previous ResolveAppConnectionsResponse, if any.",
                      "type": "string",
                      "location": "query"
                    },
                    "appConnectorId": {
                      "location": "query",
                      "description": "Required. BeyondCorp Connector name of the connector associated with those AppConnections using the form: `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "patch": {
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnections/{appConnectionsId}",
                  "id": "beyondcorp.projects.locations.appConnections.patch",
                  "request": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnection"
                  },
                  "path": "v1alpha/{+name}",
                  "description": "Updates the parameters of a single AppConnection.",
                  "parameters": {
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way."
                    },
                    "name": {
                      "description": "Required. Unique resource name of the AppConnection. The name is ignored when creating a AppConnection.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Mask of fields to update. At least one path must be supplied in this field. The elements of the repeated paths field may only include these fields from [BeyondCorp.AppConnection]: * `labels` * `display_name` * `application_endpoint` * `connectors`",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "allowMissing": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. If set as true, will create the resource if it is not found."
                    }
                  },
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The resource project name of the AppConnection location using the form: `projects/{project_id}/locations/{location_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "appConnectionId": {
                      "type": "string",
                      "description": "Optional. User-settable AppConnection resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.",
                      "location": "query"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnections",
                  "request": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnection"
                  },
                  "path": "v1alpha/{+parent}/appConnections",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "beyondcorp.projects.locations.appConnections.create",
                  "description": "Creates a new AppConnection in a given project and location."
                }
              }
            },
            "applications": {
              "methods": {
                "getIamPolicy": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/applications/[^/]+$",
                      "required": true
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}:getIamPolicy",
                  "id": "beyondcorp.projects.locations.applications.getIamPolicy",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "path": "v1alpha/{+resource}:getIamPolicy"
                },
                "setIamPolicy": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/applications/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "beyondcorp.projects.locations.applications.setIamPolicy",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}:setIamPolicy",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "path": "v1alpha/{+resource}:setIamPolicy"
                },
                "testIamPermissions": {
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "id": "beyondcorp.projects.locations.applications.testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "path": "v1alpha/{+resource}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/applications/[^/]+$",
                      "location": "path"
                    }
                  }
                }
              }
            },
            "netConnections": {
              "methods": {
                "setIamPolicy": {
                  "path": "v1alpha/{+resource}:setIamPolicy",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/netConnections/{netConnectionsId}:setIamPolicy",
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "id": "beyondcorp.projects.locations.netConnections.setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/netConnections/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getIamPolicy": {
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "path": "v1alpha/{+resource}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "id": "beyondcorp.projects.locations.netConnections.getIamPolicy",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/netConnections/{netConnectionsId}:getIamPolicy",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/netConnections/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    }
                  }
                },
                "testIamPermissions": {
                  "id": "beyondcorp.projects.locations.netConnections.testIamPermissions",
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/netConnections/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/netConnections/{netConnectionsId}:testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha/{+resource}:testIamPermissions"
                }
              }
            },
            "clientConnectorServices": {
              "methods": {
                "testIamPermissions": {
                  "httpMethod": "POST",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/clientConnectorServices/{clientConnectorServicesId}:testIamPermissions",
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "id": "beyondcorp.projects.locations.clientConnectorServices.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha/{+resource}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clientConnectorServices/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  }
                },
                "setIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "id": "beyondcorp.projects.locations.clientConnectorServices.setIamPolicy",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/clientConnectorServices/{clientConnectorServicesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "path": "v1alpha/{+resource}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/clientConnectorServices/[^/]+$"
                    }
                  }
                },
                "getIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer"
                    },
                    "resource": {
                      "location": "path",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clientConnectorServices/[^/]+$"
                    }
                  },
                  "path": "v1alpha/{+resource}:getIamPolicy",
                  "httpMethod": "GET",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/clientConnectorServices/{clientConnectorServicesId}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "beyondcorp.projects.locations.clientConnectorServices.getIamPolicy",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                }
              }
            },
            "appConnectors": {
              "methods": {
                "resolveInstanceConfig": {
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}:resolveInstanceConfig",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectorsV1alphaResolveInstanceConfigResponse"
                  },
                  "parameters": {
                    "appConnector": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. BeyondCorp AppConnector name using the form: `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$"
                    }
                  },
                  "path": "v1alpha/{+appConnector}:resolveInstanceConfig",
                  "parameterOrder": [
                    "appConnector"
                  ],
                  "id": "beyondcorp.projects.locations.appConnectors.resolveInstanceConfig",
                  "description": "Gets instance configuration for a given AppConnector. An internal method called by a AppConnector to get its container config.",
                  "httpMethod": "GET"
                },
                "testIamPermissions": {
                  "path": "v1alpha/{+resource}:testIamPermissions",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "id": "beyondcorp.projects.locations.appConnectors.testIamPermissions"
                },
                "setIamPolicy": {
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}:setIamPolicy",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "id": "beyondcorp.projects.locations.appConnectors.setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "httpMethod": "POST",
                  "path": "v1alpha/{+resource}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$",
                      "required": true
                    }
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists AppConnectors in a given project and location.",
                  "parameters": {
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Specifies the ordering of results. See [Sorting order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information."
                    },
                    "filter": {
                      "type": "string",
                      "description": "Optional. A filter specifying constraints of a list operation.",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.",
                      "type": "integer"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The resource name of the AppConnector location using the form: `projects/{project_id}/locations/{location_id}`",
                      "required": true
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The next_page_token value returned from a previous ListAppConnectorsRequest, if any."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectorsV1alphaListAppConnectorsResponse"
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnectors",
                  "path": "v1alpha/{+parent}/appConnectors",
                  "id": "beyondcorp.projects.locations.appConnectors.list"
                },
                "create": {
                  "request": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector"
                  },
                  "httpMethod": "POST",
                  "description": "Creates a new AppConnector in a given project and location.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "beyondcorp.projects.locations.appConnectors.create",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The resource project name of the AppConnector location using the form: `projects/{project_id}/locations/{location_id}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "appConnectorId": {
                      "description": "Optional. User-settable AppConnector resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnectors",
                  "path": "v1alpha/{+parent}/appConnectors"
                },
                "get": {
                  "httpMethod": "GET",
                  "id": "beyondcorp.projects.locations.appConnectors.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$",
                      "description": "Required. BeyondCorp AppConnector name using the form: `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha/{+name}",
                  "description": "Gets details of a single AppConnector.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}"
                },
                "getIamPolicy": {
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query"
                    },
                    "resource": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "beyondcorp.projects.locations.appConnectors.getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}:getIamPolicy",
                  "path": "v1alpha/{+resource}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  }
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "validateOnly": {
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$",
                      "location": "path",
                      "description": "Required. Unique resource name of the AppConnector. The name is ignored when creating a AppConnector.",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "updateMask": {
                      "description": "Required. Mask of fields to update. At least one path must be supplied in this field. The elements of the repeated paths field may only include these fields from [BeyondCorp.AppConnector]: * `labels` * `display_name`",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Updates the parameters of a single AppConnector.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "beyondcorp.projects.locations.appConnectors.patch",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}",
                  "path": "v1alpha/{+name}",
                  "httpMethod": "PATCH"
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a single AppConnector.",
                  "httpMethod": "DELETE",
                  "id": "beyondcorp.projects.locations.appConnectors.delete",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "validateOnly": {
                      "location": "query",
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Required. BeyondCorp AppConnector name using the form: `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}"
                },
                "reportStatus": {
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appConnectors/{appConnectorsId}:reportStatus",
                  "path": "v1alpha/{+appConnector}:reportStatus",
                  "parameterOrder": [
                    "appConnector"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudBeyondcorpAppconnectorsV1alphaReportStatusRequest"
                  },
                  "parameters": {
                    "appConnector": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$",
                      "required": true,
                      "description": "Required. BeyondCorp Connector name using the form: `projects/{project_id}/locations/{location_id}/connectors/{connector}`",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "id": "beyondcorp.projects.locations.appConnectors.reportStatus",
                  "description": "Report status for a given connector.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                }
              }
            },
            "appGateways": {
              "methods": {
                "get": {
                  "response": {
                    "$ref": "AppGateway"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$",
                      "type": "string",
                      "description": "Required. BeyondCorp AppGateway name using the form: `projects/{project_id}/locations/{location_id}/appGateways/{app_gateway_id}`",
                      "location": "path",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha/{+name}",
                  "id": "beyondcorp.projects.locations.appGateways.get",
                  "description": "Gets details of a single AppGateway.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appGateways/{appGatewaysId}",
                  "httpMethod": "GET"
                },
                "getIamPolicy": {
                  "path": "v1alpha/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appGateways/{appGatewaysId}:getIamPolicy",
                  "httpMethod": "GET",
                  "id": "beyondcorp.projects.locations.appGateways.getIamPolicy",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer"
                    },
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$"
                    }
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "id": "beyondcorp.projects.locations.appGateways.create",
                  "path": "v1alpha/{+parent}/appGateways",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource project name of the AppGateway location using the form: `projects/{project_id}/locations/{location_id}`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "appGatewayId": {
                      "description": "Optional. User-settable AppGateway resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.",
                      "type": "string",
                      "location": "query"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "validateOnly": {
                      "location": "query",
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "type": "boolean"
                    }
                  },
                  "request": {
                    "$ref": "AppGateway"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Creates a new AppGateway in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appGateways"
                },
                "delete": {
                  "path": "v1alpha/{+name}",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appGateways/{appGatewaysId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. BeyondCorp AppGateway name using the form: `projects/{project_id}/locations/{location_id}/appGateways/{app_gateway_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
                      "location": "query"
                    }
                  },
                  "id": "beyondcorp.projects.locations.appGateways.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a single AppGateway."
                },
                "testIamPermissions": {
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "id": "beyondcorp.projects.locations.appGateways.testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appGateways/{appGatewaysId}:testIamPermissions",
                  "path": "v1alpha/{+resource}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "list": {
                  "id": "beyondcorp.projects.locations.appGateways.list",
                  "description": "Lists AppGateways in a given project and location.",
                  "path": "v1alpha/{+parent}/appGateways",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Specifies the ordering of results. See [Sorting order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Optional. The next_page_token value returned from a previous ListAppGatewaysRequest, if any.",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The resource name of the AppGateway location using the form: `projects/{project_id}/locations/{location_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.",
                      "location": "query",
                      "type": "integer"
                    },
                    "filter": {
                      "type": "string",
                      "description": "Optional. A filter specifying constraints of a list operation.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appGateways",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListAppGatewaysResponse"
                  }
                },
                "setIamPolicy": {
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "httpMethod": "POST",
                  "id": "beyondcorp.projects.locations.appGateways.setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1alpha/{+resource}:setIamPolicy",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/appGateways/{appGatewaysId}:setIamPolicy",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  }
                }
              }
            },
            "clientGateways": {
              "methods": {
                "setIamPolicy": {
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/clientGateways/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/clientGateways/{clientGatewaysId}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "beyondcorp.projects.locations.clientGateways.setIamPolicy",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "path": "v1alpha/{+resource}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "beyondcorp.projects.locations.clientGateways.getIamPolicy",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer"
                    },
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/clientGateways/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/clientGateways/{clientGatewaysId}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha/{+resource}:getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clientGateways/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "id": "beyondcorp.projects.locations.clientGateways.testIamPermissions",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/clientGateways/{clientGatewaysId}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "path": "v1alpha/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "schemas": {
    "GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata": {
      "type": "object",
      "properties": {
        "internalTenantId": {
          "type": "string",
          "description": "Optional. UUID used by the Partner to refer to the PartnerTenant in their internal systems."
        },
        "partnerTenantId": {
          "description": "Optional. UUID used by the Partner to refer to the PartnerTenant in their internal systems.",
          "type": "string"
        }
      },
      "description": "Metadata associated with PartnerTenant and is provided by the Partner.",
      "id": "GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata"
    },
    "ReportStatusRequest": {
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        },
        "resourceInfo": {
          "description": "Required. Resource info of the connector.",
          "$ref": "ResourceInfo"
        },
        "validateOnly": {
          "type": "boolean",
          "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way."
        }
      },
      "description": "Request report the connector status.",
      "type": "object",
      "id": "ReportStatusRequest"
    },
    "GoogleCloudBeyondcorpAppconnectorsV1ContainerHealthDetails": {
      "type": "object",
      "properties": {
        "extendedStatus": {
          "description": "The extended status. Such as ExitCode, StartedAt, FinishedAt, etc.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "expectedConfigVersion": {
          "type": "string",
          "description": "The version of the expected config."
        },
        "currentConfigVersion": {
          "type": "string",
          "description": "The version of the current config."
        },
        "errorMsg": {
          "type": "string",
          "description": "The latest error message."
        }
      },
      "description": "ContainerHealthDetails reflects the health details of a container.",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1ContainerHealthDetails"
    },
    "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaRowFieldVal": {
      "type": "object",
      "description": "Column or key value pair from the request as part of key to use in query or a single pair of the fetch response.",
      "properties": {
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the field."
        },
        "filterAlias": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Field name to be used in filter while requesting configured insight filtered on this field."
        },
        "id": {
          "readOnly": true,
          "description": "Output only. Field id.",
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "Output only. Value of the field in string format. Acceptable values are strings or numbers.",
          "readOnly": true
        }
      },
      "id": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaRowFieldVal"
    },
    "GoogleCloudBeyondcorpAppconnectionsV1alphaResolveAppConnectionsResponse": {
      "description": "Response message for BeyondCorp.ResolveAppConnections.",
      "id": "GoogleCloudBeyondcorpAppconnectionsV1alphaResolveAppConnectionsResponse",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "A list of locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "appConnectionDetails": {
          "type": "array",
          "description": "A list of BeyondCorp AppConnections with details in the project.",
          "items": {
            "$ref": "GoogleCloudBeyondcorpAppconnectionsV1alphaResolveAppConnectionsResponseAppConnectionDetails"
          }
        }
      },
      "type": "object"
    },
    "ListAppGatewaysResponse": {
      "description": "Response message for BeyondCorp.ListAppGateways.",
      "type": "object",
      "id": "ListAppGatewaysResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "appGateways": {
          "description": "A list of BeyondCorp AppGateways in the project.",
          "type": "array",
          "items": {
            "$ref": "AppGateway"
          }
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of locations that could not be reached."
        }
      }
    },
    "GoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse": {
      "id": "GoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse",
      "type": "object",
      "description": "Message for response to listing PartnerTenants.",
      "properties": {
        "partnerTenants": {
          "items": {
            "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant"
          },
          "type": "array",
          "description": "The list of PartnerTenant objects."
        }
      }
    },
    "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata": {
      "properties": {
        "displayName": {
          "readOnly": true,
          "description": "Output only. Common name of the insight.",
          "type": "string"
        },
        "aggregations": {
          "items": {
            "type": "string",
            "enum": [
              "AGGREGATION_UNSPECIFIED",
              "HOURLY",
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "CUSTOM_DATE_RANGE"
            ],
            "enumDescriptions": [
              "Unspecified.",
              "Insight should be aggregated at hourly level.",
              "Insight should be aggregated at daily level.",
              "Insight should be aggregated at weekly level.",
              "Insight should be aggregated at monthly level.",
              "Insight should be aggregated at the custom date range passed in as the start and end time in the request."
            ]
          },
          "readOnly": true,
          "description": "Output only. List of aggregation types available for insight.",
          "type": "array"
        },
        "subCategory": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Sub-Category of the insight."
        },
        "category": {
          "type": "string",
          "description": "Output only. Category of the insight.",
          "readOnly": true
        },
        "groups": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "Output only. List of groupings available for insight."
        },
        "fields": {
          "readOnly": true,
          "description": "Output only. List of fields available for insight.",
          "items": {
            "$ref": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField"
          },
          "type": "array"
        },
        "type": {
          "description": "Output only. Type of the insight. It is metadata describing whether the insight is a metric (e.g. count) or a report (e.g. list, status).",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata",
      "description": "Insight filters, groupings and aggregations that can be applied for the insight. Examples: aggregations, groups, field filters."
    },
    "ConnectionDetails": {
      "type": "object",
      "id": "ConnectionDetails",
      "properties": {
        "connection": {
          "$ref": "Connection",
          "description": "A BeyondCorp Connection in the project."
        },
        "recentMigVms": {
          "description": "If type=GCP_REGIONAL_MIG, contains most recent VM instances, like \"https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone_id}/instances/{instance_id}\".",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Details of the Connection."
    },
    "ApplicationEndpoint": {
      "description": "ApplicationEndpoint represents a remote application endpoint.",
      "id": "ApplicationEndpoint",
      "type": "object",
      "properties": {
        "port": {
          "format": "int32",
          "type": "integer",
          "description": "Required. Port of the remote application endpoint."
        },
        "host": {
          "description": "Required. Hostname or IP address of the remote application endpoint.",
          "type": "string"
        }
      }
    },
    "GoogleCloudBeyondcorpAppgatewaysV1AppGatewayOperationMetadata": {
      "properties": {
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation."
        },
        "requestedCancellation": {
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "statusMessage": {
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "apiVersion": {
          "type": "string",
          "description": "Output only. API version used to start the operation.",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "GoogleCloudBeyondcorpAppgatewaysV1AppGatewayOperationMetadata",
      "description": "Represents the metadata of the long-running operation."
    },
    "GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig": {
      "type": "object",
      "properties": {
        "stableImage": {
          "type": "string",
          "description": "The stable image that the remote agent will fallback to if the target image fails. Format would be a gcr image path, e.g.: gcr.io/PROJECT-ID/my-image:tag1"
        },
        "targetImage": {
          "description": "The initial image the remote agent will attempt to run for the control plane. Format would be a gcr image path, e.g.: gcr.io/PROJECT-ID/my-image:tag1",
          "type": "string"
        }
      },
      "description": "ImageConfig defines the control plane images to run.",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig"
    },
    "GoogleCloudBeyondcorpAppconnectionsV1AppConnectionOperationMetadata": {
      "id": "GoogleCloudBeyondcorpAppconnectionsV1AppConnectionOperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        },
        "requestedCancellation": {
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true
        },
        "apiVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. API version used to start the operation."
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation."
        },
        "target": {
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "GoogleIamV1AuditConfig": {
      "properties": {
        "auditLogConfigs": {
          "items": {
            "$ref": "GoogleIamV1AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission.",
          "type": "array"
        },
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        }
      },
      "type": "object",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "id": "GoogleIamV1AuditConfig"
    },
    "NotificationConfig": {
      "properties": {
        "pubsubNotification": {
          "$ref": "CloudPubSubNotificationConfig",
          "description": "Pub/Sub topic for Connector to subscribe and receive notifications from `projects/{project}/topics/{pubsub_topic}`"
        }
      },
      "id": "NotificationConfig",
      "description": "NotificationConfig defines the mechanisms to notify instance agent.",
      "type": "object"
    },
    "AppGateway": {
      "properties": {
        "uri": {
          "description": "Output only. Server-defined URI for this resource.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "Optional. An arbitrary user-provided name for the AppGateway. Cannot exceed 64 characters.",
          "type": "string"
        },
        "labels": {
          "description": "Optional. Resource labels to represent user provided metadata.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "Required. Unique resource name of the AppGateway. The name is ignored when creating an AppGateway."
        },
        "allocatedConnections": {
          "type": "array",
          "description": "Output only. A list of connections allocated for the Gateway",
          "items": {
            "$ref": "AllocatedConnection"
          },
          "readOnly": true
        },
        "uid": {
          "description": "Output only. A unique identifier for the instance generated by the system.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "UPDATING",
            "DELETING",
            "DOWN"
          ],
          "description": "Output only. The current state of the AppGateway.",
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "AppGateway is being created.",
            "AppGateway has been created.",
            "AppGateway's configuration is being updated.",
            "AppGateway is being deleted.",
            "AppGateway is down and may be restored in the future. This happens when CCFE sends ProjectState = OFF."
          ]
        },
        "updateTime": {
          "description": "Output only. Timestamp when the resource was last modified.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. Timestamp when the resource was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "hostType": {
          "type": "string",
          "description": "Required. The type of hosting used by the AppGateway.",
          "enum": [
            "HOST_TYPE_UNSPECIFIED",
            "GCP_REGIONAL_MIG"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "AppGateway hosted in a GCP regional managed instance group."
          ]
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "TCP_PROXY"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "TCP Proxy based BeyondCorp Connection. API will default to this if unset."
          ],
          "description": "Required. The type of network connectivity used by the AppGateway."
        }
      },
      "id": "AppGateway",
      "type": "object",
      "description": "A BeyondCorp AppGateway resource represents a BeyondCorp protected AppGateway to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected AppGateway. Multiple connectors can be authorised for a single AppGateway."
    },
    "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig": {
      "description": "The configuration that was applied to generate the result.",
      "id": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig",
      "type": "object",
      "properties": {
        "fieldFilter": {
          "type": "string",
          "description": "Output only. Filters applied.",
          "readOnly": true
        },
        "group": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Group id of the grouping applied."
        },
        "startTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Starting time for the duration for which insight was pulled.",
          "format": "google-datetime"
        },
        "customGrouping": {
          "$ref": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping",
          "readOnly": true,
          "description": "Output only. Customised grouping applied."
        },
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Ending time for the duration for which insight was pulled.",
          "type": "string"
        },
        "aggregation": {
          "readOnly": true,
          "enumDescriptions": [
            "Unspecified.",
            "Insight should be aggregated at hourly level.",
            "Insight should be aggregated at daily level.",
            "Insight should be aggregated at weekly level.",
            "Insight should be aggregated at monthly level.",
            "Insight should be aggregated at the custom date range passed in as the start and end time in the request."
          ],
          "enum": [
            "AGGREGATION_UNSPECIFIED",
            "HOURLY",
            "DAILY",
            "WEEKLY",
            "MONTHLY",
            "CUSTOM_DATE_RANGE"
          ],
          "description": "Output only. Aggregation type applied.",
          "type": "string"
        }
      }
    },
    "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfo": {
      "id": "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfo",
      "type": "object",
      "description": "PrincipalInfo represents an Identity oneof.",
      "properties": {
        "serviceAccount": {
          "description": "A GCP service account.",
          "$ref": "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfoServiceAccount"
        }
      }
    },
    "GoogleIamV1Binding": {
      "id": "GoogleIamV1Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "GoogleTypeExpr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "members": {
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        }
      }
    },
    "ConnectionOperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation."
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        }
      },
      "id": "ConnectionOperationMetadata"
    },
    "GoogleLongrunningCancelOperationRequest": {
      "id": "GoogleLongrunningCancelOperationRequest",
      "type": "object",
      "properties": {},
      "description": "The request message for Operations.CancelOperation."
    },
    "GoogleCloudBeyondcorpAppconnectorsV1alphaResolveInstanceConfigResponse": {
      "type": "object",
      "description": "Response message for BeyondCorp.ResolveInstanceConfig.",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1alphaResolveInstanceConfigResponse",
      "properties": {
        "instanceConfig": {
          "$ref": "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorInstanceConfig",
          "description": "AppConnectorInstanceConfig."
        }
      }
    },
    "Connector": {
      "id": "Connector",
      "description": "A BeyondCorp connector resource that represents an application facing component deployed proximal to and with direct access to the application instances. It is used to establish connectivity between the remote enterprise environment and GCP. It initiates connections to the applications and can proxy the data from users over the connection.",
      "type": "object",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. Timestamp when the resource was last modified.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Resource labels to represent user provided metadata."
        },
        "resourceInfo": {
          "$ref": "ResourceInfo",
          "description": "Optional. Resource info of the connector."
        },
        "principalInfo": {
          "description": "Required. Principal information about the Identity of the connector.",
          "$ref": "PrincipalInfo"
        },
        "name": {
          "description": "Required. Unique resource name of the connector. The name is ignored when creating a connector.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Timestamp when the resource was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "uid": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. A unique identifier for the instance generated by the system."
        },
        "displayName": {
          "description": "Optional. An arbitrary user-provided name for the connector. Cannot exceed 64 characters.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Connector is being created.",
            "Connector has been created.",
            "Connector's configuration is being updated.",
            "Connector is being deleted.",
            "Connector is down and may be restored in the future. This happens when CCFE sends ProjectState = OFF."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "UPDATING",
            "DELETING",
            "DOWN"
          ],
          "type": "string",
          "description": "Output only. The current state of the connector.",
          "readOnly": true
        }
      }
    },
    "GoogleRpcStatus": {
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "GoogleRpcStatus"
    },
    "GoogleIamV1Policy": {
      "type": "object",
      "properties": {
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "GoogleIamV1AuditConfig"
          },
          "type": "array"
        },
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1Binding"
          }
        },
        "etag": {
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string"
        }
      },
      "id": "GoogleIamV1Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
    },
    "ServiceAccount": {
      "id": "ServiceAccount",
      "description": "ServiceAccount represents a GCP service account.",
      "properties": {
        "email": {
          "description": "Email address of the service account.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaRow": {
      "description": "Row of the fetch response consisting of a set of entries.",
      "properties": {
        "fieldValues": {
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaRowFieldVal"
          },
          "description": "Output only. Columns/entries/key-vals in the result.",
          "type": "array"
        }
      },
      "id": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaRow",
      "type": "object"
    },
    "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField": {
      "type": "object",
      "id": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField",
      "description": "Field metadata. Commonly understandable name and description for the field. Multiple such fields constitute the Insight.",
      "properties": {
        "groupable": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Indicates whether the field can be used for grouping in custom grouping request."
        },
        "filterable": {
          "description": "Output only. Indicates whether the field can be used for filtering.",
          "type": "boolean",
          "readOnly": true
        },
        "id": {
          "readOnly": true,
          "description": "Output only. Field id for which this is the metadata.",
          "type": "string"
        },
        "description": {
          "description": "Output only. Description of the field.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the field."
        },
        "filterAlias": {
          "description": "Output only. Field name to be used in filter while requesting configured insight filtered on this field.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudBeyondcorpAppconnectorsV1alphaNotificationConfig": {
      "type": "object",
      "description": "NotificationConfig defines the mechanisms to notify instance agent.",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1alphaNotificationConfig",
      "properties": {
        "pubsubNotification": {
          "description": "Cloud Pub/Sub Configuration to receive notifications.",
          "$ref": "GoogleCloudBeyondcorpAppconnectorsV1alphaNotificationConfigCloudPubSubNotificationConfig"
        }
      }
    },
    "GoogleCloudBeyondcorpPartnerservicesV1alphaRuleSetting": {
      "type": "object",
      "description": "Message to capture settings for a BrowserDlpRule",
      "id": "GoogleCloudBeyondcorpPartnerservicesV1alphaRuleSetting",
      "properties": {
        "type": {
          "type": "string",
          "description": "Required. Immutable. The type of the Setting. ."
        },
        "value": {
          "type": "object",
          "description": "Required. The value of the Setting.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnection": {
      "description": "A BeyondCorp AppConnection resource represents a BeyondCorp protected AppConnection to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected AppConnection. Multiple connectors can be authorised for a single AppConnection.",
      "id": "GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnection",
      "properties": {
        "createTime": {
          "description": "Output only. Timestamp when the resource was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "TCP Proxy based BeyondCorp AppConnection. API will default to this if unset."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TCP_PROXY"
          ],
          "description": "Required. The type of network connectivity used by the AppConnection."
        },
        "uid": {
          "type": "string",
          "description": "Output only. A unique identifier for the instance generated by the system.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Optional. An arbitrary user-provided name for the AppConnection. Cannot exceed 64 characters."
        },
        "name": {
          "type": "string",
          "description": "Required. Unique resource name of the AppConnection. The name is ignored when creating a AppConnection."
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Timestamp when the resource was last modified."
        },
        "gateway": {
          "description": "Optional. Gateway used by the AppConnection.",
          "$ref": "GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGateway"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Resource labels to represent user provided metadata."
        },
        "connectors": {
          "type": "array",
          "description": "Optional. List of [google.cloud.beyondcorp.v1main.Connector.name] that are authorised to be associated with this AppConnection.",
          "items": {
            "type": "string"
          }
        },
        "applicationEndpoint": {
          "description": "Required. Address of the remote application endpoint for the BeyondCorp AppConnection.",
          "$ref": "GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionApplicationEndpoint"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "AppConnection is being created.",
            "AppConnection has been created.",
            "AppConnection's configuration is being updated.",
            "AppConnection is being deleted.",
            "AppConnection is down and may be restored in the future. This happens when CCFE sends ProjectState = OFF."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "UPDATING",
            "DELETING",
            "DOWN"
          ],
          "readOnly": true,
          "description": "Output only. The current state of the AppConnection."
        }
      },
      "type": "object"
    },
    "CloudSecurityZerotrustApplinkLogagentProtoLogAgentDetails": {
      "description": "LogAgentDetails reflects the details of a log agent.",
      "properties": {},
      "type": "object",
      "id": "CloudSecurityZerotrustApplinkLogagentProtoLogAgentDetails"
    },
    "GoogleCloudBeyondcorpPartnerservicesV1alphaBrowserDlpRule": {
      "description": "Browser DLP Rule for a PartnerTenant",
      "id": "GoogleCloudBeyondcorpPartnerservicesV1alphaBrowserDlpRule",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Unique resource name. The name is ignored when creating BrowserDlpRule."
        },
        "group": {
          "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaGroup",
          "description": "Required. The group to which this Rule should be applied to."
        },
        "ruleSetting": {
          "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaRuleSetting",
          "description": "Required. The policy settings to apply."
        }
      }
    },
    "GoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo": {
      "id": "GoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo",
      "properties": {
        "serverCaCertPem": {
          "description": "Required. PEM encoded CA certificate associated with the proxy server certificate.",
          "type": "string"
        },
        "sslDecryptCaCertPem": {
          "type": "string",
          "description": "Optional. PEM encoded CA certificate associated with the certificate used by proxy server for SSL decryption."
        }
      },
      "type": "object",
      "description": "Message contains the transport layer information to verify the proxy server."
    },
    "ImageConfig": {
      "id": "ImageConfig",
      "description": "ImageConfig defines the control plane images to run.",
      "properties": {
        "stableImage": {
          "description": "The stable image that the remote agent will fallback to if the target image fails.",
          "type": "string"
        },
        "targetImage": {
          "type": "string",
          "description": "The initial image the remote agent will attempt to run for the control plane."
        }
      },
      "type": "object"
    },
    "GoogleCloudBeyondcorpPartnerservicesV1mainPartnerServiceOperationMetadata": {
      "id": "GoogleCloudBeyondcorpPartnerservicesV1mainPartnerServiceOperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the caller has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean",
          "readOnly": true
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "GoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig": {
      "description": "Proxy Configuration of a PartnerTenant.",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Timestamp when the resource was last modified."
        },
        "proxyUri": {
          "description": "Required. The URI of the proxy server.",
          "type": "string"
        },
        "routingInfo": {
          "description": "Required. Routing info to direct traffic to the proxy server.",
          "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaRoutingInfo"
        },
        "transportInfo": {
          "description": "Required. Transport layer information to verify for the proxy server.",
          "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo"
        },
        "name": {
          "description": "Output only. ProxyConfig resource name.",
          "type": "string",
          "readOnly": true
        },
        "encryptionInfo": {
          "description": "Optional. Information to encrypt JWT for the proxy server.",
          "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaEncryptionInfo"
        },
        "createTime": {
          "description": "Output only. Timestamp when the resource was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Optional. An arbitrary caller-provided name for the ProxyConfig. Cannot exceed 64 characters.",
          "type": "string"
        }
      },
      "id": "GoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig",
      "type": "object"
    },
    "Tunnelv1ProtoTunnelerInfo": {
      "description": "TunnelerInfo contains metadata about tunneler launched by connection manager.",
      "type": "object",
      "id": "Tunnelv1ProtoTunnelerInfo",
      "properties": {
        "totalRetryCount": {
          "description": "total_retry_count stores the total number of times the tunneler has been retried by tunManager.",
          "format": "uint32",
          "type": "integer"
        },
        "backoffRetryCount": {
          "type": "integer",
          "description": "backoff_retry_count stores the number of times the tunneler has been retried by tunManager for current backoff sequence. Gets reset to 0 if time difference between 2 consecutive retries exceeds backoffRetryResetTime.",
          "format": "uint32"
        },
        "latestErr": {
          "$ref": "Tunnelv1ProtoTunnelerError",
          "description": "latest_err stores the Error for the latest tunneler failure. Gets reset everytime the tunneler is retried by tunManager."
        },
        "latestRetryTime": {
          "description": "latest_retry_time stores the time when the tunneler was last restarted.",
          "format": "google-datetime",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "id is the unique id of a tunneler."
        }
      }
    },
    "Tunnelv1ProtoTunnelerError": {
      "properties": {
        "err": {
          "description": "Original raw error",
          "type": "string"
        },
        "retryable": {
          "description": "retryable isn't used for now, but we may want to reuse it in the future.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "Tunnelv1ProtoTunnelerError",
      "description": "TunnelerError is an error proto for errors returned by the connection manager."
    },
    "GoogleCloudLocationLocation": {
      "type": "object",
      "description": "A resource that represents a Google Cloud location.",
      "id": "GoogleCloudLocationLocation",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        }
      }
    },
    "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorInstanceConfig": {
      "description": "AppConnectorInstanceConfig defines the instance config of a AppConnector.",
      "type": "object",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorInstanceConfig",
      "properties": {
        "instanceConfig": {
          "description": "The SLM instance agent configuration.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "notificationConfig": {
          "description": "NotificationConfig defines the notification mechanism that the remote instance should subscribe to in order to receive notification.",
          "$ref": "GoogleCloudBeyondcorpAppconnectorsV1alphaNotificationConfig"
        },
        "imageConfig": {
          "description": "ImageConfig defines the GCR images to run for the remote agent's control plane.",
          "$ref": "GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig"
        },
        "sequenceNumber": {
          "description": "Required. A monotonically increasing number generated and maintained by the API provider. Every time a config changes in the backend, the sequenceNumber should be bumped up to reflect the change.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerServiceOperationMetadata": {
      "type": "object",
      "description": "Represents the metadata of the long-running operation.",
      "id": "GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerServiceOperationMetadata",
      "properties": {
        "requestedCancellation": {
          "readOnly": true,
          "description": "Output only. Identifies whether the caller has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        },
        "verb": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "statusMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any."
        }
      }
    },
    "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfoServiceAccount": {
      "id": "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfoServiceAccount",
      "description": "ServiceAccount represents a GCP service account.",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address of the service account."
        }
      }
    },
    "GoogleCloudBeyondcorpAppconnectorsV1alphaRemoteAgentDetails": {
      "type": "object",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1alphaRemoteAgentDetails",
      "properties": {},
      "description": "RemoteAgentDetails reflects the details of a remote agent."
    },
    "GoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse": {
      "type": "object",
      "description": "Message for response to listing ProxyConfigs.",
      "properties": {
        "proxyConfigs": {
          "items": {
            "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig"
          },
          "type": "array",
          "description": "The list of ProxyConfig objects."
        }
      },
      "id": "GoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse"
    },
    "ListConnectionsResponse": {
      "description": "Response message for BeyondCorp.ListConnections.",
      "id": "ListConnectionsResponse",
      "type": "object",
      "properties": {
        "connections": {
          "description": "A list of BeyondCorp Connections in the project.",
          "items": {
            "$ref": "Connection"
          },
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "description": "A list of locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      }
    },
    "CloudSecurityZerotrustApplinkAppConnectorProtoConnectorDetails": {
      "properties": {},
      "type": "object",
      "id": "CloudSecurityZerotrustApplinkAppConnectorProtoConnectorDetails",
      "description": "ConnectorDetails reflects the details of a connector."
    },
    "AppGatewayOperationMetadata": {
      "type": "object",
      "properties": {
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        },
        "statusMessage": {
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        },
        "apiVersion": {
          "type": "string",
          "description": "Output only. API version used to start the operation.",
          "readOnly": true
        }
      },
      "id": "AppGatewayOperationMetadata",
      "description": "Represents the metadata of the long-running operation."
    },
    "GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant": {
      "description": "Information about a BeyoncCorp Enterprise PartnerTenant.",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. Timestamp when the resource was last modified.",
          "format": "google-datetime",
          "readOnly": true
        },
        "displayName": {
          "description": "Optional. An arbitrary caller-provided name for the PartnerTenant. Cannot exceed 64 characters.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Unique resource name of the PartnerTenant. The name is ignored when creating PartnerTenant."
        },
        "group": {
          "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaGroup",
          "description": "Optional. Group information for the users enabled to use the partnerTenant. If the group information is not provided then the partnerTenant will be enabled for all users."
        },
        "partnerMetadata": {
          "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata",
          "description": "Optional. Metadata provided by the Partner associated with PartnerTenant."
        },
        "createTime": {
          "description": "Output only. Timestamp when the resource was created.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        }
      },
      "id": "GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant",
      "type": "object"
    },
    "GoogleCloudBeyondcorpPartnerservicesV1alphaGroup": {
      "id": "GoogleCloudBeyondcorpPartnerservicesV1alphaGroup",
      "description": "Message to capture group information",
      "properties": {
        "email": {
          "type": "string",
          "description": "The group email id"
        },
        "id": {
          "type": "string",
          "description": "Google group id"
        }
      },
      "type": "object"
    },
    "GoogleTypeExpr": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        }
      },
      "type": "object",
      "id": "GoogleTypeExpr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
    },
    "ContainerHealthDetails": {
      "description": "ContainerHealthDetails reflects the health details of a container.",
      "type": "object",
      "properties": {
        "extendedStatus": {
          "description": "The extended status. Such as ExitCode, StartedAt, FinishedAt, etc.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "expectedConfigVersion": {
          "description": "The version of the expected config.",
          "type": "string"
        },
        "errorMsg": {
          "type": "string",
          "description": "The latest error message."
        },
        "currentConfigVersion": {
          "description": "The version of the current config.",
          "type": "string"
        }
      },
      "id": "ContainerHealthDetails"
    },
    "GoogleCloudLocationListLocationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "items": {
            "$ref": "GoogleCloudLocationLocation"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        }
      },
      "id": "GoogleCloudLocationListLocationsResponse",
      "description": "The response message for Locations.ListLocations."
    },
    "GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionApplicationEndpoint": {
      "id": "GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionApplicationEndpoint",
      "properties": {
        "port": {
          "type": "integer",
          "description": "Required. Port of the remote application endpoint.",
          "format": "int32"
        },
        "host": {
          "description": "Required. Hostname or IP address of the remote application endpoint.",
          "type": "string"
        }
      },
      "description": "ApplicationEndpoint represents a remote application endpoint.",
      "type": "object"
    },
    "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaListInsightsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Output only. Next page token to be fetched. Set to empty or NULL if there are no more pages available.",
          "readOnly": true,
          "type": "string"
        },
        "insights": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. List of all insights.",
          "items": {
            "$ref": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight"
          }
        }
      },
      "description": "The response for the list of insights.",
      "id": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaListInsightsResponse",
      "type": "object"
    },
    "Connection": {
      "description": "A BeyondCorp Connection resource represents a BeyondCorp protected connection to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected connection. Multiple connectors can be authorised for a single Connection.",
      "id": "Connection",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "TCP Proxy based BeyondCorp Connection. API will default to this if unset."
          ],
          "description": "Required. The type of network connectivity used by the connection.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "TCP_PROXY"
          ],
          "type": "string"
        },
        "uid": {
          "description": "Output only. A unique identifier for the instance generated by the system.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Required. Unique resource name of the connection. The name is ignored when creating a connection."
        },
        "updateTime": {
          "description": "Output only. Timestamp when the resource was last modified.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Timestamp when the resource was created.",
          "readOnly": true
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "UPDATING",
            "DELETING",
            "DOWN"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Connection is being created.",
            "Connection has been created.",
            "Connection's configuration is being updated.",
            "Connection is being deleted.",
            "Connection is down and may be restored in the future. This happens when CCFE sends ProjectState = OFF."
          ],
          "type": "string",
          "description": "Output only. The current state of the connection.",
          "readOnly": true
        },
        "gateway": {
          "$ref": "Gateway",
          "description": "Optional. Gateway used by the connection."
        },
        "displayName": {
          "type": "string",
          "description": "Optional. An arbitrary user-provided name for the connection. Cannot exceed 64 characters."
        },
        "applicationEndpoint": {
          "$ref": "ApplicationEndpoint",
          "description": "Required. Address of the remote application endpoint for the BeyondCorp Connection."
        },
        "connectors": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. List of [google.cloud.beyondcorp.v1main.Connector.name] that are authorised to be associated with this Connection."
        },
        "labels": {
          "type": "object",
          "description": "Optional. Resource labels to represent user provided metadata.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector": {
      "properties": {
        "uid": {
          "description": "Output only. A unique identifier for the instance generated by the system.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Optional. An arbitrary user-provided name for the AppConnector. Cannot exceed 64 characters."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Timestamp when the resource was created.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Required. Unique resource name of the AppConnector. The name is ignored when creating a AppConnector."
        },
        "updateTime": {
          "description": "Output only. Timestamp when the resource was last modified.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "resourceInfo": {
          "$ref": "GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo",
          "description": "Optional. Resource info of the connector."
        },
        "labels": {
          "description": "Optional. Resource labels to represent user provided metadata.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "AppConnector is being created.",
            "AppConnector has been created.",
            "AppConnector's configuration is being updated.",
            "AppConnector is being deleted.",
            "AppConnector is down and may be restored in the future. This happens when CCFE sends ProjectState = OFF."
          ],
          "readOnly": true,
          "description": "Output only. The current state of the AppConnector.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "UPDATING",
            "DELETING",
            "DOWN"
          ]
        },
        "principalInfo": {
          "description": "Required. Principal information about the Identity of the AppConnector.",
          "$ref": "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfo"
        }
      },
      "description": "A BeyondCorp connector resource that represents an application facing component deployed proximal to and with direct access to the application instances. It is used to establish connectivity between the remote enterprise environment and GCP. It initiates connections to the applications and can proxy the data from users over the connection.",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector",
      "type": "object"
    },
    "Empty": {
      "type": "object",
      "properties": {},
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "CloudSecurityZerotrustApplinkAppConnectorProtoGateway": {
      "description": "Gateway represents a GCE VM Instance endpoint for use by IAP TCP.",
      "type": "object",
      "properties": {
        "zone": {
          "description": "zone represents the zone the instance belongs. It is derived from the gateway URL. For example, zone=${zone} assuming a gateway URL. https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance}",
          "type": "string"
        },
        "name": {
          "description": "name is the name of an instance running a gateway. It is the unique ID for a gateway. All gateways under the same connection have the same prefix. It is derived from the gateway URL. For example, name=${instance} assuming a gateway URL. https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance}",
          "type": "string"
        },
        "selfLink": {
          "description": "self_link is the gateway URL in the form https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance}",
          "type": "string"
        },
        "interface": {
          "type": "string",
          "description": "interface specifies the network interface of the gateway to connect to."
        },
        "project": {
          "type": "string",
          "description": "project is the tenant project the gateway belongs to. Different from the project in the connection, it is a BeyondCorpAPI internally created project to manage all the gateways. It is sharing the same network with the consumer project user owned. It is derived from the gateway URL. For example, project=${project} assuming a gateway URL. https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance}"
        },
        "port": {
          "description": "port specifies the port of the gateway for tunnel connections from the connectors.",
          "type": "integer",
          "format": "uint32"
        }
      },
      "id": "CloudSecurityZerotrustApplinkAppConnectorProtoGateway"
    },
    "GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription": {
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "INACTIVE",
            "COMPLETED"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Represents an active subscription.",
            "Represents an upcomming subscription.",
            "Represents a completed subscription."
          ],
          "description": "Output only. The current state of the subscription.",
          "type": "string"
        },
        "sku": {
          "enum": [
            "SKU_UNSPECIFIED",
            "BCE_STANDARD_SKU"
          ],
          "type": "string",
          "description": "Required. SKU of subscription.",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Represents BeyondCorp Standard SKU."
          ]
        },
        "createTime": {
          "description": "Output only. Create time of the subscription.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Required. Unique resource name of the Subscription. The name is ignored when creating a subscription."
        },
        "type": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Represents a trial subscription.",
            "Represents a paid subscription.",
            "Reresents an allowlisted subscription."
          ],
          "type": "string",
          "description": "Required. Type of subscription.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "TRIAL",
            "PAID",
            "ALLOWLIST"
          ]
        },
        "startTime": {
          "format": "google-datetime",
          "description": "Output only. Start time of the subscription.",
          "type": "string",
          "readOnly": true
        },
        "seatCount": {
          "format": "int64",
          "description": "Output only. Number of seats in the subscription.",
          "readOnly": true,
          "type": "string"
        },
        "autoRenewEnabled": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Represents that, if subscription will renew or end when the term ends."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. End time of the subscription."
        }
      },
      "id": "GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription",
      "description": "A BeyondCorp Subscription resource represents BeyondCorp Enterprise Subscription. BeyondCorp Enterprise Subscription enables BeyondCorp Enterprise permium features for an organization.",
      "type": "object"
    },
    "GoogleCloudBeyondcorpAppconnectorsV1alphaListAppConnectorsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "appConnectors": {
          "description": "A list of BeyondCorp AppConnectors in the project.",
          "items": {
            "$ref": "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector"
          },
          "type": "array"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of locations that could not be reached."
        }
      },
      "description": "Response message for BeyondCorp.ListAppConnectors.",
      "type": "object",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1alphaListAppConnectorsResponse"
    },
    "GoogleIamV1TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "id": "GoogleIamV1TestIamPermissionsRequest",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Gateway": {
      "id": "Gateway",
      "type": "object",
      "description": "Gateway represents a user facing component that serves as an entrance to enable connectivity.",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "GCP_REGIONAL_MIG"
          ],
          "type": "string",
          "description": "Required. The type of hosting used by the gateway.",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Gateway hosted in a GCP regional managed instance group."
          ]
        },
        "userPort": {
          "format": "int32",
          "readOnly": true,
          "type": "integer",
          "description": "Output only. User port reserved on the gateways for this connection, if not specified or zero, the default port is 19443."
        },
        "uri": {
          "description": "Output only. Server-defined URI for this resource.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaListSubscriptionsResponse": {
      "description": "Response message for BeyondCorp.ListSubscriptions.",
      "id": "GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaListSubscriptionsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "subscriptions": {
          "type": "array",
          "description": "A list of BeyondCorp Subscriptions in the organization.",
          "items": {
            "$ref": "GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping": {
      "id": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping",
      "properties": {
        "fieldFilter": {
          "description": "Optional. Filterable parameters to be added to the grouping clause. Available fields could be fetched by calling insight list and get APIs in `BASIC` view. `=` is the only comparison operator supported. `AND` is the only logical operator supported. Usage: field_filter=\"fieldName1=fieldVal1 AND fieldName2=fieldVal2\". NOTE: Only `AND` conditions are allowed. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for the filtering the corresponding fields in this filter field. (These expressions are based on the filter language described at https://google.aip.dev/160).",
          "type": "string"
        },
        "groupFields": {
          "description": "Required. Fields to be used for grouping. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for declaring the fields to be grouped-by here.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Customised grouping option that allows setting the group_by fields and also the filters togather for a configured insight request."
    },
    "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorOperationMetadata": {
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "Output only. API version used to start the operation.",
          "readOnly": true
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string"
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "target": {
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true
        },
        "statusMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "id": "GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorOperationMetadata",
      "type": "object",
      "description": "Represents the metadata of the long-running operation."
    },
    "CloudPubSubNotificationConfig": {
      "properties": {
        "pubsubSubscription": {
          "type": "string",
          "description": "The Pub/Sub subscription the connector uses to receive notifications."
        }
      },
      "description": "The configuration for Pub/Sub messaging for the connector.",
      "id": "CloudPubSubNotificationConfig",
      "type": "object"
    },
    "GoogleCloudBeyondcorpAppconnectorsV1alphaContainerHealthDetails": {
      "properties": {
        "errorMsg": {
          "type": "string",
          "description": "The latest error message."
        },
        "expectedConfigVersion": {
          "description": "The version of the expected config.",
          "type": "string"
        },
        "currentConfigVersion": {
          "type": "string",
          "description": "The version of the current config."
        },
        "extendedStatus": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The extended status. Such as ExitCode, StartedAt, FinishedAt, etc."
        }
      },
      "type": "object",
      "description": "ContainerHealthDetails reflects the health details of a container.",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1alphaContainerHealthDetails"
    },
    "GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGateway": {
      "id": "GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGateway",
      "description": "Gateway represents a user facing component that serves as an entrance to enable connectivity.",
      "properties": {
        "uri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server-defined URI for this resource."
        },
        "ingressPort": {
          "description": "Output only. Ingress port reserved on the gateways for this AppConnection, if not specified or zero, the default port is 19443.",
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "l7psc": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. L7 private service connection for this resource."
        },
        "type": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Gateway hosted in a GCP regional managed instance group."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "GCP_REGIONAL_MIG"
          ],
          "description": "Required. The type of hosting used by the gateway.",
          "type": "string"
        },
        "appGateway": {
          "type": "string",
          "description": "Required. AppGateway name in following format: `projects/{project_id}/locations/{location_id}/appgateways/{gateway_id}`"
        }
      },
      "type": "object"
    },
    "ConnectorInstanceConfig": {
      "id": "ConnectorInstanceConfig",
      "properties": {
        "notificationConfig": {
          "description": "NotificationConfig defines the notification mechanism that the remote instance should subscribe to in order to receive notification.",
          "$ref": "NotificationConfig"
        },
        "instanceConfig": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The SLM instance agent configuration."
        },
        "imageConfig": {
          "description": "ImageConfig defines the GCR images to run for the remote agent's control plane.",
          "$ref": "ImageConfig"
        },
        "sequenceNumber": {
          "type": "string",
          "format": "int64",
          "description": "Required. A monotonically increasing number generated and maintained by the API provider. Every time a config changes in the backend, the sequenceNumber should be bumped up to reflect the change."
        }
      },
      "type": "object",
      "description": "ConnectorInstanceConfig defines the instance config of a connector."
    },
    "AllocatedConnection": {
      "description": "Allocated connection of the AppGateway.",
      "properties": {
        "pscUri": {
          "type": "string",
          "description": "Required. The PSC uri of an allocated connection"
        },
        "ingressPort": {
          "description": "Required. The ingress port of an allocated connection",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "AllocatedConnection"
    },
    "ResourceInfo": {
      "description": "ResourceInfo represents the information/status of the associated resource.",
      "id": "ResourceInfo",
      "properties": {
        "id": {
          "type": "string",
          "description": "Required. Unique Id for the resource."
        },
        "status": {
          "description": "Overall health status. Overall status is derived based on the status of each sub level resources.",
          "enumDescriptions": [
            "Health status is unknown: not initialized or failed to retrieve.",
            "The resource is healthy.",
            "The resource is unhealthy.",
            "The resource is unresponsive.",
            "Some sub-resources are UNHEALTHY."
          ],
          "enum": [
            "HEALTH_STATUS_UNSPECIFIED",
            "HEALTHY",
            "UNHEALTHY",
            "UNRESPONSIVE",
            "DEGRADED"
          ],
          "type": "string"
        },
        "time": {
          "description": "The timestamp to collect the info. It is suggested to be set by the topmost level resource only.",
          "format": "google-datetime",
          "type": "string"
        },
        "sub": {
          "items": {
            "$ref": "ResourceInfo"
          },
          "description": "List of Info for the sub level resources.",
          "type": "array"
        },
        "resource": {
          "description": "Specific details for the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      },
      "type": "object"
    },
    "GoogleLongrunningListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "operations": {
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleCloudBeyondcorpAppconnectorsV1alphaNotificationConfigCloudPubSubNotificationConfig": {
      "description": "The configuration for Pub/Sub messaging for the AppConnector.",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1alphaNotificationConfigCloudPubSubNotificationConfig",
      "properties": {
        "pubsubSubscription": {
          "type": "string",
          "description": "The Pub/Sub subscription the AppConnector uses to receive notifications."
        }
      },
      "type": "object"
    },
    "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaConfiguredInsightResponse": {
      "id": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaConfiguredInsightResponse",
      "description": "The response for the configured insight.",
      "properties": {
        "rows": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaRow"
          },
          "description": "Output only. Result rows returned containing the required value(s) for configured insight."
        },
        "appliedConfig": {
          "$ref": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig",
          "readOnly": true,
          "description": "Output only. Applied insight config to generate the result data rows."
        },
        "nextPageToken": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Next page token to be fetched. Set to empty or NULL if there are no more pages available."
        }
      },
      "type": "object"
    },
    "GoogleCloudBeyondcorpAppconnectorsV1RemoteAgentDetails": {
      "description": "RemoteAgentDetails reflects the details of a remote agent.",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1RemoteAgentDetails",
      "properties": {},
      "type": "object"
    },
    "RemoteAgentDetails": {
      "description": "RemoteAgentDetails reflects the details of a remote agent.",
      "id": "RemoteAgentDetails",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudBeyondcorpPartnerservicesV1alphaListBrowserDlpRulesResponse": {
      "properties": {
        "browserDlpRules": {
          "description": "The list of BrowserDlpRule objects.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudBeyondcorpPartnerservicesV1alphaBrowserDlpRule"
          }
        }
      },
      "type": "object",
      "description": "Message for response to listing BrowserDlpRules.",
      "id": "GoogleCloudBeyondcorpPartnerservicesV1alphaListBrowserDlpRulesResponse"
    },
    "ResolveInstanceConfigResponse": {
      "properties": {
        "instanceConfig": {
          "$ref": "ConnectorInstanceConfig",
          "description": "ConnectorInstanceConfig."
        }
      },
      "description": "Response message for BeyondCorp.ResolveInstanceConfig.",
      "type": "object",
      "id": "ResolveInstanceConfigResponse"
    },
    "GoogleCloudBeyondcorpAppconnectionsV1alphaResolveAppConnectionsResponseAppConnectionDetails": {
      "type": "object",
      "description": "Details of the AppConnection.",
      "properties": {
        "appConnection": {
          "description": "A BeyondCorp AppConnection in the project.",
          "$ref": "GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnection"
        },
        "recentMigVms": {
          "type": "array",
          "description": "If type=GCP_REGIONAL_MIG, contains most recent VM instances, like `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone_id}/instances/{instance_id}`.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudBeyondcorpAppconnectionsV1alphaResolveAppConnectionsResponseAppConnectionDetails"
    },
    "PrincipalInfo": {
      "id": "PrincipalInfo",
      "description": "PrincipalInfo represents an Identity oneof.",
      "properties": {
        "serviceAccount": {
          "$ref": "ServiceAccount",
          "description": "A GCP service account."
        }
      },
      "type": "object"
    },
    "ConnectorOperationMetadata": {
      "id": "ConnectorOperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string"
        },
        "apiVersion": {
          "readOnly": true,
          "description": "Output only. API version used to start the operation.",
          "type": "string"
        },
        "requestedCancellation": {
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "statusMessage": {
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleIamV1AuditLogConfig": {
      "properties": {
        "exemptedMembers": {
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array"
        },
        "logType": {
          "description": "The log type that this config enables.",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string"
        }
      },
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "id": "GoogleIamV1AuditLogConfig"
    },
    "GoogleLongrunningOperation": {
      "type": "object",
      "properties": {
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        }
      },
      "id": "GoogleLongrunningOperation",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "GoogleIamV1TestIamPermissionsResponse": {
      "id": "GoogleIamV1TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
        }
      },
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object"
    },
    "GoogleCloudBeyondcorpAppconnectorsV1AppConnectorOperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1AppConnectorOperationMetadata",
      "properties": {
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "requestedCancellation": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "apiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. API version used to start the operation."
        }
      }
    },
    "GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo": {
      "properties": {
        "resource": {
          "type": "object",
          "description": "Specific details for the resource. This is for internal use only.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "id": {
          "description": "Required. Unique Id for the resource.",
          "type": "string"
        },
        "status": {
          "enumDescriptions": [
            "Health status is unknown: not initialized or failed to retrieve.",
            "The resource is healthy.",
            "The resource is unhealthy.",
            "The resource is unresponsive.",
            "Some sub-resources are UNHEALTHY."
          ],
          "description": "Overall health status. Overall status is derived based on the status of each sub level resources.",
          "type": "string",
          "enum": [
            "HEALTH_STATUS_UNSPECIFIED",
            "HEALTHY",
            "UNHEALTHY",
            "UNRESPONSIVE",
            "DEGRADED"
          ]
        },
        "sub": {
          "description": "List of Info for the sub level resources.",
          "items": {
            "$ref": "GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo"
          },
          "type": "array"
        },
        "time": {
          "type": "string",
          "format": "google-datetime",
          "description": "The timestamp to collect the info. It is suggested to be set by the topmost level resource only."
        }
      },
      "id": "GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo",
      "type": "object",
      "description": "ResourceInfo represents the information/status of an app connector resource. Such as: - remote_agent - container - runtime - appgateway - appconnector - appconnection - tunnel - logagent"
    },
    "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata",
          "readOnly": true,
          "description": "Output only. Metadata for the Insight."
        },
        "name": {
          "type": "string",
          "description": "Output only. The insight resource name. e.g. `organizations/{organization_id}/locations/{location_id}/insights/{insight_id}` OR `projects/{project_id}/locations/{location_id}/insights/{insight_id}`.",
          "readOnly": true
        },
        "rows": {
          "type": "array",
          "description": "Output only. Result rows returned containing the required value(s).",
          "items": {
            "$ref": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaRow"
          },
          "readOnly": true
        },
        "appliedConfig": {
          "$ref": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig",
          "readOnly": true,
          "description": "Output only. Applied insight config to generate the result data rows."
        }
      },
      "id": "GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight",
      "description": "The Insight object with configuration that was returned and actual list of records."
    },
    "ResolveConnectionsResponse": {
      "id": "ResolveConnectionsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "connectionDetails": {
          "description": "A list of BeyondCorp Connections with details in the project.",
          "items": {
            "$ref": "ConnectionDetails"
          },
          "type": "array"
        },
        "unreachable": {
          "description": "A list of locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Response message for BeyondCorp.ResolveConnections."
    },
    "GoogleCloudBeyondcorpPartnerservicesV1alphaEncryptionInfo": {
      "properties": {
        "encryptionSaEmail": {
          "description": "Optional. Service Account for encryption key.",
          "type": "string"
        },
        "jwk": {
          "description": "Optional. JWK in string.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudBeyondcorpPartnerservicesV1alphaEncryptionInfo",
      "description": "Message contains the JWT encryption information for the proxy server."
    },
    "GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionOperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "statusMessage": {
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string",
          "readOnly": true
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string",
          "readOnly": true
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        }
      }
    },
    "ListConnectorsResponse": {
      "type": "object",
      "description": "Response message for BeyondCorp.ListConnectors.",
      "id": "ListConnectorsResponse",
      "properties": {
        "unreachable": {
          "description": "A list of locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "connectors": {
          "description": "A list of BeyondCorp Connectors in the project.",
          "items": {
            "$ref": "Connector"
          },
          "type": "array"
        }
      }
    },
    "CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig": {
      "type": "object",
      "description": "ConnectionConfig represents a Connection Configuration object.",
      "properties": {
        "tunnelsPerGateway": {
          "type": "integer",
          "format": "uint32",
          "description": "tunnels_per_gateway reflects the number of tunnels between a connector and a gateway."
        },
        "project": {
          "description": "project represents the consumer project the connection belongs to.",
          "type": "string"
        },
        "gateway": {
          "items": {
            "$ref": "CloudSecurityZerotrustApplinkAppConnectorProtoGateway"
          },
          "type": "array",
          "description": "gateway lists all instances running a gateway in GCP. They all connect to a connector on the host."
        },
        "applicationName": {
          "description": "application_name represents the given name of the application the connection is connecting with.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "name is the unique ID for each connection. TODO(b/190732451) returns connection name from user-specified name in config. Now, name = ${application_name}:${application_endpoint}"
        },
        "userPort": {
          "format": "int32",
          "description": "user_port specifies the reserved port on gateways for user connections.",
          "type": "integer"
        },
        "applicationEndpoint": {
          "type": "string",
          "description": "application_endpoint is the endpoint of the application the form of host:port. For example, \"localhost:80\"."
        }
      },
      "id": "CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig"
    },
    "GoogleCloudBeyondcorpAppconnectionsV1alphaListAppConnectionsResponse": {
      "properties": {
        "unreachable": {
          "type": "array",
          "description": "A list of locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "appConnections": {
          "items": {
            "$ref": "GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnection"
          },
          "description": "A list of BeyondCorp AppConnections in the project.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudBeyondcorpAppconnectionsV1alphaListAppConnectionsResponse",
      "description": "Response message for BeyondCorp.ListAppConnections."
    },
    "GoogleCloudBeyondcorpAppconnectorsV1alphaReportStatusRequest": {
      "type": "object",
      "properties": {
        "resourceInfo": {
          "description": "Required. Resource info of the connector.",
          "$ref": "GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo"
        },
        "validateOnly": {
          "description": "Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.",
          "type": "boolean"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "description": "Request report the connector status.",
      "id": "GoogleCloudBeyondcorpAppconnectorsV1alphaReportStatusRequest"
    },
    "GoogleIamV1SetIamPolicyRequest": {
      "type": "object",
      "description": "Request message for `SetIamPolicy` method.",
      "id": "GoogleIamV1SetIamPolicyRequest",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "GoogleIamV1Policy"
        },
        "updateMask": {
          "format": "google-fieldmask",
          "type": "string",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
        }
      }
    },
    "GoogleCloudBeyondcorpPartnerservicesV1alphaRoutingInfo": {
      "properties": {
        "pacUri": {
          "description": "Required. Proxy Auto-Configuration (PAC) URI.",
          "type": "string"
        }
      },
      "id": "GoogleCloudBeyondcorpPartnerservicesV1alphaRoutingInfo",
      "description": "Message contains the routing information to direct traffic to the proxy server.",
      "type": "object"
    }
  },
  "id": "beyondcorp:v1alpha",
  "discoveryVersion": "v1"
}

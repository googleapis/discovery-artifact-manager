{
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "getSettings": {
              "id": "migrationcenter.projects.locations.getSettings",
              "response": {
                "$ref": "Settings"
              },
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "httpMethod": "GET",
              "description": "Gets the details of regional settings.",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "description": "Required. Name of the resource.",
                  "required": true,
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "updateSettings": {
              "path": "v1/{+name}",
              "id": "migrationcenter.projects.locations.updateSettings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "requestId": {
                  "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "description": "Output only. The name of the resource.",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "description": "Required. Field mask is used to specify the fields to be overwritten in the `Settings` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                  "type": "string",
                  "location": "query"
                }
              },
              "request": {
                "$ref": "Settings"
              },
              "description": "Updates the regional-level project settings.",
              "httpMethod": "PATCH",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "response": {
                "$ref": "Operation"
              }
            },
            "get": {
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "response": {
                "$ref": "Location"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location.",
              "id": "migrationcenter.projects.locations.get"
            },
            "list": {
              "path": "v1/{+name}/locations",
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "id": "migrationcenter.projects.locations.list",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query"
                },
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                }
              },
              "flatPath": "v1/projects/{projectsId}/locations",
              "parameterOrder": [
                "name"
              ]
            }
          },
          "resources": {
            "preferenceSets": {
              "methods": {
                "delete": {
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "description": "Required. Name of the group resource.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.preferenceSets.delete",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a preference set."
                },
                "create": {
                  "id": "migrationcenter.projects.locations.preferenceSets.create",
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates a new preference set in a given project and location.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "preferenceSetId": {
                      "description": "Required. User specified ID for the preference set. It will become the last component of the preference set name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "path": "v1/{+parent}/preferenceSets",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `PreferenceSet` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "description": "Output only. Name of the preference set.",
                      "location": "path"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "id": "migrationcenter.projects.locations.preferenceSets.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "description": "Updates the parameters of a preference set.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, at most 500 preference sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `ListPreferenceSetsRequest`.",
                      "location": "path"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/preferenceSets",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists all the preference sets in a given project and location.",
                  "response": {
                    "$ref": "ListPreferenceSetsResponse"
                  },
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.preferenceSets.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets"
                },
                "get": {
                  "id": "migrationcenter.projects.locations.preferenceSets.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "location": "path"
                    }
                  },
                  "description": "Gets the details of a preference set.",
                  "response": {
                    "$ref": "PreferenceSet"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "assets": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListAssetsResponse"
                  },
                  "parameters": {
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent value for `ListAssetsRequest`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "view": {
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data."
                      ],
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL"
                      ],
                      "location": "query",
                      "type": "string",
                      "description": "View of the assets. Defaults to BASIC."
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filtering results."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.assets.list",
                  "path": "v1/{+parent}/assets",
                  "description": "Lists all the assets in a given project and location.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "reportAssetFrames": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/assets:reportAssetFrames",
                  "id": "migrationcenter.projects.locations.assets.reportAssetFrames",
                  "response": {
                    "$ref": "ReportAssetFramesResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. Parent of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "source": {
                      "type": "string",
                      "description": "Required. Reference to a source.",
                      "location": "query"
                    }
                  },
                  "description": "Reports a set of frames.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "Frames"
                  }
                },
                "aggregateValues": {
                  "response": {
                    "$ref": "AggregateAssetsValuesResponse"
                  },
                  "path": "v1/{+parent}/assets:aggregateValues",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.assets.aggregateValues",
                  "description": "Aggregates the requested fields based on provided function.",
                  "request": {
                    "$ref": "AggregateAssetsValuesRequest"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Parent value for `AggregateAssetsValuesRequest`."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues",
                  "httpMethod": "POST"
                },
                "batchDelete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Parent value for batch asset delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+parent}/assets:batchDelete",
                  "id": "migrationcenter.projects.locations.assets.batchDelete",
                  "httpMethod": "POST",
                  "description": "Deletes list of Assets.",
                  "request": {
                    "$ref": "BatchDeleteAssetsRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets:batchDelete",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "patch": {
                  "response": {
                    "$ref": "Asset"
                  },
                  "path": "v1/{+name}",
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "description": "Output only. The full name of the asset.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of an asset.",
                  "request": {
                    "$ref": "Asset"
                  },
                  "id": "migrationcenter.projects.locations.assets.patch",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes an asset.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "required": true
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "id": "migrationcenter.projects.locations.assets.delete",
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "batchUpdate": {
                  "path": "v1/{+parent}/assets:batchUpdate",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Parent value for batch asset update.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "description": "Updates the parameters of a list of assets.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets:batchUpdate",
                  "id": "migrationcenter.projects.locations.assets.batchUpdate",
                  "request": {
                    "$ref": "BatchUpdateAssetsRequest"
                  },
                  "response": {
                    "$ref": "BatchUpdateAssetsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "get": {
                  "description": "Gets the details of an asset.",
                  "response": {
                    "$ref": "Asset"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path"
                    },
                    "view": {
                      "description": "View of the assets. Defaults to BASIC.",
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL"
                      ],
                      "location": "query",
                      "type": "string",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data."
                      ]
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.assets.get"
                }
              }
            },
            "sources": {
              "resources": {
                "errorFrames": {
                  "methods": {
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames/{errorFramesId}",
                      "httpMethod": "GET",
                      "description": "Gets the details of an error frame.",
                      "response": {
                        "$ref": "ErrorFrame"
                      },
                      "id": "migrationcenter.projects.locations.sources.errorFrames.get",
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "view": {
                          "type": "string",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ],
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "location": "query",
                          "description": "Optional. An optional view mode to control the level of details for the frame. The default is a basic frame view."
                        },
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the frame to retrieve. Format: projects/{project}/locations/{location}/sources/{source}/errorFrames/{error_frame}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/errorFrames/[^/]+$"
                        }
                      }
                    },
                    "list": {
                      "id": "migrationcenter.projects.locations.sources.errorFrames.list",
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "location": "query",
                          "format": "int32"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results the server should return."
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. Parent value (the source) for `ListErrorFramesRequest`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$"
                        },
                        "view": {
                          "location": "query",
                          "description": "Optional. An optional view mode to control the level of details of each error frame. The default is a BASIC frame view.",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ],
                          "type": "string",
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ]
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListErrorFramesResponse"
                      },
                      "description": "Lists all error frames in a given source and location.",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames",
                      "path": "v1/{+parent}/errorFrames"
                    }
                  }
                }
              },
              "methods": {
                "delete": {
                  "id": "migrationcenter.projects.locations.sources.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Deletes a source.",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "patch": {
                  "description": "Updates the parameters of a source.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "id": "migrationcenter.projects.locations.sources.patch",
                  "parameters": {
                    "name": {
                      "description": "Output only. The full name of the source.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Source` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "Source"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH"
                },
                "list": {
                  "id": "migrationcenter.projects.locations.sources.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists all the sources in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/sources",
                  "response": {
                    "$ref": "ListSourcesResponse"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results that the server should return.",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Parent value for `ListSourcesRequest`."
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filtering results."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources"
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Value for parent."
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "sourceId": {
                      "description": "Required. User specified ID for the source. It will become the last component of the source name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources",
                  "path": "v1/{+parent}/sources",
                  "description": "Creates a new source in a given project and location.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.sources.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Source"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "get": {
                  "id": "migrationcenter.projects.locations.sources.get",
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "description": "Gets the details of a source.",
                  "response": {
                    "$ref": "Source"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "id": "migrationcenter.projects.locations.operations.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource."
                    }
                  },
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "list": {
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.operations.list",
                  "path": "v1/{+name}/operations",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "The standard list filter.",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations"
                },
                "cancel": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path"
                    }
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1/{+name}:cancel",
                  "id": "migrationcenter.projects.locations.operations.cancel",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel"
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource to be deleted."
                    }
                  },
                  "id": "migrationcenter.projects.locations.operations.delete",
                  "response": {
                    "$ref": "Empty"
                  }
                }
              }
            },
            "reportConfigs": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "ReportConfig"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "id": "migrationcenter.projects.locations.reportConfigs.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets details of a single ReportConfig.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "parent": {
                      "description": "Required. Value for parent.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "reportConfigId": {
                      "location": "query",
                      "description": "Required. User specified ID for the report config. It will become the last component of the report config name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.reportConfigs.create",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ReportConfig"
                  },
                  "description": "Creates a report configuration.",
                  "path": "v1/{+parent}/reportConfigs"
                },
                "list": {
                  "description": "Lists ReportConfigs in a given project and location.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListReportConfigsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/reportConfigs",
                  "httpMethod": "GET",
                  "parameters": {
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filtering results."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Parent value for `ListReportConfigsRequest`."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "id": "migrationcenter.projects.locations.reportConfigs.list"
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a ReportConfig.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "id": "migrationcenter.projects.locations.reportConfigs.delete",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "force": {
                      "description": "Optional. If set to `true`, any child `Reports` of this entity will also be deleted. If set to `false`, the request only works if the resource has no children.",
                      "type": "boolean",
                      "location": "query"
                    }
                  }
                }
              },
              "resources": {
                "reports": {
                  "methods": {
                    "create": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "description": "Creates a report.",
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "reportId": {
                          "description": "Required. User specified id for the report. It will become the last component of the report name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The id must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. Value for parent.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "required": true
                        }
                      },
                      "request": {
                        "$ref": "Report"
                      },
                      "path": "v1/{+parent}/reports",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "parameters": {
                        "view": {
                          "description": "Determines what information to retrieve for the Report.",
                          "type": "string",
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "location": "query"
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "description": "Required. Name of the resource.",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets details of a single Report.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Report"
                      },
                      "httpMethod": "GET",
                      "path": "v1/{+name}",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.get"
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListReportsResponse"
                      },
                      "path": "v1/{+parent}/reports",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "description": "Lists Reports in a given ReportConfig.",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.list",
                      "httpMethod": "GET",
                      "parameters": {
                        "orderBy": {
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "type": "string",
                          "location": "query"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Filtering results."
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. Parent value for `ListReportsRequest`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$"
                        },
                        "pageSize": {
                          "format": "int32",
                          "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                          "type": "integer",
                          "location": "query"
                        },
                        "view": {
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "type": "string",
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "location": "query",
                          "description": "Determines what information to retrieve for each Report."
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A token identifying a page of results that the server should return.",
                          "type": "string"
                        }
                      }
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. Name of the resource."
                        },
                        "requestId": {
                          "location": "query",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        }
                      },
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.delete",
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "description": "Deletes a Report."
                    }
                  }
                }
              }
            },
            "importJobs": {
              "resources": {
                "importDataFiles": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "ListImportDataFilesResponse"
                      },
                      "httpMethod": "GET",
                      "description": "List import data files.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Filtering results."
                        },
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                        },
                        "parent": {
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "location": "path",
                          "description": "Required. Name of the parent of the `ImportDataFiles` resource."
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of data files to return. The service may return fewer than this value. If unspecified, at most 500 data files will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A page token, received from a previous `ListImportDataFiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListImportDataFiles` must match the call that provided the page token."
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/importDataFiles"
                    },
                    "delete": {
                      "description": "Delete an import data file.",
                      "httpMethod": "DELETE",
                      "path": "v1/{+name}",
                      "parameters": {
                        "requestId": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        },
                        "name": {
                          "description": "Required. Name of the ImportDataFile to delete.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.delete"
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets an import data file.",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.get",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. Name of the ImportDataFile.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$"
                        }
                      },
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "ImportDataFile"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}"
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "request": {
                        "$ref": "ImportDataFile"
                      },
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.create",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. Name of the parent of the ImportDataFile.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                        },
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "importDataFileId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. The ID of the new data file."
                        }
                      },
                      "description": "Creates an import data file.",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1/{+parent}/importDataFiles"
                    }
                  }
                }
              },
              "methods": {
                "delete": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                    },
                    "force": {
                      "type": "boolean",
                      "description": "Optional. If set to `true`, any `ImportDataFiles` of this job will also be deleted If set to `false`, the request only works if the job has no data files.",
                      "location": "query"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "id": "migrationcenter.projects.locations.importJobs.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes an import job.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "run": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the import job to run.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Runs an import job.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.importJobs.run",
                  "path": "v1/{+name}:run",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "RunImportJobRequest"
                  }
                },
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "id": "migrationcenter.projects.locations.importJobs.create",
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "path": "v1/{+parent}/importJobs",
                  "description": "Creates an import job.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Value for parent."
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "importJobId": {
                      "type": "string",
                      "description": "Required. ID of the import job.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "get": {
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path"
                    },
                    "view": {
                      "description": "Optional. The level of details of the import job. Default value is FULL.",
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "ImportJob"
                  },
                  "id": "migrationcenter.projects.locations.importJobs.get",
                  "httpMethod": "GET",
                  "description": "Gets the details of an import job.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "validate": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "description": "Required. The name of the import job to validate.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "id": "migrationcenter.projects.locations.importJobs.validate",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate",
                  "request": {
                    "$ref": "ValidateImportJobRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Validates an import job.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:validate",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "parameters": {
                    "view": {
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "description": "Optional. The level of details of each import job. Default value is BASIC.",
                      "location": "query",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Parent value for `ListImportJobsRequest`.",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "id": "migrationcenter.projects.locations.importJobs.list",
                  "path": "v1/{+parent}/importJobs",
                  "description": "Lists all import jobs.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListImportJobsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "patch": {
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Output only. The full name of the import job.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "id": "migrationcenter.projects.locations.importJobs.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "description": "Updates an import job.",
                  "path": "v1/{+name}"
                }
              }
            },
            "groups": {
              "methods": {
                "create": {
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates a new group in a given project and location.",
                  "id": "migrationcenter.projects.locations.groups.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups",
                  "request": {
                    "$ref": "Group"
                  },
                  "path": "v1/{+parent}/groups"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "description": "Gets the details of a group.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.groups.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Group"
                  }
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "id": "migrationcenter.projects.locations.groups.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a group.",
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the group resource.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  }
                },
                "addAssets": {
                  "path": "v1/{+group}:addAssets",
                  "description": "Adds assets to a group.",
                  "parameterOrder": [
                    "group"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "group": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "required": true,
                      "description": "Required. Group reference.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "id": "migrationcenter.projects.locations.groups.addAssets",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addAssets",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "AddAssetsToGroupRequest"
                  },
                  "httpMethod": "POST"
                },
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Updates the parameters of a group.",
                  "parameters": {
                    "name": {
                      "description": "Output only. The name of the group.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Group` resource by the update. The values specified in the `update_mask` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "httpMethod": "PATCH",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.groups.patch",
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "Group"
                  }
                },
                "removeAssets": {
                  "description": "Removes assets from a group.",
                  "request": {
                    "$ref": "RemoveAssetsFromGroupRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeAssets",
                  "id": "migrationcenter.projects.locations.groups.removeAssets",
                  "parameterOrder": [
                    "group"
                  ],
                  "parameters": {
                    "group": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Group reference.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+group}:removeAssets"
                },
                "list": {
                  "path": "v1/{+parent}/groups",
                  "response": {
                    "$ref": "ListGroupsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all groups in a given project and location.",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups",
                  "parameters": {
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Parent value for `ListGroupsRequest`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results the server should return."
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Filtering results.",
                      "type": "string"
                    }
                  },
                  "id": "migrationcenter.projects.locations.groups.list"
                }
              }
            }
          }
        }
      }
    }
  },
  "mtlsRootUrl": "https://migrationcenter.mtls.googleapis.com/",
  "baseUrl": "https://migrationcenter.googleapis.com/",
  "kind": "discovery#restDescription",
  "parameters": {
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format."
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "description": "Data format for response.",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "default": "json"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    }
  },
  "schemas": {
    "AggregationFrequency": {
      "id": "AggregationFrequency",
      "description": "Frequency distribution of all field values.",
      "type": "object",
      "properties": {}
    },
    "AssetFrame": {
      "type": "object",
      "description": "Contains data reported from an inventory source on an asset.",
      "id": "AssetFrame",
      "properties": {
        "machineDetails": {
          "description": "Asset information specific for virtual machines.",
          "$ref": "MachineDetails"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "traceToken": {
          "description": "Optional. Trace token is optionally provided to assist with debugging and traceability.",
          "type": "string"
        },
        "reportTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the data was reported."
        },
        "performanceSamples": {
          "description": "Asset performance data samples. Samples that are from more than 40 days ago or after tomorrow are ignored.",
          "type": "array",
          "items": {
            "$ref": "PerformanceSample"
          }
        },
        "attributes": {
          "description": "Generic asset attributes.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      }
    },
    "DailyResourceUsageAggregationMemory": {
      "properties": {
        "utilizationPercentage": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Memory utilization percentage."
        }
      },
      "description": "Statistical aggregation of memory usage.",
      "id": "DailyResourceUsageAggregationMemory",
      "type": "object"
    },
    "NetworkConnectionList": {
      "properties": {
        "entries": {
          "description": "Network connection entries.",
          "items": {
            "$ref": "NetworkConnection"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "NetworkConnectionList",
      "description": "Network connection list."
    },
    "ImportDataFile": {
      "type": "object",
      "id": "ImportDataFile",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "state": {
          "description": "Output only. The state of the import data file.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE"
          ],
          "enumDescriptions": [
            "Default value.",
            "The data file is being created.",
            "The data file completed initialization."
          ],
          "readOnly": true,
          "type": "string"
        },
        "uploadFileInfo": {
          "$ref": "UploadFileInfo",
          "description": "Information about a file that is uploaded to a storage service."
        },
        "format": {
          "description": "Required. The payload format.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually and following the StratoZone format. For more information, see Manually create and upload data tables."
          ],
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_STRATOZONE_CSV"
          ]
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the file was created.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the file."
        }
      },
      "description": "A resource that represents a payload file in an import job."
    },
    "ImportJob": {
      "description": "A resource that represents the background job that imports asset frames.",
      "properties": {
        "assetSource": {
          "type": "string",
          "description": "Required. Reference to a source."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the import job was last updated."
        },
        "executionReport": {
          "readOnly": true,
          "$ref": "ExecutionReport",
          "description": "Output only. The report with the results of running the import job."
        },
        "state": {
          "readOnly": true,
          "enum": [
            "IMPORT_JOB_STATE_UNSPECIFIED",
            "IMPORT_JOB_STATE_PENDING",
            "IMPORT_JOB_STATE_RUNNING",
            "IMPORT_JOB_STATE_COMPLETED",
            "IMPORT_JOB_STATE_FAILED",
            "IMPORT_JOB_STATE_VALIDATING",
            "IMPORT_JOB_STATE_FAILED_VALIDATION",
            "IMPORT_JOB_STATE_READY"
          ],
          "enumDescriptions": [
            "Default value.",
            "The import job is pending.",
            "The processing of the import job is ongoing.",
            "The import job processing has completed.",
            "The import job failed to be processed.",
            "The import job is being validated.",
            "The import job contains blocking errors.",
            "The validation of the job completed with no blocking errors."
          ],
          "description": "Output only. The state of the import job.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp when the import job was created.",
          "readOnly": true
        },
        "completeTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp when the import job was completed.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The full name of the import job."
        },
        "validationReport": {
          "description": "Output only. The report with the validation results of the import job.",
          "readOnly": true,
          "$ref": "ValidationReport"
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        }
      },
      "type": "object",
      "id": "ImportJob"
    },
    "MachineArchitectureDetails": {
      "description": "Details of the machine architecture.",
      "properties": {
        "vendor": {
          "type": "string",
          "description": "Hardware vendor."
        },
        "bios": {
          "$ref": "BiosDetails",
          "description": "BIOS Details."
        },
        "cpuArchitecture": {
          "type": "string",
          "description": "CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc."
        },
        "cpuSocketCount": {
          "type": "integer",
          "description": "Number of processor sockets allocated to the machine.",
          "format": "int32"
        },
        "cpuThreadCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of CPU threads allocated to the machine."
        },
        "hyperthreading": {
          "description": "CPU hyper-threading support.",
          "enumDescriptions": [
            "Unspecified or unknown.",
            "Hyper-threading is disabled.",
            "Hyper-threading is enabled."
          ],
          "type": "string",
          "enum": [
            "CPU_HYPER_THREADING_UNSPECIFIED",
            "DISABLED",
            "ENABLED"
          ]
        },
        "cpuName": {
          "description": "CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc.",
          "type": "string"
        },
        "firmwareType": {
          "description": "Firmware type.",
          "enum": [
            "FIRMWARE_TYPE_UNSPECIFIED",
            "BIOS",
            "EFI"
          ],
          "enumDescriptions": [
            "Unspecified or unknown.",
            "BIOS firmware.",
            "EFI firmware."
          ],
          "type": "string"
        }
      },
      "type": "object",
      "id": "MachineArchitectureDetails"
    },
    "AssetList": {
      "id": "AssetList",
      "properties": {
        "assetIds": {
          "description": "Required. A list of asset IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Lists the asset IDs of all assets.",
      "type": "object"
    },
    "HostsEntryList": {
      "properties": {
        "entries": {
          "type": "array",
          "description": "Hosts entries.",
          "items": {
            "$ref": "HostsEntry"
          }
        }
      },
      "description": "Hosts content.",
      "type": "object",
      "id": "HostsEntryList"
    },
    "MemoryUsageSample": {
      "properties": {
        "utilizedPercentage": {
          "description": "Percentage of system memory utilized. Must be in the interval [0, 100].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "MemoryUsageSample",
      "description": "Memory usage sample.",
      "type": "object"
    },
    "ListImportDataFilesResponse": {
      "id": "ListImportDataFilesResponse",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "importDataFiles": {
          "type": "array",
          "items": {
            "$ref": "ImportDataFile"
          },
          "description": "The list of import data files."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "type": "object",
      "description": "Response for listing payload files of an import job."
    },
    "NetworkAdapterDetails": {
      "id": "NetworkAdapterDetails",
      "properties": {
        "addresses": {
          "description": "NetworkAddressList",
          "$ref": "NetworkAddressList"
        },
        "macAddress": {
          "description": "MAC address.",
          "type": "string"
        },
        "adapterType": {
          "description": "Network adapter type (e.g. VMXNET3).",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Details of network adapter."
    },
    "DailyResourceUsageAggregationCPU": {
      "id": "DailyResourceUsageAggregationCPU",
      "properties": {
        "utilizationPercentage": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "CPU utilization percentage."
        }
      },
      "description": "Statistical aggregation of CPU usage.",
      "type": "object"
    },
    "ListPreferenceSetsResponse": {
      "type": "object",
      "description": "Response message for listing preference sets.",
      "properties": {
        "preferenceSets": {
          "description": "The list of PreferenceSets",
          "items": {
            "$ref": "PreferenceSet"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      },
      "id": "ListPreferenceSetsResponse"
    },
    "Asset": {
      "properties": {
        "insightList": {
          "description": "Output only. The list of insights associated with the asset.",
          "$ref": "InsightList",
          "readOnly": true
        },
        "sources": {
          "readOnly": true,
          "description": "Output only. The list of sources contributing to the asset.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the asset was last updated.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "performanceData": {
          "$ref": "AssetPerformanceData",
          "description": "Output only. Performance data for the asset.",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The timestamp when the asset was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "machineDetails": {
          "$ref": "MachineDetails",
          "readOnly": true,
          "description": "Output only. Asset information specific for virtual and physical machines."
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Generic asset attributes."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The full name of the asset.",
          "type": "string"
        },
        "assignedGroups": {
          "readOnly": true,
          "description": "Output only. The list of groups that the asset is assigned to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "Asset",
      "description": "An asset represents a resource in your environment. Asset types include virtual machines and databases.",
      "type": "object"
    },
    "RunImportJobRequest": {
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      },
      "type": "object",
      "id": "RunImportJobRequest",
      "description": "A request to run an import job."
    },
    "OperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "apiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. API version used to start the operation."
        },
        "statusMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string",
          "readOnly": true
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "OperationMetadata"
    },
    "DiskPartitionList": {
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "DiskPartition"
          },
          "description": "Partition entries.",
          "type": "array"
        }
      },
      "description": "Disk partition list.",
      "id": "DiskPartitionList"
    },
    "AggregationHistogram": {
      "type": "object",
      "description": "Histogram of bucketed assets counts by field value.",
      "id": "AggregationHistogram",
      "properties": {
        "lowerBounds": {
          "type": "array",
          "description": "Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "AggregationResultHistogramBucket": {
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "id": "AggregationResultHistogramBucket",
      "type": "object",
      "properties": {
        "count": {
          "format": "int64",
          "description": "Count of items in the bucket.",
          "type": "string"
        },
        "lowerBound": {
          "type": "number",
          "format": "double",
          "description": "Lower bound - inclusive."
        },
        "upperBound": {
          "type": "number",
          "description": "Upper bound - exclusive.",
          "format": "double"
        }
      }
    },
    "ReportSummaryMachineSeriesAllocation": {
      "description": "Represents a data point tracking the count of assets allocated for a specific Machine Series.",
      "properties": {
        "allocatedAssetCount": {
          "format": "int64",
          "description": "Count of assets allocated to this machine series.",
          "type": "string"
        },
        "machineSeries": {
          "$ref": "MachineSeries",
          "description": "The Machine Series (e.g. \"E2\", \"N2\")"
        }
      },
      "id": "ReportSummaryMachineSeriesAllocation",
      "type": "object"
    },
    "ReportSummaryComputeEngineFinding": {
      "id": "ReportSummaryComputeEngineFinding",
      "description": "A set of findings that applies to assets destined for Compute Engine.",
      "properties": {
        "allocatedDiskTypes": {
          "items": {
            "enum": [
              "PERSISTENT_DISK_TYPE_UNSPECIFIED",
              "PERSISTENT_DISK_TYPE_STANDARD",
              "PERSISTENT_DISK_TYPE_BALANCED",
              "PERSISTENT_DISK_TYPE_SSD"
            ],
            "type": "string",
            "enumDescriptions": [
              "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
              "Standard HDD Persistent Disk.",
              "Balanced Persistent Disk.",
              "SSD Persistent Disk."
            ]
          },
          "type": "array",
          "description": "Set of disk types allocated to assets."
        },
        "allocatedRegions": {
          "description": "Set of regions in which the assets were allocated.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allocatedAssetCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of assets which were allocated."
        },
        "machineSeriesAllocations": {
          "description": "Distribution of assets based on the Machine Series.",
          "items": {
            "$ref": "ReportSummaryMachineSeriesAllocation"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "FitDescriptor": {
      "description": "Describes the fit level of an asset for migration to a specific target.",
      "type": "object",
      "properties": {
        "fitLevel": {
          "type": "string",
          "enum": [
            "FIT_LEVEL_UNSPECIFIED",
            "FIT",
            "NO_FIT",
            "REQUIRES_EFFORT"
          ],
          "description": "Fit level.",
          "enumDescriptions": [
            "Not enough information.",
            "Fit.",
            "No Fit.",
            "Fit with effort."
          ]
        }
      },
      "id": "FitDescriptor"
    },
    "AddAssetsToGroupRequest": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        },
        "assets": {
          "$ref": "AssetList",
          "description": "Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000."
        },
        "allowExisting": {
          "description": "Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.",
          "type": "boolean"
        }
      },
      "description": "A request to add assets to a group.",
      "id": "AddAssetsToGroupRequest"
    },
    "Settings": {
      "description": "Describes the Migration Center settings related to the project.",
      "properties": {
        "preferenceSet": {
          "description": "The preference set used by default for a project.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the resource.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "Settings"
    },
    "ComputeEngineShapeDescriptor": {
      "description": "Compute Engine target shape descriptor.",
      "type": "object",
      "properties": {
        "machineType": {
          "description": "Compute Engine machine type.",
          "type": "string"
        },
        "logicalCoreCount": {
          "description": "Number of logical cores.",
          "format": "int32",
          "type": "integer"
        },
        "physicalCoreCount": {
          "type": "integer",
          "description": "Number of physical cores.",
          "format": "int32"
        },
        "series": {
          "type": "string",
          "description": "Compute Engine machine series."
        },
        "memoryMb": {
          "description": "Memory in mebibytes.",
          "format": "int32",
          "type": "integer"
        },
        "storage": {
          "type": "array",
          "items": {
            "$ref": "ComputeStorageDescriptor"
          },
          "description": "Compute Engine storage. Never empty."
        }
      },
      "id": "ComputeEngineShapeDescriptor"
    },
    "ListSourcesResponse": {
      "id": "ListSourcesResponse",
      "type": "object",
      "description": "Response message for listing sources.",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "sources": {
          "description": "The list of sources.",
          "type": "array",
          "items": {
            "$ref": "Source"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        }
      }
    },
    "DiskUsageSample": {
      "type": "object",
      "description": "Disk usage sample. Values are across all disks.",
      "id": "DiskUsageSample",
      "properties": {
        "averageIops": {
          "description": "Average IOPS sampled over a short window. Must be non-negative.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "DailyResourceUsageAggregationNetwork": {
      "description": "Statistical aggregation of network usage.",
      "properties": {
        "ingressBps": {
          "description": "Network ingress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        },
        "egressBps": {
          "description": "Network egress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "id": "DailyResourceUsageAggregationNetwork",
      "type": "object"
    },
    "NetworkAdapterList": {
      "description": "List of network adapters.",
      "properties": {
        "entries": {
          "description": "Network adapter entries.",
          "type": "array",
          "items": {
            "$ref": "NetworkAdapterDetails"
          }
        }
      },
      "type": "object",
      "id": "NetworkAdapterList"
    },
    "PerformanceSample": {
      "type": "object",
      "id": "PerformanceSample",
      "properties": {
        "cpu": {
          "description": "CPU usage sample.",
          "$ref": "CpuUsageSample"
        },
        "memory": {
          "$ref": "MemoryUsageSample",
          "description": "Memory usage sample."
        },
        "sampleTime": {
          "type": "string",
          "description": "Time the sample was If omitted, the frame report time will be used.",
          "format": "google-datetime"
        },
        "network": {
          "description": "Network usage sample.",
          "$ref": "NetworkUsageSample"
        },
        "disk": {
          "description": "Disk usage sample.",
          "$ref": "DiskUsageSample"
        }
      },
      "description": "Performance data sample."
    },
    "Insight": {
      "type": "object",
      "id": "Insight",
      "properties": {
        "genericInsight": {
          "readOnly": true,
          "description": "Output only. A generic insight about an asset",
          "$ref": "GenericInsight"
        },
        "migrationInsight": {
          "description": "Output only. An insight about potential migrations for an asset.",
          "readOnly": true,
          "$ref": "MigrationInsight"
        }
      },
      "description": "An insight about an asset."
    },
    "ListAssetsResponse": {
      "type": "object",
      "id": "ListAssetsResponse",
      "description": "Response message for listing assets.",
      "properties": {
        "assets": {
          "description": "A list of assets.",
          "type": "array",
          "items": {
            "$ref": "Asset"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      }
    },
    "GuestRuntimeDetails": {
      "type": "object",
      "properties": {
        "domain": {
          "description": "Domain, e.g. c.stratozone-development.internal.",
          "type": "string"
        },
        "openFileList": {
          "description": "Open files information.",
          "$ref": "OpenFileList"
        },
        "machineName": {
          "type": "string",
          "description": "Machine name."
        },
        "network": {
          "$ref": "RuntimeNetworkInfo",
          "description": "Runtime network information (connections, ports)."
        },
        "installedApps": {
          "$ref": "GuestInstalledApplicationList",
          "description": "Installed applications information."
        },
        "processes": {
          "description": "Running processes.",
          "$ref": "RunningProcessList"
        },
        "services": {
          "$ref": "RunningServiceList",
          "description": "Running background services."
        },
        "lastBootTime": {
          "description": "Last time the OS was booted.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Guest OS runtime information.",
      "id": "GuestRuntimeDetails"
    },
    "DiskEntry": {
      "description": "Single disk entry.",
      "properties": {
        "diskLabelType": {
          "description": "Disk label type (e.g. BIOS/GPT)",
          "type": "string"
        },
        "interfaceType": {
          "description": "Disks interface type.",
          "type": "string",
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "IDE",
            "SATA",
            "SAS",
            "SCSI",
            "NVME",
            "FC",
            "ISCSI"
          ],
          "enumDescriptions": [
            "Interface type unknown or unspecified.",
            "IDE interface type.",
            "SATA interface type.",
            "SAS interface type.",
            "SCSI interface type.",
            "NVME interface type.",
            "FC interface type.",
            "iSCSI interface type."
          ]
        },
        "hwAddress": {
          "description": "Disk hardware address (e.g. 0:1 for SCSI).",
          "type": "string"
        },
        "vmware": {
          "$ref": "VmwareDiskConfig",
          "description": "VMware disk details."
        },
        "partitions": {
          "description": "Partition layout.",
          "$ref": "DiskPartitionList"
        },
        "capacityBytes": {
          "description": "Disk capacity.",
          "type": "string",
          "format": "int64"
        },
        "freeBytes": {
          "type": "string",
          "description": "Disk free space.",
          "format": "int64"
        },
        "diskLabel": {
          "type": "string",
          "description": "Disk label."
        }
      },
      "type": "object",
      "id": "DiskEntry"
    },
    "BatchUpdateAssetsResponse": {
      "description": "Response for updating a list of assets.",
      "properties": {
        "assets": {
          "items": {
            "$ref": "Asset"
          },
          "type": "array",
          "description": "Update asset content. The content only includes values after field mask being applied."
        }
      },
      "id": "BatchUpdateAssetsResponse",
      "type": "object"
    },
    "ReportSummaryVmwareNode": {
      "id": "ReportSummaryVmwareNode",
      "type": "object",
      "description": "A VMWare Engine Node",
      "properties": {
        "code": {
          "description": "Code to identify VMware Engine node series, e.g. \"ve1-standard-72\". Based on the displayName of cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.nodeTypes",
          "type": "string"
        }
      }
    },
    "ComputeEngineMigrationTarget": {
      "type": "object",
      "description": "Compute engine migration target.",
      "id": "ComputeEngineMigrationTarget",
      "properties": {
        "shape": {
          "description": "Description of the suggested shape for the migration target.",
          "$ref": "ComputeEngineShapeDescriptor"
        }
      }
    },
    "NetworkAddressList": {
      "type": "object",
      "id": "NetworkAddressList",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "NetworkAddress"
          },
          "description": "Network address entries."
        }
      },
      "description": "List of allocated/assigned network addresses."
    },
    "RunningProcess": {
      "properties": {
        "pid": {
          "format": "int64",
          "type": "string",
          "description": "Process ID."
        },
        "user": {
          "type": "string",
          "description": "User running the process."
        },
        "exePath": {
          "type": "string",
          "description": "Process binary path."
        },
        "attributes": {
          "description": "Process extended attributes.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "cmdline": {
          "type": "string",
          "description": "Process full command line."
        }
      },
      "description": "Guest OS running process details.",
      "type": "object",
      "id": "RunningProcess"
    },
    "AggregateAssetsValuesResponse": {
      "type": "object",
      "description": "A response to a request to aggregated assets values.",
      "id": "AggregateAssetsValuesResponse",
      "properties": {
        "results": {
          "items": {
            "$ref": "AggregationResult"
          },
          "description": "The aggregation results.",
          "type": "array"
        }
      }
    },
    "FrameViolationEntry": {
      "id": "FrameViolationEntry",
      "description": "A resource that contains a single violation of a reported `AssetFrame` resource.",
      "properties": {
        "field": {
          "description": "The field of the original frame where the violation occurred.",
          "type": "string"
        },
        "violation": {
          "type": "string",
          "description": "A message describing the violation."
        }
      },
      "type": "object"
    },
    "AssetPerformanceData": {
      "properties": {
        "dailyResourceUsageAggregations": {
          "items": {
            "$ref": "DailyResourceUsageAggregation"
          },
          "description": "Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days. Aggregations are sorted from oldest to most recent.",
          "type": "array"
        }
      },
      "id": "AssetPerformanceData",
      "type": "object",
      "description": "Performance data for an asset."
    },
    "MigrationInsight": {
      "id": "MigrationInsight",
      "description": "An insight about potential migrations for an asset.",
      "type": "object",
      "properties": {
        "computeEngineTarget": {
          "readOnly": true,
          "$ref": "ComputeEngineMigrationTarget",
          "description": "Output only. A Google Compute Engine target."
        },
        "fit": {
          "readOnly": true,
          "$ref": "FitDescriptor",
          "description": "Output only. Description of how well the asset this insight is associated with fits the proposed migration."
        }
      }
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "response": {
          "type": "object",
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      },
      "id": "Operation"
    },
    "MachineSeries": {
      "properties": {
        "code": {
          "description": "Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series.",
          "type": "string"
        }
      },
      "description": "A Compute Engine machine series.",
      "type": "object",
      "id": "MachineSeries"
    },
    "MachineDiskDetails": {
      "type": "object",
      "id": "MachineDiskDetails",
      "description": "Details of machine disks.",
      "properties": {
        "disks": {
          "$ref": "DiskEntryList",
          "description": "List of disks."
        },
        "totalFreeBytes": {
          "format": "int64",
          "type": "string",
          "description": "Total disk free space."
        },
        "totalCapacityBytes": {
          "format": "int64",
          "type": "string",
          "description": "Disk total Capacity."
        }
      }
    },
    "NetworkAddress": {
      "description": "Details of network address.",
      "id": "NetworkAddress",
      "type": "object",
      "properties": {
        "fqdn": {
          "description": "Fully qualified domain name.",
          "type": "string"
        },
        "bcast": {
          "type": "string",
          "description": "Broadcast address."
        },
        "assignment": {
          "enumDescriptions": [
            "Unknown (default value).",
            "Staticly assigned IP.",
            "Dynamically assigned IP (DHCP)."
          ],
          "enum": [
            "ADDRESS_ASSIGNMENT_UNSPECIFIED",
            "ADDRESS_ASSIGNMENT_STATIC",
            "ADDRESS_ASSIGNMENT_DHCP"
          ],
          "type": "string",
          "description": "Whether DHCP is used to assign addresses."
        },
        "ipAddress": {
          "type": "string",
          "description": "Assigned or configured IP Address."
        },
        "subnetMask": {
          "description": "Subnet mask.",
          "type": "string"
        }
      }
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "The response message for Operations.ListOperations."
    },
    "RemoveAssetsFromGroupRequest": {
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        },
        "assets": {
          "$ref": "AssetList",
          "description": "Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000."
        },
        "allowMissing": {
          "type": "boolean",
          "description": "Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`."
        }
      },
      "description": "A request to remove assets from a group.",
      "type": "object",
      "id": "RemoveAssetsFromGroupRequest"
    },
    "PhysicalPlatformDetails": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field."
        }
      },
      "type": "object",
      "id": "PhysicalPlatformDetails",
      "description": "Platform specific details for Physical Machines."
    },
    "GuestInstalledApplicationList": {
      "id": "GuestInstalledApplicationList",
      "description": "Guest installed application list.",
      "properties": {
        "entries": {
          "type": "array",
          "description": "Application entries.",
          "items": {
            "$ref": "GuestInstalledApplication"
          }
        }
      },
      "type": "object"
    },
    "DiskEntryList": {
      "type": "object",
      "description": "VM disks.",
      "properties": {
        "entries": {
          "type": "array",
          "description": "Disk entries.",
          "items": {
            "$ref": "DiskEntry"
          }
        }
      },
      "id": "DiskEntryList"
    },
    "OpenFileList": {
      "description": "Open file list.",
      "id": "OpenFileList",
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "OpenFileDetails"
          },
          "description": "Open file details entries.",
          "type": "array"
        }
      }
    },
    "ReportSummaryUtilizationChartData": {
      "properties": {
        "free": {
          "format": "int64",
          "type": "string",
          "description": "Aggregate value which falls into the \"Free\" bucket."
        },
        "used": {
          "description": "Aggregate value which falls into the \"Used\" bucket.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "Utilization Chart is a specific type of visualization which displays a metric classified into \"Used\" and \"Free\" buckets.",
      "id": "ReportSummaryUtilizationChartData"
    },
    "ComputeEnginePreferences": {
      "type": "object",
      "properties": {
        "licenseType": {
          "enum": [
            "LICENSE_TYPE_UNSPECIFIED",
            "LICENSE_TYPE_DEFAULT",
            "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE"
          ],
          "enumDescriptions": [
            "Unspecified (default value).",
            "Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with.",
            "Bring-your-own-license (BYOL) plan. User provides the OS license."
          ],
          "type": "string",
          "description": "License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan."
        },
        "machinePreferences": {
          "$ref": "MachinePreferences",
          "description": "Preferences concerning the machine types to consider on Compute Engine."
        }
      },
      "id": "ComputeEnginePreferences",
      "description": "The user preferences relating to Compute Engine target platform."
    },
    "ReportSummaryVmwareEngineFinding": {
      "id": "ReportSummaryVmwareEngineFinding",
      "description": "A set of findings that applies to assets destined for VMWare Engine.",
      "properties": {
        "nodeAllocations": {
          "description": "Set of per-nodetype allocation records",
          "type": "array",
          "items": {
            "$ref": "ReportSummaryVmwareNodeAllocation"
          }
        },
        "allocatedRegions": {
          "description": "Set of regions in which the assets were allocated",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allocatedAssetCount": {
          "description": "Count of assets which are allocated",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "ReportConfigGroupPreferenceSetAssignment": {
      "type": "object",
      "id": "ReportConfigGroupPreferenceSetAssignment",
      "properties": {
        "preferenceSet": {
          "description": "Required. Name of the Preference Set.",
          "type": "string"
        },
        "group": {
          "type": "string",
          "description": "Required. Name of the group."
        }
      },
      "description": "Represents a combination of a group with a preference set."
    },
    "GenericPlatformDetails": {
      "properties": {
        "location": {
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field.",
          "type": "string"
        }
      },
      "id": "GenericPlatformDetails",
      "type": "object",
      "description": "Generic platform details."
    },
    "AggregationSum": {
      "type": "object",
      "id": "AggregationSum",
      "description": "Sum of field values.",
      "properties": {}
    },
    "VmwarePlatformDetails": {
      "type": "object",
      "description": "VMware specific details.",
      "id": "VmwarePlatformDetails",
      "properties": {
        "vcenterVersion": {
          "description": "vCenter version.",
          "type": "string"
        },
        "vcenterUri": {
          "description": "vCenter URI used in collection.",
          "type": "string"
        },
        "osid": {
          "description": "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.",
          "type": "string"
        },
        "vcenterFolder": {
          "type": "string",
          "description": "Folder name in vCenter where asset resides."
        },
        "esxVersion": {
          "type": "string",
          "description": "ESX version."
        },
        "vcenterVmId": {
          "description": "vCenter VM ID.",
          "type": "string"
        }
      }
    },
    "MachinePreferences": {
      "type": "object",
      "id": "MachinePreferences",
      "properties": {
        "allowedMachineSeries": {
          "items": {
            "$ref": "MachineSeries"
          },
          "description": "Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.",
          "type": "array"
        }
      },
      "description": "The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions."
    },
    "ReportSummaryHistogramChartDataBucket": {
      "properties": {
        "lowerBound": {
          "description": "Lower bound - inclusive.",
          "format": "int64",
          "type": "string"
        },
        "count": {
          "format": "int64",
          "description": "Count of items in the bucket.",
          "type": "string"
        },
        "upperBound": {
          "description": "Upper bound - exclusive.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "id": "ReportSummaryHistogramChartDataBucket",
      "type": "object"
    },
    "ExecutionReport": {
      "id": "ExecutionReport",
      "properties": {
        "executionErrors": {
          "$ref": "ValidationReport",
          "description": "Validation errors encountered during the execution of the import job."
        },
        "framesReported": {
          "format": "int32",
          "type": "integer",
          "description": "Total number of asset frames reported for the import job."
        },
        "totalRowsCount": {
          "format": "int32",
          "description": "Output only. Total number of rows in the import job.",
          "type": "integer",
          "readOnly": true
        }
      },
      "description": "A resource that reports result of the import job execution.",
      "type": "object"
    },
    "PlatformDetails": {
      "properties": {
        "azureVmDetails": {
          "description": "Azure VM specific details.",
          "$ref": "AzureVmPlatformDetails"
        },
        "awsEc2Details": {
          "$ref": "AwsEc2PlatformDetails",
          "description": "AWS EC2 specific details."
        },
        "vmwareDetails": {
          "$ref": "VmwarePlatformDetails",
          "description": "VMware specific details."
        },
        "genericDetails": {
          "$ref": "GenericPlatformDetails",
          "description": "Generic platform details."
        },
        "physicalDetails": {
          "$ref": "PhysicalPlatformDetails",
          "description": "Physical machines platform details."
        }
      },
      "description": "Information about the platform.",
      "id": "PlatformDetails",
      "type": "object"
    },
    "ListReportConfigsResponse": {
      "description": "Response message for listing report configs.",
      "id": "ListReportConfigsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "reportConfigs": {
          "items": {
            "$ref": "ReportConfig"
          },
          "type": "array",
          "description": "A list of report configs."
        }
      },
      "type": "object"
    },
    "AwsEc2PlatformDetails": {
      "id": "AwsEc2PlatformDetails",
      "properties": {
        "machineTypeLabel": {
          "type": "string",
          "description": "AWS platform's machine type label."
        },
        "location": {
          "type": "string",
          "description": "The location of the machine in the AWS format."
        }
      },
      "description": "AWS EC2 specific details.",
      "type": "object"
    },
    "AggregateAssetsValuesRequest": {
      "description": "A request to aggregate one or more values.",
      "type": "object",
      "id": "AggregateAssetsValuesRequest",
      "properties": {
        "aggregations": {
          "type": "array",
          "items": {
            "$ref": "Aggregation"
          },
          "description": "Array of aggregations to perform. Up to 25 aggregations can be defined."
        },
        "filter": {
          "description": "The aggregation will be performed on assets that match the provided filter.",
          "type": "string"
        }
      }
    },
    "OpenFileDetails": {
      "id": "OpenFileDetails",
      "description": "Open file Information.",
      "properties": {
        "filePath": {
          "description": "Opened file file path.",
          "type": "string"
        },
        "command": {
          "description": "Opened file command.",
          "type": "string"
        },
        "fileType": {
          "type": "string",
          "description": "Opened file file type."
        },
        "user": {
          "description": "Opened file user.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Report": {
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of resource."
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Default Report creation state.",
            "Creating Report.",
            "Successfully created Report.",
            "Failed to create Report."
          ],
          "description": "Report creation state.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "SUCCEEDED",
            "FAILED"
          ]
        },
        "type": {
          "description": "Report type.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "TOTAL_COST_OF_OWNERSHIP"
          ],
          "enumDescriptions": [
            "Default Report type.",
            "Total cost of ownership Report type."
          ]
        },
        "summary": {
          "readOnly": true,
          "description": "Output only. Summary view of the Report.",
          "$ref": "ReportSummary"
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "createTime": {
          "description": "Output only. Creation timestamp.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Last update timestamp."
        }
      },
      "id": "Report",
      "description": "Report represents a point-in-time rendering of the ReportConfig results.",
      "type": "object"
    },
    "UpdateAssetRequest": {
      "id": "UpdateAssetRequest",
      "description": "A request to update an asset.",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        },
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
        },
        "asset": {
          "$ref": "Asset",
          "description": "Required. The resource being updated."
        }
      },
      "type": "object"
    },
    "ValidationReport": {
      "description": "A resource that aggregates errors across import job files.",
      "id": "ValidationReport",
      "type": "object",
      "properties": {
        "fileValidations": {
          "items": {
            "$ref": "FileValidationReport"
          },
          "description": "List of errors found in files.",
          "type": "array"
        },
        "jobErrors": {
          "type": "array",
          "description": "List of job level errors.",
          "items": {
            "$ref": "ImportError"
          }
        }
      }
    },
    "MachineDetails": {
      "type": "object",
      "id": "MachineDetails",
      "properties": {
        "powerState": {
          "enum": [
            "POWER_STATE_UNSPECIFIED",
            "PENDING",
            "ACTIVE",
            "SUSPENDING",
            "SUSPENDED",
            "DELETING",
            "DELETED"
          ],
          "description": "Power state of the machine.",
          "type": "string",
          "enumDescriptions": [
            "Power state is unknown.",
            "The machine is preparing to enter the ACTIVE state. An instance may enter the PENDING state when it launches for the first time, or when it is started after being in the SUSPENDED state.",
            "The machine is active.",
            "The machine is being turned off.",
            "The machine is off.",
            "The machine is being deleted from the hosting platform.",
            "The machine is deleted from the hosting platform."
          ]
        },
        "guestOs": {
          "description": "Guest OS information.",
          "$ref": "GuestOsDetails"
        },
        "disks": {
          "description": "Disk details.",
          "$ref": "MachineDiskDetails"
        },
        "network": {
          "$ref": "MachineNetworkDetails",
          "description": "Network details."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Machine creation time."
        },
        "architecture": {
          "description": "Architecture details (vendor, CPU architecture).",
          "$ref": "MachineArchitectureDetails"
        },
        "coreCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of CPU cores in the machine. Must be non-negative."
        },
        "platform": {
          "$ref": "PlatformDetails",
          "description": "Platform specific information."
        },
        "machineName": {
          "type": "string",
          "description": "Machine name."
        },
        "memoryMb": {
          "description": "The amount of memory in the machine. Must be non-negative.",
          "format": "int32",
          "type": "integer"
        },
        "uuid": {
          "description": "Machine unique identifier.",
          "type": "string"
        }
      },
      "description": "Details of a machine."
    },
    "ImportError": {
      "properties": {
        "errorDetails": {
          "description": "The error information.",
          "type": "string"
        },
        "severity": {
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ],
          "type": "string",
          "description": "The severity of the error.",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        }
      },
      "description": "A resource that reports the errors encountered while processing an import job.",
      "type": "object",
      "id": "ImportError"
    },
    "ListGroupsResponse": {
      "id": "ListGroupsResponse",
      "type": "object",
      "description": "A response for listing groups.",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "description": "The list of Group",
          "type": "array",
          "items": {
            "$ref": "Group"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        }
      }
    },
    "ReportSummaryGroupFinding": {
      "properties": {
        "overlappingAssetCount": {
          "description": "Count of the number of assets in this group which are also included in another group within the same report.",
          "format": "int64",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Display Name for the Group."
        },
        "preferenceSetFindings": {
          "description": "Findings for each of the PreferenceSets for this group.",
          "type": "array",
          "items": {
            "$ref": "ReportSummaryGroupPreferenceSetFinding"
          }
        },
        "assetAggregateStats": {
          "description": "Summary statistics for all the assets in this group.",
          "$ref": "ReportSummaryAssetAggregateStats"
        },
        "description": {
          "description": "Description for the Group.",
          "type": "string"
        }
      },
      "description": "Summary Findings for a specific Group.",
      "id": "ReportSummaryGroupFinding",
      "type": "object"
    },
    "CpuUsageSample": {
      "description": "CPU usage sample.",
      "id": "CpuUsageSample",
      "properties": {
        "utilizedPercentage": {
          "type": "number",
          "description": "Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.",
          "format": "float"
        }
      },
      "type": "object"
    },
    "RuntimeNetworkInfo": {
      "type": "object",
      "id": "RuntimeNetworkInfo",
      "properties": {
        "connections": {
          "description": "Network connections.",
          "$ref": "NetworkConnectionList"
        },
        "scanTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Time of the last network scan."
        }
      },
      "description": "Runtime networking information."
    },
    "NfsExport": {
      "id": "NfsExport",
      "type": "object",
      "properties": {
        "hosts": {
          "description": "The hosts or networks to which the export is being shared.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "exportDirectory": {
          "description": "The directory being exported.",
          "type": "string"
        }
      },
      "description": "NFS export."
    },
    "GuestOsDetails": {
      "type": "object",
      "description": "Information from Guest-level collections.",
      "properties": {
        "family": {
          "type": "string",
          "enumDescriptions": [
            "",
            "Microsoft Windows Server and Desktop.",
            "Various Linux flavors.",
            "Non-Linux Unix flavors."
          ],
          "description": "What family the OS belong to, if known.",
          "enum": [
            "OS_FAMILY_UNKNOWN",
            "OS_FAMILY_WINDOWS",
            "OS_FAMILY_LINUX",
            "OS_FAMILY_UNIX"
          ]
        },
        "config": {
          "description": "OS and app configuration.",
          "$ref": "GuestConfigDetails"
        },
        "osName": {
          "type": "string",
          "description": "The name of the operating system."
        },
        "version": {
          "type": "string",
          "description": "The version of the operating system."
        },
        "runtime": {
          "$ref": "GuestRuntimeDetails",
          "description": "Runtime information."
        }
      },
      "id": "GuestOsDetails"
    },
    "Money": {
      "properties": {
        "currencyCode": {
          "type": "string",
          "description": "The three-letter currency code defined in ISO 4217."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        },
        "units": {
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "Represents an amount of money with its currency type.",
      "id": "Money"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "type": "object",
      "id": "Empty"
    },
    "DailyResourceUsageAggregationStats": {
      "id": "DailyResourceUsageAggregationStats",
      "type": "object",
      "description": "Statistical aggregation of samples for a single resource usage.",
      "properties": {
        "average": {
          "description": "Average usage value.",
          "format": "float",
          "type": "number"
        },
        "ninteyFifthPercentile": {
          "type": "number",
          "description": "95th percentile usage value.",
          "format": "float"
        },
        "peak": {
          "type": "number",
          "description": "Peak usage value.",
          "format": "float"
        },
        "median": {
          "type": "number",
          "description": "Median usage value.",
          "format": "float"
        }
      }
    },
    "GenericInsight": {
      "description": "An insight about an asset (experimental insight)",
      "id": "GenericInsight",
      "type": "object",
      "properties": {
        "messageId": {
          "format": "int64",
          "description": "Output only. Represents a globally unique message id for this insight, can be used for localization purposes, in case message_code is not yet known by the client use default_message instead.",
          "type": "string",
          "readOnly": true
        },
        "defaultMessage": {
          "readOnly": true,
          "description": "Output only. In case message_code is not yet known by the client default_message will be the message to be used instead.",
          "type": "string"
        },
        "additionalInformation": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Output only. Additional information about the insight, each entry can be a logical entry and must make sense if it is displayed with line breaks between each entry. Text can contain md style links"
        }
      }
    },
    "AggregationResultSum": {
      "type": "object",
      "description": "The result of a sum aggregation.",
      "properties": {
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "id": "AggregationResultSum"
    },
    "NetworkUsageSample": {
      "description": "Network usage sample. Values are across all network interfaces.",
      "id": "NetworkUsageSample",
      "type": "object",
      "properties": {
        "averageEgressBps": {
          "type": "number",
          "format": "float",
          "description": "Average network egress in B/s sampled over a short window. Must be non-negative."
        },
        "averageIngressBps": {
          "format": "float",
          "type": "number",
          "description": "Average network ingress in B/s sampled over a short window. Must be non-negative."
        }
      }
    },
    "ErrorFrame": {
      "id": "ErrorFrame",
      "properties": {
        "originalFrame": {
          "description": "Output only. The frame that was originally reported.",
          "$ref": "AssetFrame",
          "readOnly": true
        },
        "name": {
          "description": "Output only. The identifier of the ErrorFrame.",
          "type": "string",
          "readOnly": true
        },
        "violations": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. All the violations that were detected for the frame.",
          "items": {
            "$ref": "FrameViolationEntry"
          }
        },
        "ingestionTime": {
          "description": "Output only. Frame ingestion time.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Message representing a frame which failed to be processed due to an error.",
      "type": "object"
    },
    "VmwareEnginePreferences": {
      "id": "VmwareEnginePreferences",
      "description": "The user preferences relating to Google Cloud VMware Engine target platform.",
      "type": "object",
      "properties": {
        "storageDeduplicationCompressionRatio": {
          "type": "number",
          "format": "double",
          "description": "The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0."
        },
        "commitmentPlan": {
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "type": "string",
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_3_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_1_YEAR_UPFRONT_PAYMENT",
            "COMMITMENT_3_YEAR_UPFRONT_PAYMENT"
          ],
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment (monthly payments).",
            "3 year commitment (monthly payments).",
            "1 year commitment (upfront payment).",
            "3 years commitment (upfront payment)."
          ]
        },
        "memoryOvercommitRatio": {
          "type": "number",
          "description": "Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0.",
          "format": "double"
        },
        "cpuOvercommitRatio": {
          "type": "number",
          "format": "double",
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment."
        }
      }
    },
    "ReportSummaryAssetAggregateStats": {
      "id": "ReportSummaryAssetAggregateStats",
      "properties": {
        "totalAssets": {
          "format": "int64",
          "type": "string",
          "description": "Count of the number of unique assets in this collection."
        },
        "coreCountHistogram": {
          "$ref": "ReportSummaryHistogramChartData",
          "description": "Histogram showing a distribution of CPU core counts."
        },
        "totalStorageBytes": {
          "format": "int64",
          "type": "string",
          "description": "Sum of persistent storage in bytes of all the assets in this collection."
        },
        "operatingSystem": {
          "$ref": "ReportSummaryChartData",
          "description": "Count of assets grouped by Operating System families."
        },
        "memoryUtilizationChart": {
          "$ref": "ReportSummaryUtilizationChartData",
          "description": "Total memory split into Used/Free buckets."
        },
        "storageUtilizationChart": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryUtilizationChartData"
        },
        "memoryBytesHistogram": {
          "description": "Histogram showing a distribution of memory sizes.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "storageBytesHistogram": {
          "description": "Histogram showing a distribution of memory sizes.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "totalMemoryBytes": {
          "format": "int64",
          "description": "Sum of the memory in bytes of all the assets in this collection.",
          "type": "string"
        },
        "totalCores": {
          "description": "Sum of the CPU core count of all the assets in this collection.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Aggregate statistics for a collection of assets."
    },
    "ComputeStorageDescriptor": {
      "id": "ComputeStorageDescriptor",
      "type": "object",
      "properties": {
        "type": {
          "description": "Disk type backing the storage.",
          "type": "string",
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ],
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ]
        },
        "sizeGb": {
          "format": "int32",
          "type": "integer",
          "description": "Disk size in GiB."
        }
      },
      "description": "Compute Engine storage option descriptor."
    },
    "SoleTenancyPreferences": {
      "type": "object",
      "id": "SoleTenancyPreferences",
      "description": "Preferences concerning Sole Tenancy nodes and VMs.",
      "properties": {
        "cpuOvercommitRatio": {
          "type": "number",
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.",
          "format": "double"
        },
        "hostMaintenancePolicy": {
          "description": "Sole Tenancy nodes maintenance policy.",
          "enumDescriptions": [
            "Unspecified host maintenance policy.",
            "Default host maintenance policy.",
            "Restart in place host maintenance policy.",
            "Migrate within node group host maintenance policy."
          ],
          "type": "string",
          "enum": [
            "HOST_MAINTENANCE_POLICY_UNSPECIFIED",
            "HOST_MAINTENANCE_POLICY_DEFAULT",
            "HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE",
            "HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP"
          ]
        },
        "nodeTypes": {
          "items": {
            "$ref": "SoleTenantNodeType"
          },
          "description": "A list of sole tenant node types. An empty list means that all possible node types will be considered.",
          "type": "array"
        },
        "commitmentPlan": {
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment.",
            "3 years commitment."
          ],
          "type": "string",
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR",
            "COMMITMENT_3_YEAR"
          ]
        }
      }
    },
    "ImportRowError": {
      "properties": {
        "vmName": {
          "type": "string",
          "description": "The name of the VM in the row."
        },
        "rowNumber": {
          "deprecated": true,
          "description": "The row number where the error was detected.",
          "type": "integer",
          "format": "int32"
        },
        "errors": {
          "description": "The list of errors detected in the row.",
          "type": "array",
          "items": {
            "$ref": "ImportError"
          }
        },
        "vmUuid": {
          "description": "The VM UUID.",
          "type": "string"
        }
      },
      "description": "A resource that reports the import job errors at row level.",
      "id": "ImportRowError",
      "type": "object"
    },
    "FileValidationReport": {
      "type": "object",
      "properties": {
        "partialReport": {
          "description": "Flag indicating that processing was aborted due to maximum number of errors.",
          "type": "boolean"
        },
        "fileErrors": {
          "type": "array",
          "description": "List of file level errors.",
          "items": {
            "$ref": "ImportError"
          }
        },
        "rowErrors": {
          "items": {
            "$ref": "ImportRowError"
          },
          "type": "array",
          "description": "Partial list of rows that encountered validation error."
        },
        "fileName": {
          "type": "string",
          "description": "The name of the file."
        }
      },
      "id": "FileValidationReport",
      "description": "A resource that aggregates the validation errors found in an import job file."
    },
    "NfsExportList": {
      "type": "object",
      "description": "NFS exports.",
      "properties": {
        "entries": {
          "description": "NFS export entries.",
          "items": {
            "$ref": "NfsExport"
          },
          "type": "array"
        }
      },
      "id": "NfsExportList"
    },
    "ListReportsResponse": {
      "description": "Response message for listing Reports.",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "reports": {
          "type": "array",
          "description": "The list of Reports.",
          "items": {
            "$ref": "Report"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        }
      },
      "id": "ListReportsResponse",
      "type": "object"
    },
    "SoleTenantNodeType": {
      "type": "object",
      "id": "SoleTenantNodeType",
      "properties": {
        "nodeName": {
          "description": "Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes",
          "type": "string"
        }
      },
      "description": "A Sole Tenant node type."
    },
    "VmwareDiskConfig": {
      "description": "VMware disk config details.",
      "id": "VmwareDiskConfig",
      "type": "object",
      "properties": {
        "vmdkMode": {
          "type": "string",
          "enumDescriptions": [
            "VMDK disk mode unspecified or unknown.",
            "Dependent disk mode.",
            "Independent - Persistent disk mode.",
            "Independent - Nonpersistent disk mode."
          ],
          "enum": [
            "VMDK_MODE_UNSPECIFIED",
            "DEPENDENT",
            "INDEPENDENT_PERSISTENT",
            "INDEPENDENT_NONPERSISTENT"
          ],
          "description": "VMDK disk mode."
        },
        "shared": {
          "description": "Is VMDK shared with other VMs.",
          "type": "boolean"
        },
        "rdmCompatibility": {
          "type": "string",
          "enum": [
            "RDM_COMPATIBILITY_UNSPECIFIED",
            "PHYSICAL_COMPATIBILITY",
            "VIRTUAL_COMPATIBILITY"
          ],
          "enumDescriptions": [
            "Compatibility mode unspecified or unknown.",
            "Physical compatibility mode.",
            "Virtual compatibility mode."
          ],
          "description": "RDM compatibility mode."
        },
        "backingType": {
          "enum": [
            "BACKING_TYPE_UNSPECIFIED",
            "BACKING_TYPE_FLAT_V1",
            "BACKING_TYPE_FLAT_V2",
            "BACKING_TYPE_PMEM",
            "BACKING_TYPE_RDM_V1",
            "BACKING_TYPE_RDM_V2",
            "BACKING_TYPE_SESPARSE",
            "BACKING_TYPE_SESPARSE_V1",
            "BACKING_TYPE_SESPARSE_V2"
          ],
          "enumDescriptions": [
            "Default value.",
            "Flat v1.",
            "Flat v2.",
            "Persistent memory, also known as Non-Volatile Memory (NVM).",
            "Raw Disk Memory v1.",
            "Raw Disk Memory v2.",
            "SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.",
            "SEsparse v1.",
            "SEsparse v1."
          ],
          "type": "string",
          "description": "VMDK backing type."
        }
      }
    },
    "BatchDeleteAssetsRequest": {
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}."
        },
        "allowMissing": {
          "description": "Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "A request to delete a list of asset.",
      "id": "BatchDeleteAssetsRequest"
    },
    "Frames": {
      "type": "object",
      "description": "Collection of frame data.",
      "id": "Frames",
      "properties": {
        "framesData": {
          "items": {
            "$ref": "AssetFrame"
          },
          "type": "array",
          "description": "A repeated field of asset data."
        }
      }
    },
    "ReportSummarySoleTenantNodeAllocation": {
      "id": "ReportSummarySoleTenantNodeAllocation",
      "type": "object",
      "properties": {
        "node": {
          "$ref": "SoleTenantNodeType",
          "description": "Sole Tenant node type, e.g. \"m3-node-128-3904\""
        },
        "nodeCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of this node type to be provisioned"
        },
        "allocatedAssetCount": {
          "format": "int64",
          "description": "Count of assets allocated to these nodes",
          "type": "string"
        }
      },
      "description": "Represents the assets allocated to a specific Sole-Tenant node type."
    },
    "ReportSummary": {
      "id": "ReportSummary",
      "description": "Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report.",
      "properties": {
        "allAssetsStats": {
          "description": "Aggregate statistics for all the assets across all the groups.",
          "$ref": "ReportSummaryAssetAggregateStats"
        },
        "groupFindings": {
          "items": {
            "$ref": "ReportSummaryGroupFinding"
          },
          "description": "Findings for each Group included in this report.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "type": "object",
      "id": "ListLocationsResponse"
    },
    "RegionPreferences": {
      "properties": {
        "preferredRegions": {
          "items": {
            "type": "string"
          },
          "description": "A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.",
          "type": "array"
        }
      },
      "id": "RegionPreferences",
      "type": "object",
      "description": "The user preferences relating to target regions."
    },
    "FstabEntry": {
      "properties": {
        "mntops": {
          "type": "string",
          "description": "Mount options associated with the filesystem."
        },
        "vfstype": {
          "type": "string",
          "description": "The type of the filesystem."
        },
        "freq": {
          "type": "integer",
          "description": "Used by dump to determine which filesystems need to be dumped.",
          "format": "int32"
        },
        "spec": {
          "type": "string",
          "description": "The block special device or remote filesystem to be mounted."
        },
        "file": {
          "type": "string",
          "description": "The mount point for the filesystem."
        },
        "passno": {
          "format": "int32",
          "description": "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.",
          "type": "integer"
        }
      },
      "id": "FstabEntry",
      "description": "Single fstab entry.",
      "type": "object"
    },
    "AggregationResult": {
      "properties": {
        "field": {
          "type": "string"
        },
        "histogram": {
          "$ref": "AggregationResultHistogram"
        },
        "count": {
          "$ref": "AggregationResultCount"
        },
        "sum": {
          "$ref": "AggregationResultSum"
        },
        "frequency": {
          "$ref": "AggregationResultFrequency"
        }
      },
      "type": "object",
      "id": "AggregationResult",
      "description": "Message describing a result of an aggregation."
    },
    "AggregationResultHistogram": {
      "description": "The result of a bucketed histogram aggregation.",
      "properties": {
        "buckets": {
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "items": {
            "$ref": "AggregationResultHistogramBucket"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "AggregationResultHistogram"
    },
    "BiosDetails": {
      "id": "BiosDetails",
      "properties": {
        "smbiosUuid": {
          "type": "string",
          "description": "SMBIOS UUID."
        },
        "releaseDate": {
          "description": "BIOS release date.",
          "$ref": "Date"
        },
        "version": {
          "description": "BIOS version.",
          "type": "string"
        },
        "biosName": {
          "type": "string",
          "description": "BIOS name. This fields is deprecated. Please use the `id` field instead.",
          "deprecated": true
        },
        "id": {
          "type": "string",
          "description": "BIOS ID."
        },
        "manufacturer": {
          "type": "string",
          "description": "BIOS manufacturer."
        }
      },
      "type": "object",
      "description": "Details about the BIOS."
    },
    "RunningServiceList": {
      "properties": {
        "entries": {
          "description": "Running service entries.",
          "items": {
            "$ref": "RunningService"
          },
          "type": "array"
        }
      },
      "id": "RunningServiceList",
      "description": "List of running guest OS services.",
      "type": "object"
    },
    "ReportSummaryHistogramChartData": {
      "type": "object",
      "description": "A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.",
      "properties": {
        "buckets": {
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "items": {
            "$ref": "ReportSummaryHistogramChartDataBucket"
          },
          "type": "array"
        }
      },
      "id": "ReportSummaryHistogramChartData"
    },
    "UploadFileInfo": {
      "id": "UploadFileInfo",
      "type": "object",
      "properties": {
        "uriExpirationTime": {
          "type": "string",
          "description": "Output only. Expiration time of the upload URI.",
          "format": "google-datetime",
          "readOnly": true
        },
        "signedUri": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Upload URI for the file."
        },
        "headers": {
          "readOnly": true,
          "description": "Output only. The headers that were used to sign the URI.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "description": "A resource that contains a URI to which a data file can be uploaded."
    },
    "AggregationCount": {
      "description": "Object count.",
      "type": "object",
      "properties": {},
      "id": "AggregationCount"
    },
    "ReportSummarySoleTenantFinding": {
      "properties": {
        "nodeAllocations": {
          "type": "array",
          "description": "Set of per-nodetype allocation records",
          "items": {
            "$ref": "ReportSummarySoleTenantNodeAllocation"
          }
        },
        "allocatedAssetCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of assets which are allocated"
        },
        "allocatedRegions": {
          "description": "Set of regions in which the assets are allocated",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ReportSummarySoleTenantFinding",
      "description": "A set of findings that applies to assets destined for Sole-Tenant nodes.",
      "type": "object"
    },
    "ListImportJobsResponse": {
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "importJobs": {
          "items": {
            "$ref": "ImportJob"
          },
          "description": "The list of import jobs.",
          "type": "array"
        }
      },
      "description": "A response for listing import jobs.",
      "type": "object",
      "id": "ListImportJobsResponse"
    },
    "AzureVmPlatformDetails": {
      "description": "Azure VM specific details.",
      "id": "AzureVmPlatformDetails",
      "type": "object",
      "properties": {
        "machineTypeLabel": {
          "type": "string",
          "description": "Azure platform's machine type label."
        },
        "provisioningState": {
          "description": "Azure platform's provisioning state.",
          "type": "string"
        },
        "location": {
          "description": "The location of the machine in the Azure format.",
          "type": "string"
        }
      }
    },
    "ReportSummaryChartData": {
      "properties": {
        "dataPoints": {
          "type": "array",
          "items": {
            "$ref": "ReportSummaryChartDataDataPoint"
          },
          "description": "Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value."
        }
      },
      "id": "ReportSummaryChartData",
      "type": "object",
      "description": "Describes a collection of data points rendered as a Chart."
    },
    "AggregationResultFrequency": {
      "properties": {
        "values": {
          "additionalProperties": {
            "format": "int64",
            "type": "string"
          },
          "type": "object"
        }
      },
      "description": "The result of a frequency distribution aggregation.",
      "id": "AggregationResultFrequency",
      "type": "object"
    },
    "MachineNetworkDetails": {
      "id": "MachineNetworkDetails",
      "properties": {
        "primaryMacAddress": {
          "type": "string",
          "description": "MAC address of the machine. This property is used to uniqly identify the machine."
        },
        "adapters": {
          "$ref": "NetworkAdapterList",
          "description": "List of network adapters."
        },
        "primaryIpAddress": {
          "description": "The primary IP address of the machine.",
          "type": "string"
        },
        "publicIpAddress": {
          "description": "The public IP address of the machine.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Details of network adapters and settings."
    },
    "BatchUpdateAssetsRequest": {
      "description": "A request to update a list of assets.",
      "properties": {
        "requests": {
          "description": "Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.",
          "items": {
            "$ref": "UpdateAssetRequest"
          },
          "type": "array"
        }
      },
      "id": "BatchUpdateAssetsRequest",
      "type": "object"
    },
    "InsightList": {
      "description": "Message containing insights list.",
      "type": "object",
      "id": "InsightList",
      "properties": {
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Update timestamp.",
          "format": "google-datetime"
        },
        "insights": {
          "description": "Output only. Insights of the list.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "Insight"
          }
        }
      }
    },
    "ValidateImportJobRequest": {
      "type": "object",
      "id": "ValidateImportJobRequest",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "description": "A request to validate an import job."
    },
    "DailyResourceUsageAggregationDisk": {
      "description": "Statistical aggregation of disk usage.",
      "type": "object",
      "properties": {
        "iops": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Disk I/O operations per second."
        }
      },
      "id": "DailyResourceUsageAggregationDisk"
    },
    "ReportSummaryVmwareNodeAllocation": {
      "id": "ReportSummaryVmwareNodeAllocation",
      "properties": {
        "nodeCount": {
          "type": "string",
          "description": "Count of this node type to be provisioned",
          "format": "int64"
        },
        "allocatedAssetCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of assets allocated to these nodes"
        },
        "vmwareNode": {
          "description": "VMWare node type, e.g. \"ve1-standard-72\"",
          "$ref": "ReportSummaryVmwareNode"
        }
      },
      "description": "Represents assets allocated to a specific VMWare Node type.",
      "type": "object"
    },
    "ReportSummaryGroupPreferenceSetFinding": {
      "properties": {
        "monthlyCostOther": {
          "description": "Miscellaneous monthly cost for this preference set.",
          "$ref": "Money"
        },
        "description": {
          "description": "Description for the Preference Set.",
          "type": "string"
        },
        "monthlyCostNetworkEgress": {
          "description": "Network Egress monthly cost for this preference set.",
          "$ref": "Money"
        },
        "displayName": {
          "type": "string",
          "description": "Display Name of the Preference Set"
        },
        "machinePreferences": {
          "description": "A set of preferences that applies to all machines in the context.",
          "$ref": "VirtualMachinePreferences"
        },
        "monthlyCostCompute": {
          "description": "Compute monthly cost for this preference set.",
          "$ref": "Money"
        },
        "monthlyCostStorage": {
          "$ref": "Money",
          "description": "Storage monthly cost for this preference set."
        },
        "monthlyCostTotal": {
          "description": "Total monthly cost for this preference set.",
          "$ref": "Money"
        },
        "monthlyCostOsLicense": {
          "$ref": "Money",
          "description": "Licensing monthly cost for this preference set."
        },
        "computeEngineFinding": {
          "description": "A set of findings that applies to Compute Engine machines in the input.",
          "$ref": "ReportSummaryComputeEngineFinding"
        },
        "vmwareEngineFinding": {
          "$ref": "ReportSummaryVmwareEngineFinding",
          "description": "A set of findings that applies to VMWare machines in the input."
        },
        "soleTenantFinding": {
          "description": "A set of findings that applies to Sole-Tenant machines in the input.",
          "$ref": "ReportSummarySoleTenantFinding"
        }
      },
      "description": "Summary Findings for a specific Group/PreferenceSet combination.",
      "id": "ReportSummaryGroupPreferenceSetFinding",
      "type": "object"
    },
    "RunningProcessList": {
      "properties": {
        "entries": {
          "description": "Running process entries.",
          "type": "array",
          "items": {
            "$ref": "RunningProcess"
          }
        }
      },
      "id": "RunningProcessList",
      "type": "object",
      "description": "List of running guest OS processes."
    },
    "Date": {
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "properties": {
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
        },
        "year": {
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Date",
      "type": "object"
    },
    "Status": {
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      }
    },
    "Group": {
      "type": "object",
      "description": "A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups.",
      "id": "Group",
      "properties": {
        "updateTime": {
          "description": "Output only. The timestamp when the group was last updated.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the group."
        },
        "description": {
          "description": "The description of the resource.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the group was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "displayName": {
          "description": "User-friendly display name.",
          "type": "string"
        }
      }
    },
    "GuestInstalledApplication": {
      "properties": {
        "installTime": {
          "format": "google-datetime",
          "description": "The time when the application was installed.",
          "type": "string"
        },
        "version": {
          "description": "Installed application version.",
          "type": "string"
        },
        "vendor": {
          "description": "Installed application vendor.",
          "type": "string"
        },
        "applicationName": {
          "description": "Installed application name.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "Source path."
        }
      },
      "id": "GuestInstalledApplication",
      "type": "object",
      "description": "Guest installed application information."
    },
    "Aggregation": {
      "properties": {
        "histogram": {
          "$ref": "AggregationHistogram",
          "description": "Creates a bucketed histogram of field values."
        },
        "count": {
          "description": "Count the number of matching objects.",
          "$ref": "AggregationCount"
        },
        "sum": {
          "$ref": "AggregationSum",
          "description": "Sum over a numeric field."
        },
        "field": {
          "type": "string",
          "description": "The name of the field on which to aggregate."
        },
        "frequency": {
          "$ref": "AggregationFrequency",
          "description": "Creates a frequency distribution of all field values."
        }
      },
      "type": "object",
      "id": "Aggregation",
      "description": "Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation."
    },
    "PreferenceSet": {
      "type": "object",
      "description": "The preferences that apply to all assets in a given context.",
      "properties": {
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. Name of the preference set.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "A description of the preference set."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp when the preference set was created.",
          "readOnly": true
        },
        "updateTime": {
          "description": "Output only. The timestamp when the preference set was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "virtualMachinePreferences": {
          "$ref": "VirtualMachinePreferences",
          "description": "A set of preferences that applies to all virtual machines in the context."
        }
      },
      "id": "PreferenceSet"
    },
    "CancelOperationRequest": {
      "properties": {},
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object"
    },
    "ReportConfig": {
      "type": "object",
      "id": "ReportConfig",
      "properties": {
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the resource was last updated.",
          "format": "google-datetime"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the resource was created."
        },
        "name": {
          "description": "Output only. Name of resource.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "groupPreferencesetAssignments": {
          "type": "array",
          "items": {
            "$ref": "ReportConfigGroupPreferenceSetAssignment"
          },
          "description": "Required. Collection of combinations of groups and preference sets."
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        }
      },
      "description": "The groups and associated preference sets on which we can generate reports."
    },
    "DiskPartition": {
      "description": "Disk Partition details.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Partition type.",
          "type": "string"
        },
        "subPartitions": {
          "$ref": "DiskPartitionList",
          "description": "Sub-partitions."
        },
        "freeBytes": {
          "description": "Partition free space.",
          "format": "int64",
          "type": "string"
        },
        "fileSystem": {
          "type": "string",
          "description": "Partition file system."
        },
        "mountPoint": {
          "description": "Mount pount (Linux/Windows) or drive letter (Windows).",
          "type": "string"
        },
        "uuid": {
          "description": "Partition UUID.",
          "type": "string"
        },
        "capacityBytes": {
          "type": "string",
          "format": "int64",
          "description": "Partition capacity."
        }
      },
      "id": "DiskPartition"
    },
    "HostsEntry": {
      "properties": {
        "hostNames": {
          "type": "array",
          "description": "List of host names / aliases.",
          "items": {
            "type": "string"
          }
        },
        "ip": {
          "description": "IP (raw, IPv4/6 agnostic).",
          "type": "string"
        }
      },
      "id": "HostsEntry",
      "type": "object",
      "description": "Single /etc/hosts entry."
    },
    "VirtualMachinePreferences": {
      "type": "object",
      "id": "VirtualMachinePreferences",
      "properties": {
        "soleTenancyPreferences": {
          "description": "Preferences concerning Sole Tenant nodes and virtual machines.",
          "$ref": "SoleTenancyPreferences"
        },
        "vmwareEnginePreferences": {
          "description": "Preferences concerning insights and recommendations for Google Cloud VMware Engine.",
          "$ref": "VmwareEnginePreferences"
        },
        "computeEnginePreferences": {
          "$ref": "ComputeEnginePreferences",
          "description": "Compute Engine preferences concern insights and recommendations for Compute Engine target."
        },
        "regionPreferences": {
          "$ref": "RegionPreferences",
          "description": "Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with."
        },
        "targetProduct": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value).",
            "Prefer to migrate to Google Cloud Compute Engine.",
            "Prefer to migrate to Google Cloud VMware Engine.",
            "Prefer to migrate to Google Cloud Sole Tenant Nodes."
          ],
          "description": "Target product for assets using this preference set. Specify either target product or business goal, but not both.",
          "enum": [
            "COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY"
          ]
        },
        "commitmentPlan": {
          "type": "string",
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan.",
            "1 year commitment.",
            "3 years commitment."
          ],
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "COMMITMENT_PLAN_NONE",
            "COMMITMENT_PLAN_ONE_YEAR",
            "COMMITMENT_PLAN_THREE_YEARS"
          ]
        },
        "sizingOptimizationStrategy": {
          "enum": [
            "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED",
            "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE",
            "SIZING_OPTIMIZATION_STRATEGY_MODERATE",
            "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE"
          ],
          "description": "Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value).",
            "No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.",
            "Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.",
            "Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs."
          ]
        }
      },
      "description": "VirtualMachinePreferences enables you to create sets of assumptions, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets."
    },
    "RunningService": {
      "type": "object",
      "description": "Guest OS running service details.",
      "properties": {
        "exePath": {
          "description": "Service binary path.",
          "type": "string"
        },
        "serviceName": {
          "description": "Service name.",
          "type": "string"
        },
        "pid": {
          "type": "string",
          "format": "int64",
          "description": "Service pid."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "PAUSED",
            "STOPPED"
          ],
          "type": "string",
          "description": "Service state (OS-agnostic).",
          "enumDescriptions": [
            "Service state unspecified.",
            "Service is active.",
            "Service is paused.",
            "Service is stopped."
          ]
        },
        "startMode": {
          "description": "Service start mode (OS-agnostic).",
          "type": "string",
          "enumDescriptions": [
            "Start mode unspecified.",
            "The service is a device driver started by the system loader.",
            "The service is a device driver started by the IOInitSystem function.",
            "The service is started by the operating system, at system start-up",
            "The service is started only manually, by a user.",
            "The service is disabled."
          ],
          "enum": [
            "START_MODE_UNSPECIFIED",
            "BOOT",
            "SYSTEM",
            "AUTO",
            "MANUAL",
            "DISABLED"
          ]
        },
        "cmdline": {
          "description": "Service command line.",
          "type": "string"
        }
      },
      "id": "RunningService"
    },
    "DailyResourceUsageAggregation": {
      "type": "object",
      "properties": {
        "cpu": {
          "$ref": "DailyResourceUsageAggregationCPU",
          "description": "CPU usage."
        },
        "network": {
          "$ref": "DailyResourceUsageAggregationNetwork",
          "description": "Network usage."
        },
        "disk": {
          "description": "Disk usage.",
          "$ref": "DailyResourceUsageAggregationDisk"
        },
        "date": {
          "description": "Aggregation date. Day boundaries are at midnight UTC.",
          "$ref": "Date"
        },
        "memory": {
          "$ref": "DailyResourceUsageAggregationMemory",
          "description": "Memory usage."
        }
      },
      "description": "Usage data aggregation for a single day.",
      "id": "DailyResourceUsageAggregation"
    },
    "GuestConfigDetails": {
      "properties": {
        "selinuxMode": {
          "type": "string",
          "enumDescriptions": [
            "SELinux mode unknown or unspecified.",
            "SELinux is disabled.",
            "SELinux permissive mode.",
            "SELinux enforcing mode."
          ],
          "enum": [
            "SE_LINUX_MODE_UNSPECIFIED",
            "SE_LINUX_MODE_DISABLED",
            "SE_LINUX_MODE_PERMISSIVE",
            "SE_LINUX_MODE_ENFORCING"
          ],
          "description": "Security-Enhanced Linux (SELinux) mode."
        },
        "nfsExports": {
          "$ref": "NfsExportList",
          "description": "NFS exports."
        },
        "fstab": {
          "$ref": "FstabEntryList",
          "description": "Mount list (Linux fstab)."
        },
        "issue": {
          "description": "OS issue (typically /etc/issue in Linux).",
          "type": "string"
        },
        "hosts": {
          "description": "Hosts file (/etc/hosts).",
          "$ref": "HostsEntryList"
        }
      },
      "description": "Guest OS config information.",
      "id": "GuestConfigDetails",
      "type": "object"
    },
    "ReportSummaryChartDataDataPoint": {
      "type": "object",
      "id": "ReportSummaryChartDataDataPoint",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The Y-axis value for this data point."
        },
        "label": {
          "type": "string",
          "description": "The X-axis label for this data point."
        }
      },
      "description": "Describes a single data point in the Chart."
    },
    "AggregationResultCount": {
      "id": "AggregationResultCount",
      "properties": {
        "value": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The result of a count aggregation."
    },
    "Location": {
      "properties": {
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        }
      },
      "id": "Location",
      "type": "object",
      "description": "A resource that represents a Google Cloud location."
    },
    "FstabEntryList": {
      "properties": {
        "entries": {
          "type": "array",
          "description": "Fstab entries.",
          "items": {
            "$ref": "FstabEntry"
          }
        }
      },
      "description": "Fstab content.",
      "id": "FstabEntryList",
      "type": "object"
    },
    "ReportAssetFramesResponse": {
      "id": "ReportAssetFramesResponse",
      "description": "A response to a call to `ReportAssetFrame`.",
      "type": "object",
      "properties": {}
    },
    "ListErrorFramesResponse": {
      "properties": {
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "errorFrames": {
          "type": "array",
          "description": "The list of error frames.",
          "items": {
            "$ref": "ErrorFrame"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      },
      "id": "ListErrorFramesResponse",
      "type": "object",
      "description": "A response for listing error frames."
    },
    "NetworkConnection": {
      "type": "object",
      "id": "NetworkConnection",
      "properties": {
        "remotePort": {
          "type": "integer",
          "description": "Remote port.",
          "format": "int32"
        },
        "remoteIpAddress": {
          "type": "string",
          "description": "Remote IP address."
        },
        "localIpAddress": {
          "type": "string",
          "description": "Local IP address."
        },
        "localPort": {
          "format": "int32",
          "type": "integer",
          "description": "Local port."
        },
        "pid": {
          "format": "int64",
          "type": "string",
          "description": "Process ID."
        },
        "processName": {
          "description": "Process or service name.",
          "type": "string"
        },
        "protocol": {
          "type": "string",
          "description": "Connection protocol (e.g. TCP/UDP)."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Connection state is unknown or unspecified.",
            "The connection is being opened.",
            "The connection is open.",
            "Listening for incoming connections.",
            "The connection is being closed.",
            "The connection is closed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "OPENING",
            "OPEN",
            "LISTEN",
            "CLOSING",
            "CLOSED"
          ],
          "description": "Network connection state."
        }
      }
    },
    "Source": {
      "description": "Source represents an object from which asset information is streamed to Migration Center.",
      "type": "object",
      "id": "Source",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The full name of the source."
        },
        "state": {
          "enumDescriptions": [
            "Unspecified.",
            "The source is active and ready to be used.",
            "In the process of being deleted.",
            "Source is in an invalid state. Asset frames reported to it will be ignored."
          ],
          "description": "Output only. The state of the source.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETING",
            "INVALID"
          ],
          "type": "string"
        },
        "errorFrameCount": {
          "readOnly": true,
          "format": "int32",
          "type": "integer",
          "description": "Output only. The number of frames that were reported by the source and contained errors."
        },
        "type": {
          "type": "string",
          "enum": [
            "SOURCE_TYPE_UNKNOWN",
            "SOURCE_TYPE_UPLOAD",
            "SOURCE_TYPE_GUEST_OS_SCAN",
            "SOURCE_TYPE_INVENTORY_SCAN",
            "SOURCE_TYPE_CUSTOM"
          ],
          "enumDescriptions": [
            "Unspecified",
            "Manually uploaded file (e.g. CSV)",
            "Guest-level info",
            "Inventory-level scan",
            "Third-party owned sources."
          ],
          "description": "Data source type."
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the source was created."
        },
        "priority": {
          "format": "int32",
          "type": "integer",
          "description": "The information confidence of the source. The higher the value, the higher the confidence."
        },
        "managed": {
          "description": "If `true`, the source is managed by other service(s).",
          "type": "boolean"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the source was last updated.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "pendingFrameCount": {
          "format": "int32",
          "description": "Output only. Number of frames that are still being processed.",
          "readOnly": true,
          "type": "integer"
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name."
        }
      }
    }
  },
  "title": "Migration Center API",
  "ownerName": "Google",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "rootUrl": "https://migrationcenter.googleapis.com/",
  "id": "migrationcenter:v1",
  "servicePath": "",
  "batchPath": "batch",
  "name": "migrationcenter",
  "fullyEncodeReservedExpansion": true,
  "version_module": true,
  "version": "v1",
  "canonicalName": "Migration Center API",
  "protocol": "rest",
  "ownerDomain": "google.com",
  "basePath": "",
  "revision": "20230804",
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/migration-center",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "description": "A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud."
}

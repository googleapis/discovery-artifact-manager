{
  "servicePath": "",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query"
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                }
              },
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}/locations",
              "description": "Lists information about the supported locations for this service.",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "id": "migrationcenter.projects.locations.list"
            },
            "updateSettings": {
              "id": "migrationcenter.projects.locations.updateSettings",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "Settings"
              },
              "response": {
                "$ref": "Operation"
              },
              "parameters": {
                "updateMask": {
                  "description": "Required. Field mask is used to specify the fields to be overwritten in the `Settings` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query"
                },
                "requestId": {
                  "location": "query",
                  "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                  "type": "string"
                },
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "description": "Output only. The name of the resource.",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "path": "v1/{+name}",
              "description": "Updates the regional-level project settings."
            },
            "getSettings": {
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. Name of the resource."
                }
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "parameterOrder": [
                "name"
              ],
              "id": "migrationcenter.projects.locations.getSettings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Settings"
              },
              "description": "Gets the details of regional settings.",
              "path": "v1/{+name}"
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Location"
              },
              "id": "migrationcenter.projects.locations.get",
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          },
          "resources": {
            "sources": {
              "resources": {
                "errorFrames": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "ListErrorFramesResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames",
                      "parameters": {
                        "view": {
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "description": "Optional. An optional view mode to control the level of details of each error frame. The default is a BASIC frame view.",
                          "type": "string",
                          "location": "query",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ]
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "parent": {
                          "type": "string",
                          "description": "Required. Parent value (the source) for `ListErrorFramesRequest`.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "required": true
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results the server should return."
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "id": "migrationcenter.projects.locations.sources.errorFrames.list",
                      "path": "v1/{+parent}/errorFrames",
                      "description": "Lists all error frames in a given source and location.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/errorFrames/[^/]+$",
                          "description": "Required. The name of the frame to retrieve. Format: projects/{project}/locations/{location}/sources/{source}/errorFrames/{error_frame}"
                        },
                        "view": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. An optional view mode to control the level of details for the frame. The default is a basic frame view.",
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ]
                        }
                      },
                      "description": "Gets the details of an error frame.",
                      "id": "migrationcenter.projects.locations.sources.errorFrames.get",
                      "response": {
                        "$ref": "ErrorFrame"
                      },
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames/{errorFramesId}"
                    }
                  }
                }
              },
              "methods": {
                "patch": {
                  "description": "Updates the parameters of a source.",
                  "id": "migrationcenter.projects.locations.sources.patch",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Source` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "description": "Output only. The full name of the source.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "Source"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "id": "migrationcenter.projects.locations.sources.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "Source"
                  },
                  "parameters": {
                    "sourceId": {
                      "description": "Required. User specified ID for the source. It will become the last component of the source name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. Value for parent.",
                      "location": "path",
                      "required": true
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+parent}/sources",
                  "description": "Creates a new source in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "description": "Deletes a source.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "id": "migrationcenter.projects.locations.sources.delete",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "description": "Lists all the sources in a given project and location.",
                  "path": "v1/{+parent}/sources",
                  "response": {
                    "$ref": "ListSourcesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.sources.list",
                  "parameters": {
                    "filter": {
                      "description": "Filtering results.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value."
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Parent value for `ListSourcesRequest`."
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results that the server should return.",
                      "location": "query",
                      "type": "string"
                    }
                  }
                },
                "get": {
                  "description": "Gets the details of a source.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Source"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$"
                    }
                  },
                  "id": "migrationcenter.projects.locations.sources.get"
                }
              }
            },
            "assets": {
              "methods": {
                "reportAssetFrames": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Frames"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames",
                  "id": "migrationcenter.projects.locations.assets.reportAssetFrames",
                  "description": "Reports a set of frames.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "ReportAssetFramesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent of the resource.",
                      "required": true,
                      "type": "string"
                    },
                    "source": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Reference to a source."
                    }
                  },
                  "path": "v1/{+parent}/assets:reportAssetFrames",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "aggregateValues": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Parent value for `AggregateAssetsValuesRequest`.",
                      "required": true
                    }
                  },
                  "id": "migrationcenter.projects.locations.assets.aggregateValues",
                  "httpMethod": "POST",
                  "description": "Aggregates the requested fields based on provided function.",
                  "request": {
                    "$ref": "AggregateAssetsValuesRequest"
                  },
                  "response": {
                    "$ref": "AggregateAssetsValuesResponse"
                  },
                  "path": "v1/{+parent}/assets:aggregateValues"
                },
                "patch": {
                  "description": "Updates the parameters of an asset.",
                  "response": {
                    "$ref": "Asset"
                  },
                  "id": "migrationcenter.projects.locations.assets.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Asset"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "required": true,
                      "description": "Output only. The full name of the asset.",
                      "type": "string",
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
                    }
                  },
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.assets.list",
                  "description": "Lists all the assets in a given project and location.",
                  "response": {
                    "$ref": "ListAssetsResponse"
                  },
                  "parameters": {
                    "orderBy": {
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string"
                    },
                    "view": {
                      "type": "string",
                      "description": "View of the assets. Defaults to BASIC.",
                      "location": "query",
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL"
                      ],
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data."
                      ]
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Parent value for `ListAssetsRequest`.",
                      "location": "path"
                    },
                    "filter": {
                      "type": "string",
                      "description": "Filtering results.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets",
                  "path": "v1/{+parent}/assets",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "batchUpdate": {
                  "request": {
                    "$ref": "BatchUpdateAssetsRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Updates the parameters of a list of assets.",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for batch asset update.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "BatchUpdateAssetsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets:batchUpdate",
                  "id": "migrationcenter.projects.locations.assets.batchUpdate",
                  "path": "v1/{+parent}/assets:batchUpdate",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.assets.get",
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "description": "Gets the details of an asset.",
                  "parameters": {
                    "view": {
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL"
                      ],
                      "location": "query",
                      "type": "string",
                      "description": "View of the assets. Defaults to BASIC.",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data."
                      ]
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Asset"
                  }
                },
                "batchDelete": {
                  "id": "migrationcenter.projects.locations.assets.batchDelete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Empty"
                  },
                  "request": {
                    "$ref": "BatchDeleteAssetsRequest"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. Parent value for batch asset delete.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets:batchDelete",
                  "description": "Deletes list of Assets.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/assets:batchDelete"
                },
                "delete": {
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "migrationcenter.projects.locations.assets.delete",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "description": "Deletes an asset.",
                  "httpMethod": "DELETE"
                }
              }
            },
            "importJobs": {
              "resources": {
                "importDataFiles": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "ListImportDataFilesResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "format": "int32",
                          "description": "The maximum number of data files to return. The service may return fewer than this value. If unspecified, at most 500 data files will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                        },
                        "parent": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. Name of the parent of the `ImportDataFiles` resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                        },
                        "orderBy": {
                          "type": "string",
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "location": "query"
                        },
                        "pageToken": {
                          "description": "A page token, received from a previous `ListImportDataFiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListImportDataFiles` must match the call that provided the page token.",
                          "type": "string",
                          "location": "query"
                        },
                        "filter": {
                          "type": "string",
                          "description": "Filtering results.",
                          "location": "query"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "description": "List import data files.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.list",
                      "path": "v1/{+parent}/importDataFiles"
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "description": "Delete an import data file.",
                      "path": "v1/{+name}",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.delete",
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "requestId": {
                          "location": "query",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. Name of the ImportDataFile to delete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "required": true
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "create": {
                      "request": {
                        "$ref": "ImportDataFile"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/importDataFiles",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.create",
                      "description": "Creates an import data file.",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. Name of the parent of the ImportDataFile.",
                          "location": "path"
                        },
                        "requestId": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        },
                        "importDataFileId": {
                          "location": "query",
                          "description": "Required. The ID of the new data file.",
                          "type": "string"
                        }
                      }
                    },
                    "get": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets an import data file.",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "ImportDataFile"
                      },
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.get",
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "description": "Required. Name of the ImportDataFile.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+name}",
                      "httpMethod": "GET"
                    }
                  }
                }
              },
              "methods": {
                "create": {
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "description": "Creates an import job.",
                  "path": "v1/{+parent}/importJobs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "importJobId": {
                      "location": "query",
                      "description": "Required. ID of the import job.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. Value for parent.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "id": "migrationcenter.projects.locations.importJobs.create",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "description": "Updates an import job.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "httpMethod": "PATCH",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.patch",
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "description": "Output only. The full name of the import job.",
                      "required": true
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "description": "Deletes an import job.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "id": "migrationcenter.projects.locations.importJobs.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "force": {
                      "description": "Optional. If set to `true`, any `ImportDataFiles` of this job will also be deleted If set to `false`, the request only works if the job has no data files.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "type": "string"
                    }
                  }
                },
                "run": {
                  "request": {
                    "$ref": "RunImportJobRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Runs an import job.",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the import job to run.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run",
                  "id": "migrationcenter.projects.locations.importJobs.run",
                  "path": "v1/{+name}:run",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST"
                },
                "list": {
                  "path": "v1/{+parent}/importJobs",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists all import jobs.",
                  "id": "migrationcenter.projects.locations.importJobs.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for `ListImportJobsRequest`.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filtering results."
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results the server should return."
                    },
                    "view": {
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The level of details of each import job. Default value is BASIC."
                    }
                  },
                  "response": {
                    "$ref": "ListImportJobsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs"
                },
                "validate": {
                  "id": "migrationcenter.projects.locations.importJobs.validate",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ValidateImportJobRequest"
                  },
                  "path": "v1/{+name}:validate",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Validates an import job.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the import job to validate.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                    }
                  },
                  "httpMethod": "POST"
                },
                "get": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ImportJob"
                  },
                  "description": "Gets the details of an import job.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "view": {
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "type": "string",
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "location": "query",
                      "description": "Optional. The level of details of the import job. Default value is FULL."
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the resource."
                    }
                  },
                  "id": "migrationcenter.projects.locations.importJobs.get",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}"
                }
              }
            },
            "reportConfigs": {
              "methods": {
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Value for parent.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "reportConfigId": {
                      "location": "query",
                      "description": "Required. User specified ID for the report config. It will become the last component of the report config name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
                      "type": "string"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "request": {
                    "$ref": "ReportConfig"
                  },
                  "description": "Creates a report configuration.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.reportConfigs.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "path": "v1/{+parent}/reportConfigs",
                  "httpMethod": "POST"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "description": "Deletes a ReportConfig.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "force": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. If set to `true`, any child `Reports` of this entity will also be deleted. If set to `false`, the request only works if the resource has no children."
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "id": "migrationcenter.projects.locations.reportConfigs.delete",
                  "path": "v1/{+name}"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ReportConfig"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets details of a single ReportConfig.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "id": "migrationcenter.projects.locations.reportConfigs.get"
                },
                "list": {
                  "path": "v1/{+parent}/reportConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.reportConfigs.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListReportConfigsResponse"
                  },
                  "description": "Lists ReportConfigs in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. Parent value for `ListReportConfigsRequest`.",
                      "required": true
                    }
                  }
                }
              },
              "resources": {
                "reports": {
                  "methods": {
                    "get": {
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. Name of the resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "location": "path",
                          "required": true
                        },
                        "view": {
                          "location": "query",
                          "description": "Determines what information to retrieve for the Report.",
                          "type": "string",
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ]
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Report"
                      },
                      "description": "Gets details of a single Report.",
                      "path": "v1/{+name}",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.get",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}"
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. Value for parent."
                        },
                        "requestId": {
                          "location": "query",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        },
                        "reportId": {
                          "type": "string",
                          "description": "Required. User specified id for the report. It will become the last component of the report name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The id must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
                          "location": "query"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Creates a report.",
                      "path": "v1/{+parent}/reports",
                      "request": {
                        "$ref": "Report"
                      },
                      "httpMethod": "POST",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports"
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/reports",
                      "response": {
                        "$ref": "ListReportsResponse"
                      },
                      "parameters": {
                        "view": {
                          "location": "query",
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "description": "Determines what information to retrieve for each Report.",
                          "type": "string",
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ]
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Filtering results."
                        },
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                        },
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "description": "Required. Parent value for `ListReportsRequest`.",
                          "type": "string",
                          "location": "path"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A token identifying a page of results that the server should return.",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                          "location": "query",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "description": "Lists Reports in a given ReportConfig.",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.list"
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.delete",
                      "description": "Deletes a Report.",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "description": "Required. Name of the resource.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "required": true
                        }
                      },
                      "httpMethod": "DELETE",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "path": "v1/{+name}"
                    }
                  }
                }
              }
            },
            "groups": {
              "methods": {
                "get": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the details of a group.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Group"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.groups.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListGroupsResponse"
                  },
                  "path": "v1/{+parent}/groups",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.groups.list",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. Parent value for `ListGroupsRequest`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filtering results."
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "description": "Lists all groups in a given project and location."
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "description": "Required. Name of the group resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a group.",
                  "id": "migrationcenter.projects.locations.groups.delete"
                },
                "patch": {
                  "description": "Updates the parameters of a group.",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "required": true,
                      "description": "Output only. The name of the group."
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Group` resource by the update. The values specified in the `update_mask` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.groups.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Group"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "removeAssets": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "group"
                  ],
                  "request": {
                    "$ref": "RemoveAssetsFromGroupRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "group": {
                      "location": "path",
                      "description": "Required. Group reference.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Removes assets from a group.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.groups.removeAssets",
                  "path": "v1/{+group}:removeAssets",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeAssets"
                },
                "addAssets": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "group": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "type": "string",
                      "description": "Required. Group reference.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "migrationcenter.projects.locations.groups.addAssets",
                  "description": "Adds assets to a group.",
                  "path": "v1/{+group}:addAssets",
                  "request": {
                    "$ref": "AddAssetsToGroupRequest"
                  },
                  "parameterOrder": [
                    "group"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addAssets"
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "groupId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`."
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Creates a new group in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups",
                  "request": {
                    "$ref": "Group"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.groups.create",
                  "path": "v1/{+parent}/groups"
                }
              }
            },
            "operations": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation's parent resource."
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "id": "migrationcenter.projects.locations.operations.list",
                  "path": "v1/{+name}/operations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations"
                },
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "migrationcenter.projects.locations.operations.delete",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be deleted.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "cancel": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1/{+name}:cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation resource to be cancelled.",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "id": "migrationcenter.projects.locations.operations.cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.operations.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "path": "v1/{+name}"
                }
              }
            },
            "preferenceSets": {
              "methods": {
                "get": {
                  "response": {
                    "$ref": "PreferenceSet"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Gets the details of a preference set.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "id": "migrationcenter.projects.locations.preferenceSets.get"
                },
                "list": {
                  "httpMethod": "GET",
                  "description": "Lists all the preference sets in a given project and location.",
                  "path": "v1/{+parent}/preferenceSets",
                  "response": {
                    "$ref": "ListPreferenceSetsResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, at most 500 preference sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results the server should return."
                    },
                    "parent": {
                      "description": "Required. Parent value for `ListPreferenceSetsRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.preferenceSets.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.preferenceSets.patch",
                  "path": "v1/{+name}",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `PreferenceSet` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "description": "Output only. Name of the preference set.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "description": "Updates the parameters of a preference set."
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the group resource.",
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a preference set.",
                  "path": "v1/{+name}",
                  "id": "migrationcenter.projects.locations.preferenceSets.delete"
                },
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Value for parent.",
                      "required": true
                    },
                    "preferenceSetId": {
                      "description": "Required. User specified ID for the preference set. It will become the last component of the preference set name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "id": "migrationcenter.projects.locations.preferenceSets.create",
                  "path": "v1/{+parent}/preferenceSets",
                  "httpMethod": "POST",
                  "description": "Creates a new preference set in a given project and location.",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "mtlsRootUrl": "https://migrationcenter.mtls.googleapis.com/",
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "parameters": {
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ]
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "location": "query",
      "description": "Data format for response."
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    }
  },
  "revision": "20230928",
  "ownerDomain": "google.com",
  "name": "migrationcenter",
  "discoveryVersion": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "protocol": "rest",
  "id": "migrationcenter:v1",
  "documentationLink": "https://cloud.google.com/migration-center",
  "basePath": "",
  "rootUrl": "https://migrationcenter.googleapis.com/",
  "canonicalName": "Migration Center API",
  "version": "v1",
  "schemas": {
    "NfsExport": {
      "id": "NfsExport",
      "properties": {
        "exportDirectory": {
          "type": "string",
          "description": "The directory being exported."
        },
        "hosts": {
          "description": "The hosts or networks to which the export is being shared.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "NFS export.",
      "type": "object"
    },
    "ComputeEngineShapeDescriptor": {
      "description": "Compute Engine target shape descriptor.",
      "type": "object",
      "properties": {
        "physicalCoreCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of physical cores."
        },
        "machineType": {
          "type": "string",
          "description": "Compute Engine machine type."
        },
        "series": {
          "type": "string",
          "description": "Compute Engine machine series."
        },
        "storage": {
          "items": {
            "$ref": "ComputeStorageDescriptor"
          },
          "description": "Compute Engine storage. Never empty.",
          "type": "array"
        },
        "logicalCoreCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of logical cores."
        },
        "memoryMb": {
          "type": "integer",
          "format": "int32",
          "description": "Memory in mebibytes."
        }
      },
      "id": "ComputeEngineShapeDescriptor"
    },
    "ComputeEngineMigrationTarget": {
      "description": "Compute engine migration target.",
      "properties": {
        "shape": {
          "$ref": "ComputeEngineShapeDescriptor",
          "description": "Description of the suggested shape for the migration target."
        }
      },
      "type": "object",
      "id": "ComputeEngineMigrationTarget"
    },
    "RuntimeNetworkInfo": {
      "description": "Runtime networking information.",
      "properties": {
        "connections": {
          "$ref": "NetworkConnectionList",
          "description": "Network connections."
        },
        "scanTime": {
          "description": "Time of the last network scan.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "RuntimeNetworkInfo",
      "type": "object"
    },
    "ImportJob": {
      "properties": {
        "assetSource": {
          "description": "Required. Reference to a source.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Optional. User-friendly display name. Maximum length is 256 characters."
        },
        "state": {
          "type": "string",
          "enum": [
            "IMPORT_JOB_STATE_UNSPECIFIED",
            "IMPORT_JOB_STATE_PENDING",
            "IMPORT_JOB_STATE_RUNNING",
            "IMPORT_JOB_STATE_COMPLETED",
            "IMPORT_JOB_STATE_FAILED",
            "IMPORT_JOB_STATE_VALIDATING",
            "IMPORT_JOB_STATE_FAILED_VALIDATION",
            "IMPORT_JOB_STATE_READY"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Default value.",
            "The import job is pending.",
            "The processing of the import job is ongoing.",
            "The import job processing has completed.",
            "The import job failed to be processed.",
            "The import job is being validated.",
            "The import job contains blocking errors.",
            "The validation of the job completed with no blocking errors."
          ],
          "description": "Output only. The state of the import job."
        },
        "executionReport": {
          "$ref": "ExecutionReport",
          "readOnly": true,
          "description": "Output only. The report with the results of running the import job."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "name": {
          "description": "Output only. The full name of the import job.",
          "readOnly": true,
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the import job was last updated.",
          "format": "google-datetime"
        },
        "completeTime": {
          "description": "Output only. The timestamp when the import job was completed.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "validationReport": {
          "$ref": "ValidationReport",
          "readOnly": true,
          "description": "Output only. The report with the validation results of the import job."
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the import job was created.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ImportJob",
      "description": "A resource that represents the background job that imports asset frames."
    },
    "ReportSummaryChartDataDataPoint": {
      "id": "ReportSummaryChartDataDataPoint",
      "properties": {
        "label": {
          "description": "The X-axis label for this data point.",
          "type": "string"
        },
        "value": {
          "format": "double",
          "description": "The Y-axis value for this data point.",
          "type": "number"
        }
      },
      "type": "object",
      "description": "Describes a single data point in the Chart."
    },
    "ReportSummaryGroupFinding": {
      "type": "object",
      "id": "ReportSummaryGroupFinding",
      "description": "Summary Findings for a specific Group.",
      "properties": {
        "preferenceSetFindings": {
          "items": {
            "$ref": "ReportSummaryGroupPreferenceSetFinding"
          },
          "type": "array",
          "description": "Findings for each of the PreferenceSets for this group."
        },
        "overlappingAssetCount": {
          "description": "This field is deprecated, do not rely on it having a value.",
          "deprecated": true,
          "format": "int64",
          "type": "string"
        },
        "displayName": {
          "description": "Display Name for the Group.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Description for the Group."
        },
        "assetAggregateStats": {
          "$ref": "ReportSummaryAssetAggregateStats",
          "description": "Summary statistics for all the assets in this group."
        }
      }
    },
    "FstabEntryList": {
      "properties": {
        "entries": {
          "items": {
            "$ref": "FstabEntry"
          },
          "description": "Fstab entries.",
          "type": "array"
        }
      },
      "description": "Fstab content.",
      "type": "object",
      "id": "FstabEntryList"
    },
    "NetworkAddress": {
      "type": "object",
      "properties": {
        "fqdn": {
          "type": "string",
          "description": "Fully qualified domain name."
        },
        "assignment": {
          "description": "Whether DHCP is used to assign addresses.",
          "type": "string",
          "enumDescriptions": [
            "Unknown (default value).",
            "Staticly assigned IP.",
            "Dynamically assigned IP (DHCP)."
          ],
          "enum": [
            "ADDRESS_ASSIGNMENT_UNSPECIFIED",
            "ADDRESS_ASSIGNMENT_STATIC",
            "ADDRESS_ASSIGNMENT_DHCP"
          ]
        },
        "bcast": {
          "description": "Broadcast address.",
          "type": "string"
        },
        "ipAddress": {
          "type": "string",
          "description": "Assigned or configured IP Address."
        },
        "subnetMask": {
          "type": "string",
          "description": "Subnet mask."
        }
      },
      "description": "Details of network address.",
      "id": "NetworkAddress"
    },
    "ListAssetsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "assets": {
          "type": "array",
          "items": {
            "$ref": "Asset"
          },
          "description": "A list of assets."
        }
      },
      "type": "object",
      "id": "ListAssetsResponse",
      "description": "Response message for listing assets."
    },
    "AggregationSum": {
      "description": "Sum of field values.",
      "properties": {},
      "type": "object",
      "id": "AggregationSum"
    },
    "GenericPlatformDetails": {
      "description": "Generic platform details.",
      "id": "GenericPlatformDetails",
      "properties": {
        "location": {
          "type": "string",
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field."
        }
      },
      "type": "object"
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "type": "object",
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "requestedCancellation": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string"
        },
        "verb": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation."
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string",
          "readOnly": true
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AggregationHistogram": {
      "id": "AggregationHistogram",
      "description": "Histogram of bucketed assets counts by field value.",
      "type": "object",
      "properties": {
        "lowerBounds": {
          "type": "array",
          "description": "Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "MachineArchitectureDetails": {
      "description": "Details of the machine architecture.",
      "type": "object",
      "id": "MachineArchitectureDetails",
      "properties": {
        "bios": {
          "description": "BIOS Details.",
          "$ref": "BiosDetails"
        },
        "cpuArchitecture": {
          "type": "string",
          "description": "CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc."
        },
        "hyperthreading": {
          "description": "CPU hyper-threading support.",
          "enumDescriptions": [
            "Unspecified or unknown.",
            "Hyper-threading is disabled.",
            "Hyper-threading is enabled."
          ],
          "type": "string",
          "enum": [
            "CPU_HYPER_THREADING_UNSPECIFIED",
            "DISABLED",
            "ENABLED"
          ]
        },
        "firmwareType": {
          "description": "Firmware type.",
          "type": "string",
          "enum": [
            "FIRMWARE_TYPE_UNSPECIFIED",
            "BIOS",
            "EFI"
          ],
          "enumDescriptions": [
            "Unspecified or unknown.",
            "BIOS firmware.",
            "EFI firmware."
          ]
        },
        "cpuName": {
          "description": "CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc.",
          "type": "string"
        },
        "cpuThreadCount": {
          "description": "Number of CPU threads allocated to the machine.",
          "type": "integer",
          "format": "int32"
        },
        "vendor": {
          "type": "string",
          "description": "Hardware vendor."
        },
        "cpuSocketCount": {
          "description": "Number of processor sockets allocated to the machine.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Frames": {
      "properties": {
        "framesData": {
          "type": "array",
          "description": "A repeated field of asset data.",
          "items": {
            "$ref": "AssetFrame"
          }
        }
      },
      "description": "Collection of frame data.",
      "id": "Frames",
      "type": "object"
    },
    "ReportAssetFramesResponse": {
      "properties": {},
      "id": "ReportAssetFramesResponse",
      "type": "object",
      "description": "A response to a call to `ReportAssetFrame`."
    },
    "GenericInsight": {
      "type": "object",
      "properties": {
        "additionalInformation": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. Additional information about the insight, each entry can be a logical entry and must make sense if it is displayed with line breaks between each entry. Text can contain md style links."
        },
        "messageId": {
          "format": "int64",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Represents a globally unique message id for this insight, can be used for localization purposes, in case message_code is not yet known by the client use default_message instead."
        },
        "defaultMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. In case message_code is not yet known by the client default_message will be the message to be used instead."
        }
      },
      "id": "GenericInsight",
      "description": "A generic insight about an asset."
    },
    "ListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        }
      },
      "id": "ListLocationsResponse",
      "type": "object",
      "description": "The response message for Locations.ListLocations."
    },
    "FstabEntry": {
      "type": "object",
      "id": "FstabEntry",
      "properties": {
        "passno": {
          "description": "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.",
          "type": "integer",
          "format": "int32"
        },
        "file": {
          "description": "The mount point for the filesystem.",
          "type": "string"
        },
        "vfstype": {
          "type": "string",
          "description": "The type of the filesystem."
        },
        "mntops": {
          "description": "Mount options associated with the filesystem.",
          "type": "string"
        },
        "spec": {
          "type": "string",
          "description": "The block special device or remote filesystem to be mounted."
        },
        "freq": {
          "format": "int32",
          "description": "Used by dump to determine which filesystems need to be dumped.",
          "type": "integer"
        }
      },
      "description": "Single fstab entry."
    },
    "RunningProcess": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "description": "User running the process."
        },
        "pid": {
          "type": "string",
          "description": "Process ID.",
          "format": "int64"
        },
        "cmdline": {
          "description": "Process full command line.",
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "description": "Process extended attributes.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "exePath": {
          "type": "string",
          "description": "Process binary path."
        }
      },
      "id": "RunningProcess",
      "description": "Guest OS running process details."
    },
    "VmwareDiskConfig": {
      "type": "object",
      "id": "VmwareDiskConfig",
      "description": "VMware disk config details.",
      "properties": {
        "backingType": {
          "enumDescriptions": [
            "Default value.",
            "Flat v1.",
            "Flat v2.",
            "Persistent memory, also known as Non-Volatile Memory (NVM).",
            "Raw Disk Memory v1.",
            "Raw Disk Memory v2.",
            "SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.",
            "SEsparse v1.",
            "SEsparse v1."
          ],
          "type": "string",
          "enum": [
            "BACKING_TYPE_UNSPECIFIED",
            "BACKING_TYPE_FLAT_V1",
            "BACKING_TYPE_FLAT_V2",
            "BACKING_TYPE_PMEM",
            "BACKING_TYPE_RDM_V1",
            "BACKING_TYPE_RDM_V2",
            "BACKING_TYPE_SESPARSE",
            "BACKING_TYPE_SESPARSE_V1",
            "BACKING_TYPE_SESPARSE_V2"
          ],
          "description": "VMDK backing type."
        },
        "shared": {
          "type": "boolean",
          "description": "Is VMDK shared with other VMs."
        },
        "rdmCompatibility": {
          "description": "RDM compatibility mode.",
          "type": "string",
          "enumDescriptions": [
            "Compatibility mode unspecified or unknown.",
            "Physical compatibility mode.",
            "Virtual compatibility mode."
          ],
          "enum": [
            "RDM_COMPATIBILITY_UNSPECIFIED",
            "PHYSICAL_COMPATIBILITY",
            "VIRTUAL_COMPATIBILITY"
          ]
        },
        "vmdkMode": {
          "enumDescriptions": [
            "VMDK disk mode unspecified or unknown.",
            "Dependent disk mode.",
            "Independent - Persistent disk mode.",
            "Independent - Nonpersistent disk mode."
          ],
          "enum": [
            "VMDK_MODE_UNSPECIFIED",
            "DEPENDENT",
            "INDEPENDENT_PERSISTENT",
            "INDEPENDENT_NONPERSISTENT"
          ],
          "description": "VMDK disk mode.",
          "type": "string"
        }
      }
    },
    "AssetPerformanceData": {
      "description": "Performance data for an asset.",
      "type": "object",
      "properties": {
        "dailyResourceUsageAggregations": {
          "description": "Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days. Aggregations are sorted from oldest to most recent.",
          "type": "array",
          "items": {
            "$ref": "DailyResourceUsageAggregation"
          }
        }
      },
      "id": "AssetPerformanceData"
    },
    "BatchUpdateAssetsResponse": {
      "type": "object",
      "id": "BatchUpdateAssetsResponse",
      "properties": {
        "assets": {
          "type": "array",
          "description": "Update asset content. The content only includes values after field mask being applied.",
          "items": {
            "$ref": "Asset"
          }
        }
      },
      "description": "Response for updating a list of assets."
    },
    "VmwarePlatformDetails": {
      "id": "VmwarePlatformDetails",
      "description": "VMware specific details.",
      "type": "object",
      "properties": {
        "osid": {
          "description": "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.",
          "type": "string"
        },
        "vcenterVersion": {
          "description": "vCenter version.",
          "type": "string"
        },
        "vcenterVmId": {
          "description": "vCenter VM ID.",
          "type": "string"
        },
        "vcenterUri": {
          "description": "vCenter URI used in collection.",
          "type": "string"
        },
        "esxVersion": {
          "type": "string",
          "description": "ESX version."
        },
        "vcenterFolder": {
          "description": "Folder name in vCenter where asset resides.",
          "type": "string"
        }
      }
    },
    "RunningService": {
      "id": "RunningService",
      "type": "object",
      "properties": {
        "cmdline": {
          "description": "Service command line.",
          "type": "string"
        },
        "pid": {
          "type": "string",
          "description": "Service pid.",
          "format": "int64"
        },
        "startMode": {
          "enum": [
            "START_MODE_UNSPECIFIED",
            "BOOT",
            "SYSTEM",
            "AUTO",
            "MANUAL",
            "DISABLED"
          ],
          "enumDescriptions": [
            "Start mode unspecified.",
            "The service is a device driver started by the system loader.",
            "The service is a device driver started by the IOInitSystem function.",
            "The service is started by the operating system, at system start-up",
            "The service is started only manually, by a user.",
            "The service is disabled."
          ],
          "description": "Service start mode (OS-agnostic).",
          "type": "string"
        },
        "serviceName": {
          "type": "string",
          "description": "Service name."
        },
        "state": {
          "enumDescriptions": [
            "Service state unspecified.",
            "Service is active.",
            "Service is paused.",
            "Service is stopped."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "PAUSED",
            "STOPPED"
          ],
          "type": "string",
          "description": "Service state (OS-agnostic)."
        },
        "exePath": {
          "description": "Service binary path.",
          "type": "string"
        }
      },
      "description": "Guest OS running service details."
    },
    "DailyResourceUsageAggregationMemory": {
      "id": "DailyResourceUsageAggregationMemory",
      "properties": {
        "utilizationPercentage": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Memory utilization percentage."
        }
      },
      "description": "Statistical aggregation of memory usage.",
      "type": "object"
    },
    "ImportRowError": {
      "type": "object",
      "description": "A resource that reports the import job errors at row level.",
      "properties": {
        "vmName": {
          "description": "The name of the VM in the row.",
          "type": "string"
        },
        "errors": {
          "description": "The list of errors detected in the row.",
          "type": "array",
          "items": {
            "$ref": "ImportError"
          }
        },
        "vmUuid": {
          "type": "string",
          "description": "The VM UUID."
        },
        "rowNumber": {
          "format": "int32",
          "type": "integer",
          "deprecated": true,
          "description": "The row number where the error was detected."
        }
      },
      "id": "ImportRowError"
    },
    "ListOperationsResponse": {
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object"
    },
    "ComputeEnginePreferences": {
      "description": "The user preferences relating to Compute Engine target platform.",
      "properties": {
        "machinePreferences": {
          "$ref": "MachinePreferences",
          "description": "Preferences concerning the machine types to consider on Compute Engine."
        },
        "licenseType": {
          "type": "string",
          "description": "License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.",
          "enumDescriptions": [
            "Unspecified (default value).",
            "Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with.",
            "Bring-your-own-license (BYOL) plan. User provides the OS license."
          ],
          "enum": [
            "LICENSE_TYPE_UNSPECIFIED",
            "LICENSE_TYPE_DEFAULT",
            "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE"
          ]
        }
      },
      "type": "object",
      "id": "ComputeEnginePreferences"
    },
    "ReportConfigGroupPreferenceSetAssignment": {
      "properties": {
        "preferenceSet": {
          "description": "Required. Name of the Preference Set.",
          "type": "string"
        },
        "group": {
          "description": "Required. Name of the group.",
          "type": "string"
        }
      },
      "description": "Represents a combination of a group with a preference set.",
      "id": "ReportConfigGroupPreferenceSetAssignment",
      "type": "object"
    },
    "ReportSummaryUtilizationChartData": {
      "properties": {
        "free": {
          "type": "string",
          "description": "Aggregate value which falls into the \"Free\" bucket.",
          "format": "int64"
        },
        "used": {
          "type": "string",
          "format": "int64",
          "description": "Aggregate value which falls into the \"Used\" bucket."
        }
      },
      "type": "object",
      "description": "Utilization Chart is a specific type of visualization which displays a metric classified into \"Used\" and \"Free\" buckets.",
      "id": "ReportSummaryUtilizationChartData"
    },
    "GuestRuntimeDetails": {
      "type": "object",
      "id": "GuestRuntimeDetails",
      "properties": {
        "services": {
          "description": "Running background services.",
          "$ref": "RunningServiceList"
        },
        "installedApps": {
          "description": "Installed applications information.",
          "$ref": "GuestInstalledApplicationList"
        },
        "network": {
          "description": "Runtime network information (connections, ports).",
          "$ref": "RuntimeNetworkInfo"
        },
        "openFileList": {
          "description": "Open files information.",
          "$ref": "OpenFileList"
        },
        "machineName": {
          "description": "Machine name.",
          "type": "string"
        },
        "processes": {
          "description": "Running processes.",
          "$ref": "RunningProcessList"
        },
        "lastBootTime": {
          "format": "google-datetime",
          "description": "Last time the OS was booted.",
          "type": "string"
        },
        "domain": {
          "type": "string",
          "description": "Domain, e.g. c.stratozone-development.internal."
        }
      },
      "description": "Guest OS runtime information."
    },
    "VirtualMachinePreferences": {
      "description": "VirtualMachinePreferences enables you to create sets of assumptions, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets.",
      "properties": {
        "targetProduct": {
          "enumDescriptions": [
            "Unspecified (default value).",
            "Prefer to migrate to Google Cloud Compute Engine.",
            "Prefer to migrate to Google Cloud VMware Engine.",
            "Prefer to migrate to Google Cloud Sole Tenant Nodes."
          ],
          "description": "Target product for assets using this preference set. Specify either target product or business goal, but not both.",
          "type": "string",
          "enum": [
            "COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY"
          ]
        },
        "vmwareEnginePreferences": {
          "$ref": "VmwareEnginePreferences",
          "description": "Preferences concerning insights and recommendations for Google Cloud VMware Engine."
        },
        "computeEnginePreferences": {
          "description": "Compute Engine preferences concern insights and recommendations for Compute Engine target.",
          "$ref": "ComputeEnginePreferences"
        },
        "sizingOptimizationStrategy": {
          "enum": [
            "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED",
            "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE",
            "SIZING_OPTIMIZATION_STRATEGY_MODERATE",
            "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE"
          ],
          "type": "string",
          "description": "Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.",
          "enumDescriptions": [
            "Unspecified (default value).",
            "No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.",
            "Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.",
            "Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs."
          ]
        },
        "regionPreferences": {
          "$ref": "RegionPreferences",
          "description": "Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with."
        },
        "soleTenancyPreferences": {
          "$ref": "SoleTenancyPreferences",
          "description": "Preferences concerning Sole Tenant nodes and virtual machines."
        },
        "commitmentPlan": {
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "COMMITMENT_PLAN_NONE",
            "COMMITMENT_PLAN_ONE_YEAR",
            "COMMITMENT_PLAN_THREE_YEARS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan.",
            "1 year commitment.",
            "3 years commitment."
          ],
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with."
        }
      },
      "id": "VirtualMachinePreferences",
      "type": "object"
    },
    "Insight": {
      "properties": {
        "genericInsight": {
          "description": "Output only. A generic insight about an asset",
          "$ref": "GenericInsight",
          "readOnly": true
        },
        "migrationInsight": {
          "$ref": "MigrationInsight",
          "readOnly": true,
          "description": "Output only. An insight about potential migrations for an asset."
        }
      },
      "id": "Insight",
      "type": "object",
      "description": "An insight about an asset."
    },
    "DiskPartitionList": {
      "id": "DiskPartitionList",
      "properties": {
        "entries": {
          "items": {
            "$ref": "DiskPartition"
          },
          "type": "array",
          "description": "Partition entries."
        }
      },
      "description": "Disk partition list.",
      "type": "object"
    },
    "AggregateAssetsValuesResponse": {
      "type": "object",
      "properties": {
        "results": {
          "items": {
            "$ref": "AggregationResult"
          },
          "type": "array",
          "description": "The aggregation results."
        }
      },
      "id": "AggregateAssetsValuesResponse",
      "description": "A response to a request to aggregated assets values."
    },
    "ListImportDataFilesResponse": {
      "id": "ListImportDataFilesResponse",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "importDataFiles": {
          "items": {
            "$ref": "ImportDataFile"
          },
          "description": "The list of import data files.",
          "type": "array"
        }
      },
      "description": "Response for listing payload files of an import job.",
      "type": "object"
    },
    "ErrorFrame": {
      "properties": {
        "originalFrame": {
          "readOnly": true,
          "$ref": "AssetFrame",
          "description": "Output only. The frame that was originally reported."
        },
        "ingestionTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Frame ingestion time.",
          "format": "google-datetime"
        },
        "violations": {
          "readOnly": true,
          "description": "Output only. All the violations that were detected for the frame.",
          "items": {
            "$ref": "FrameViolationEntry"
          },
          "type": "array"
        },
        "name": {
          "description": "Output only. The identifier of the ErrorFrame.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Message representing a frame which failed to be processed due to an error.",
      "type": "object",
      "id": "ErrorFrame"
    },
    "DiskUsageSample": {
      "id": "DiskUsageSample",
      "type": "object",
      "properties": {
        "averageIops": {
          "format": "float",
          "type": "number",
          "description": "Average IOPS sampled over a short window. Must be non-negative."
        }
      },
      "description": "Disk usage sample. Values are across all disks."
    },
    "DailyResourceUsageAggregationCPU": {
      "description": "Statistical aggregation of CPU usage.",
      "type": "object",
      "properties": {
        "utilizationPercentage": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "CPU utilization percentage."
        }
      },
      "id": "DailyResourceUsageAggregationCPU"
    },
    "AggregationResultSum": {
      "id": "AggregationResultSum",
      "properties": {
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object",
      "description": "The result of a sum aggregation."
    },
    "CpuUsageSample": {
      "description": "CPU usage sample.",
      "id": "CpuUsageSample",
      "properties": {
        "utilizedPercentage": {
          "type": "number",
          "description": "Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.",
          "format": "float"
        }
      },
      "type": "object"
    },
    "ValidationReport": {
      "properties": {
        "fileValidations": {
          "type": "array",
          "items": {
            "$ref": "FileValidationReport"
          },
          "description": "List of errors found in files."
        },
        "jobErrors": {
          "items": {
            "$ref": "ImportError"
          },
          "description": "List of job level errors.",
          "type": "array"
        }
      },
      "description": "A resource that aggregates errors across import job files.",
      "type": "object",
      "id": "ValidationReport"
    },
    "BiosDetails": {
      "id": "BiosDetails",
      "description": "Details about the BIOS.",
      "type": "object",
      "properties": {
        "version": {
          "description": "BIOS version.",
          "type": "string"
        },
        "biosName": {
          "deprecated": true,
          "type": "string",
          "description": "BIOS name. This fields is deprecated. Please use the `id` field instead."
        },
        "releaseDate": {
          "$ref": "Date",
          "description": "BIOS release date."
        },
        "id": {
          "description": "BIOS ID.",
          "type": "string"
        },
        "manufacturer": {
          "description": "BIOS manufacturer.",
          "type": "string"
        },
        "smbiosUuid": {
          "type": "string",
          "description": "SMBIOS UUID."
        }
      }
    },
    "OpenFileDetails": {
      "id": "OpenFileDetails",
      "properties": {
        "user": {
          "type": "string",
          "description": "Opened file user."
        },
        "command": {
          "description": "Opened file command.",
          "type": "string"
        },
        "filePath": {
          "description": "Opened file file path.",
          "type": "string"
        },
        "fileType": {
          "type": "string",
          "description": "Opened file file type."
        }
      },
      "type": "object",
      "description": "Open file Information."
    },
    "ReportSummaryVmwareNode": {
      "description": "A VMWare Engine Node",
      "id": "ReportSummaryVmwareNode",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Code to identify VMware Engine node series, e.g. \"ve1-standard-72\". Based on the displayName of cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.nodeTypes"
        }
      }
    },
    "AggregationResultCount": {
      "properties": {
        "value": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "The result of a count aggregation.",
      "id": "AggregationResultCount",
      "type": "object"
    },
    "AggregationFrequency": {
      "description": "Frequency distribution of all field values.",
      "type": "object",
      "properties": {},
      "id": "AggregationFrequency"
    },
    "DiskEntry": {
      "properties": {
        "interfaceType": {
          "description": "Disks interface type.",
          "enumDescriptions": [
            "Interface type unknown or unspecified.",
            "IDE interface type.",
            "SATA interface type.",
            "SAS interface type.",
            "SCSI interface type.",
            "NVME interface type.",
            "FC interface type.",
            "iSCSI interface type."
          ],
          "type": "string",
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "IDE",
            "SATA",
            "SAS",
            "SCSI",
            "NVME",
            "FC",
            "ISCSI"
          ]
        },
        "vmware": {
          "$ref": "VmwareDiskConfig",
          "description": "VMware disk details."
        },
        "hwAddress": {
          "description": "Disk hardware address (e.g. 0:1 for SCSI).",
          "type": "string"
        },
        "diskLabelType": {
          "description": "Disk label type (e.g. BIOS/GPT)",
          "type": "string"
        },
        "freeBytes": {
          "type": "string",
          "description": "Disk free space.",
          "format": "int64"
        },
        "diskLabel": {
          "description": "Disk label.",
          "type": "string"
        },
        "capacityBytes": {
          "description": "Disk capacity.",
          "type": "string",
          "format": "int64"
        },
        "partitions": {
          "description": "Partition layout.",
          "$ref": "DiskPartitionList"
        }
      },
      "description": "Single disk entry.",
      "id": "DiskEntry",
      "type": "object"
    },
    "GuestInstalledApplication": {
      "properties": {
        "version": {
          "type": "string",
          "description": "Installed application version."
        },
        "path": {
          "description": "Source path.",
          "type": "string"
        },
        "installTime": {
          "format": "google-datetime",
          "description": "The time when the application was installed.",
          "type": "string"
        },
        "vendor": {
          "type": "string",
          "description": "Installed application vendor."
        },
        "applicationName": {
          "type": "string",
          "description": "Installed application name."
        }
      },
      "id": "GuestInstalledApplication",
      "description": "Guest installed application information.",
      "type": "object"
    },
    "ListSourcesResponse": {
      "type": "object",
      "properties": {
        "sources": {
          "type": "array",
          "description": "The list of sources.",
          "items": {
            "$ref": "Source"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "ListSourcesResponse",
      "description": "Response message for listing sources."
    },
    "MachineDetails": {
      "type": "object",
      "description": "Details of a machine.",
      "properties": {
        "architecture": {
          "$ref": "MachineArchitectureDetails",
          "description": "Architecture details (vendor, CPU architecture)."
        },
        "disks": {
          "$ref": "MachineDiskDetails",
          "description": "Disk details."
        },
        "guestOs": {
          "$ref": "GuestOsDetails",
          "description": "Guest OS information."
        },
        "coreCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of CPU cores in the machine. Must be non-negative."
        },
        "machineName": {
          "type": "string",
          "description": "Machine name."
        },
        "uuid": {
          "description": "Machine unique identifier.",
          "type": "string"
        },
        "network": {
          "description": "Network details.",
          "$ref": "MachineNetworkDetails"
        },
        "powerState": {
          "enumDescriptions": [
            "Power state is unknown.",
            "The machine is preparing to enter the ACTIVE state. An instance may enter the PENDING state when it launches for the first time, or when it is started after being in the SUSPENDED state.",
            "The machine is active.",
            "The machine is being turned off.",
            "The machine is off.",
            "The machine is being deleted from the hosting platform.",
            "The machine is deleted from the hosting platform."
          ],
          "type": "string",
          "description": "Power state of the machine.",
          "enum": [
            "POWER_STATE_UNSPECIFIED",
            "PENDING",
            "ACTIVE",
            "SUSPENDING",
            "SUSPENDED",
            "DELETING",
            "DELETED"
          ]
        },
        "platform": {
          "$ref": "PlatformDetails",
          "description": "Platform specific information."
        },
        "createTime": {
          "type": "string",
          "description": "Machine creation time.",
          "format": "google-datetime"
        },
        "memoryMb": {
          "type": "integer",
          "description": "The amount of memory in the machine. Must be non-negative.",
          "format": "int32"
        }
      },
      "id": "MachineDetails"
    },
    "AggregateAssetsValuesRequest": {
      "properties": {
        "filter": {
          "type": "string",
          "description": "The aggregation will be performed on assets that match the provided filter."
        },
        "aggregations": {
          "items": {
            "$ref": "Aggregation"
          },
          "description": "Array of aggregations to perform. Up to 25 aggregations can be defined.",
          "type": "array"
        }
      },
      "id": "AggregateAssetsValuesRequest",
      "type": "object",
      "description": "A request to aggregate one or more values."
    },
    "PerformanceSample": {
      "properties": {
        "network": {
          "$ref": "NetworkUsageSample",
          "description": "Network usage sample."
        },
        "sampleTime": {
          "format": "google-datetime",
          "description": "Time the sample was collected. If omitted, the frame report time will be used.",
          "type": "string"
        },
        "cpu": {
          "description": "CPU usage sample.",
          "$ref": "CpuUsageSample"
        },
        "disk": {
          "description": "Disk usage sample.",
          "$ref": "DiskUsageSample"
        },
        "memory": {
          "description": "Memory usage sample.",
          "$ref": "MemoryUsageSample"
        }
      },
      "description": "Performance data sample.",
      "type": "object",
      "id": "PerformanceSample"
    },
    "GuestConfigDetails": {
      "description": "Guest OS config information.",
      "id": "GuestConfigDetails",
      "type": "object",
      "properties": {
        "nfsExports": {
          "description": "NFS exports.",
          "$ref": "NfsExportList"
        },
        "hosts": {
          "description": "Hosts file (/etc/hosts).",
          "$ref": "HostsEntryList"
        },
        "fstab": {
          "$ref": "FstabEntryList",
          "description": "Mount list (Linux fstab)."
        },
        "selinuxMode": {
          "description": "Security-Enhanced Linux (SELinux) mode.",
          "enum": [
            "SE_LINUX_MODE_UNSPECIFIED",
            "SE_LINUX_MODE_DISABLED",
            "SE_LINUX_MODE_PERMISSIVE",
            "SE_LINUX_MODE_ENFORCING"
          ],
          "type": "string",
          "enumDescriptions": [
            "SELinux mode unknown or unspecified.",
            "SELinux is disabled.",
            "SELinux permissive mode.",
            "SELinux enforcing mode."
          ]
        },
        "issue": {
          "type": "string",
          "description": "OS issue (typically /etc/issue in Linux)."
        }
      }
    },
    "DailyResourceUsageAggregation": {
      "description": "Usage data aggregation for a single day.",
      "properties": {
        "cpu": {
          "$ref": "DailyResourceUsageAggregationCPU",
          "description": "CPU usage."
        },
        "date": {
          "$ref": "Date",
          "description": "Aggregation date. Day boundaries are at midnight UTC."
        },
        "network": {
          "description": "Network usage.",
          "$ref": "DailyResourceUsageAggregationNetwork"
        },
        "disk": {
          "description": "Disk usage.",
          "$ref": "DailyResourceUsageAggregationDisk"
        },
        "memory": {
          "description": "Memory usage.",
          "$ref": "DailyResourceUsageAggregationMemory"
        }
      },
      "id": "DailyResourceUsageAggregation",
      "type": "object"
    },
    "RunningProcessList": {
      "type": "object",
      "description": "List of running guest OS processes.",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "RunningProcess"
          },
          "description": "Running process entries."
        }
      },
      "id": "RunningProcessList"
    },
    "AggregationResultFrequency": {
      "type": "object",
      "id": "AggregationResultFrequency",
      "properties": {
        "values": {
          "additionalProperties": {
            "format": "int64",
            "type": "string"
          },
          "type": "object"
        }
      },
      "description": "The result of a frequency distribution aggregation."
    },
    "MigrationInsight": {
      "id": "MigrationInsight",
      "type": "object",
      "properties": {
        "computeEngineTarget": {
          "$ref": "ComputeEngineMigrationTarget",
          "description": "Output only. A Google Compute Engine target.",
          "readOnly": true
        },
        "fit": {
          "readOnly": true,
          "$ref": "FitDescriptor",
          "description": "Output only. Description of how well the asset this insight is associated with fits the proposed migration."
        }
      },
      "description": "An insight about potential migrations for an asset."
    },
    "MachinePreferences": {
      "type": "object",
      "properties": {
        "allowedMachineSeries": {
          "items": {
            "$ref": "MachineSeries"
          },
          "type": "array",
          "description": "Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series."
        }
      },
      "id": "MachinePreferences",
      "description": "The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions."
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        }
      }
    },
    "RemoveAssetsFromGroupRequest": {
      "id": "RemoveAssetsFromGroupRequest",
      "type": "object",
      "description": "A request to remove assets from a group.",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        },
        "allowMissing": {
          "description": "Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.",
          "type": "boolean"
        },
        "assets": {
          "$ref": "AssetList",
          "description": "Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000."
        }
      }
    },
    "ListGroupsResponse": {
      "description": "A response for listing groups.",
      "id": "ListGroupsResponse",
      "type": "object",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "groups": {
          "description": "The list of Group",
          "items": {
            "$ref": "Group"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      }
    },
    "AssetList": {
      "id": "AssetList",
      "type": "object",
      "properties": {
        "assetIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. A list of asset IDs"
        }
      },
      "description": "Lists the asset IDs of all assets."
    },
    "GuestInstalledApplicationList": {
      "description": "Guest installed application list.",
      "id": "GuestInstalledApplicationList",
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "GuestInstalledApplication"
          },
          "description": "Application entries.",
          "type": "array"
        }
      }
    },
    "ReportSummary": {
      "id": "ReportSummary",
      "properties": {
        "allAssetsStats": {
          "$ref": "ReportSummaryAssetAggregateStats",
          "description": "Aggregate statistics for all the assets across all the groups."
        },
        "groupFindings": {
          "items": {
            "$ref": "ReportSummaryGroupFinding"
          },
          "type": "array",
          "description": "Findings for each Group included in this report."
        }
      },
      "description": "Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report.",
      "type": "object"
    },
    "AggregationResult": {
      "id": "AggregationResult",
      "properties": {
        "frequency": {
          "$ref": "AggregationResultFrequency"
        },
        "sum": {
          "$ref": "AggregationResultSum"
        },
        "field": {
          "type": "string"
        },
        "count": {
          "$ref": "AggregationResultCount"
        },
        "histogram": {
          "$ref": "AggregationResultHistogram"
        }
      },
      "type": "object",
      "description": "Message describing a result of an aggregation."
    },
    "NfsExportList": {
      "properties": {
        "entries": {
          "description": "NFS export entries.",
          "type": "array",
          "items": {
            "$ref": "NfsExport"
          }
        }
      },
      "description": "NFS exports.",
      "type": "object",
      "id": "NfsExportList"
    },
    "Settings": {
      "properties": {
        "preferenceSet": {
          "type": "string",
          "description": "The preference set used by default for a project."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the resource.",
          "type": "string"
        }
      },
      "description": "Describes the Migration Center settings related to the project.",
      "type": "object",
      "id": "Settings"
    },
    "SoleTenancyPreferences": {
      "id": "SoleTenancyPreferences",
      "description": "Preferences concerning Sole Tenancy nodes and VMs.",
      "type": "object",
      "properties": {
        "nodeTypes": {
          "type": "array",
          "items": {
            "$ref": "SoleTenantNodeType"
          },
          "description": "A list of sole tenant node types. An empty list means that all possible node types will be considered."
        },
        "cpuOvercommitRatio": {
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.",
          "format": "double",
          "type": "number"
        },
        "commitmentPlan": {
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment.",
            "3 years commitment."
          ],
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR",
            "COMMITMENT_3_YEAR"
          ],
          "type": "string"
        },
        "hostMaintenancePolicy": {
          "description": "Sole Tenancy nodes maintenance policy.",
          "enumDescriptions": [
            "Unspecified host maintenance policy.",
            "Default host maintenance policy.",
            "Restart in place host maintenance policy.",
            "Migrate within node group host maintenance policy."
          ],
          "enum": [
            "HOST_MAINTENANCE_POLICY_UNSPECIFIED",
            "HOST_MAINTENANCE_POLICY_DEFAULT",
            "HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE",
            "HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP"
          ],
          "type": "string"
        }
      }
    },
    "PlatformDetails": {
      "type": "object",
      "id": "PlatformDetails",
      "properties": {
        "genericDetails": {
          "description": "Generic platform details.",
          "$ref": "GenericPlatformDetails"
        },
        "azureVmDetails": {
          "$ref": "AzureVmPlatformDetails",
          "description": "Azure VM specific details."
        },
        "physicalDetails": {
          "description": "Physical machines platform details.",
          "$ref": "PhysicalPlatformDetails"
        },
        "awsEc2Details": {
          "$ref": "AwsEc2PlatformDetails",
          "description": "AWS EC2 specific details."
        },
        "vmwareDetails": {
          "$ref": "VmwarePlatformDetails",
          "description": "VMware specific details."
        }
      },
      "description": "Information about the platform."
    },
    "RunningServiceList": {
      "description": "List of running guest OS services.",
      "type": "object",
      "id": "RunningServiceList",
      "properties": {
        "entries": {
          "items": {
            "$ref": "RunningService"
          },
          "description": "Running service entries.",
          "type": "array"
        }
      }
    },
    "FitDescriptor": {
      "properties": {
        "fitLevel": {
          "enumDescriptions": [
            "Not enough information.",
            "Fit.",
            "No Fit.",
            "Fit with effort."
          ],
          "type": "string",
          "description": "Fit level.",
          "enum": [
            "FIT_LEVEL_UNSPECIFIED",
            "FIT",
            "NO_FIT",
            "REQUIRES_EFFORT"
          ]
        }
      },
      "id": "FitDescriptor",
      "type": "object",
      "description": "Describes the fit level of an asset for migration to a specific target."
    },
    "RegionPreferences": {
      "id": "RegionPreferences",
      "description": "The user preferences relating to target regions.",
      "type": "object",
      "properties": {
        "preferredRegions": {
          "items": {
            "type": "string"
          },
          "description": "A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.",
          "type": "array"
        }
      }
    },
    "SoleTenantNodeType": {
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes"
        }
      },
      "description": "A Sole Tenant node type.",
      "id": "SoleTenantNodeType",
      "type": "object"
    },
    "DailyResourceUsageAggregationNetwork": {
      "properties": {
        "egressBps": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Network egress in B/s."
        },
        "ingressBps": {
          "description": "Network ingress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "description": "Statistical aggregation of network usage.",
      "type": "object",
      "id": "DailyResourceUsageAggregationNetwork"
    },
    "ReportSummarySoleTenantNodeAllocation": {
      "type": "object",
      "description": "Represents the assets allocated to a specific Sole-Tenant node type.",
      "properties": {
        "nodeCount": {
          "format": "int64",
          "description": "Count of this node type to be provisioned",
          "type": "string"
        },
        "allocatedAssetCount": {
          "type": "string",
          "description": "Count of assets allocated to these nodes",
          "format": "int64"
        },
        "node": {
          "$ref": "SoleTenantNodeType",
          "description": "Sole Tenant node type, e.g. \"m3-node-128-3904\""
        }
      },
      "id": "ReportSummarySoleTenantNodeAllocation"
    },
    "NetworkConnectionList": {
      "type": "object",
      "properties": {
        "entries": {
          "description": "Network connection entries.",
          "items": {
            "$ref": "NetworkConnection"
          },
          "type": "array"
        }
      },
      "id": "NetworkConnectionList",
      "description": "Network connection list."
    },
    "AggregationCount": {
      "properties": {},
      "id": "AggregationCount",
      "description": "Object count.",
      "type": "object"
    },
    "OpenFileList": {
      "properties": {
        "entries": {
          "type": "array",
          "description": "Open file details entries.",
          "items": {
            "$ref": "OpenFileDetails"
          }
        }
      },
      "id": "OpenFileList",
      "type": "object",
      "description": "Open file list."
    },
    "ListReportsResponse": {
      "id": "ListReportsResponse",
      "type": "object",
      "properties": {
        "reports": {
          "type": "array",
          "description": "The list of Reports.",
          "items": {
            "$ref": "Report"
          }
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      },
      "description": "Response message for listing Reports."
    },
    "AddAssetsToGroupRequest": {
      "id": "AddAssetsToGroupRequest",
      "description": "A request to add assets to a group.",
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        },
        "allowExisting": {
          "description": "Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.",
          "type": "boolean"
        },
        "assets": {
          "$ref": "AssetList",
          "description": "Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000."
        }
      }
    },
    "ExecutionReport": {
      "description": "A resource that reports result of the import job execution.",
      "id": "ExecutionReport",
      "type": "object",
      "properties": {
        "framesReported": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of asset frames reported for the import job."
        },
        "executionErrors": {
          "description": "Validation errors encountered during the execution of the import job.",
          "$ref": "ValidationReport"
        },
        "totalRowsCount": {
          "readOnly": true,
          "type": "integer",
          "description": "Output only. Total number of rows in the import job.",
          "format": "int32"
        }
      }
    },
    "ReportSummaryAssetAggregateStats": {
      "description": "Aggregate statistics for a collection of assets.",
      "id": "ReportSummaryAssetAggregateStats",
      "properties": {
        "totalAssets": {
          "description": "Count of the number of unique assets in this collection.",
          "type": "string",
          "format": "int64"
        },
        "coreCountHistogram": {
          "description": "Histogram showing a distribution of CPU core counts.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "storageBytesHistogram": {
          "$ref": "ReportSummaryHistogramChartData",
          "description": "Histogram showing a distribution of memory sizes."
        },
        "storageUtilizationChart": {
          "$ref": "ReportSummaryUtilizationChartData",
          "description": "Total memory split into Used/Free buckets."
        },
        "totalCores": {
          "description": "Sum of the CPU core count of all the assets in this collection.",
          "format": "int64",
          "type": "string"
        },
        "operatingSystem": {
          "description": "Count of assets grouped by Operating System families.",
          "$ref": "ReportSummaryChartData"
        },
        "totalStorageBytes": {
          "description": "Sum of persistent storage in bytes of all the assets in this collection.",
          "type": "string",
          "format": "int64"
        },
        "memoryUtilizationChart": {
          "$ref": "ReportSummaryUtilizationChartData",
          "description": "Total memory split into Used/Free buckets."
        },
        "totalMemoryBytes": {
          "description": "Sum of the memory in bytes of all the assets in this collection.",
          "format": "int64",
          "type": "string"
        },
        "memoryBytesHistogram": {
          "description": "Histogram showing a distribution of memory sizes.",
          "$ref": "ReportSummaryHistogramChartData"
        }
      },
      "type": "object"
    },
    "VmwareEnginePreferences": {
      "properties": {
        "storageDeduplicationCompressionRatio": {
          "description": "The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.",
          "format": "double",
          "type": "number"
        },
        "commitmentPlan": {
          "type": "string",
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_3_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_1_YEAR_UPFRONT_PAYMENT",
            "COMMITMENT_3_YEAR_UPFRONT_PAYMENT"
          ],
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment (monthly payments).",
            "3 year commitment (monthly payments).",
            "1 year commitment (upfront payment).",
            "3 years commitment (upfront payment)."
          ],
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with."
        },
        "cpuOvercommitRatio": {
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment.",
          "format": "double",
          "type": "number"
        },
        "memoryOvercommitRatio": {
          "format": "double",
          "type": "number",
          "description": "Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0."
        }
      },
      "type": "object",
      "description": "The user preferences relating to Google Cloud VMware Engine target platform.",
      "id": "VmwareEnginePreferences"
    },
    "MemoryUsageSample": {
      "description": "Memory usage sample.",
      "id": "MemoryUsageSample",
      "type": "object",
      "properties": {
        "utilizedPercentage": {
          "format": "float",
          "type": "number",
          "description": "Percentage of system memory utilized. Must be in the interval [0, 100]."
        }
      }
    },
    "NetworkAdapterDetails": {
      "id": "NetworkAdapterDetails",
      "properties": {
        "addresses": {
          "$ref": "NetworkAddressList",
          "description": "NetworkAddressList"
        },
        "adapterType": {
          "type": "string",
          "description": "Network adapter type (e.g. VMXNET3)."
        },
        "macAddress": {
          "type": "string",
          "description": "MAC address."
        }
      },
      "description": "Details of network adapter.",
      "type": "object"
    },
    "AggregationResultHistogramBucket": {
      "type": "object",
      "id": "AggregationResultHistogramBucket",
      "properties": {
        "upperBound": {
          "type": "number",
          "format": "double",
          "description": "Upper bound - exclusive."
        },
        "count": {
          "type": "string",
          "description": "Count of items in the bucket.",
          "format": "int64"
        },
        "lowerBound": {
          "description": "Lower bound - inclusive.",
          "type": "number",
          "format": "double"
        }
      },
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity."
    },
    "DailyResourceUsageAggregationStats": {
      "properties": {
        "peak": {
          "type": "number",
          "description": "Peak usage value.",
          "format": "float"
        },
        "average": {
          "description": "Average usage value.",
          "type": "number",
          "format": "float"
        },
        "ninteyFifthPercentile": {
          "format": "float",
          "type": "number",
          "description": "95th percentile usage value."
        },
        "median": {
          "type": "number",
          "description": "Median usage value.",
          "format": "float"
        }
      },
      "type": "object",
      "id": "DailyResourceUsageAggregationStats",
      "description": "Statistical aggregation of samples for a single resource usage."
    },
    "MachineSeries": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series."
        }
      },
      "id": "MachineSeries",
      "type": "object",
      "description": "A Compute Engine machine series."
    },
    "MachineNetworkDetails": {
      "properties": {
        "primaryMacAddress": {
          "type": "string",
          "description": "MAC address of the machine. This property is used to uniqly identify the machine."
        },
        "publicIpAddress": {
          "type": "string",
          "description": "The public IP address of the machine."
        },
        "primaryIpAddress": {
          "description": "The primary IP address of the machine.",
          "type": "string"
        },
        "adapters": {
          "description": "List of network adapters.",
          "$ref": "NetworkAdapterList"
        }
      },
      "id": "MachineNetworkDetails",
      "description": "Details of network adapters and settings.",
      "type": "object"
    },
    "HostsEntry": {
      "type": "object",
      "id": "HostsEntry",
      "description": "Single /etc/hosts entry.",
      "properties": {
        "ip": {
          "description": "IP (raw, IPv4/6 agnostic).",
          "type": "string"
        },
        "hostNames": {
          "description": "List of host names / aliases.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ReportSummarySoleTenantFinding": {
      "type": "object",
      "description": "A set of findings that applies to assets destined for Sole-Tenant nodes.",
      "properties": {
        "allocatedAssetCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of assets which are allocated"
        },
        "nodeAllocations": {
          "items": {
            "$ref": "ReportSummarySoleTenantNodeAllocation"
          },
          "type": "array",
          "description": "Set of per-nodetype allocation records"
        },
        "allocatedRegions": {
          "description": "Set of regions in which the assets are allocated",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "ReportSummarySoleTenantFinding"
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "type": "object",
      "description": "The request message for Operations.CancelOperation.",
      "properties": {}
    },
    "ReportSummaryChartData": {
      "type": "object",
      "id": "ReportSummaryChartData",
      "properties": {
        "dataPoints": {
          "items": {
            "$ref": "ReportSummaryChartDataDataPoint"
          },
          "type": "array",
          "description": "Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value."
        }
      },
      "description": "Describes a collection of data points rendered as a Chart."
    },
    "ReportSummaryComputeEngineFinding": {
      "description": "A set of findings that applies to assets destined for Compute Engine.",
      "properties": {
        "allocatedDiskTypes": {
          "description": "Set of disk types allocated to assets.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "PERSISTENT_DISK_TYPE_UNSPECIFIED",
              "PERSISTENT_DISK_TYPE_STANDARD",
              "PERSISTENT_DISK_TYPE_BALANCED",
              "PERSISTENT_DISK_TYPE_SSD"
            ],
            "enumDescriptions": [
              "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
              "Standard HDD Persistent Disk.",
              "Balanced Persistent Disk.",
              "SSD Persistent Disk."
            ]
          }
        },
        "allocatedAssetCount": {
          "description": "Count of assets which were allocated.",
          "format": "int64",
          "type": "string"
        },
        "machineSeriesAllocations": {
          "type": "array",
          "items": {
            "$ref": "ReportSummaryMachineSeriesAllocation"
          },
          "description": "Distribution of assets based on the Machine Series."
        },
        "allocatedRegions": {
          "type": "array",
          "description": "Set of regions in which the assets were allocated.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ReportSummaryComputeEngineFinding",
      "type": "object"
    },
    "DiskPartition": {
      "id": "DiskPartition",
      "type": "object",
      "properties": {
        "capacityBytes": {
          "format": "int64",
          "type": "string",
          "description": "Partition capacity."
        },
        "subPartitions": {
          "$ref": "DiskPartitionList",
          "description": "Sub-partitions."
        },
        "type": {
          "description": "Partition type.",
          "type": "string"
        },
        "mountPoint": {
          "description": "Mount pount (Linux/Windows) or drive letter (Windows).",
          "type": "string"
        },
        "fileSystem": {
          "description": "Partition file system.",
          "type": "string"
        },
        "uuid": {
          "description": "Partition UUID.",
          "type": "string"
        },
        "freeBytes": {
          "format": "int64",
          "type": "string",
          "description": "Partition free space."
        }
      },
      "description": "Disk Partition details."
    },
    "PhysicalPlatformDetails": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field."
        }
      },
      "id": "PhysicalPlatformDetails",
      "description": "Platform specific details for Physical Machines.",
      "type": "object"
    },
    "NetworkConnection": {
      "id": "NetworkConnection",
      "type": "object",
      "properties": {
        "processName": {
          "type": "string",
          "description": "Process or service name."
        },
        "remoteIpAddress": {
          "description": "Remote IP address.",
          "type": "string"
        },
        "localPort": {
          "type": "integer",
          "description": "Local port.",
          "format": "int32"
        },
        "pid": {
          "format": "int64",
          "type": "string",
          "description": "Process ID."
        },
        "localIpAddress": {
          "description": "Local IP address.",
          "type": "string"
        },
        "remotePort": {
          "type": "integer",
          "description": "Remote port.",
          "format": "int32"
        },
        "protocol": {
          "type": "string",
          "description": "Connection protocol (e.g. TCP/UDP)."
        },
        "state": {
          "description": "Network connection state.",
          "enum": [
            "STATE_UNSPECIFIED",
            "OPENING",
            "OPEN",
            "LISTEN",
            "CLOSING",
            "CLOSED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Connection state is unknown or unspecified.",
            "The connection is being opened.",
            "The connection is open.",
            "Listening for incoming connections.",
            "The connection is being closed.",
            "The connection is closed."
          ]
        }
      }
    },
    "Status": {
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      }
    },
    "InsightList": {
      "description": "Message containing insights list.",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. Update timestamp.",
          "format": "google-datetime",
          "readOnly": true
        },
        "insights": {
          "description": "Output only. Insights of the list.",
          "items": {
            "$ref": "Insight"
          },
          "type": "array",
          "readOnly": true
        }
      },
      "id": "InsightList",
      "type": "object"
    },
    "ImportDataFile": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "The data file is being created.",
            "The data file completed initialization."
          ],
          "description": "Output only. The state of the import data file.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE"
          ],
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the file."
        },
        "format": {
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually and following the StratoZone format. For more information, see Manually create and upload data tables."
          ],
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_STRATOZONE_CSV"
          ],
          "description": "Required. The payload format."
        },
        "createTime": {
          "description": "Output only. The timestamp when the file was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "uploadFileInfo": {
          "description": "Information about a file that is uploaded to a storage service.",
          "$ref": "UploadFileInfo"
        }
      },
      "id": "ImportDataFile",
      "description": "A resource that represents a payload file in an import job."
    },
    "ListErrorFramesResponse": {
      "description": "A response for listing error frames.",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "errorFrames": {
          "type": "array",
          "items": {
            "$ref": "ErrorFrame"
          },
          "description": "The list of error frames."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        }
      },
      "id": "ListErrorFramesResponse",
      "type": "object"
    },
    "Group": {
      "type": "object",
      "description": "A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups.",
      "id": "Group",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the group was created."
        },
        "displayName": {
          "description": "User-friendly display name.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The timestamp when the group was last updated.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the group."
        },
        "description": {
          "type": "string",
          "description": "The description of the resource."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        }
      }
    },
    "BatchUpdateAssetsRequest": {
      "properties": {
        "requests": {
          "items": {
            "$ref": "UpdateAssetRequest"
          },
          "description": "Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.",
          "type": "array"
        }
      },
      "description": "A request to update a list of assets.",
      "type": "object",
      "id": "BatchUpdateAssetsRequest"
    },
    "DiskEntryList": {
      "id": "DiskEntryList",
      "description": "VM disks.",
      "type": "object",
      "properties": {
        "entries": {
          "description": "Disk entries.",
          "type": "array",
          "items": {
            "$ref": "DiskEntry"
          }
        }
      }
    },
    "ReportConfig": {
      "properties": {
        "description": {
          "description": "Free-text description.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the resource was last updated."
        },
        "groupPreferencesetAssignments": {
          "description": "Required. Collection of combinations of groups and preference sets.",
          "items": {
            "$ref": "ReportConfigGroupPreferenceSetAssignment"
          },
          "type": "array"
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the resource was created.",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of resource."
        }
      },
      "id": "ReportConfig",
      "type": "object",
      "description": "The groups and associated preference sets on which we can generate reports."
    },
    "AssetFrame": {
      "properties": {
        "traceToken": {
          "type": "string",
          "description": "Optional. Trace token is optionally provided to assist with debugging and traceability."
        },
        "machineDetails": {
          "description": "Asset information specific for virtual machines.",
          "$ref": "MachineDetails"
        },
        "reportTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the data was reported."
        },
        "performanceSamples": {
          "items": {
            "$ref": "PerformanceSample"
          },
          "type": "array",
          "description": "Asset performance data samples. Samples that are from more than 40 days ago or after tomorrow are ignored."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Generic asset attributes.",
          "type": "object"
        }
      },
      "id": "AssetFrame",
      "description": "Contains data reported from an inventory source on an asset.",
      "type": "object"
    },
    "BatchDeleteAssetsRequest": {
      "description": "A request to delete a list of asset.",
      "id": "BatchDeleteAssetsRequest",
      "type": "object",
      "properties": {
        "names": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}."
        },
        "allowMissing": {
          "description": "Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`.",
          "type": "boolean"
        }
      }
    },
    "UpdateAssetRequest": {
      "properties": {
        "asset": {
          "description": "Required. The resource being updated.",
          "$ref": "Asset"
        },
        "updateMask": {
          "type": "string",
          "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
          "format": "google-fieldmask"
        },
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      },
      "description": "A request to update an asset.",
      "id": "UpdateAssetRequest",
      "type": "object"
    },
    "AwsEc2PlatformDetails": {
      "id": "AwsEc2PlatformDetails",
      "description": "AWS EC2 specific details.",
      "properties": {
        "location": {
          "type": "string",
          "description": "The location of the machine in the AWS format."
        },
        "machineTypeLabel": {
          "description": "AWS platform's machine type label.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AzureVmPlatformDetails": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Azure platform's provisioning state."
        },
        "machineTypeLabel": {
          "type": "string",
          "description": "Azure platform's machine type label."
        },
        "location": {
          "type": "string",
          "description": "The location of the machine in the Azure format."
        }
      },
      "id": "AzureVmPlatformDetails",
      "type": "object",
      "description": "Azure VM specific details."
    },
    "ListImportJobsResponse": {
      "properties": {
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "importJobs": {
          "type": "array",
          "description": "The list of import jobs.",
          "items": {
            "$ref": "ImportJob"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        }
      },
      "description": "A response for listing import jobs.",
      "type": "object",
      "id": "ListImportJobsResponse"
    },
    "NetworkAddressList": {
      "type": "object",
      "properties": {
        "entries": {
          "description": "Network address entries.",
          "items": {
            "$ref": "NetworkAddress"
          },
          "type": "array"
        }
      },
      "id": "NetworkAddressList",
      "description": "List of allocated/assigned network addresses."
    },
    "ReportSummaryMachineSeriesAllocation": {
      "type": "object",
      "description": "Represents a data point tracking the count of assets allocated for a specific Machine Series.",
      "properties": {
        "machineSeries": {
          "$ref": "MachineSeries",
          "description": "The Machine Series (e.g. \"E2\", \"N2\")"
        },
        "allocatedAssetCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of assets allocated to this machine series."
        }
      },
      "id": "ReportSummaryMachineSeriesAllocation"
    },
    "FileValidationReport": {
      "type": "object",
      "description": "A resource that aggregates the validation errors found in an import job file.",
      "id": "FileValidationReport",
      "properties": {
        "partialReport": {
          "description": "Flag indicating that processing was aborted due to maximum number of errors.",
          "type": "boolean"
        },
        "fileErrors": {
          "items": {
            "$ref": "ImportError"
          },
          "type": "array",
          "description": "List of file level errors."
        },
        "rowErrors": {
          "items": {
            "$ref": "ImportRowError"
          },
          "type": "array",
          "description": "Partial list of rows that encountered validation error."
        },
        "fileName": {
          "description": "The name of the file.",
          "type": "string"
        }
      }
    },
    "MachineDiskDetails": {
      "description": "Details of machine disks.",
      "properties": {
        "totalFreeBytes": {
          "format": "int64",
          "description": "Total disk free space.",
          "type": "string"
        },
        "totalCapacityBytes": {
          "description": "Disk total Capacity.",
          "type": "string",
          "format": "int64"
        },
        "disks": {
          "$ref": "DiskEntryList",
          "description": "List of disks."
        }
      },
      "type": "object",
      "id": "MachineDiskDetails"
    },
    "AggregationResultHistogram": {
      "description": "The result of a bucketed histogram aggregation.",
      "type": "object",
      "properties": {
        "buckets": {
          "items": {
            "$ref": "AggregationResultHistogramBucket"
          },
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "type": "array"
        }
      },
      "id": "AggregationResultHistogram"
    },
    "Empty": {
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "Empty",
      "type": "object"
    },
    "NetworkAdapterList": {
      "id": "NetworkAdapterList",
      "properties": {
        "entries": {
          "items": {
            "$ref": "NetworkAdapterDetails"
          },
          "description": "Network adapter entries.",
          "type": "array"
        }
      },
      "description": "List of network adapters.",
      "type": "object"
    },
    "Asset": {
      "type": "object",
      "properties": {
        "updateTime": {
          "description": "Output only. The timestamp when the asset was last updated.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "sources": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. The list of sources contributing to the asset."
        },
        "attributes": {
          "description": "Generic asset attributes.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "insightList": {
          "description": "Output only. The list of insights associated with the asset.",
          "readOnly": true,
          "$ref": "InsightList"
        },
        "performanceData": {
          "$ref": "AssetPerformanceData",
          "description": "Output only. Performance data for the asset.",
          "readOnly": true
        },
        "machineDetails": {
          "description": "Output only. Asset information specific for virtual and physical machines.",
          "readOnly": true,
          "$ref": "MachineDetails"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "assignedGroups": {
          "type": "array",
          "description": "Output only. The list of groups that the asset is assigned to.",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the asset was created."
        },
        "name": {
          "description": "Output only. The full name of the asset.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "An asset represents a resource in your environment. Asset types include virtual machines and databases.",
      "id": "Asset"
    },
    "ReportSummaryHistogramChartDataBucket": {
      "type": "object",
      "id": "ReportSummaryHistogramChartDataBucket",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64",
          "description": "Count of items in the bucket."
        },
        "lowerBound": {
          "description": "Lower bound - inclusive.",
          "format": "int64",
          "type": "string"
        },
        "upperBound": {
          "description": "Upper bound - exclusive.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity."
    },
    "GuestOsDetails": {
      "type": "object",
      "id": "GuestOsDetails",
      "description": "Information from Guest-level collections.",
      "properties": {
        "family": {
          "enumDescriptions": [
            "",
            "Microsoft Windows Server and Desktop.",
            "Various Linux flavors.",
            "Non-Linux Unix flavors."
          ],
          "enum": [
            "OS_FAMILY_UNKNOWN",
            "OS_FAMILY_WINDOWS",
            "OS_FAMILY_LINUX",
            "OS_FAMILY_UNIX"
          ],
          "description": "What family the OS belong to, if known.",
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "The version of the operating system."
        },
        "config": {
          "$ref": "GuestConfigDetails",
          "description": "OS and app configuration."
        },
        "runtime": {
          "description": "Runtime information.",
          "$ref": "GuestRuntimeDetails"
        },
        "osName": {
          "description": "The name of the operating system.",
          "type": "string"
        }
      }
    },
    "DailyResourceUsageAggregationDisk": {
      "description": "Statistical aggregation of disk usage.",
      "type": "object",
      "properties": {
        "iops": {
          "description": "Disk I/O operations per second.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "id": "DailyResourceUsageAggregationDisk"
    },
    "ValidateImportJobRequest": {
      "id": "ValidateImportJobRequest",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "description": "A request to validate an import job.",
      "type": "object"
    },
    "RunImportJobRequest": {
      "description": "A request to run an import job.",
      "type": "object",
      "id": "RunImportJobRequest",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      }
    },
    "Source": {
      "description": "Source represents an object from which asset information is streamed to Migration Center.",
      "type": "object",
      "id": "Source",
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. The full name of the source.",
          "type": "string"
        },
        "priority": {
          "description": "The information confidence of the source. The higher the value, the higher the confidence.",
          "type": "integer",
          "format": "int32"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the source was last updated.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "type": {
          "enumDescriptions": [
            "Unspecified",
            "Manually uploaded file (e.g. CSV)",
            "Guest-level info",
            "Inventory-level scan",
            "Third-party owned sources."
          ],
          "description": "Data source type.",
          "enum": [
            "SOURCE_TYPE_UNKNOWN",
            "SOURCE_TYPE_UPLOAD",
            "SOURCE_TYPE_GUEST_OS_SCAN",
            "SOURCE_TYPE_INVENTORY_SCAN",
            "SOURCE_TYPE_CUSTOM"
          ],
          "type": "string"
        },
        "pendingFrameCount": {
          "format": "int32",
          "description": "Output only. Number of frames that are still being processed.",
          "type": "integer",
          "readOnly": true
        },
        "displayName": {
          "description": "User-friendly display name.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETING",
            "INVALID"
          ],
          "description": "Output only. The state of the source.",
          "readOnly": true,
          "enumDescriptions": [
            "Unspecified.",
            "The source is active and ready to be used.",
            "In the process of being deleted.",
            "Source is in an invalid state. Asset frames reported to it will be ignored."
          ]
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The timestamp when the source was created.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "managed": {
          "description": "If `true`, the source is managed by other service(s).",
          "type": "boolean"
        },
        "description": {
          "description": "Free-text description.",
          "type": "string"
        },
        "errorFrameCount": {
          "format": "int32",
          "description": "Output only. The number of frames that were reported by the source and contained errors.",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "ReportSummaryVmwareEngineFinding": {
      "description": "A set of findings that applies to assets destined for VMWare Engine.",
      "type": "object",
      "properties": {
        "allocatedAssetCount": {
          "description": "Count of assets which are allocated",
          "type": "string",
          "format": "int64"
        },
        "allocatedRegions": {
          "description": "Set of regions in which the assets were allocated",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nodeAllocations": {
          "type": "array",
          "items": {
            "$ref": "ReportSummaryVmwareNodeAllocation"
          },
          "description": "Set of per-nodetype allocation records"
        }
      },
      "id": "ReportSummaryVmwareEngineFinding"
    },
    "FrameViolationEntry": {
      "id": "FrameViolationEntry",
      "description": "A resource that contains a single violation of a reported `AssetFrame` resource.",
      "properties": {
        "field": {
          "description": "The field of the original frame where the violation occurred.",
          "type": "string"
        },
        "violation": {
          "description": "A message describing the violation.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Money": {
      "id": "Money",
      "description": "Represents an amount of money with its currency type.",
      "type": "object",
      "properties": {
        "nanos": {
          "format": "int32",
          "type": "integer",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        },
        "currencyCode": {
          "type": "string",
          "description": "The three-letter currency code defined in ISO 4217."
        },
        "units": {
          "type": "string",
          "format": "int64",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
        }
      }
    },
    "Report": {
      "description": "Report represents a point-in-time rendering of the ReportConfig results.",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Last update timestamp."
        },
        "type": {
          "enumDescriptions": [
            "Default Report type.",
            "Total cost of ownership Report type."
          ],
          "description": "Report type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "TOTAL_COST_OF_OWNERSHIP"
          ],
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Creation timestamp.",
          "format": "google-datetime"
        },
        "summary": {
          "readOnly": true,
          "$ref": "ReportSummary",
          "description": "Output only. Summary view of the Report."
        },
        "state": {
          "description": "Report creation state.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "SUCCEEDED",
            "FAILED"
          ],
          "enumDescriptions": [
            "Default Report creation state.",
            "Creating Report.",
            "Successfully created Report.",
            "Failed to create Report."
          ],
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Name of resource.",
          "type": "string"
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        }
      },
      "type": "object",
      "id": "Report"
    },
    "ImportError": {
      "id": "ImportError",
      "description": "A resource that reports the errors encountered while processing an import job.",
      "type": "object",
      "properties": {
        "severity": {
          "type": "string",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "The severity of the error."
        },
        "errorDetails": {
          "description": "The error information.",
          "type": "string"
        }
      }
    },
    "ListReportConfigsResponse": {
      "type": "object",
      "id": "ListReportConfigsResponse",
      "properties": {
        "reportConfigs": {
          "items": {
            "$ref": "ReportConfig"
          },
          "description": "A list of report configs.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      },
      "description": "Response message for listing report configs."
    },
    "Location": {
      "type": "object",
      "id": "Location",
      "description": "A resource that represents a Google Cloud location.",
      "properties": {
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Date": {
      "type": "object",
      "id": "Date",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
        },
        "day": {
          "format": "int32",
          "type": "integer",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
        },
        "month": {
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "format": "int32"
        }
      }
    },
    "ComputeStorageDescriptor": {
      "type": "object",
      "properties": {
        "sizeGb": {
          "description": "Disk size in GiB.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ],
          "description": "Disk type backing the storage.",
          "type": "string",
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ]
        }
      },
      "description": "Compute Engine storage option descriptor.",
      "id": "ComputeStorageDescriptor"
    },
    "HostsEntryList": {
      "properties": {
        "entries": {
          "items": {
            "$ref": "HostsEntry"
          },
          "type": "array",
          "description": "Hosts entries."
        }
      },
      "type": "object",
      "id": "HostsEntryList",
      "description": "Hosts content."
    },
    "NetworkUsageSample": {
      "description": "Network usage sample. Values are across all network interfaces.",
      "id": "NetworkUsageSample",
      "properties": {
        "averageIngressBps": {
          "description": "Average network ingress in B/s sampled over a short window. Must be non-negative.",
          "type": "number",
          "format": "float"
        },
        "averageEgressBps": {
          "type": "number",
          "description": "Average network egress in B/s sampled over a short window. Must be non-negative.",
          "format": "float"
        }
      },
      "type": "object"
    },
    "ReportSummaryHistogramChartData": {
      "id": "ReportSummaryHistogramChartData",
      "type": "object",
      "description": "A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.",
      "properties": {
        "buckets": {
          "items": {
            "$ref": "ReportSummaryHistogramChartDataBucket"
          },
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "type": "array"
        }
      }
    },
    "PreferenceSet": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. Name of the preference set.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the preference set was created."
        },
        "virtualMachinePreferences": {
          "description": "A set of preferences that applies to all virtual machines in the context.",
          "$ref": "VirtualMachinePreferences"
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "A description of the preference set."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the preference set was last updated."
        }
      },
      "description": "The preferences that apply to all assets in a given context.",
      "type": "object",
      "id": "PreferenceSet"
    },
    "ReportSummaryGroupPreferenceSetFinding": {
      "type": "object",
      "description": "Summary Findings for a specific Group/PreferenceSet combination.",
      "id": "ReportSummaryGroupPreferenceSetFinding",
      "properties": {
        "vmwareEngineFinding": {
          "description": "A set of findings that applies to VMWare machines in the input.",
          "$ref": "ReportSummaryVmwareEngineFinding"
        },
        "machinePreferences": {
          "$ref": "VirtualMachinePreferences",
          "description": "A set of preferences that applies to all machines in the context."
        },
        "monthlyCostCompute": {
          "description": "Compute monthly cost for this preference set.",
          "$ref": "Money"
        },
        "monthlyCostStorage": {
          "$ref": "Money",
          "description": "Storage monthly cost for this preference set."
        },
        "monthlyCostNetworkEgress": {
          "$ref": "Money",
          "description": "Network Egress monthly cost for this preference set."
        },
        "monthlyCostOsLicense": {
          "$ref": "Money",
          "description": "Licensing monthly cost for this preference set."
        },
        "displayName": {
          "type": "string",
          "description": "Display Name of the Preference Set"
        },
        "computeEngineFinding": {
          "description": "A set of findings that applies to Compute Engine machines in the input.",
          "$ref": "ReportSummaryComputeEngineFinding"
        },
        "soleTenantFinding": {
          "$ref": "ReportSummarySoleTenantFinding",
          "description": "A set of findings that applies to Sole-Tenant machines in the input."
        },
        "description": {
          "description": "Description for the Preference Set.",
          "type": "string"
        },
        "monthlyCostTotal": {
          "$ref": "Money",
          "description": "Total monthly cost for this preference set."
        },
        "monthlyCostOther": {
          "$ref": "Money",
          "description": "Miscellaneous monthly cost for this preference set."
        }
      }
    },
    "Aggregation": {
      "id": "Aggregation",
      "properties": {
        "field": {
          "type": "string",
          "description": "The name of the field on which to aggregate."
        },
        "histogram": {
          "description": "Creates a bucketed histogram of field values.",
          "$ref": "AggregationHistogram"
        },
        "sum": {
          "$ref": "AggregationSum",
          "description": "Sum over a numeric field."
        },
        "count": {
          "description": "Count the number of matching objects.",
          "$ref": "AggregationCount"
        },
        "frequency": {
          "description": "Creates a frequency distribution of all field values.",
          "$ref": "AggregationFrequency"
        }
      },
      "description": "Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.",
      "type": "object"
    },
    "ReportSummaryVmwareNodeAllocation": {
      "properties": {
        "vmwareNode": {
          "description": "VMWare node type, e.g. \"ve1-standard-72\"",
          "$ref": "ReportSummaryVmwareNode"
        },
        "nodeCount": {
          "description": "Count of this node type to be provisioned",
          "type": "string",
          "format": "int64"
        },
        "allocatedAssetCount": {
          "description": "Count of assets allocated to these nodes",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "Represents assets allocated to a specific VMWare Node type.",
      "type": "object",
      "id": "ReportSummaryVmwareNodeAllocation"
    },
    "ListPreferenceSetsResponse": {
      "description": "Response message for listing preference sets.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "preferenceSets": {
          "type": "array",
          "description": "The list of PreferenceSets",
          "items": {
            "$ref": "PreferenceSet"
          }
        }
      },
      "type": "object",
      "id": "ListPreferenceSetsResponse"
    },
    "UploadFileInfo": {
      "type": "object",
      "properties": {
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Output only. The headers that were used to sign the URI."
        },
        "signedUri": {
          "readOnly": true,
          "description": "Output only. Upload URI for the file.",
          "type": "string"
        },
        "uriExpirationTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Expiration time of the upload URI.",
          "format": "google-datetime"
        }
      },
      "id": "UploadFileInfo",
      "description": "A resource that contains a URI to which a data file can be uploaded."
    }
  },
  "title": "Migration Center API",
  "batchPath": "batch",
  "version_module": true,
  "description": "A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "baseUrl": "https://migrationcenter.googleapis.com/"
}

{
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "id": "migrationcenter:v1",
  "ownerName": "Google",
  "protocol": "rest",
  "description": "A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.",
  "documentationLink": "https://cloud.google.com/migration-center",
  "version_module": true,
  "mtlsRootUrl": "https://migrationcenter.mtls.googleapis.com/",
  "revision": "20230714",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "schemas": {
    "BatchUpdateAssetsRequest": {
      "properties": {
        "requests": {
          "description": "Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.",
          "items": {
            "$ref": "UpdateAssetRequest"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "BatchUpdateAssetsRequest",
      "description": "A request to update a list of assets."
    },
    "GenericPlatformDetails": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field."
        }
      },
      "description": "Generic platform details.",
      "type": "object",
      "id": "GenericPlatformDetails"
    },
    "AssetPerformanceData": {
      "description": "Performance data for an asset.",
      "properties": {
        "dailyResourceUsageAggregations": {
          "description": "Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days. Aggregations are sorted from oldest to most recent.",
          "items": {
            "$ref": "DailyResourceUsageAggregation"
          },
          "type": "array"
        }
      },
      "id": "AssetPerformanceData",
      "type": "object"
    },
    "MachineSeries": {
      "id": "MachineSeries",
      "type": "object",
      "description": "A Compute Engine machine series.",
      "properties": {
        "code": {
          "description": "Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series.",
          "type": "string"
        }
      }
    },
    "UploadFileInfo": {
      "type": "object",
      "id": "UploadFileInfo",
      "properties": {
        "uriExpirationTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Expiration time of the upload URI.",
          "type": "string"
        },
        "signedUri": {
          "description": "Output only. Upload URI for the file.",
          "readOnly": true,
          "type": "string"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Output only. The headers that were used to sign the URI.",
          "readOnly": true
        }
      },
      "description": "A resource that contains a URI to which a data file can be uploaded."
    },
    "ReportSummaryUtilizationChartData": {
      "type": "object",
      "id": "ReportSummaryUtilizationChartData",
      "properties": {
        "used": {
          "description": "Aggregate value which falls into the \"Used\" bucket.",
          "type": "string",
          "format": "int64"
        },
        "free": {
          "format": "int64",
          "description": "Aggregate value which falls into the \"Free\" bucket.",
          "type": "string"
        }
      },
      "description": "Utilization Chart is a specific type of visualization which displays a metric classified into \"Used\" and \"Free\" buckets."
    },
    "RunImportJobRequest": {
      "type": "object",
      "description": "A request to run an import job.",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "id": "RunImportJobRequest"
    },
    "RuntimeNetworkInfo": {
      "id": "RuntimeNetworkInfo",
      "type": "object",
      "properties": {
        "scanTime": {
          "format": "google-datetime",
          "description": "Time of the last network scan.",
          "type": "string"
        },
        "connections": {
          "description": "Network connections.",
          "$ref": "NetworkConnectionList"
        }
      },
      "description": "Runtime networking information."
    },
    "AggregationResultSum": {
      "type": "object",
      "description": "The result of a sum aggregation.",
      "id": "AggregationResultSum",
      "properties": {
        "value": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ReportSummaryChartDataDataPoint": {
      "id": "ReportSummaryChartDataDataPoint",
      "description": "Describes a single data point in the Chart.",
      "properties": {
        "value": {
          "description": "The Y-axis value for this data point.",
          "type": "number",
          "format": "double"
        },
        "label": {
          "description": "The X-axis label for this data point.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ComputeEngineMigrationTarget": {
      "type": "object",
      "properties": {
        "shape": {
          "$ref": "ComputeEngineShapeDescriptor",
          "description": "Description of the suggested shape for the migration target."
        }
      },
      "description": "Compute engine migration target.",
      "id": "ComputeEngineMigrationTarget"
    },
    "NetworkConnection": {
      "properties": {
        "localPort": {
          "type": "integer",
          "format": "int32",
          "description": "Local port."
        },
        "state": {
          "enumDescriptions": [
            "Connection state is unknown or unspecified.",
            "The connection is being opened.",
            "The connection is open.",
            "Listening for incoming connections.",
            "The connection is being closed.",
            "The connection is closed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "OPENING",
            "OPEN",
            "LISTEN",
            "CLOSING",
            "CLOSED"
          ],
          "type": "string",
          "description": "Network connection state."
        },
        "pid": {
          "type": "string",
          "description": "Process ID.",
          "format": "int64"
        },
        "protocol": {
          "description": "Connection protocol (e.g. TCP/UDP).",
          "type": "string"
        },
        "remotePort": {
          "type": "integer",
          "description": "Remote port.",
          "format": "int32"
        },
        "processName": {
          "description": "Process or service name.",
          "type": "string"
        },
        "remoteIpAddress": {
          "type": "string",
          "description": "Remote IP address."
        },
        "localIpAddress": {
          "description": "Local IP address.",
          "type": "string"
        }
      },
      "id": "NetworkConnection",
      "type": "object"
    },
    "DiskUsageSample": {
      "properties": {
        "averageIops": {
          "description": "Average IOPS sampled over a short window. Must be non-negative.",
          "type": "number",
          "format": "float"
        }
      },
      "type": "object",
      "description": "Disk usage sample. Values are across all disks.",
      "id": "DiskUsageSample"
    },
    "Money": {
      "id": "Money",
      "properties": {
        "units": {
          "type": "string",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "format": "int64"
        },
        "currencyCode": {
          "type": "string",
          "description": "The three-letter currency code defined in ISO 4217."
        },
        "nanos": {
          "type": "integer",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "Represents an amount of money with its currency type."
    },
    "NetworkAdapterDetails": {
      "description": "Details of network adapter.",
      "id": "NetworkAdapterDetails",
      "properties": {
        "addresses": {
          "$ref": "NetworkAddressList",
          "description": "NetworkAddressList"
        },
        "macAddress": {
          "type": "string",
          "description": "MAC address."
        },
        "adapterType": {
          "type": "string",
          "description": "Network adapter type (e.g. VMXNET3)."
        }
      },
      "type": "object"
    },
    "Aggregation": {
      "properties": {
        "count": {
          "description": "Count the number of matching objects.",
          "$ref": "AggregationCount"
        },
        "histogram": {
          "$ref": "AggregationHistogram",
          "description": "Creates a bucketed histogram of field values."
        },
        "frequency": {
          "$ref": "AggregationFrequency",
          "description": "Creates a frequency distribution of all field values."
        },
        "sum": {
          "description": "Sum over a numeric field.",
          "$ref": "AggregationSum"
        },
        "field": {
          "description": "The name of the field on which to aggregate.",
          "type": "string"
        }
      },
      "id": "Aggregation",
      "type": "object",
      "description": "Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation."
    },
    "DailyResourceUsageAggregationCPU": {
      "properties": {
        "utilizationPercentage": {
          "description": "CPU utilization percentage.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "description": "Statistical aggregation of CPU usage.",
      "type": "object",
      "id": "DailyResourceUsageAggregationCPU"
    },
    "ReportSummary": {
      "properties": {
        "groupFindings": {
          "type": "array",
          "items": {
            "$ref": "ReportSummaryGroupFinding"
          },
          "description": "Findings for each Group included in this report."
        },
        "allAssetsStats": {
          "description": "Aggregate statistics for all the assets across all the groups.",
          "$ref": "ReportSummaryAssetAggregateStats"
        }
      },
      "type": "object",
      "id": "ReportSummary",
      "description": "Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report."
    },
    "FileValidationReport": {
      "type": "object",
      "properties": {
        "partialReport": {
          "type": "boolean",
          "description": "Flag indicating that processing was aborted due to maximum number of errors."
        },
        "fileErrors": {
          "type": "array",
          "items": {
            "$ref": "ImportError"
          },
          "description": "List of file level errors."
        },
        "rowErrors": {
          "items": {
            "$ref": "ImportRowError"
          },
          "description": "Partial list of rows that encountered validation error.",
          "type": "array"
        },
        "fileName": {
          "type": "string",
          "description": "The name of the file."
        }
      },
      "description": "A resource that aggregates the validation errors found in an import job file.",
      "id": "FileValidationReport"
    },
    "MachineNetworkDetails": {
      "type": "object",
      "id": "MachineNetworkDetails",
      "properties": {
        "publicIpAddress": {
          "description": "The public IP address of the machine.",
          "type": "string"
        },
        "adapters": {
          "description": "List of network adapters.",
          "$ref": "NetworkAdapterList"
        },
        "primaryIpAddress": {
          "type": "string",
          "description": "The primary IP address of the machine."
        },
        "primaryMacAddress": {
          "description": "MAC address of the machine. This property is used to uniqly identify the machine.",
          "type": "string"
        }
      },
      "description": "Details of network adapters and settings."
    },
    "ImportError": {
      "description": "A resource that reports the errors encountered while processing an import job.",
      "type": "object",
      "properties": {
        "severity": {
          "type": "string",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ],
          "description": "The severity of the error.",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        },
        "errorDetails": {
          "description": "The error information.",
          "type": "string"
        }
      },
      "id": "ImportError"
    },
    "Frames": {
      "properties": {
        "framesData": {
          "description": "A repeated field of asset data.",
          "type": "array",
          "items": {
            "$ref": "AssetFrame"
          }
        }
      },
      "id": "Frames",
      "type": "object",
      "description": "Collection of frame data."
    },
    "AggregateAssetsValuesResponse": {
      "type": "object",
      "properties": {
        "results": {
          "items": {
            "$ref": "AggregationResult"
          },
          "description": "The aggregation results.",
          "type": "array"
        }
      },
      "description": "A response to a request to aggregated assets values.",
      "id": "AggregateAssetsValuesResponse"
    },
    "ReportSummaryGroupFinding": {
      "type": "object",
      "id": "ReportSummaryGroupFinding",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display Name for the Group."
        },
        "overlappingAssetCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of the number of assets in this group which are also included in another group within the same report."
        },
        "assetAggregateStats": {
          "$ref": "ReportSummaryAssetAggregateStats",
          "description": "Summary statistics for all the assets in this group."
        },
        "preferenceSetFindings": {
          "items": {
            "$ref": "ReportSummaryGroupPreferenceSetFinding"
          },
          "description": "Findings for each of the PreferenceSets for this group.",
          "type": "array"
        },
        "description": {
          "description": "Description for the Group.",
          "type": "string"
        }
      },
      "description": "Summary Findings for a specific Group."
    },
    "VmwarePlatformDetails": {
      "properties": {
        "vcenterVersion": {
          "type": "string",
          "description": "vCenter version."
        },
        "esxVersion": {
          "type": "string",
          "description": "ESX version."
        },
        "vcenterUri": {
          "type": "string",
          "description": "vCenter URI used in collection."
        },
        "vcenterVmId": {
          "description": "vCenter VM ID.",
          "type": "string"
        },
        "osid": {
          "type": "string",
          "description": "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html."
        },
        "vcenterFolder": {
          "description": "Folder name in vCenter where asset resides.",
          "type": "string"
        }
      },
      "description": "VMware specific details.",
      "type": "object",
      "id": "VmwarePlatformDetails"
    },
    "HostsEntryList": {
      "description": "Hosts content.",
      "type": "object",
      "id": "HostsEntryList",
      "properties": {
        "entries": {
          "items": {
            "$ref": "HostsEntry"
          },
          "description": "Hosts entries.",
          "type": "array"
        }
      }
    },
    "AggregationResultHistogramBucket": {
      "properties": {
        "count": {
          "description": "Count of items in the bucket.",
          "type": "string",
          "format": "int64"
        },
        "lowerBound": {
          "type": "number",
          "description": "Lower bound - inclusive.",
          "format": "double"
        },
        "upperBound": {
          "type": "number",
          "format": "double",
          "description": "Upper bound - exclusive."
        }
      },
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "type": "object",
      "id": "AggregationResultHistogramBucket"
    },
    "ListReportsResponse": {
      "properties": {
        "reports": {
          "description": "The list of Reports.",
          "items": {
            "$ref": "Report"
          },
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      },
      "id": "ListReportsResponse",
      "description": "Response message for listing Reports.",
      "type": "object"
    },
    "BatchDeleteAssetsRequest": {
      "properties": {
        "names": {
          "items": {
            "type": "string"
          },
          "description": "Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}.",
          "type": "array"
        },
        "allowMissing": {
          "type": "boolean",
          "description": "Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`."
        }
      },
      "description": "A request to delete a list of asset.",
      "type": "object",
      "id": "BatchDeleteAssetsRequest"
    },
    "DiskPartition": {
      "id": "DiskPartition",
      "type": "object",
      "properties": {
        "fileSystem": {
          "description": "Partition file system.",
          "type": "string"
        },
        "capacityBytes": {
          "format": "int64",
          "type": "string",
          "description": "Partition capacity."
        },
        "mountPoint": {
          "type": "string",
          "description": "Mount pount (Linux/Windows) or drive letter (Windows)."
        },
        "freeBytes": {
          "format": "int64",
          "type": "string",
          "description": "Partition free space."
        },
        "subPartitions": {
          "$ref": "DiskPartitionList",
          "description": "Sub-partitions."
        },
        "uuid": {
          "type": "string",
          "description": "Partition UUID."
        },
        "type": {
          "type": "string",
          "description": "Partition type."
        }
      },
      "description": "Disk Partition details."
    },
    "DiskPartitionList": {
      "properties": {
        "entries": {
          "items": {
            "$ref": "DiskPartition"
          },
          "type": "array",
          "description": "Partition entries."
        }
      },
      "id": "DiskPartitionList",
      "description": "Disk partition list.",
      "type": "object"
    },
    "ReportSummaryHistogramChartData": {
      "type": "object",
      "id": "ReportSummaryHistogramChartData",
      "description": "A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.",
      "properties": {
        "buckets": {
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "items": {
            "$ref": "ReportSummaryHistogramChartDataBucket"
          },
          "type": "array"
        }
      }
    },
    "AzureVmPlatformDetails": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Azure platform's provisioning state."
        },
        "location": {
          "description": "The location of the machine in the Azure format.",
          "type": "string"
        },
        "machineTypeLabel": {
          "description": "Azure platform's machine type label.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "AzureVmPlatformDetails",
      "description": "Azure VM specific details."
    },
    "ListImportJobsResponse": {
      "description": "A response for listing import jobs.",
      "type": "object",
      "properties": {
        "importJobs": {
          "type": "array",
          "description": "The list of import jobs.",
          "items": {
            "$ref": "ImportJob"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ListImportJobsResponse"
    },
    "RegionPreferences": {
      "properties": {
        "preferredRegions": {
          "description": "A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "RegionPreferences",
      "description": "The user preferences relating to target regions."
    },
    "RunningProcessList": {
      "type": "object",
      "id": "RunningProcessList",
      "description": "List of running guest OS processes.",
      "properties": {
        "entries": {
          "type": "array",
          "description": "Running process entries.",
          "items": {
            "$ref": "RunningProcess"
          }
        }
      }
    },
    "ExecutionReport": {
      "properties": {
        "executionErrors": {
          "description": "Validation errors encountered during the execution of the import job.",
          "$ref": "ValidationReport"
        },
        "framesReported": {
          "format": "int32",
          "description": "Total number of asset frames reported for the import job.",
          "type": "integer"
        },
        "totalRowsCount": {
          "description": "Total number of rows in the import job.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "A resource that reports result of the import job execution.",
      "type": "object",
      "id": "ExecutionReport"
    },
    "BatchUpdateAssetsResponse": {
      "description": "Response for updating a list of assets.",
      "id": "BatchUpdateAssetsResponse",
      "type": "object",
      "properties": {
        "assets": {
          "items": {
            "$ref": "Asset"
          },
          "description": "Update asset content. The content only includes values after field mask being applied.",
          "type": "array"
        }
      }
    },
    "DiskEntryList": {
      "properties": {
        "entries": {
          "description": "Disk entries.",
          "type": "array",
          "items": {
            "$ref": "DiskEntry"
          }
        }
      },
      "id": "DiskEntryList",
      "type": "object",
      "description": "VM disks."
    },
    "InsightList": {
      "id": "InsightList",
      "properties": {
        "updateTime": {
          "description": "Output only. Update timestamp.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "insights": {
          "description": "Output only. Insights of the list.",
          "type": "array",
          "items": {
            "$ref": "Insight"
          },
          "readOnly": true
        }
      },
      "description": "Message containing insights list.",
      "type": "object"
    },
    "AwsEc2PlatformDetails": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The location of the machine in the AWS format."
        },
        "machineTypeLabel": {
          "description": "AWS platform's machine type label.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "AwsEc2PlatformDetails",
      "description": "AWS EC2 specific details."
    },
    "AggregationResultFrequency": {
      "description": "The result of a frequency distribution aggregation.",
      "properties": {
        "values": {
          "type": "object",
          "additionalProperties": {
            "format": "int64",
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "AggregationResultFrequency"
    },
    "NfsExportList": {
      "properties": {
        "entries": {
          "description": "NFS export entries.",
          "type": "array",
          "items": {
            "$ref": "NfsExport"
          }
        }
      },
      "type": "object",
      "id": "NfsExportList",
      "description": "NFS exports."
    },
    "GuestInstalledApplicationList": {
      "id": "GuestInstalledApplicationList",
      "description": "Guest installed application list.",
      "properties": {
        "entries": {
          "type": "array",
          "description": "Application entries.",
          "items": {
            "$ref": "GuestInstalledApplication"
          }
        }
      },
      "type": "object"
    },
    "ComputeEngineShapeDescriptor": {
      "description": "Compute Engine target shape descriptor.",
      "id": "ComputeEngineShapeDescriptor",
      "type": "object",
      "properties": {
        "storage": {
          "description": "Compute Engine storage. Never empty.",
          "type": "array",
          "items": {
            "$ref": "ComputeStorageDescriptor"
          }
        },
        "memoryMb": {
          "format": "int32",
          "type": "integer",
          "description": "Memory in mebibytes."
        },
        "logicalCoreCount": {
          "format": "int32",
          "description": "Number of logical cores.",
          "type": "integer"
        },
        "series": {
          "type": "string",
          "description": "Compute Engine machine series."
        },
        "machineType": {
          "type": "string",
          "description": "Compute Engine machine type."
        },
        "physicalCoreCount": {
          "description": "Number of physical cores.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CpuUsageSample": {
      "id": "CpuUsageSample",
      "description": "CPU usage sample.",
      "type": "object",
      "properties": {
        "utilizedPercentage": {
          "type": "number",
          "description": "Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.",
          "format": "float"
        }
      }
    },
    "RunningProcess": {
      "type": "object",
      "id": "RunningProcess",
      "properties": {
        "pid": {
          "type": "string",
          "description": "Process ID.",
          "format": "int64"
        },
        "user": {
          "description": "User running the process.",
          "type": "string"
        },
        "attributes": {
          "description": "Process extended attributes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "exePath": {
          "description": "Process binary path.",
          "type": "string"
        },
        "cmdline": {
          "type": "string",
          "description": "Process full command line."
        }
      },
      "description": "Guest OS running process details."
    },
    "PreferenceSet": {
      "type": "object",
      "id": "PreferenceSet",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the preference set."
        },
        "description": {
          "description": "A description of the preference set.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The timestamp when the preference set was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "virtualMachinePreferences": {
          "description": "A set of preferences that applies to all virtual machines in the context.",
          "$ref": "VirtualMachinePreferences"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the preference set was last updated.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        }
      },
      "description": "The preferences that apply to all assets in a given context."
    },
    "ReportSummaryHistogramChartDataBucket": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "string",
          "description": "Count of items in the bucket."
        },
        "upperBound": {
          "type": "string",
          "description": "Upper bound - exclusive.",
          "format": "int64"
        },
        "lowerBound": {
          "type": "string",
          "format": "int64",
          "description": "Lower bound - inclusive."
        }
      },
      "type": "object",
      "id": "ReportSummaryHistogramChartDataBucket",
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity."
    },
    "Empty": {
      "id": "Empty",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object"
    },
    "ComputeStorageDescriptor": {
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ],
          "description": "Disk type backing the storage.",
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ]
        },
        "sizeGb": {
          "type": "integer",
          "description": "Disk size in GiB.",
          "format": "int32"
        }
      },
      "description": "Compute Engine storage option descriptor.",
      "id": "ComputeStorageDescriptor",
      "type": "object"
    },
    "MachineDetails": {
      "type": "object",
      "description": "Details of a machine.",
      "id": "MachineDetails",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "Machine creation time.",
          "format": "google-datetime"
        },
        "memoryMb": {
          "format": "int32",
          "description": "The amount of memory in the machine. Must be non-negative.",
          "type": "integer"
        },
        "platform": {
          "description": "Platform specific information.",
          "$ref": "PlatformDetails"
        },
        "architecture": {
          "$ref": "MachineArchitectureDetails",
          "description": "Architecture details (vendor, CPU architecture)."
        },
        "guestOs": {
          "$ref": "GuestOsDetails",
          "description": "Guest OS information."
        },
        "uuid": {
          "type": "string",
          "description": "Machine unique identifier."
        },
        "disks": {
          "$ref": "MachineDiskDetails",
          "description": "Disk details."
        },
        "coreCount": {
          "description": "Number of CPU cores in the machine. Must be non-negative.",
          "type": "integer",
          "format": "int32"
        },
        "powerState": {
          "type": "string",
          "enum": [
            "POWER_STATE_UNSPECIFIED",
            "PENDING",
            "ACTIVE",
            "SUSPENDING",
            "SUSPENDED",
            "DELETING",
            "DELETED"
          ],
          "enumDescriptions": [
            "Power state is unknown.",
            "The machine is preparing to enter the ACTIVE state. An instance may enter the PENDING state when it launches for the first time, or when it is started after being in the SUSPENDED state.",
            "The machine is active.",
            "The machine is being turned off.",
            "The machine is off.",
            "The machine is being deleted from the hosting platform.",
            "The machine is deleted from the hosting platform."
          ],
          "description": "Power state of the machine."
        },
        "network": {
          "$ref": "MachineNetworkDetails",
          "description": "Network details."
        },
        "machineName": {
          "type": "string",
          "description": "Machine name."
        }
      }
    },
    "AddAssetsToGroupRequest": {
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        },
        "allowExisting": {
          "type": "boolean",
          "description": "Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`."
        },
        "assets": {
          "$ref": "AssetList",
          "description": "Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000."
        }
      },
      "type": "object",
      "description": "A request to add assets to a group.",
      "id": "AddAssetsToGroupRequest"
    },
    "AggregationSum": {
      "id": "AggregationSum",
      "type": "object",
      "description": "Sum of field values.",
      "properties": {}
    },
    "ReportSummaryComputeEngineFinding": {
      "description": "A set of findings that applies to assets destined for Compute Engine.",
      "id": "ReportSummaryComputeEngineFinding",
      "type": "object",
      "properties": {
        "allocatedRegions": {
          "description": "Set of regions in which the assets were allocated.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "allocatedAssetCount": {
          "description": "Count of assets which were allocated.",
          "format": "int64",
          "type": "string"
        },
        "allocatedDiskTypes": {
          "description": "Set of disk types allocated to assets.",
          "items": {
            "enumDescriptions": [
              "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
              "Standard HDD Persistent Disk.",
              "Balanced Persistent Disk.",
              "SSD Persistent Disk."
            ],
            "enum": [
              "PERSISTENT_DISK_TYPE_UNSPECIFIED",
              "PERSISTENT_DISK_TYPE_STANDARD",
              "PERSISTENT_DISK_TYPE_BALANCED",
              "PERSISTENT_DISK_TYPE_SSD"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "machineSeriesAllocations": {
          "description": "Distribution of assets based on the Machine Series.",
          "type": "array",
          "items": {
            "$ref": "ReportSummaryMachineSeriesAllocation"
          }
        }
      }
    },
    "ReportSummaryAssetAggregateStats": {
      "type": "object",
      "id": "ReportSummaryAssetAggregateStats",
      "properties": {
        "totalCores": {
          "description": "Sum of the CPU core count of all the assets in this collection.",
          "format": "int64",
          "type": "string"
        },
        "memoryBytesHistogram": {
          "$ref": "ReportSummaryHistogramChartData",
          "description": "Histogram showing a distribution of memory sizes."
        },
        "storageBytesHistogram": {
          "description": "Histogram showing a distribution of memory sizes.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "totalAssets": {
          "format": "int64",
          "type": "string",
          "description": "Count of the number of unique assets in this collection."
        },
        "totalStorageBytes": {
          "format": "int64",
          "type": "string",
          "description": "Sum of persistent storage in bytes of all the assets in this collection."
        },
        "memoryUtilizationChart": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryUtilizationChartData"
        },
        "totalMemoryBytes": {
          "description": "Sum of the memory in bytes of all the assets in this collection.",
          "type": "string",
          "format": "int64"
        },
        "storageUtilizationChart": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryUtilizationChartData"
        },
        "operatingSystem": {
          "$ref": "ReportSummaryChartData",
          "description": "Count of assets grouped by Operating System families."
        },
        "coreCountHistogram": {
          "$ref": "ReportSummaryHistogramChartData",
          "description": "Histogram showing a distribution of CPU core counts."
        }
      },
      "description": "Aggregate statistics for a collection of assets."
    },
    "VirtualMachinePreferences": {
      "type": "object",
      "description": "VirtualMachinePreferences enables you to create sets of assumptions, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets.",
      "properties": {
        "soleTenancyPreferences": {
          "description": "Preferences concerning Sole Tenant nodes and virtual machines.",
          "$ref": "SoleTenancyPreferences"
        },
        "vmwareEnginePreferences": {
          "$ref": "VmwareEnginePreferences",
          "description": "Preferences concerning insights and recommendations for Google Cloud VMware Engine."
        },
        "targetProduct": {
          "type": "string",
          "description": "Target product for assets using this preference set. Specify either target product or business goal, but not both.",
          "enum": [
            "COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY"
          ],
          "enumDescriptions": [
            "Unspecified (default value).",
            "Prefer to migrate to Google Cloud Compute Engine.",
            "Prefer to migrate to Google Cloud VMware Engine.",
            "Prefer to migrate to Google Cloud Sole Tenant Nodes."
          ]
        },
        "sizingOptimizationStrategy": {
          "type": "string",
          "enum": [
            "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED",
            "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE",
            "SIZING_OPTIMIZATION_STRATEGY_MODERATE",
            "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE"
          ],
          "description": "Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.",
          "enumDescriptions": [
            "Unspecified (default value).",
            "No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.",
            "Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.",
            "Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs."
          ]
        },
        "computeEnginePreferences": {
          "$ref": "ComputeEnginePreferences",
          "description": "Compute Engine preferences concern insights and recommendations for Compute Engine target."
        },
        "commitmentPlan": {
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan.",
            "1 year commitment.",
            "3 years commitment."
          ],
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "COMMITMENT_PLAN_NONE",
            "COMMITMENT_PLAN_ONE_YEAR",
            "COMMITMENT_PLAN_THREE_YEARS"
          ],
          "type": "string"
        },
        "regionPreferences": {
          "$ref": "RegionPreferences",
          "description": "Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with."
        }
      },
      "id": "VirtualMachinePreferences"
    },
    "OpenFileDetails": {
      "description": "Open file Information.",
      "id": "OpenFileDetails",
      "type": "object",
      "properties": {
        "command": {
          "description": "Opened file command.",
          "type": "string"
        },
        "user": {
          "type": "string",
          "description": "Opened file user."
        },
        "fileType": {
          "description": "Opened file file type.",
          "type": "string"
        },
        "filePath": {
          "description": "Opened file file path.",
          "type": "string"
        }
      }
    },
    "NetworkAddress": {
      "description": "Details of network address.",
      "type": "object",
      "id": "NetworkAddress",
      "properties": {
        "assignment": {
          "type": "string",
          "enum": [
            "ADDRESS_ASSIGNMENT_UNSPECIFIED",
            "ADDRESS_ASSIGNMENT_STATIC",
            "ADDRESS_ASSIGNMENT_DHCP"
          ],
          "description": "Whether DHCP is used to assign addresses.",
          "enumDescriptions": [
            "Unknown (default value).",
            "Staticly assigned IP.",
            "Dynamically assigned IP (DHCP)."
          ]
        },
        "subnetMask": {
          "type": "string",
          "description": "Subnet mask."
        },
        "fqdn": {
          "type": "string",
          "description": "Fully qualified domain name."
        },
        "ipAddress": {
          "type": "string",
          "description": "Assigned or configured IP Address."
        },
        "bcast": {
          "description": "Broadcast address.",
          "type": "string"
        }
      }
    },
    "Source": {
      "type": "object",
      "description": "Source represents an object from which asset information is streamed to Migration Center.",
      "id": "Source",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp when the source was created.",
          "readOnly": true
        },
        "type": {
          "enumDescriptions": [
            "Unspecified",
            "Manually uploaded file (e.g. CSV)",
            "Guest-level info",
            "Inventory-level scan",
            "Third-party owned sources."
          ],
          "description": "Data source type.",
          "enum": [
            "SOURCE_TYPE_UNKNOWN",
            "SOURCE_TYPE_UPLOAD",
            "SOURCE_TYPE_GUEST_OS_SCAN",
            "SOURCE_TYPE_INVENTORY_SCAN",
            "SOURCE_TYPE_CUSTOM"
          ],
          "type": "string"
        },
        "name": {
          "description": "Output only. The full name of the source.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETING",
            "INVALID"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "The source is active and ready to be used.",
            "In the process of being deleted.",
            "Source is in an invalid state. Asset frames reported to it will be ignored."
          ],
          "description": "Output only. The state of the source."
        },
        "description": {
          "description": "Free-text description.",
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "description": "The information confidence of the source. The higher the value, the higher the confidence.",
          "type": "integer"
        },
        "managed": {
          "type": "boolean",
          "description": "If `true`, the source is managed by other service(s)."
        },
        "errorFrameCount": {
          "format": "int32",
          "type": "integer",
          "description": "Output only. The number of frames that were reported by the source and contained errors.",
          "readOnly": true
        },
        "pendingFrameCount": {
          "readOnly": true,
          "type": "integer",
          "description": "Output only. Number of frames that are still being processed.",
          "format": "int32"
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The timestamp when the source was last updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name."
        }
      }
    },
    "MigrationInsight": {
      "id": "MigrationInsight",
      "description": "An insight about potential migrations for an asset.",
      "properties": {
        "computeEngineTarget": {
          "$ref": "ComputeEngineMigrationTarget",
          "readOnly": true,
          "description": "Output only. A Google Compute Engine target."
        },
        "fit": {
          "$ref": "FitDescriptor",
          "readOnly": true,
          "description": "Output only. Description of how well the asset this insight is associated with fits the proposed migration."
        }
      },
      "type": "object"
    },
    "AggregationResult": {
      "type": "object",
      "id": "AggregationResult",
      "properties": {
        "frequency": {
          "$ref": "AggregationResultFrequency"
        },
        "count": {
          "$ref": "AggregationResultCount"
        },
        "field": {
          "type": "string"
        },
        "histogram": {
          "$ref": "AggregationResultHistogram"
        },
        "sum": {
          "$ref": "AggregationResultSum"
        }
      },
      "description": "Message describing a result of an aggregation."
    },
    "ReportSummaryVmwareNodeAllocation": {
      "type": "object",
      "description": "Represents assets allocated to a specific VMWare Node type.",
      "properties": {
        "vmwareNode": {
          "$ref": "ReportSummaryVmwareNode",
          "description": "VMWare node type, e.g. \"ve1-standard-72\""
        },
        "allocatedAssetCount": {
          "description": "Count of assets allocated to these nodes",
          "type": "string",
          "format": "int64"
        },
        "nodeCount": {
          "description": "Count of this node type to be provisioned",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "ReportSummaryVmwareNodeAllocation"
    },
    "ValidateImportJobRequest": {
      "description": "A request to validate an import job.",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      },
      "id": "ValidateImportJobRequest",
      "type": "object"
    },
    "Insight": {
      "id": "Insight",
      "type": "object",
      "description": "An insight about an asset.",
      "properties": {
        "migrationInsight": {
          "description": "Output only. An insight about potential migrations for an asset.",
          "readOnly": true,
          "$ref": "MigrationInsight"
        }
      }
    },
    "MachineDiskDetails": {
      "type": "object",
      "description": "Details of machine disks.",
      "id": "MachineDiskDetails",
      "properties": {
        "totalFreeBytes": {
          "description": "Total disk free space.",
          "format": "int64",
          "type": "string"
        },
        "disks": {
          "description": "List of disks.",
          "$ref": "DiskEntryList"
        },
        "totalCapacityBytes": {
          "format": "int64",
          "type": "string",
          "description": "Disk total Capacity."
        }
      }
    },
    "ReportSummarySoleTenantNodeAllocation": {
      "properties": {
        "allocatedAssetCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of assets allocated to these nodes"
        },
        "node": {
          "description": "Sole Tenant node type, e.g. \"m3-node-128-3904\"",
          "$ref": "SoleTenantNodeType"
        },
        "nodeCount": {
          "format": "int64",
          "description": "Count of this node type to be provisioned",
          "type": "string"
        }
      },
      "id": "ReportSummarySoleTenantNodeAllocation",
      "description": "Represents the assets allocated to a specific Sole-Tenant node type.",
      "type": "object"
    },
    "ListErrorFramesResponse": {
      "properties": {
        "errorFrames": {
          "items": {
            "$ref": "ErrorFrame"
          },
          "description": "The list of error frames.",
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      },
      "id": "ListErrorFramesResponse",
      "description": "A response for listing error frames.",
      "type": "object"
    },
    "MachinePreferences": {
      "properties": {
        "allowedMachineSeries": {
          "type": "array",
          "items": {
            "$ref": "MachineSeries"
          },
          "description": "Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series."
        }
      },
      "description": "The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.",
      "type": "object",
      "id": "MachinePreferences"
    },
    "ReportSummaryVmwareEngineFinding": {
      "id": "ReportSummaryVmwareEngineFinding",
      "properties": {
        "allocatedAssetCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of assets which are allocated"
        },
        "nodeAllocations": {
          "description": "Set of per-nodetype allocation records",
          "type": "array",
          "items": {
            "$ref": "ReportSummaryVmwareNodeAllocation"
          }
        },
        "allocatedRegions": {
          "description": "Set of regions in which the assets were allocated",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "A set of findings that applies to assets destined for VMWare Engine."
    },
    "ReportSummaryMachineSeriesAllocation": {
      "id": "ReportSummaryMachineSeriesAllocation",
      "description": "Represents a data point tracking the count of assets allocated for a specific Machine Series.",
      "type": "object",
      "properties": {
        "machineSeries": {
          "description": "The Machine Series (e.g. \"E2\", \"N2\")",
          "$ref": "MachineSeries"
        },
        "allocatedAssetCount": {
          "description": "Count of assets allocated to this machine series.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "ListSourcesResponse": {
      "type": "object",
      "id": "ListSourcesResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "sources": {
          "items": {
            "$ref": "Source"
          },
          "description": "The list of sources.",
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Response message for listing sources."
    },
    "Group": {
      "description": "A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups.",
      "properties": {
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The timestamp when the group was last updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the group was created."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        },
        "description": {
          "type": "string",
          "description": "The description of the resource."
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the group."
        }
      },
      "type": "object",
      "id": "Group"
    },
    "ReportAssetFramesResponse": {
      "id": "ReportAssetFramesResponse",
      "type": "object",
      "properties": {},
      "description": "A response to a call to `ReportAssetFrame`."
    },
    "OpenFileList": {
      "description": "Open file list.",
      "properties": {
        "entries": {
          "items": {
            "$ref": "OpenFileDetails"
          },
          "description": "Open file details entries.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "OpenFileList"
    },
    "VmwareEnginePreferences": {
      "description": "The user preferences relating to Google Cloud VMware Engine target platform.",
      "id": "VmwareEnginePreferences",
      "properties": {
        "commitmentPlan": {
          "type": "string",
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment (monthly payments).",
            "3 year commitment (monthly payments).",
            "1 year commitment (upfront payment).",
            "3 years commitment (upfront payment)."
          ],
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_3_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_1_YEAR_UPFRONT_PAYMENT",
            "COMMITMENT_3_YEAR_UPFRONT_PAYMENT"
          ]
        },
        "storageDeduplicationCompressionRatio": {
          "type": "number",
          "description": "The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.",
          "format": "double"
        },
        "cpuOvercommitRatio": {
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment.",
          "format": "double",
          "type": "number"
        },
        "memoryOvercommitRatio": {
          "type": "number",
          "description": "Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0.",
          "format": "double"
        }
      },
      "type": "object"
    },
    "ValidationReport": {
      "type": "object",
      "properties": {
        "fileValidations": {
          "type": "array",
          "description": "List of errors found in files.",
          "items": {
            "$ref": "FileValidationReport"
          }
        },
        "jobErrors": {
          "items": {
            "$ref": "ImportError"
          },
          "type": "array",
          "description": "List of job level errors."
        }
      },
      "description": "A resource that aggregates errors across import job files.",
      "id": "ValidationReport"
    },
    "FitDescriptor": {
      "properties": {
        "fitLevel": {
          "enumDescriptions": [
            "Not enough information.",
            "Fit.",
            "No Fit.",
            "Fit with effort."
          ],
          "description": "Fit level.",
          "enum": [
            "FIT_LEVEL_UNSPECIFIED",
            "FIT",
            "NO_FIT",
            "REQUIRES_EFFORT"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "description": "Describes the fit level of an asset for migration to a specific target.",
      "id": "FitDescriptor"
    },
    "AggregationFrequency": {
      "type": "object",
      "properties": {},
      "id": "AggregationFrequency",
      "description": "Frequency distribution of all field values."
    },
    "DailyResourceUsageAggregationMemory": {
      "properties": {
        "utilizationPercentage": {
          "description": "Memory utilization percentage.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "type": "object",
      "description": "Statistical aggregation of memory usage.",
      "id": "DailyResourceUsageAggregationMemory"
    },
    "SoleTenantNodeType": {
      "description": "A Sole Tenant node type.",
      "id": "SoleTenantNodeType",
      "type": "object",
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes"
        }
      }
    },
    "FstabEntryList": {
      "type": "object",
      "description": "Fstab content.",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "FstabEntry"
          },
          "description": "Fstab entries."
        }
      },
      "id": "FstabEntryList"
    },
    "ImportRowError": {
      "id": "ImportRowError",
      "type": "object",
      "description": "A resource that reports the import job errors at row level.",
      "properties": {
        "vmUuid": {
          "type": "string",
          "description": "The VM UUID."
        },
        "errors": {
          "description": "The list of errors detected in the row.",
          "type": "array",
          "items": {
            "$ref": "ImportError"
          }
        },
        "rowNumber": {
          "description": "The row number where the error was detected.",
          "deprecated": true,
          "type": "integer",
          "format": "int32"
        },
        "vmName": {
          "type": "string",
          "description": "The name of the VM in the row."
        }
      }
    },
    "GuestOsDetails": {
      "id": "GuestOsDetails",
      "type": "object",
      "description": "Information from Guest-level collections.",
      "properties": {
        "family": {
          "description": "What family the OS belong to, if known.",
          "enum": [
            "OS_FAMILY_UNKNOWN",
            "OS_FAMILY_WINDOWS",
            "OS_FAMILY_LINUX",
            "OS_FAMILY_UNIX"
          ],
          "enumDescriptions": [
            "",
            "Microsoft Windows Server and Desktop.",
            "Various Linux flavors.",
            "Non-Linux Unix flavors."
          ],
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "The version of the operating system."
        },
        "runtime": {
          "description": "Runtime information.",
          "$ref": "GuestRuntimeDetails"
        },
        "osName": {
          "type": "string",
          "description": "The name of the operating system."
        },
        "config": {
          "$ref": "GuestConfigDetails",
          "description": "OS and app configuration."
        }
      }
    },
    "AggregateAssetsValuesRequest": {
      "description": "A request to aggregate one or more values.",
      "properties": {
        "aggregations": {
          "type": "array",
          "items": {
            "$ref": "Aggregation"
          },
          "description": "Array of aggregations to perform. Up to 25 aggregations can be defined."
        },
        "filter": {
          "type": "string",
          "description": "The aggregation will be performed on assets that match the provided filter."
        }
      },
      "type": "object",
      "id": "AggregateAssetsValuesRequest"
    },
    "PhysicalPlatformDetails": {
      "properties": {
        "location": {
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Platform specific details for Physical Machines.",
      "id": "PhysicalPlatformDetails"
    },
    "AggregationResultCount": {
      "type": "object",
      "id": "AggregationResultCount",
      "description": "The result of a count aggregation.",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ReportConfig": {
      "description": "The groups and associated preference sets on which we can generate reports.",
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. Name of resource.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the resource was created."
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was last updated.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "groupPreferencesetAssignments": {
          "description": "Required. Collection of combinations of groups and preference sets.",
          "type": "array",
          "items": {
            "$ref": "ReportConfigGroupPreferenceSetAssignment"
          }
        }
      },
      "id": "ReportConfig",
      "type": "object"
    },
    "NetworkAdapterList": {
      "id": "NetworkAdapterList",
      "properties": {
        "entries": {
          "items": {
            "$ref": "NetworkAdapterDetails"
          },
          "description": "Network adapter entries.",
          "type": "array"
        }
      },
      "description": "List of network adapters.",
      "type": "object"
    },
    "VmwareDiskConfig": {
      "properties": {
        "vmdkMode": {
          "enum": [
            "VMDK_MODE_UNSPECIFIED",
            "DEPENDENT",
            "INDEPENDENT_PERSISTENT",
            "INDEPENDENT_NONPERSISTENT"
          ],
          "type": "string",
          "enumDescriptions": [
            "VMDK disk mode unspecified or unknown.",
            "Dependent disk mode.",
            "Independent - Persistent disk mode.",
            "Independent - Nonpersistent disk mode."
          ],
          "description": "VMDK disk mode."
        },
        "shared": {
          "description": "Is VMDK shared with other VMs.",
          "type": "boolean"
        },
        "rdmCompatibility": {
          "description": "RDM compatibility mode.",
          "enumDescriptions": [
            "Compatibility mode unspecified or unknown.",
            "Physical compatibility mode.",
            "Virtual compatibility mode."
          ],
          "type": "string",
          "enum": [
            "RDM_COMPATIBILITY_UNSPECIFIED",
            "PHYSICAL_COMPATIBILITY",
            "VIRTUAL_COMPATIBILITY"
          ]
        },
        "backingType": {
          "description": "VMDK backing type.",
          "enum": [
            "BACKING_TYPE_UNSPECIFIED",
            "BACKING_TYPE_FLAT_V1",
            "BACKING_TYPE_FLAT_V2",
            "BACKING_TYPE_PMEM",
            "BACKING_TYPE_RDM_V1",
            "BACKING_TYPE_RDM_V2",
            "BACKING_TYPE_SESPARSE",
            "BACKING_TYPE_SESPARSE_V1",
            "BACKING_TYPE_SESPARSE_V2"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Flat v1.",
            "Flat v2.",
            "Persistent memory, also known as Non-Volatile Memory (NVM).",
            "Raw Disk Memory v1.",
            "Raw Disk Memory v2.",
            "SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.",
            "SEsparse v1.",
            "SEsparse v1."
          ]
        }
      },
      "type": "object",
      "description": "VMware disk config details.",
      "id": "VmwareDiskConfig"
    },
    "HostsEntry": {
      "description": "Single /etc/hosts entry.",
      "id": "HostsEntry",
      "properties": {
        "ip": {
          "description": "IP (raw, IPv4/6 agnostic).",
          "type": "string"
        },
        "hostNames": {
          "description": "List of host names / aliases.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AggregationCount": {
      "type": "object",
      "properties": {},
      "description": "Object count.",
      "id": "AggregationCount"
    },
    "RunningServiceList": {
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "RunningService"
          },
          "description": "Running service entries.",
          "type": "array"
        }
      },
      "description": "List of running guest OS services.",
      "id": "RunningServiceList"
    },
    "Location": {
      "type": "object",
      "properties": {
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        }
      },
      "id": "Location",
      "description": "A resource that represents a Google Cloud location."
    },
    "ListAssetsResponse": {
      "type": "object",
      "description": "Response message for listing assets.",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "assets": {
          "type": "array",
          "items": {
            "$ref": "Asset"
          },
          "description": "A list of assets."
        }
      },
      "id": "ListAssetsResponse"
    },
    "ReportSummaryVmwareNode": {
      "id": "ReportSummaryVmwareNode",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code to identify VMware Engine node series, e.g. \"ve1-standard-72\". Based on the displayName of cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.nodeTypes",
          "type": "string"
        }
      },
      "description": "A VMWare Engine Node"
    },
    "FrameViolationEntry": {
      "id": "FrameViolationEntry",
      "properties": {
        "field": {
          "description": "The field of the original frame where the violation occurred.",
          "type": "string"
        },
        "violation": {
          "description": "A message describing the violation.",
          "type": "string"
        }
      },
      "description": "A resource that contains a single violation of a reported `AssetFrame` resource.",
      "type": "object"
    },
    "ListImportDataFilesResponse": {
      "description": "Response for listing payload files of an import job.",
      "properties": {
        "importDataFiles": {
          "items": {
            "$ref": "ImportDataFile"
          },
          "description": "The list of import data files.",
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListImportDataFilesResponse"
    },
    "BiosDetails": {
      "description": "Details about the BIOS.",
      "id": "BiosDetails",
      "properties": {
        "version": {
          "type": "string",
          "description": "BIOS version."
        },
        "id": {
          "description": "BIOS ID.",
          "type": "string"
        },
        "smbiosUuid": {
          "type": "string",
          "description": "SMBIOS UUID."
        },
        "biosName": {
          "description": "BIOS name. This fields is deprecated. Please use the `id` field instead.",
          "type": "string",
          "deprecated": true
        },
        "releaseDate": {
          "description": "BIOS release date.",
          "$ref": "Date"
        },
        "manufacturer": {
          "type": "string",
          "description": "BIOS manufacturer."
        }
      },
      "type": "object"
    },
    "UpdateAssetRequest": {
      "type": "object",
      "description": "A request to update an asset.",
      "properties": {
        "asset": {
          "description": "Required. The resource being updated.",
          "$ref": "Asset"
        },
        "updateMask": {
          "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
          "type": "string",
          "format": "google-fieldmask"
        },
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      },
      "id": "UpdateAssetRequest"
    },
    "NetworkConnectionList": {
      "id": "NetworkConnectionList",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "NetworkConnection"
          },
          "description": "Network connection entries."
        }
      },
      "description": "Network connection list.",
      "type": "object"
    },
    "ListGroupsResponse": {
      "type": "object",
      "properties": {
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "groups": {
          "items": {
            "$ref": "Group"
          },
          "description": "The list of Group",
          "type": "array"
        }
      },
      "id": "ListGroupsResponse",
      "description": "A response for listing groups."
    },
    "DailyResourceUsageAggregationNetwork": {
      "properties": {
        "ingressBps": {
          "description": "Network ingress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        },
        "egressBps": {
          "description": "Network egress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "type": "object",
      "id": "DailyResourceUsageAggregationNetwork",
      "description": "Statistical aggregation of network usage."
    },
    "RemoveAssetsFromGroupRequest": {
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        },
        "assets": {
          "description": "Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000.",
          "$ref": "AssetList"
        },
        "allowMissing": {
          "type": "boolean",
          "description": "Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`."
        }
      },
      "description": "A request to remove assets from a group.",
      "type": "object",
      "id": "RemoveAssetsFromGroupRequest"
    },
    "ImportJob": {
      "properties": {
        "assetSource": {
          "description": "Required. Reference to a source.",
          "type": "string"
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "The import job is pending.",
            "The processing of the import job is ongoing.",
            "The import job processing has completed.",
            "The import job failed to be processed.",
            "The import job is being validated.",
            "The import job contains blocking errors.",
            "The validation of the job completed with no blocking errors."
          ],
          "description": "Output only. The state of the import job.",
          "enum": [
            "IMPORT_JOB_STATE_UNSPECIFIED",
            "IMPORT_JOB_STATE_PENDING",
            "IMPORT_JOB_STATE_RUNNING",
            "IMPORT_JOB_STATE_COMPLETED",
            "IMPORT_JOB_STATE_FAILED",
            "IMPORT_JOB_STATE_VALIDATING",
            "IMPORT_JOB_STATE_FAILED_VALIDATION",
            "IMPORT_JOB_STATE_READY"
          ],
          "readOnly": true
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The timestamp when the import job was last updated.",
          "format": "google-datetime",
          "readOnly": true
        },
        "completeTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the import job was completed.",
          "type": "string"
        },
        "executionReport": {
          "$ref": "ExecutionReport",
          "description": "Output only. The report with the results of running the import job.",
          "readOnly": true
        },
        "name": {
          "description": "Output only. The full name of the import job.",
          "readOnly": true,
          "type": "string"
        },
        "validationReport": {
          "description": "Output only. The report with the validation results of the import job.",
          "$ref": "ValidationReport",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the import job was created.",
          "format": "google-datetime"
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "A resource that represents the background job that imports asset frames.",
      "id": "ImportJob",
      "type": "object"
    },
    "OperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "verb": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation."
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "requestedCancellation": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running."
        }
      },
      "id": "OperationMetadata"
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        }
      },
      "id": "Operation"
    },
    "RunningService": {
      "properties": {
        "startMode": {
          "type": "string",
          "enum": [
            "START_MODE_UNSPECIFIED",
            "BOOT",
            "SYSTEM",
            "AUTO",
            "MANUAL",
            "DISABLED"
          ],
          "enumDescriptions": [
            "Start mode unspecified.",
            "The service is a device driver started by the system loader.",
            "The service is a device driver started by the IOInitSystem function.",
            "The service is started by the operating system, at system start-up",
            "The service is started only manually, by a user.",
            "The service is disabled."
          ],
          "description": "Service start mode (OS-agnostic)."
        },
        "cmdline": {
          "description": "Service command line.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "PAUSED",
            "STOPPED"
          ],
          "description": "Service state (OS-agnostic).",
          "enumDescriptions": [
            "Service state unspecified.",
            "Service is active.",
            "Service is paused.",
            "Service is stopped."
          ]
        },
        "pid": {
          "description": "Service pid.",
          "format": "int64",
          "type": "string"
        },
        "exePath": {
          "type": "string",
          "description": "Service binary path."
        },
        "serviceName": {
          "description": "Service name.",
          "type": "string"
        }
      },
      "description": "Guest OS running service details.",
      "type": "object",
      "id": "RunningService"
    },
    "ListReportConfigsResponse": {
      "id": "ListReportConfigsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "reportConfigs": {
          "description": "A list of report configs.",
          "items": {
            "$ref": "ReportConfig"
          },
          "type": "array"
        }
      },
      "description": "Response message for listing report configs.",
      "type": "object"
    },
    "DiskEntry": {
      "type": "object",
      "id": "DiskEntry",
      "properties": {
        "interfaceType": {
          "type": "string",
          "enumDescriptions": [
            "Interface type unknown or unspecified.",
            "IDE interface type.",
            "SATA interface type.",
            "SAS interface type.",
            "SCSI interface type.",
            "NVME interface type.",
            "FC interface type.",
            "iSCSI interface type."
          ],
          "description": "Disks interface type.",
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "IDE",
            "SATA",
            "SAS",
            "SCSI",
            "NVME",
            "FC",
            "ISCSI"
          ]
        },
        "vmware": {
          "$ref": "VmwareDiskConfig",
          "description": "VMware disk details."
        },
        "hwAddress": {
          "type": "string",
          "description": "Disk hardware address (e.g. 0:1 for SCSI)."
        },
        "diskLabel": {
          "type": "string",
          "description": "Disk label."
        },
        "diskLabelType": {
          "type": "string",
          "description": "Disk label type (e.g. BIOS/GPT)"
        },
        "freeBytes": {
          "description": "Disk free space.",
          "type": "string",
          "format": "int64"
        },
        "partitions": {
          "$ref": "DiskPartitionList",
          "description": "Partition layout."
        },
        "capacityBytes": {
          "description": "Disk capacity.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Single disk entry."
    },
    "ReportSummarySoleTenantFinding": {
      "type": "object",
      "id": "ReportSummarySoleTenantFinding",
      "properties": {
        "allocatedAssetCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of assets which are allocated"
        },
        "allocatedRegions": {
          "items": {
            "type": "string"
          },
          "description": "Set of regions in which the assets are allocated",
          "type": "array"
        },
        "nodeAllocations": {
          "description": "Set of per-nodetype allocation records",
          "items": {
            "$ref": "ReportSummarySoleTenantNodeAllocation"
          },
          "type": "array"
        }
      },
      "description": "A set of findings that applies to assets destined for Sole-Tenant nodes."
    },
    "SoleTenancyPreferences": {
      "description": "Preferences concerning Sole Tenancy nodes and VMs.",
      "type": "object",
      "properties": {
        "nodeTypes": {
          "type": "array",
          "description": "A list of sole tenant node types. An empty list means that all possible node types will be considered.",
          "items": {
            "$ref": "SoleTenantNodeType"
          }
        },
        "commitmentPlan": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment.",
            "3 years commitment."
          ],
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR",
            "COMMITMENT_3_YEAR"
          ],
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with."
        },
        "cpuOvercommitRatio": {
          "format": "double",
          "type": "number",
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive."
        },
        "hostMaintenancePolicy": {
          "enum": [
            "HOST_MAINTENANCE_POLICY_UNSPECIFIED",
            "HOST_MAINTENANCE_POLICY_DEFAULT",
            "HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE",
            "HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP"
          ],
          "enumDescriptions": [
            "Unspecified host maintenance policy.",
            "Default host maintenance policy.",
            "Restart in place host maintenance policy.",
            "Migrate within node group host maintenance policy."
          ],
          "description": "Sole Tenancy nodes maintenance policy.",
          "type": "string"
        }
      },
      "id": "SoleTenancyPreferences"
    },
    "AggregationResultHistogram": {
      "description": "The result of a bucketed histogram aggregation.",
      "id": "AggregationResultHistogram",
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "$ref": "AggregationResultHistogramBucket"
          },
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity."
        }
      }
    },
    "AssetFrame": {
      "description": "Contains data reported from an inventory source on an asset.",
      "id": "AssetFrame",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Generic asset attributes."
        },
        "performanceSamples": {
          "description": "Asset performance data samples. Samples that are from more than 40 days ago or after tomorrow are ignored.",
          "type": "array",
          "items": {
            "$ref": "PerformanceSample"
          }
        },
        "reportTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the data was reported."
        },
        "traceToken": {
          "type": "string",
          "description": "Optional. Trace token is optionally provided to assist with debugging and traceability."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "machineDetails": {
          "description": "Asset information specific for virtual machines.",
          "$ref": "MachineDetails"
        }
      },
      "type": "object"
    },
    "GuestInstalledApplication": {
      "id": "GuestInstalledApplication",
      "properties": {
        "vendor": {
          "type": "string",
          "description": "Installed application vendor."
        },
        "version": {
          "type": "string",
          "description": "Installed application version."
        },
        "path": {
          "description": "Source path.",
          "type": "string"
        },
        "applicationName": {
          "description": "Installed application name.",
          "type": "string"
        },
        "installTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time when the application was installed."
        }
      },
      "type": "object",
      "description": "Guest installed application information."
    },
    "ReportSummaryChartData": {
      "type": "object",
      "properties": {
        "dataPoints": {
          "items": {
            "$ref": "ReportSummaryChartDataDataPoint"
          },
          "description": "Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value.",
          "type": "array"
        }
      },
      "id": "ReportSummaryChartData",
      "description": "Describes a collection of data points rendered as a Chart."
    },
    "DailyResourceUsageAggregation": {
      "description": "Usage data aggregation for a single day.",
      "properties": {
        "cpu": {
          "description": "CPU usage.",
          "$ref": "DailyResourceUsageAggregationCPU"
        },
        "network": {
          "$ref": "DailyResourceUsageAggregationNetwork",
          "description": "Network usage."
        },
        "date": {
          "description": "Aggregation date. Day boundaries are at midnight UTC.",
          "$ref": "Date"
        },
        "memory": {
          "description": "Memory usage.",
          "$ref": "DailyResourceUsageAggregationMemory"
        },
        "disk": {
          "description": "Disk usage.",
          "$ref": "DailyResourceUsageAggregationDisk"
        }
      },
      "type": "object",
      "id": "DailyResourceUsageAggregation"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListOperationsResponse"
    },
    "MachineArchitectureDetails": {
      "properties": {
        "firmwareType": {
          "enumDescriptions": [
            "Unspecified or unknown.",
            "BIOS firmware.",
            "EFI firmware."
          ],
          "type": "string",
          "enum": [
            "FIRMWARE_TYPE_UNSPECIFIED",
            "BIOS",
            "EFI"
          ],
          "description": "Firmware type."
        },
        "bios": {
          "$ref": "BiosDetails",
          "description": "BIOS Details."
        },
        "cpuSocketCount": {
          "description": "Number of processor sockets allocated to the machine.",
          "type": "integer",
          "format": "int32"
        },
        "cpuArchitecture": {
          "description": "CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc.",
          "type": "string"
        },
        "vendor": {
          "type": "string",
          "description": "Hardware vendor."
        },
        "cpuName": {
          "description": "CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc.",
          "type": "string"
        },
        "cpuThreadCount": {
          "description": "Number of CPU threads allocated to the machine.",
          "type": "integer",
          "format": "int32"
        },
        "hyperthreading": {
          "enum": [
            "CPU_HYPER_THREADING_UNSPECIFIED",
            "DISABLED",
            "ENABLED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified or unknown.",
            "Hyper-threading is disabled.",
            "Hyper-threading is enabled."
          ],
          "description": "CPU hyper-threading support."
        }
      },
      "description": "Details of the machine architecture.",
      "id": "MachineArchitectureDetails",
      "type": "object"
    },
    "GuestConfigDetails": {
      "id": "GuestConfigDetails",
      "description": "Guest OS config information.",
      "type": "object",
      "properties": {
        "fstab": {
          "description": "Mount list (Linux fstab).",
          "$ref": "FstabEntryList"
        },
        "selinuxMode": {
          "enum": [
            "SE_LINUX_MODE_UNSPECIFIED",
            "SE_LINUX_MODE_DISABLED",
            "SE_LINUX_MODE_PERMISSIVE",
            "SE_LINUX_MODE_ENFORCING"
          ],
          "type": "string",
          "description": "Security-Enhanced Linux (SELinux) mode.",
          "enumDescriptions": [
            "SELinux mode unknown or unspecified.",
            "SELinux is disabled.",
            "SELinux permissive mode.",
            "SELinux enforcing mode."
          ]
        },
        "issue": {
          "type": "string",
          "description": "OS issue (typically /etc/issue in Linux)."
        },
        "nfsExports": {
          "description": "NFS exports.",
          "$ref": "NfsExportList"
        },
        "hosts": {
          "description": "Hosts file (/etc/hosts).",
          "$ref": "HostsEntryList"
        }
      }
    },
    "PerformanceSample": {
      "id": "PerformanceSample",
      "properties": {
        "cpu": {
          "$ref": "CpuUsageSample",
          "description": "CPU usage sample."
        },
        "memory": {
          "$ref": "MemoryUsageSample",
          "description": "Memory usage sample."
        },
        "disk": {
          "$ref": "DiskUsageSample",
          "description": "Disk usage sample."
        },
        "sampleTime": {
          "description": "Time the sample was If omitted, the frame report time will be used.",
          "format": "google-datetime",
          "type": "string"
        },
        "network": {
          "$ref": "NetworkUsageSample",
          "description": "Network usage sample."
        }
      },
      "description": "Performance data sample.",
      "type": "object"
    },
    "MemoryUsageSample": {
      "id": "MemoryUsageSample",
      "properties": {
        "utilizedPercentage": {
          "type": "number",
          "format": "float",
          "description": "Percentage of system memory utilized. Must be in the interval [0, 100]."
        }
      },
      "type": "object",
      "description": "Memory usage sample."
    },
    "GuestRuntimeDetails": {
      "description": "Guest OS runtime information.",
      "properties": {
        "services": {
          "$ref": "RunningServiceList",
          "description": "Running background services."
        },
        "installedApps": {
          "$ref": "GuestInstalledApplicationList",
          "description": "Installed applications information."
        },
        "openFileList": {
          "description": "Open files information.",
          "$ref": "OpenFileList"
        },
        "machineName": {
          "description": "Machine name.",
          "type": "string"
        },
        "domain": {
          "type": "string",
          "description": "Domain, e.g. c.stratozone-development.internal."
        },
        "network": {
          "$ref": "RuntimeNetworkInfo",
          "description": "Runtime network information (connections, ports)."
        },
        "lastBootTime": {
          "description": "Last time the OS was booted.",
          "type": "string",
          "format": "google-datetime"
        },
        "processes": {
          "$ref": "RunningProcessList",
          "description": "Running processes."
        }
      },
      "id": "GuestRuntimeDetails",
      "type": "object"
    },
    "AggregationHistogram": {
      "description": "Histogram of bucketed assets counts by field value.",
      "id": "AggregationHistogram",
      "properties": {
        "lowerBounds": {
          "description": "Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.",
          "items": {
            "format": "double",
            "type": "number"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Status": {
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "Status"
    },
    "FstabEntry": {
      "description": "Single fstab entry.",
      "properties": {
        "freq": {
          "description": "Used by dump to determine which filesystems need to be dumped.",
          "type": "integer",
          "format": "int32"
        },
        "spec": {
          "type": "string",
          "description": "The block special device or remote filesystem to be mounted."
        },
        "passno": {
          "type": "integer",
          "format": "int32",
          "description": "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time."
        },
        "file": {
          "description": "The mount point for the filesystem.",
          "type": "string"
        },
        "mntops": {
          "type": "string",
          "description": "Mount options associated with the filesystem."
        },
        "vfstype": {
          "description": "The type of the filesystem.",
          "type": "string"
        }
      },
      "id": "FstabEntry",
      "type": "object"
    },
    "ImportDataFile": {
      "type": "object",
      "id": "ImportDataFile",
      "description": "A resource that represents a payload file in an import job.",
      "properties": {
        "name": {
          "description": "Output only. The name of the file.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE"
          ],
          "description": "Output only. The state of the import data file.",
          "enumDescriptions": [
            "Default value.",
            "The data file is being created.",
            "The data file completed initialization."
          ],
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The timestamp when the file was created.",
          "type": "string",
          "readOnly": true
        },
        "format": {
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_STRATOZONE_CSV"
          ],
          "description": "Required. The payload format.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually and following the StratoZone format. For more information, see Manually create and upload data tables."
          ]
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "uploadFileInfo": {
          "$ref": "UploadFileInfo",
          "description": "Information about a file that is uploaded to a storage service."
        }
      }
    },
    "Settings": {
      "type": "object",
      "id": "Settings",
      "properties": {
        "preferenceSet": {
          "description": "The preference set used by default for a project.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the resource.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "Describes the Migration Center settings related to the project."
    },
    "PlatformDetails": {
      "properties": {
        "awsEc2Details": {
          "$ref": "AwsEc2PlatformDetails",
          "description": "AWS EC2 specific details."
        },
        "genericDetails": {
          "description": "Generic platform details.",
          "$ref": "GenericPlatformDetails"
        },
        "azureVmDetails": {
          "$ref": "AzureVmPlatformDetails",
          "description": "Azure VM specific details."
        },
        "physicalDetails": {
          "$ref": "PhysicalPlatformDetails",
          "description": "Physical machines platform details."
        },
        "vmwareDetails": {
          "description": "VMware specific details.",
          "$ref": "VmwarePlatformDetails"
        }
      },
      "description": "Information about the platform.",
      "type": "object",
      "id": "PlatformDetails"
    },
    "DailyResourceUsageAggregationStats": {
      "properties": {
        "peak": {
          "format": "float",
          "type": "number",
          "description": "Peak usage value."
        },
        "ninteyFifthPercentile": {
          "format": "float",
          "description": "95th percentile usage value.",
          "type": "number"
        },
        "median": {
          "description": "Median usage value.",
          "type": "number",
          "format": "float"
        },
        "average": {
          "type": "number",
          "description": "Average usage value.",
          "format": "float"
        }
      },
      "description": "Statistical aggregation of samples for a single resource usage.",
      "type": "object",
      "id": "DailyResourceUsageAggregationStats"
    },
    "AssetList": {
      "description": "Lists the asset IDs of all assets.",
      "properties": {
        "assetIds": {
          "items": {
            "type": "string"
          },
          "description": "Required. A list of asset IDs",
          "type": "array"
        }
      },
      "type": "object",
      "id": "AssetList"
    },
    "ComputeEnginePreferences": {
      "properties": {
        "machinePreferences": {
          "description": "Preferences concerning the machine types to consider on Compute Engine.",
          "$ref": "MachinePreferences"
        },
        "licenseType": {
          "enum": [
            "LICENSE_TYPE_UNSPECIFIED",
            "LICENSE_TYPE_DEFAULT",
            "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE"
          ],
          "enumDescriptions": [
            "Unspecified (default value).",
            "Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with.",
            "Bring-your-own-license (BYOL) plan. User provides the OS license."
          ],
          "description": "License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.",
          "type": "string"
        }
      },
      "id": "ComputeEnginePreferences",
      "type": "object",
      "description": "The user preferences relating to Compute Engine target platform."
    },
    "Date": {
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "id": "Date",
      "properties": {
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
        },
        "year": {
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer"
        },
        "day": {
          "format": "int32",
          "type": "integer",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
        }
      },
      "type": "object"
    },
    "Asset": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the asset was created.",
          "format": "google-datetime"
        },
        "attributes": {
          "type": "object",
          "description": "Generic asset attributes.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. The list of sources contributing to the asset.",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The full name of the asset.",
          "type": "string"
        },
        "machineDetails": {
          "description": "Output only. Asset information specific for virtual and physical machines.",
          "readOnly": true,
          "$ref": "MachineDetails"
        },
        "assignedGroups": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Output only. The list of groups that the asset is assigned to.",
          "type": "array"
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The timestamp when the asset was last updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "performanceData": {
          "$ref": "AssetPerformanceData",
          "readOnly": true,
          "description": "Output only. Performance data for the asset."
        },
        "insightList": {
          "description": "Output only. The list of insights associated with the asset.",
          "$ref": "InsightList",
          "readOnly": true
        }
      },
      "description": "An asset represents a resource in your environment. Asset types include virtual machines and databases.",
      "id": "Asset"
    },
    "DailyResourceUsageAggregationDisk": {
      "type": "object",
      "properties": {
        "iops": {
          "description": "Disk I/O operations per second.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "id": "DailyResourceUsageAggregationDisk",
      "description": "Statistical aggregation of disk usage."
    },
    "NfsExport": {
      "id": "NfsExport",
      "description": "NFS export.",
      "properties": {
        "exportDirectory": {
          "type": "string",
          "description": "The directory being exported."
        },
        "hosts": {
          "type": "array",
          "description": "The hosts or networks to which the export is being shared.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "NetworkAddressList": {
      "properties": {
        "entries": {
          "type": "array",
          "description": "Network address entries.",
          "items": {
            "$ref": "NetworkAddress"
          }
        }
      },
      "id": "NetworkAddressList",
      "type": "object",
      "description": "List of allocated/assigned network addresses."
    },
    "ReportConfigGroupPreferenceSetAssignment": {
      "description": "Represents a combination of a group with a preference set.",
      "type": "object",
      "id": "ReportConfigGroupPreferenceSetAssignment",
      "properties": {
        "preferenceSet": {
          "description": "Required. Name of the Preference Set.",
          "type": "string"
        },
        "group": {
          "type": "string",
          "description": "Required. Name of the group."
        }
      }
    },
    "Report": {
      "properties": {
        "summary": {
          "readOnly": true,
          "$ref": "ReportSummary",
          "description": "Output only. Summary view of the Report."
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        },
        "updateTime": {
          "description": "Output only. Last update timestamp.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "description": "Report creation state.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "SUCCEEDED",
            "FAILED"
          ],
          "enumDescriptions": [
            "Default Report creation state.",
            "Creating Report.",
            "Successfully created Report.",
            "Failed to create Report."
          ],
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Default Report type.",
            "Total cost of ownership Report type."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TOTAL_COST_OF_OWNERSHIP"
          ],
          "description": "Report type."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. Creation timestamp.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Output only. Name of resource.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "Report represents a point-in-time rendering of the ReportConfig results.",
      "type": "object",
      "id": "Report"
    },
    "ReportSummaryGroupPreferenceSetFinding": {
      "description": "Summary Findings for a specific Group/PreferenceSet combination.",
      "type": "object",
      "properties": {
        "vmwareEngineFinding": {
          "description": "A set of findings that applies to VMWare machines in the input.",
          "$ref": "ReportSummaryVmwareEngineFinding"
        },
        "machinePreferences": {
          "$ref": "VirtualMachinePreferences",
          "description": "A set of preferences that applies to all machines in the context."
        },
        "displayName": {
          "description": "Display Name of the Preference Set",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Description for the Preference Set."
        },
        "monthlyCostCompute": {
          "description": "Compute monthly cost for this preference set.",
          "$ref": "Money"
        },
        "monthlyCostTotal": {
          "$ref": "Money",
          "description": "Total monthly cost for this preference set."
        },
        "monthlyCostStorage": {
          "$ref": "Money",
          "description": "Storage monthly cost for this preference set."
        },
        "computeEngineFinding": {
          "$ref": "ReportSummaryComputeEngineFinding",
          "description": "A set of findings that applies to Compute Engine machines in the input."
        },
        "monthlyCostNetworkEgress": {
          "description": "Network Egress monthly cost for this preference set.",
          "$ref": "Money"
        },
        "monthlyCostOsLicense": {
          "description": "Licensing monthly cost for this preference set.",
          "$ref": "Money"
        },
        "monthlyCostOther": {
          "description": "Miscellaneous monthly cost for this preference set.",
          "$ref": "Money"
        },
        "soleTenantFinding": {
          "description": "A set of findings that applies to Sole-Tenant machines in the input.",
          "$ref": "ReportSummarySoleTenantFinding"
        }
      },
      "id": "ReportSummaryGroupPreferenceSetFinding"
    },
    "NetworkUsageSample": {
      "properties": {
        "averageEgressBps": {
          "description": "Average network egress in B/s sampled over a short window. Must be non-negative.",
          "type": "number",
          "format": "float"
        },
        "averageIngressBps": {
          "description": "Average network ingress in B/s sampled over a short window. Must be non-negative.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object",
      "description": "Network usage sample. Values are across all network interfaces.",
      "id": "NetworkUsageSample"
    },
    "ListPreferenceSetsResponse": {
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "preferenceSets": {
          "description": "The list of PreferenceSets",
          "type": "array",
          "items": {
            "$ref": "PreferenceSet"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        }
      },
      "description": "Response message for listing preference sets.",
      "id": "ListPreferenceSetsResponse",
      "type": "object"
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {},
      "id": "CancelOperationRequest"
    },
    "ListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "id": "ListLocationsResponse"
    },
    "ErrorFrame": {
      "type": "object",
      "id": "ErrorFrame",
      "properties": {
        "violations": {
          "type": "array",
          "description": "Output only. All the violations that were detected for the frame.",
          "items": {
            "$ref": "FrameViolationEntry"
          },
          "readOnly": true
        },
        "originalFrame": {
          "$ref": "AssetFrame",
          "description": "Output only. The frame that was originally reported.",
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The identifier of the ErrorFrame."
        },
        "ingestionTime": {
          "description": "Output only. Frame ingestion time.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "Message representing a frame which failed to be processed due to an error."
    }
  },
  "basePath": "",
  "title": "Migration Center API",
  "servicePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "name": "migrationcenter",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "response": {
                "$ref": "Location"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Resource name for the location.",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "id": "migrationcenter.projects.locations.get",
              "path": "v1/{+name}",
              "description": "Gets information about a location."
            },
            "getSettings": {
              "response": {
                "$ref": "Settings"
              },
              "id": "migrationcenter.projects.locations.getSettings",
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "description": "Required. Name of the resource.",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "description": "Gets the details of regional settings.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32"
                },
                "filter": {
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "id": "migrationcenter.projects.locations.list",
              "path": "v1/{+name}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "flatPath": "v1/projects/{projectsId}/locations",
              "parameterOrder": [
                "name"
              ],
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "updateSettings": {
              "response": {
                "$ref": "Operation"
              },
              "description": "Updates the regional-level project settings.",
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "description": "Required. Field mask is used to specify the fields to be overwritten in the `Settings` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                  "location": "query",
                  "format": "google-fieldmask"
                },
                "requestId": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                },
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "description": "Output only. The name of the resource."
                }
              },
              "id": "migrationcenter.projects.locations.updateSettings",
              "request": {
                "$ref": "Settings"
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "httpMethod": "PATCH"
            }
          },
          "resources": {
            "importJobs": {
              "resources": {
                "importDataFiles": {
                  "methods": {
                    "create": {
                      "httpMethod": "POST",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "importDataFileId": {
                          "type": "string",
                          "description": "Required. The ID of the new data file.",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "description": "Required. Name of the parent of the ImportDataFile.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "required": true,
                          "type": "string"
                        },
                        "requestId": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        }
                      },
                      "request": {
                        "$ref": "ImportDataFile"
                      },
                      "path": "v1/{+parent}/importDataFiles",
                      "description": "Creates an import data file.",
                      "response": {
                        "$ref": "Operation"
                      }
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.delete",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the ImportDataFile to delete.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "type": "string",
                          "location": "path"
                        },
                        "requestId": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        }
                      },
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Delete an import data file.",
                      "httpMethod": "DELETE"
                    },
                    "list": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "httpMethod": "GET",
                      "description": "List import data files.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/importDataFiles",
                      "response": {
                        "$ref": "ListImportDataFilesResponse"
                      },
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "pageToken": {
                          "description": "A page token, received from a previous `ListImportDataFiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListImportDataFiles` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "location": "query",
                          "description": "Filtering results.",
                          "type": "string"
                        },
                        "orderBy": {
                          "type": "string",
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "location": "query"
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "The maximum number of data files to return. The service may return fewer than this value. If unspecified, at most 500 data files will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "format": "int32"
                        },
                        "parent": {
                          "description": "Required. Name of the parent of the `ImportDataFiles` resource.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      }
                    },
                    "get": {
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. Name of the ImportDataFile."
                        }
                      },
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets an import data file.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "ImportDataFile"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}"
                    }
                  }
                }
              },
              "methods": {
                "validate": {
                  "path": "v1/{+name}:validate",
                  "id": "migrationcenter.projects.locations.importJobs.validate",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the import job to validate.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Validates an import job.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ValidateImportJobRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate"
                },
                "delete": {
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "description": "Optional. If set to `true`, any `ImportDataFiles` of this job will also be deleted If set to `false`, the request only works if the job has no data files.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "id": "migrationcenter.projects.locations.importJobs.delete",
                  "description": "Deletes an import job."
                },
                "run": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run",
                  "id": "migrationcenter.projects.locations.importJobs.run",
                  "path": "v1/{+name}:run",
                  "request": {
                    "$ref": "RunImportJobRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Runs an import job.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the import job to run.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `ListImportJobsRequest`.",
                      "type": "string"
                    },
                    "view": {
                      "description": "Optional. The level of details of each import job. Default value is BASIC.",
                      "location": "query",
                      "type": "string",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ]
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Filtering results.",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                    }
                  },
                  "description": "Lists all import jobs.",
                  "path": "v1/{+parent}/importJobs",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "response": {
                    "$ref": "ListImportJobsResponse"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.patch",
                  "description": "Updates an import job.",
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Output only. The full name of the import job.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.get",
                  "response": {
                    "$ref": "ImportJob"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "parameters": {
                    "view": {
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "location": "query",
                      "description": "Optional. The level of details of the import job. Default value is FULL.",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "description": "Gets the details of an import job."
                },
                "create": {
                  "id": "migrationcenter.projects.locations.importJobs.create",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/importJobs",
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "parameters": {
                    "importJobId": {
                      "description": "Required. ID of the import job.",
                      "type": "string",
                      "location": "query"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Value for parent."
                    }
                  },
                  "description": "Creates an import job."
                }
              }
            },
            "groups": {
              "methods": {
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.groups.create",
                  "path": "v1/{+parent}/groups",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups",
                  "request": {
                    "$ref": "Group"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Value for parent.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "groupId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new group in a given project and location."
                },
                "list": {
                  "response": {
                    "$ref": "ListGroupsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer"
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent value for `ListGroupsRequest`.",
                      "location": "path"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/groups",
                  "id": "migrationcenter.projects.locations.groups.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all groups in a given project and location."
                },
                "addAssets": {
                  "parameters": {
                    "group": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Group reference.",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "group"
                  ],
                  "description": "Adds assets to a group.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+group}:addAssets",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.groups.addAssets",
                  "request": {
                    "$ref": "AddAssetsToGroupRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addAssets"
                },
                "removeAssets": {
                  "id": "migrationcenter.projects.locations.groups.removeAssets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "group": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "description": "Required. Group reference.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "group"
                  ],
                  "path": "v1/{+group}:removeAssets",
                  "request": {
                    "$ref": "RemoveAssetsFromGroupRequest"
                  },
                  "description": "Removes assets from a group.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeAssets",
                  "httpMethod": "POST"
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "id": "migrationcenter.projects.locations.groups.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a group.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the group resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  }
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "request": {
                    "$ref": "Group"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "description": "Output only. The name of the group.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Group` resource by the update. The values specified in the `update_mask` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "format": "google-fieldmask"
                    }
                  },
                  "description": "Updates the parameters of a group.",
                  "path": "v1/{+name}",
                  "id": "migrationcenter.projects.locations.groups.patch"
                },
                "get": {
                  "response": {
                    "$ref": "Group"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "httpMethod": "GET",
                  "description": "Gets the details of a group.",
                  "id": "migrationcenter.projects.locations.groups.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "sources": {
              "resources": {
                "errorFrames": {
                  "methods": {
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListErrorFramesResponse"
                      },
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "A token identifying a page of results the server should return.",
                          "location": "query"
                        },
                        "view": {
                          "description": "Optional. An optional view mode to control the level of details of each error frame. The default is a BASIC frame view.",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ],
                          "location": "query",
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "type": "string"
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "type": "integer",
                          "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. Parent value (the source) for `ListErrorFramesRequest`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "id": "migrationcenter.projects.locations.sources.errorFrames.list",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames",
                      "description": "Lists all error frames in a given source and location.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/errorFrames",
                      "httpMethod": "GET"
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames/{errorFramesId}",
                      "response": {
                        "$ref": "ErrorFrame"
                      },
                      "path": "v1/{+name}",
                      "parameters": {
                        "view": {
                          "type": "string",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ],
                          "location": "query",
                          "description": "Optional. An optional view mode to control the level of details for the frame. The default is a basic frame view.",
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ]
                        },
                        "name": {
                          "description": "Required. The name of the frame to retrieve. Format: projects/{project}/locations/{location}/sources/{source}/errorFrames/{error_frame}",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/errorFrames/[^/]+$",
                          "required": true
                        }
                      },
                      "description": "Gets the details of an error frame.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "id": "migrationcenter.projects.locations.sources.errorFrames.get"
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "id": "migrationcenter.projects.locations.sources.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListSourcesResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results that the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "type": "string",
                      "location": "query"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "parent": {
                      "description": "Required. Parent value for `ListSourcesRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+parent}/sources",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources",
                  "description": "Lists all the sources in a given project and location."
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.sources.get",
                  "response": {
                    "$ref": "Source"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the details of a source.",
                  "httpMethod": "GET"
                },
                "delete": {
                  "description": "Deletes a source.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "required": true
                    }
                  },
                  "httpMethod": "DELETE",
                  "id": "migrationcenter.projects.locations.sources.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "request": {
                    "$ref": "Source"
                  },
                  "description": "Creates a new source in a given project and location.",
                  "id": "migrationcenter.projects.locations.sources.create",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+parent}/sources",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Value for parent."
                    },
                    "sourceId": {
                      "location": "query",
                      "description": "Required. User specified ID for the source. It will become the last component of the source name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  }
                },
                "patch": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "httpMethod": "PATCH",
                  "path": "v1/{+name}",
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Source` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "type": "string",
                      "description": "Output only. The full name of the source.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$"
                    }
                  },
                  "id": "migrationcenter.projects.locations.sources.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Source"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Updates the parameters of a source."
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.operations.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true
                    }
                  },
                  "httpMethod": "GET"
                },
                "delete": {
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource to be deleted."
                    }
                  },
                  "id": "migrationcenter.projects.locations.operations.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "list": {
                  "path": "v1/{+name}/operations",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list filter."
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The standard list page size.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    }
                  },
                  "id": "migrationcenter.projects.locations.operations.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`."
                },
                "cancel": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "id": "migrationcenter.projects.locations.operations.cancel",
                  "httpMethod": "POST",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "path": "v1/{+name}:cancel"
                }
              }
            },
            "preferenceSets": {
              "methods": {
                "list": {
                  "description": "Lists all the preference sets in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/preferenceSets",
                  "id": "migrationcenter.projects.locations.preferenceSets.list",
                  "response": {
                    "$ref": "ListPreferenceSetsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, at most 500 preference sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `ListPreferenceSetsRequest`.",
                      "type": "string"
                    }
                  }
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "id": "migrationcenter.projects.locations.preferenceSets.patch",
                  "description": "Updates the parameters of a preference set.",
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "description": "Output only. Name of the preference set.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `PreferenceSet` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "format": "google-fieldmask"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}"
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a preference set.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.preferenceSets.delete",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the group resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  }
                },
                "create": {
                  "description": "Creates a new preference set in a given project and location.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+parent}/preferenceSets",
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "id": "migrationcenter.projects.locations.preferenceSets.create",
                  "parameters": {
                    "preferenceSetId": {
                      "type": "string",
                      "description": "Required. User specified ID for the preference set. It will become the last component of the preference set name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Value for parent.",
                      "required": true
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.preferenceSets.get",
                  "description": "Gets the details of a preference set.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "PreferenceSet"
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "reportConfigs": {
              "methods": {
                "delete": {
                  "parameters": {
                    "force": {
                      "type": "boolean",
                      "description": "Optional. If set to `true`, any child `Reports` of this entity will also be deleted. If set to `false`, the request only works if the resource has no children.",
                      "location": "query"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "id": "migrationcenter.projects.locations.reportConfigs.delete",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a ReportConfig."
                },
                "get": {
                  "response": {
                    "$ref": "ReportConfig"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.reportConfigs.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single ReportConfig.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string"
                    }
                  }
                },
                "list": {
                  "path": "v1/{+parent}/reportConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.reportConfigs.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists ReportConfigs in a given project and location.",
                  "parameters": {
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent value for `ListReportConfigsRequest`.",
                      "type": "string",
                      "location": "path"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "filter": {
                      "type": "string",
                      "description": "Filtering results.",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "ListReportConfigsResponse"
                  }
                },
                "create": {
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. Value for parent.",
                      "type": "string"
                    },
                    "reportConfigId": {
                      "type": "string",
                      "description": "Required. User specified ID for the report config. It will become the last component of the report config name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?.",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ReportConfig"
                  },
                  "id": "migrationcenter.projects.locations.reportConfigs.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "path": "v1/{+parent}/reportConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a report configuration."
                }
              },
              "resources": {
                "reports": {
                  "methods": {
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.get",
                      "response": {
                        "$ref": "Report"
                      },
                      "description": "Gets details of a single Report.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. Name of the resource.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "location": "path"
                        },
                        "view": {
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "location": "query",
                          "description": "Determines what information to retrieve for the Report.",
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "type": "string"
                        }
                      }
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "description": "Required. Name of the resource.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$"
                        },
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "httpMethod": "DELETE",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.delete",
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Deletes a Report.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "description": "Required. Parent value for `ListReportsRequest`.",
                          "type": "string"
                        },
                        "view": {
                          "type": "string",
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "description": "Determines what information to retrieve for each Report.",
                          "location": "query",
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ]
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results that the server should return.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "location": "query",
                          "type": "string",
                          "description": "Filtering results."
                        },
                        "pageSize": {
                          "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                          "type": "integer",
                          "location": "query",
                          "format": "int32"
                        },
                        "orderBy": {
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "description": "Lists Reports in a given ReportConfig.",
                      "httpMethod": "GET",
                      "path": "v1/{+parent}/reports",
                      "response": {
                        "$ref": "ListReportsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports"
                    },
                    "create": {
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "request": {
                        "$ref": "Report"
                      },
                      "parameters": {
                        "requestId": {
                          "type": "string",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        },
                        "reportId": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. User specified id for the report. It will become the last component of the report name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The id must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?."
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. Value for parent.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/reports",
                      "description": "Creates a report.",
                      "httpMethod": "POST"
                    }
                  }
                }
              }
            },
            "assets": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "required": true
                    },
                    "view": {
                      "location": "query",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data."
                      ],
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL"
                      ],
                      "description": "View of the assets. Defaults to BASIC.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Asset"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the details of an asset.",
                  "id": "migrationcenter.projects.locations.assets.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "path": "v1/{+name}"
                },
                "batchUpdate": {
                  "response": {
                    "$ref": "BatchUpdateAssetsResponse"
                  },
                  "httpMethod": "POST",
                  "description": "Updates the parameters of a list of assets.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets:batchUpdate",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "BatchUpdateAssetsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent value for batch asset update.",
                      "location": "path"
                    }
                  },
                  "id": "migrationcenter.projects.locations.assets.batchUpdate",
                  "path": "v1/{+parent}/assets:batchUpdate"
                },
                "list": {
                  "path": "v1/{+parent}/assets",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filtering results."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results the server should return."
                    },
                    "view": {
                      "description": "View of the assets. Defaults to BASIC.",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data."
                      ],
                      "type": "string",
                      "location": "query",
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL"
                      ]
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent value for `ListAssetsRequest`.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListAssetsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets",
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.assets.list",
                  "description": "Lists all the assets in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "reportAssetFrames": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames",
                  "description": "Reports a set of frames.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ReportAssetFramesResponse"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "Frames"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. Parent of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "source": {
                      "description": "Required. Reference to a source.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "id": "migrationcenter.projects.locations.assets.reportAssetFrames",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/assets:reportAssetFrames"
                },
                "patch": {
                  "request": {
                    "$ref": "Asset"
                  },
                  "description": "Updates the parameters of an asset.",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Asset"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "location": "query"
                    },
                    "name": {
                      "description": "Output only. The full name of the asset.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.assets.patch"
                },
                "delete": {
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.assets.delete",
                  "description": "Deletes an asset.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "required": true
                    }
                  },
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}"
                },
                "aggregateValues": {
                  "response": {
                    "$ref": "AggregateAssetsValuesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `AggregateAssetsValuesRequest`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "id": "migrationcenter.projects.locations.assets.aggregateValues",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/assets:aggregateValues",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "AggregateAssetsValuesRequest"
                  },
                  "description": "Aggregates the requested fields based on provided function.",
                  "httpMethod": "POST"
                },
                "batchDelete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. Parent value for batch asset delete.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets:batchDelete",
                  "id": "migrationcenter.projects.locations.assets.batchDelete",
                  "path": "v1/{+parent}/assets:batchDelete",
                  "description": "Deletes list of Assets.",
                  "request": {
                    "$ref": "BatchDeleteAssetsRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "batchPath": "batch",
  "kind": "discovery#restDescription",
  "baseUrl": "https://migrationcenter.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "version": "v1",
  "rootUrl": "https://migrationcenter.googleapis.com/",
  "parameters": {
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "alt": {
      "type": "string",
      "default": "json",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    }
  },
  "canonicalName": "Migration Center API"
}

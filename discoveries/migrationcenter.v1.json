{
  "discoveryVersion": "v1",
  "rootUrl": "https://migrationcenter.googleapis.com/",
  "protocol": "rest",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "groups": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the resource."
                    }
                  },
                  "description": "Gets the details of a group.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Group"
                  },
                  "id": "migrationcenter.projects.locations.groups.get"
                },
                "addAssets": {
                  "parameterOrder": [
                    "group"
                  ],
                  "request": {
                    "$ref": "AddAssetsToGroupRequest"
                  },
                  "description": "Adds assets to a group.",
                  "id": "migrationcenter.projects.locations.groups.addAssets",
                  "parameters": {
                    "group": {
                      "description": "Required. Group reference.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+group}:addAssets",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addAssets"
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the parameters of a group.",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "description": "Output only. The name of the group.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Group` resource by the update. The values specified in the `update_mask` are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Group"
                  },
                  "id": "migrationcenter.projects.locations.groups.patch",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}"
                },
                "list": {
                  "id": "migrationcenter.projects.locations.groups.list",
                  "path": "v1/{+parent}/groups",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all groups in a given project and location.",
                  "response": {
                    "$ref": "ListGroupsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for `ListGroupsRequest`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET"
                },
                "create": {
                  "request": {
                    "$ref": "Group"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new group in a given project and location.",
                  "id": "migrationcenter.projects.locations.groups.create",
                  "path": "v1/{+parent}/groups",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "groupId": {
                      "description": "Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups"
                },
                "removeAssets": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeAssets",
                  "id": "migrationcenter.projects.locations.groups.removeAssets",
                  "path": "v1/{+group}:removeAssets",
                  "parameterOrder": [
                    "group"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "RemoveAssetsFromGroupRequest"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Removes assets from a group.",
                  "parameters": {
                    "group": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Group reference."
                    }
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.groups.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the group resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$"
                    }
                  },
                  "description": "Deletes a group.",
                  "path": "v1/{+name}"
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "id": "migrationcenter.projects.locations.operations.get",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.operations.delete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path"
                    }
                  }
                },
                "list": {
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "The standard list page size."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.operations.list",
                  "path": "v1/{+name}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "cancel": {
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "migrationcenter.projects.locations.operations.cancel",
                  "path": "v1/{+name}:cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  }
                }
              }
            },
            "reportConfigs": {
              "resources": {
                "reports": {
                  "methods": {
                    "get": {
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.get",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. Name of the resource.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "required": true
                        },
                        "view": {
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "location": "query",
                          "type": "string",
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ],
                          "description": "Determines what information to retrieve for the Report."
                        }
                      },
                      "path": "v1/{+name}",
                      "description": "Gets details of a single Report.",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Report"
                      }
                    },
                    "create": {
                      "description": "Creates a report.",
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.create",
                      "httpMethod": "POST",
                      "path": "v1/{+parent}/reports",
                      "parameters": {
                        "requestId": {
                          "location": "query",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        },
                        "parent": {
                          "location": "path",
                          "description": "Required. Value for parent.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$"
                        },
                        "reportId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. User specified id for the report. It will become the last component of the report name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The id must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?."
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "request": {
                        "$ref": "Report"
                      }
                    },
                    "delete": {
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.delete",
                      "parameters": {
                        "requestId": {
                          "location": "query",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+/reports/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. Name of the resource."
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}",
                      "description": "Deletes a Report.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                          "required": true,
                          "description": "Required. Parent value for `ListReportsRequest`.",
                          "location": "path"
                        },
                        "orderBy": {
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "format": "int32",
                          "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                          "type": "integer",
                          "location": "query"
                        },
                        "filter": {
                          "location": "query",
                          "type": "string",
                          "description": "Filtering results."
                        },
                        "view": {
                          "location": "query",
                          "type": "string",
                          "description": "Determines what information to retrieve for each Report.",
                          "enum": [
                            "REPORT_VIEW_UNSPECIFIED",
                            "REPORT_VIEW_BASIC",
                            "REPORT_VIEW_FULL",
                            "REPORT_VIEW_STANDARD"
                          ],
                          "enumDescriptions": [
                            "The report view is not specified. The API displays the basic view by default.",
                            "The report view includes only basic metadata of the Report. Useful for list views.",
                            "The report view includes all the metadata of the Report. Useful for preview.",
                            "The report view includes the standard metadata of an report. Useful for detail view."
                          ]
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results that the server should return.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "httpMethod": "GET",
                      "path": "v1/{+parent}/reports",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "migrationcenter.projects.locations.reportConfigs.reports.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListReportsResponse"
                      },
                      "description": "Lists Reports in a given ReportConfig."
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filtering results."
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent value for `ListReportConfigsRequest`.",
                      "location": "path"
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results the server should return."
                    }
                  },
                  "path": "v1/{+parent}/reportConfigs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "id": "migrationcenter.projects.locations.reportConfigs.list",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListReportConfigsResponse"
                  },
                  "description": "Lists ReportConfigs in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "force": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. If set to `true`, any child `Reports` of this entity will also be deleted. If set to `false`, the request only works if the resource has no children."
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "id": "migrationcenter.projects.locations.reportConfigs.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a ReportConfig.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}"
                },
                "get": {
                  "id": "migrationcenter.projects.locations.reportConfigs.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets details of a single ReportConfig.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ReportConfig"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reportConfigs/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.reportConfigs.create",
                  "path": "v1/{+parent}/reportConfigs",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ReportConfig"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/reportConfigs",
                  "parameters": {
                    "reportConfigId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. User specified ID for the report config. It will become the last component of the report config name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?."
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "description": "Creates a report configuration."
                }
              }
            },
            "assets": {
              "methods": {
                "reportAssetFrames": {
                  "id": "migrationcenter.projects.locations.assets.reportAssetFrames",
                  "path": "v1/{+parent}/assets:reportAssetFrames",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Reports a set of frames.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames",
                  "response": {
                    "$ref": "ReportAssetFramesResponse"
                  },
                  "request": {
                    "$ref": "Frames"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "source": {
                      "type": "string",
                      "description": "Required. Reference to a source.",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. Parent of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  }
                },
                "aggregateValues": {
                  "description": "Aggregates the requested fields based on provided function.",
                  "id": "migrationcenter.projects.locations.assets.aggregateValues",
                  "path": "v1/{+parent}/assets:aggregateValues",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "AggregateAssetsValuesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `AggregateAssetsValuesRequest`."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "AggregateAssetsValuesRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues"
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "description": "Gets the details of an asset.",
                  "path": "v1/{+name}",
                  "id": "migrationcenter.projects.locations.assets.get",
                  "response": {
                    "$ref": "Asset"
                  },
                  "parameters": {
                    "view": {
                      "description": "View of the assets. Defaults to BASIC.",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data."
                      ],
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL"
                      ],
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET"
                },
                "batchUpdate": {
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets:batchUpdate",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. Parent value for batch asset update.",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/assets:batchUpdate",
                  "description": "Updates the parameters of a list of assets.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.assets.batchUpdate",
                  "response": {
                    "$ref": "BatchUpdateAssetsResponse"
                  },
                  "request": {
                    "$ref": "BatchUpdateAssetsRequest"
                  }
                },
                "list": {
                  "response": {
                    "$ref": "ListAssetsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.assets.list",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results the server should return."
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent value for `ListAssetsRequest`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "view": {
                      "location": "query",
                      "enum": [
                        "ASSET_VIEW_UNSPECIFIED",
                        "ASSET_VIEW_BASIC",
                        "ASSET_VIEW_FULL"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "The asset view is not specified. The API displays the basic view by default.",
                        "The asset view includes only basic metadata of the asset.",
                        "The asset view includes all the metadata of an asset and performance data."
                      ],
                      "description": "View of the assets. Defaults to BASIC."
                    },
                    "filter": {
                      "location": "query",
                      "description": "Filtering results.",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets",
                  "description": "Lists all the assets in a given project and location.",
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/assets"
                },
                "patch": {
                  "id": "migrationcenter.projects.locations.assets.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the parameters of an asset.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "response": {
                    "$ref": "Asset"
                  },
                  "path": "v1/{+name}",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "description": "Output only. The full name of the asset.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "Asset"
                  }
                },
                "batchDelete": {
                  "path": "v1/{+parent}/assets:batchDelete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets:batchDelete",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "migrationcenter.projects.locations.assets.batchDelete",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Parent value for batch asset delete."
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes list of Assets.",
                  "request": {
                    "$ref": "BatchDeleteAssetsRequest"
                  }
                },
                "delete": {
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/assets/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "httpMethod": "DELETE",
                  "id": "migrationcenter.projects.locations.assets.delete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}",
                  "description": "Deletes an asset.",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "preferenceSets": {
              "methods": {
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Updates the parameters of a preference set.",
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.preferenceSets.patch",
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `PreferenceSet` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "description": "Output only. Name of the preference set.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.preferenceSets.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists all the preference sets in a given project and location.",
                  "path": "v1/{+parent}/preferenceSets",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "response": {
                    "$ref": "ListPreferenceSetsResponse"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for `ListPreferenceSetsRequest`.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, at most 500 preference sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    }
                  }
                },
                "get": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "PreferenceSet"
                  },
                  "id": "migrationcenter.projects.locations.preferenceSets.get",
                  "description": "Gets the details of a preference set."
                },
                "delete": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the group resource.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/preferenceSets/[^/]+$"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "description": "Deletes a preference set.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}",
                  "id": "migrationcenter.projects.locations.preferenceSets.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "PreferenceSet"
                  },
                  "path": "v1/{+parent}/preferenceSets",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/preferenceSets",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "preferenceSetId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. User specified ID for the preference set. It will become the last component of the preference set name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`."
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.preferenceSets.create",
                  "description": "Creates a new preference set in a given project and location."
                }
              }
            },
            "importJobs": {
              "resources": {
                "importDataFiles": {
                  "methods": {
                    "get": {
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ImportDataFile"
                      },
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.get",
                      "description": "Gets an import data file.",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "type": "string",
                          "description": "Required. Name of the ImportDataFile."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "create": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "request": {
                        "$ref": "ImportDataFile"
                      },
                      "path": "v1/{+parent}/importDataFiles",
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "parameters": {
                        "importDataFileId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. The ID of the new data file."
                        },
                        "requestId": {
                          "type": "string",
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                          "required": true,
                          "description": "Required. Name of the parent of the ImportDataFile.",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.create",
                      "description": "Creates an import data file.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListImportDataFilesResponse"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "description": "Required. Name of the parent of the `ImportDataFiles` resource.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                        },
                        "filter": {
                          "location": "query",
                          "description": "Filtering results.",
                          "type": "string"
                        },
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "The maximum number of data files to return. The service may return fewer than this value. If unspecified, at most 500 data files will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "A page token, received from a previous `ListImportDataFiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListImportDataFiles` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+parent}/importDataFiles",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.list",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "List import data files."
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "parameters": {
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string",
                          "location": "query"
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+/importDataFiles/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. Name of the ImportDataFile to delete."
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Delete an import data file.",
                      "path": "v1/{+name}",
                      "id": "migrationcenter.projects.locations.importJobs.importDataFiles.delete",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "validate": {
                  "path": "v1/{+name}:validate",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "migrationcenter.projects.locations.importJobs.validate",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ValidateImportJobRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Validates an import job.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "description": "Required. The name of the import job to validate.",
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "create": {
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs",
                  "id": "migrationcenter.projects.locations.importJobs.create",
                  "description": "Creates an import job.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Value for parent.",
                      "type": "string"
                    },
                    "importJobId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. ID of the import job."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+parent}/importJobs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "run": {
                  "request": {
                    "$ref": "RunImportJobRequest"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the import job to run.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run",
                  "description": "Runs an import job.",
                  "id": "migrationcenter.projects.locations.importJobs.run",
                  "httpMethod": "POST",
                  "path": "v1/{+name}:run",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "id": "migrationcenter.projects.locations.importJobs.list",
                  "description": "Lists all import jobs.",
                  "response": {
                    "$ref": "ListImportJobsResponse"
                  },
                  "path": "v1/{+parent}/importJobs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "parent": {
                      "description": "Required. Parent value for `ListImportJobsRequest`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string",
                      "location": "query"
                    },
                    "view": {
                      "type": "string",
                      "description": "Optional. The level of details of each import job. Default value is BASIC.",
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "location": "query",
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ]
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query"
                    },
                    "filter": {
                      "description": "Filtering results.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs"
                },
                "get": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$",
                      "description": "Required. Name of the resource."
                    },
                    "view": {
                      "enumDescriptions": [
                        "The import job view is not specified. The API displays the basic view by default.",
                        "The import job view includes basic metadata of an import job. This view does not include payload information.",
                        "The import job view includes all metadata of an import job."
                      ],
                      "enum": [
                        "IMPORT_JOB_VIEW_UNSPECIFIED",
                        "IMPORT_JOB_VIEW_BASIC",
                        "IMPORT_JOB_VIEW_FULL"
                      ],
                      "location": "query",
                      "description": "Optional. The level of details of the import job. Default value is FULL.",
                      "type": "string"
                    }
                  },
                  "description": "Gets the details of an import job.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.get",
                  "response": {
                    "$ref": "ImportJob"
                  }
                },
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Output only. The full name of the import job.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "migrationcenter.projects.locations.importJobs.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "description": "Updates an import job.",
                  "request": {
                    "$ref": "ImportJob"
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}"
                },
                "delete": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/importJobs/[^/]+$"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "force": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. If set to `true`, any `ImportDataFiles` of this job will also be deleted If set to `false`, the request only works if the job has no data files."
                    }
                  },
                  "id": "migrationcenter.projects.locations.importJobs.delete",
                  "description": "Deletes an import job."
                }
              }
            },
            "sources": {
              "methods": {
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources",
                  "description": "Lists all the sources in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/sources",
                  "response": {
                    "$ref": "ListSourcesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for `ListSourcesRequest`.",
                      "location": "path",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Filtering results.",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.",
                      "location": "query",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results that the server should return.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "migrationcenter.projects.locations.sources.list"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "id": "migrationcenter.projects.locations.sources.delete",
                  "path": "v1/{+name}",
                  "description": "Deletes a source.",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "get": {
                  "id": "migrationcenter.projects.locations.sources.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "path": "v1/{+name}",
                  "description": "Gets the details of a source.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Source"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "patch": {
                  "id": "migrationcenter.projects.locations.sources.patch",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "description": "Updates the parameters of a source.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Source"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Output only. The full name of the source.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `Source` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}"
                },
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/sources",
                  "request": {
                    "$ref": "Source"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "sourceId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. User specified ID for the source. It will become the last component of the source name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`."
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Value for parent.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "id": "migrationcenter.projects.locations.sources.create",
                  "description": "Creates a new source in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              },
              "resources": {
                "errorFrames": {
                  "methods": {
                    "get": {
                      "response": {
                        "$ref": "ErrorFrame"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "view": {
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "description": "Optional. An optional view mode to control the level of details for the frame. The default is a basic frame view.",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ],
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "description": "Required. The name of the frame to retrieve. Format: projects/{project}/locations/{location}/sources/{source}/errorFrames/{error_frame}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/errorFrames/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "migrationcenter.projects.locations.sources.errorFrames.get",
                      "description": "Gets the details of an error frame.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames/{errorFramesId}",
                      "path": "v1/{+name}",
                      "httpMethod": "GET"
                    },
                    "list": {
                      "path": "v1/{+parent}/errorFrames",
                      "parameters": {
                        "pageSize": {
                          "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "format": "int32",
                          "location": "query",
                          "type": "integer"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results the server should return.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "description": "Required. Parent value (the source) for `ListErrorFramesRequest`.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$"
                        },
                        "view": {
                          "enumDescriptions": [
                            "Value is unset. The system will fallback to the default value.",
                            "Include basic frame data, but not the full contents.",
                            "Include everything."
                          ],
                          "description": "Optional. An optional view mode to control the level of details of each error frame. The default is a BASIC frame view.",
                          "enum": [
                            "ERROR_FRAME_VIEW_UNSPECIFIED",
                            "ERROR_FRAME_VIEW_BASIC",
                            "ERROR_FRAME_VIEW_FULL"
                          ],
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames",
                      "description": "Lists all error frames in a given source and location.",
                      "response": {
                        "$ref": "ListErrorFramesResponse"
                      },
                      "id": "migrationcenter.projects.locations.sources.errorFrames.list",
                      "httpMethod": "GET"
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "id": "migrationcenter.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "pageToken": {
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string"
                },
                "filter": {
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query"
                },
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable."
                }
              },
              "path": "v1/{+name}/locations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations"
            },
            "updateSettings": {
              "parameters": {
                "name": {
                  "description": "Output only. The name of the resource.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "required": true,
                  "type": "string"
                },
                "requestId": {
                  "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                  "location": "query",
                  "type": "string"
                },
                "updateMask": {
                  "description": "Required. Field mask is used to specify the fields to be overwritten in the `Settings` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                  "type": "string",
                  "format": "google-fieldmask",
                  "location": "query"
                }
              },
              "description": "Updates the regional-level project settings.",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "request": {
                "$ref": "Settings"
              },
              "response": {
                "$ref": "Operation"
              },
              "path": "v1/{+name}",
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "id": "migrationcenter.projects.locations.updateSettings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "description": "Gets information about a location.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "response": {
                "$ref": "Location"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Resource name for the location.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "id": "migrationcenter.projects.locations.get"
            },
            "getSettings": {
              "response": {
                "$ref": "Settings"
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/settings",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+/settings$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. Name of the resource."
                }
              },
              "path": "v1/{+name}",
              "id": "migrationcenter.projects.locations.getSettings",
              "description": "Gets the details of regional settings.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        }
      }
    }
  },
  "documentationLink": "https://cloud.google.com/migration-center",
  "version": "v1",
  "id": "migrationcenter:v1",
  "canonicalName": "Migration Center API",
  "description": "A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.",
  "servicePath": "",
  "baseUrl": "https://migrationcenter.googleapis.com/",
  "name": "migrationcenter",
  "fullyEncodeReservedExpansion": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "version_module": true,
  "kind": "discovery#restDescription",
  "parameters": {
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "location": "query",
      "default": "json"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    }
  },
  "title": "Migration Center API",
  "basePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "mtlsRootUrl": "https://migrationcenter.mtls.googleapis.com/",
  "batchPath": "batch",
  "schemas": {
    "ReportSummarySoleTenantFinding": {
      "type": "object",
      "id": "ReportSummarySoleTenantFinding",
      "properties": {
        "allocatedRegions": {
          "description": "Set of regions in which the assets are allocated",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nodeAllocations": {
          "description": "Set of per-nodetype allocation records",
          "type": "array",
          "items": {
            "$ref": "ReportSummarySoleTenantNodeAllocation"
          }
        },
        "allocatedAssetCount": {
          "description": "Count of assets which are allocated",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "A set of findings that applies to assets destined for Sole-Tenant nodes."
    },
    "FstabEntryList": {
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "FstabEntry"
          },
          "type": "array",
          "description": "Fstab entries."
        }
      },
      "description": "Fstab content.",
      "id": "FstabEntryList"
    },
    "DiskUsageSample": {
      "id": "DiskUsageSample",
      "properties": {
        "averageIops": {
          "description": "Average IOPS sampled over a short window. Must be non-negative.",
          "type": "number",
          "format": "float"
        }
      },
      "description": "Disk usage sample. Values are across all disks.",
      "type": "object"
    },
    "AggregationResultHistogram": {
      "properties": {
        "buckets": {
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "type": "array",
          "items": {
            "$ref": "AggregationResultHistogramBucket"
          }
        }
      },
      "type": "object",
      "description": "The result of a bucketed histogram aggregation.",
      "id": "AggregationResultHistogram"
    },
    "MachineDiskDetails": {
      "id": "MachineDiskDetails",
      "type": "object",
      "properties": {
        "totalFreeBytes": {
          "type": "string",
          "description": "Total disk free space.",
          "format": "int64"
        },
        "disks": {
          "$ref": "DiskEntryList",
          "description": "List of disks."
        },
        "totalCapacityBytes": {
          "format": "int64",
          "type": "string",
          "description": "Disk total Capacity."
        }
      },
      "description": "Details of machine disks."
    },
    "RunImportJobRequest": {
      "type": "object",
      "description": "A request to run an import job.",
      "id": "RunImportJobRequest",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      }
    },
    "AggregateAssetsValuesResponse": {
      "description": "A response to a request to aggregated assets values.",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "AggregationResult"
          },
          "description": "The aggregation results."
        }
      },
      "type": "object",
      "id": "AggregateAssetsValuesResponse"
    },
    "ExecutionReport": {
      "description": "A resource that reports result of the import job execution.",
      "properties": {
        "framesReported": {
          "description": "Total number of asset frames reported for the import job.",
          "type": "integer",
          "format": "int32"
        },
        "totalRowsCount": {
          "format": "int32",
          "description": "Output only. Total number of rows in the import job.",
          "readOnly": true,
          "type": "integer"
        },
        "executionErrors": {
          "$ref": "ValidationReport",
          "description": "Validation errors encountered during the execution of the import job."
        }
      },
      "id": "ExecutionReport",
      "type": "object"
    },
    "RunningProcessList": {
      "description": "List of running guest OS processes.",
      "properties": {
        "entries": {
          "type": "array",
          "description": "Running process entries.",
          "items": {
            "$ref": "RunningProcess"
          }
        }
      },
      "id": "RunningProcessList",
      "type": "object"
    },
    "Empty": {
      "type": "object",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "Empty"
    },
    "Aggregation": {
      "properties": {
        "histogram": {
          "description": "Creates a bucketed histogram of field values.",
          "$ref": "AggregationHistogram"
        },
        "sum": {
          "description": "Sum over a numeric field.",
          "$ref": "AggregationSum"
        },
        "count": {
          "$ref": "AggregationCount",
          "description": "Count the number of matching objects."
        },
        "field": {
          "type": "string",
          "description": "The name of the field on which to aggregate."
        },
        "frequency": {
          "description": "Creates a frequency distribution of all field values.",
          "$ref": "AggregationFrequency"
        }
      },
      "description": "Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.",
      "type": "object",
      "id": "Aggregation"
    },
    "Date": {
      "type": "object",
      "id": "Date",
      "properties": {
        "year": {
          "format": "int32",
          "type": "integer",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
        },
        "month": {
          "format": "int32",
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
        },
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
    },
    "ComputeStorageDescriptor": {
      "properties": {
        "sizeGb": {
          "description": "Disk size in GiB.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "enumDescriptions": [
            "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
            "Standard HDD Persistent Disk.",
            "Balanced Persistent Disk.",
            "SSD Persistent Disk."
          ],
          "enum": [
            "PERSISTENT_DISK_TYPE_UNSPECIFIED",
            "PERSISTENT_DISK_TYPE_STANDARD",
            "PERSISTENT_DISK_TYPE_BALANCED",
            "PERSISTENT_DISK_TYPE_SSD"
          ],
          "type": "string",
          "description": "Disk type backing the storage."
        }
      },
      "description": "Compute Engine storage option descriptor.",
      "id": "ComputeStorageDescriptor",
      "type": "object"
    },
    "Location": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        }
      },
      "type": "object",
      "description": "A resource that represents a Google Cloud location.",
      "id": "Location"
    },
    "ListImportJobsResponse": {
      "id": "ListImportJobsResponse",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "importJobs": {
          "items": {
            "$ref": "ImportJob"
          },
          "description": "The list of import jobs.",
          "type": "array"
        }
      },
      "description": "A response for listing import jobs.",
      "type": "object"
    },
    "GuestInstalledApplicationList": {
      "description": "Guest installed application list.",
      "properties": {
        "entries": {
          "description": "Application entries.",
          "items": {
            "$ref": "GuestInstalledApplication"
          },
          "type": "array"
        }
      },
      "id": "GuestInstalledApplicationList",
      "type": "object"
    },
    "ReportSummaryUtilizationChartData": {
      "description": "Utilization Chart is a specific type of visualization which displays a metric classified into \"Used\" and \"Free\" buckets.",
      "id": "ReportSummaryUtilizationChartData",
      "properties": {
        "used": {
          "description": "Aggregate value which falls into the \"Used\" bucket.",
          "format": "int64",
          "type": "string"
        },
        "free": {
          "type": "string",
          "format": "int64",
          "description": "Aggregate value which falls into the \"Free\" bucket."
        }
      },
      "type": "object"
    },
    "OpenFileList": {
      "id": "OpenFileList",
      "description": "Open file list.",
      "type": "object",
      "properties": {
        "entries": {
          "description": "Open file details entries.",
          "items": {
            "$ref": "OpenFileDetails"
          },
          "type": "array"
        }
      }
    },
    "ReportSummarySoleTenantNodeAllocation": {
      "description": "Represents the assets allocated to a specific Sole-Tenant node type.",
      "properties": {
        "nodeCount": {
          "type": "string",
          "description": "Count of this node type to be provisioned",
          "format": "int64"
        },
        "node": {
          "$ref": "SoleTenantNodeType",
          "description": "Sole Tenant node type, e.g. \"m3-node-128-3904\""
        },
        "allocatedAssetCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of assets allocated to these nodes"
        }
      },
      "type": "object",
      "id": "ReportSummarySoleTenantNodeAllocation"
    },
    "SoleTenancyPreferences": {
      "type": "object",
      "description": "Preferences concerning Sole Tenancy nodes and VMs.",
      "id": "SoleTenancyPreferences",
      "properties": {
        "commitmentPlan": {
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "type": "string",
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR",
            "COMMITMENT_3_YEAR"
          ],
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment.",
            "3 years commitment."
          ]
        },
        "hostMaintenancePolicy": {
          "enum": [
            "HOST_MAINTENANCE_POLICY_UNSPECIFIED",
            "HOST_MAINTENANCE_POLICY_DEFAULT",
            "HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE",
            "HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP"
          ],
          "type": "string",
          "description": "Sole Tenancy nodes maintenance policy.",
          "enumDescriptions": [
            "Unspecified host maintenance policy.",
            "Default host maintenance policy.",
            "Restart in place host maintenance policy.",
            "Migrate within node group host maintenance policy."
          ]
        },
        "cpuOvercommitRatio": {
          "format": "double",
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.",
          "type": "number"
        },
        "nodeTypes": {
          "items": {
            "$ref": "SoleTenantNodeType"
          },
          "description": "A list of sole tenant node types. An empty list means that all possible node types will be considered.",
          "type": "array"
        }
      }
    },
    "ListReportConfigsResponse": {
      "type": "object",
      "id": "ListReportConfigsResponse",
      "description": "Response message for listing report configs.",
      "properties": {
        "reportConfigs": {
          "description": "A list of report configs.",
          "items": {
            "$ref": "ReportConfig"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      }
    },
    "UploadFileInfo": {
      "properties": {
        "headers": {
          "description": "Output only. The headers that were used to sign the URI.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "uriExpirationTime": {
          "format": "google-datetime",
          "description": "Output only. Expiration time of the upload URI.",
          "readOnly": true,
          "type": "string"
        },
        "signedUri": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Upload URI for the file."
        }
      },
      "type": "object",
      "description": "A resource that contains a URI to which a data file can be uploaded.",
      "id": "UploadFileInfo"
    },
    "AggregationCount": {
      "id": "AggregationCount",
      "description": "Object count.",
      "type": "object",
      "properties": {}
    },
    "DailyResourceUsageAggregationCPU": {
      "description": "Statistical aggregation of CPU usage.",
      "type": "object",
      "properties": {
        "utilizationPercentage": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "CPU utilization percentage."
        }
      },
      "id": "DailyResourceUsageAggregationCPU"
    },
    "ValidateImportJobRequest": {
      "description": "A request to validate an import job.",
      "type": "object",
      "id": "ValidateImportJobRequest",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      }
    },
    "AssetList": {
      "description": "Lists the asset IDs of all assets.",
      "type": "object",
      "properties": {
        "assetIds": {
          "items": {
            "type": "string"
          },
          "description": "Required. A list of asset IDs",
          "type": "array"
        }
      },
      "id": "AssetList"
    },
    "MemoryUsageSample": {
      "type": "object",
      "id": "MemoryUsageSample",
      "description": "Memory usage sample.",
      "properties": {
        "utilizedPercentage": {
          "type": "number",
          "format": "float",
          "description": "Percentage of system memory utilized. Must be in the interval [0, 100]."
        }
      }
    },
    "ListSourcesResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "sources": {
          "description": "The list of sources.",
          "items": {
            "$ref": "Source"
          },
          "type": "array"
        }
      },
      "id": "ListSourcesResponse",
      "description": "Response message for listing sources."
    },
    "Report": {
      "id": "Report",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "TOTAL_COST_OF_OWNERSHIP"
          ],
          "description": "Report type.",
          "enumDescriptions": [
            "Default Report type.",
            "Total cost of ownership Report type."
          ],
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "Default Report creation state.",
            "Creating Report.",
            "Successfully created Report.",
            "Failed to create Report."
          ],
          "type": "string",
          "description": "Report creation state.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "SUCCEEDED",
            "FAILED"
          ]
        },
        "name": {
          "description": "Output only. Name of resource.",
          "type": "string",
          "readOnly": true
        },
        "summary": {
          "readOnly": true,
          "$ref": "ReportSummary",
          "description": "Output only. Summary view of the Report."
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. Last update timestamp.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Creation timestamp.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        }
      },
      "description": "Report represents a point-in-time rendering of the ReportConfig results."
    },
    "PhysicalPlatformDetails": {
      "description": "Platform specific details for Physical Machines.",
      "id": "PhysicalPlatformDetails",
      "type": "object",
      "properties": {
        "location": {
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field.",
          "type": "string"
        }
      }
    },
    "DailyResourceUsageAggregationMemory": {
      "type": "object",
      "id": "DailyResourceUsageAggregationMemory",
      "description": "Statistical aggregation of memory usage.",
      "properties": {
        "utilizationPercentage": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Memory utilization percentage."
        }
      }
    },
    "ReportConfig": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of resource."
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "description": {
          "description": "Free-text description.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the resource was last updated."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the resource was created."
        },
        "groupPreferencesetAssignments": {
          "type": "array",
          "items": {
            "$ref": "ReportConfigGroupPreferenceSetAssignment"
          },
          "description": "Required. Collection of combinations of groups and preference sets."
        }
      },
      "type": "object",
      "description": "The groups and associated preference sets on which we can generate reports.",
      "id": "ReportConfig"
    },
    "ReportSummaryVmwareNodeAllocation": {
      "description": "Represents assets allocated to a specific VMWare Node type.",
      "id": "ReportSummaryVmwareNodeAllocation",
      "type": "object",
      "properties": {
        "nodeCount": {
          "description": "Count of this node type to be provisioned",
          "format": "int64",
          "type": "string"
        },
        "allocatedAssetCount": {
          "description": "Count of assets allocated to these nodes",
          "format": "int64",
          "type": "string"
        },
        "vmwareNode": {
          "description": "VMWare node type, e.g. \"ve1-standard-72\"",
          "$ref": "ReportSummaryVmwareNode"
        }
      }
    },
    "ReportSummaryGroupFinding": {
      "properties": {
        "displayName": {
          "description": "Display Name for the Group.",
          "type": "string"
        },
        "assetAggregateStats": {
          "$ref": "ReportSummaryAssetAggregateStats",
          "description": "Summary statistics for all the assets in this group."
        },
        "preferenceSetFindings": {
          "items": {
            "$ref": "ReportSummaryGroupPreferenceSetFinding"
          },
          "description": "Findings for each of the PreferenceSets for this group.",
          "type": "array"
        },
        "description": {
          "description": "Description for the Group.",
          "type": "string"
        },
        "overlappingAssetCount": {
          "type": "string",
          "deprecated": true,
          "description": "This field is deprecated, do not rely on it having a value.",
          "format": "int64"
        }
      },
      "type": "object",
      "id": "ReportSummaryGroupFinding",
      "description": "Summary Findings for a specific Group."
    },
    "FileValidationReport": {
      "properties": {
        "fileErrors": {
          "description": "List of file level errors.",
          "items": {
            "$ref": "ImportError"
          },
          "type": "array"
        },
        "fileName": {
          "type": "string",
          "description": "The name of the file."
        },
        "rowErrors": {
          "type": "array",
          "description": "Partial list of rows that encountered validation error.",
          "items": {
            "$ref": "ImportRowError"
          }
        },
        "partialReport": {
          "description": "Flag indicating that processing was aborted due to maximum number of errors.",
          "type": "boolean"
        }
      },
      "description": "A resource that aggregates the validation errors found in an import job file.",
      "type": "object",
      "id": "FileValidationReport"
    },
    "BatchUpdateAssetsResponse": {
      "id": "BatchUpdateAssetsResponse",
      "type": "object",
      "description": "Response for updating a list of assets.",
      "properties": {
        "assets": {
          "items": {
            "$ref": "Asset"
          },
          "description": "Update asset content. The content only includes values after field mask being applied.",
          "type": "array"
        }
      }
    },
    "FstabEntry": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string",
          "description": "The mount point for the filesystem."
        },
        "passno": {
          "type": "integer",
          "description": "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.",
          "format": "int32"
        },
        "spec": {
          "description": "The block special device or remote filesystem to be mounted.",
          "type": "string"
        },
        "mntops": {
          "type": "string",
          "description": "Mount options associated with the filesystem."
        },
        "freq": {
          "description": "Used by dump to determine which filesystems need to be dumped.",
          "format": "int32",
          "type": "integer"
        },
        "vfstype": {
          "type": "string",
          "description": "The type of the filesystem."
        }
      },
      "description": "Single fstab entry.",
      "id": "FstabEntry"
    },
    "ListPreferenceSetsResponse": {
      "description": "Response message for listing preference sets.",
      "id": "ListPreferenceSetsResponse",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "preferenceSets": {
          "description": "The list of PreferenceSets",
          "items": {
            "$ref": "PreferenceSet"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListReportsResponse": {
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "reports": {
          "items": {
            "$ref": "Report"
          },
          "type": "array",
          "description": "The list of Reports."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListReportsResponse",
      "description": "Response message for listing Reports."
    },
    "GuestOsDetails": {
      "properties": {
        "version": {
          "description": "The version of the operating system.",
          "type": "string"
        },
        "osName": {
          "description": "The name of the operating system.",
          "type": "string"
        },
        "family": {
          "enumDescriptions": [
            "",
            "Microsoft Windows Server and Desktop.",
            "Various Linux flavors.",
            "Non-Linux Unix flavors."
          ],
          "description": "What family the OS belong to, if known.",
          "type": "string",
          "enum": [
            "OS_FAMILY_UNKNOWN",
            "OS_FAMILY_WINDOWS",
            "OS_FAMILY_LINUX",
            "OS_FAMILY_UNIX"
          ]
        },
        "config": {
          "description": "OS and app configuration.",
          "$ref": "GuestConfigDetails"
        },
        "runtime": {
          "$ref": "GuestRuntimeDetails",
          "description": "Runtime information."
        }
      },
      "description": "Information from Guest-level collections.",
      "id": "GuestOsDetails",
      "type": "object"
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        }
      },
      "type": "object",
      "id": "Operation"
    },
    "AssetPerformanceData": {
      "properties": {
        "dailyResourceUsageAggregations": {
          "description": "Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days. Aggregations are sorted from oldest to most recent.",
          "type": "array",
          "items": {
            "$ref": "DailyResourceUsageAggregation"
          }
        }
      },
      "id": "AssetPerformanceData",
      "description": "Performance data for an asset.",
      "type": "object"
    },
    "GuestConfigDetails": {
      "type": "object",
      "description": "Guest OS config information.",
      "properties": {
        "hosts": {
          "$ref": "HostsEntryList",
          "description": "Hosts file (/etc/hosts)."
        },
        "fstab": {
          "description": "Mount list (Linux fstab).",
          "$ref": "FstabEntryList"
        },
        "nfsExports": {
          "description": "NFS exports.",
          "$ref": "NfsExportList"
        },
        "selinuxMode": {
          "enumDescriptions": [
            "SELinux mode unknown or unspecified.",
            "SELinux is disabled.",
            "SELinux permissive mode.",
            "SELinux enforcing mode."
          ],
          "type": "string",
          "enum": [
            "SE_LINUX_MODE_UNSPECIFIED",
            "SE_LINUX_MODE_DISABLED",
            "SE_LINUX_MODE_PERMISSIVE",
            "SE_LINUX_MODE_ENFORCING"
          ],
          "description": "Security-Enhanced Linux (SELinux) mode."
        },
        "issue": {
          "description": "OS issue (typically /etc/issue in Linux).",
          "type": "string"
        }
      },
      "id": "GuestConfigDetails"
    },
    "NetworkAdapterDetails": {
      "id": "NetworkAdapterDetails",
      "description": "Details of network adapter.",
      "type": "object",
      "properties": {
        "adapterType": {
          "type": "string",
          "description": "Network adapter type (e.g. VMXNET3)."
        },
        "addresses": {
          "$ref": "NetworkAddressList",
          "description": "NetworkAddressList"
        },
        "macAddress": {
          "type": "string",
          "description": "MAC address."
        }
      }
    },
    "RemoveAssetsFromGroupRequest": {
      "type": "object",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        },
        "allowMissing": {
          "type": "boolean",
          "description": "Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`."
        },
        "assets": {
          "$ref": "AssetList",
          "description": "Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000."
        }
      },
      "id": "RemoveAssetsFromGroupRequest",
      "description": "A request to remove assets from a group."
    },
    "ComputeEnginePreferences": {
      "id": "ComputeEnginePreferences",
      "type": "object",
      "description": "The user preferences relating to Compute Engine target platform.",
      "properties": {
        "licenseType": {
          "type": "string",
          "enum": [
            "LICENSE_TYPE_UNSPECIFIED",
            "LICENSE_TYPE_DEFAULT",
            "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE"
          ],
          "description": "License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.",
          "enumDescriptions": [
            "Unspecified (default value).",
            "Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with.",
            "Bring-your-own-license (BYOL) plan. User provides the OS license."
          ]
        },
        "machinePreferences": {
          "description": "Preferences concerning the machine types to consider on Compute Engine.",
          "$ref": "MachinePreferences"
        }
      }
    },
    "DailyResourceUsageAggregationDisk": {
      "properties": {
        "iops": {
          "description": "Disk I/O operations per second.",
          "$ref": "DailyResourceUsageAggregationStats"
        }
      },
      "id": "DailyResourceUsageAggregationDisk",
      "description": "Statistical aggregation of disk usage.",
      "type": "object"
    },
    "ReportSummaryMachineSeriesAllocation": {
      "description": "Represents a data point tracking the count of assets allocated for a specific Machine Series.",
      "properties": {
        "allocatedAssetCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of assets allocated to this machine series."
        },
        "machineSeries": {
          "description": "The Machine Series (e.g. \"E2\", \"N2\")",
          "$ref": "MachineSeries"
        }
      },
      "type": "object",
      "id": "ReportSummaryMachineSeriesAllocation"
    },
    "DailyResourceUsageAggregationStats": {
      "id": "DailyResourceUsageAggregationStats",
      "description": "Statistical aggregation of samples for a single resource usage.",
      "properties": {
        "average": {
          "format": "float",
          "description": "Average usage value.",
          "type": "number"
        },
        "median": {
          "type": "number",
          "description": "Median usage value.",
          "format": "float"
        },
        "peak": {
          "type": "number",
          "format": "float",
          "description": "Peak usage value."
        },
        "ninteyFifthPercentile": {
          "type": "number",
          "format": "float",
          "description": "95th percentile usage value."
        }
      },
      "type": "object"
    },
    "NfsExportList": {
      "id": "NfsExportList",
      "properties": {
        "entries": {
          "type": "array",
          "description": "NFS export entries.",
          "items": {
            "$ref": "NfsExport"
          }
        }
      },
      "type": "object",
      "description": "NFS exports."
    },
    "Frames": {
      "properties": {
        "framesData": {
          "type": "array",
          "description": "A repeated field of asset data.",
          "items": {
            "$ref": "AssetFrame"
          }
        }
      },
      "description": "Collection of frame data.",
      "id": "Frames",
      "type": "object"
    },
    "GenericInsight": {
      "type": "object",
      "id": "GenericInsight",
      "properties": {
        "additionalInformation": {
          "description": "Output only. Additional information about the insight, each entry can be a logical entry and must make sense if it is displayed with line breaks between each entry. Text can contain md style links",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "messageId": {
          "description": "Output only. Represents a globally unique message id for this insight, can be used for localization purposes, in case message_code is not yet known by the client use default_message instead.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "defaultMessage": {
          "description": "Output only. In case message_code is not yet known by the client default_message will be the message to be used instead.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "An insight about an asset (experimental insight)"
    },
    "ReportSummaryChartData": {
      "id": "ReportSummaryChartData",
      "type": "object",
      "properties": {
        "dataPoints": {
          "type": "array",
          "description": "Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value.",
          "items": {
            "$ref": "ReportSummaryChartDataDataPoint"
          }
        }
      },
      "description": "Describes a collection of data points rendered as a Chart."
    },
    "DailyResourceUsageAggregationNetwork": {
      "description": "Statistical aggregation of network usage.",
      "id": "DailyResourceUsageAggregationNetwork",
      "properties": {
        "ingressBps": {
          "description": "Network ingress in B/s.",
          "$ref": "DailyResourceUsageAggregationStats"
        },
        "egressBps": {
          "$ref": "DailyResourceUsageAggregationStats",
          "description": "Network egress in B/s."
        }
      },
      "type": "object"
    },
    "ListOperationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        }
      },
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations."
    },
    "ImportError": {
      "properties": {
        "errorDetails": {
          "type": "string",
          "description": "The error information."
        },
        "severity": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ],
          "type": "string",
          "description": "The severity of the error."
        }
      },
      "description": "A resource that reports the errors encountered while processing an import job.",
      "id": "ImportError",
      "type": "object"
    },
    "ReportSummaryComputeEngineFinding": {
      "type": "object",
      "id": "ReportSummaryComputeEngineFinding",
      "description": "A set of findings that applies to assets destined for Compute Engine.",
      "properties": {
        "allocatedDiskTypes": {
          "description": "Set of disk types allocated to assets.",
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.",
              "Standard HDD Persistent Disk.",
              "Balanced Persistent Disk.",
              "SSD Persistent Disk."
            ],
            "type": "string",
            "enum": [
              "PERSISTENT_DISK_TYPE_UNSPECIFIED",
              "PERSISTENT_DISK_TYPE_STANDARD",
              "PERSISTENT_DISK_TYPE_BALANCED",
              "PERSISTENT_DISK_TYPE_SSD"
            ]
          }
        },
        "allocatedRegions": {
          "type": "array",
          "description": "Set of regions in which the assets were allocated.",
          "items": {
            "type": "string"
          }
        },
        "allocatedAssetCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of assets which were allocated."
        },
        "machineSeriesAllocations": {
          "items": {
            "$ref": "ReportSummaryMachineSeriesAllocation"
          },
          "type": "array",
          "description": "Distribution of assets based on the Machine Series."
        }
      }
    },
    "MachinePreferences": {
      "properties": {
        "allowedMachineSeries": {
          "type": "array",
          "description": "Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.",
          "items": {
            "$ref": "MachineSeries"
          }
        }
      },
      "id": "MachinePreferences",
      "description": "The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.",
      "type": "object"
    },
    "ComputeEngineMigrationTarget": {
      "type": "object",
      "properties": {
        "shape": {
          "description": "Description of the suggested shape for the migration target.",
          "$ref": "ComputeEngineShapeDescriptor"
        }
      },
      "description": "Compute engine migration target.",
      "id": "ComputeEngineMigrationTarget"
    },
    "PerformanceSample": {
      "description": "Performance data sample.",
      "type": "object",
      "id": "PerformanceSample",
      "properties": {
        "cpu": {
          "$ref": "CpuUsageSample",
          "description": "CPU usage sample."
        },
        "disk": {
          "description": "Disk usage sample.",
          "$ref": "DiskUsageSample"
        },
        "memory": {
          "description": "Memory usage sample.",
          "$ref": "MemoryUsageSample"
        },
        "sampleTime": {
          "description": "Time the sample was If omitted, the frame report time will be used.",
          "type": "string",
          "format": "google-datetime"
        },
        "network": {
          "$ref": "NetworkUsageSample",
          "description": "Network usage sample."
        }
      }
    },
    "AggregationResultCount": {
      "description": "The result of a count aggregation.",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64"
        }
      },
      "id": "AggregationResultCount",
      "type": "object"
    },
    "RunningService": {
      "id": "RunningService",
      "type": "object",
      "properties": {
        "cmdline": {
          "description": "Service command line.",
          "type": "string"
        },
        "pid": {
          "description": "Service pid.",
          "format": "int64",
          "type": "string"
        },
        "startMode": {
          "enumDescriptions": [
            "Start mode unspecified.",
            "The service is a device driver started by the system loader.",
            "The service is a device driver started by the IOInitSystem function.",
            "The service is started by the operating system, at system start-up",
            "The service is started only manually, by a user.",
            "The service is disabled."
          ],
          "description": "Service start mode (OS-agnostic).",
          "enum": [
            "START_MODE_UNSPECIFIED",
            "BOOT",
            "SYSTEM",
            "AUTO",
            "MANUAL",
            "DISABLED"
          ],
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "PAUSED",
            "STOPPED"
          ],
          "description": "Service state (OS-agnostic).",
          "enumDescriptions": [
            "Service state unspecified.",
            "Service is active.",
            "Service is paused.",
            "Service is stopped."
          ]
        },
        "exePath": {
          "description": "Service binary path.",
          "type": "string"
        },
        "serviceName": {
          "description": "Service name.",
          "type": "string"
        }
      },
      "description": "Guest OS running service details."
    },
    "BatchUpdateAssetsRequest": {
      "description": "A request to update a list of assets.",
      "properties": {
        "requests": {
          "description": "Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.",
          "type": "array",
          "items": {
            "$ref": "UpdateAssetRequest"
          }
        }
      },
      "id": "BatchUpdateAssetsRequest",
      "type": "object"
    },
    "AggregateAssetsValuesRequest": {
      "id": "AggregateAssetsValuesRequest",
      "properties": {
        "aggregations": {
          "description": "Array of aggregations to perform. Up to 25 aggregations can be defined.",
          "items": {
            "$ref": "Aggregation"
          },
          "type": "array"
        },
        "filter": {
          "type": "string",
          "description": "The aggregation will be performed on assets that match the provided filter."
        }
      },
      "type": "object",
      "description": "A request to aggregate one or more values."
    },
    "ReportSummaryHistogramChartData": {
      "id": "ReportSummaryHistogramChartData",
      "description": "A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.",
      "properties": {
        "buckets": {
          "items": {
            "$ref": "ReportSummaryHistogramChartDataBucket"
          },
          "description": "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "PlatformDetails": {
      "id": "PlatformDetails",
      "description": "Information about the platform.",
      "type": "object",
      "properties": {
        "azureVmDetails": {
          "$ref": "AzureVmPlatformDetails",
          "description": "Azure VM specific details."
        },
        "awsEc2Details": {
          "description": "AWS EC2 specific details.",
          "$ref": "AwsEc2PlatformDetails"
        },
        "physicalDetails": {
          "description": "Physical machines platform details.",
          "$ref": "PhysicalPlatformDetails"
        },
        "vmwareDetails": {
          "$ref": "VmwarePlatformDetails",
          "description": "VMware specific details."
        },
        "genericDetails": {
          "description": "Generic platform details.",
          "$ref": "GenericPlatformDetails"
        }
      }
    },
    "HostsEntryList": {
      "description": "Hosts content.",
      "id": "HostsEntryList",
      "properties": {
        "entries": {
          "items": {
            "$ref": "HostsEntry"
          },
          "type": "array",
          "description": "Hosts entries."
        }
      },
      "type": "object"
    },
    "ListGroupsResponse": {
      "properties": {
        "groups": {
          "description": "The list of Group",
          "type": "array",
          "items": {
            "$ref": "Group"
          }
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A response for listing groups.",
      "id": "ListGroupsResponse"
    },
    "AggregationResult": {
      "properties": {
        "sum": {
          "$ref": "AggregationResultSum"
        },
        "count": {
          "$ref": "AggregationResultCount"
        },
        "field": {
          "type": "string"
        },
        "histogram": {
          "$ref": "AggregationResultHistogram"
        },
        "frequency": {
          "$ref": "AggregationResultFrequency"
        }
      },
      "id": "AggregationResult",
      "type": "object",
      "description": "Message describing a result of an aggregation."
    },
    "ReportSummaryHistogramChartDataBucket": {
      "type": "object",
      "properties": {
        "count": {
          "format": "int64",
          "description": "Count of items in the bucket.",
          "type": "string"
        },
        "upperBound": {
          "format": "int64",
          "description": "Upper bound - exclusive.",
          "type": "string"
        },
        "lowerBound": {
          "format": "int64",
          "type": "string",
          "description": "Lower bound - inclusive."
        }
      },
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "id": "ReportSummaryHistogramChartDataBucket"
    },
    "Insight": {
      "properties": {
        "migrationInsight": {
          "description": "Output only. An insight about potential migrations for an asset.",
          "$ref": "MigrationInsight",
          "readOnly": true
        },
        "genericInsight": {
          "description": "Output only. A generic insight about an asset",
          "$ref": "GenericInsight",
          "readOnly": true
        }
      },
      "description": "An insight about an asset.",
      "type": "object",
      "id": "Insight"
    },
    "FitDescriptor": {
      "id": "FitDescriptor",
      "description": "Describes the fit level of an asset for migration to a specific target.",
      "type": "object",
      "properties": {
        "fitLevel": {
          "description": "Fit level.",
          "type": "string",
          "enumDescriptions": [
            "Not enough information.",
            "Fit.",
            "No Fit.",
            "Fit with effort."
          ],
          "enum": [
            "FIT_LEVEL_UNSPECIFIED",
            "FIT",
            "NO_FIT",
            "REQUIRES_EFFORT"
          ]
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "type": "object",
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        }
      }
    },
    "GenericPlatformDetails": {
      "type": "object",
      "description": "Generic platform details.",
      "properties": {
        "location": {
          "type": "string",
          "description": "Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field."
        }
      },
      "id": "GenericPlatformDetails"
    },
    "SoleTenantNodeType": {
      "type": "object",
      "id": "SoleTenantNodeType",
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes"
        }
      },
      "description": "A Sole Tenant node type."
    },
    "NfsExport": {
      "id": "NfsExport",
      "properties": {
        "exportDirectory": {
          "type": "string",
          "description": "The directory being exported."
        },
        "hosts": {
          "description": "The hosts or networks to which the export is being shared.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "NFS export."
    },
    "ReportSummaryChartDataDataPoint": {
      "type": "object",
      "id": "ReportSummaryChartDataDataPoint",
      "properties": {
        "value": {
          "format": "double",
          "description": "The Y-axis value for this data point.",
          "type": "number"
        },
        "label": {
          "type": "string",
          "description": "The X-axis label for this data point."
        }
      },
      "description": "Describes a single data point in the Chart."
    },
    "UpdateAssetRequest": {
      "type": "object",
      "id": "UpdateAssetRequest",
      "description": "A request to update an asset.",
      "properties": {
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields."
        },
        "asset": {
          "$ref": "Asset",
          "description": "Required. The resource being updated."
        },
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      }
    },
    "AggregationResultHistogramBucket": {
      "properties": {
        "count": {
          "description": "Count of items in the bucket.",
          "format": "int64",
          "type": "string"
        },
        "lowerBound": {
          "description": "Lower bound - inclusive.",
          "type": "number",
          "format": "double"
        },
        "upperBound": {
          "description": "Upper bound - exclusive.",
          "format": "double",
          "type": "number"
        }
      },
      "description": "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
      "id": "AggregationResultHistogramBucket",
      "type": "object"
    },
    "ReportSummary": {
      "properties": {
        "allAssetsStats": {
          "description": "Aggregate statistics for all the assets across all the groups.",
          "$ref": "ReportSummaryAssetAggregateStats"
        },
        "groupFindings": {
          "items": {
            "$ref": "ReportSummaryGroupFinding"
          },
          "description": "Findings for each Group included in this report.",
          "type": "array"
        }
      },
      "id": "ReportSummary",
      "description": "Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report.",
      "type": "object"
    },
    "BiosDetails": {
      "properties": {
        "version": {
          "description": "BIOS version.",
          "type": "string"
        },
        "biosName": {
          "deprecated": true,
          "type": "string",
          "description": "BIOS name. This fields is deprecated. Please use the `id` field instead."
        },
        "manufacturer": {
          "type": "string",
          "description": "BIOS manufacturer."
        },
        "id": {
          "type": "string",
          "description": "BIOS ID."
        },
        "smbiosUuid": {
          "type": "string",
          "description": "SMBIOS UUID."
        },
        "releaseDate": {
          "$ref": "Date",
          "description": "BIOS release date."
        }
      },
      "id": "BiosDetails",
      "description": "Details about the BIOS.",
      "type": "object"
    },
    "GuestInstalledApplication": {
      "type": "object",
      "id": "GuestInstalledApplication",
      "properties": {
        "installTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the application was installed."
        },
        "applicationName": {
          "type": "string",
          "description": "Installed application name."
        },
        "vendor": {
          "description": "Installed application vendor.",
          "type": "string"
        },
        "path": {
          "description": "Source path.",
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "Installed application version."
        }
      },
      "description": "Guest installed application information."
    },
    "HostsEntry": {
      "id": "HostsEntry",
      "properties": {
        "hostNames": {
          "items": {
            "type": "string"
          },
          "description": "List of host names / aliases.",
          "type": "array"
        },
        "ip": {
          "type": "string",
          "description": "IP (raw, IPv4/6 agnostic)."
        }
      },
      "type": "object",
      "description": "Single /etc/hosts entry."
    },
    "MigrationInsight": {
      "type": "object",
      "description": "An insight about potential migrations for an asset.",
      "properties": {
        "fit": {
          "$ref": "FitDescriptor",
          "description": "Output only. Description of how well the asset this insight is associated with fits the proposed migration.",
          "readOnly": true
        },
        "computeEngineTarget": {
          "description": "Output only. A Google Compute Engine target.",
          "readOnly": true,
          "$ref": "ComputeEngineMigrationTarget"
        }
      },
      "id": "MigrationInsight"
    },
    "MachineSeries": {
      "properties": {
        "code": {
          "description": "Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series.",
          "type": "string"
        }
      },
      "id": "MachineSeries",
      "description": "A Compute Engine machine series.",
      "type": "object"
    },
    "AggregationHistogram": {
      "description": "Histogram of bucketed assets counts by field value.",
      "type": "object",
      "id": "AggregationHistogram",
      "properties": {
        "lowerBounds": {
          "items": {
            "format": "double",
            "type": "number"
          },
          "description": "Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.",
          "type": "array"
        }
      }
    },
    "NetworkAdapterList": {
      "id": "NetworkAdapterList",
      "description": "List of network adapters.",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "NetworkAdapterDetails"
          },
          "description": "Network adapter entries."
        }
      },
      "type": "object"
    },
    "NetworkConnectionList": {
      "properties": {
        "entries": {
          "description": "Network connection entries.",
          "type": "array",
          "items": {
            "$ref": "NetworkConnection"
          }
        }
      },
      "type": "object",
      "description": "Network connection list.",
      "id": "NetworkConnectionList"
    },
    "BatchDeleteAssetsRequest": {
      "description": "A request to delete a list of asset.",
      "type": "object",
      "id": "BatchDeleteAssetsRequest",
      "properties": {
        "allowMissing": {
          "type": "boolean",
          "description": "Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`."
        },
        "names": {
          "description": "Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListAssetsResponse": {
      "type": "object",
      "id": "ListAssetsResponse",
      "description": "Response message for listing assets.",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "assets": {
          "items": {
            "$ref": "Asset"
          },
          "type": "array",
          "description": "A list of assets."
        }
      }
    },
    "ComputeEngineShapeDescriptor": {
      "id": "ComputeEngineShapeDescriptor",
      "type": "object",
      "properties": {
        "machineType": {
          "type": "string",
          "description": "Compute Engine machine type."
        },
        "physicalCoreCount": {
          "type": "integer",
          "description": "Number of physical cores.",
          "format": "int32"
        },
        "series": {
          "type": "string",
          "description": "Compute Engine machine series."
        },
        "storage": {
          "description": "Compute Engine storage. Never empty.",
          "type": "array",
          "items": {
            "$ref": "ComputeStorageDescriptor"
          }
        },
        "logicalCoreCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of logical cores."
        },
        "memoryMb": {
          "type": "integer",
          "format": "int32",
          "description": "Memory in mebibytes."
        }
      },
      "description": "Compute Engine target shape descriptor."
    },
    "OpenFileDetails": {
      "type": "object",
      "id": "OpenFileDetails",
      "description": "Open file Information.",
      "properties": {
        "user": {
          "type": "string",
          "description": "Opened file user."
        },
        "filePath": {
          "type": "string",
          "description": "Opened file file path."
        },
        "command": {
          "type": "string",
          "description": "Opened file command."
        },
        "fileType": {
          "type": "string",
          "description": "Opened file file type."
        }
      }
    },
    "NetworkUsageSample": {
      "id": "NetworkUsageSample",
      "properties": {
        "averageIngressBps": {
          "type": "number",
          "format": "float",
          "description": "Average network ingress in B/s sampled over a short window. Must be non-negative."
        },
        "averageEgressBps": {
          "format": "float",
          "type": "number",
          "description": "Average network egress in B/s sampled over a short window. Must be non-negative."
        }
      },
      "description": "Network usage sample. Values are across all network interfaces.",
      "type": "object"
    },
    "NetworkAddressList": {
      "type": "object",
      "description": "List of allocated/assigned network addresses.",
      "properties": {
        "entries": {
          "description": "Network address entries.",
          "items": {
            "$ref": "NetworkAddress"
          },
          "type": "array"
        }
      },
      "id": "NetworkAddressList"
    },
    "VmwareDiskConfig": {
      "description": "VMware disk config details.",
      "id": "VmwareDiskConfig",
      "type": "object",
      "properties": {
        "shared": {
          "description": "Is VMDK shared with other VMs.",
          "type": "boolean"
        },
        "rdmCompatibility": {
          "description": "RDM compatibility mode.",
          "enum": [
            "RDM_COMPATIBILITY_UNSPECIFIED",
            "PHYSICAL_COMPATIBILITY",
            "VIRTUAL_COMPATIBILITY"
          ],
          "type": "string",
          "enumDescriptions": [
            "Compatibility mode unspecified or unknown.",
            "Physical compatibility mode.",
            "Virtual compatibility mode."
          ]
        },
        "vmdkMode": {
          "type": "string",
          "description": "VMDK disk mode.",
          "enum": [
            "VMDK_MODE_UNSPECIFIED",
            "DEPENDENT",
            "INDEPENDENT_PERSISTENT",
            "INDEPENDENT_NONPERSISTENT"
          ],
          "enumDescriptions": [
            "VMDK disk mode unspecified or unknown.",
            "Dependent disk mode.",
            "Independent - Persistent disk mode.",
            "Independent - Nonpersistent disk mode."
          ]
        },
        "backingType": {
          "enumDescriptions": [
            "Default value.",
            "Flat v1.",
            "Flat v2.",
            "Persistent memory, also known as Non-Volatile Memory (NVM).",
            "Raw Disk Memory v1.",
            "Raw Disk Memory v2.",
            "SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.",
            "SEsparse v1.",
            "SEsparse v1."
          ],
          "enum": [
            "BACKING_TYPE_UNSPECIFIED",
            "BACKING_TYPE_FLAT_V1",
            "BACKING_TYPE_FLAT_V2",
            "BACKING_TYPE_PMEM",
            "BACKING_TYPE_RDM_V1",
            "BACKING_TYPE_RDM_V2",
            "BACKING_TYPE_SESPARSE",
            "BACKING_TYPE_SESPARSE_V1",
            "BACKING_TYPE_SESPARSE_V2"
          ],
          "description": "VMDK backing type.",
          "type": "string"
        }
      }
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "Status",
      "properties": {
        "details": {
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "NetworkAddress": {
      "description": "Details of network address.",
      "id": "NetworkAddress",
      "type": "object",
      "properties": {
        "bcast": {
          "type": "string",
          "description": "Broadcast address."
        },
        "subnetMask": {
          "description": "Subnet mask.",
          "type": "string"
        },
        "ipAddress": {
          "description": "Assigned or configured IP Address.",
          "type": "string"
        },
        "fqdn": {
          "description": "Fully qualified domain name.",
          "type": "string"
        },
        "assignment": {
          "enumDescriptions": [
            "Unknown (default value).",
            "Staticly assigned IP.",
            "Dynamically assigned IP (DHCP)."
          ],
          "description": "Whether DHCP is used to assign addresses.",
          "type": "string",
          "enum": [
            "ADDRESS_ASSIGNMENT_UNSPECIFIED",
            "ADDRESS_ASSIGNMENT_STATIC",
            "ADDRESS_ASSIGNMENT_DHCP"
          ]
        }
      }
    },
    "Settings": {
      "type": "object",
      "description": "Describes the Migration Center settings related to the project.",
      "id": "Settings",
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the resource.",
          "type": "string"
        },
        "preferenceSet": {
          "type": "string",
          "description": "The preference set used by default for a project."
        }
      }
    },
    "Asset": {
      "id": "Asset",
      "description": "An asset represents a resource in your environment. Asset types include virtual machines and databases.",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The full name of the asset."
        },
        "sources": {
          "description": "Output only. The list of sources contributing to the asset.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp when the asset was created."
        },
        "machineDetails": {
          "description": "Output only. Asset information specific for virtual and physical machines.",
          "$ref": "MachineDetails",
          "readOnly": true
        },
        "performanceData": {
          "$ref": "AssetPerformanceData",
          "readOnly": true,
          "description": "Output only. Performance data for the asset."
        },
        "insightList": {
          "readOnly": true,
          "description": "Output only. The list of insights associated with the asset.",
          "$ref": "InsightList"
        },
        "attributes": {
          "type": "object",
          "description": "Generic asset attributes.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "assignedGroups": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. The list of groups that the asset is assigned to."
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp when the asset was last updated."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "FrameViolationEntry": {
      "properties": {
        "violation": {
          "description": "A message describing the violation.",
          "type": "string"
        },
        "field": {
          "type": "string",
          "description": "The field of the original frame where the violation occurred."
        }
      },
      "description": "A resource that contains a single violation of a reported `AssetFrame` resource.",
      "id": "FrameViolationEntry",
      "type": "object"
    },
    "ReportSummaryVmwareEngineFinding": {
      "type": "object",
      "properties": {
        "allocatedRegions": {
          "description": "Set of regions in which the assets were allocated",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nodeAllocations": {
          "description": "Set of per-nodetype allocation records",
          "items": {
            "$ref": "ReportSummaryVmwareNodeAllocation"
          },
          "type": "array"
        },
        "allocatedAssetCount": {
          "description": "Count of assets which are allocated",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "ReportSummaryVmwareEngineFinding",
      "description": "A set of findings that applies to assets destined for VMWare Engine."
    },
    "AggregationResultSum": {
      "type": "object",
      "description": "The result of a sum aggregation.",
      "properties": {
        "value": {
          "type": "number",
          "format": "double"
        }
      },
      "id": "AggregationResultSum"
    },
    "InsightList": {
      "type": "object",
      "id": "InsightList",
      "description": "Message containing insights list.",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. Update timestamp.",
          "readOnly": true,
          "type": "string"
        },
        "insights": {
          "items": {
            "$ref": "Insight"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Insights of the list."
        }
      }
    },
    "VmwarePlatformDetails": {
      "properties": {
        "osid": {
          "type": "string",
          "description": "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html."
        },
        "esxVersion": {
          "description": "ESX version.",
          "type": "string"
        },
        "vcenterVmId": {
          "type": "string",
          "description": "vCenter VM ID."
        },
        "vcenterVersion": {
          "description": "vCenter version.",
          "type": "string"
        },
        "vcenterUri": {
          "type": "string",
          "description": "vCenter URI used in collection."
        },
        "vcenterFolder": {
          "description": "Folder name in vCenter where asset resides.",
          "type": "string"
        }
      },
      "id": "VmwarePlatformDetails",
      "description": "VMware specific details.",
      "type": "object"
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "apiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. API version used to start the operation."
        },
        "requestedCancellation": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "statusMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any."
        }
      },
      "type": "object"
    },
    "Group": {
      "id": "Group",
      "type": "object",
      "description": "A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the resource."
        },
        "displayName": {
          "description": "User-friendly display name.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the group was last updated.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp when the group was created.",
          "readOnly": true
        },
        "name": {
          "description": "Output only. The name of the group.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "DiskEntryList": {
      "id": "DiskEntryList",
      "properties": {
        "entries": {
          "items": {
            "$ref": "DiskEntry"
          },
          "description": "Disk entries.",
          "type": "array"
        }
      },
      "description": "VM disks.",
      "type": "object"
    },
    "PreferenceSet": {
      "type": "object",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp when the preference set was last updated.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The timestamp when the preference set was created.",
          "readOnly": true
        },
        "name": {
          "description": "Output only. Name of the preference set.",
          "type": "string",
          "readOnly": true
        },
        "virtualMachinePreferences": {
          "$ref": "VirtualMachinePreferences",
          "description": "A set of preferences that applies to all virtual machines in the context."
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "description": {
          "description": "A description of the preference set.",
          "type": "string"
        }
      },
      "description": "The preferences that apply to all assets in a given context.",
      "id": "PreferenceSet"
    },
    "ReportAssetFramesResponse": {
      "type": "object",
      "properties": {},
      "id": "ReportAssetFramesResponse",
      "description": "A response to a call to `ReportAssetFrame`."
    },
    "ReportSummaryAssetAggregateStats": {
      "type": "object",
      "description": "Aggregate statistics for a collection of assets.",
      "id": "ReportSummaryAssetAggregateStats",
      "properties": {
        "coreCountHistogram": {
          "description": "Histogram showing a distribution of CPU core counts.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "storageBytesHistogram": {
          "$ref": "ReportSummaryHistogramChartData",
          "description": "Histogram showing a distribution of memory sizes."
        },
        "memoryUtilizationChart": {
          "$ref": "ReportSummaryUtilizationChartData",
          "description": "Total memory split into Used/Free buckets."
        },
        "totalStorageBytes": {
          "format": "int64",
          "type": "string",
          "description": "Sum of persistent storage in bytes of all the assets in this collection."
        },
        "totalMemoryBytes": {
          "type": "string",
          "format": "int64",
          "description": "Sum of the memory in bytes of all the assets in this collection."
        },
        "operatingSystem": {
          "$ref": "ReportSummaryChartData",
          "description": "Count of assets grouped by Operating System families."
        },
        "totalCores": {
          "format": "int64",
          "type": "string",
          "description": "Sum of the CPU core count of all the assets in this collection."
        },
        "memoryBytesHistogram": {
          "description": "Histogram showing a distribution of memory sizes.",
          "$ref": "ReportSummaryHistogramChartData"
        },
        "storageUtilizationChart": {
          "description": "Total memory split into Used/Free buckets.",
          "$ref": "ReportSummaryUtilizationChartData"
        },
        "totalAssets": {
          "type": "string",
          "format": "int64",
          "description": "Count of the number of unique assets in this collection."
        }
      }
    },
    "AwsEc2PlatformDetails": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "The location of the machine in the AWS format."
        },
        "machineTypeLabel": {
          "type": "string",
          "description": "AWS platform's machine type label."
        }
      },
      "id": "AwsEc2PlatformDetails",
      "description": "AWS EC2 specific details."
    },
    "DiskPartition": {
      "properties": {
        "capacityBytes": {
          "format": "int64",
          "type": "string",
          "description": "Partition capacity."
        },
        "fileSystem": {
          "description": "Partition file system.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Partition type."
        },
        "mountPoint": {
          "description": "Mount pount (Linux/Windows) or drive letter (Windows).",
          "type": "string"
        },
        "uuid": {
          "description": "Partition UUID.",
          "type": "string"
        },
        "freeBytes": {
          "type": "string",
          "description": "Partition free space.",
          "format": "int64"
        },
        "subPartitions": {
          "description": "Sub-partitions.",
          "$ref": "DiskPartitionList"
        }
      },
      "description": "Disk Partition details.",
      "id": "DiskPartition",
      "type": "object"
    },
    "ImportDataFile": {
      "type": "object",
      "id": "ImportDataFile",
      "properties": {
        "createTime": {
          "description": "Output only. The timestamp when the file was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "format": {
          "enumDescriptions": [
            "Default value.",
            "RVTools format (XLSX).",
            "RVTools format (CSV).",
            "CSV format exported from AWS using the AWS collection script.",
            "CSV format exported from Azure using the Azure collection script.",
            "CSV format created manually and following the StratoZone format. For more information, see Manually create and upload data tables."
          ],
          "enum": [
            "IMPORT_JOB_FORMAT_UNSPECIFIED",
            "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
            "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
            "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
            "IMPORT_JOB_FORMAT_STRATOZONE_CSV"
          ],
          "type": "string",
          "description": "Required. The payload format."
        },
        "displayName": {
          "description": "User-friendly display name. Maximum length is 63 characters.",
          "type": "string"
        },
        "uploadFileInfo": {
          "$ref": "UploadFileInfo",
          "description": "Information about a file that is uploaded to a storage service."
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the file.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "description": "Output only. The state of the import data file.",
          "readOnly": true,
          "enumDescriptions": [
            "Default value.",
            "The data file is being created.",
            "The data file completed initialization."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE"
          ]
        }
      },
      "description": "A resource that represents a payload file in an import job."
    },
    "AggregationFrequency": {
      "description": "Frequency distribution of all field values.",
      "type": "object",
      "id": "AggregationFrequency",
      "properties": {}
    },
    "ListErrorFramesResponse": {
      "description": "A response for listing error frames.",
      "type": "object",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errorFrames": {
          "description": "The list of error frames.",
          "type": "array",
          "items": {
            "$ref": "ErrorFrame"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        }
      },
      "id": "ListErrorFramesResponse"
    },
    "Money": {
      "description": "Represents an amount of money with its currency type.",
      "id": "Money",
      "type": "object",
      "properties": {
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "format": "int32",
          "type": "integer"
        },
        "units": {
          "type": "string",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "format": "int64"
        },
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        }
      }
    },
    "RunningProcess": {
      "type": "object",
      "description": "Guest OS running process details.",
      "id": "RunningProcess",
      "properties": {
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Process extended attributes.",
          "type": "object"
        },
        "user": {
          "type": "string",
          "description": "User running the process."
        },
        "pid": {
          "description": "Process ID.",
          "format": "int64",
          "type": "string"
        },
        "exePath": {
          "description": "Process binary path.",
          "type": "string"
        },
        "cmdline": {
          "description": "Process full command line.",
          "type": "string"
        }
      }
    },
    "GuestRuntimeDetails": {
      "type": "object",
      "properties": {
        "network": {
          "description": "Runtime network information (connections, ports).",
          "$ref": "RuntimeNetworkInfo"
        },
        "installedApps": {
          "$ref": "GuestInstalledApplicationList",
          "description": "Installed applications information."
        },
        "openFileList": {
          "$ref": "OpenFileList",
          "description": "Open files information."
        },
        "lastBootTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Last time the OS was booted."
        },
        "domain": {
          "description": "Domain, e.g. c.stratozone-development.internal.",
          "type": "string"
        },
        "processes": {
          "$ref": "RunningProcessList",
          "description": "Running processes."
        },
        "machineName": {
          "description": "Machine name.",
          "type": "string"
        },
        "services": {
          "description": "Running background services.",
          "$ref": "RunningServiceList"
        }
      },
      "id": "GuestRuntimeDetails",
      "description": "Guest OS runtime information."
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "id": "CancelOperationRequest",
      "type": "object",
      "properties": {}
    },
    "NetworkConnection": {
      "type": "object",
      "properties": {
        "pid": {
          "description": "Process ID.",
          "format": "int64",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "Connection state is unknown or unspecified.",
            "The connection is being opened.",
            "The connection is open.",
            "Listening for incoming connections.",
            "The connection is being closed.",
            "The connection is closed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "OPENING",
            "OPEN",
            "LISTEN",
            "CLOSING",
            "CLOSED"
          ],
          "type": "string",
          "description": "Network connection state."
        },
        "localPort": {
          "format": "int32",
          "description": "Local port.",
          "type": "integer"
        },
        "processName": {
          "description": "Process or service name.",
          "type": "string"
        },
        "protocol": {
          "description": "Connection protocol (e.g. TCP/UDP).",
          "type": "string"
        },
        "localIpAddress": {
          "description": "Local IP address.",
          "type": "string"
        },
        "remoteIpAddress": {
          "type": "string",
          "description": "Remote IP address."
        },
        "remotePort": {
          "type": "integer",
          "description": "Remote port.",
          "format": "int32"
        }
      },
      "id": "NetworkConnection"
    },
    "RegionPreferences": {
      "id": "RegionPreferences",
      "description": "The user preferences relating to target regions.",
      "type": "object",
      "properties": {
        "preferredRegions": {
          "description": "A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AddAssetsToGroupRequest": {
      "description": "A request to add assets to a group.",
      "type": "object",
      "properties": {
        "assets": {
          "description": "Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000.",
          "$ref": "AssetList"
        },
        "requestId": {
          "type": "string",
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        },
        "allowExisting": {
          "type": "boolean",
          "description": "Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`."
        }
      },
      "id": "AddAssetsToGroupRequest"
    },
    "DiskPartitionList": {
      "id": "DiskPartitionList",
      "properties": {
        "entries": {
          "items": {
            "$ref": "DiskPartition"
          },
          "description": "Partition entries.",
          "type": "array"
        }
      },
      "description": "Disk partition list.",
      "type": "object"
    },
    "DiskEntry": {
      "id": "DiskEntry",
      "description": "Single disk entry.",
      "properties": {
        "freeBytes": {
          "description": "Disk free space.",
          "type": "string",
          "format": "int64"
        },
        "diskLabel": {
          "description": "Disk label.",
          "type": "string"
        },
        "diskLabelType": {
          "description": "Disk label type (e.g. BIOS/GPT)",
          "type": "string"
        },
        "capacityBytes": {
          "description": "Disk capacity.",
          "format": "int64",
          "type": "string"
        },
        "partitions": {
          "$ref": "DiskPartitionList",
          "description": "Partition layout."
        },
        "vmware": {
          "$ref": "VmwareDiskConfig",
          "description": "VMware disk details."
        },
        "hwAddress": {
          "type": "string",
          "description": "Disk hardware address (e.g. 0:1 for SCSI)."
        },
        "interfaceType": {
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "IDE",
            "SATA",
            "SAS",
            "SCSI",
            "NVME",
            "FC",
            "ISCSI"
          ],
          "type": "string",
          "enumDescriptions": [
            "Interface type unknown or unspecified.",
            "IDE interface type.",
            "SATA interface type.",
            "SAS interface type.",
            "SCSI interface type.",
            "NVME interface type.",
            "FC interface type.",
            "iSCSI interface type."
          ],
          "description": "Disks interface type."
        }
      },
      "type": "object"
    },
    "MachineArchitectureDetails": {
      "description": "Details of the machine architecture.",
      "id": "MachineArchitectureDetails",
      "type": "object",
      "properties": {
        "hyperthreading": {
          "type": "string",
          "enum": [
            "CPU_HYPER_THREADING_UNSPECIFIED",
            "DISABLED",
            "ENABLED"
          ],
          "description": "CPU hyper-threading support.",
          "enumDescriptions": [
            "Unspecified or unknown.",
            "Hyper-threading is disabled.",
            "Hyper-threading is enabled."
          ]
        },
        "cpuThreadCount": {
          "description": "Number of CPU threads allocated to the machine.",
          "format": "int32",
          "type": "integer"
        },
        "firmwareType": {
          "description": "Firmware type.",
          "enumDescriptions": [
            "Unspecified or unknown.",
            "BIOS firmware.",
            "EFI firmware."
          ],
          "type": "string",
          "enum": [
            "FIRMWARE_TYPE_UNSPECIFIED",
            "BIOS",
            "EFI"
          ]
        },
        "bios": {
          "description": "BIOS Details.",
          "$ref": "BiosDetails"
        },
        "cpuName": {
          "type": "string",
          "description": "CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc."
        },
        "cpuSocketCount": {
          "type": "integer",
          "description": "Number of processor sockets allocated to the machine.",
          "format": "int32"
        },
        "vendor": {
          "type": "string",
          "description": "Hardware vendor."
        },
        "cpuArchitecture": {
          "type": "string",
          "description": "CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc."
        }
      }
    },
    "ImportJob": {
      "id": "ImportJob",
      "type": "object",
      "properties": {
        "executionReport": {
          "description": "Output only. The report with the results of running the import job.",
          "readOnly": true,
          "$ref": "ExecutionReport"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The full name of the import job.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "state": {
          "enum": [
            "IMPORT_JOB_STATE_UNSPECIFIED",
            "IMPORT_JOB_STATE_PENDING",
            "IMPORT_JOB_STATE_RUNNING",
            "IMPORT_JOB_STATE_COMPLETED",
            "IMPORT_JOB_STATE_FAILED",
            "IMPORT_JOB_STATE_VALIDATING",
            "IMPORT_JOB_STATE_FAILED_VALIDATION",
            "IMPORT_JOB_STATE_READY"
          ],
          "readOnly": true,
          "description": "Output only. The state of the import job.",
          "enumDescriptions": [
            "Default value.",
            "The import job is pending.",
            "The processing of the import job is ongoing.",
            "The import job processing has completed.",
            "The import job failed to be processed.",
            "The import job is being validated.",
            "The import job contains blocking errors.",
            "The validation of the job completed with no blocking errors."
          ],
          "type": "string"
        },
        "validationReport": {
          "readOnly": true,
          "description": "Output only. The report with the validation results of the import job.",
          "$ref": "ValidationReport"
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name. Maximum length is 63 characters."
        },
        "assetSource": {
          "description": "Required. Reference to a source.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the import job was created."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the import job was last updated."
        },
        "completeTime": {
          "description": "Output only. The timestamp when the import job was completed.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "A resource that represents the background job that imports asset frames."
    },
    "ImportRowError": {
      "id": "ImportRowError",
      "properties": {
        "vmName": {
          "type": "string",
          "description": "The name of the VM in the row."
        },
        "vmUuid": {
          "type": "string",
          "description": "The VM UUID."
        },
        "errors": {
          "description": "The list of errors detected in the row.",
          "items": {
            "$ref": "ImportError"
          },
          "type": "array"
        },
        "rowNumber": {
          "type": "integer",
          "deprecated": true,
          "format": "int32",
          "description": "The row number where the error was detected."
        }
      },
      "type": "object",
      "description": "A resource that reports the import job errors at row level."
    },
    "ErrorFrame": {
      "description": "Message representing a frame which failed to be processed due to an error.",
      "type": "object",
      "id": "ErrorFrame",
      "properties": {
        "violations": {
          "items": {
            "$ref": "FrameViolationEntry"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. All the violations that were detected for the frame."
        },
        "name": {
          "description": "Output only. The identifier of the ErrorFrame.",
          "readOnly": true,
          "type": "string"
        },
        "ingestionTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Frame ingestion time."
        },
        "originalFrame": {
          "readOnly": true,
          "$ref": "AssetFrame",
          "description": "Output only. The frame that was originally reported."
        }
      }
    },
    "ReportSummaryGroupPreferenceSetFinding": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Description for the Preference Set."
        },
        "displayName": {
          "type": "string",
          "description": "Display Name of the Preference Set"
        },
        "computeEngineFinding": {
          "$ref": "ReportSummaryComputeEngineFinding",
          "description": "A set of findings that applies to Compute Engine machines in the input."
        },
        "monthlyCostOther": {
          "$ref": "Money",
          "description": "Miscellaneous monthly cost for this preference set."
        },
        "monthlyCostCompute": {
          "description": "Compute monthly cost for this preference set.",
          "$ref": "Money"
        },
        "monthlyCostStorage": {
          "$ref": "Money",
          "description": "Storage monthly cost for this preference set."
        },
        "vmwareEngineFinding": {
          "description": "A set of findings that applies to VMWare machines in the input.",
          "$ref": "ReportSummaryVmwareEngineFinding"
        },
        "soleTenantFinding": {
          "description": "A set of findings that applies to Sole-Tenant machines in the input.",
          "$ref": "ReportSummarySoleTenantFinding"
        },
        "machinePreferences": {
          "description": "A set of preferences that applies to all machines in the context.",
          "$ref": "VirtualMachinePreferences"
        },
        "monthlyCostNetworkEgress": {
          "$ref": "Money",
          "description": "Network Egress monthly cost for this preference set."
        },
        "monthlyCostOsLicense": {
          "$ref": "Money",
          "description": "Licensing monthly cost for this preference set."
        },
        "monthlyCostTotal": {
          "description": "Total monthly cost for this preference set.",
          "$ref": "Money"
        }
      },
      "type": "object",
      "description": "Summary Findings for a specific Group/PreferenceSet combination.",
      "id": "ReportSummaryGroupPreferenceSetFinding"
    },
    "Source": {
      "properties": {
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the source was created."
        },
        "name": {
          "description": "Output only. The full name of the source.",
          "readOnly": true,
          "type": "string"
        },
        "managed": {
          "description": "If `true`, the source is managed by other service(s).",
          "type": "boolean"
        },
        "errorFrameCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Output only. The number of frames that were reported by the source and contained errors."
        },
        "priority": {
          "description": "The information confidence of the source. The higher the value, the higher the confidence.",
          "type": "integer",
          "format": "int32"
        },
        "pendingFrameCount": {
          "readOnly": true,
          "type": "integer",
          "description": "Output only. Number of frames that are still being processed.",
          "format": "int32"
        },
        "displayName": {
          "description": "User-friendly display name.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the source was last updated.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "enumDescriptions": [
            "Unspecified.",
            "The source is active and ready to be used.",
            "In the process of being deleted.",
            "Source is in an invalid state. Asset frames reported to it will be ignored."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETING",
            "INVALID"
          ],
          "description": "Output only. The state of the source.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Free-text description."
        },
        "type": {
          "description": "Data source type.",
          "enumDescriptions": [
            "Unspecified",
            "Manually uploaded file (e.g. CSV)",
            "Guest-level info",
            "Inventory-level scan",
            "Third-party owned sources."
          ],
          "type": "string",
          "enum": [
            "SOURCE_TYPE_UNKNOWN",
            "SOURCE_TYPE_UPLOAD",
            "SOURCE_TYPE_GUEST_OS_SCAN",
            "SOURCE_TYPE_INVENTORY_SCAN",
            "SOURCE_TYPE_CUSTOM"
          ]
        }
      },
      "description": "Source represents an object from which asset information is streamed to Migration Center.",
      "type": "object",
      "id": "Source"
    },
    "RuntimeNetworkInfo": {
      "description": "Runtime networking information.",
      "type": "object",
      "id": "RuntimeNetworkInfo",
      "properties": {
        "connections": {
          "$ref": "NetworkConnectionList",
          "description": "Network connections."
        },
        "scanTime": {
          "type": "string",
          "description": "Time of the last network scan.",
          "format": "google-datetime"
        }
      }
    },
    "MachineDetails": {
      "id": "MachineDetails",
      "description": "Details of a machine.",
      "properties": {
        "coreCount": {
          "description": "Number of CPU cores in the machine. Must be non-negative.",
          "type": "integer",
          "format": "int32"
        },
        "memoryMb": {
          "type": "integer",
          "description": "The amount of memory in the machine. Must be non-negative.",
          "format": "int32"
        },
        "architecture": {
          "description": "Architecture details (vendor, CPU architecture).",
          "$ref": "MachineArchitectureDetails"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Machine creation time."
        },
        "disks": {
          "$ref": "MachineDiskDetails",
          "description": "Disk details."
        },
        "machineName": {
          "description": "Machine name.",
          "type": "string"
        },
        "network": {
          "description": "Network details.",
          "$ref": "MachineNetworkDetails"
        },
        "powerState": {
          "enum": [
            "POWER_STATE_UNSPECIFIED",
            "PENDING",
            "ACTIVE",
            "SUSPENDING",
            "SUSPENDED",
            "DELETING",
            "DELETED"
          ],
          "description": "Power state of the machine.",
          "enumDescriptions": [
            "Power state is unknown.",
            "The machine is preparing to enter the ACTIVE state. An instance may enter the PENDING state when it launches for the first time, or when it is started after being in the SUSPENDED state.",
            "The machine is active.",
            "The machine is being turned off.",
            "The machine is off.",
            "The machine is being deleted from the hosting platform.",
            "The machine is deleted from the hosting platform."
          ],
          "type": "string"
        },
        "platform": {
          "$ref": "PlatformDetails",
          "description": "Platform specific information."
        },
        "uuid": {
          "type": "string",
          "description": "Machine unique identifier."
        },
        "guestOs": {
          "description": "Guest OS information.",
          "$ref": "GuestOsDetails"
        }
      },
      "type": "object"
    },
    "CpuUsageSample": {
      "properties": {
        "utilizedPercentage": {
          "format": "float",
          "type": "number",
          "description": "Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage."
        }
      },
      "description": "CPU usage sample.",
      "type": "object",
      "id": "CpuUsageSample"
    },
    "DailyResourceUsageAggregation": {
      "id": "DailyResourceUsageAggregation",
      "type": "object",
      "properties": {
        "date": {
          "$ref": "Date",
          "description": "Aggregation date. Day boundaries are at midnight UTC."
        },
        "disk": {
          "$ref": "DailyResourceUsageAggregationDisk",
          "description": "Disk usage."
        },
        "cpu": {
          "$ref": "DailyResourceUsageAggregationCPU",
          "description": "CPU usage."
        },
        "network": {
          "description": "Network usage.",
          "$ref": "DailyResourceUsageAggregationNetwork"
        },
        "memory": {
          "description": "Memory usage.",
          "$ref": "DailyResourceUsageAggregationMemory"
        }
      },
      "description": "Usage data aggregation for a single day."
    },
    "AggregationResultFrequency": {
      "id": "AggregationResultFrequency",
      "type": "object",
      "properties": {
        "values": {
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "type": "object"
        }
      },
      "description": "The result of a frequency distribution aggregation."
    },
    "ReportConfigGroupPreferenceSetAssignment": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string",
          "description": "Required. Name of the group."
        },
        "preferenceSet": {
          "description": "Required. Name of the Preference Set.",
          "type": "string"
        }
      },
      "description": "Represents a combination of a group with a preference set.",
      "id": "ReportConfigGroupPreferenceSetAssignment"
    },
    "VirtualMachinePreferences": {
      "type": "object",
      "id": "VirtualMachinePreferences",
      "description": "VirtualMachinePreferences enables you to create sets of assumptions, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets.",
      "properties": {
        "regionPreferences": {
          "description": "Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with.",
          "$ref": "RegionPreferences"
        },
        "targetProduct": {
          "enumDescriptions": [
            "Unspecified (default value).",
            "Prefer to migrate to Google Cloud Compute Engine.",
            "Prefer to migrate to Google Cloud VMware Engine.",
            "Prefer to migrate to Google Cloud Sole Tenant Nodes."
          ],
          "enum": [
            "COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE",
            "COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY"
          ],
          "description": "Target product for assets using this preference set. Specify either target product or business goal, but not both.",
          "type": "string"
        },
        "sizingOptimizationStrategy": {
          "enumDescriptions": [
            "Unspecified (default value).",
            "No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.",
            "Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.",
            "Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs."
          ],
          "enum": [
            "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED",
            "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE",
            "SIZING_OPTIMIZATION_STRATEGY_MODERATE",
            "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE"
          ],
          "type": "string",
          "description": "Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with."
        },
        "commitmentPlan": {
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan.",
            "1 year commitment.",
            "3 years commitment."
          ],
          "type": "string",
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "COMMITMENT_PLAN_NONE",
            "COMMITMENT_PLAN_ONE_YEAR",
            "COMMITMENT_PLAN_THREE_YEARS"
          ]
        },
        "computeEnginePreferences": {
          "description": "Compute Engine preferences concern insights and recommendations for Compute Engine target.",
          "$ref": "ComputeEnginePreferences"
        },
        "vmwareEnginePreferences": {
          "description": "Preferences concerning insights and recommendations for Google Cloud VMware Engine.",
          "$ref": "VmwareEnginePreferences"
        },
        "soleTenancyPreferences": {
          "description": "Preferences concerning Sole Tenant nodes and virtual machines.",
          "$ref": "SoleTenancyPreferences"
        }
      }
    },
    "RunningServiceList": {
      "description": "List of running guest OS services.",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "RunningService"
          },
          "description": "Running service entries."
        }
      },
      "id": "RunningServiceList",
      "type": "object"
    },
    "ListImportDataFilesResponse": {
      "type": "object",
      "description": "Response for listing payload files of an import job.",
      "properties": {
        "importDataFiles": {
          "type": "array",
          "items": {
            "$ref": "ImportDataFile"
          },
          "description": "The list of import data files."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "id": "ListImportDataFilesResponse"
    },
    "ReportSummaryVmwareNode": {
      "type": "object",
      "id": "ReportSummaryVmwareNode",
      "properties": {
        "code": {
          "description": "Code to identify VMware Engine node series, e.g. \"ve1-standard-72\". Based on the displayName of cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.nodeTypes",
          "type": "string"
        }
      },
      "description": "A VMWare Engine Node"
    },
    "AggregationSum": {
      "id": "AggregationSum",
      "properties": {},
      "description": "Sum of field values.",
      "type": "object"
    },
    "ValidationReport": {
      "properties": {
        "jobErrors": {
          "type": "array",
          "description": "List of job level errors.",
          "items": {
            "$ref": "ImportError"
          }
        },
        "fileValidations": {
          "items": {
            "$ref": "FileValidationReport"
          },
          "description": "List of errors found in files.",
          "type": "array"
        }
      },
      "id": "ValidationReport",
      "description": "A resource that aggregates errors across import job files.",
      "type": "object"
    },
    "AzureVmPlatformDetails": {
      "id": "AzureVmPlatformDetails",
      "properties": {
        "machineTypeLabel": {
          "type": "string",
          "description": "Azure platform's machine type label."
        },
        "location": {
          "description": "The location of the machine in the Azure format.",
          "type": "string"
        },
        "provisioningState": {
          "type": "string",
          "description": "Azure platform's provisioning state."
        }
      },
      "type": "object",
      "description": "Azure VM specific details."
    },
    "MachineNetworkDetails": {
      "id": "MachineNetworkDetails",
      "type": "object",
      "description": "Details of network adapters and settings.",
      "properties": {
        "primaryIpAddress": {
          "description": "The primary IP address of the machine.",
          "type": "string"
        },
        "publicIpAddress": {
          "description": "The public IP address of the machine.",
          "type": "string"
        },
        "primaryMacAddress": {
          "type": "string",
          "description": "MAC address of the machine. This property is used to uniqly identify the machine."
        },
        "adapters": {
          "description": "List of network adapters.",
          "$ref": "NetworkAdapterList"
        }
      }
    },
    "AssetFrame": {
      "id": "AssetFrame",
      "description": "Contains data reported from an inventory source on an asset.",
      "properties": {
        "performanceSamples": {
          "type": "array",
          "description": "Asset performance data samples. Samples that are from more than 40 days ago or after tomorrow are ignored.",
          "items": {
            "$ref": "PerformanceSample"
          }
        },
        "machineDetails": {
          "$ref": "MachineDetails",
          "description": "Asset information specific for virtual machines."
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Generic asset attributes.",
          "type": "object"
        },
        "traceToken": {
          "type": "string",
          "description": "Optional. Trace token is optionally provided to assist with debugging and traceability."
        },
        "reportTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the data was reported."
        }
      },
      "type": "object"
    },
    "VmwareEnginePreferences": {
      "id": "VmwareEnginePreferences",
      "description": "The user preferences relating to Google Cloud VMware Engine target platform.",
      "type": "object",
      "properties": {
        "cpuOvercommitRatio": {
          "type": "number",
          "format": "double",
          "description": "CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment."
        },
        "storageDeduplicationCompressionRatio": {
          "description": "The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.",
          "type": "number",
          "format": "double"
        },
        "commitmentPlan": {
          "description": "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "ON_DEMAND",
            "COMMITMENT_1_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_3_YEAR_MONTHLY_PAYMENTS",
            "COMMITMENT_1_YEAR_UPFRONT_PAYMENT",
            "COMMITMENT_3_YEAR_UPFRONT_PAYMENT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified commitment plan.",
            "No commitment plan (on-demand usage).",
            "1 year commitment (monthly payments).",
            "3 year commitment (monthly payments).",
            "1 year commitment (upfront payment).",
            "3 years commitment (upfront payment)."
          ]
        },
        "memoryOvercommitRatio": {
          "format": "double",
          "type": "number",
          "description": "Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0."
        }
      }
    }
  },
  "ownerName": "Google",
  "revision": "20230901",
  "ownerDomain": "google.com"
}

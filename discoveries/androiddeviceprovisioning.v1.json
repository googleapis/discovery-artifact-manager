{
  "resources": {
    "customers": {
      "methods": {
        "list": {
          "response": {
            "$ref": "CustomerListCustomersResponse"
          },
          "description": "Lists the user's customer accounts.",
          "path": "v1/customers",
          "id": "androiddeviceprovisioning.customers.list",
          "flatPath": "v1/customers",
          "parameters": {
            "pageSize": {
              "description": "The maximum number of customers to show in a page of results. A number between 1 and 100 (inclusive).",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "A token specifying which result page to return."
            }
          },
          "parameterOrder": [],
          "httpMethod": "GET"
        }
      },
      "resources": {
        "configurations": {
          "methods": {
            "get": {
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^customers/[^/]+/configurations/[^/]+$",
                  "location": "path",
                  "description": "Required. The configuration to get. An API resource name in the format `customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`.",
                  "required": true
                }
              },
              "httpMethod": "GET",
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Configuration"
              },
              "description": "Gets the details of a configuration.",
              "flatPath": "v1/customers/{customersId}/configurations/{configurationsId}",
              "id": "androiddeviceprovisioning.customers.configurations.get"
            },
            "list": {
              "response": {
                "$ref": "CustomerListConfigurationsResponse"
              },
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. The customer that manages the listed configurations. An API resource name in the format `customers/[CUSTOMER_ID]`.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/{+parent}/configurations",
              "description": "Lists a customer's configurations.",
              "id": "androiddeviceprovisioning.customers.configurations.list",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/customers/{customersId}/configurations"
            },
            "delete": {
              "parameters": {
                "name": {
                  "description": "Required. The configuration to delete. An API resource name in the format `customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`. If the configuration is applied to any devices, the API call fails.",
                  "type": "string",
                  "pattern": "^customers/[^/]+/configurations/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "flatPath": "v1/customers/{customersId}/configurations/{configurationsId}",
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "DELETE",
              "id": "androiddeviceprovisioning.customers.configurations.delete",
              "description": "Deletes an unused configuration. The API call fails if the customer has devices with the configuration applied.",
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}"
            },
            "patch": {
              "path": "v1/{+name}",
              "request": {
                "$ref": "Configuration"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Output only. The API resource name in the format `customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`. Assigned by the server.",
                  "pattern": "^customers/[^/]+/configurations/[^/]+$",
                  "location": "path",
                  "type": "string"
                },
                "updateMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "Required. The field mask applied to the target `Configuration` before updating the fields. To learn more about using field masks, read [FieldMask](/protocol-buffers/docs/reference/google.protobuf#fieldmask) in the Protocol Buffers documentation.",
                  "type": "string"
                }
              },
              "httpMethod": "PATCH",
              "flatPath": "v1/customers/{customersId}/configurations/{configurationsId}",
              "parameterOrder": [
                "name"
              ],
              "id": "androiddeviceprovisioning.customers.configurations.patch",
              "response": {
                "$ref": "Configuration"
              },
              "description": "Updates a configuration's field values."
            },
            "create": {
              "httpMethod": "POST",
              "id": "androiddeviceprovisioning.customers.configurations.create",
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/configurations",
              "request": {
                "$ref": "Configuration"
              },
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. The customer that manages the configuration. An API resource name in the format `customers/[CUSTOMER_ID]`."
                }
              },
              "flatPath": "v1/customers/{customersId}/configurations",
              "response": {
                "$ref": "Configuration"
              },
              "description": "Creates a new configuration. Once created, a customer can apply the configuration to devices."
            }
          }
        },
        "dpcs": {
          "methods": {
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "path": "v1/{+parent}/dpcs",
              "parameters": {
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "description": "Required. The customer that can use the DPCs in configurations. An API resource name in the format `customers/[CUSTOMER_ID]`.",
                  "required": true,
                  "location": "path"
                }
              },
              "flatPath": "v1/customers/{customersId}/dpcs",
              "description": "Lists the DPCs (device policy controllers) that support zero-touch enrollment.",
              "response": {
                "$ref": "CustomerListDpcsResponse"
              },
              "id": "androiddeviceprovisioning.customers.dpcs.list"
            }
          }
        },
        "devices": {
          "methods": {
            "removeConfiguration": {
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "v1/customers/{customersId}/devices:removeConfiguration",
              "id": "androiddeviceprovisioning.customers.devices.removeConfiguration",
              "httpMethod": "POST",
              "request": {
                "$ref": "CustomerRemoveConfigurationRequest"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. The customer managing the device in the format `customers/[CUSTOMER_ID]`.",
                  "pattern": "^customers/[^/]+$",
                  "required": true
                }
              },
              "path": "v1/{+parent}/devices:removeConfiguration",
              "parameterOrder": [
                "parent"
              ],
              "description": "Removes a configuration from device."
            },
            "unclaim": {
              "parameters": {
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The customer managing the device. An API resource name in the format `customers/[CUSTOMER_ID]`."
                }
              },
              "request": {
                "$ref": "CustomerUnclaimDeviceRequest"
              },
              "id": "androiddeviceprovisioning.customers.devices.unclaim",
              "response": {
                "$ref": "Empty"
              },
              "path": "v1/{+parent}/devices:unclaim",
              "description": "Unclaims a device from a customer and removes it from zero-touch enrollment. After removing a device, a customer must contact their reseller to register the device into zero-touch enrollment again.",
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/customers/{customersId}/devices:unclaim"
            },
            "applyConfiguration": {
              "request": {
                "$ref": "CustomerApplyConfigurationRequest"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The customer managing the device. An API resource name in the format `customers/[CUSTOMER_ID]`.",
                  "location": "path",
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1/customers/{customersId}/devices:applyConfiguration",
              "id": "androiddeviceprovisioning.customers.devices.applyConfiguration",
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "POST",
              "path": "v1/{+parent}/devices:applyConfiguration",
              "description": "Applies a Configuration to the device to register the device for zero-touch enrollment. After applying a configuration to a device, the device automatically provisions itself on first boot, or next factory reset.",
              "parameterOrder": [
                "parent"
              ]
            },
            "list": {
              "parameters": {
                "pageSize": {
                  "description": "The maximum number of devices to show in a page of results. Must be between 1 and 100 inclusive.",
                  "format": "int64",
                  "location": "query",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A token specifying which result page to return.",
                  "type": "string"
                },
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. The customer managing the devices. An API resource name in the format `customers/[CUSTOMER_ID]`.",
                  "required": true
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "id": "androiddeviceprovisioning.customers.devices.list",
              "path": "v1/{+parent}/devices",
              "response": {
                "$ref": "CustomerListDevicesResponse"
              },
              "flatPath": "v1/customers/{customersId}/devices",
              "description": "Lists a customer's devices."
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Device"
              },
              "httpMethod": "GET",
              "flatPath": "v1/customers/{customersId}/devices/{devicesId}",
              "id": "androiddeviceprovisioning.customers.devices.get",
              "description": "Gets the details of a device.",
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "description": "Required. The device to get. An API resource name in the format `customers/[CUSTOMER_ID]/devices/[DEVICE_ID]`.",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+/devices/[^/]+$"
                }
              }
            }
          }
        }
      }
    },
    "partners": {
      "resources": {
        "devices": {
          "methods": {
            "updateMetadataAsync": {
              "parameterOrder": [
                "partnerId"
              ],
              "parameters": {
                "partnerId": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "description": "Required. The reseller partner ID.",
                  "required": true,
                  "format": "int64"
                }
              },
              "request": {
                "$ref": "UpdateDeviceMetadataInBatchRequest"
              },
              "description": "Updates the reseller metadata attached to a batch of devices. This method updates devices asynchronously and returns an `Operation` that can be used to track progress. Read [Long‑running batch operations](/zero-touch/guides/how-it-works#operations).",
              "httpMethod": "POST",
              "response": {
                "$ref": "Operation"
              },
              "id": "androiddeviceprovisioning.partners.devices.updateMetadataAsync",
              "flatPath": "v1/partners/{partnersId}/devices:updateMetadataAsync",
              "path": "v1/partners/{+partnerId}/devices:updateMetadataAsync"
            },
            "unclaimAsync": {
              "description": "Unclaims a batch of devices for a customer asynchronously. Removes the devices from zero-touch enrollment. To learn more, read [Long‑running batch operations](/zero-touch/guides/how-it-works#operations).",
              "parameters": {
                "partnerId": {
                  "location": "path",
                  "format": "int64",
                  "description": "Required. The reseller partner ID.",
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "id": "androiddeviceprovisioning.partners.devices.unclaimAsync",
              "parameterOrder": [
                "partnerId"
              ],
              "httpMethod": "POST",
              "request": {
                "$ref": "UnclaimDevicesRequest"
              },
              "response": {
                "$ref": "Operation"
              },
              "path": "v1/partners/{+partnerId}/devices:unclaimAsync",
              "flatPath": "v1/partners/{partnersId}/devices:unclaimAsync"
            },
            "claimAsync": {
              "id": "androiddeviceprovisioning.partners.devices.claimAsync",
              "httpMethod": "POST",
              "flatPath": "v1/partners/{partnersId}/devices:claimAsync",
              "request": {
                "$ref": "ClaimDevicesRequest"
              },
              "parameters": {
                "partnerId": {
                  "location": "path",
                  "format": "int64",
                  "type": "string",
                  "required": true,
                  "description": "Required. The ID of the reseller partner.",
                  "pattern": "^[^/]+$"
                }
              },
              "path": "v1/partners/{+partnerId}/devices:claimAsync",
              "parameterOrder": [
                "partnerId"
              ],
              "response": {
                "$ref": "Operation"
              },
              "description": "Claims a batch of devices for a customer asynchronously. Adds the devices to zero-touch enrollment. To learn more, read [Long‑running batch operations](/zero-touch/guides/how-it-works#operations)."
            },
            "metadata": {
              "id": "androiddeviceprovisioning.partners.devices.metadata",
              "description": "Updates reseller metadata associated with the device.",
              "httpMethod": "POST",
              "parameterOrder": [
                "metadataOwnerId",
                "deviceId"
              ],
              "response": {
                "$ref": "DeviceMetadata"
              },
              "flatPath": "v1/partners/{partnersId}/devices/{devicesId}/metadata",
              "path": "v1/partners/{+metadataOwnerId}/devices/{+deviceId}/metadata",
              "parameters": {
                "metadataOwnerId": {
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The owner of the newly set metadata. Set this to the partner ID."
                },
                "deviceId": {
                  "format": "int64",
                  "description": "Required. The ID of the device.",
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "request": {
                "$ref": "UpdateDeviceMetadataRequest"
              }
            },
            "get": {
              "path": "v1/{+name}",
              "response": {
                "$ref": "Device"
              },
              "description": "Gets a device.",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The device API resource name in the format `partners/[PARTNER_ID]/devices/[DEVICE_ID]`.",
                  "pattern": "^partners/[^/]+/devices/[^/]+$",
                  "required": true
                }
              },
              "id": "androiddeviceprovisioning.partners.devices.get",
              "flatPath": "v1/partners/{partnersId}/devices/{devicesId}",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET"
            },
            "findByIdentifier": {
              "id": "androiddeviceprovisioning.partners.devices.findByIdentifier",
              "parameters": {
                "partnerId": {
                  "location": "path",
                  "required": true,
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "description": "Required. The ID of the reseller partner."
                }
              },
              "description": "Finds devices by hardware identifiers, such as IMEI.",
              "parameterOrder": [
                "partnerId"
              ],
              "flatPath": "v1/partners/{partnersId}/devices:findByIdentifier",
              "request": {
                "$ref": "FindDevicesByDeviceIdentifierRequest"
              },
              "path": "v1/partners/{+partnerId}/devices:findByIdentifier",
              "httpMethod": "POST",
              "response": {
                "$ref": "FindDevicesByDeviceIdentifierResponse"
              }
            },
            "findByOwner": {
              "parameters": {
                "partnerId": {
                  "description": "Required. The ID of the reseller partner.",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "format": "int64",
                  "pattern": "^[^/]+$"
                }
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "partnerId"
              ],
              "description": "Finds devices claimed for customers. The results only contain devices registered to the reseller that's identified by the `partnerId` argument. The customer's devices purchased from other resellers don't appear in the results.",
              "flatPath": "v1/partners/{partnersId}/devices:findByOwner",
              "id": "androiddeviceprovisioning.partners.devices.findByOwner",
              "request": {
                "$ref": "FindDevicesByOwnerRequest"
              },
              "response": {
                "$ref": "FindDevicesByOwnerResponse"
              },
              "path": "v1/partners/{+partnerId}/devices:findByOwner"
            },
            "claim": {
              "path": "v1/partners/{+partnerId}/devices:claim",
              "parameters": {
                "partnerId": {
                  "description": "Required. The ID of the reseller partner.",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "format": "int64",
                  "pattern": "^[^/]+$"
                }
              },
              "httpMethod": "POST",
              "flatPath": "v1/partners/{partnersId}/devices:claim",
              "parameterOrder": [
                "partnerId"
              ],
              "response": {
                "$ref": "ClaimDeviceResponse"
              },
              "request": {
                "$ref": "ClaimDeviceRequest"
              },
              "id": "androiddeviceprovisioning.partners.devices.claim",
              "description": "Claims a device for a customer and adds it to zero-touch enrollment. If the device is already claimed by another customer, the call returns an error."
            },
            "unclaim": {
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "v1/partners/{partnersId}/devices:unclaim",
              "id": "androiddeviceprovisioning.partners.devices.unclaim",
              "description": "Unclaims a device from a customer and removes it from zero-touch enrollment.",
              "request": {
                "$ref": "UnclaimDeviceRequest"
              },
              "parameterOrder": [
                "partnerId"
              ],
              "path": "v1/partners/{+partnerId}/devices:unclaim",
              "parameters": {
                "partnerId": {
                  "description": "Required. The ID of the reseller partner.",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "format": "int64",
                  "location": "path",
                  "type": "string"
                }
              },
              "httpMethod": "POST"
            }
          }
        },
        "vendors": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "flatPath": "v1/partners/{partnersId}/vendors",
              "path": "v1/{+parent}/vendors",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^partners/[^/]+$",
                  "description": "Required. The resource name in the format `partners/[PARTNER_ID]`."
                },
                "pageSize": {
                  "description": "The maximum number of results to be returned.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A token identifying a page of results returned by the server.",
                  "type": "string",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "ListVendorsResponse"
              },
              "id": "androiddeviceprovisioning.partners.vendors.list",
              "description": "Lists the vendors of the partner."
            }
          },
          "resources": {
            "customers": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/partners/{partnersId}/vendors/{vendorsId}/customers",
                  "description": "Lists the customers of the vendor.",
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/customers",
                  "response": {
                    "$ref": "ListVendorCustomersResponse"
                  },
                  "id": "androiddeviceprovisioning.partners.vendors.customers.list",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results returned by the server."
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The resource name in the format `partners/[PARTNER_ID]/vendors/[VENDOR_ID]`.",
                      "pattern": "^partners/[^/]+/vendors/[^/]+$",
                      "required": true
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of results to be returned.",
                      "location": "query"
                    }
                  }
                }
              }
            }
          }
        },
        "customers": {
          "methods": {
            "create": {
              "description": "Creates a customer for zero-touch enrollment. After the method returns successfully, admin and owner roles can manage devices and EMM configs by calling API methods or using their zero-touch enrollment portal. The customer receives an email that welcomes them to zero-touch enrollment and explains how to sign into the portal.",
              "flatPath": "v1/partners/{partnersId}/customers",
              "request": {
                "$ref": "CreateCustomerRequest"
              },
              "response": {
                "$ref": "Company"
              },
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/customers",
              "parameters": {
                "parent": {
                  "description": "Required. The parent resource ID in the format `partners/[PARTNER_ID]` that identifies the reseller.",
                  "required": true,
                  "pattern": "^partners/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              },
              "id": "androiddeviceprovisioning.partners.customers.create",
              "httpMethod": "POST"
            },
            "list": {
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of results to be returned. If not specified or 0, all the records are returned.",
                  "location": "query",
                  "format": "int32"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A token identifying a page of results returned by the server.",
                  "type": "string"
                },
                "partnerId": {
                  "format": "int64",
                  "location": "path",
                  "description": "Required. The ID of the reseller partner.",
                  "type": "string",
                  "required": true,
                  "pattern": "^[^/]+$"
                }
              },
              "httpMethod": "GET",
              "description": "Lists the customers that are enrolled to the reseller identified by the `partnerId` argument. This list includes customers that the reseller created and customers that enrolled themselves using the portal.",
              "response": {
                "$ref": "ListCustomersResponse"
              },
              "parameterOrder": [
                "partnerId"
              ],
              "flatPath": "v1/partners/{partnersId}/customers",
              "path": "v1/partners/{+partnerId}/customers",
              "id": "androiddeviceprovisioning.partners.customers.list"
            }
          }
        }
      }
    },
    "operations": {
      "methods": {
        "get": {
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "name": {
              "pattern": "^operations/.*$",
              "location": "path",
              "description": "The name of the operation resource.",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1/operations/{operationsId}",
          "id": "androiddeviceprovisioning.operations.get",
          "path": "v1/{+name}",
          "httpMethod": "GET",
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
        }
      }
    }
  },
  "discoveryVersion": "v1",
  "baseUrl": "https://androiddeviceprovisioning.googleapis.com/",
  "documentationLink": "https://developers.google.com/zero-touch/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "schemas": {
    "CustomerUnclaimDeviceRequest": {
      "id": "CustomerUnclaimDeviceRequest",
      "type": "object",
      "description": "Request message for customer to unclaim a device.",
      "properties": {
        "device": {
          "$ref": "DeviceReference",
          "description": "Required. The device to unclaim."
        }
      }
    },
    "DeviceMetadata": {
      "id": "DeviceMetadata",
      "type": "object",
      "description": "Metadata entries that can be attached to a `Device`. To learn more, read [Device metadata](https://developers.google.com/zero-touch/guides/metadata).",
      "properties": {
        "entries": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata entries recorded as key-value pairs.",
          "type": "object"
        }
      }
    },
    "DeviceIdentifier": {
      "type": "object",
      "description": "Encapsulates hardware and product IDs to identify a manufactured device. To understand requirements on identifier sets, read [Identifiers](https://developers.google.com/zero-touch/guides/identifiers).",
      "id": "DeviceIdentifier",
      "properties": {
        "serialNumber": {
          "description": "The manufacturer's serial number for the device. This value might not be unique across different device models.",
          "type": "string"
        },
        "manufacturer": {
          "description": "The device manufacturer’s name. Matches the device's built-in value returned from `android.os.Build.MANUFACTURER`. Allowed values are listed in [manufacturers](/zero-touch/resources/manufacturer-names#manufacturers-names).",
          "type": "string"
        },
        "meid": {
          "description": "The device’s MEID number.",
          "type": "string"
        },
        "imei": {
          "type": "string",
          "description": "The device’s IMEI number. Validated on input."
        },
        "model": {
          "description": "The device model's name. Matches the device's built-in value returned from `android.os.Build.MODEL`. Allowed values are listed in [models](/zero-touch/resources/manufacturer-names#model-names).",
          "type": "string"
        }
      }
    },
    "ClaimDeviceResponse": {
      "properties": {
        "deviceId": {
          "format": "int64",
          "description": "The device ID of the claimed device.",
          "type": "string"
        },
        "deviceName": {
          "description": "The resource name of the device in the format `partners/[PARTNER_ID]/devices/[DEVICE_ID]`.",
          "type": "string"
        }
      },
      "description": "Response message containing device id of the claim.",
      "id": "ClaimDeviceResponse",
      "type": "object"
    },
    "CustomerListDpcsResponse": {
      "properties": {
        "dpcs": {
          "type": "array",
          "description": "The list of DPCs available to the customer that support zero-touch enrollment.",
          "items": {
            "$ref": "Dpc"
          }
        }
      },
      "id": "CustomerListDpcsResponse",
      "description": "Response message of customer's listing DPCs.",
      "type": "object"
    },
    "UpdateMetadataArguments": {
      "properties": {
        "deviceMetadata": {
          "description": "Required. The metadata to update.",
          "$ref": "DeviceMetadata"
        },
        "deviceId": {
          "type": "string",
          "format": "int64",
          "description": "Required. Device ID of the device."
        },
        "deviceIdentifier": {
          "description": "Required. Device identifier.",
          "$ref": "DeviceIdentifier"
        }
      },
      "description": "Identifies metadata updates to one device.",
      "id": "UpdateMetadataArguments",
      "type": "object"
    },
    "ListCustomersResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Omitted if no further results are available.",
          "type": "string"
        },
        "totalSize": {
          "description": "The total count of items in the list irrespective of pagination.",
          "format": "int32",
          "type": "integer"
        },
        "customers": {
          "description": "List of customers related to this reseller partner.",
          "type": "array",
          "items": {
            "$ref": "Company"
          }
        }
      },
      "id": "ListCustomersResponse",
      "type": "object",
      "description": "Response message of all customers related to this partner."
    },
    "OperationPerDevice": {
      "properties": {
        "updateMetadata": {
          "description": "A copy of the original metadata-update request received by the server.",
          "$ref": "UpdateMetadataArguments"
        },
        "result": {
          "$ref": "PerDeviceStatusInBatch",
          "description": "The processing result for each device."
        },
        "unclaim": {
          "$ref": "PartnerUnclaim",
          "description": "A copy of the original device-unclaim request received by the server."
        },
        "claim": {
          "$ref": "PartnerClaim",
          "description": "A copy of the original device-claim request received by the server."
        }
      },
      "id": "OperationPerDevice",
      "description": "A task for each device in the operation. Corresponds to each device change in the request.",
      "type": "object"
    },
    "DevicesLongRunningOperationMetadata": {
      "description": "Tracks the status of a long-running operation to asynchronously update a batch of reseller metadata attached to devices. To learn more, read [Long‑running batch operations](/zero-touch/guides/how-it-works#operations).",
      "id": "DevicesLongRunningOperationMetadata",
      "properties": {
        "progress": {
          "format": "int32",
          "description": "The processing progress of the operation. Measured as a number from 0 to 100. A value of 10O doesnt always mean the operation completed—check for the inclusion of a `done` field.",
          "type": "integer"
        },
        "processingStatus": {
          "description": "The processing status of the operation.",
          "type": "string",
          "enum": [
            "BATCH_PROCESS_STATUS_UNSPECIFIED",
            "BATCH_PROCESS_PENDING",
            "BATCH_PROCESS_IN_PROGRESS",
            "BATCH_PROCESS_PROCESSED"
          ],
          "enumDescriptions": [
            "Invalid code. Shouldn't be used.",
            "Pending.",
            "In progress.",
            "Processed. This doesn't mean all items were processed successfully, you should check the `response` field for the result of every item."
          ]
        },
        "devicesCount": {
          "description": "The number of metadata updates in the operation. This might be different from the number of updates in the request if the API can't parse some of the updates.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "PerDeviceStatusInBatch": {
      "id": "PerDeviceStatusInBatch",
      "description": "Captures the processing status for each device in the operation.",
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "If processing succeeds, the device ID of the device.",
          "type": "string",
          "format": "int64"
        },
        "errorIdentifier": {
          "type": "string",
          "description": "If processing fails, the error type."
        },
        "status": {
          "enum": [
            "SINGLE_DEVICE_STATUS_UNSPECIFIED",
            "SINGLE_DEVICE_STATUS_UNKNOWN_ERROR",
            "SINGLE_DEVICE_STATUS_OTHER_ERROR",
            "SINGLE_DEVICE_STATUS_SUCCESS",
            "SINGLE_DEVICE_STATUS_PERMISSION_DENIED",
            "SINGLE_DEVICE_STATUS_INVALID_DEVICE_IDENTIFIER",
            "SINGLE_DEVICE_STATUS_INVALID_SECTION_TYPE",
            "SINGLE_DEVICE_STATUS_SECTION_NOT_YOURS"
          ],
          "description": "The result status of the device after processing.",
          "enumDescriptions": [
            "Invalid code. Shouldn't be used.",
            "Unknown error. We don't expect this error to occur here.",
            "Other error. We know/expect this error, but there's no defined error code for the error.",
            "Success.",
            "Permission denied.",
            "Invalid device identifier.",
            "Invalid section type.",
            "This section is claimed by another company."
          ],
          "type": "string"
        },
        "errorMessage": {
          "description": "If processing fails, a developer message explaining what went wrong.",
          "type": "string"
        }
      }
    },
    "FindDevicesByDeviceIdentifierRequest": {
      "type": "object",
      "properties": {
        "pageToken": {
          "type": "string",
          "description": "A token specifying which result page to return."
        },
        "limit": {
          "description": "Required. The maximum number of devices to show in a page of results. Must be between 1 and 100 inclusive.",
          "format": "int64",
          "type": "string"
        },
        "deviceIdentifier": {
          "$ref": "DeviceIdentifier",
          "description": "Required. Required. The device identifier to search for."
        }
      },
      "description": "Request to find devices.",
      "id": "FindDevicesByDeviceIdentifierRequest"
    },
    "UpdateDeviceMetadataInBatchRequest": {
      "type": "object",
      "description": "Request to update device metadata in batch.",
      "id": "UpdateDeviceMetadataInBatchRequest",
      "properties": {
        "updates": {
          "type": "array",
          "items": {
            "$ref": "UpdateMetadataArguments"
          },
          "description": "Required. The list of metadata updates."
        }
      }
    },
    "CustomerRemoveConfigurationRequest": {
      "id": "CustomerRemoveConfigurationRequest",
      "properties": {
        "device": {
          "$ref": "DeviceReference",
          "description": "Required. The device to remove the configuration from."
        }
      },
      "description": "Request message for customer to remove the configuration from device.",
      "type": "object"
    },
    "ListVendorCustomersResponse": {
      "id": "ListVendorCustomersResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Omitted if no further results are available.",
          "type": "string"
        },
        "customers": {
          "type": "array",
          "description": "List of customers of the vendor.",
          "items": {
            "$ref": "Company"
          }
        },
        "totalSize": {
          "type": "integer",
          "description": "The total count of items in the list irrespective of pagination.",
          "format": "int32"
        }
      },
      "description": "Response message to list customers of the vendor.",
      "type": "object"
    },
    "UnclaimDeviceRequest": {
      "id": "UnclaimDeviceRequest",
      "properties": {
        "sectionType": {
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_SIM_LOCK",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "enumDescriptions": [
            "Unspecified section type.",
            "SIM-lock section type.",
            "Zero-touch enrollment section type."
          ],
          "type": "string",
          "description": "Required. The section type of the device's provisioning record."
        },
        "vacationModeDays": {
          "type": "integer",
          "format": "int32",
          "description": "The duration of the vacation unlock starting from when the request is processed. (1 day is treated as 24 hours)"
        },
        "vacationModeExpireTime": {
          "format": "google-datetime",
          "description": "The expiration time of the vacation unlock.",
          "type": "string"
        },
        "deviceIdentifier": {
          "description": "Required. The device identifier you used when you claimed this device.",
          "$ref": "DeviceIdentifier"
        },
        "deviceId": {
          "description": "Required. The device ID returned by `ClaimDevice`.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "Request message to unclaim a device."
    },
    "CustomerListDevicesResponse": {
      "properties": {
        "devices": {
          "type": "array",
          "items": {
            "$ref": "Device"
          },
          "description": "The customer's devices."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token used to access the next page of results. Omitted if no further results are available."
        }
      },
      "type": "object",
      "description": "Response message of customer's liting devices.",
      "id": "CustomerListDevicesResponse"
    },
    "ListVendorsResponse": {
      "description": "Response message to list vendors of the partner.",
      "properties": {
        "totalSize": {
          "format": "int32",
          "description": "The total count of items in the list irrespective of pagination.",
          "type": "integer"
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Omitted if no further results are available.",
          "type": "string"
        },
        "vendors": {
          "items": {
            "$ref": "Company"
          },
          "description": "List of vendors of the reseller partner. Fields `name`, `companyId` and `companyName` are populated to the Company object.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "ListVendorsResponse"
    },
    "CustomerListConfigurationsResponse": {
      "id": "CustomerListConfigurationsResponse",
      "type": "object",
      "description": "Response message of customer's listing configuration.",
      "properties": {
        "configurations": {
          "type": "array",
          "items": {
            "$ref": "Configuration"
          },
          "description": "The configurations."
        }
      }
    },
    "ClaimDevicesRequest": {
      "properties": {
        "claims": {
          "type": "array",
          "items": {
            "$ref": "PartnerClaim"
          },
          "description": "Required. A list of device claims."
        }
      },
      "id": "ClaimDevicesRequest",
      "description": "Request to claim devices asynchronously in batch. Claiming a device adds the device to zero-touch enrollment and shows the device in the customer's view of the portal.",
      "type": "object"
    },
    "PartnerUnclaim": {
      "properties": {
        "vacationModeExpireTime": {
          "description": "Optional. The expiration time of the vacation unlock.",
          "format": "google-datetime",
          "type": "string"
        },
        "deviceIdentifier": {
          "description": "Required. Device identifier of the device.",
          "$ref": "DeviceIdentifier"
        },
        "deviceId": {
          "description": "Required. Device ID of the device.",
          "format": "int64",
          "type": "string"
        },
        "sectionType": {
          "type": "string",
          "description": "Required. The section type of the device's provisioning record.",
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_SIM_LOCK",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "enumDescriptions": [
            "Unspecified section type.",
            "SIM-lock section type.",
            "Zero-touch enrollment section type."
          ]
        },
        "vacationModeDays": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. The duration of the vacation unlock starting from when the request is processed. (1 day is treated as 24 hours)"
        }
      },
      "id": "PartnerUnclaim",
      "description": "Identifies one unclaim request.",
      "type": "object"
    },
    "Device": {
      "id": "Device",
      "properties": {
        "configuration": {
          "description": "Not available to resellers.",
          "type": "string"
        },
        "claims": {
          "type": "array",
          "description": "Output only. The provisioning claims for a device. Devices claimed for zero-touch enrollment have a claim with the type `SECTION_TYPE_ZERO_TOUCH`. Call `partners.devices.unclaim` or `partners.devices.unclaimAsync` to remove the device from zero-touch enrollment.",
          "readOnly": true,
          "items": {
            "$ref": "DeviceClaim"
          }
        },
        "name": {
          "description": "Output only. The API resource name in the format `partners/[PARTNER_ID]/devices/[DEVICE_ID]`. Assigned by the server.",
          "type": "string",
          "readOnly": true
        },
        "deviceIdentifier": {
          "description": "The hardware IDs that identify a manufactured device. To learn more, read [Identifiers](https://developers.google.com/zero-touch/guides/identifiers).",
          "$ref": "DeviceIdentifier"
        },
        "deviceMetadata": {
          "description": "The metadata attached to the device. Structured as key-value pairs. To learn more, read [Device metadata](https://developers.google.com/zero-touch/guides/metadata).",
          "$ref": "DeviceMetadata"
        },
        "deviceId": {
          "description": "Output only. The ID of the device. Assigned by the server.",
          "format": "int64",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "description": "An Android device registered for zero-touch enrollment."
    },
    "Company": {
      "description": "A reseller, vendor, or customer in the zero-touch reseller and customer APIs.",
      "id": "Company",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The API resource name of the company. The resource name is one of the following formats: * `partners/[PARTNER_ID]/customers/[CUSTOMER_ID]` * `partners/[PARTNER_ID]/vendors/[VENDOR_ID]` * `partners/[PARTNER_ID]/vendors/[VENDOR_ID]/customers/[CUSTOMER_ID]` Assigned by the server."
        },
        "ownerEmails": {
          "items": {
            "type": "string"
          },
          "description": "Required. Input only. Email address of customer's users in the owner role. At least one `owner_email` is required. Owners share the same access as admins but can also add, delete, and edit your organization's portal users.",
          "type": "array"
        },
        "languageCode": {
          "description": "Input only. The preferred locale of the customer represented as a BCP47 language code. This field is validated on input and requests containing unsupported language codes will be rejected. Supported language codes: Arabic (ar) Chinese (Hong Kong) (zh-HK) Chinese (Simplified) (zh-CN) Chinese (Traditional) (zh-TW) Czech (cs) Danish (da) Dutch (nl) English (UK) (en-GB) English (US) (en-US) Filipino (fil) Finnish (fi) French (fr) German (de) Hebrew (iw) Hindi (hi) Hungarian (hu) Indonesian (id) Italian (it) Japanese (ja) Korean (ko) Norwegian (Bokmal) (no) Polish (pl) Portuguese (Brazil) (pt-BR) Portuguese (Portugal) (pt-PT) Russian (ru) Spanish (es) Spanish (Latin America) (es-419) Swedish (sv) Thai (th) Turkish (tr) Ukrainian (uk) Vietnamese (vi)",
          "type": "string"
        },
        "companyName": {
          "type": "string",
          "description": "Required. The name of the company. For example _XYZ Corp_. Displayed to the company's employees in the zero-touch enrollment portal."
        },
        "skipWelcomeEmail": {
          "description": "Input only. If set to true, welcome email will not be sent to the customer. It is recommended to skip the welcome email if devices will be claimed with additional DEVICE_PROTECTION service, as the customer will receive separate emails at device claim time. This field is ignored if this is not a Zero-touch customer.",
          "type": "boolean"
        },
        "termsStatus": {
          "type": "string",
          "description": "Output only. Whether any user from the company has accepted the latest Terms of Service (ToS). See TermsStatus.",
          "enumDescriptions": [
            "Default value. This value should never be set if the enum is present.",
            "None of the company's users have accepted the ToS.",
            "One (or more) of the company's users has accepted the ToS.",
            "None of the company's users has accepted the current ToS but at least one user accepted a previous ToS."
          ],
          "enum": [
            "TERMS_STATUS_UNSPECIFIED",
            "TERMS_STATUS_NOT_ACCEPTED",
            "TERMS_STATUS_ACCEPTED",
            "TERMS_STATUS_STALE"
          ],
          "readOnly": true
        },
        "adminEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. Email address of customer's users in the admin role. Each email address must be associated with a Google Account."
        },
        "companyId": {
          "readOnly": true,
          "description": "Output only. The ID of the company. Assigned by the server.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "DeviceReference": {
      "type": "object",
      "description": "A `DeviceReference` is an API abstraction that lets you supply a _device_ argument to a method using one of the following identifier types: * A numeric API resource ID. * Real-world hardware IDs, such as IMEI number, belonging to the manufactured device. Methods that operate on devices take a `DeviceReference` as a parameter type because it's more flexible for the caller. To learn more about device identifiers, read [Identifiers](https://developers.google.com/zero-touch/guides/identifiers).",
      "id": "DeviceReference",
      "properties": {
        "deviceIdentifier": {
          "description": "The hardware IDs of the device.",
          "$ref": "DeviceIdentifier"
        },
        "deviceId": {
          "description": "The ID of the device.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "FindDevicesByOwnerRequest": {
      "properties": {
        "sectionType": {
          "type": "string",
          "description": "Required. The section type of the device's provisioning record.",
          "enumDescriptions": [
            "Unspecified section type.",
            "SIM-lock section type.",
            "Zero-touch enrollment section type."
          ],
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_SIM_LOCK",
            "SECTION_TYPE_ZERO_TOUCH"
          ]
        },
        "limit": {
          "type": "string",
          "description": "Required. The maximum number of devices to show in a page of results. Must be between 1 and 100 inclusive.",
          "format": "int64"
        },
        "pageToken": {
          "description": "A token specifying which result page to return.",
          "type": "string"
        },
        "customerId": {
          "type": "array",
          "description": "Required. The list of customer IDs to search for.",
          "items": {
            "format": "int64",
            "type": "string"
          }
        }
      },
      "id": "FindDevicesByOwnerRequest",
      "type": "object",
      "description": "Request to find devices by customers."
    },
    "DeviceClaim": {
      "properties": {
        "sectionType": {
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified section type.",
            "SIM-lock section type.",
            "Zero-touch enrollment section type."
          ],
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_SIM_LOCK",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "description": "Output only. The type of claim made on the device."
        },
        "vacationModeStartTime": {
          "type": "string",
          "description": "The timestamp when the device was put into ‘vacation mode’. This value is present iff the device is in 'vacation mode'.",
          "format": "google-datetime"
        },
        "additionalService": {
          "enumDescriptions": [
            "No additional service.",
            "Device protection service, also known as Android Enterprise Essentials. To claim a device with the device protection service you must enroll with the partnership team."
          ],
          "enum": [
            "ADDITIONAL_SERVICE_UNSPECIFIED",
            "DEVICE_PROTECTION"
          ],
          "type": "string",
          "description": "The Additional service registered for the device."
        },
        "ownerCompanyId": {
          "format": "int64",
          "description": "The ID of the Customer that purchased the device.",
          "type": "string"
        },
        "vacationModeExpireTime": {
          "format": "google-datetime",
          "description": "The timestamp when the device will exit ‘vacation mode’. This value is present iff the device is in 'vacation mode'.",
          "type": "string"
        },
        "resellerId": {
          "format": "int64",
          "description": "The ID of the reseller that claimed the device.",
          "type": "string"
        }
      },
      "description": "A record of a device claimed by a reseller for a customer. Devices claimed for zero-touch enrollment have a claim with the type `SECTION_TYPE_ZERO_TOUCH`. To learn more, read [Claim devices for customers](/zero-touch/guides/how-it-works#claim).",
      "type": "object",
      "id": "DeviceClaim"
    },
    "Operation": {
      "properties": {
        "metadata": {
          "type": "object",
          "description": "This field will contain a `DevicesLongRunningOperationMetadata` object if the operation is created by `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "This field will contain a `DevicesLongRunningOperationResponse` object if the operation is created by `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "$ref": "Status",
          "description": "This field will always be not set if the operation is created by `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`. In this case, error information for each device is set in `response.perDeviceStatus.result.status`."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation",
      "type": "object"
    },
    "UnclaimDevicesRequest": {
      "description": "Request to unclaim devices asynchronously in batch.",
      "type": "object",
      "properties": {
        "unclaims": {
          "description": "Required. The list of devices to unclaim.",
          "type": "array",
          "items": {
            "$ref": "PartnerUnclaim"
          }
        }
      },
      "id": "UnclaimDevicesRequest"
    },
    "Dpc": {
      "id": "Dpc",
      "description": "An EMM's DPC ([device policy controller](http://developer.android.com/work/dpc/build-dpc.html)). Zero-touch enrollment installs a DPC (listed in the `Configuration`) on a device to maintain the customer's mobile policies. All the DPCs listed by the API support zero-touch enrollment and are available in Google Play.",
      "properties": {
        "name": {
          "description": "Output only. The API resource name in the format `customers/[CUSTOMER_ID]/dpcs/[DPC_ID]`. Assigned by the server. To maintain a reference to a DPC across customer accounts, persist and match the last path component (`DPC_ID`).",
          "type": "string",
          "readOnly": true
        },
        "dpcName": {
          "description": "Output only. The title of the DPC app in Google Play. For example, _Google Apps Device Policy_. Useful in an application's user interface.",
          "type": "string",
          "readOnly": true
        },
        "packageName": {
          "description": "Output only. The DPC's Android application ID that looks like a Java package name. Zero-touch enrollment installs the DPC app onto a device using this identifier.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "CustomerApplyConfigurationRequest": {
      "id": "CustomerApplyConfigurationRequest",
      "description": "Request message for customer to assign a configuration to device.",
      "properties": {
        "device": {
          "description": "Required. The device the configuration is applied to.",
          "$ref": "DeviceReference"
        },
        "configuration": {
          "description": "Required. The configuration applied to the device in the format `customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FindDevicesByDeviceIdentifierResponse": {
      "id": "FindDevicesByDeviceIdentifierResponse",
      "type": "object",
      "description": "Response containing found devices.",
      "properties": {
        "devices": {
          "type": "array",
          "description": "Found devices.",
          "items": {
            "$ref": "Device"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token used to access the next page of results. Omitted if no further results are available."
        },
        "totalSize": {
          "description": "The total count of items in the list irrespective of pagination.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PartnerClaim": {
      "description": "Identifies one claim request.",
      "type": "object",
      "properties": {
        "sectionType": {
          "enumDescriptions": [
            "Unspecified section type.",
            "SIM-lock section type.",
            "Zero-touch enrollment section type."
          ],
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_SIM_LOCK",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "description": "Required. The section type of the device's provisioning record.",
          "type": "string"
        },
        "customerId": {
          "type": "string",
          "format": "int64",
          "description": "Required. The ID of the customer for whom the device is being claimed."
        },
        "deviceIdentifier": {
          "$ref": "DeviceIdentifier",
          "description": "Required. Required. Device identifier of the device."
        },
        "deviceMetadata": {
          "description": "Required. The metadata to attach to the device at claim.",
          "$ref": "DeviceMetadata"
        }
      },
      "id": "PartnerClaim"
    },
    "DevicesLongRunningOperationResponse": {
      "properties": {
        "perDeviceStatus": {
          "items": {
            "$ref": "OperationPerDevice"
          },
          "type": "array",
          "description": "The processing status for each device in the operation. One `PerDeviceStatus` per device. The list order matches the items in the original request."
        },
        "successCount": {
          "format": "int32",
          "description": "A summary of how many items in the operation the server processed successfully. Updated as the operation progresses.",
          "type": "integer"
        }
      },
      "description": "Tracks the status of a long-running operation to claim, unclaim, or attach metadata to devices. To learn more, read [Long‑running batch operations](/zero-touch/guides/how-it-works#operations).",
      "type": "object",
      "id": "DevicesLongRunningOperationResponse"
    },
    "ClaimDeviceRequest": {
      "properties": {
        "customerId": {
          "description": "Required. The ID of the customer for whom the device is being claimed.",
          "format": "int64",
          "type": "string"
        },
        "deviceIdentifier": {
          "description": "Required. Required. The device identifier of the device to claim.",
          "$ref": "DeviceIdentifier"
        },
        "sectionType": {
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_SIM_LOCK",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified section type.",
            "SIM-lock section type.",
            "Zero-touch enrollment section type."
          ],
          "description": "Required. The section type of the device's provisioning record."
        },
        "deviceMetadata": {
          "description": "Optional. The metadata to attach to the device.",
          "$ref": "DeviceMetadata"
        }
      },
      "description": "Request message to claim a device on behalf of a customer.",
      "id": "ClaimDeviceRequest",
      "type": "object"
    },
    "Configuration": {
      "type": "object",
      "description": "A configuration collects the provisioning options for Android devices. Each configuration combines the following: * The EMM device policy controller (DPC) installed on the devices. * EMM policies enforced on the devices. * Metadata displayed on the device to help users during setup. Customers can add as many configurations as they need. However, zero-touch enrollment works best when a customer sets a default configuration that's applied to any new devices the organization purchases.",
      "id": "Configuration",
      "properties": {
        "dpcExtras": {
          "type": "string",
          "description": "The JSON-formatted EMM provisioning extras that are passed to the DPC."
        },
        "isDefault": {
          "description": "Required. Whether this is the default configuration that zero-touch enrollment applies to any new devices the organization purchases in the future. Only one customer configuration can be the default. Setting this value to `true`, changes the previous default configuration's `isDefault` value to `false`.",
          "type": "boolean"
        },
        "dpcResourcePath": {
          "description": "Required. The resource name of the selected DPC (device policy controller) in the format `customers/[CUSTOMER_ID]/dpcs/*`. To list the supported DPCs, call `customers.dpcs.list`.",
          "type": "string"
        },
        "configurationName": {
          "type": "string",
          "description": "Required. A short name that describes the configuration's purpose. For example, _Sales team_ or _Temporary employees_. The zero-touch enrollment portal displays this name to IT admins."
        },
        "contactEmail": {
          "description": "Required. The email address that device users can contact to get help. Zero-touch enrollment shows this email address to device users before device provisioning. The value is validated on input.",
          "type": "string"
        },
        "customMessage": {
          "description": "A message, containing one or two sentences, to help device users get help or give them more details about what’s happening to their device. Zero-touch enrollment shows this message before the device is provisioned.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The API resource name in the format `customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`. Assigned by the server."
        },
        "contactPhone": {
          "type": "string",
          "description": "Required. The telephone number that device users can call, using another device, to get help. Zero-touch enrollment shows this number to device users before device provisioning. Accepts numerals, spaces, the plus sign, hyphens, and parentheses."
        },
        "configurationId": {
          "format": "int64",
          "description": "Output only. The ID of the configuration. Assigned by the server.",
          "type": "string",
          "readOnly": true
        },
        "companyName": {
          "description": "Required. The name of the organization. Zero-touch enrollment shows this organization name to device users during device provisioning.",
          "type": "string"
        }
      }
    },
    "CustomerListCustomersResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token used to access the next page of results. Omitted if no further results are available."
        },
        "customers": {
          "items": {
            "$ref": "Company"
          },
          "type": "array",
          "description": "The customer accounts the calling user is a member of."
        }
      },
      "id": "CustomerListCustomersResponse",
      "description": "Response message for listing my customers."
    },
    "UpdateDeviceMetadataRequest": {
      "type": "object",
      "properties": {
        "deviceMetadata": {
          "$ref": "DeviceMetadata",
          "description": "Required. The metadata to attach to the device."
        }
      },
      "id": "UpdateDeviceMetadataRequest",
      "description": "Request to set metadata for a device."
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "type": "object"
    },
    "CreateCustomerRequest": {
      "properties": {
        "customer": {
          "$ref": "Company",
          "description": "Required. The company data to populate the new customer. Must contain a value for `companyName` and at least one `owner_email` that's associated with a Google Account. The values for `companyId` and `name` must be empty."
        }
      },
      "type": "object",
      "description": "Request message to create a customer.",
      "id": "CreateCustomerRequest"
    },
    "FindDevicesByOwnerResponse": {
      "type": "object",
      "properties": {
        "devices": {
          "description": "The customer's devices.",
          "items": {
            "$ref": "Device"
          },
          "type": "array"
        },
        "totalSize": {
          "format": "int32",
          "type": "integer",
          "description": "The total count of items in the list irrespective of pagination."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token used to access the next page of results. Omitted if no further results are available."
        }
      },
      "description": "Response containing found devices.",
      "id": "FindDevicesByOwnerResponse"
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "type": "object"
    }
  },
  "version": "v1",
  "version_module": true,
  "ownerDomain": "google.com",
  "servicePath": "",
  "fullyEncodeReservedExpansion": true,
  "name": "androiddeviceprovisioning",
  "title": "Android Device Provisioning Partner API",
  "parameters": {
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "$.xgafv": {
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "default": "json"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    }
  },
  "canonicalName": "Android Provisioning Partner",
  "batchPath": "batch",
  "description": "Automates Android zero-touch enrollment for device resellers, customers, and EMMs.",
  "ownerName": "Google",
  "mtlsRootUrl": "https://androiddeviceprovisioning.mtls.googleapis.com/",
  "revision": "20210806",
  "id": "androiddeviceprovisioning:v1",
  "kind": "discovery#restDescription",
  "protocol": "rest",
  "rootUrl": "https://androiddeviceprovisioning.googleapis.com/",
  "basePath": ""
}

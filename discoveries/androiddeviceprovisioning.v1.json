{
  "name": "androiddeviceprovisioning",
  "baseUrl": "https://androiddeviceprovisioning.googleapis.com/",
  "basePath": "",
  "resources": {
    "partners": {
      "resources": {
        "vendors": {
          "resources": {
            "customers": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListVendorCustomersResponse"
                  },
                  "flatPath": "v1/partners/{partnersId}/vendors/{vendorsId}/customers",
                  "description": "Lists the customers of the vendor.",
                  "id": "androiddeviceprovisioning.partners.vendors.customers.list",
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of results to be returned.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results returned by the server.",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^partners/[^/]+/vendors/[^/]+$",
                      "description": "Required. The resource name in the format `partners/[PARTNER_ID]/vendors/[VENDOR_ID]`.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/customers"
                }
              }
            }
          },
          "methods": {
            "list": {
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "Required. The resource name in the format `partners/[PARTNER_ID]`.",
                  "required": true,
                  "pattern": "^partners/[^/]+$",
                  "location": "path"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "description": "The maximum number of results to be returned.",
                  "type": "integer"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A token identifying a page of results returned by the server."
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/partners/{partnersId}/vendors",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListVendorsResponse"
              },
              "path": "v1/{+parent}/vendors",
              "id": "androiddeviceprovisioning.partners.vendors.list",
              "description": "Lists the vendors of the partner."
            }
          }
        },
        "customers": {
          "methods": {
            "create": {
              "id": "androiddeviceprovisioning.partners.customers.create",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The parent resource ID in the format `partners/[PARTNER_ID]` that identifies the reseller.",
                  "required": true,
                  "pattern": "^partners/[^/]+$"
                }
              },
              "description": "Creates a customer for zero-touch enrollment. After the method returns successfully, admin and owner roles can manage devices and EMM configs by calling API methods or using their zero-touch enrollment portal. The customer receives an email that welcomes them to zero-touch enrollment and explains how to sign into the portal.",
              "request": {
                "$ref": "CreateCustomerRequest"
              },
              "flatPath": "v1/partners/{partnersId}/customers",
              "response": {
                "$ref": "Company"
              },
              "path": "v1/{+parent}/customers",
              "parameterOrder": [
                "parent"
              ]
            },
            "list": {
              "description": "Lists the customers that are enrolled to the reseller identified by the `partnerId` argument. This list includes customers that the reseller created and customers that enrolled themselves using the portal.",
              "path": "v1/partners/{+partnerId}/customers",
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of results to be returned. If not specified or 0, all the records are returned.",
                  "format": "int32",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A token identifying a page of results returned by the server."
                },
                "partnerId": {
                  "description": "Required. The ID of the reseller partner.",
                  "format": "int64",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^[^/]+$"
                }
              },
              "id": "androiddeviceprovisioning.partners.customers.list",
              "flatPath": "v1/partners/{partnersId}/customers",
              "response": {
                "$ref": "ListCustomersResponse"
              },
              "parameterOrder": [
                "partnerId"
              ],
              "httpMethod": "GET"
            }
          }
        },
        "devices": {
          "methods": {
            "metadata": {
              "parameterOrder": [
                "metadataOwnerId",
                "deviceId"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "DeviceMetadata"
              },
              "id": "androiddeviceprovisioning.partners.devices.metadata",
              "description": "Updates reseller metadata associated with the device. Android devices only.",
              "path": "v1/partners/{+metadataOwnerId}/devices/{+deviceId}/metadata",
              "request": {
                "$ref": "UpdateDeviceMetadataRequest"
              },
              "parameters": {
                "deviceId": {
                  "location": "path",
                  "required": true,
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "description": "Required. The ID of the device.",
                  "type": "string"
                },
                "metadataOwnerId": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The owner of the newly set metadata. Set this to the partner ID.",
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "format": "int64"
                }
              },
              "flatPath": "v1/partners/{partnersId}/devices/{devicesId}/metadata"
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Device"
              },
              "httpMethod": "GET",
              "id": "androiddeviceprovisioning.partners.devices.get",
              "path": "v1/{+name}",
              "description": "Gets a device.",
              "parameters": {
                "name": {
                  "pattern": "^partners/[^/]+/devices/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The device API resource name in the format `partners/[PARTNER_ID]/devices/[DEVICE_ID]`."
                }
              },
              "flatPath": "v1/partners/{partnersId}/devices/{devicesId}"
            },
            "claimAsync": {
              "request": {
                "$ref": "ClaimDevicesRequest"
              },
              "description": "Claims a batch of devices for a customer asynchronously. Adds the devices to zero-touch enrollment. To learn more, read [Longâ€‘running batch operations](/zero-touch/guides/how-it-works#operations).",
              "flatPath": "v1/partners/{partnersId}/devices:claimAsync",
              "path": "v1/partners/{+partnerId}/devices:claimAsync",
              "id": "androiddeviceprovisioning.partners.devices.claimAsync",
              "parameterOrder": [
                "partnerId"
              ],
              "parameters": {
                "partnerId": {
                  "format": "int64",
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "description": "Required. The ID of the reseller partner.",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Operation"
              },
              "httpMethod": "POST"
            },
            "findByIdentifier": {
              "httpMethod": "POST",
              "response": {
                "$ref": "FindDevicesByDeviceIdentifierResponse"
              },
              "path": "v1/partners/{+partnerId}/devices:findByIdentifier",
              "description": "Finds devices by hardware identifiers, such as IMEI.",
              "request": {
                "$ref": "FindDevicesByDeviceIdentifierRequest"
              },
              "id": "androiddeviceprovisioning.partners.devices.findByIdentifier",
              "flatPath": "v1/partners/{partnersId}/devices:findByIdentifier",
              "parameterOrder": [
                "partnerId"
              ],
              "parameters": {
                "partnerId": {
                  "type": "string",
                  "required": true,
                  "description": "Required. The ID of the reseller partner.",
                  "location": "path",
                  "format": "int64",
                  "pattern": "^[^/]+$"
                }
              }
            },
            "unclaim": {
              "flatPath": "v1/partners/{partnersId}/devices:unclaim",
              "httpMethod": "POST",
              "id": "androiddeviceprovisioning.partners.devices.unclaim",
              "request": {
                "$ref": "UnclaimDeviceRequest"
              },
              "parameters": {
                "partnerId": {
                  "type": "string",
                  "location": "path",
                  "format": "int64",
                  "required": true,
                  "description": "Required. The ID of the reseller partner.",
                  "pattern": "^[^/]+$"
                }
              },
              "parameterOrder": [
                "partnerId"
              ],
              "response": {
                "$ref": "Empty"
              },
              "path": "v1/partners/{+partnerId}/devices:unclaim",
              "description": "Unclaims a device from a customer and removes it from zero-touch enrollment."
            },
            "unclaimAsync": {
              "parameters": {
                "partnerId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "format": "int64",
                  "description": "Required. The reseller partner ID.",
                  "pattern": "^[^/]+$"
                }
              },
              "httpMethod": "POST",
              "path": "v1/partners/{+partnerId}/devices:unclaimAsync",
              "parameterOrder": [
                "partnerId"
              ],
              "response": {
                "$ref": "Operation"
              },
              "flatPath": "v1/partners/{partnersId}/devices:unclaimAsync",
              "request": {
                "$ref": "UnclaimDevicesRequest"
              },
              "description": "Unclaims a batch of devices for a customer asynchronously. Removes the devices from zero-touch enrollment. To learn more, read [Longâ€‘running batch operations](/zero-touch/guides/how-it-works#operations).",
              "id": "androiddeviceprovisioning.partners.devices.unclaimAsync"
            },
            "claim": {
              "description": "Claims a device for a customer and adds it to zero-touch enrollment. If the device is already claimed by another customer, the call returns an error.",
              "httpMethod": "POST",
              "path": "v1/partners/{+partnerId}/devices:claim",
              "request": {
                "$ref": "ClaimDeviceRequest"
              },
              "flatPath": "v1/partners/{partnersId}/devices:claim",
              "parameterOrder": [
                "partnerId"
              ],
              "response": {
                "$ref": "ClaimDeviceResponse"
              },
              "id": "androiddeviceprovisioning.partners.devices.claim",
              "parameters": {
                "partnerId": {
                  "location": "path",
                  "required": true,
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "description": "Required. The ID of the reseller partner.",
                  "type": "string"
                }
              }
            },
            "findByOwner": {
              "id": "androiddeviceprovisioning.partners.devices.findByOwner",
              "description": "Finds devices claimed for customers. The results only contain devices registered to the reseller that's identified by the `partnerId` argument. The customer's devices purchased from other resellers don't appear in the results.",
              "parameterOrder": [
                "partnerId"
              ],
              "request": {
                "$ref": "FindDevicesByOwnerRequest"
              },
              "httpMethod": "POST",
              "path": "v1/partners/{+partnerId}/devices:findByOwner",
              "flatPath": "v1/partners/{partnersId}/devices:findByOwner",
              "response": {
                "$ref": "FindDevicesByOwnerResponse"
              },
              "parameters": {
                "partnerId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The ID of the reseller partner.",
                  "format": "int64",
                  "pattern": "^[^/]+$"
                }
              }
            },
            "updateMetadataAsync": {
              "httpMethod": "POST",
              "request": {
                "$ref": "UpdateDeviceMetadataInBatchRequest"
              },
              "id": "androiddeviceprovisioning.partners.devices.updateMetadataAsync",
              "parameters": {
                "partnerId": {
                  "required": true,
                  "description": "Required. The reseller partner ID.",
                  "location": "path",
                  "format": "int64",
                  "type": "string",
                  "pattern": "^[^/]+$"
                }
              },
              "path": "v1/partners/{+partnerId}/devices:updateMetadataAsync",
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "partnerId"
              ],
              "flatPath": "v1/partners/{partnersId}/devices:updateMetadataAsync",
              "description": "Updates the reseller metadata attached to a batch of devices. This method updates devices asynchronously and returns an `Operation` that can be used to track progress. Read [Longâ€‘running batch operations](/zero-touch/guides/how-it-works#operations). Android Devices only."
            }
          }
        }
      }
    },
    "operations": {
      "methods": {
        "get": {
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^operations/.*$",
              "type": "string",
              "description": "The name of the operation resource.",
              "required": true
            }
          },
          "flatPath": "v1/operations/{operationsId}",
          "id": "androiddeviceprovisioning.operations.get",
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "path": "v1/{+name}"
        }
      }
    },
    "customers": {
      "resources": {
        "configurations": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "Configuration"
              },
              "description": "Gets the details of a configuration.",
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "id": "androiddeviceprovisioning.customers.configurations.get",
              "flatPath": "v1/customers/{customersId}/configurations/{configurationsId}",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^customers/[^/]+/configurations/[^/]+$",
                  "type": "string",
                  "description": "Required. The configuration to get. An API resource name in the format `customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`.",
                  "required": true
                }
              }
            },
            "patch": {
              "id": "androiddeviceprovisioning.customers.configurations.patch",
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/customers/{customersId}/configurations/{configurationsId}",
              "path": "v1/{+name}",
              "description": "Updates a configuration's field values.",
              "request": {
                "$ref": "Configuration"
              },
              "parameters": {
                "updateMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "type": "string",
                  "description": "Required. The field mask applied to the target `Configuration` before updating the fields. To learn more about using field masks, read [FieldMask](/protocol-buffers/docs/reference/google.protobuf#fieldmask) in the Protocol Buffers documentation."
                },
                "name": {
                  "description": "Output only. The API resource name in the format `customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`. Assigned by the server.",
                  "location": "path",
                  "required": true,
                  "pattern": "^customers/[^/]+/configurations/[^/]+$",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Configuration"
              }
            },
            "list": {
              "description": "Lists a customer's configurations.",
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "Required. The customer that manages the listed configurations. An API resource name in the format `customers/[CUSTOMER_ID]`.",
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "path": "v1/{+parent}/configurations",
              "response": {
                "$ref": "CustomerListConfigurationsResponse"
              },
              "id": "androiddeviceprovisioning.customers.configurations.list",
              "flatPath": "v1/customers/{customersId}/configurations",
              "parameterOrder": [
                "parent"
              ]
            },
            "create": {
              "parameters": {
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The customer that manages the configuration. An API resource name in the format `customers/[CUSTOMER_ID]`. This field has custom validation in CreateConfigurationRequestValidator",
                  "type": "string"
                }
              },
              "httpMethod": "POST",
              "request": {
                "$ref": "Configuration"
              },
              "flatPath": "v1/customers/{customersId}/configurations",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "Configuration"
              },
              "description": "Creates a new configuration. Once created, a customer can apply the configuration to devices.",
              "id": "androiddeviceprovisioning.customers.configurations.create",
              "path": "v1/{+parent}/configurations"
            },
            "delete": {
              "description": "Deletes an unused configuration. The API call fails if the customer has devices with the configuration applied.",
              "path": "v1/{+name}",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^customers/[^/]+/configurations/[^/]+$",
                  "description": "Required. The configuration to delete. An API resource name in the format `customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`. If the configuration is applied to any devices, the API call fails."
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "v1/customers/{customersId}/configurations/{configurationsId}",
              "id": "androiddeviceprovisioning.customers.configurations.delete"
            }
          }
        },
        "devices": {
          "methods": {
            "unclaim": {
              "response": {
                "$ref": "Empty"
              },
              "path": "v1/{+parent}/devices:unclaim",
              "description": "Unclaims a device from a customer and removes it from zero-touch enrollment. After removing a device, a customer must contact their reseller to register the device into zero-touch enrollment again.",
              "id": "androiddeviceprovisioning.customers.devices.unclaim",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The customer managing the device. An API resource name in the format `customers/[CUSTOMER_ID]`."
                }
              },
              "request": {
                "$ref": "CustomerUnclaimDeviceRequest"
              },
              "flatPath": "v1/customers/{customersId}/devices:unclaim",
              "parameterOrder": [
                "parent"
              ]
            },
            "applyConfiguration": {
              "id": "androiddeviceprovisioning.customers.devices.applyConfiguration",
              "httpMethod": "POST",
              "description": "Applies a Configuration to the device to register the device for zero-touch enrollment. After applying a configuration to a device, the device automatically provisions itself on first boot, or next factory reset.",
              "request": {
                "$ref": "CustomerApplyConfigurationRequest"
              },
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/devices:applyConfiguration",
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. The customer managing the device. An API resource name in the format `customers/[CUSTOMER_ID]`."
                }
              },
              "flatPath": "v1/customers/{customersId}/devices:applyConfiguration"
            },
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/devices",
              "response": {
                "$ref": "CustomerListDevicesResponse"
              },
              "parameters": {
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The customer managing the devices. An API resource name in the format `customers/[CUSTOMER_ID]`.",
                  "required": true
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A token specifying which result page to return."
                },
                "pageSize": {
                  "type": "string",
                  "description": "The maximum number of devices to show in a page of results. Must be between 1 and 100 inclusive.",
                  "format": "int64",
                  "location": "query"
                }
              },
              "id": "androiddeviceprovisioning.customers.devices.list",
              "httpMethod": "GET",
              "description": "Lists a customer's devices.",
              "flatPath": "v1/customers/{customersId}/devices"
            },
            "removeConfiguration": {
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "CustomerRemoveConfigurationRequest"
              },
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. The customer managing the device in the format `customers/[CUSTOMER_ID]`.",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "path": "v1/{+parent}/devices:removeConfiguration",
              "id": "androiddeviceprovisioning.customers.devices.removeConfiguration",
              "httpMethod": "POST",
              "description": "Removes a configuration from device.",
              "flatPath": "v1/customers/{customersId}/devices:removeConfiguration"
            },
            "get": {
              "id": "androiddeviceprovisioning.customers.devices.get",
              "httpMethod": "GET",
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "description": "Gets the details of a device.",
              "response": {
                "$ref": "Device"
              },
              "flatPath": "v1/customers/{customersId}/devices/{devicesId}",
              "parameters": {
                "name": {
                  "description": "Required. The device to get. An API resource name in the format `customers/[CUSTOMER_ID]/devices/[DEVICE_ID]`.",
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "location": "path"
                }
              }
            }
          }
        },
        "dpcs": {
          "methods": {
            "list": {
              "description": "Lists the DPCs (device policy controllers) that support zero-touch enrollment.",
              "id": "androiddeviceprovisioning.customers.dpcs.list",
              "response": {
                "$ref": "CustomerListDpcsResponse"
              },
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "description": "Required. The customer that can use the DPCs in configurations. An API resource name in the format `customers/[CUSTOMER_ID]`.",
                  "location": "path",
                  "pattern": "^customers/[^/]+$"
                }
              },
              "path": "v1/{+parent}/dpcs",
              "httpMethod": "GET",
              "flatPath": "v1/customers/{customersId}/dpcs",
              "parameterOrder": [
                "parent"
              ]
            }
          }
        }
      },
      "methods": {
        "list": {
          "path": "v1/customers",
          "id": "androiddeviceprovisioning.customers.list",
          "parameters": {
            "pageSize": {
              "location": "query",
              "format": "int32",
              "type": "integer",
              "description": "The maximum number of customers to show in a page of results. A number between 1 and 100 (inclusive)."
            },
            "pageToken": {
              "description": "A token specifying which result page to return. This field has custom validations in ListCustomersRequestValidator",
              "type": "string",
              "location": "query"
            }
          },
          "description": "Lists the user's customer accounts.",
          "flatPath": "v1/customers",
          "httpMethod": "GET",
          "parameterOrder": [],
          "response": {
            "$ref": "CustomerListCustomersResponse"
          }
        }
      }
    }
  },
  "protocol": "rest",
  "mtlsRootUrl": "https://androiddeviceprovisioning.mtls.googleapis.com/",
  "rootUrl": "https://androiddeviceprovisioning.googleapis.com/",
  "version": "v1",
  "canonicalName": "Android Provisioning Partner",
  "ownerName": "Google",
  "schemas": {
    "UpdateMetadataArguments": {
      "properties": {
        "deviceMetadata": {
          "$ref": "DeviceMetadata",
          "description": "Required. The metadata to update."
        },
        "deviceId": {
          "format": "int64",
          "type": "string",
          "description": "Required. Device ID of the device."
        },
        "deviceIdentifier": {
          "$ref": "DeviceIdentifier",
          "description": "Required. Device identifier."
        }
      },
      "type": "object",
      "id": "UpdateMetadataArguments",
      "description": "Identifies metadata updates to one device."
    },
    "UpdateDeviceMetadataInBatchRequest": {
      "id": "UpdateDeviceMetadataInBatchRequest",
      "description": "Request to update device metadata in batch.",
      "type": "object",
      "properties": {
        "updates": {
          "items": {
            "$ref": "UpdateMetadataArguments"
          },
          "description": "Required. The list of metadata updates.",
          "type": "array"
        }
      }
    },
    "FindDevicesByOwnerRequest": {
      "type": "object",
      "properties": {
        "pageToken": {
          "description": "A token specifying which result page to return.",
          "type": "string"
        },
        "sectionType": {
          "description": "Required. The section type of the device's provisioning record.",
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_SIM_LOCK",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "enumDescriptions": [
            "Unspecified section type.",
            "SIM-lock section type.",
            "Zero-touch enrollment section type."
          ],
          "type": "string"
        },
        "googleWorkspaceCustomerId": {
          "items": {
            "type": "string"
          },
          "description": "The list of IDs of Google Workspace accounts to search for.",
          "type": "array"
        },
        "limit": {
          "format": "int64",
          "type": "string",
          "description": "Required. The maximum number of devices to show in a page of results. Must be between 1 and 100 inclusive."
        },
        "customerId": {
          "description": "The list of customer IDs to search for.",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array"
        }
      },
      "id": "FindDevicesByOwnerRequest",
      "description": "Request to find devices by customers."
    },
    "PartnerUnclaim": {
      "description": "Identifies one unclaim request.",
      "id": "PartnerUnclaim",
      "type": "object",
      "properties": {
        "vacationModeExpireTime": {
          "format": "google-datetime",
          "description": "Optional. The expiration time of the vacation unlock.",
          "type": "string"
        },
        "vacationModeDays": {
          "type": "integer",
          "description": "Optional. The duration of the vacation unlock starting from when the request is processed. (1 day is treated as 24 hours)",
          "format": "int32"
        },
        "deviceIdentifier": {
          "description": "Required. Device identifier of the device.",
          "$ref": "DeviceIdentifier"
        },
        "deviceId": {
          "description": "Required. Device ID of the device.",
          "type": "string",
          "format": "int64"
        },
        "sectionType": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified section type.",
            "SIM-lock section type.",
            "Zero-touch enrollment section type."
          ],
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_SIM_LOCK",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "description": "Required. The section type of the device's provisioning record."
        }
      }
    },
    "CustomerApplyConfigurationRequest": {
      "id": "CustomerApplyConfigurationRequest",
      "properties": {
        "device": {
          "description": "Required. The device the configuration is applied to. There are custom validations in ApplyConfigurationRequestValidator",
          "$ref": "DeviceReference"
        },
        "configuration": {
          "type": "string",
          "description": "Required. The configuration applied to the device in the format `customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`."
        }
      },
      "type": "object",
      "description": "Request message for customer to assign a configuration to device."
    },
    "DeviceReference": {
      "description": "A `DeviceReference` is an API abstraction that lets you supply a _device_ argument to a method using one of the following identifier types: * A numeric API resource ID. * Real-world hardware IDs, such as IMEI number, belonging to the manufactured device. Methods that operate on devices take a `DeviceReference` as a parameter type because it's more flexible for the caller. To learn more about device identifiers, read [Identifiers](https://developers.google.com/zero-touch/guides/identifiers).",
      "id": "DeviceReference",
      "properties": {
        "deviceIdentifier": {
          "$ref": "DeviceIdentifier",
          "description": "The hardware IDs of the device."
        },
        "deviceId": {
          "type": "string",
          "format": "int64",
          "description": "The ID of the device."
        }
      },
      "type": "object"
    },
    "Device": {
      "properties": {
        "name": {
          "description": "Output only. The API resource name in the format `partners/[PARTNER_ID]/devices/[DEVICE_ID]`. Assigned by the server.",
          "readOnly": true,
          "type": "string"
        },
        "deviceMetadata": {
          "description": "The metadata attached to the device. Structured as key-value pairs. To learn more, read [Device metadata](https://developers.google.com/zero-touch/guides/metadata).",
          "$ref": "DeviceMetadata"
        },
        "deviceId": {
          "format": "int64",
          "readOnly": true,
          "description": "Output only. The ID of the device. Assigned by the server.",
          "type": "string"
        },
        "configuration": {
          "description": "Not available to resellers.",
          "type": "string"
        },
        "claims": {
          "items": {
            "$ref": "DeviceClaim"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. The provisioning claims for a device. Devices claimed for zero-touch enrollment have a claim with the type `SECTION_TYPE_ZERO_TOUCH`. Call `partners.devices.unclaim` or `partners.devices.unclaimAsync` to remove the device from zero-touch enrollment."
        },
        "deviceIdentifier": {
          "$ref": "DeviceIdentifier",
          "description": "The hardware IDs that identify a manufactured device. To learn more, read [Identifiers](https://developers.google.com/zero-touch/guides/identifiers)."
        }
      },
      "type": "object",
      "description": "An Android or Chrome OS device registered for zero-touch enrollment.",
      "id": "Device"
    },
    "ListVendorCustomersResponse": {
      "type": "object",
      "description": "Response message to list customers of the vendor.",
      "id": "ListVendorCustomersResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Omitted if no further results are available."
        },
        "customers": {
          "items": {
            "$ref": "Company"
          },
          "type": "array",
          "description": "List of customers of the vendor."
        },
        "totalSize": {
          "format": "int32",
          "description": "The total count of items in the list irrespective of pagination.",
          "type": "integer"
        }
      }
    },
    "CreateCustomerRequest": {
      "id": "CreateCustomerRequest",
      "type": "object",
      "description": "Request message to create a customer.",
      "properties": {
        "customer": {
          "$ref": "Company",
          "description": "Required. The company data to populate the new customer. Must contain a value for `companyName` and at least one `owner_email` that's associated with a Google Account. The values for `companyId` and `name` must be empty."
        }
      }
    },
    "OperationPerDevice": {
      "properties": {
        "unclaim": {
          "$ref": "PartnerUnclaim",
          "description": "A copy of the original device-unclaim request received by the server."
        },
        "result": {
          "description": "The processing result for each device.",
          "$ref": "PerDeviceStatusInBatch"
        },
        "updateMetadata": {
          "$ref": "UpdateMetadataArguments",
          "description": "A copy of the original metadata-update request received by the server."
        },
        "claim": {
          "$ref": "PartnerClaim",
          "description": "A copy of the original device-claim request received by the server."
        }
      },
      "type": "object",
      "id": "OperationPerDevice",
      "description": "A task for each device in the operation. Corresponds to each device change in the request."
    },
    "Company": {
      "properties": {
        "companyName": {
          "description": "Required. The name of the company. For example _XYZ Corp_. Displayed to the company's employees in the zero-touch enrollment portal.",
          "type": "string"
        },
        "skipWelcomeEmail": {
          "description": "Input only. If set to true, welcome email will not be sent to the customer. It is recommended to skip the welcome email if devices will be claimed with additional DEVICE_PROTECTION service, as the customer will receive separate emails at device claim time. This field is ignored if this is not a Zero-touch customer.",
          "type": "boolean"
        },
        "termsStatus": {
          "enumDescriptions": [
            "Default value. This value should never be set if the enum is present.",
            "None of the company's users have accepted the ToS.",
            "One (or more) of the company's users has accepted the ToS.",
            "None of the company's users has accepted the current ToS but at least one user accepted a previous ToS."
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. Whether any user from the company has accepted the latest Terms of Service (ToS). See TermsStatus.",
          "enum": [
            "TERMS_STATUS_UNSPECIFIED",
            "TERMS_STATUS_NOT_ACCEPTED",
            "TERMS_STATUS_ACCEPTED",
            "TERMS_STATUS_STALE"
          ]
        },
        "name": {
          "description": "Output only. The API resource name of the company. The resource name is one of the following formats: * `partners/[PARTNER_ID]/customers/[CUSTOMER_ID]` * `partners/[PARTNER_ID]/vendors/[VENDOR_ID]` * `partners/[PARTNER_ID]/vendors/[VENDOR_ID]/customers/[CUSTOMER_ID]` Assigned by the server.",
          "type": "string",
          "readOnly": true
        },
        "companyId": {
          "description": "Output only. The ID of the company. Assigned by the server.",
          "readOnly": true,
          "format": "int64",
          "type": "string"
        },
        "languageCode": {
          "description": "Input only. The preferred locale of the customer represented as a BCP47 language code. This field is validated on input and requests containing unsupported language codes will be rejected. Supported language codes: Arabic (ar) Chinese (Hong Kong) (zh-HK) Chinese (Simplified) (zh-CN) Chinese (Traditional) (zh-TW) Czech (cs) Danish (da) Dutch (nl) English (UK) (en-GB) English (US) (en-US) Filipino (fil) Finnish (fi) French (fr) German (de) Hebrew (iw) Hindi (hi) Hungarian (hu) Indonesian (id) Italian (it) Japanese (ja) Korean (ko) Norwegian (Bokmal) (no) Polish (pl) Portuguese (Brazil) (pt-BR) Portuguese (Portugal) (pt-PT) Russian (ru) Spanish (es) Spanish (Latin America) (es-419) Swedish (sv) Thai (th) Turkish (tr) Ukrainian (uk) Vietnamese (vi)",
          "type": "string"
        },
        "adminEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. Email address of customer's users in the admin role. Each email address must be associated with a Google Account."
        },
        "googleWorkspaceAccount": {
          "$ref": "GoogleWorkspaceAccount",
          "readOnly": true,
          "description": "Output only. The Google Workspace account associated with this customer. Only used for customer Companies."
        },
        "ownerEmails": {
          "description": "Required. Input only. Email address of customer's users in the owner role. At least one `owner_email` is required. Owners share the same access as admins but can also add, delete, and edit your organization's portal users.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "A reseller, vendor, or customer in the zero-touch reseller and customer APIs.",
      "id": "Company",
      "type": "object"
    },
    "CustomerListCustomersResponse": {
      "description": "Response message for listing my customers.",
      "id": "CustomerListCustomersResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token used to access the next page of results. Omitted if no further results are available.",
          "type": "string"
        },
        "customers": {
          "description": "The customer accounts the calling user is a member of.",
          "items": {
            "$ref": "Company"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Status": {
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "Status"
    },
    "Operation": {
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "description": "This field will always be not set if the operation is created by `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`. In this case, error information for each device is set in `response.perDeviceStatus.result.status`.",
          "$ref": "Status"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "This field will contain a `DevicesLongRunningOperationMetadata` object if the operation is created by `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`."
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "This field will contain a `DevicesLongRunningOperationResponse` object if the operation is created by `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`.",
          "type": "object"
        }
      },
      "id": "Operation",
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "CustomerUnclaimDeviceRequest": {
      "description": "Request message for customer to unclaim a device.",
      "type": "object",
      "properties": {
        "device": {
          "$ref": "DeviceReference",
          "description": "Required. The device to unclaim. There are custom validations in UnclaimDeviceRequestValidator."
        }
      },
      "id": "CustomerUnclaimDeviceRequest"
    },
    "ClaimDeviceResponse": {
      "description": "Response message containing device id of the claim.",
      "type": "object",
      "id": "ClaimDeviceResponse",
      "properties": {
        "deviceId": {
          "description": "The device ID of the claimed device.",
          "format": "int64",
          "type": "string"
        },
        "deviceName": {
          "description": "The resource name of the device in the format `partners/[PARTNER_ID]/devices/[DEVICE_ID]`.",
          "type": "string"
        }
      }
    },
    "UnclaimDeviceRequest": {
      "properties": {
        "deviceId": {
          "description": "Required. The device ID returned by `ClaimDevice`.",
          "format": "int64",
          "type": "string"
        },
        "vacationModeExpireTime": {
          "type": "string",
          "description": "The expiration time of the vacation unlock.",
          "format": "google-datetime"
        },
        "deviceIdentifier": {
          "$ref": "DeviceIdentifier",
          "description": "Required. The device identifier you used when you claimed this device."
        },
        "sectionType": {
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_SIM_LOCK",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified section type.",
            "SIM-lock section type.",
            "Zero-touch enrollment section type."
          ],
          "description": "Required. The section type of the device's provisioning record."
        },
        "vacationModeDays": {
          "type": "integer",
          "format": "int32",
          "description": "The duration of the vacation unlock starting from when the request is processed. (1 day is treated as 24 hours)"
        }
      },
      "id": "UnclaimDeviceRequest",
      "type": "object",
      "description": "Request message to unclaim a device."
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "FindDevicesByDeviceIdentifierResponse": {
      "type": "object",
      "description": "Response containing found devices.",
      "properties": {
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "The total count of items in the list irrespective of pagination."
        },
        "devices": {
          "items": {
            "$ref": "Device"
          },
          "type": "array",
          "description": "Found devices."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token used to access the next page of results. Omitted if no further results are available."
        }
      },
      "id": "FindDevicesByDeviceIdentifierResponse"
    },
    "DeviceClaim": {
      "properties": {
        "vacationModeStartTime": {
          "type": "string",
          "description": "The timestamp when the device was put into â€˜vacation modeâ€™. This value is present iff the device is in 'vacation mode'.",
          "format": "google-datetime"
        },
        "sectionType": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified section type.",
            "SIM-lock section type.",
            "Zero-touch enrollment section type."
          ],
          "description": "Output only. The type of claim made on the device.",
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_SIM_LOCK",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "readOnly": true
        },
        "vacationModeExpireTime": {
          "description": "The timestamp when the device will exit â€˜vacation modeâ€™. This value is present iff the device is in 'vacation mode'.",
          "format": "google-datetime",
          "type": "string"
        },
        "googleWorkspaceCustomerId": {
          "description": "The ID of the Google Workspace account that owns the Chrome OS device.",
          "type": "string"
        },
        "additionalService": {
          "description": "The Additional service registered for the device.",
          "enumDescriptions": [
            "No additional service.",
            "Device protection service, also known as Android Enterprise Essentials. To claim a device with the device protection service you must enroll with the partnership team."
          ],
          "type": "string",
          "enum": [
            "ADDITIONAL_SERVICE_UNSPECIFIED",
            "DEVICE_PROTECTION"
          ]
        },
        "resellerId": {
          "type": "string",
          "description": "The ID of the reseller that claimed the device.",
          "format": "int64"
        },
        "ownerCompanyId": {
          "format": "int64",
          "type": "string",
          "description": "The ID of the Customer that purchased the device."
        }
      },
      "description": "A record of a device claimed by a reseller for a customer. Devices claimed for zero-touch enrollment have a claim with the type `SECTION_TYPE_ZERO_TOUCH`. To learn more, read [Claim devices for customers](/zero-touch/guides/how-it-works#claim).",
      "type": "object",
      "id": "DeviceClaim"
    },
    "ListVendorsResponse": {
      "type": "object",
      "description": "Response message to list vendors of the partner.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Omitted if no further results are available."
        },
        "totalSize": {
          "format": "int32",
          "description": "The total count of items in the list irrespective of pagination.",
          "type": "integer"
        },
        "vendors": {
          "type": "array",
          "items": {
            "$ref": "Company"
          },
          "description": "List of vendors of the reseller partner. Fields `name`, `companyId` and `companyName` are populated to the Company object."
        }
      },
      "id": "ListVendorsResponse"
    },
    "DevicesLongRunningOperationResponse": {
      "type": "object",
      "id": "DevicesLongRunningOperationResponse",
      "properties": {
        "successCount": {
          "type": "integer",
          "format": "int32",
          "description": "A summary of how many items in the operation the server processed successfully. Updated as the operation progresses."
        },
        "perDeviceStatus": {
          "type": "array",
          "items": {
            "$ref": "OperationPerDevice"
          },
          "description": "The processing status for each device in the operation. One `PerDeviceStatus` per device. The list order matches the items in the original request."
        }
      },
      "description": "Tracks the status of a long-running operation to claim, unclaim, or attach metadata to devices. To learn more, read [Longâ€‘running batch operations](/zero-touch/guides/how-it-works#operations)."
    },
    "Configuration": {
      "type": "object",
      "id": "Configuration",
      "description": "A configuration collects the provisioning options for Android devices. Each configuration combines the following: * The EMM device policy controller (DPC) installed on the devices. * EMM policies enforced on the devices. * Metadata displayed on the device to help users during setup. Customers can add as many configurations as they need. However, zero-touch enrollment works best when a customer sets a default configuration that's applied to any new devices the organization purchases.",
      "properties": {
        "companyName": {
          "type": "string",
          "description": "Required. The name of the organization. Zero-touch enrollment shows this organization name to device users during device provisioning."
        },
        "forcedResetTime": {
          "type": "string",
          "format": "google-duration",
          "description": "Optional. The timeout before forcing factory reset the device if the device doesn't go through provisioning in the setup wizard, usually due to lack of network connectivity during setup wizard. Ranges from 0-6 hours, with 2 hours being the default if unset."
        },
        "configurationName": {
          "description": "Required. A short name that describes the configuration's purpose. For example, _Sales team_ or _Temporary employees_. The zero-touch enrollment portal displays this name to IT admins.",
          "type": "string"
        },
        "customMessage": {
          "description": "A message, containing one or two sentences, to help device users get help or give them more details about whatâ€™s happening to their device. Zero-touch enrollment shows this message before the device is provisioned.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The API resource name in the format `customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`. Assigned by the server.",
          "readOnly": true,
          "type": "string"
        },
        "dpcExtras": {
          "description": "The JSON-formatted EMM provisioning extras that are passed to the DPC.",
          "type": "string"
        },
        "dpcResourcePath": {
          "description": "Required. The resource name of the selected DPC (device policy controller) in the format `customers/[CUSTOMER_ID]/dpcs/*`. To list the supported DPCs, call `customers.dpcs.list`.",
          "type": "string"
        },
        "configurationId": {
          "description": "Output only. The ID of the configuration. Assigned by the server.",
          "format": "int64",
          "readOnly": true,
          "type": "string"
        },
        "isDefault": {
          "description": "Required. Whether this is the default configuration that zero-touch enrollment applies to any new devices the organization purchases in the future. Only one customer configuration can be the default. Setting this value to `true`, changes the previous default configuration's `isDefault` value to `false`.",
          "type": "boolean"
        },
        "contactPhone": {
          "description": "Required. The telephone number that device users can call, using another device, to get help. Zero-touch enrollment shows this number to device users before device provisioning. Accepts numerals, spaces, the plus sign, hyphens, and parentheses.",
          "type": "string"
        },
        "contactEmail": {
          "type": "string",
          "description": "Required. The email address that device users can contact to get help. Zero-touch enrollment shows this email address to device users before device provisioning. The value is validated on input."
        }
      }
    },
    "PerDeviceStatusInBatch": {
      "type": "object",
      "id": "PerDeviceStatusInBatch",
      "properties": {
        "status": {
          "description": "The result status of the device after processing.",
          "enum": [
            "SINGLE_DEVICE_STATUS_UNSPECIFIED",
            "SINGLE_DEVICE_STATUS_UNKNOWN_ERROR",
            "SINGLE_DEVICE_STATUS_OTHER_ERROR",
            "SINGLE_DEVICE_STATUS_SUCCESS",
            "SINGLE_DEVICE_STATUS_PERMISSION_DENIED",
            "SINGLE_DEVICE_STATUS_INVALID_DEVICE_IDENTIFIER",
            "SINGLE_DEVICE_STATUS_INVALID_SECTION_TYPE",
            "SINGLE_DEVICE_STATUS_SECTION_NOT_YOURS",
            "SINGLE_DEVICE_STATUS_INVALID_TOKEN",
            "SINGLE_DEVICE_STATUS_REVOKED_TOKEN",
            "SINGLE_DEVICE_STATUS_DEVICE_LIMIT_EXCEEDED"
          ],
          "enumDescriptions": [
            "Invalid code. Shouldn't be used.",
            "Unknown error. We don't expect this error to occur here.",
            "Other error. We know/expect this error, but there's no defined error code for the error.",
            "Success.",
            "Permission denied.",
            "Invalid device identifier.",
            "Invalid section type.",
            "This section is claimed by another company.",
            "Invalid pre-provisioning token.",
            "Revoked pre-provisioning token.",
            "Status used to indicate a failure due to a device limit being exceeded"
          ],
          "type": "string"
        },
        "deviceId": {
          "format": "int64",
          "type": "string",
          "description": "If processing succeeds, the device ID of the device."
        },
        "errorMessage": {
          "description": "If processing fails, a developer message explaining what went wrong.",
          "type": "string"
        },
        "errorIdentifier": {
          "description": "If processing fails, the error type.",
          "type": "string"
        }
      },
      "description": "Captures the processing status for each device in the operation."
    },
    "CustomerListDpcsResponse": {
      "id": "CustomerListDpcsResponse",
      "properties": {
        "dpcs": {
          "type": "array",
          "items": {
            "$ref": "Dpc"
          },
          "description": "The list of DPCs available to the customer that support zero-touch enrollment."
        }
      },
      "description": "Response message of customer's listing DPCs.",
      "type": "object"
    },
    "ClaimDevicesRequest": {
      "type": "object",
      "properties": {
        "claims": {
          "items": {
            "$ref": "PartnerClaim"
          },
          "description": "Required. A list of device claims.",
          "type": "array"
        }
      },
      "id": "ClaimDevicesRequest",
      "description": "Request to claim devices asynchronously in batch. Claiming a device adds the device to zero-touch enrollment and shows the device in the customer's view of the portal."
    },
    "FindDevicesByOwnerResponse": {
      "description": "Response containing found devices.",
      "properties": {
        "devices": {
          "items": {
            "$ref": "Device"
          },
          "type": "array",
          "description": "The customer's devices."
        },
        "totalSize": {
          "format": "int32",
          "description": "The total count of items in the list irrespective of pagination.",
          "type": "integer"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token used to access the next page of results. Omitted if no further results are available."
        }
      },
      "id": "FindDevicesByOwnerResponse",
      "type": "object"
    },
    "CustomerListConfigurationsResponse": {
      "description": "Response message of customer's listing configuration.",
      "type": "object",
      "id": "CustomerListConfigurationsResponse",
      "properties": {
        "configurations": {
          "description": "The configurations.",
          "type": "array",
          "items": {
            "$ref": "Configuration"
          }
        }
      }
    },
    "Dpc": {
      "type": "object",
      "id": "Dpc",
      "description": "An EMM's DPC ([device policy controller](http://developer.android.com/work/dpc/build-dpc.html)). Zero-touch enrollment installs a DPC (listed in the `Configuration`) on a device to maintain the customer's mobile policies. All the DPCs listed by the API support zero-touch enrollment and are available in Google Play.",
      "properties": {
        "packageName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The DPC's Android application ID that looks like a Java package name. Zero-touch enrollment installs the DPC app onto a device using this identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The API resource name in the format `customers/[CUSTOMER_ID]/dpcs/[DPC_ID]`. Assigned by the server. To maintain a reference to a DPC across customer accounts, persist and match the last path component (`DPC_ID`)."
        },
        "dpcName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The title of the DPC app in Google Play. For example, _Google Apps Device Policy_. Useful in an application's user interface."
        }
      }
    },
    "DeviceIdentifier": {
      "properties": {
        "chromeOsAttestedDeviceId": {
          "description": "An identifier provided by OEMs, carried through the production and sales process. Only applicable to Chrome OS devices.",
          "type": "string"
        },
        "model": {
          "description": "The device model's name. Allowed values are listed in [Android models](/zero-touch/resources/manufacturer-names#model-names) and [Chrome OS models](https://support.google.com/chrome/a/answer/10130175#identify_compatible).",
          "type": "string"
        },
        "imei": {
          "type": "string",
          "description": "The deviceâ€™s IMEI number. Validated on input."
        },
        "manufacturer": {
          "type": "string",
          "description": "The device manufacturerâ€™s name. Matches the device's built-in value returned from `android.os.Build.MANUFACTURER`. Allowed values are listed in [Android manufacturers](/zero-touch/resources/manufacturer-names#manufacturers-names)."
        },
        "meid": {
          "description": "The deviceâ€™s MEID number.",
          "type": "string"
        },
        "deviceType": {
          "enumDescriptions": [
            "Device type is not specified.",
            "Android device",
            "Chrome OS device"
          ],
          "description": "The type of the device",
          "enum": [
            "DEVICE_TYPE_UNSPECIFIED",
            "DEVICE_TYPE_ANDROID",
            "DEVICE_TYPE_CHROME_OS"
          ],
          "type": "string"
        },
        "serialNumber": {
          "type": "string",
          "description": "The manufacturer's serial number for the device. This value might not be unique across different device models."
        }
      },
      "id": "DeviceIdentifier",
      "description": "Encapsulates hardware and product IDs to identify a manufactured device. To understand requirements on identifier sets, read [Identifiers](https://developers.google.com/zero-touch/guides/identifiers).",
      "type": "object"
    },
    "PartnerClaim": {
      "properties": {
        "deviceIdentifier": {
          "$ref": "DeviceIdentifier",
          "description": "Required. Required. Device identifier of the device."
        },
        "preProvisioningToken": {
          "description": "Optional. Must and can only be set for Chrome OS devices.",
          "type": "string"
        },
        "sectionType": {
          "description": "Required. The section type of the device's provisioning record.",
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_SIM_LOCK",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified section type.",
            "SIM-lock section type.",
            "Zero-touch enrollment section type."
          ]
        },
        "simlockProfileId": {
          "type": "string",
          "description": "Optional. Must and can only be set when DeviceProvisioningSectionType is SECTION_TYPE_SIM_LOCK. The unique identifier of the SimLock profile.",
          "format": "int64"
        },
        "customerId": {
          "type": "string",
          "format": "int64",
          "description": "The ID of the customer for whom the device is being claimed."
        },
        "googleWorkspaceCustomerId": {
          "description": "The Google Workspace customer ID.",
          "type": "string"
        },
        "deviceMetadata": {
          "description": "Required. The metadata to attach to the device at claim.",
          "$ref": "DeviceMetadata"
        }
      },
      "type": "object",
      "description": "Identifies one claim request.",
      "id": "PartnerClaim"
    },
    "FindDevicesByDeviceIdentifierRequest": {
      "properties": {
        "limit": {
          "format": "int64",
          "description": "Required. The maximum number of devices to show in a page of results. Must be between 1 and 100 inclusive.",
          "type": "string"
        },
        "pageToken": {
          "type": "string",
          "description": "A token specifying which result page to return."
        },
        "deviceIdentifier": {
          "description": "Required. Required. The device identifier to search for.",
          "$ref": "DeviceIdentifier"
        }
      },
      "description": "Request to find devices.",
      "id": "FindDevicesByDeviceIdentifierRequest",
      "type": "object"
    },
    "CustomerRemoveConfigurationRequest": {
      "description": "Request message for customer to remove the configuration from device.",
      "type": "object",
      "properties": {
        "device": {
          "description": "Required. The device to remove the configuration from. There are custom validations in RemoveConfigurationRequestValidator",
          "$ref": "DeviceReference"
        }
      },
      "id": "CustomerRemoveConfigurationRequest"
    },
    "UpdateDeviceMetadataRequest": {
      "id": "UpdateDeviceMetadataRequest",
      "description": "Request to set metadata for a device.",
      "properties": {
        "deviceMetadata": {
          "$ref": "DeviceMetadata",
          "description": "Required. The metadata to attach to the device."
        }
      },
      "type": "object"
    },
    "CustomerListDevicesResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token used to access the next page of results. Omitted if no further results are available."
        },
        "devices": {
          "items": {
            "$ref": "Device"
          },
          "description": "The customer's devices.",
          "type": "array"
        }
      },
      "description": "Response message of customer's liting devices.",
      "id": "CustomerListDevicesResponse"
    },
    "DeviceMetadata": {
      "properties": {
        "entries": {
          "description": "Metadata entries recorded as key-value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "id": "DeviceMetadata",
      "description": "Metadata entries that can be attached to a `Device`. To learn more, read [Device metadata](https://developers.google.com/zero-touch/guides/metadata).",
      "type": "object"
    },
    "DevicesLongRunningOperationMetadata": {
      "properties": {
        "devicesCount": {
          "description": "The number of metadata updates in the operation. This might be different from the number of updates in the request if the API can't parse some of the updates.",
          "type": "integer",
          "format": "int32"
        },
        "processingStatus": {
          "enumDescriptions": [
            "Invalid code. Shouldn't be used.",
            "Pending.",
            "In progress.",
            "Processed. This doesn't mean all items were processed successfully, you should check the `response` field for the result of every item."
          ],
          "description": "The processing status of the operation.",
          "enum": [
            "BATCH_PROCESS_STATUS_UNSPECIFIED",
            "BATCH_PROCESS_PENDING",
            "BATCH_PROCESS_IN_PROGRESS",
            "BATCH_PROCESS_PROCESSED"
          ],
          "type": "string"
        },
        "progress": {
          "format": "int32",
          "type": "integer",
          "description": "The processing progress of the operation. Measured as a number from 0 to 100. A value of 10O doesn't always mean the operation completedâ€”check for the inclusion of a `done` field."
        }
      },
      "description": "Tracks the status of a long-running operation to asynchronously update a batch of reseller metadata attached to devices. To learn more, read [Longâ€‘running batch operations](/zero-touch/guides/how-it-works#operations).",
      "id": "DevicesLongRunningOperationMetadata",
      "type": "object"
    },
    "ClaimDeviceRequest": {
      "type": "object",
      "description": "Request message to claim a device on behalf of a customer.",
      "properties": {
        "customerId": {
          "format": "int64",
          "description": "The ID of the customer for whom the device is being claimed.",
          "type": "string"
        },
        "simlockProfileId": {
          "format": "int64",
          "description": "Optional. Must and can only be set when DeviceProvisioningSectionType is SECTION_TYPE_SIM_LOCK. The unique identifier of the SimLock profile.",
          "type": "string"
        },
        "googleWorkspaceCustomerId": {
          "description": "The Google Workspace customer ID.",
          "type": "string"
        },
        "deviceIdentifier": {
          "$ref": "DeviceIdentifier",
          "description": "Required. Required. The device identifier of the device to claim."
        },
        "deviceMetadata": {
          "$ref": "DeviceMetadata",
          "description": "Optional. The metadata to attach to the device."
        },
        "sectionType": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified section type.",
            "SIM-lock section type.",
            "Zero-touch enrollment section type."
          ],
          "description": "Required. The section type of the device's provisioning record.",
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_SIM_LOCK",
            "SECTION_TYPE_ZERO_TOUCH"
          ]
        },
        "preProvisioningToken": {
          "description": "Optional. Must and can only be set for Chrome OS devices.",
          "type": "string"
        }
      },
      "id": "ClaimDeviceRequest"
    },
    "UnclaimDevicesRequest": {
      "description": "Request to unclaim devices asynchronously in batch.",
      "id": "UnclaimDevicesRequest",
      "type": "object",
      "properties": {
        "unclaims": {
          "type": "array",
          "description": "Required. The list of devices to unclaim.",
          "items": {
            "$ref": "PartnerUnclaim"
          }
        }
      }
    },
    "GoogleWorkspaceAccount": {
      "id": "GoogleWorkspaceAccount",
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Required. The customer ID."
        },
        "preProvisioningTokens": {
          "items": {
            "type": "string"
          },
          "description": "Output only. The pre-provisioning tokens previously used to claim devices.",
          "type": "array",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "A Google Workspace customer."
    },
    "ListCustomersResponse": {
      "description": "Response message of all customers related to this partner.",
      "type": "object",
      "id": "ListCustomersResponse",
      "properties": {
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "The total count of items in the list irrespective of pagination."
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Omitted if no further results are available.",
          "type": "string"
        },
        "customers": {
          "type": "array",
          "description": "List of customers related to this reseller partner.",
          "items": {
            "$ref": "Company"
          }
        }
      }
    }
  },
  "description": "Automates Android zero-touch enrollment for device resellers, customers, and EMMs.",
  "id": "androiddeviceprovisioning:v1",
  "batchPath": "batch",
  "kind": "discovery#restDescription",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "title": "Android Device Provisioning Partner API",
  "parameters": {
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "default": "json",
      "location": "query",
      "description": "Data format for response."
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    }
  },
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "fullyEncodeReservedExpansion": true,
  "version_module": true,
  "documentationLink": "https://developers.google.com/zero-touch/",
  "revision": "20230509",
  "servicePath": ""
}

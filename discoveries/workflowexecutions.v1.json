{
  "canonicalName": "Workflow Executions",
  "ownerName": "Google",
  "parameters": {
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ]
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "description": "Data format for response.",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    }
  },
  "batchPath": "batch",
  "description": "Execute workflows created with Workflows API.",
  "servicePath": "",
  "discoveryVersion": "v1",
  "schemas": {
    "Error": {
      "id": "Error",
      "properties": {
        "payload": {
          "description": "Error message and data returned represented as a JSON string.",
          "type": "string"
        },
        "stackTrace": {
          "$ref": "StackTrace",
          "description": "Stack trace with detailed information of where error was generated."
        },
        "context": {
          "type": "string",
          "description": "Human-readable stack trace string."
        }
      },
      "description": "Error describes why the execution was abnormally terminated.",
      "type": "object"
    },
    "StackTrace": {
      "properties": {
        "elements": {
          "items": {
            "$ref": "StackTraceElement"
          },
          "type": "array",
          "description": "An array of stack elements."
        }
      },
      "description": "A collection of stack elements (frames) where an error occurred.",
      "type": "object",
      "id": "StackTrace"
    },
    "Status": {
      "type": "object",
      "id": "Status",
      "properties": {
        "currentSteps": {
          "items": {
            "$ref": "Step"
          },
          "description": "A list of currently executing or last executed step names for the workflow execution currently running. If the workflow has succeeded or failed, this is the last attempted or executed step. Presently, if the current step is inside a subworkflow, the list only includes that step. In the future, the list will contain items for each step in the call stack, starting with the outermost step in the `main` subworkflow, and ending with the most deeply nested step.",
          "type": "array"
        }
      },
      "description": "Represents the current status of this execution."
    },
    "Step": {
      "id": "Step",
      "type": "object",
      "description": "Represents a step of the workflow this execution is running.",
      "properties": {
        "step": {
          "description": "Name of a step within the routine.",
          "type": "string"
        },
        "routine": {
          "description": "Name of a routine within the workflow.",
          "type": "string"
        }
      }
    },
    "ListExecutionsResponse": {
      "id": "ListExecutionsResponse",
      "type": "object",
      "properties": {
        "executions": {
          "description": "The executions which match the request.",
          "type": "array",
          "items": {
            "$ref": "Execution"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "description": "Response for the ListExecutions method."
    },
    "StackTraceElement": {
      "description": "A single stack element (frame) where an error occurred.",
      "type": "object",
      "id": "StackTraceElement",
      "properties": {
        "routine": {
          "type": "string",
          "description": "The routine where the error occurred."
        },
        "position": {
          "$ref": "Position",
          "description": "The source position information of the stack trace element."
        },
        "step": {
          "type": "string",
          "description": "The step the error occurred at."
        }
      }
    },
    "TriggerPubsubExecutionRequest": {
      "properties": {
        "GCPCloudEventsMode": {
          "description": "Required. LINT: LEGACY_NAMES The query parameter value for __GCP_CloudEventsMode, set by the Eventarc service when configuring triggers.",
          "type": "string"
        },
        "deliveryAttempt": {
          "format": "int32",
          "type": "integer",
          "description": "The number of attempts that have been made to deliver this message. This is set by Pub/Sub for subscriptions that have the \"dead letter\" feature enabled, and hence provided here for compatibility, but is ignored by Workflows."
        },
        "subscription": {
          "type": "string",
          "description": "Required. The subscription of the Pub/Sub push notification. Format: projects/{project}/subscriptions/{sub}"
        },
        "message": {
          "$ref": "PubsubMessage",
          "description": "Required. The message of the Pub/Sub push notification."
        }
      },
      "id": "TriggerPubsubExecutionRequest",
      "description": "Request for the TriggerPubsubExecution method.",
      "type": "object"
    },
    "StateError": {
      "id": "StateError",
      "properties": {
        "type": {
          "description": "The type of this state error.",
          "type": "string",
          "enumDescriptions": [
            "No type specified.",
            "Caused by an issue with KMS."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "KMS_ERROR"
          ]
        },
        "details": {
          "description": "Provides specifics about the error.",
          "type": "string"
        }
      },
      "description": "Describes an error related to the current state of the Execution resource.",
      "type": "object"
    },
    "Execution": {
      "description": "A running instance of a [Workflow](/workflows/docs/reference/rest/v1/projects.locations.workflows).",
      "properties": {
        "callLogLevel": {
          "enum": [
            "CALL_LOG_LEVEL_UNSPECIFIED",
            "LOG_ALL_CALLS",
            "LOG_ERRORS_ONLY",
            "LOG_NONE"
          ],
          "type": "string",
          "enumDescriptions": [
            "No call logging level specified.",
            "Log all call steps within workflows, all call returns, and all exceptions raised.",
            "Log only exceptions that are raised from call steps within workflows.",
            "Explicitly log nothing."
          ],
          "description": "The call logging level associated to this execution."
        },
        "stateError": {
          "readOnly": true,
          "description": "Output only. Error regarding the state of the Execution resource. For example, this field will have error details if the execution data is unavailable due to revoked KMS key permissions.",
          "$ref": "StateError"
        },
        "error": {
          "$ref": "Error",
          "readOnly": true,
          "description": "Output only. The error which caused the execution to finish prematurely. The value is only present if the execution's state is `FAILED` or `CANCELLED`."
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "Invalid state.",
            "The execution is in progress.",
            "The execution finished successfully.",
            "The execution failed with an error.",
            "The execution was stopped intentionally.",
            "Execution data is unavailable. See the `state_error` field."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED",
            "UNAVAILABLE"
          ],
          "type": "string",
          "description": "Output only. Current state of the execution."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels associated with this execution. Labels can contain at most 64 entries. Keys and values can be no longer than 63 characters and can only contain lowercase letters, numeric characters, underscores, and dashes. Label keys must start with a letter. International characters are allowed. By default, labels are inherited from the workflow but are overridden by any labels associated with the execution.",
          "type": "object"
        },
        "duration": {
          "description": "Output only. Measures the duration of the execution.",
          "type": "string",
          "readOnly": true,
          "format": "google-duration"
        },
        "status": {
          "description": "Output only. Status tracks the current steps and progress data of this execution.",
          "$ref": "Status",
          "readOnly": true
        },
        "argument": {
          "type": "string",
          "description": "Input parameters of the execution represented as a JSON string. The size limit is 32KB. *Note*: If you are using the REST API directly to run your workflow, you must escape any JSON string value of `argument`. Example: `'{\"argument\":\"{\\\"firstName\\\":\\\"FIRST\\\",\\\"lastName\\\":\\\"LAST\\\"}\"}'`"
        },
        "workflowRevisionId": {
          "type": "string",
          "description": "Output only. Revision of the workflow this execution is using.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the execution. Format: projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}",
          "readOnly": true
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Marks the end of execution, successful or not.",
          "format": "google-datetime"
        },
        "result": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Output of the execution represented as a JSON string. The value can only be present if the execution's state is `SUCCEEDED`."
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Marks the beginning of execution."
        }
      },
      "type": "object",
      "id": "Execution"
    },
    "PubsubMessage": {
      "properties": {
        "data": {
          "format": "byte",
          "type": "string",
          "description": "Optional. The message data field. If this field is empty, the message must contain at least one attribute."
        },
        "publishTime": {
          "description": "Optional. The time at which the message was published, populated by the server when it receives the `Publish` call. It must not be populated by the publisher in a `Publish` call.",
          "type": "string",
          "format": "google-datetime"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Attributes for this message. If this field is empty, the message must contain non-empty data. This can be used to filter messages on the subscription."
        },
        "orderingKey": {
          "type": "string",
          "description": "Optional. If non-empty, identifies related messages for which publish order should be respected. If a `Subscription` has `enable_message_ordering` set to `true`, messages published with the same non-empty `ordering_key` value will be delivered to subscribers in the order in which they are received by the Pub/Sub system. All `PubsubMessage`s published in a given `PublishRequest` must specify the same `ordering_key` value. For more information, see [ordering messages](https://cloud.google.com/pubsub/docs/ordering)."
        },
        "messageId": {
          "type": "string",
          "description": "Optional. ID of this message, assigned by the server when the message is published. Guaranteed to be unique within the topic. This value may be read by a subscriber that receives a `PubsubMessage` via a `Pull` call or a push delivery. It must not be populated by the publisher in a `Publish` call."
        }
      },
      "id": "PubsubMessage",
      "description": "A message that is published by publishers and consumed by subscribers. The message must contain either a non-empty data field or at least one attribute. Note that client libraries represent this object differently depending on the language. See the corresponding [client library documentation](https://cloud.google.com/pubsub/docs/reference/libraries) for more information. See [quotas and limits] (https://cloud.google.com/pubsub/quotas) for more information about message limits.",
      "type": "object"
    },
    "Position": {
      "properties": {
        "column": {
          "description": "The source code column position (of the line) the current instruction was generated from.",
          "format": "int64",
          "type": "string"
        },
        "line": {
          "type": "string",
          "format": "int64",
          "description": "The source code line number the current instruction was generated from."
        },
        "length": {
          "description": "The number of bytes of source code making up this stack trace element.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "Position contains source position information about the stack trace element such as line number, column number and length of the code block in bytes.",
      "id": "Position"
    },
    "CancelExecutionRequest": {
      "description": "Request for the CancelExecution method.",
      "id": "CancelExecutionRequest",
      "type": "object",
      "properties": {}
    }
  },
  "ownerDomain": "google.com",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "version": "v1",
  "revision": "20230710",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "workflows": {
              "resources": {
                "executions": {
                  "methods": {
                    "cancel": {
                      "response": {
                        "$ref": "Execution"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "workflowexecutions.projects.locations.workflows.executions.cancel",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions/{executionsId}:cancel",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "CancelExecutionRequest"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Cancels an execution of the given name.",
                      "path": "v1/{+name}:cancel",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the execution to be cancelled. Format: projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workflows/[^/]+/executions/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      }
                    },
                    "get": {
                      "response": {
                        "$ref": "Execution"
                      },
                      "description": "Returns an execution of the given name.",
                      "id": "workflowexecutions.projects.locations.workflows.executions.get",
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. Name of the execution to be retrieved. Format: projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workflows/[^/]+/executions/[^/]+$",
                          "type": "string",
                          "required": true
                        },
                        "view": {
                          "enum": [
                            "EXECUTION_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "type": "string",
                          "description": "Optional. A view defining which fields should be filled in the returned execution. The API will default to the FULL view.",
                          "location": "query",
                          "enumDescriptions": [
                            "The default / unset value.",
                            "Includes only basic metadata about the execution. The following fields are returned: name, start_time, end_time, duration, state, and workflow_revision_id.",
                            "Includes all data."
                          ]
                        }
                      },
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions/{executionsId}"
                    },
                    "list": {
                      "parameters": {
                        "orderBy": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. The ordering applied to the [Executions.ListExecutions] results. By default the ordering is based on descending start time. The following fields are supported for order by: executionID, startTime, endTime, duration, state, and workflowRevisionID."
                        },
                        "view": {
                          "location": "query",
                          "description": "Optional. A view defining which fields should be filled in the returned executions. The API will default to the BASIC view.",
                          "enumDescriptions": [
                            "The default / unset value.",
                            "Includes only basic metadata about the execution. The following fields are returned: name, start_time, end_time, duration, state, and workflow_revision_id.",
                            "Includes all data."
                          ],
                          "type": "string",
                          "enum": [
                            "EXECUTION_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ]
                        },
                        "filter": {
                          "description": "Optional. Filters applied to the [Executions.ListExecutions] results. The following fields are supported for filtering: executionID, state, startTime, endTime, duration, workflowRevisionID, stepName, and label.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "description": "Required. Name of the workflow for which the executions should be listed. Format: projects/{project}/locations/{location}/workflows/{workflow}",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/workflows/[^/]+$",
                          "location": "path"
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Maximum number of executions to return per call. Max supported value depends on the selected Execution view: it's 1000 for BASIC and 100 for FULL. The default value used if the field is not specified is 100, regardless of the selected view. Values greater than the max value will be coerced down to it.",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A page token, received from a previous `ListExecutions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListExecutions` must match the call that provided the page token. Note that pagination is applied to dynamic data. The list of executions returned can change between page requests."
                        }
                      },
                      "id": "workflowexecutions.projects.locations.workflows.executions.list",
                      "description": "Returns a list of executions which belong to the workflow with the given name. The method returns executions of all workflow revisions. Returned executions are ordered by their start time (newest first).",
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions",
                      "path": "v1/{+parent}/executions",
                      "response": {
                        "$ref": "ListExecutionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "create": {
                      "id": "workflowexecutions.projects.locations.workflows.executions.create",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions",
                      "request": {
                        "$ref": "Execution"
                      },
                      "httpMethod": "POST",
                      "description": "Creates a new execution using the latest revision of the given workflow.",
                      "response": {
                        "$ref": "Execution"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "description": "Required. Name of the workflow for which an execution should be created. Format: projects/{project}/locations/{location}/workflows/{workflow} The latest revision of the workflow will be used.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workflows/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+parent}/executions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "triggerPubsubExecution": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Execution"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "workflow"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}:triggerPubsubExecution",
                  "path": "v1/{+workflow}:triggerPubsubExecution",
                  "id": "workflowexecutions.projects.locations.workflows.triggerPubsubExecution",
                  "parameters": {
                    "workflow": {
                      "description": "Required. Name of the workflow for which an execution should be created. Format: projects/{project}/locations/{location}/workflows/{workflow}",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/workflows/[^/]+$",
                      "location": "path"
                    }
                  },
                  "description": "Triggers a new execution using the latest revision of the given workflow by a Pub/Sub push notification.",
                  "request": {
                    "$ref": "TriggerPubsubExecutionRequest"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "title": "Workflow Executions API",
  "documentationLink": "https://cloud.google.com/workflows",
  "baseUrl": "https://workflowexecutions.googleapis.com/",
  "kind": "discovery#restDescription",
  "rootUrl": "https://workflowexecutions.googleapis.com/",
  "mtlsRootUrl": "https://workflowexecutions.mtls.googleapis.com/",
  "basePath": "",
  "id": "workflowexecutions:v1",
  "name": "workflowexecutions"
}

{
  "version": "v1alpha",
  "ownerName": "Google",
  "baseUrl": "https://gkehub.googleapis.com/",
  "revision": "20230219",
  "description": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "name": "gkehub",
  "version_module": true,
  "protocol": "rest",
  "resources": {
    "organizations": {
      "resources": {
        "locations": {
          "resources": {
            "fleets": {
              "methods": {
                "list": {
                  "path": "v1alpha/{+parent}/fleets",
                  "response": {
                    "$ref": "ListFleetsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "Optional. A page token, received from a previous `ListFleets` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListFleets` must match the call that provided the page token.",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^organizations/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The organization or project to list for Fleets under, in the format `organizations/*/locations/*` or `projects/*/locations/*`.",
                      "location": "path"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of fleets to return. The service may return fewer than this value. If unspecified, at most 200 fleets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "description": "Returns all fleets within an organization or a project that the caller has access to.",
                  "flatPath": "v1alpha/organizations/{organizationsId}/locations/{locationsId}/fleets",
                  "id": "gkehub.organizations.locations.fleets.list",
                  "httpMethod": "GET"
                }
              }
            }
          }
        }
      }
    },
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "response": {
                "$ref": "Location"
              },
              "httpMethod": "GET",
              "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Gets information about a location.",
              "id": "gkehub.projects.locations.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1alpha/{+name}"
            },
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "flatPath": "v1alpha/projects/{projectsId}/locations",
              "path": "v1alpha/{+name}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "gkehub.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "pattern": "^projects/[^/]+$"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageToken": {
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                }
              }
            }
          },
          "resources": {
            "fleets": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListFleetsResponse"
                  },
                  "path": "v1alpha/{+parent}/fleets",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Returns all fleets within an organization or a project that the caller has access to.",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. The maximum number of fleets to return. The service may return fewer than this value. If unspecified, at most 200 fleets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    },
                    "pageToken": {
                      "description": "Optional. A page token, received from a previous `ListFleets` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListFleets` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The organization or project to list for Fleets under, in the format `organizations/*/locations/*` or `projects/*/locations/*`.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/fleets",
                  "httpMethod": "GET",
                  "id": "gkehub.projects.locations.fleets.list"
                },
                "get": {
                  "response": {
                    "$ref": "Fleet"
                  },
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/fleets/{fleetsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Returns the details of a fleet.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "gkehub.projects.locations.fleets.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/fleets/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The Fleet resource name in the format `projects/*/locations/*/fleets/*`."
                    }
                  }
                },
                "create": {
                  "id": "gkehub.projects.locations.fleets.create",
                  "path": "v1alpha/{+parent}/fleets",
                  "description": "Creates a fleet.",
                  "request": {
                    "$ref": "Fleet"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent (project and location) where the Fleet will be created. Specified in the format `projects/*/locations/*`."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/fleets"
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/fleets/[^/]+$",
                      "description": "Required. The Fleet resource name in the format `projects/*/locations/*/fleets/*`.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/fleets/{fleetsId}",
                  "path": "v1alpha/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "gkehub.projects.locations.fleets.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Removes a Fleet. There must be no memberships remaining in the Fleet."
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkehub.projects.locations.fleets.patch",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/fleets/{fleetsId}",
                  "request": {
                    "$ref": "Fleet"
                  },
                  "parameters": {
                    "updateMask": {
                      "description": "Required. The fields to be updated;",
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "description": "Output only. The full, unique resource name of this fleet in the format of `projects/{project}/locations/{location}/fleets/{fleet}`. Each GCP project can have at most one fleet resource, named \"default\".",
                      "pattern": "^projects/[^/]+/locations/[^/]+/fleets/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha/{+name}",
                  "description": "Updates a fleet."
                }
              }
            },
            "namespaces": {
              "resources": {
                "rbacrolebindings": {
                  "methods": {
                    "delete": {
                      "path": "v1alpha/{+name}",
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a RBACRoleBinding.",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+/rbacrolebindings/[^/]+$",
                          "description": "Required. The RBACRoleBinding resource name in the format `projects/*/locations/*/namespaces/*/rbacrolebindings/*`."
                        }
                      },
                      "id": "gkehub.projects.locations.namespaces.rbacrolebindings.delete",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/rbacrolebindings/{rbacrolebindingsId}",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "patch": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "PATCH",
                      "request": {
                        "$ref": "RBACRoleBinding"
                      },
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+/rbacrolebindings/[^/]+$",
                          "description": "The resource name for the rbacrolebinding `projects/{project}/locations/{location}/namespaces/{namespace}/rbacrolebindings/{rbacrolebinding}`",
                          "required": true
                        },
                        "updateMask": {
                          "description": "Required. The fields to be updated.",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        }
                      },
                      "path": "v1alpha/{+name}",
                      "description": "Updates a RBACRoleBinding.",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/rbacrolebindings/{rbacrolebindingsId}",
                      "id": "gkehub.projects.locations.namespaces.rbacrolebindings.patch",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "gkehub.projects.locations.namespaces.rbacrolebindings.list",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/rbacrolebindings",
                      "description": "Lists RBACRoleBinding.",
                      "parameters": {
                        "pageSize": {
                          "description": "Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                          "location": "query",
                          "format": "int32",
                          "type": "integer"
                        },
                        "parent": {
                          "description": "Required. The parent (project and location) where the Features will be listed. Specified in the format `projects/*/locations/*/namespaces/*`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "pageToken": {
                          "description": "Optional. Token returned by previous call to `ListRBACRoleBindings` which specifies the position in the list from where to continue listing the resources.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListRBACRoleBindingsResponse"
                      },
                      "path": "v1alpha/{+parent}/rbacrolebindings",
                      "httpMethod": "GET"
                    },
                    "get": {
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/rbacrolebindings/{rbacrolebindingsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Returns the details of a RBACRoleBinding.",
                      "id": "gkehub.projects.locations.namespaces.rbacrolebindings.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1alpha/{+name}",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "RBACRoleBinding"
                      },
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+/rbacrolebindings/[^/]+$",
                          "type": "string",
                          "description": "Required. The RBACRoleBinding resource name in the format `projects/*/locations/*/namespaces/*/rbacrolebindings/*`.",
                          "location": "path",
                          "required": true
                        }
                      }
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/rbacrolebindings",
                      "id": "gkehub.projects.locations.namespaces.rbacrolebindings.create",
                      "path": "v1alpha/{+parent}/rbacrolebindings",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a RBACRoleBinding.",
                      "parameters": {
                        "rbacrolebindingId": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. Client chosen ID for the RBACRoleBinding. `rbacrolebinding_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters."
                        },
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+$",
                          "description": "Required. The parent (project and location) where the RBACRoleBinding will be created. Specified in the format `projects/*/locations/*/namespaces/*`.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "request": {
                        "$ref": "RBACRoleBinding"
                      },
                      "httpMethod": "POST"
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListNamespacesResponse"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent (project and location) where the Features will be listed. Specified in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "pageSize": {
                      "description": "Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. Token returned by previous call to `ListFeatures` which specifies the position in the list from where to continue listing the resources.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/namespaces",
                  "description": "Lists fleet namespaces.",
                  "path": "v1alpha/{+parent}/namespaces",
                  "id": "gkehub.projects.locations.namespaces.list"
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Namespace"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent (project and location) where the Namespace will be created. Specified in the format `projects/*/locations/*`.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "namespaceId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Client chosen ID for the Namespace. `namespace_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkehub.projects.locations.namespaces.create",
                  "description": "Creates a fleet namespace.",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/namespaces",
                  "path": "v1alpha/{+parent}/namespaces"
                },
                "delete": {
                  "description": "Deletes a fleet namespace.",
                  "id": "gkehub.projects.locations.namespaces.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+$",
                      "description": "Required. The Namespace resource name in the format `projects/*/locations/*/namespaces/*`.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha/{+name}",
                  "id": "gkehub.projects.locations.namespaces.patch",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "The resource name for the namespace `projects/{project}/locations/{location}/namespaces/{namespace}`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "updateMask": {
                      "description": "Required. The fields to be updated.",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Updates a fleet namespace.",
                  "request": {
                    "$ref": "Namespace"
                  }
                },
                "get": {
                  "id": "gkehub.projects.locations.namespaces.get",
                  "response": {
                    "$ref": "Namespace"
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}",
                  "httpMethod": "GET",
                  "description": "Returns the details of a fleet namespace.",
                  "path": "v1alpha/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+$",
                      "location": "path",
                      "description": "Required. The Namespace resource name in the format `projects/*/locations/*/namespaces/*`.",
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            },
            "memberships": {
              "resources": {
                "bindings": {
                  "methods": {
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "MembershipBinding"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "description": "Creates a MembershipBinding.",
                      "parameters": {
                        "membershipBindingId": {
                          "description": "Required. The ID to use for the MembershipBinding.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. The parent (project and location) where the MembershipBinding will be created. Specified in the format `projects/*/locations/*/memberships/*`."
                        }
                      },
                      "id": "gkehub.projects.locations.memberships.bindings.create",
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1alpha/{+parent}/bindings",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings"
                    },
                    "patch": {
                      "path": "v1alpha/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings/{bindingsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PATCH",
                      "request": {
                        "$ref": "MembershipBinding"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+/bindings/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "The resource name for the membershipbinding itself `projects/{project}/locations/{location}/memberships/{membership}/bindings/{membershipbinding}`"
                        },
                        "updateMask": {
                          "format": "google-fieldmask",
                          "description": "Required. The fields to be updated.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "id": "gkehub.projects.locations.memberships.bindings.patch",
                      "description": "Updates a MembershipBinding."
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "gkehub.projects.locations.memberships.bindings.delete",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings/{bindingsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+/bindings/[^/]+$",
                          "type": "string",
                          "description": "Required. The MembershipBinding resource name in the format `projects/*/locations/*/memberships/*/bindings/*`.",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "DELETE",
                      "path": "v1alpha/{+name}",
                      "description": "Deletes a MembershipBinding."
                    },
                    "get": {
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1alpha/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "gkehub.projects.locations.memberships.bindings.get",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings/{bindingsId}",
                      "description": "Returns the details of a MembershipBinding.",
                      "response": {
                        "$ref": "MembershipBinding"
                      },
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. The MembershipBinding resource name in the format `projects/*/locations/*/memberships/*/bindings/*`.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+/bindings/[^/]+$",
                          "location": "path"
                        }
                      }
                    },
                    "list": {
                      "response": {
                        "$ref": "ListMembershipBindingsResponse"
                      },
                      "description": "Lists MembershipBindings.",
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "description": "Optional. Token returned by previous call to `ListMembershipBindings` which specifies the position in the list from where to continue listing the resources.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned."
                        },
                        "parent": {
                          "description": "Required. The parent Membership for which the MembershipBindings will be listed. Specified in the format `projects/*/locations/*/memberships/*`.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "gkehub.projects.locations.memberships.bindings.list",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings",
                      "path": "v1alpha/{+parent}/bindings"
                    }
                  }
                }
              },
              "methods": {
                "validateCreate": {
                  "httpMethod": "POST",
                  "id": "gkehub.projects.locations.memberships.validateCreate",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent (project and location) where the Memberships will be created. Specified in the format `projects/*/locations/*`.",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships:validateCreate",
                  "request": {
                    "$ref": "ValidateCreateMembershipRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha/{+parent}/memberships:validateCreate",
                  "description": "ValidateCreateMembership is a preflight check for CreateMembership. It checks the following: 1. Caller has the required `gkehub.memberships.create` permission. 2. The membership_id is still available.",
                  "response": {
                    "$ref": "ValidateCreateMembershipResponse"
                  }
                },
                "get": {
                  "path": "v1alpha/{+name}",
                  "id": "gkehub.projects.locations.memberships.get",
                  "response": {
                    "$ref": "Membership"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the details of a Membership.",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                      "description": "Required. The Membership resource name in the format `projects/*/locations/*/memberships/*`.",
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "listAdmin": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha/{+parent}/memberships:listAdmin",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships:listAdmin",
                  "parameters": {
                    "pageToken": {
                      "description": "Optional. Token returned by previous call to `ListAdminClusterMemberships` which specifies the position in the list from where to continue listing the resources.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned."
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Optional. One or more fields to compare and use to sort the output. See https://google.aip.dev/132#ordering.",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent (project and location) where the Memberships of admin cluster will be listed. Specified in the format `projects/*/locations/*`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "description": "Optional. Lists Memberships of admin clusters that match the filter expression.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ListAdminClusterMembershipsResponse"
                  },
                  "description": "Lists Memberships of admin clusters in a given project and location. **This method is only used internally**.",
                  "httpMethod": "GET",
                  "id": "gkehub.projects.locations.memberships.listAdmin",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "delete": {
                  "parameters": {
                    "force": {
                      "description": "Optional. If set to true, any subresource from this Membership will also be deleted. Otherwise, the request will only work if the Membership has no subresource.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                      "description": "Required. The Membership resource name in the format `projects/*/locations/*/memberships/*`.",
                      "type": "string",
                      "location": "path"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "path": "v1alpha/{+name}",
                  "id": "gkehub.projects.locations.memberships.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Removes a Membership. **This is currently only supported for GKE clusters on Google Cloud**. To unregister other clusters, follow the instructions at https://cloud.google.com/anthos/multicluster-management/connect/unregistering-a-cluster.",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}"
                },
                "setIamPolicy": {
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkehub.projects.locations.memberships.setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "httpMethod": "POST",
                  "path": "v1alpha/{+resource}:setIamPolicy"
                },
                "patch": {
                  "description": "Updates an existing Membership.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. Mask of fields to update."
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "description": "Required. The Membership resource name in the format `projects/*/locations/*/memberships/*`.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$"
                    }
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}",
                  "id": "gkehub.projects.locations.memberships.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "Membership"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha/{+name}"
                },
                "generateConnectManifest": {
                  "parameters": {
                    "namespace": {
                      "description": "Optional. Namespace for GKE Connect agent resources. Defaults to `gke-connect`. The Connect Agent is authorized automatically when run in the default namespace. Otherwise, explicit authorization must be granted with an additional IAM binding.",
                      "type": "string",
                      "location": "query"
                    },
                    "registry": {
                      "location": "query",
                      "description": "Optional. The registry to fetch the connect agent image from. Defaults to gcr.io/gkeconnect.",
                      "type": "string"
                    },
                    "isUpgrade": {
                      "description": "Optional. If true, generate the resources for upgrade only. Some resources generated only for installation (e.g. secrets) will be excluded.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "version": {
                      "type": "string",
                      "description": "Optional. The Connect agent version to use. Defaults to the most current version.",
                      "location": "query"
                    },
                    "proxy": {
                      "format": "byte",
                      "description": "Optional. URI of a proxy if connectivity from the agent to gkeconnect.googleapis.com requires the use of a proxy. Format must be in the form `http(s)://{proxy_address}`, depending on the HTTP/HTTPS protocol supported by the proxy. This will direct the connect agent's outbound traffic through a HTTP(S) proxy.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "description": "Required. The Membership resource name the Agent will associate with, in the format `projects/*/locations/*/memberships/*`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "imagePullSecretContent": {
                      "description": "Optional. The image pull secret content for the registry, if not public.",
                      "type": "string",
                      "format": "byte",
                      "location": "query"
                    }
                  },
                  "description": "Generates the manifest for deployment of the GKE connect agent. **This method is used internally by Google-provided libraries.** Most clients should not need to call this method directly.",
                  "httpMethod": "GET",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:generateConnectManifest",
                  "path": "v1alpha/{+name}:generateConnectManifest",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkehub.projects.locations.memberships.generateConnectManifest",
                  "response": {
                    "$ref": "GenerateConnectManifestResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "testIamPermissions": {
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1alpha/{+resource}:testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "id": "gkehub.projects.locations.memberships.testIamPermissions",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  }
                },
                "list": {
                  "path": "v1alpha/{+parent}/memberships",
                  "description": "Lists Memberships in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships",
                  "id": "gkehub.projects.locations.memberships.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageToken": {
                      "description": "Optional. Token returned by previous call to `ListMemberships` which specifies the position in the list from where to continue listing the resources.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "description": "Optional. Lists Memberships that match the filter expression, following the syntax outlined in https://google.aip.dev/160. Examples: - Name is `bar` in project `foo-proj` and location `global`: name = \"projects/foo-proj/locations/global/membership/bar\" - Memberships that have a label called `foo`: labels.foo:* - Memberships that have a label called `foo` whose value is `bar`: labels.foo = bar - Memberships in the CREATING state: state = CREATING",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned."
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The parent (project and location) where the Memberships will be listed. Specified in the format `projects/*/locations/*`. `projects/*/locations/-` list memberships in all the regions.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "orderBy": {
                      "description": "Optional. One or more fields to compare and use to sort the output. See https://google.aip.dev/132#ordering.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "ListMembershipsResponse"
                  },
                  "httpMethod": "GET"
                },
                "create": {
                  "parameters": {
                    "membershipId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Client chosen ID for the membership. `membership_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters."
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent (project and location) where the Memberships will be created. Specified in the format `projects/*/locations/*`.",
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new Membership. **This is currently only supported for GKE clusters on Google Cloud**. To register other clusters, follow the instructions at https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster.",
                  "request": {
                    "$ref": "Membership"
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha/{+parent}/memberships",
                  "httpMethod": "POST",
                  "id": "gkehub.projects.locations.memberships.create"
                },
                "getIamPolicy": {
                  "response": {
                    "$ref": "Policy"
                  },
                  "path": "v1alpha/{+resource}:getIamPolicy",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer"
                    }
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "id": "gkehub.projects.locations.memberships.getIamPolicy"
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "gkehub.projects.locations.operations.delete",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the operation resource to be deleted.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "httpMethod": "DELETE",
                  "path": "v1alpha/{+name}"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "gkehub.projects.locations.operations.get",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1alpha/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "path": "v1alpha/{+name}/operations",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkehub.projects.locations.operations.list",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "parameters": {
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "The standard list page size.",
                      "format": "int32"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "The name of the operation's parent resource.",
                      "location": "path"
                    }
                  }
                },
                "cancel": {
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "gkehub.projects.locations.operations.cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1alpha/{+name}:cancel"
                }
              }
            },
            "scopes": {
              "methods": {
                "list": {
                  "path": "v1alpha/{+parent}/scopes",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListScopesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent (project and location) where the Scope will be listed. Specified in the format `projects/*/locations/*`."
                    },
                    "pageSize": {
                      "description": "Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Token returned by previous call to `ListScopes` which specifies the position in the list from where to continue listing the resources."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists Scopes.",
                  "id": "gkehub.projects.locations.scopes.list",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/scopes"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha/{+name}",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a Scope.",
                  "parameters": {
                    "name": {
                      "description": "Required. The Scope resource name in the format `projects/*/locations/*/scopes/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/scopes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "gkehub.projects.locations.scopes.delete",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}"
                },
                "patch": {
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}",
                  "parameters": {
                    "name": {
                      "description": "The resource name for the scope `projects/{project}/locations/{location}/scopes/{scope}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/scopes/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "Required. The fields to be updated.",
                      "location": "query",
                      "format": "google-fieldmask"
                    }
                  },
                  "path": "v1alpha/{+name}",
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "Scope"
                  },
                  "id": "gkehub.projects.locations.scopes.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates a scopes.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "id": "gkehub.projects.locations.scopes.get",
                  "description": "Returns the details of a Scope.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The Scope resource name in the format `projects/*/locations/*/scopes/*`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/scopes/[^/]+$",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Scope"
                  }
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent (project and location) where the Scope will be created. Specified in the format `projects/*/locations/*`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "scopeId": {
                      "type": "string",
                      "description": "Required. Client chosen ID for the Scope. `scope_id` must be a ????",
                      "location": "query"
                    }
                  },
                  "request": {
                    "$ref": "Scope"
                  },
                  "httpMethod": "POST",
                  "path": "v1alpha/{+parent}/scopes",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a Scope.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "gkehub.projects.locations.scopes.create",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/scopes"
                }
              }
            },
            "features": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkehub.projects.locations.features.list",
                  "parameters": {
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "One or more fields to compare and use to sort the output. See https://google.aip.dev/132#ordering."
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned."
                    },
                    "filter": {
                      "description": "Lists Features that match the filter expression, following the syntax outlined in https://google.aip.dev/160. Examples: - Feature with the name \"servicemesh\" in project \"foo-proj\": name = \"projects/foo-proj/locations/global/features/servicemesh\" - Features that have a label called `foo`: labels.foo:* - Features that have a label called `foo` whose value is `bar`: labels.foo = bar",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. The parent (project and location) where the Features will be listed. Specified in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Token returned by previous call to `ListFeatures` which specifies the position in the list from where to continue listing the resources."
                    }
                  },
                  "path": "v1alpha/{+parent}/features",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists Features in a given project and location.",
                  "response": {
                    "$ref": "ListFeaturesResponse"
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/features"
                },
                "getIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer"
                    },
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "httpMethod": "GET",
                  "path": "v1alpha/{+resource}:getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:getIamPolicy",
                  "id": "gkehub.projects.locations.features.getIamPolicy"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Removes a Feature.",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "force": {
                      "location": "query",
                      "type": "boolean",
                      "description": "If set to true, the delete will ignore any outstanding resources for this Feature (that is, `FeatureState.has_resources` is set to true). These resources will NOT be cleaned up or modified in any way."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The Feature resource name in the format `projects/*/locations/*/features/*`.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/features/{featuresId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1alpha/{+name}",
                  "id": "gkehub.projects.locations.features.delete",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "id": "gkehub.projects.locations.features.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Feature"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha/{+name}",
                  "httpMethod": "PATCH",
                  "description": "Updates an existing Feature.",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/features/{featuresId}",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "Mask of fields to update.",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "description": "Required. The Feature resource name in the format `projects/*/locations/*/features/*`.",
                      "location": "path"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  }
                },
                "get": {
                  "id": "gkehub.projects.locations.features.get",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The Feature resource name in the format `projects/*/locations/*/features/*`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha/{+name}",
                  "description": "Gets details of a single Feature.",
                  "httpMethod": "GET",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/features/{featuresId}",
                  "response": {
                    "$ref": "Feature"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setIamPolicy": {
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "id": "gkehub.projects.locations.features.setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "path": "v1alpha/{+resource}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  }
                },
                "create": {
                  "parameters": {
                    "featureId": {
                      "location": "query",
                      "type": "string",
                      "description": "The ID of the feature to create."
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The parent (project and location) where the Feature will be created. Specified in the format `projects/*/locations/*`.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "Feature"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Adds a new Feature.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/features",
                  "httpMethod": "POST",
                  "id": "gkehub.projects.locations.features.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha/{+parent}/features"
                },
                "testIamPermissions": {
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "path": "v1alpha/{+resource}:testIamPermissions",
                  "id": "gkehub.projects.locations.features.testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameterOrder": [
                    "resource"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true",
      "type": "boolean"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "alt": {
      "location": "query",
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    }
  },
  "ownerDomain": "google.com",
  "canonicalName": "GKE Hub",
  "schemas": {
    "ConfigManagementGatekeeperDeploymentState": {
      "description": "State of Policy Controller installation.",
      "properties": {
        "gatekeeperControllerManagerState": {
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "Status of gatekeeper-controller-manager pod.",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        },
        "gatekeeperMutation": {
          "description": "Status of the pod serving the mutation webhook.",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "gatekeeperAudit": {
          "description": "Status of gatekeeper-audit deployment.",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        }
      },
      "type": "object",
      "id": "ConfigManagementGatekeeperDeploymentState"
    },
    "ConfigManagementHierarchyControllerConfig": {
      "type": "object",
      "id": "ConfigManagementHierarchyControllerConfig",
      "description": "Configuration for Hierarchy Controller",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether Hierarchy Controller is enabled in this cluster."
        },
        "enableHierarchicalResourceQuota": {
          "description": "Whether hierarchical resource quota is enabled in this cluster.",
          "type": "boolean"
        },
        "enablePodTreeLabels": {
          "description": "Whether pod tree labels are enabled in this cluster.",
          "type": "boolean"
        }
      }
    },
    "MembershipBindingLifecycleState": {
      "id": "MembershipBindingLifecycleState",
      "properties": {
        "code": {
          "enumDescriptions": [
            "The code is not set.",
            "The membershipbinding is being created.",
            "The membershipbinding active.",
            "The membershipbinding is being deleted.",
            "The membershipbinding is being updated."
          ],
          "enum": [
            "CODE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. The current state of the MembershipBinding resource."
        }
      },
      "type": "object",
      "description": "MembershipBindingLifecycleState describes the state of a Binding resource."
    },
    "IdentityServiceAzureADConfig": {
      "id": "IdentityServiceAzureADConfig",
      "description": "Configuration for the AzureAD Auth flow.",
      "type": "object",
      "properties": {
        "clientSecret": {
          "type": "string",
          "description": "Input only. Unencrypted AzureAD client secret will be passed to the GKE Hub CLH."
        },
        "kubectlRedirectUri": {
          "description": "The redirect URL that kubectl uses for authorization.",
          "type": "string"
        },
        "encryptedClientSecret": {
          "format": "byte",
          "readOnly": true,
          "description": "Output only. Encrypted AzureAD client secret.",
          "type": "string"
        },
        "tenant": {
          "type": "string",
          "description": "Kind of Azure AD account to be authenticated. Supported values are or for accounts belonging to a specific tenant."
        },
        "clientId": {
          "type": "string",
          "description": "ID for the registered client application that makes authentication requests to the Azure AD identity provider."
        }
      }
    },
    "Feature": {
      "description": "Feature represents the settings and status of any Hub Feature.",
      "properties": {
        "fleetDefaultMemberConfig": {
          "description": "Optional. Feature configuration applicable to all memberships of the fleet.",
          "$ref": "CommonFleetDefaultMemberConfigSpec"
        },
        "state": {
          "readOnly": true,
          "$ref": "CommonFeatureState",
          "description": "Output only. The Hub-wide Feature state."
        },
        "scopeSpecs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "ScopeFeatureSpec"
          },
          "description": "Optional. Scope-specific configuration for this Feature. If this Feature does not support any per-Scope configuration, this field may be unused. The keys indicate which Scope the configuration is for, in the form: `projects/{p}/locations/global/scopes/{s}` Where {p} is the project, {s} is a valid Scope in this project. {p} WILL match the Feature's project. {p} will always be returned as the project number, but the project ID is also accepted during input. If the same Scope is specified in the map twice (using the project ID form, and the project number form), exactly ONE of the entries will be saved, with no guarantees as to which. For this reason, it is recommended the same format be used for all entries when mutating a Feature."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. When the Feature resource was created."
        },
        "membershipStates": {
          "description": "Output only. Membership-specific Feature status. If this Feature does report any per-Membership status, this field may be unused. The keys indicate which Membership the state is for, in the form: `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the project number, {l} is a valid location and {m} is a valid Membership in this project at that location. {p} MUST match the Feature's project number.",
          "additionalProperties": {
            "$ref": "MembershipFeatureState"
          },
          "type": "object",
          "readOnly": true
        },
        "scopeStates": {
          "additionalProperties": {
            "$ref": "ScopeFeatureState"
          },
          "readOnly": true,
          "description": "Output only. Scope-specific Feature status. If this Feature does report any per-Scope status, this field may be unused. The keys indicate which Scope the state is for, in the form: `projects/{p}/locations/global/scopes/{s}` Where {p} is the project, {s} is a valid Scope in this project. {p} WILL match the Feature's project.",
          "type": "object"
        },
        "name": {
          "description": "Output only. The full, unique name of this Feature resource in the format `projects/*/locations/*/features/*`.",
          "type": "string",
          "readOnly": true
        },
        "deleteTime": {
          "description": "Output only. When the Feature resource was deleted.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "resourceState": {
          "readOnly": true,
          "$ref": "FeatureResourceState",
          "description": "Output only. State of the Feature resource itself."
        },
        "membershipSpecs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "MembershipFeatureSpec"
          },
          "description": "Optional. Membership-specific configuration for this Feature. If this Feature does not support any per-Membership configuration, this field may be unused. The keys indicate which Membership the configuration is for, in the form: `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the project, {l} is a valid location and {m} is a valid Membership in this project at that location. {p} WILL match the Feature's project. {p} will always be returned as the project number, but the project ID is also accepted during input. If the same Membership is specified in the map twice (using the project ID form, and the project number form), exactly ONE of the entries will be saved, with no guarantees as to which. For this reason, it is recommended the same format be used for all entries when mutating a Feature."
        },
        "spec": {
          "$ref": "CommonFeatureSpec",
          "description": "Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be unused."
        },
        "updateTime": {
          "description": "Output only. When the Feature resource was last updated.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "GCP labels for this Feature."
        }
      },
      "type": "object",
      "id": "Feature"
    },
    "PolicyControllerBundleInstallSpec": {
      "description": "BundleInstallSpec is the specification configuration for a single managed bundle.",
      "properties": {
        "management": {
          "enumDescriptions": [
            "No Management strategy has been specified.",
            "The entity should be insistently reconciled by the Hub controller"
          ],
          "description": "Management specifies how the bundle will be managed by the controller.",
          "type": "string",
          "enum": [
            "MANAGEMENT_UNSPECIFIED",
            "INSTALLED"
          ]
        },
        "exemptedNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "the set of namespaces to be exempted from the bundle"
        }
      },
      "id": "PolicyControllerBundleInstallSpec",
      "type": "object"
    },
    "PolicyControllerMembershipSpec": {
      "description": "**Policy Controller**: Configuration for a single cluster. Intended to parallel the PolicyController CR.",
      "id": "PolicyControllerMembershipSpec",
      "properties": {
        "version": {
          "type": "string",
          "description": "Version of Policy Controller installed."
        },
        "policyControllerHubConfig": {
          "$ref": "PolicyControllerHubConfig",
          "description": "Policy Controller configuration for the cluster."
        }
      },
      "type": "object"
    },
    "IdentityServiceOidcConfig": {
      "id": "IdentityServiceOidcConfig",
      "type": "object",
      "description": "Configuration for OIDC Auth flow.",
      "properties": {
        "encryptedClientSecret": {
          "description": "Output only. Encrypted OIDC Client secret",
          "type": "string",
          "readOnly": true,
          "format": "byte"
        },
        "groupsClaim": {
          "description": "Claim in OIDC ID token that holds group information.",
          "type": "string"
        },
        "clientId": {
          "type": "string",
          "description": "ID for OIDC client application."
        },
        "enableAccessToken": {
          "type": "boolean",
          "description": "Enable access token."
        },
        "extraParams": {
          "description": "Comma-separated list of key-value pairs.",
          "type": "string"
        },
        "deployCloudConsoleProxy": {
          "type": "boolean",
          "description": "Flag to denote if reverse proxy is used to connect to auth provider. This flag should be set to true when provider is not reachable by Google Cloud Console."
        },
        "kubectlRedirectUri": {
          "type": "string",
          "description": "Registered redirect uri to redirect users going through OAuth flow using kubectl plugin."
        },
        "certificateAuthorityData": {
          "description": "PEM-encoded CA for OIDC provider.",
          "type": "string"
        },
        "userClaim": {
          "description": "Claim in OIDC ID token that holds username.",
          "type": "string"
        },
        "groupPrefix": {
          "type": "string",
          "description": "Prefix to prepend to group name."
        },
        "issuerUri": {
          "description": "URI for the OIDC provider. This should point to the level below .well-known/openid-configuration.",
          "type": "string"
        },
        "clientSecret": {
          "type": "string",
          "description": "Input only. Unencrypted OIDC client secret will be passed to the GKE Hub CLH."
        },
        "userPrefix": {
          "type": "string",
          "description": "Prefix to prepend to user name."
        },
        "scopes": {
          "type": "string",
          "description": "Comma-separated list of identifiers."
        }
      }
    },
    "ResourceManifest": {
      "properties": {
        "clusterScoped": {
          "description": "Whether the resource provided in the manifest is `cluster_scoped`. If unset, the manifest is assumed to be namespace scoped. This field is used for REST mapping when applying the resource in a cluster.",
          "type": "boolean"
        },
        "manifest": {
          "description": "YAML manifest of the resource.",
          "type": "string"
        }
      },
      "id": "ResourceManifest",
      "type": "object",
      "description": "ResourceManifest represents a single Kubernetes resource to be applied to the cluster."
    },
    "MembershipFeatureState": {
      "type": "object",
      "description": "MembershipFeatureState contains Feature status information for a single Membership.",
      "properties": {
        "fleetobservability": {
          "description": "Fleet observability membership state.",
          "$ref": "FleetObservabilityMembershipState"
        },
        "metering": {
          "$ref": "MeteringMembershipState",
          "description": "Metering-specific state."
        },
        "state": {
          "$ref": "FeatureState",
          "description": "The high-level state of this Feature for a single membership."
        },
        "policycontroller": {
          "description": "Policycontroller-specific state.",
          "$ref": "PolicyControllerMembershipState"
        },
        "configmanagement": {
          "$ref": "ConfigManagementMembershipState",
          "description": "Config Management-specific state."
        },
        "identityservice": {
          "description": "Identity Service-specific state.",
          "$ref": "IdentityServiceMembershipState"
        },
        "servicemesh": {
          "description": "Service Mesh-specific state.",
          "$ref": "ServiceMeshMembershipState"
        },
        "appdevexperience": {
          "$ref": "AppDevExperienceFeatureState",
          "description": "Appdevexperience specific state."
        }
      },
      "id": "MembershipFeatureState"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "id": "ListLocationsResponse"
    },
    "ConfigManagementOperatorState": {
      "description": "State information for an ACM's Operator",
      "id": "ConfigManagementOperatorState",
      "properties": {
        "errors": {
          "description": "Install errors.",
          "type": "array",
          "items": {
            "$ref": "ConfigManagementInstallError"
          }
        },
        "version": {
          "description": "The semenatic version number of the operator",
          "type": "string"
        },
        "deploymentState": {
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "The state of the Operator's deployment"
        }
      },
      "type": "object"
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
        },
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        }
      }
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "ConfigManagementPolicyControllerVersion": {
      "description": "The build version of Gatekeeper Policy Controller is using.",
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "The gatekeeper image tag that is composed of ACM version, git tag, build number."
        }
      },
      "id": "ConfigManagementPolicyControllerVersion"
    },
    "ScopeLifecycleState": {
      "type": "object",
      "description": "ScopeLifecycleState describes the state of a Scope resource.",
      "id": "ScopeLifecycleState",
      "properties": {
        "code": {
          "enumDescriptions": [
            "The code is not set.",
            "The scope is being created.",
            "The scope active.",
            "The scope is being deleted.",
            "The scope is being updated."
          ],
          "enum": [
            "CODE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ],
          "description": "Output only. The current state of the scope resource.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "CommonFeatureState": {
      "type": "object",
      "properties": {
        "servicemesh": {
          "$ref": "ServiceMeshFeatureState",
          "description": "Service Mesh-specific state."
        },
        "fleetobservability": {
          "$ref": "FleetObservabilityFeatureState",
          "description": "FleetObservability feature state."
        },
        "appdevexperience": {
          "$ref": "AppDevExperienceFeatureState",
          "description": "Appdevexperience specific state."
        },
        "state": {
          "description": "Output only. The \"running state\" of the Feature in this Hub.",
          "$ref": "FeatureState",
          "readOnly": true
        }
      },
      "description": "CommonFeatureState contains Hub-wide Feature status information.",
      "id": "CommonFeatureState"
    },
    "MembershipSpec": {
      "id": "MembershipSpec",
      "properties": {
        "certificateManagement": {
          "description": "Specifies workload certificate management.",
          "enumDescriptions": [
            "Disable workload certificate feature.",
            "Disable workload certificate feature.",
            "Enable workload certificate feature."
          ],
          "enum": [
            "CERTIFICATE_MANAGEMENT_UNSPECIFIED",
            "DISABLED",
            "ENABLED"
          ],
          "type": "string"
        }
      },
      "description": "**Workload Certificate**: The membership-specific input for WorkloadCertificate feature.",
      "type": "object"
    },
    "ConfigManagementHierarchyControllerVersion": {
      "description": "Version for Hierarchy Controller",
      "type": "object",
      "properties": {
        "extension": {
          "description": "Version for Hierarchy Controller extension",
          "type": "string"
        },
        "hnc": {
          "description": "Version for open source HNC",
          "type": "string"
        }
      },
      "id": "ConfigManagementHierarchyControllerVersion"
    },
    "PolicyControllerHubConfig": {
      "description": "Configuration for Policy Controller",
      "properties": {
        "constraintViolationLimit": {
          "format": "int64",
          "type": "string",
          "description": "The maximum number of audit violations to be stored in a constraint. If not set, the internal default (currently 20) will be used."
        },
        "templateLibraryConfig": {
          "description": "Configures the library templates to install along with Policy Controller.",
          "$ref": "PolicyControllerTemplateLibraryConfig"
        },
        "monitoring": {
          "description": "Monitoring specifies the configuration of monitoring.",
          "$ref": "PolicyControllerMonitoringConfig"
        },
        "installSpec": {
          "enum": [
            "INSTALL_SPEC_UNSPECIFIED",
            "INSTALL_SPEC_NOT_INSTALLED",
            "INSTALL_SPEC_ENABLED",
            "INSTALL_SPEC_SUSPENDED"
          ],
          "type": "string",
          "description": "The install_spec represents the intended state specified by the latest request that mutated install_spec in the feature spec, not the lifecycle state of the feature observed by the Hub feature controller that is reported in the feature state.",
          "enumDescriptions": [
            "Spec is unknown.",
            "Request to uninstall Policy Controller.",
            "Request to install and enable Policy Controller.",
            "Request to suspend Policy Controller i.e. its webhooks. If Policy Controller is not installed, it will be installed but suspended."
          ]
        },
        "mutationEnabled": {
          "type": "boolean",
          "description": "Enables the ability to mutate resources using Policy Controller."
        },
        "exemptableNamespaces": {
          "items": {
            "type": "string"
          },
          "description": "The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.",
          "type": "array"
        },
        "deploymentConfigs": {
          "type": "object",
          "description": "Map of deployment configs to deployments (“admission”, “audit”, “mutation”).",
          "additionalProperties": {
            "$ref": "PolicyControllerPolicyControllerDeploymentConfig"
          }
        },
        "referentialRulesEnabled": {
          "type": "boolean",
          "description": "Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated."
        },
        "policyContent": {
          "$ref": "PolicyControllerPolicyContentSpec",
          "description": "Specifies the desired policy content on the cluster"
        },
        "auditIntervalSeconds": {
          "description": "Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.",
          "format": "int64",
          "type": "string"
        },
        "logDeniesEnabled": {
          "description": "Logs all denies and dry run failures.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "PolicyControllerHubConfig"
    },
    "ConfigManagementHierarchyControllerState": {
      "id": "ConfigManagementHierarchyControllerState",
      "description": "State for Hierarchy Controller",
      "type": "object",
      "properties": {
        "version": {
          "description": "The version for Hierarchy Controller",
          "$ref": "ConfigManagementHierarchyControllerVersion"
        },
        "state": {
          "description": "The deployment state for Hierarchy Controller",
          "$ref": "ConfigManagementHierarchyControllerDeploymentState"
        }
      }
    },
    "Binding": {
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        },
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "members": {
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "Binding"
    },
    "PolicyControllerResourceList": {
      "type": "object",
      "description": "ResourceList contains container resource requirements.",
      "properties": {
        "memory": {
          "type": "string",
          "description": "Memory requirement expressed in Kubernetes resource units."
        },
        "cpu": {
          "description": "CPU requirement expressed in Kubernetes resource units.",
          "type": "string"
        }
      },
      "id": "PolicyControllerResourceList"
    },
    "ListFeaturesResponse": {
      "type": "object",
      "description": "Response message for the `GkeHub.ListFeatures` method.",
      "properties": {
        "nextPageToken": {
          "description": "A token to request the next page of resources from the `ListFeatures` method. The value of an empty string means that there are no more resources to return.",
          "type": "string"
        },
        "resources": {
          "items": {
            "$ref": "Feature"
          },
          "description": "The list of matching Features",
          "type": "array"
        }
      },
      "id": "ListFeaturesResponse"
    },
    "TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsRequest",
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Policy": {
      "type": "object",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "id": "Policy",
      "properties": {
        "version": {
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32"
        },
        "auditConfigs": {
          "items": {
            "$ref": "AuditConfig"
          },
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array"
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "etag": {
          "type": "string",
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        }
      }
    },
    "ConfigManagementGroupVersionKind": {
      "id": "ConfigManagementGroupVersionKind",
      "description": "A Kubernetes object's GVK",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Kubernetes Kind",
          "type": "string"
        },
        "group": {
          "type": "string",
          "description": "Kubernetes Group"
        },
        "version": {
          "type": "string",
          "description": "Kubernetes Version"
        }
      }
    },
    "AnthosObservabilityFeatureSpec": {
      "id": "AnthosObservabilityFeatureSpec",
      "type": "object",
      "description": "**Anthos Observability**: Spec",
      "properties": {
        "defaultMembershipSpec": {
          "description": "Default membership spec for unconfigured memberships",
          "$ref": "AnthosObservabilityMembershipSpec"
        }
      }
    },
    "RBACRoleBindingLifecycleState": {
      "id": "RBACRoleBindingLifecycleState",
      "properties": {
        "code": {
          "type": "string",
          "description": "Output only. The current state of the rbacrolebinding resource.",
          "enum": [
            "CODE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ],
          "enumDescriptions": [
            "The code is not set.",
            "The rbacrolebinding is being created.",
            "The rbacrolebinding active.",
            "The rbacrolebinding is being deleted.",
            "The rbacrolebinding is being updated."
          ],
          "readOnly": true
        }
      },
      "description": "RBACRoleBindingLifecycleState describes the state of a RbacRoleBinding resource.",
      "type": "object"
    },
    "MembershipEndpoint": {
      "properties": {
        "kubernetesMetadata": {
          "readOnly": true,
          "$ref": "KubernetesMetadata",
          "description": "Output only. Useful Kubernetes-specific metadata."
        },
        "applianceCluster": {
          "$ref": "ApplianceCluster",
          "description": "Optional. Specific information for a GDC Edge Appliance cluster."
        },
        "onPremCluster": {
          "$ref": "OnPremCluster",
          "description": "Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil \"type\" instead."
        },
        "multiCloudCluster": {
          "$ref": "MultiCloudCluster",
          "description": "Optional. Specific information for a GKE Multi-Cloud cluster."
        },
        "gkeCluster": {
          "$ref": "GkeCluster",
          "description": "Optional. Specific information for a GKE-on-GCP cluster."
        },
        "edgeCluster": {
          "$ref": "EdgeCluster",
          "description": "Optional. Specific information for a Google Edge cluster."
        },
        "googleManaged": {
          "readOnly": true,
          "description": "Output only. Whether the lifecycle of this membership is managed by a google cluster platform service.",
          "type": "boolean"
        },
        "kubernetesResource": {
          "description": "Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.",
          "$ref": "KubernetesResource"
        }
      },
      "type": "object",
      "description": "MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.",
      "id": "MembershipEndpoint"
    },
    "ConfigManagementPolicyControllerMonitoring": {
      "properties": {
        "backends": {
          "items": {
            "type": "string",
            "enum": [
              "MONITORING_BACKEND_UNSPECIFIED",
              "PROMETHEUS",
              "CLOUD_MONITORING"
            ],
            "enumDescriptions": [
              "Backend cannot be determined",
              "Prometheus backend for monitoring",
              "Stackdriver/Cloud Monitoring backend for monitoring"
            ]
          },
          "type": "array",
          "description": "Specifies the list of backends Policy Controller will export to. An empty list would effectively disable metrics export."
        }
      },
      "id": "ConfigManagementPolicyControllerMonitoring",
      "type": "object",
      "description": "PolicyControllerMonitoring specifies the backends Policy Controller should export metrics to. For example, to specify metrics should be exported to Cloud Monitoring and Prometheus, specify backends: [\"cloudmonitoring\", \"prometheus\"]"
    },
    "ServiceMeshFeatureState": {
      "description": "**Service Mesh**: State for the whole Hub, as analyzed by the Service Mesh Hub Controller.",
      "type": "object",
      "properties": {
        "analysisMessages": {
          "type": "array",
          "items": {
            "$ref": "ServiceMeshAnalysisMessage"
          },
          "readOnly": true,
          "description": "Output only. Results of running Service Mesh analyzers."
        }
      },
      "id": "ServiceMeshFeatureState"
    },
    "ConfigManagementHierarchyControllerDeploymentState": {
      "type": "object",
      "properties": {
        "extension": {
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string",
          "description": "The deployment state for Hierarchy Controller extension (e.g. v0.7.0-hc.1)"
        },
        "hnc": {
          "type": "string",
          "description": "The deployment state for open source HNC (e.g. v0.7.0-hc.0)",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        }
      },
      "id": "ConfigManagementHierarchyControllerDeploymentState",
      "description": "Deployment state for Hierarchy Controller"
    },
    "ListAdminClusterMembershipsResponse": {
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "List of locations that could not be reached while fetching this list.",
          "type": "array"
        },
        "adminClusterMemberships": {
          "description": "The list of matching Memberships of admin clusters.",
          "items": {
            "$ref": "Membership"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token to request the next page of resources from the `ListAdminClusterMemberships` method. The value of an empty string means that there are no more resources to return.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListAdminClusterMembershipsResponse",
      "description": "Response message for the `GkeHub.ListAdminClusterMemberships` method."
    },
    "PolicyControllerToleration": {
      "properties": {
        "value": {
          "description": "Matches a taint value.",
          "type": "string"
        },
        "effect": {
          "type": "string",
          "description": "Matches a taint effect."
        },
        "operator": {
          "description": "Matches a taint operator.",
          "type": "string"
        },
        "key": {
          "type": "string",
          "description": "Matches a taint key (not necessarily unique)."
        }
      },
      "type": "object",
      "id": "PolicyControllerToleration",
      "description": "Toleration of a node taint."
    },
    "ListMembershipBindingsResponse": {
      "id": "ListMembershipBindingsResponse",
      "description": "List of MembershipBindings.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to request the next page of resources from the `ListMembershipBindings` method. The value of an empty string means that there are no more resources to return.",
          "type": "string"
        },
        "membershipBindings": {
          "items": {
            "$ref": "MembershipBinding"
          },
          "type": "array",
          "description": "The list of membership_bindings"
        }
      }
    },
    "MembershipBinding": {
      "properties": {
        "scope": {
          "description": "A Workspace resource name in the format `projects/*/locations/*/scopes/*`.",
          "type": "string"
        },
        "deleteTime": {
          "description": "Output only. When the membership binding was deleted.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "fleet": {
          "type": "boolean",
          "description": "Whether the membershipbinding is Fleet-wide; true means that this Membership should be bound to all Namespaces in this entire Fleet."
        },
        "state": {
          "readOnly": true,
          "description": "Output only. State of the membership binding resource.",
          "$ref": "MembershipBindingLifecycleState"
        },
        "uid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Google-generated UUID for this resource. This is unique across all membershipbinding resources. If a membershipbinding resource is deleted and another resource with the same name is created, it gets a different uid."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. When the membership binding was created.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. When the membership binding was last updated.",
          "format": "google-datetime",
          "readOnly": true
        },
        "name": {
          "description": "The resource name for the membershipbinding itself `projects/{project}/locations/{location}/memberships/{membership}/bindings/{membershipbinding}`",
          "type": "string"
        }
      },
      "type": "object",
      "id": "MembershipBinding",
      "description": "MembershipBinding is a subresource of a Membership, representing what Fleet Scopes (or other, future Fleet resources) a Membership is bound to."
    },
    "IdentityServiceMembershipState": {
      "properties": {
        "memberConfig": {
          "$ref": "IdentityServiceMembershipSpec",
          "description": "Last reconciled membership configuration"
        },
        "failureReason": {
          "description": "The reason of the failure.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "Unspecified state",
            "deployment succeeds",
            "Failure with error."
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "OK",
            "ERROR"
          ],
          "type": "string",
          "description": "Deployment state on this member"
        },
        "installedVersion": {
          "description": "Installed AIS version. This is the AIS version installed on this member. The values makes sense iff state is OK.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "IdentityServiceMembershipState",
      "description": "**Anthos Identity Service**: State for a single Membership."
    },
    "ConfigManagementConfigSync": {
      "type": "object",
      "description": "Configuration for Config Sync",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enables the installation of ConfigSync. If set to true, ConfigSync resources will be created and the other ConfigSync fields will be applied if exist. If set to false, all other ConfigSync fields will be ignored, ConfigSync resources will be deleted. If omitted, ConfigSync resources will be managed depends on the presence of git field."
        },
        "allowVerticalScale": {
          "type": "boolean",
          "description": "Set to true to allow the vertical scaling. Defaults to false which disallows vertical scaling. This field is deprecated."
        },
        "git": {
          "$ref": "ConfigManagementGitConfig",
          "description": "Git repo configuration for the cluster."
        },
        "oci": {
          "$ref": "ConfigManagementOciConfig",
          "description": "OCI repo configuration for the cluster"
        },
        "sourceFormat": {
          "type": "string",
          "description": "Specifies whether the Config Sync Repo is in \"hierarchical\" or \"unstructured\" mode."
        },
        "preventDrift": {
          "description": "Set to true to enable the Config Sync admission webhook to prevent drifts. If set to `false`, disables the Config Sync admission webhook and does not prevent drifts.",
          "type": "boolean"
        }
      },
      "id": "ConfigManagementConfigSync"
    },
    "OperationMetadata": {
      "properties": {
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "apiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. API version used to start the operation."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        },
        "statusDetail": {
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true
        },
        "cancelRequested": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation."
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string"
        }
      },
      "description": "Represents the metadata of the long-running operation.",
      "id": "OperationMetadata",
      "type": "object"
    },
    "ServiceMeshMembershipSpec": {
      "description": "**Service Mesh**: Spec for a single Membership for the servicemesh feature",
      "properties": {
        "controlPlane": {
          "enum": [
            "CONTROL_PLANE_MANAGEMENT_UNSPECIFIED",
            "AUTOMATIC",
            "MANUAL"
          ],
          "type": "string",
          "description": "Enables automatic control plane management.",
          "enumDescriptions": [
            "Unspecified",
            "Google should provision a control plane revision and make it available in the cluster. Google will enroll this revision in a release channel and keep it up to date. The control plane revision may be a managed service, or a managed install.",
            "User will manually configure the control plane (e.g. via CLI, or via the ControlPlaneRevision KRM API)"
          ]
        },
        "management": {
          "type": "string",
          "description": "Enables automatic Service Mesh management.",
          "enumDescriptions": [
            "Unspecified",
            "Google should manage my Service Mesh for the cluster.",
            "User will manually configure their service mesh components."
          ],
          "enum": [
            "MANAGEMENT_UNSPECIFIED",
            "MANAGEMENT_AUTOMATIC",
            "MANAGEMENT_MANUAL"
          ]
        },
        "defaultChannel": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified",
            "RAPID channel is offered on an early access basis for customers who want to test new releases.",
            "REGULAR channel is intended for production users who want to take advantage of new features.",
            "STABLE channel includes versions that are known to be stable and reliable in production."
          ],
          "description": "Determines which release channel to use for default injection and service mesh APIs.",
          "enum": [
            "CHANNEL_UNSPECIFIED",
            "RAPID",
            "REGULAR",
            "STABLE"
          ]
        }
      },
      "id": "ServiceMeshMembershipSpec",
      "type": "object"
    },
    "ConfigManagementSyncError": {
      "properties": {
        "errorResources": {
          "items": {
            "$ref": "ConfigManagementErrorResource"
          },
          "description": "A list of config(s) associated with the error, if any",
          "type": "array"
        },
        "errorMessage": {
          "description": "A description of the error",
          "type": "string"
        },
        "code": {
          "description": "An ACM defined error code",
          "type": "string"
        }
      },
      "description": "An ACM created error representing a problem syncing configurations",
      "type": "object",
      "id": "ConfigManagementSyncError"
    },
    "ListScopesResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to request the next page of resources from the `ListScopes` method. The value of an empty string means that there are no more resources to return.",
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "description": "The list of Scopes",
          "items": {
            "$ref": "Scope"
          }
        }
      },
      "id": "ListScopesResponse",
      "description": "List of Scopes."
    },
    "Status": {
      "id": "Status",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description is populated if Code is Failed, explaining why it has failed.",
          "type": "string"
        },
        "code": {
          "type": "string",
          "description": "Code specifies AppDevExperienceFeature's subcomponent ready state.",
          "enum": [
            "CODE_UNSPECIFIED",
            "OK",
            "FAILED",
            "UNKNOWN"
          ],
          "enumDescriptions": [
            "Not set.",
            "AppDevExperienceFeature's specified subcomponent is ready.",
            "AppDevExperienceFeature's specified subcomponent ready state is false. This means AppDevExperienceFeature has encountered an issue that blocks all, or a portion, of its normal operation. See the `description` for more details.",
            "AppDevExperienceFeature's specified subcomponent has a pending or unknown state."
          ]
        }
      },
      "description": "Status specifies state for the subcomponent."
    },
    "Role": {
      "description": "Role is the type for Kubernetes roles",
      "id": "Role",
      "type": "object",
      "properties": {
        "predefinedRole": {
          "type": "string",
          "description": "predefined_role is the Kubernetes default role to use",
          "enum": [
            "UNKNOWN",
            "ADMIN",
            "EDIT",
            "VIEW"
          ],
          "enumDescriptions": [
            "UNKNOWN",
            "ADMIN has EDIT and RBAC permissions",
            "EDIT can edit all resources except RBAC",
            "VIEW can only read resources"
          ]
        }
      }
    },
    "IdentityServiceAuthMethod": {
      "type": "object",
      "description": "Configuration of an auth method for a member/cluster. Only one authentication method (e.g., OIDC and LDAP) can be set per AuthMethod.",
      "properties": {
        "oidcConfig": {
          "description": "OIDC specific configuration.",
          "$ref": "IdentityServiceOidcConfig"
        },
        "azureadConfig": {
          "description": "AzureAD specific Configuration.",
          "$ref": "IdentityServiceAzureADConfig"
        },
        "proxy": {
          "type": "string",
          "description": "Proxy server address to use for auth method."
        },
        "googleConfig": {
          "description": "GoogleConfig specific configuration",
          "$ref": "IdentityServiceGoogleConfig"
        },
        "name": {
          "type": "string",
          "description": "Identifier for auth config."
        }
      },
      "id": "IdentityServiceAuthMethod"
    },
    "FeatureResourceState": {
      "properties": {
        "state": {
          "type": "string",
          "enumDescriptions": [
            "State is unknown or not set.",
            "The Feature is being enabled, and the Feature resource is being created. Once complete, the corresponding Feature will be enabled in this Hub.",
            "The Feature is enabled in this Hub, and the Feature resource is fully available.",
            "The Feature is being disabled in this Hub, and the Feature resource is being deleted.",
            "The Feature resource is being updated.",
            "The Feature resource is being updated by the Hub Service."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ENABLING",
            "ACTIVE",
            "DISABLING",
            "UPDATING",
            "SERVICE_UPDATING"
          ],
          "description": "The current state of the Feature resource in the Hub API."
        }
      },
      "description": "FeatureResourceState describes the state of a Feature *resource* in the GkeHub API. See `FeatureState` for the \"running state\" of the Feature in the Hub and across Memberships.",
      "type": "object",
      "id": "FeatureResourceState"
    },
    "MeteringMembershipState": {
      "id": "MeteringMembershipState",
      "properties": {
        "preciseLastMeasuredClusterVcpuCapacity": {
          "format": "float",
          "type": "number",
          "description": "The vCPUs capacity in the cluster according to the most recent measurement (1/1000 precision)."
        },
        "lastMeasurementTime": {
          "type": "string",
          "description": "The time stamp of the most recent measurement of the number of vCPUs in the cluster.",
          "format": "google-datetime"
        }
      },
      "description": "**Metering**: Per-Membership Feature State.",
      "type": "object"
    },
    "ConfigManagementConfigSyncVersion": {
      "type": "object",
      "description": "Specific versioning information pertaining to ConfigSync's Pods",
      "id": "ConfigManagementConfigSyncVersion",
      "properties": {
        "monitor": {
          "type": "string",
          "description": "Version of the deployed monitor pod"
        },
        "rootReconciler": {
          "type": "string",
          "description": "Version of the deployed reconciler container in root-reconciler pod"
        },
        "admissionWebhook": {
          "description": "Version of the deployed admission_webhook pod",
          "type": "string"
        },
        "importer": {
          "type": "string",
          "description": "Version of the deployed importer pod"
        },
        "reconcilerManager": {
          "description": "Version of the deployed reconciler-manager pod",
          "type": "string"
        },
        "gitSync": {
          "type": "string",
          "description": "Version of the deployed git-sync pod"
        },
        "syncer": {
          "type": "string",
          "description": "Version of the deployed syncer pod"
        }
      }
    },
    "ServiceMeshAnalysisMessageBase": {
      "properties": {
        "level": {
          "description": "Represents how severe a message is.",
          "enum": [
            "LEVEL_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ],
          "enumDescriptions": [
            "Illegal. Same istio.analysis.v1alpha1.AnalysisMessageBase.Level.UNKNOWN.",
            "ERROR represents a misconfiguration that must be fixed.",
            "WARNING represents a misconfiguration that should be fixed.",
            "INFO represents an informational finding."
          ],
          "type": "string"
        },
        "type": {
          "$ref": "ServiceMeshType",
          "description": "Represents the specific type of a message."
        },
        "documentationUrl": {
          "description": "A url pointing to the Service Mesh or Istio documentation for this specific error type.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ServiceMeshAnalysisMessageBase",
      "description": "AnalysisMessageBase describes some common information that is needed for all messages."
    },
    "ConfigManagementBinauthzVersion": {
      "id": "ConfigManagementBinauthzVersion",
      "description": "The version of binauthz.",
      "properties": {
        "webhookVersion": {
          "type": "string",
          "description": "The version of the binauthz webhook."
        }
      },
      "type": "object"
    },
    "ScopeFeatureSpec": {
      "type": "object",
      "properties": {},
      "description": "ScopeFeatureSpec contains feature specs for a fleet scope.",
      "id": "ScopeFeatureSpec"
    },
    "ListMembershipsResponse": {
      "description": "Response message for the `GkeHub.ListMemberships` method.",
      "properties": {
        "resources": {
          "description": "The list of matching Memberships.",
          "type": "array",
          "items": {
            "$ref": "Membership"
          }
        },
        "nextPageToken": {
          "description": "A token to request the next page of resources from the `ListMemberships` method. The value of an empty string means that there are no more resources to return.",
          "type": "string"
        },
        "unreachable": {
          "description": "List of locations that could not be reached while fetching this list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ListMembershipsResponse",
      "type": "object"
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {}
    },
    "IdentityServiceGoogleConfig": {
      "type": "object",
      "properties": {
        "disable": {
          "type": "boolean",
          "description": "Disable automatic configuration of Google Plugin on supported platforms."
        }
      },
      "id": "IdentityServiceGoogleConfig",
      "description": "Configuration for the Google Plugin Auth flow."
    },
    "Empty": {
      "type": "object",
      "properties": {},
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "FeatureSpec": {
      "properties": {
        "provisionGoogleCa": {
          "type": "string",
          "enumDescriptions": [
            "Disable default Google managed CA.",
            "Disable default Google managed CA.",
            "Use default Google managed CA."
          ],
          "enum": [
            "GOOGLE_CA_PROVISIONING_UNSPECIFIED",
            "DISABLED",
            "ENABLED"
          ],
          "description": "Immutable. Specifies CA configuration."
        },
        "defaultConfig": {
          "$ref": "MembershipSpec",
          "description": "Specifies default membership spec. Users can override the default in the member_configs for each member."
        }
      },
      "type": "object",
      "id": "FeatureSpec",
      "description": "**Workload Certificate**: The Hub-wide input for the WorkloadCertificate feature."
    },
    "FleetObservabilityMembershipSpec": {
      "id": "FleetObservabilityMembershipSpec",
      "properties": {},
      "type": "object",
      "description": "**FleetObservability**: The membership-specific input for FleetObservability feature."
    },
    "GenerateConnectManifestResponse": {
      "type": "object",
      "id": "GenerateConnectManifestResponse",
      "description": "GenerateConnectManifestResponse contains manifest information for installing/upgrading a Connect agent.",
      "properties": {
        "manifest": {
          "items": {
            "$ref": "ConnectAgentResource"
          },
          "type": "array",
          "description": "The ordered list of Kubernetes resources that need to be applied to the cluster for GKE Connect agent installation/upgrade."
        }
      }
    },
    "PolicyControllerResourceRequirements": {
      "id": "PolicyControllerResourceRequirements",
      "properties": {
        "requests": {
          "$ref": "PolicyControllerResourceList",
          "description": "Requests describes the amount of compute resources reserved for the container by the kube-scheduler."
        },
        "limits": {
          "description": "Limits describes the maximum amount of compute resources allowed for use by the running container.",
          "$ref": "PolicyControllerResourceList"
        }
      },
      "type": "object",
      "description": "ResourceRequirements describes the compute resource requirements."
    },
    "PolicyControllerTemplateLibraryConfig": {
      "id": "PolicyControllerTemplateLibraryConfig",
      "type": "object",
      "description": "The config specifying which default library templates to install.",
      "properties": {
        "included": {
          "type": "boolean",
          "description": "Whether the standard template library should be installed or not."
        }
      }
    },
    "ConfigManagementBinauthzConfig": {
      "description": "Configuration for Binauthz",
      "id": "ConfigManagementBinauthzConfig",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether binauthz is enabled in this cluster."
        }
      }
    },
    "TypeMeta": {
      "type": "object",
      "description": "TypeMeta is the type information needed for content unmarshalling of Kubernetes resources in the manifest.",
      "id": "TypeMeta",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "APIVersion of the resource (e.g. v1)."
        },
        "kind": {
          "type": "string",
          "description": "Kind of the resource (e.g. Deployment)."
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "properties": {
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        },
        "auditLogConfigs": {
          "items": {
            "$ref": "AuditLogConfig"
          },
          "type": "array",
          "description": "The configuration for logging of each type of permission."
        }
      },
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "type": "object"
    },
    "ApplianceCluster": {
      "id": "ApplianceCluster",
      "type": "object",
      "properties": {
        "resourceLink": {
          "description": "Immutable. Self-link of the GCP resource for the Appliance Cluster. For example: //transferappliance.googleapis.com/projects/my-project/locations/us-west1-a/appliances/my-appliance",
          "type": "string"
        }
      },
      "description": "ApplianceCluster contains information specific to GDC Edge Appliance Clusters."
    },
    "ValidateCreateMembershipRequest": {
      "properties": {
        "membershipId": {
          "description": "Required. Client chosen membership id.",
          "type": "string"
        },
        "membership": {
          "$ref": "Membership",
          "description": "Required. Membership resource to be created."
        }
      },
      "description": "Request message for the `GkeHub.ValidateCreateMembership` method.",
      "type": "object",
      "id": "ValidateCreateMembershipRequest"
    },
    "KubernetesMetadata": {
      "properties": {
        "nodeProviderId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty."
        },
        "nodeCount": {
          "type": "integer",
          "description": "Output only. Node count as reported by Kubernetes nodes resources.",
          "readOnly": true,
          "format": "int32"
        },
        "vcpuCount": {
          "description": "Output only. vCPU count as reported by Kubernetes nodes resources.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "memoryMb": {
          "description": "Output only. The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "kubernetesApiServerVersion": {
          "type": "string",
          "description": "Output only. Kubernetes API server version string as reported by `/version`.",
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.",
          "type": "string"
        }
      },
      "id": "KubernetesMetadata",
      "type": "object",
      "description": "KubernetesMetadata provides informational metadata for Memberships representing Kubernetes clusters."
    },
    "ServiceMeshControlPlaneManagement": {
      "description": "Status of control plane management.",
      "properties": {
        "state": {
          "description": "LifecycleState of control plane management.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified",
            "DISABLED means that the component is not enabled.",
            "FAILED_PRECONDITION means that provisioning cannot proceed because of some characteristic of the member cluster.",
            "PROVISIONING means that provisioning is in progress.",
            "ACTIVE means that the component is ready for use.",
            "STALLED means that provisioning could not be done.",
            "NEEDS_ATTENTION means that the component is ready, but some user intervention is required. (For example that the user should migrate workloads to a new control plane revision.)",
            "DEGRADED means that the component is ready, but operating in a degraded state."
          ],
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "DISABLED",
            "FAILED_PRECONDITION",
            "PROVISIONING",
            "ACTIVE",
            "STALLED",
            "NEEDS_ATTENTION",
            "DEGRADED"
          ]
        },
        "details": {
          "description": "Explanation of state.",
          "items": {
            "$ref": "ServiceMeshStatusDetails"
          },
          "type": "array"
        }
      },
      "id": "ServiceMeshControlPlaneManagement",
      "type": "object"
    },
    "FleetObservabilityFeatureSpec": {
      "properties": {},
      "description": "**Fleet Observability**: The Hub-wide input for the FleetObservability feature.",
      "type": "object",
      "id": "FleetObservabilityFeatureSpec"
    },
    "MembershipFeatureSpec": {
      "description": "MembershipFeatureSpec contains configuration information for a single Membership.",
      "type": "object",
      "properties": {
        "policycontroller": {
          "$ref": "PolicyControllerMembershipSpec",
          "description": "Policy Controller spec."
        },
        "fleetInherited": {
          "description": "True if value of `feature_spec` was inherited from a fleet-level default.",
          "type": "boolean"
        },
        "mesh": {
          "description": "Anthos Service Mesh-specific spec",
          "$ref": "ServiceMeshMembershipSpec"
        },
        "fleetobservability": {
          "description": "Fleet observability membership spec",
          "$ref": "FleetObservabilityMembershipSpec"
        },
        "workloadcertificate": {
          "$ref": "MembershipSpec",
          "description": "Workload Certificate spec."
        },
        "cloudbuild": {
          "$ref": "CloudBuildMembershipSpec",
          "description": "Cloud Build-specific spec"
        },
        "configmanagement": {
          "$ref": "ConfigManagementMembershipSpec",
          "description": "Config Management-specific spec."
        },
        "identityservice": {
          "$ref": "IdentityServiceMembershipSpec",
          "description": "Identity Service-specific spec."
        },
        "anthosobservability": {
          "$ref": "AnthosObservabilityMembershipSpec",
          "description": "Anthos Observability-specific spec"
        }
      },
      "id": "MembershipFeatureSpec"
    },
    "ConfigManagementBinauthzState": {
      "description": "State for Binauthz",
      "id": "ConfigManagementBinauthzState",
      "type": "object",
      "properties": {
        "webhook": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string",
          "description": "The state of the binauthz webhook.",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        },
        "version": {
          "$ref": "ConfigManagementBinauthzVersion",
          "description": "The version of binauthz that is installed."
        }
      }
    },
    "FleetLifecycleState": {
      "id": "FleetLifecycleState",
      "properties": {
        "code": {
          "enum": [
            "CODE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ],
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The code is not set.",
            "The fleet is being created.",
            "The fleet active.",
            "The fleet is being deleted.",
            "The fleet is being updated."
          ],
          "description": "Output only. The current state of the Fleet resource."
        }
      },
      "description": "FleetLifecycleState describes the state of a Fleet resource.",
      "type": "object"
    },
    "AuditLogConfig": {
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "id": "AuditLogConfig",
      "type": "object",
      "properties": {
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logType": {
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "description": "The log type that this config enables.",
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        }
      }
    },
    "ConfigManagementConfigSyncState": {
      "description": "State information for ConfigSync",
      "id": "ConfigManagementConfigSyncState",
      "type": "object",
      "properties": {
        "deploymentState": {
          "$ref": "ConfigManagementConfigSyncDeploymentState",
          "description": "Information about the deployment of ConfigSync, including the version of the various Pods deployed"
        },
        "version": {
          "$ref": "ConfigManagementConfigSyncVersion",
          "description": "The version of ConfigSync deployed"
        },
        "syncState": {
          "$ref": "ConfigManagementSyncState",
          "description": "The state of ConfigSync's process to sync configs to a cluster"
        }
      }
    },
    "ResourceOptions": {
      "description": "ResourceOptions represent options for Kubernetes resource generation.",
      "id": "ResourceOptions",
      "properties": {
        "connectVersion": {
          "type": "string",
          "description": "Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected."
        },
        "v1beta1Crd": {
          "description": "Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions \u003c1.16.",
          "type": "boolean"
        },
        "k8sVersion": {
          "description": "Optional. Major version of the Kubernetes cluster. This is only used to determine which version to use for the CustomResourceDefinition resources, `apiextensions/v1beta1` or`apiextensions/v1`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EdgeCluster": {
      "id": "EdgeCluster",
      "properties": {
        "resourceLink": {
          "description": "Immutable. Self-link of the GCP resource for the Edge Cluster. For example: //edgecontainer.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster",
          "type": "string"
        }
      },
      "type": "object",
      "description": "EdgeCluster contains information specific to Google Edge Clusters."
    },
    "CommonFeatureSpec": {
      "type": "object",
      "id": "CommonFeatureSpec",
      "description": "CommonFeatureSpec contains Hub-wide configuration information",
      "properties": {
        "fleetobservability": {
          "description": "FleetObservability feature spec.",
          "$ref": "FleetObservabilityFeatureSpec"
        },
        "cloudauditlogging": {
          "description": "Cloud Audit Logging-specific spec.",
          "$ref": "CloudAuditLoggingFeatureSpec"
        },
        "anthosobservability": {
          "description": "Anthos Observability spec",
          "$ref": "AnthosObservabilityFeatureSpec"
        },
        "multiclusteringress": {
          "description": "Multicluster Ingress-specific spec.",
          "$ref": "MultiClusterIngressFeatureSpec"
        },
        "workloadcertificate": {
          "$ref": "FeatureSpec",
          "description": "Workload Certificate spec."
        },
        "appdevexperience": {
          "description": "Appdevexperience specific spec.",
          "$ref": "AppDevExperienceFeatureSpec"
        }
      }
    },
    "ServiceMeshStatusDetails": {
      "id": "ServiceMeshStatusDetails",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "A machine-readable code that further describes a broad status."
        },
        "details": {
          "description": "Human-readable explanation of code.",
          "type": "string"
        }
      },
      "description": "Structured and human-readable details for a status."
    },
    "AnthosObservabilityMembershipSpec": {
      "properties": {
        "version": {
          "type": "string",
          "description": "the version of stackdriver operator used by this feature"
        },
        "enableStackdriverOnApplications": {
          "description": "Enable collecting and reporting metrics and logs from user apps.",
          "type": "boolean"
        },
        "doNotOptimizeMetrics": {
          "description": "Use full of metrics rather than optimized metrics. See https://cloud.google.com/anthos/clusters/docs/on-prem/1.8/concepts/logging-and-monitoring#optimized_metrics_default_metrics",
          "type": "boolean"
        }
      },
      "id": "AnthosObservabilityMembershipSpec",
      "type": "object",
      "description": "**Anthosobservability**: Per-Membership Feature spec."
    },
    "ConfigManagementPolicyControllerMigration": {
      "type": "object",
      "properties": {
        "stage": {
          "description": "Stage of the migration.",
          "type": "string",
          "enumDescriptions": [
            "Unknown state of migration.",
            "ACM Hub/Operator manages policycontroller. No migration yet completed.",
            "All migrations steps complete; Poco Hub now manages policycontroller."
          ],
          "enum": [
            "STAGE_UNSPECIFIED",
            "ACM_MANAGED",
            "POCO_MANAGED"
          ]
        }
      },
      "id": "ConfigManagementPolicyControllerMigration",
      "description": "State for the migration of PolicyController from ACM -\u003e PoCo Hub."
    },
    "FeatureState": {
      "type": "object",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "The time this status and any related Feature-specific details were updated.",
          "format": "google-datetime"
        },
        "code": {
          "description": "The high-level, machine-readable status of this Feature.",
          "enum": [
            "CODE_UNSPECIFIED",
            "OK",
            "WARNING",
            "ERROR"
          ],
          "enumDescriptions": [
            "Unknown or not set.",
            "The Feature is operating normally.",
            "The Feature has encountered an issue, and is operating in a degraded state. The Feature may need intervention to return to normal operation. See the description and any associated Feature-specific details for more information.",
            "The Feature is not operating or is in a severely degraded state. The Feature may need intervention to return to normal operation. See the description and any associated Feature-specific details for more information."
          ],
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "A human-readable description of the current status."
        }
      },
      "id": "FeatureState",
      "description": "FeatureState describes the high-level state of a Feature. It may be used to describe a Feature's state at the environ-level, or per-membershop, depending on the context."
    },
    "ListFleetsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. The token is only valid for 1h."
        },
        "fleets": {
          "type": "array",
          "items": {
            "$ref": "Fleet"
          },
          "description": "The list of matching fleets."
        }
      },
      "description": "Response message for the `GkeHub.ListFleetsResponse` method.",
      "id": "ListFleetsResponse"
    },
    "ListNamespacesResponse": {
      "description": "List of fleet namespaces.",
      "type": "object",
      "id": "ListNamespacesResponse",
      "properties": {
        "namespaces": {
          "items": {
            "$ref": "Namespace"
          },
          "description": "The list of fleet namespaces",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to request the next page of resources from the `ListNamespaces` method. The value of an empty string means that there are no more resources to return."
        }
      }
    },
    "CloudAuditLoggingFeatureSpec": {
      "description": "**Cloud Audit Logging**: Spec for Audit Logging Allowlisting.",
      "id": "CloudAuditLoggingFeatureSpec",
      "type": "object",
      "properties": {
        "allowlistedServiceAccounts": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Service account that should be allowlisted to send the audit logs; eg cloudauditlogging@gcp-project.iam.gserviceaccount.com. These accounts must already exist, but do not need to have any permissions granted to them. The customer's entitlements will be checked prior to allowlisting (i.e. the customer must be an Anthos customer.)"
        }
      }
    },
    "ConfigManagementConfigSyncDeploymentState": {
      "id": "ConfigManagementConfigSyncDeploymentState",
      "description": "The state of ConfigSync's deployment on a cluster",
      "properties": {
        "syncer": {
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "Deployment state of the syncer pod",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        },
        "reconcilerManager": {
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "type": "string",
          "description": "Deployment state of reconciler-manager pod",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "admissionWebhook": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "description": "Deployment state of admission-webhook"
        },
        "gitSync": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "description": "Deployment state of the git-sync pod",
          "type": "string"
        },
        "importer": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "Deployment state of the importer pod",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        },
        "monitor": {
          "description": "Deployment state of the monitor pod",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string"
        },
        "rootReconciler": {
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "Deployment state of root-reconciler",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PolicyControllerMonitoringConfig": {
      "type": "object",
      "id": "PolicyControllerMonitoringConfig",
      "properties": {
        "backends": {
          "description": "Specifies the list of backends Policy Controller will export to. An empty list would effectively disable metrics export.",
          "items": {
            "enum": [
              "MONITORING_BACKEND_UNSPECIFIED",
              "PROMETHEUS",
              "CLOUD_MONITORING"
            ],
            "type": "string",
            "enumDescriptions": [
              "Backend cannot be determined",
              "Prometheus backend for monitoring",
              "Stackdriver/Cloud Monitoring backend for monitoring"
            ]
          },
          "type": "array"
        }
      },
      "description": "MonitoringConfig specifies the backends Policy Controller should export metrics to. For example, to specify metrics should be exported to Cloud Monitoring and Prometheus, specify backends: [\"cloudmonitoring\", \"prometheus\"]"
    },
    "Expr": {
      "properties": {
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        }
      },
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "id": "Expr"
    },
    "PolicyControllerPolicyControllerDeploymentConfig": {
      "id": "PolicyControllerPolicyControllerDeploymentConfig",
      "type": "object",
      "description": "Deployment-specific configuration.",
      "properties": {
        "podAntiAffinity": {
          "type": "boolean",
          "description": "Pod anti-affinity enablement."
        },
        "containerResources": {
          "description": "Container resource requirements.",
          "$ref": "PolicyControllerResourceRequirements"
        },
        "replicaCount": {
          "format": "int64",
          "description": "Pod replica count.",
          "type": "string"
        },
        "podTolerations": {
          "items": {
            "$ref": "PolicyControllerToleration"
          },
          "type": "array",
          "description": "Pod tolerations of node taints."
        }
      }
    },
    "ConfigManagementErrorResource": {
      "type": "object",
      "id": "ConfigManagementErrorResource",
      "description": "Model for a config file in the git repo with an associated Sync error",
      "properties": {
        "sourcePath": {
          "type": "string",
          "description": "Path in the git repo of the erroneous config"
        },
        "resourceName": {
          "type": "string",
          "description": "Metadata name of the resource that is causing an error"
        },
        "resourceNamespace": {
          "description": "Namespace of the resource that is causing an error",
          "type": "string"
        },
        "resourceGvk": {
          "description": "Group/version/kind of the resource that is causing an error",
          "$ref": "ConfigManagementGroupVersionKind"
        }
      }
    },
    "NamespaceLifecycleState": {
      "id": "NamespaceLifecycleState",
      "type": "object",
      "description": "NamespaceLifecycleState describes the state of a Namespace resource.",
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "CODE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ],
          "enumDescriptions": [
            "The code is not set.",
            "The namespace is being created.",
            "The namespace active.",
            "The namespace is being deleted.",
            "The namespace is being updated."
          ],
          "description": "Output only. The current state of the Namespace resource."
        }
      }
    },
    "MultiClusterIngressFeatureSpec": {
      "type": "object",
      "description": "**Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.",
      "id": "MultiClusterIngressFeatureSpec",
      "properties": {
        "configMembership": {
          "type": "string",
          "description": "Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`"
        },
        "billing": {
          "type": "string",
          "enumDescriptions": [
            "Unknown",
            "User pays a fee per-endpoint.",
            "User is paying for Anthos as a whole."
          ],
          "description": "Deprecated: This field will be ignored and should not be set. Customer's billing structure.",
          "enum": [
            "BILLING_UNSPECIFIED",
            "PAY_AS_YOU_GO",
            "ANTHOS_LICENSE"
          ]
        }
      }
    },
    "Authority": {
      "id": "Authority",
      "properties": {
        "oidcJwks": {
          "type": "string",
          "description": "Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.",
          "format": "byte"
        },
        "issuer": {
          "type": "string",
          "description": "Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length \u003c2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity)."
        },
        "identityProvider": {
          "description": "Output only. An identity provider that reflects the `issuer` in the workload identity pool.",
          "type": "string",
          "readOnly": true
        },
        "workloadIdentityPool": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the workload identity pool in which `issuer` will be recognized. There is a single Workload Identity Pool per Hub that is shared between all Memberships that belong to that Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format is `{PROJECT_ID}.hub.id.goog`, although this is subject to change in newer versions of this API."
        }
      },
      "type": "object",
      "description": "Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity"
    },
    "ListRBACRoleBindingsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to request the next page of resources from the `ListRBACRoleBindings` method. The value of an empty string means that there are no more resources to return."
        },
        "rbacrolebindings": {
          "description": "The list of RBACRoleBindings",
          "items": {
            "$ref": "RBACRoleBinding"
          },
          "type": "array"
        }
      },
      "description": "List of RBACRoleBindings.",
      "id": "ListRBACRoleBindingsResponse"
    },
    "ScopeFeatureState": {
      "id": "ScopeFeatureState",
      "type": "object",
      "description": "ScopeFeatureState contains Scope-wide Feature status information.",
      "properties": {
        "state": {
          "readOnly": true,
          "description": "Output only. The \"running state\" of the Feature in this Scope.",
          "$ref": "FeatureState"
        }
      }
    },
    "PolicyControllerOnClusterState": {
      "id": "PolicyControllerOnClusterState",
      "type": "object",
      "properties": {
        "details": {
          "type": "string",
          "description": "Surface potential errors or information logs."
        },
        "state": {
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLING",
            "ACTIVE",
            "UPDATING",
            "DECOMMISSIONING",
            "CLUSTER_ERROR",
            "HUB_ERROR",
            "SUSPENDED"
          ],
          "type": "string",
          "enumDescriptions": [
            "The lifecycle state is unspecified.",
            "The PC does not exist on the given cluster, and no k8s resources of any type that are associated with the PC should exist there. The cluster does not possess a membership with the PCH.",
            "The PCH possesses a Membership, however the PC is not fully installed on the cluster. In this state the hub can be expected to be taking actions to install the PC on the cluster.",
            "The PC is fully installed on the cluster and in an operational mode. In this state PCH will be reconciling state with the PC, and the PC will be performing it's operational tasks per that software. Entering a READY state requires that the hub has confirmed the PC is installed and its pods are operational with the version of the PC the PCH expects.",
            "The PC is fully installed, but in the process of changing the configuration (including changing the version of PC either up and down, or modifying the manifests of PC) of the resources running on the cluster. The PCH has a Membership, is aware of the version the cluster should be running in, but has not confirmed for itself that the PC is running with that version.",
            "The PC may have resources on the cluster, but the PCH wishes to remove the Membership. The Membership still exists.",
            "The PC is not operational, and the PCH is unable to act to make it operational. Entering a CLUSTER_ERROR state happens automatically when the PCH determines that a PC installed on the cluster is non-operative or that the cluster does not meet requirements set for the PCH to administer the cluster but has nevertheless been given an instruction to do so (such as 'install').",
            "In this state, the PC may still be operational, and only the PCH is unable to act. The hub should not issue instructions to change the PC state, or otherwise interfere with the on-cluster resources. Entering a HUB_ERROR state happens automatically when the PCH determines the hub is in an unhealthy state and it wishes to 'take hands off' to avoid corrupting the PC or other data.",
            "Policy Controller (PC) is installed but suspended. This means that the policies are not enforced, but violations are still recorded (through audit)."
          ],
          "description": "The lifecycle state of this component."
        }
      },
      "description": "OnClusterState represents the state of a sub-component of Policy Controller."
    },
    "KubernetesResource": {
      "id": "KubernetesResource",
      "description": "KubernetesResource contains the YAML manifests and configuration for Membership Kubernetes resources in the cluster. After CreateMembership or UpdateMembership, these resources should be re-applied in the cluster.",
      "type": "object",
      "properties": {
        "membershipCrManifest": {
          "description": "Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.",
          "type": "string"
        },
        "membershipResources": {
          "readOnly": true,
          "description": "Output only. Additional Kubernetes resources that need to be applied to the cluster after Membership creation, and after every update. This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.",
          "items": {
            "$ref": "ResourceManifest"
          },
          "type": "array"
        },
        "resourceOptions": {
          "$ref": "ResourceOptions",
          "description": "Optional. Options for Kubernetes resource generation."
        },
        "connectResources": {
          "readOnly": true,
          "description": "Output only. The Kubernetes resources for installing the GKE Connect agent This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.",
          "items": {
            "$ref": "ResourceManifest"
          },
          "type": "array"
        }
      }
    },
    "ConfigManagementPolicyController": {
      "description": "Configuration for Policy Controller",
      "properties": {
        "referentialRulesEnabled": {
          "description": "Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.",
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean",
          "description": "Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect."
        },
        "mutationEnabled": {
          "description": "Enable or disable mutation in policy controller. If true, mutation CRDs, webhook and controller deployment will be deployed to the cluster.",
          "type": "boolean"
        },
        "templateLibraryInstalled": {
          "type": "boolean",
          "description": "Installs the default template library along with Policy Controller."
        },
        "exemptableNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster."
        },
        "auditIntervalSeconds": {
          "format": "int64",
          "type": "string",
          "description": "Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether."
        },
        "monitoring": {
          "description": "Monitoring specifies the configuration of monitoring.",
          "$ref": "ConfigManagementPolicyControllerMonitoring"
        },
        "logDeniesEnabled": {
          "description": "Logs all denies and dry run failures.",
          "type": "boolean"
        }
      },
      "id": "ConfigManagementPolicyController",
      "type": "object"
    },
    "AppDevExperienceFeatureState": {
      "properties": {
        "networkingInstallSucceeded": {
          "description": "Status of subcomponent that detects configured Service Mesh resources.",
          "$ref": "Status"
        }
      },
      "id": "AppDevExperienceFeatureState",
      "description": "State for App Dev Exp Feature.",
      "type": "object"
    },
    "ConfigManagementMembershipSpec": {
      "description": "**Anthos Config Management**: Configuration for a single cluster. Intended to parallel the ConfigManagement CR.",
      "type": "object",
      "id": "ConfigManagementMembershipSpec",
      "properties": {
        "hierarchyController": {
          "description": "Hierarchy Controller configuration for the cluster.",
          "$ref": "ConfigManagementHierarchyControllerConfig"
        },
        "version": {
          "type": "string",
          "description": "Version of ACM installed."
        },
        "binauthz": {
          "$ref": "ConfigManagementBinauthzConfig",
          "description": "Binauthz conifguration for the cluster."
        },
        "configSync": {
          "$ref": "ConfigManagementConfigSync",
          "description": "Config Sync configuration for the cluster."
        },
        "policyController": {
          "$ref": "ConfigManagementPolicyController",
          "description": "Policy Controller configuration for the cluster."
        }
      }
    },
    "ConfigManagementMembershipState": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string",
          "description": "The user-defined name for the cluster used by ClusterSelectors to group clusters together. This should match Membership's membership_name, unless the user installed ACM on the cluster manually prior to enabling the ACM hub feature. Unique within a Anthos Config Management installation."
        },
        "membershipSpec": {
          "$ref": "ConfigManagementMembershipSpec",
          "description": "Membership configuration in the cluster. This represents the actual state in the cluster, while the MembershipSpec in the FeatureSpec represents the intended state"
        },
        "binauthzState": {
          "$ref": "ConfigManagementBinauthzState",
          "description": "Binauthz status"
        },
        "operatorState": {
          "$ref": "ConfigManagementOperatorState",
          "description": "Current install status of ACM's Operator"
        },
        "hierarchyControllerState": {
          "$ref": "ConfigManagementHierarchyControllerState",
          "description": "Hierarchy Controller status"
        },
        "policyControllerState": {
          "description": "PolicyController status",
          "$ref": "ConfigManagementPolicyControllerState"
        },
        "configSyncState": {
          "$ref": "ConfigManagementConfigSyncState",
          "description": "Current sync status"
        }
      },
      "description": "**Anthos Config Management**: State for a single cluster.",
      "id": "ConfigManagementMembershipState"
    },
    "ListOperationsResponse": {
      "type": "object",
      "id": "ListOperationsResponse",
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "description": "The response message for Operations.ListOperations."
    },
    "MultiCloudCluster": {
      "id": "MultiCloudCluster",
      "description": "MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.",
      "type": "object",
      "properties": {
        "resourceLink": {
          "description": "Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/attachedClusters/my-cluster",
          "type": "string"
        },
        "clusterMissing": {
          "readOnly": true,
          "description": "Output only. If cluster_missing is set then it denotes that API(gkemulticloud.googleapis.com) resource for this GKE Multi-Cloud cluster no longer exists.",
          "type": "boolean"
        }
      }
    },
    "TestIamPermissionsResponse": {
      "description": "Response message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "FleetObservabilityMembershipState": {
      "id": "FleetObservabilityMembershipState",
      "type": "object",
      "properties": {},
      "description": "**FleetObservability**: An empty state left as an example membership-specific Feature state."
    },
    "Scope": {
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. When the scope was last updated.",
          "format": "google-datetime",
          "readOnly": true
        },
        "deleteTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. When the scope was deleted.",
          "type": "string"
        },
        "state": {
          "readOnly": true,
          "$ref": "ScopeLifecycleState",
          "description": "Output only. State of the scope resource."
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. When the scope was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. Google-generated UUID for this resource. This is unique across all scope resources. If a scope resource is deleted and another resource with the same name is created, it gets a different uid.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The resource name for the scope `projects/{project}/locations/{location}/scopes/{scope}`"
        }
      },
      "id": "Scope",
      "description": "Scope represents a Scope in a Fleet.",
      "type": "object"
    },
    "ServiceMeshMembershipState": {
      "id": "ServiceMeshMembershipState",
      "description": "**Service Mesh**: State for a single Membership, as analyzed by the Service Mesh Hub Controller.",
      "properties": {
        "analysisMessages": {
          "readOnly": true,
          "description": "Output only. Results of running Service Mesh analyzers.",
          "type": "array",
          "items": {
            "$ref": "ServiceMeshAnalysisMessage"
          }
        },
        "dataPlaneManagement": {
          "description": "Output only. Status of data plane management.",
          "readOnly": true,
          "$ref": "ServiceMeshDataPlaneManagement"
        },
        "controlPlaneManagement": {
          "description": "Output only. Status of control plane management",
          "readOnly": true,
          "$ref": "ServiceMeshControlPlaneManagement"
        },
        "configApiVersion": {
          "description": "The API version (i.e. Istio CRD version) for configuring service mesh in this cluster. This version is influenced by the `default_channel` field.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CloudBuildMembershipSpec": {
      "id": "CloudBuildMembershipSpec",
      "description": "**Cloud Build**: Configurations for each Cloud Build enabled cluster.",
      "properties": {
        "securityPolicy": {
          "description": "Whether it is allowed to run the privileged builds on the cluster or not.",
          "enum": [
            "SECURITY_POLICY_UNSPECIFIED",
            "NON_PRIVILEGED",
            "PRIVILEGED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified policy",
            "Privileged build pods are disallowed",
            "Privileged build pods are allowed"
          ]
        },
        "version": {
          "description": "Version of the cloud build software on the cluster.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ConfigManagementPolicyControllerState": {
      "description": "State for PolicyControllerState.",
      "type": "object",
      "id": "ConfigManagementPolicyControllerState",
      "properties": {
        "version": {
          "description": "The version of Gatekeeper Policy Controller deployed.",
          "$ref": "ConfigManagementPolicyControllerVersion"
        },
        "migration": {
          "$ref": "ConfigManagementPolicyControllerMigration",
          "description": "Record state of ACM -\u003e PoCo Hub migration for this feature."
        },
        "deploymentState": {
          "$ref": "ConfigManagementGatekeeperDeploymentState",
          "description": "The state about the policy controller installation."
        }
      }
    },
    "RBACRoleBinding": {
      "id": "RBACRoleBinding",
      "properties": {
        "role": {
          "description": "Required. Role to bind to the principal",
          "$ref": "Role"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. When the rbacrolebinding was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name for the rbacrolebinding `projects/{project}/locations/{location}/namespaces/{namespace}/rbacrolebindings/{rbacrolebinding}`"
        },
        "uid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Google-generated UUID for this resource. This is unique across all rbacrolebinding resources. If a rbacrolebinding resource is deleted and another resource with the same name is created, it gets a different uid."
        },
        "user": {
          "type": "string",
          "description": "user is the name of the user as seen by the kubernetes cluster, example \"alice\" or \"alice@domain.tld\""
        },
        "state": {
          "description": "Output only. State of the rbacrolebinding resource.",
          "readOnly": true,
          "$ref": "RBACRoleBindingLifecycleState"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. When the rbacrolebinding was last updated."
        },
        "group": {
          "description": "group is the group, as seen by the kubernetes cluster.",
          "type": "string"
        },
        "deleteTime": {
          "description": "Output only. When the rbacrolebinding was deleted.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "description": "RBACRoleBinding represents a rbacrolebinding across the Fleet"
    },
    "MembershipState": {
      "properties": {
        "code": {
          "enum": [
            "CODE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING",
            "SERVICE_UPDATING"
          ],
          "enumDescriptions": [
            "The code is not set.",
            "The cluster is being registered.",
            "The cluster is registered.",
            "The cluster is being unregistered.",
            "The Membership is being updated.",
            "The Membership is being updated by the Hub Service."
          ],
          "description": "Output only. The current state of the Membership resource.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "id": "MembershipState",
      "description": "MembershipState describes the state of a Membership resource."
    },
    "PolicyControllerMembershipState": {
      "id": "PolicyControllerMembershipState",
      "type": "object",
      "description": "**Policy Controller**: State for a single cluster.",
      "properties": {
        "contentStates": {
          "additionalProperties": {
            "$ref": "PolicyControllerOnClusterState"
          },
          "type": "object",
          "description": "The state of the template library and any bundles included in the chosen version of the manifest"
        },
        "componentStates": {
          "description": "Currently these include (also serving as map keys): 1. \"admission\" 2. \"audit\" 3. \"mutation\"",
          "additionalProperties": {
            "$ref": "PolicyControllerOnClusterState"
          },
          "type": "object"
        },
        "state": {
          "enumDescriptions": [
            "The lifecycle state is unspecified.",
            "The PC does not exist on the given cluster, and no k8s resources of any type that are associated with the PC should exist there. The cluster does not possess a membership with the PCH.",
            "The PCH possesses a Membership, however the PC is not fully installed on the cluster. In this state the hub can be expected to be taking actions to install the PC on the cluster.",
            "The PC is fully installed on the cluster and in an operational mode. In this state PCH will be reconciling state with the PC, and the PC will be performing it's operational tasks per that software. Entering a READY state requires that the hub has confirmed the PC is installed and its pods are operational with the version of the PC the PCH expects.",
            "The PC is fully installed, but in the process of changing the configuration (including changing the version of PC either up and down, or modifying the manifests of PC) of the resources running on the cluster. The PCH has a Membership, is aware of the version the cluster should be running in, but has not confirmed for itself that the PC is running with that version.",
            "The PC may have resources on the cluster, but the PCH wishes to remove the Membership. The Membership still exists.",
            "The PC is not operational, and the PCH is unable to act to make it operational. Entering a CLUSTER_ERROR state happens automatically when the PCH determines that a PC installed on the cluster is non-operative or that the cluster does not meet requirements set for the PCH to administer the cluster but has nevertheless been given an instruction to do so (such as 'install').",
            "In this state, the PC may still be operational, and only the PCH is unable to act. The hub should not issue instructions to change the PC state, or otherwise interfere with the on-cluster resources. Entering a HUB_ERROR state happens automatically when the PCH determines the hub is in an unhealthy state and it wishes to 'take hands off' to avoid corrupting the PC or other data.",
            "Policy Controller (PC) is installed but suspended. This means that the policies are not enforced, but violations are still recorded (through audit)."
          ],
          "type": "string",
          "description": "The overall Policy Controller lifecycle state observed by the Hub Feature controller.",
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLING",
            "ACTIVE",
            "UPDATING",
            "DECOMMISSIONING",
            "CLUSTER_ERROR",
            "HUB_ERROR",
            "SUSPENDED"
          ]
        }
      }
    },
    "CommonFleetDefaultMemberConfigSpec": {
      "properties": {
        "identityservice": {
          "description": "Identity Service-specific spec.",
          "$ref": "IdentityServiceMembershipSpec"
        }
      },
      "type": "object",
      "id": "CommonFleetDefaultMemberConfigSpec",
      "description": "CommonFleetDefaultMemberConfigSpec contains default configuration information for memberships of a fleet"
    },
    "ServiceMeshType": {
      "id": "ServiceMeshType",
      "properties": {
        "code": {
          "description": "A 7 character code matching `^IST[0-9]{4}$` or `^ASM[0-9]{4}$`, intended to uniquely identify the message type. (e.g. \"IST0001\" is mapped to the \"InternalError\" message type.)",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "A human-readable name for the message type. e.g. \"InternalError\", \"PodMissingProxy\". This should be the same for all messages of the same type. (This corresponds to the `name` field in open-source Istio.)"
        }
      },
      "type": "object",
      "description": "A unique identifier for the type of message. Display_name is intended to be human-readable, code is intended to be machine readable. There should be a one-to-one mapping between display_name and code. (i.e. do not re-use display_names or codes between message types.) See istio.analysis.v1alpha1.AnalysisMessageBase.Type"
    },
    "OnPremCluster": {
      "properties": {
        "adminCluster": {
          "description": "Immutable. Whether the cluster is an admin cluster.",
          "type": "boolean"
        },
        "clusterType": {
          "description": "Immutable. The on prem cluster's type.",
          "enum": [
            "CLUSTERTYPE_UNSPECIFIED",
            "BOOTSTRAP",
            "HYBRID",
            "STANDALONE",
            "USER"
          ],
          "enumDescriptions": [
            "The ClusterType is not set.",
            "The ClusterType is bootstrap cluster.",
            "The ClusterType is baremetal hybrid cluster.",
            "The ClusterType is baremetal standalone cluster.",
            "The ClusterType is user cluster."
          ],
          "type": "string"
        },
        "resourceLink": {
          "description": "Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster",
          "type": "string"
        },
        "clusterMissing": {
          "readOnly": true,
          "description": "Output only. If cluster_missing is set then it denotes that API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster no longer exists.",
          "type": "boolean"
        }
      },
      "id": "OnPremCluster",
      "type": "object",
      "description": "OnPremCluster contains information specific to GKE On-Prem clusters."
    },
    "GkeCluster": {
      "description": "GkeCluster contains information specific to GKE clusters.",
      "type": "object",
      "properties": {
        "resourceLink": {
          "description": "Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.",
          "type": "string"
        },
        "clusterMissing": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. If cluster_missing is set then it denotes that the GKE cluster no longer exists in the GKE Control Plane."
        }
      },
      "id": "GkeCluster"
    },
    "ConfigManagementGitConfig": {
      "properties": {
        "syncRev": {
          "description": "Git revision (tag or hash) to check out. Default HEAD.",
          "type": "string"
        },
        "syncWaitSecs": {
          "type": "string",
          "description": "Period in seconds between consecutive syncs. Default: 15.",
          "format": "int64"
        },
        "httpsProxy": {
          "description": "URL for the HTTPS proxy to be used when communicating with the Git repo.",
          "type": "string"
        },
        "secretType": {
          "type": "string",
          "description": "Type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, gcpserviceaccount or none. The validation of this is case-sensitive. Required."
        },
        "syncBranch": {
          "type": "string",
          "description": "The branch of the repository to sync from. Default: master."
        },
        "syncRepo": {
          "type": "string",
          "description": "The URL of the Git repository to use as the source of truth."
        },
        "policyDir": {
          "type": "string",
          "description": "The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository."
        },
        "gcpServiceAccountEmail": {
          "type": "string",
          "description": "The GCP Service Account Email used for auth when secret_type is gcpServiceAccount."
        }
      },
      "id": "ConfigManagementGitConfig",
      "type": "object",
      "description": "Git repo configuration for a single cluster."
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "GoogleRpcStatus",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      }
    },
    "Fleet": {
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The full, unique resource name of this fleet in the format of `projects/{project}/locations/{location}/fleets/{fleet}`. Each GCP project can have at most one fleet resource, named \"default\"."
        },
        "createTime": {
          "description": "Output only. When the Fleet was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "description": "Output only. State of the namespace resource.",
          "readOnly": true,
          "$ref": "FleetLifecycleState"
        },
        "displayName": {
          "description": "Optional. A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point. Example: `Production Fleet`",
          "type": "string"
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. Google-generated UUID for this resource. This is unique across all Fleet resources. If a Fleet resource is deleted and another resource with the same name is created, it gets a different uid.",
          "type": "string"
        },
        "deleteTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. When the Fleet was deleted."
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. When the Fleet was last updated."
        }
      },
      "id": "Fleet",
      "description": "Fleet contains the Fleet-wide metadata and configuration."
    },
    "AppDevExperienceFeatureSpec": {
      "description": "Spec for App Dev Experience Feature.",
      "id": "AppDevExperienceFeatureSpec",
      "properties": {},
      "type": "object"
    },
    "ConfigManagementSyncState": {
      "properties": {
        "lastSyncTime": {
          "type": "string",
          "description": "Timestamp type of when ACM last successfully synced the repo",
          "format": "google-datetime"
        },
        "syncToken": {
          "description": "Token indicating the state of the syncer.",
          "type": "string"
        },
        "sourceToken": {
          "type": "string",
          "description": "Token indicating the state of the repo."
        },
        "lastSync": {
          "type": "string",
          "description": "Deprecated: use last_sync_time instead. Timestamp of when ACM last successfully synced the repo The time format is specified in https://golang.org/pkg/time/#Time.String"
        },
        "errors": {
          "type": "array",
          "description": "A list of errors resulting from problematic configs. This list will be truncated after 100 errors, although it is unlikely for that many errors to simultaneously exist.",
          "items": {
            "$ref": "ConfigManagementSyncError"
          }
        },
        "code": {
          "enum": [
            "SYNC_CODE_UNSPECIFIED",
            "SYNCED",
            "PENDING",
            "ERROR",
            "NOT_CONFIGURED",
            "NOT_INSTALLED",
            "UNAUTHORIZED",
            "UNREACHABLE"
          ],
          "description": "Sync status code",
          "enumDescriptions": [
            "ACM cannot determine a sync code",
            "ACM successfully synced the git Repo with the cluster",
            "ACM is in the progress of syncing a new change",
            "Indicates an error configuring ACM, and user action is required",
            "ACM has been installed (operator manifest deployed), but not configured.",
            "ACM has not been installed (no operator pod found)",
            "Error authorizing with the cluster",
            "Cluster could not be reached"
          ],
          "type": "string"
        },
        "importToken": {
          "description": "Token indicating the state of the importer.",
          "type": "string"
        }
      },
      "description": "State indicating an ACM's progress syncing configurations to a cluster",
      "id": "ConfigManagementSyncState",
      "type": "object"
    },
    "ServiceMeshDataPlaneManagement": {
      "id": "ServiceMeshDataPlaneManagement",
      "properties": {
        "details": {
          "type": "array",
          "description": "Explanation of the status.",
          "items": {
            "$ref": "ServiceMeshStatusDetails"
          }
        },
        "state": {
          "description": "Lifecycle status of data plane management.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified",
            "DISABLED means that the component is not enabled.",
            "FAILED_PRECONDITION means that provisioning cannot proceed because of some characteristic of the member cluster.",
            "PROVISIONING means that provisioning is in progress.",
            "ACTIVE means that the component is ready for use.",
            "STALLED means that provisioning could not be done.",
            "NEEDS_ATTENTION means that the component is ready, but some user intervention is required. (For example that the user should migrate workloads to a new control plane revision.)",
            "DEGRADED means that the component is ready, but operating in a degraded state."
          ],
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "DISABLED",
            "FAILED_PRECONDITION",
            "PROVISIONING",
            "ACTIVE",
            "STALLED",
            "NEEDS_ATTENTION",
            "DEGRADED"
          ]
        }
      },
      "type": "object",
      "description": "Status of data plane management. Only reported per-member."
    },
    "ServiceMeshAnalysisMessage": {
      "properties": {
        "resourcePaths": {
          "items": {
            "type": "string"
          },
          "description": "A list of strings specifying the resource identifiers that were the cause of message generation. A \"path\" here may be: * MEMBERSHIP_ID if the cause is a specific member cluster * MEMBERSHIP_ID/(NAMESPACE\\/)?RESOURCETYPE/NAME if the cause is a resource in a cluster",
          "type": "array"
        },
        "messageBase": {
          "description": "Details common to all types of Istio and ServiceMesh analysis messages.",
          "$ref": "ServiceMeshAnalysisMessageBase"
        },
        "args": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "A UI can combine these args with a template (based on message_base.type) to produce an internationalized message.",
          "type": "object"
        },
        "description": {
          "description": "A human readable description of what the error means. It is suitable for non-internationalize display purposes.",
          "type": "string"
        }
      },
      "id": "ServiceMeshAnalysisMessage",
      "type": "object",
      "description": "AnalysisMessage is a single message produced by an analyzer, and it used to communicate to the end user about the state of their Service Mesh configuration."
    },
    "Membership": {
      "id": "Membership",
      "type": "object",
      "properties": {
        "lastConnectionTime": {
          "description": "Output only. For clusters using Connect, the timestamp of the most recent connection established with Google Cloud. This time is updated every several minutes, not continuously. For clusters that do not use GKE Connect, or that have never connected successfully, this field will be unset.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "deleteTime": {
          "format": "google-datetime",
          "description": "Output only. When the Membership was deleted.",
          "type": "string",
          "readOnly": true
        },
        "authority": {
          "description": "Optional. How to identify workloads from this Membership. See the documentation on Workload Identity for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "$ref": "Authority"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The full, unique name of this Membership resource in the format `projects/*/locations/*/memberships/{membership_id}`, set during creation. `membership_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters."
        },
        "externalId": {
          "description": "Optional. An externally-generated and managed ID for this Membership. This ID may be modified after creation, but this is not recommended. The ID must match the regex: `a-zA-Z0-9*` If this Membership represents a Kubernetes cluster, this value should be set to the UID of the `kube-system` namespace object.",
          "type": "string"
        },
        "endpoint": {
          "$ref": "MembershipEndpoint",
          "description": "Optional. Endpoint information to reach this member."
        },
        "state": {
          "readOnly": true,
          "$ref": "MembershipState",
          "description": "Output only. State of the Membership resource."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. When the Membership was created.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. GCP labels for this membership."
        },
        "uniqueId": {
          "description": "Output only. Google-generated UUID for this resource. This is unique across all Membership resources. If a Membership resource is deleted and another resource with the same name is created, it gets a different unique_id.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Description of this membership, limited to 63 characters. Must match the regex: `a-zA-Z0-9*` This field is present for legacy purposes."
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. When the Membership was last updated."
        }
      },
      "description": "Membership contains information about a member cluster."
    },
    "ValidateCreateMembershipResponse": {
      "type": "object",
      "id": "ValidateCreateMembershipResponse",
      "description": "Response message for the `GkeHub.ValidateCreateMembership` method.",
      "properties": {
        "validationResults": {
          "items": {
            "$ref": "ValidationResult"
          },
          "type": "array",
          "description": "Wraps all the validator results."
        }
      }
    },
    "IdentityServiceMembershipSpec": {
      "type": "object",
      "id": "IdentityServiceMembershipSpec",
      "properties": {
        "authMethods": {
          "description": "A member may support multiple auth methods.",
          "type": "array",
          "items": {
            "$ref": "IdentityServiceAuthMethod"
          }
        }
      },
      "description": "**Anthos Identity Service**: Configuration for a single Membership."
    },
    "Namespace": {
      "id": "Namespace",
      "description": "Namespace represents a namespace across the Fleet",
      "type": "object",
      "properties": {
        "state": {
          "description": "Output only. State of the namespace resource.",
          "$ref": "NamespaceLifecycleState",
          "readOnly": true
        },
        "deleteTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. When the namespace was deleted."
        },
        "scope": {
          "description": "Required. Scope associated with the namespace",
          "type": "string"
        },
        "name": {
          "description": "The resource name for the namespace `projects/{project}/locations/{location}/namespaces/{namespace}`",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. When the namespace was created.",
          "type": "string",
          "readOnly": true
        },
        "uid": {
          "description": "Output only. Google-generated UUID for this resource. This is unique across all namespace resources. If a namespace resource is deleted and another resource with the same name is created, it gets a different uid.",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "description": "Output only. When the namespace was last updated.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        }
      }
    },
    "ConnectAgentResource": {
      "type": "object",
      "id": "ConnectAgentResource",
      "description": "ConnectAgentResource represents a Kubernetes resource manifest for Connect Agent deployment.",
      "properties": {
        "manifest": {
          "type": "string",
          "description": "YAML manifest of the resource."
        },
        "type": {
          "$ref": "TypeMeta",
          "description": "Kubernetes type of the resource."
        }
      }
    },
    "ValidationResult": {
      "type": "object",
      "id": "ValidationResult",
      "description": "ValidationResults are results set by each validator running during ValidateCreateMembership.",
      "properties": {
        "validator": {
          "enumDescriptions": [
            "UNSPECIFIED validator.",
            "MEMBERSHIP_ID validator validates the membership_id is still available.",
            "CROSS_PROJECT_PERMISSION validator validates the cross-project P4SA binding is in place."
          ],
          "enum": [
            "VALIDATOR_TYPE_UNSPECIFIED",
            "MEMBERSHIP_ID",
            "CROSS_PROJECT_PERMISSION"
          ],
          "type": "string",
          "description": "Validator type to validate membership with."
        },
        "result": {
          "description": "Additional information for the validation.",
          "type": "string"
        },
        "success": {
          "type": "boolean",
          "description": "Whether the validation is passed or not."
        }
      }
    },
    "FleetObservabilityFeatureState": {
      "id": "FleetObservabilityFeatureState",
      "type": "object",
      "properties": {},
      "description": "**FleetObservability**: An empty state left as an example Hub-wide Feature state."
    },
    "ConfigManagementInstallError": {
      "description": "Errors pertaining to the installation of ACM",
      "id": "ConfigManagementInstallError",
      "type": "object",
      "properties": {
        "errorMessage": {
          "description": "A string representing the user facing error message",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        }
      },
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location."
    },
    "PolicyControllerPolicyContentSpec": {
      "type": "object",
      "description": "PolicyContentSpec defines the user's desired content configuration on the cluster.",
      "id": "PolicyControllerPolicyContentSpec",
      "properties": {
        "bundles": {
          "additionalProperties": {
            "$ref": "PolicyControllerBundleInstallSpec"
          },
          "description": "map of bundle name to BundleInstallSpec. The bundle name maps to the `bundleName` key in the `policycontroller.gke.io/constraintData` annotation on a constraint.",
          "type": "object"
        }
      }
    },
    "ConfigManagementOciConfig": {
      "properties": {
        "syncRepo": {
          "description": "The OCI image repository URL for the package to sync from. e.g. `LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME`.",
          "type": "string"
        },
        "secretType": {
          "type": "string",
          "description": "Type of secret configured for access to the Git repo."
        },
        "syncWaitSecs": {
          "description": "Period in seconds between consecutive syncs. Default: 15.",
          "format": "int64",
          "type": "string"
        },
        "gcpServiceAccountEmail": {
          "description": "The GCP Service Account Email used for auth when secret_type is gcpServiceAccount.",
          "type": "string"
        },
        "policyDir": {
          "type": "string",
          "description": "The absolute path of the directory that contains the local resources. Default: the root directory of the image."
        }
      },
      "description": "OCI repo configuration for a single cluster",
      "id": "ConfigManagementOciConfig",
      "type": "object"
    }
  },
  "mtlsRootUrl": "https://gkehub.mtls.googleapis.com/",
  "basePath": "",
  "rootUrl": "https://gkehub.googleapis.com/",
  "documentationLink": "https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster",
  "id": "gkehub:v1alpha",
  "servicePath": "",
  "batchPath": "batch",
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "title": "GKE Hub API",
  "fullyEncodeReservedExpansion": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  }
}

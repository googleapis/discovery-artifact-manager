{
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "name": "apim",
  "baseUrl": "https://apim.googleapis.com/",
  "servicePath": "",
  "ownerName": "Google",
  "id": "apim:v1alpha",
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {}
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {}
    },
    "ObservationSource": {
      "id": "ObservationSource",
      "description": "Observation source configuration types",
      "type": "object",
      "properties": {
        "gclbObservationSource": {
          "description": "The GCLB observation source",
          "$ref": "GclbObservationSource"
        },
        "name": {
          "description": "Identifier. name of resource For MVP, each region can only have 1 source.",
          "type": "string"
        },
        "state": {
          "description": "Output only. The observation source state",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified state",
            "Source is in the creating state",
            "Source has been created and is ready to use",
            "Source is being deleted",
            "Source is in an error state"
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "DELETING",
            "ERROR"
          ]
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GclbObservationSource": {
      "id": "GclbObservationSource",
      "description": "The GCLB observation source.",
      "type": "object",
      "properties": {
        "pscNetworkConfigs": {
          "description": "Required. The VPC networks where traffic will be observed. All load balancers within this network will be observed. Currently, this is limited to only one network.",
          "type": "array",
          "items": {
            "$ref": "GclbObservationSourcePscNetworkConfig"
          }
        }
      }
    },
    "GclbObservationSourcePscNetworkConfig": {
      "id": "GclbObservationSourcePscNetworkConfig",
      "description": "Network information for setting up a PSC connection.",
      "type": "object",
      "properties": {
        "network": {
          "description": "Required. The VPC network. Format: `projects/{project_id}/global/networks/{network}`",
          "type": "string"
        },
        "subnetwork": {
          "description": "Required. The subnetwork in the source region that will be used to connect to the Cloud Load Balancers via PSC NEGs. Must belong to `network`. Format: projects/{project_id}/regions/{region}/subnetworks/{subnet}",
          "type": "string"
        }
      }
    },
    "ListObservationSourcesResponse": {
      "id": "ListObservationSourcesResponse",
      "description": "Message for response to listing ObservationSources",
      "type": "object",
      "properties": {
        "observationSources": {
          "description": "The ObservationSource from the specified project and location.",
          "type": "array",
          "items": {
            "$ref": "ObservationSource"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ObservationJob": {
      "id": "ObservationJob",
      "description": "Message describing ObservationJob object",
      "type": "object",
      "properties": {
        "name": {
          "description": "Identifier. name of resource Format: projects/{project}/locations/{location}/observationJobs/{observation_job}",
          "type": "string"
        },
        "state": {
          "description": "Output only. The observation job state",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified state",
            "Job is in the creating state",
            "Job is in the enabling state",
            "Job is enabled",
            "Job is in the disabling state",
            "Job is disabled",
            "Job is being deleted",
            "Job is in an error state"
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ENABLING",
            "ENABLED",
            "DISABLING",
            "DISABLED",
            "DELETING",
            "ERROR"
          ]
        },
        "sources": {
          "description": "Optional. These should be of the same kind of source.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "ListObservationJobsResponse": {
      "id": "ListObservationJobsResponse",
      "description": "Message for response to listing ObservationJobs",
      "type": "object",
      "properties": {
        "observationJobs": {
          "description": "The ObservationJob from the specified project and location.",
          "type": "array",
          "items": {
            "$ref": "ObservationJob"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EnableObservationJobRequest": {
      "id": "EnableObservationJobRequest",
      "description": "Message for enabling an ObservationJob",
      "type": "object",
      "properties": {}
    },
    "DisableObservationJobRequest": {
      "id": "DisableObservationJobRequest",
      "description": "Message for disabling an ObservationJob",
      "type": "object",
      "properties": {}
    },
    "ApiObservation": {
      "id": "ApiObservation",
      "description": "Message describing ApiObservation object",
      "type": "object",
      "properties": {
        "name": {
          "description": "Identifier. Name of resource",
          "type": "string"
        },
        "style": {
          "description": "Style of ApiObservation",
          "type": "string",
          "enumDescriptions": [
            "Unknown style",
            "Style is Rest API",
            "Style is Grpc API",
            "Style is GraphQL API"
          ],
          "enum": [
            "STYLE_UNSPECIFIED",
            "REST",
            "GRPC",
            "GRAPHQL"
          ]
        },
        "serverIps": {
          "description": "The IP address (IPv4 or IPv6) of the origin server that the request was sent to. This field can include port information. Examples: `\"192.168.1.1\"`, `\"10.0.0.1:80\"`, `\"FE80::0202:B3FF:FE1E:8329\"`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hostname": {
          "description": "The hostname of requests processed for this Observation.",
          "type": "string"
        },
        "sourceLocations": {
          "description": "Location of the Observation Source, for example \"us-central1\" or \"europe-west1.\"",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "description": "User-defined tags to organize and sort",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "apiOperationCount": {
          "description": "The number of observed API Operations.",
          "type": "string",
          "format": "int64"
        },
        "createTime": {
          "description": "Create time stamp",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Update time stamp",
          "type": "string",
          "format": "google-datetime"
        },
        "lastEventDetectedTime": {
          "description": "Last event detected time stamp",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "ListApiObservationsResponse": {
      "id": "ListApiObservationsResponse",
      "description": "Message for response to listing ApiObservations",
      "type": "object",
      "properties": {
        "apiObservations": {
          "description": "The ApiObservation from the specified project and location and ObservationJobs.",
          "type": "array",
          "items": {
            "$ref": "ApiObservation"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "ApiOperation": {
      "id": "ApiOperation",
      "description": "Message describing ApiOperation object",
      "type": "object",
      "properties": {
        "httpOperation": {
          "description": "An HTTP Operation.",
          "$ref": "HttpOperation"
        },
        "name": {
          "description": "Identifier. Name of resource",
          "type": "string"
        },
        "firstSeenTime": {
          "description": "First seen time stamp",
          "type": "string",
          "format": "google-datetime"
        },
        "lastSeenTime": {
          "description": "Last seen time stamp",
          "type": "string",
          "format": "google-datetime"
        },
        "count": {
          "description": "The number of occurrences of this API Operation.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "HttpOperation": {
      "id": "HttpOperation",
      "description": "An HTTP-based API Operation, sometimes called a \"REST\" Operation.",
      "type": "object",
      "properties": {
        "path": {
          "description": "Path of the HTTP request.",
          "type": "string"
        },
        "pathParams": {
          "description": "Path params of HttpOperation",
          "type": "array",
          "items": {
            "$ref": "HttpOperationPathParam"
          }
        },
        "queryParams": {
          "description": "Query params of HttpOperation",
          "type": "object",
          "additionalProperties": {
            "$ref": "HttpOperationQueryParam"
          }
        },
        "method": {
          "description": "HTTP Method.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified HTTP method",
            "GET HTTP method",
            "HEAD HTTP method",
            "POST HTTP method",
            "PUT HTTP method",
            "PATCH HTTP method",
            "DELETE HTTP method",
            "TRACE HTTP method",
            "OPTIONS HTTP method",
            "CONNECT HTTP method"
          ],
          "enum": [
            "HTTP_METHOD_UNSPECIFIED",
            "GET",
            "HEAD",
            "POST",
            "PUT",
            "PATCH",
            "DELETE",
            "TRACE",
            "OPTIONS",
            "CONNECT"
          ]
        },
        "request": {
          "description": "Request metadata.",
          "$ref": "HttpOperationHttpRequest"
        },
        "response": {
          "description": "Response metadata.",
          "$ref": "HttpOperationHttpResponse"
        }
      }
    },
    "HttpOperationPathParam": {
      "id": "HttpOperationPathParam",
      "description": "HTTP Path parameter.",
      "type": "object",
      "properties": {
        "position": {
          "description": "Segment location in the path, 1-indexed",
          "type": "integer",
          "format": "int32"
        },
        "dataType": {
          "description": "Data type of path param",
          "type": "string",
          "enumDescriptions": [
            "Unspecified data type",
            "Boolean data type",
            "Integer data type",
            "Float data type",
            "String data type",
            "UUID data type"
          ],
          "enum": [
            "DATA_TYPE_UNSPECIFIED",
            "BOOL",
            "INTEGER",
            "FLOAT",
            "STRING",
            "UUID"
          ]
        }
      }
    },
    "HttpOperationQueryParam": {
      "id": "HttpOperationQueryParam",
      "description": "An aggregation of HTTP query parameter occurrences.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of query param",
          "type": "string"
        },
        "count": {
          "description": "The number of occurrences of this query parameter across transactions.",
          "type": "string",
          "format": "int64"
        },
        "dataType": {
          "description": "Data type of path param",
          "type": "string",
          "enumDescriptions": [
            "Unspecified data type",
            "Boolean data type",
            "Integer data type",
            "Float data type",
            "String data type",
            "UUID data type"
          ],
          "enum": [
            "DATA_TYPE_UNSPECIFIED",
            "BOOL",
            "INTEGER",
            "FLOAT",
            "STRING",
            "UUID"
          ]
        }
      }
    },
    "HttpOperationHttpRequest": {
      "id": "HttpOperationHttpRequest",
      "description": "An aggregation of HTTP requests.",
      "type": "object",
      "properties": {
        "headers": {
          "description": "Unordered map from header name to header metadata",
          "type": "object",
          "additionalProperties": {
            "$ref": "HttpOperationHeader"
          }
        }
      }
    },
    "HttpOperationHeader": {
      "id": "HttpOperationHeader",
      "description": "An aggregation of HTTP header occurrences.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Header name.",
          "type": "string"
        },
        "count": {
          "description": "The number of occurrences of this Header across transactions.",
          "type": "string",
          "format": "int64"
        },
        "dataType": {
          "description": "Data type of header",
          "type": "string",
          "enumDescriptions": [
            "Unspecified data type",
            "Boolean data type",
            "Integer data type",
            "Float data type",
            "String data type",
            "UUID data type"
          ],
          "enum": [
            "DATA_TYPE_UNSPECIFIED",
            "BOOL",
            "INTEGER",
            "FLOAT",
            "STRING",
            "UUID"
          ]
        }
      }
    },
    "HttpOperationHttpResponse": {
      "id": "HttpOperationHttpResponse",
      "description": "An aggregation of HTTP responses.",
      "type": "object",
      "properties": {
        "headers": {
          "description": "Unordered map from header name to header metadata",
          "type": "object",
          "additionalProperties": {
            "$ref": "HttpOperationHeader"
          }
        },
        "responseCodes": {
          "description": "Map of status code to observed count",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "ListApiOperationsResponse": {
      "id": "ListApiOperationsResponse",
      "description": "Message for response to listing ApiOperations",
      "type": "object",
      "properties": {
        "apiOperations": {
          "description": "The ApiOperations from the specified project and location and ObservationJob and ApiObservation.",
          "type": "array",
          "items": {
            "$ref": "ApiOperation"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents a Google Cloud location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "canonicalName": "API Management",
  "documentationLink": "https://cloud.google.com/apigee/",
  "revision": "20240605",
  "discoveryVersion": "v1",
  "rootUrl": "https://apim.googleapis.com/",
  "title": "API Management API",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "description": "Enables users to discover shadow APIs in existing Google Cloud infrastructure.",
  "fullyEncodeReservedExpansion": true,
  "basePath": "",
  "version": "v1alpha",
  "batchPath": "batch",
  "version_module": true,
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "apim.projects.locations.list",
              "path": "v1alpha/{+name}/locations",
              "flatPath": "v1alpha/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "apim.projects.locations.get",
              "path": "v1alpha/{+name}",
              "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          },
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "apim.projects.locations.operations.list",
                  "path": "v1alpha/{+name}/operations",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`."
                },
                "get": {
                  "id": "apim.projects.locations.operations.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "apim.projects.locations.operations.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "apim.projects.locations.operations.cancel",
                  "path": "v1alpha/{+name}:cancel",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "observationSources": {
              "methods": {
                "create": {
                  "id": "apim.projects.locations.observationSources.create",
                  "path": "v1alpha/{+parent}/observationSources",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/observationSources",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "observationSourceId": {
                      "description": "Required. The ID to use for the Observation Source. This value should be 4-63 characters, and valid characters are /a-z-/.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ObservationSource"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "CreateObservationSource creates a new ObservationSource but does not affect any deployed infrastructure. It is a configuration that can be used in an Observation Job to collect data about APIs running in user's dataplane."
                },
                "get": {
                  "id": "apim.projects.locations.observationSources.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/observationSources/{observationSourcesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the ObservationSource to retrieve. Format: projects/{project}/locations/{location}/observationSources/{source}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/observationSources/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ObservationSource"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "GetObservationSource retrieves a single ObservationSource by name."
                },
                "list": {
                  "id": "apim.projects.locations.observationSources.list",
                  "path": "v1alpha/{+parent}/observationSources",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/observationSources",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent, which owns this collection of ObservationSources. Format: projects/{project}/locations/{location}",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of ObservationSources to return. The service may return fewer than this value. If unspecified, at most 10 ObservationSources will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. A page token, received from a previous `ListObservationSources` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListObservationSources` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListObservationSourcesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "ListObservationSources gets all ObservationSources for a given project and location"
                },
                "delete": {
                  "id": "apim.projects.locations.observationSources.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/observationSources/{observationSourcesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource Format: projects/{project}/locations/{location}/observationSources/{source}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/observationSources/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "DeleteObservationSource deletes an observation source. This method will fail if the observation source is currently being used by any ObservationJob, even if not enabled."
                }
              }
            },
            "observationJobs": {
              "methods": {
                "create": {
                  "id": "apim.projects.locations.observationJobs.create",
                  "path": "v1alpha/{+parent}/observationJobs",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/observationJobs",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource where this ObservationJob will be created. Format: projects/{project}/locations/{location}",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "observationJobId": {
                      "description": "Required. The ID to use for the Observation Job. This value should be 4-63 characters, and valid characters are /a-z-/.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ObservationJob"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "CreateObservationJob creates a new ObservationJob but does not have any effecton its own. It is a configuration that can be used in an Observation Job to collect data about existing APIs."
                },
                "get": {
                  "id": "apim.projects.locations.observationJobs.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/observationJobs/{observationJobsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the ObservationJob to retrieve. Format: projects/{project}/locations/{location}/observationJobs/{job}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/observationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ObservationJob"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "GetObservationJob retrieves a single ObservationJob by name."
                },
                "list": {
                  "id": "apim.projects.locations.observationJobs.list",
                  "path": "v1alpha/{+parent}/observationJobs",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/observationJobs",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent, which owns this collection of ObservationJobs. Format: projects/{project}/locations/{location}",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of ObservationJobs to return. The service may return fewer than this value. If unspecified, at most 10 ObservationJobs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. A page token, received from a previous `ListObservationJobs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListObservationJobs` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListObservationJobsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "ListObservationJobs gets all ObservationJobs for a given project and location"
                },
                "delete": {
                  "id": "apim.projects.locations.observationJobs.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/observationJobs/{observationJobsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource Format: projects/{project}/locations/{location}/observationJobs/{observation_job}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/observationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "DeleteObservationJob deletes an ObservationJob. This method will fail if the observation job is currently being used by any ObservationSource, even if not enabled."
                },
                "enable": {
                  "id": "apim.projects.locations.observationJobs.enable",
                  "path": "v1alpha/{+name}:enable",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/observationJobs/{observationJobsId}:enable",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the ObservationJob to enable. Format: projects/{project}/locations/{location}/observationJobs/{job}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/observationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "EnableObservationJobRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Enables the given ObservationJob."
                },
                "disable": {
                  "id": "apim.projects.locations.observationJobs.disable",
                  "path": "v1alpha/{+name}:disable",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/observationJobs/{observationJobsId}:disable",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the ObservationJob to disable. Format: projects/{project}/locations/{location}/observationJobs/{job}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/observationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "DisableObservationJobRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Disables the given ObservationJob."
                }
              },
              "resources": {
                "apiObservations": {
                  "methods": {
                    "get": {
                      "id": "apim.projects.locations.observationJobs.apiObservations.get",
                      "path": "v1alpha/{+name}",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/observationJobs/{observationJobsId}/apiObservations/{apiObservationsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the ApiObservation to retrieve. Format: projects/{project}/locations/{location}/observationJobs/{observation_job}/apiObservations/{api_observation}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/observationJobs/[^/]+/apiObservations/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "ApiObservation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "GetApiObservation retrieves a single ApiObservation by name."
                    },
                    "list": {
                      "id": "apim.projects.locations.observationJobs.apiObservations.list",
                      "path": "v1alpha/{+parent}/apiObservations",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/observationJobs/{observationJobsId}/apiObservations",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent, which owns this collection of ApiObservations. Format: projects/{project}/locations/{location}/observationJobs/{observation_job}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/observationJobs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of ApiObservations to return. The service may return fewer than this value. If unspecified, at most 10 ApiObservations will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Optional. A page token, received from a previous `ListApiObservations` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApiObservations` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListApiObservationsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "ListApiObservations gets all ApiObservations for a given project and location and ObservationJob"
                    }
                  },
                  "resources": {
                    "apiOperations": {
                      "methods": {
                        "get": {
                          "id": "apim.projects.locations.observationJobs.apiObservations.apiOperations.get",
                          "path": "v1alpha/{+name}",
                          "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/observationJobs/{observationJobsId}/apiObservations/{apiObservationsId}/apiOperations/{apiOperationsId}",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the ApiOperation to retrieve. Format: projects/{project}/locations/{location}/observationJobs/{observation_job}/apiObservations/{api_observation}/apiOperation/{api_operation}",
                              "pattern": "^projects/[^/]+/locations/[^/]+/observationJobs/[^/]+/apiObservations/[^/]+/apiOperations/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "ApiOperation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "GetApiOperation retrieves a single ApiOperation by name."
                        },
                        "list": {
                          "id": "apim.projects.locations.observationJobs.apiObservations.apiOperations.list",
                          "path": "v1alpha/{+parent}/apiOperations",
                          "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/observationJobs/{observationJobsId}/apiObservations/{apiObservationsId}/apiOperations",
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "description": "Required. The parent, which owns this collection of ApiOperations. Format: projects/{project}/locations/{location}/observationJobs/{observation_job}/apiObservations/{api_observation}",
                              "pattern": "^projects/[^/]+/locations/[^/]+/observationJobs/[^/]+/apiObservations/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "Optional. The maximum number of ApiOperations to return. The service may return fewer than this value. If unspecified, at most 10 ApiOperations will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "Optional. A page token, received from a previous `ListApiApiOperations` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApiApiOperations` must match the call that provided the page token.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListApiOperationsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "ListApiOperations gets all ApiOperations for a given project and location and ObservationJob and ApiObservation"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "mtlsRootUrl": "https://apim.mtls.googleapis.com/",
  "protocol": "rest"
}

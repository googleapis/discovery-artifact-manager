{
  "basePath": "",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "rootUrl": "https://iam.googleapis.com/",
  "ownerDomain": "google.com",
  "mtlsRootUrl": "https://iam.mtls.googleapis.com/",
  "version_module": true,
  "protocol": "rest",
  "baseUrl": "https://iam.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "revision": "20220421",
  "servicePath": "",
  "description": "Manages identity and access control for Google Cloud Platform resources, including the creation of service accounts, which you can use to authenticate to Google and make API calls. ",
  "resources": {
    "policies": {
      "methods": {
        "createPolicy": {
          "path": "v2beta/{+parent}",
          "flatPath": "v2beta/policies/{policiesId}/{policiesId1}",
          "httpMethod": "POST",
          "request": {
            "$ref": "GoogleIamV2betaPolicy"
          },
          "description": "Creates a policy.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "iam.policies.createPolicy",
          "parameters": {
            "parent": {
              "location": "path",
              "pattern": "^policies/[^/]+/[^/]+$",
              "required": true,
              "description": "Required. The resource that the policy is attached to, along with the kind of policy to create. Format: `policies/{attachment_point}/denypolicies` The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, `/`, must be written as `%2F`. For example, `policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies`. For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID.",
              "type": "string"
            },
            "policyId": {
              "location": "query",
              "description": "The ID to use for this policy, which will become the final component of the policy's resource name. The ID must contain 3 to 63 characters. It can contain lowercase letters and numbers, as well as dashes (`-`) and periods (`.`). The first character must be a lowercase letter.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "GoogleLongrunningOperation"
          },
          "parameterOrder": [
            "parent"
          ]
        },
        "listPolicies": {
          "path": "v2beta/{+parent}",
          "description": "Retrieves the policies of the specified kind that are attached to a resource. The response lists only policy metadata. In particular, policy rules are omitted.",
          "flatPath": "v2beta/policies/{policiesId}/{policiesId1}",
          "httpMethod": "GET",
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "A page token received in a ListPoliciesResponse. Provide this token to retrieve the next page."
            },
            "parent": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Required. The resource that the policy is attached to, along with the kind of policy to list. Format: `policies/{attachment_point}/denypolicies` The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, `/`, must be written as `%2F`. For example, `policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies`. For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID.",
              "pattern": "^policies/[^/]+/[^/]+$"
            },
            "pageSize": {
              "format": "int32",
              "description": "The maximum number of policies to return. IAM ignores this value and uses the value 1000.",
              "location": "query",
              "type": "integer"
            }
          },
          "response": {
            "$ref": "GoogleIamV2betaListPoliciesResponse"
          },
          "parameterOrder": [
            "parent"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "iam.policies.listPolicies"
        },
        "update": {
          "id": "iam.policies.update",
          "flatPath": "v2beta/policies/{policiesId}/{policiesId1}/{policiesId2}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "GoogleLongrunningOperation"
          },
          "path": "v2beta/{+name}",
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "PUT",
          "parameters": {
            "name": {
              "pattern": "^policies/[^/]+/[^/]+/[^/]+$",
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Immutable. The resource name of the `Policy`, which must be unique. Format: `policies/{attachment_point}/denypolicies/{policy_id}` The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, `/`, must be written as `%2F`. For example, `policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-deny-policy`. For organizations and folders, use the numeric ID in the full resource name. For projects, requests can use the alphanumeric or the numeric ID. Responses always contain the numeric ID."
            }
          },
          "request": {
            "$ref": "GoogleIamV2betaPolicy"
          },
          "description": "Updates the specified policy. You can update only the rules and the display name for the policy. To update a policy, you should use a read-modify-write loop: 1. Use GetPolicy to read the current version of the policy. 2. Modify the policy as needed. 3. Use `UpdatePolicy` to write the updated policy. This pattern helps prevent conflicts between concurrent updates."
        },
        "get": {
          "response": {
            "$ref": "GoogleIamV2betaPolicy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Gets a policy.",
          "path": "v2beta/{+name}",
          "flatPath": "v2beta/policies/{policiesId}/{policiesId1}/{policiesId2}",
          "id": "iam.policies.get",
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "description": "Required. The resource name of the policy to retrieve. Format: `policies/{attachment_point}/denypolicies/{policy_id}` Use the URL-encoded full resource name, which means that the forward-slash character, `/`, must be written as `%2F`. For example, `policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-policy`. For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID.",
              "location": "path",
              "pattern": "^policies/[^/]+/[^/]+/[^/]+$"
            }
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ]
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "GoogleLongrunningOperation"
          },
          "httpMethod": "DELETE",
          "flatPath": "v2beta/policies/{policiesId}/{policiesId1}/{policiesId2}",
          "parameters": {
            "name": {
              "pattern": "^policies/[^/]+/[^/]+/[^/]+$",
              "required": true,
              "description": "Required. The resource name of the policy to delete. Format: `policies/{attachment_point}/denypolicies/{policy_id}` Use the URL-encoded full resource name, which means that the forward-slash character, `/`, must be written as `%2F`. For example, `policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-policy`. For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID.",
              "type": "string",
              "location": "path"
            },
            "etag": {
              "type": "string",
              "location": "query",
              "description": "Optional. The expected `etag` of the policy to delete. If the value does not match the value that is stored in IAM, the request fails with a `409` error code and `ABORTED` status. If you omit this field, the policy is deleted regardless of its current `etag`."
            }
          },
          "path": "v2beta/{+name}",
          "parameterOrder": [
            "name"
          ],
          "description": "Deletes a policy. This action is permanent.",
          "id": "iam.policies.delete"
        }
      },
      "resources": {
        "operations": {
          "methods": {
            "get": {
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "iam.policies.operations.get",
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "flatPath": "v2beta/policies/{policiesId}/{policiesId1}/{policiesId2}/operations/{operationsId}",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^policies/[^/]+/[^/]+/[^/]+/operations/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "The name of the operation resource."
                }
              },
              "path": "v2beta/{+name}",
              "httpMethod": "GET"
            }
          }
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "schemas": {
    "GoogleIamAdminV1AuditDataPermissionDelta": {
      "description": "A PermissionDelta message to record the added_permissions and removed_permissions inside a role.",
      "type": "object",
      "id": "GoogleIamAdminV1AuditDataPermissionDelta",
      "properties": {
        "addedPermissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Added permissions."
        },
        "removedPermissions": {
          "description": "Removed permissions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleIamAdminV1AuditData": {
      "description": "Audit log information specific to Cloud IAM admin APIs. This message is serialized as an `Any` type in the `ServiceData` message of an `AuditLog` message.",
      "id": "GoogleIamAdminV1AuditData",
      "type": "object",
      "properties": {
        "permissionDelta": {
          "$ref": "GoogleIamAdminV1AuditDataPermissionDelta",
          "description": "The permission_delta when when creating or updating a Role."
        }
      }
    },
    "GoogleIamV2betaDenyRule": {
      "type": "object",
      "properties": {
        "deniedPermissions": {
          "type": "array",
          "description": "The permissions that are explicitly denied by this rule. Each permission uses the format `{service_fqdn}/{resource}.{verb}`, where `{service_fqdn}` is the fully qualified domain name for the service. For example, `iam.googleapis.com/roles.list`.",
          "items": {
            "type": "string"
          }
        },
        "deniedPrincipals": {
          "description": "The identities that are prevented from using one or more permissions on Google Cloud resources. This field can contain the following values: * `principalSet://goog/public:all`: A special identifier that represents any user who is on the internet, even if they do not have a Google Account or are not logged in. * `principal://goog/subject/{email_id}`: A specific Google Account. Includes Gmail, Cloud Identity, and Google Workspace user accounts. For example, `principal://goog/subject/alice@example.com`. * `deleted:principal://goog/subject/{email_id}?uid={uid}`: A specific Google Account that was deleted recently. For example, `deleted:principal://goog/subject/alice@example.com?uid=1234567890`. If the Google Account is recovered, this identifier reverts to the standard identifier for a Google Account. * `principalSet://goog/group/{group_id}`: A Google group. For example, `principalSet://goog/group/admins@example.com`. * `deleted:principalSet://goog/group/{group_id}?uid={uid}`: A Google group that was deleted recently. For example, `deleted:principalSet://goog/group/admins@example.com?uid=1234567890`. If the Google group is restored, this identifier reverts to the standard identifier for a Google group. * `principal://iam.googleapis.com/projects/-/serviceAccounts/{service_account_id}`: A Google Cloud service account. For example, `principal://iam.googleapis.com/projects/-/serviceAccounts/my-service-account@iam.gserviceaccount.com`. * `deleted:principal://iam.googleapis.com/projects/-/serviceAccounts/{service_account_id}?uid={uid}`: A Google Cloud service account that was deleted recently. For example, `deleted:principal://iam.googleapis.com/projects/-/serviceAccounts/my-service-account@iam.gserviceaccount.com?uid=1234567890`. If the service account is undeleted, this identifier reverts to the standard identifier for a service account. * `principalSet://goog/cloudIdentityCustomerId/{customer_id}`: All of the principals associated with the specified Google Workspace or Cloud Identity customer ID. For example, `principalSet://goog/cloudIdentityCustomerId/C01Abc35`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exceptionPrincipals": {
          "description": "The identities that are excluded from the deny rule, even if they are listed in the `denied_principals`. For example, you could add a Google group to the `denied_principals`, then exclude specific users who belong to that group. This field can contain the same values as the `denied_principals` field, excluding `principalSet://goog/public:all`, which represents all users on the internet.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "denialCondition": {
          "description": "The condition that determines whether this deny rule applies to a request. If the condition expression evaluates to `true`, then the deny rule is applied; otherwise, the deny rule is not applied. Each deny rule is evaluated independently. If this deny rule does not apply to a request, other deny rules might still apply. The condition can use CEL functions that evaluate [resource tags](https://cloud.google.com/iam/help/conditions/resource-tags). Other functions and operators are not supported.",
          "$ref": "GoogleTypeExpr"
        },
        "exceptionPermissions": {
          "description": "Specifies the permissions that this rule excludes from the set of denied permissions given by `denied_permissions`. If a permission appears in `denied_permissions` _and_ in `exception_permissions` then it will _not_ be denied. The excluded permissions can be specified using the same syntax as `denied_permissions`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "GoogleIamV2betaDenyRule",
      "description": "A deny rule in an IAM deny policy."
    },
    "GoogleIamV1BindingDelta": {
      "type": "object",
      "id": "GoogleIamV1BindingDelta",
      "description": "One delta entry for Binding. Each individual change (only one member in each entry) to a binding will be a separate entry.",
      "properties": {
        "condition": {
          "$ref": "GoogleTypeExpr",
          "description": "The condition that is associated with this binding."
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. Required"
        },
        "action": {
          "description": "The action that was performed on a Binding. Required",
          "type": "string",
          "enum": [
            "ACTION_UNSPECIFIED",
            "ADD",
            "REMOVE"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Addition of a Binding.",
            "Removal of a Binding."
          ]
        },
        "member": {
          "description": "A single identity requesting access for a Google Cloud resource. Follows the same format of Binding.members. Required",
          "type": "string"
        }
      }
    },
    "GoogleIamV2betaListPoliciesResponse": {
      "description": "Response message for `ListPolicies`.",
      "id": "GoogleIamV2betaListPoliciesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A page token that you can use in a ListPoliciesRequest to retrieve the next page. If this field is omitted, there are no additional pages."
        },
        "policies": {
          "description": "Metadata for the policies that are attached to the resource.",
          "items": {
            "$ref": "GoogleIamV2betaPolicy"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleIamV2betaPolicy": {
      "type": "object",
      "properties": {
        "etag": {
          "description": "An opaque tag that identifies the current version of the `Policy`. IAM uses this value to help manage concurrent updates, so they do not cause one update to be overwritten by another. If this field is present in a CreatePolicy request, the value is ignored.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time when the `Policy` was last updated.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "A user-specified description of the `Policy`. This value can be up to 63 characters."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the `Policy`, which must be unique. Format: `policies/{attachment_point}/denypolicies/{policy_id}` The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, `/`, must be written as `%2F`. For example, `policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-deny-policy`. For organizations and folders, use the numeric ID in the full resource name. For projects, requests can use the alphanumeric or the numeric ID. Responses always contain the numeric ID."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time when the `Policy` was created."
        },
        "kind": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The kind of the `Policy`. Always contains the value `DenyPolicy`."
        },
        "rules": {
          "type": "array",
          "description": "A list of rules that specify the behavior of the `Policy`. All of the rules should be of the `kind` specified in the `Policy`.",
          "items": {
            "$ref": "GoogleIamV2betaPolicyRule"
          }
        },
        "deleteTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time when the `Policy` was deleted. Empty if the policy is not deleted."
        },
        "uid": {
          "description": "Immutable. The globally unique ID of the `Policy`. Assigned automatically when the `Policy` is created.",
          "type": "string"
        },
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A key-value map to store arbitrary metadata for the `Policy`. Keys can be up to 63 characters. Values can be up to 255 characters.",
          "type": "object"
        }
      },
      "id": "GoogleIamV2betaPolicy",
      "description": "Data for an IAM policy."
    },
    "GoogleIamV1PolicyDelta": {
      "id": "GoogleIamV1PolicyDelta",
      "type": "object",
      "description": "The difference delta between two policies.",
      "properties": {
        "bindingDeltas": {
          "items": {
            "$ref": "GoogleIamV1BindingDelta"
          },
          "description": "The delta for Bindings between two policies.",
          "type": "array"
        }
      }
    },
    "GoogleIamV1LoggingAuditData": {
      "description": "Audit log information specific to Cloud IAM. This message is serialized as an `Any` type in the `ServiceData` message of an `AuditLog` message.",
      "type": "object",
      "properties": {
        "policyDelta": {
          "$ref": "GoogleIamV1PolicyDelta",
          "description": "Policy delta between the original policy and the newly set policy."
        }
      },
      "id": "GoogleIamV1LoggingAuditData"
    },
    "GoogleIamV2betaPolicyOperationMetadata": {
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Timestamp when the `google.longrunning.Operation` was created.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "description": "Metadata for long-running `Policy` operations.",
      "id": "GoogleIamV2betaPolicyOperationMetadata"
    },
    "GoogleLongrunningOperation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "GoogleLongrunningOperation",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        }
      }
    },
    "GoogleIamV2betaPolicyRule": {
      "description": "A single rule in a `Policy`.",
      "properties": {
        "description": {
          "description": "A user-specified description of the rule. This value can be up to 256 characters.",
          "type": "string"
        },
        "denyRule": {
          "description": "A rule for a deny policy.",
          "$ref": "GoogleIamV2betaDenyRule"
        }
      },
      "id": "GoogleIamV2betaPolicyRule",
      "type": "object"
    },
    "GoogleTypeExpr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        }
      },
      "id": "GoogleTypeExpr",
      "type": "object"
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        }
      },
      "id": "GoogleRpcStatus",
      "type": "object"
    }
  },
  "ownerName": "Google",
  "id": "iam:v2beta",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "version": "v2beta",
  "parameters": {
    "alt": {
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "description": "V1 error format.",
      "type": "string"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    }
  },
  "documentationLink": "https://cloud.google.com/iam/",
  "name": "iam",
  "discoveryVersion": "v1",
  "canonicalName": "Iam",
  "batchPath": "batch",
  "title": "Identity and Access Management (IAM) API"
}

{
  "title": "Cloud DNS API",
  "resources": {
    "resourceRecordSets": {
      "methods": {
        "delete": {
          "httpMethod": "DELETE",
          "parameters": {
            "managedZone": {
              "location": "path",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "required": true,
              "type": "string"
            },
            "name": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Fully qualified domain name."
            },
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string",
              "location": "query"
            },
            "type": {
              "description": "RRSet type.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "description": "Deletes a previously created ResourceRecordSet.",
          "parameterOrder": [
            "project",
            "managedZone",
            "name",
            "type"
          ],
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}",
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}",
          "id": "dns.resourceRecordSets.delete"
        },
        "list": {
          "parameters": {
            "project": {
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "location": "path"
            },
            "maxResults": {
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "type": {
              "location": "query",
              "type": "string",
              "description": "Restricts the list to return only records of this type. If present, the \"name\" parameter must also be present."
            },
            "pageToken": {
              "type": "string",
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.",
              "location": "query"
            },
            "name": {
              "type": "string",
              "location": "query",
              "description": "Restricts the list to return only records with this fully qualified domain name."
            },
            "managedZone": {
              "type": "string",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "location": "path",
              "required": true
            }
          },
          "response": {
            "$ref": "ResourceRecordSetsListResponse"
          },
          "parameterOrder": [
            "project",
            "managedZone"
          ],
          "description": "Enumerates ResourceRecordSets that you have created but not yet deleted.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets",
          "httpMethod": "GET",
          "id": "dns.resourceRecordSets.list",
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets"
        },
        "get": {
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}",
          "httpMethod": "GET",
          "parameterOrder": [
            "project",
            "managedZone",
            "name",
            "type"
          ],
          "parameters": {
            "managedZone": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID."
            },
            "clientOperationId": {
              "location": "query",
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            },
            "project": {
              "location": "path",
              "description": "Identifies the project addressed by this request.",
              "type": "string",
              "required": true
            },
            "type": {
              "description": "RRSet type.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "name": {
              "location": "path",
              "description": "Fully qualified domain name.",
              "type": "string",
              "required": true
            }
          },
          "id": "dns.resourceRecordSets.get",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}",
          "description": "Fetches the representation of an existing ResourceRecordSet.",
          "response": {
            "$ref": "ResourceRecordSet"
          }
        },
        "patch": {
          "request": {
            "$ref": "ResourceRecordSet"
          },
          "httpMethod": "PATCH",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "response": {
            "$ref": "ResourceRecordSet"
          },
          "parameters": {
            "managedZone": {
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string",
              "location": "query"
            },
            "name": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Fully qualified domain name."
            },
            "type": {
              "required": true,
              "description": "RRSet type.",
              "location": "path",
              "type": "string"
            },
            "project": {
              "location": "path",
              "required": true,
              "description": "Identifies the project addressed by this request.",
              "type": "string"
            }
          },
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}",
          "description": "Applies a partial update to an existing ResourceRecordSet.",
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}",
          "id": "dns.resourceRecordSets.patch",
          "parameterOrder": [
            "project",
            "managedZone",
            "name",
            "type"
          ]
        },
        "create": {
          "id": "dns.resourceRecordSets.create",
          "parameters": {
            "managedZone": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID."
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "clientOperationId": {
              "location": "query",
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            }
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets",
          "request": {
            "$ref": "ResourceRecordSet"
          },
          "description": "Creates a new ResourceRecordSet.",
          "response": {
            "$ref": "ResourceRecordSet"
          },
          "parameterOrder": [
            "project",
            "managedZone"
          ],
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets"
        }
      }
    },
    "managedZoneOperations": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/operations/{operation}",
          "id": "dns.managedZoneOperations.get",
          "parameters": {
            "project": {
              "required": true,
              "description": "Identifies the project addressed by this request.",
              "location": "path",
              "type": "string"
            },
            "operation": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Identifies the operation addressed by this request (ID of the operation)."
            },
            "managedZone": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Identifies the managed zone addressed by this request."
            },
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "project",
            "managedZone",
            "operation"
          ],
          "response": {
            "$ref": "Operation"
          },
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/operations/{operation}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "description": "Fetches the representation of an existing Operation."
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "httpMethod": "GET",
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/operations",
          "parameterOrder": [
            "project",
            "managedZone"
          ],
          "description": "Enumerates Operations for the given ManagedZone.",
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/operations",
          "id": "dns.managedZoneOperations.list",
          "parameters": {
            "project": {
              "description": "Identifies the project addressed by this request.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "maxResults": {
              "type": "integer",
              "location": "query",
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.",
              "format": "int32"
            },
            "sortBy": {
              "location": "query",
              "description": "Sorting criterion. The only supported values are START_TIME and ID.",
              "enumDescriptions": [
                "",
                ""
              ],
              "default": "startTime",
              "type": "string",
              "enum": [
                "startTime",
                "id"
              ]
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request."
            },
            "managedZone": {
              "location": "path",
              "description": "Identifies the managed zone addressed by this request.",
              "type": "string",
              "required": true
            }
          },
          "response": {
            "$ref": "ManagedZoneOperationsListResponse"
          }
        }
      }
    },
    "projects": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "id": "dns.projects.get",
          "path": "dns/v1beta2/projects/{project}",
          "parameterOrder": [
            "project"
          ],
          "response": {
            "$ref": "Project"
          },
          "parameters": {
            "project": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Identifies the project addressed by this request."
            },
            "clientOperationId": {
              "location": "query",
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            }
          },
          "description": "Fetches the representation of an existing Project.",
          "httpMethod": "GET",
          "flatPath": "dns/v1beta2/projects/{project}"
        }
      }
    },
    "responsePolicyRules": {
      "methods": {
        "patch": {
          "parameters": {
            "responsePolicy": {
              "description": "User assigned name of the Response Policy containing the Response Policy Rule.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "clientOperationId": {
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query"
            },
            "responsePolicyRule": {
              "required": true,
              "type": "string",
              "description": "User assigned name of the Response Policy Rule addressed by this request.",
              "location": "path"
            },
            "project": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Identifies the project addressed by this request."
            }
          },
          "response": {
            "$ref": "ResponsePolicyRulesPatchResponse"
          },
          "httpMethod": "PATCH",
          "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}",
          "id": "dns.responsePolicyRules.patch",
          "parameterOrder": [
            "project",
            "responsePolicy",
            "responsePolicyRule"
          ],
          "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "description": "Applies a partial update to an existing Response Policy Rule.",
          "request": {
            "$ref": "ResponsePolicyRule"
          }
        },
        "create": {
          "id": "dns.responsePolicyRules.create",
          "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "description": "Creates a new Response Policy Rule.",
          "parameterOrder": [
            "project",
            "responsePolicy"
          ],
          "httpMethod": "POST",
          "parameters": {
            "project": {
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "location": "path"
            },
            "clientOperationId": {
              "location": "query",
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            },
            "responsePolicy": {
              "required": true,
              "type": "string",
              "description": "User assigned name of the Response Policy containing the Response Policy Rule.",
              "location": "path"
            }
          },
          "response": {
            "$ref": "ResponsePolicyRule"
          },
          "request": {
            "$ref": "ResponsePolicyRule"
          },
          "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "description": "Fetches the representation of an existing Response Policy Rule.",
          "response": {
            "$ref": "ResponsePolicyRule"
          },
          "id": "dns.responsePolicyRules.get",
          "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}",
          "parameterOrder": [
            "project",
            "responsePolicy",
            "responsePolicyRule"
          ],
          "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}",
          "httpMethod": "GET",
          "parameters": {
            "project": {
              "description": "Identifies the project addressed by this request.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "responsePolicyRule": {
              "required": true,
              "location": "path",
              "description": "User assigned name of the Response Policy Rule addressed by this request.",
              "type": "string"
            },
            "responsePolicy": {
              "type": "string",
              "required": true,
              "description": "User assigned name of the Response Policy containing the Response Policy Rule.",
              "location": "path"
            },
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            }
          }
        },
        "delete": {
          "parameterOrder": [
            "project",
            "responsePolicy",
            "responsePolicyRule"
          ],
          "description": "Deletes a previously created Response Policy Rule.",
          "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}",
          "parameters": {
            "responsePolicy": {
              "required": true,
              "type": "string",
              "description": "User assigned name of the Response Policy containing the Response Policy Rule.",
              "location": "path"
            },
            "responsePolicyRule": {
              "type": "string",
              "description": "User assigned name of the Response Policy Rule addressed by this request.",
              "location": "path",
              "required": true
            },
            "project": {
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "location": "path"
            },
            "clientOperationId": {
              "location": "query",
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            }
          },
          "id": "dns.responsePolicyRules.delete",
          "httpMethod": "DELETE"
        },
        "update": {
          "request": {
            "$ref": "ResponsePolicyRule"
          },
          "id": "dns.responsePolicyRules.update",
          "parameterOrder": [
            "project",
            "responsePolicy",
            "responsePolicyRule"
          ],
          "httpMethod": "PUT",
          "description": "Updates an existing Response Policy Rule.",
          "response": {
            "$ref": "ResponsePolicyRulesUpdateResponse"
          },
          "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}",
          "parameters": {
            "project": {
              "description": "Identifies the project addressed by this request.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query",
              "type": "string"
            },
            "responsePolicy": {
              "location": "path",
              "required": true,
              "description": "User assigned name of the Response Policy containing the Response Policy Rule.",
              "type": "string"
            },
            "responsePolicyRule": {
              "description": "User assigned name of the Response Policy Rule addressed by this request.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          }
        },
        "list": {
          "parameterOrder": [
            "project",
            "responsePolicy"
          ],
          "description": "Enumerates all Response Policy Rules associated with a project.",
          "httpMethod": "GET",
          "parameters": {
            "maxResults": {
              "type": "integer",
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.",
              "location": "query",
              "format": "int32"
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request."
            },
            "responsePolicy": {
              "required": true,
              "description": "User assigned name of the Response Policy to list.",
              "location": "path",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "id": "dns.responsePolicyRules.list",
          "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules",
          "response": {
            "$ref": "ResponsePolicyRulesListResponse"
          },
          "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules"
        }
      }
    },
    "policies": {
      "methods": {
        "list": {
          "description": "Enumerates all Policies associated with a project.",
          "flatPath": "dns/v1beta2/projects/{project}/policies",
          "id": "dns.policies.list",
          "parameterOrder": [
            "project"
          ],
          "parameters": {
            "pageToken": {
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.",
              "type": "integer",
              "location": "query",
              "format": "int32"
            },
            "project": {
              "type": "string",
              "location": "path",
              "description": "Identifies the project addressed by this request.",
              "required": true
            }
          },
          "response": {
            "$ref": "PoliciesListResponse"
          },
          "httpMethod": "GET",
          "path": "dns/v1beta2/projects/{project}/policies",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ]
        },
        "delete": {
          "description": "Deletes a previously created Policy. Fails if the policy is still being referenced by a network.",
          "flatPath": "dns/v1beta2/projects/{project}/policies/{policy}",
          "path": "dns/v1beta2/projects/{project}/policies/{policy}",
          "parameters": {
            "project": {
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "location": "path"
            },
            "policy": {
              "description": "User given friendly name of the policy addressed by this request.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            }
          },
          "parameterOrder": [
            "project",
            "policy"
          ],
          "id": "dns.policies.delete",
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ]
        },
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "parameters": {
            "clientOperationId": {
              "location": "query",
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            },
            "project": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Identifies the project addressed by this request."
            },
            "policy": {
              "required": true,
              "description": "User given friendly name of the policy addressed by this request.",
              "type": "string",
              "location": "path"
            }
          },
          "httpMethod": "PUT",
          "response": {
            "$ref": "PoliciesUpdateResponse"
          },
          "id": "dns.policies.update",
          "request": {
            "$ref": "Policy"
          },
          "parameterOrder": [
            "project",
            "policy"
          ],
          "description": "Updates an existing Policy.",
          "path": "dns/v1beta2/projects/{project}/policies/{policy}",
          "flatPath": "dns/v1beta2/projects/{project}/policies/{policy}"
        },
        "patch": {
          "id": "dns.policies.patch",
          "parameterOrder": [
            "project",
            "policy"
          ],
          "request": {
            "$ref": "Policy"
          },
          "httpMethod": "PATCH",
          "parameters": {
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string",
              "location": "query"
            },
            "project": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Identifies the project addressed by this request."
            },
            "policy": {
              "description": "User given friendly name of the policy addressed by this request.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "path": "dns/v1beta2/projects/{project}/policies/{policy}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "flatPath": "dns/v1beta2/projects/{project}/policies/{policy}",
          "description": "Applies a partial update to an existing Policy.",
          "response": {
            "$ref": "PoliciesPatchResponse"
          }
        },
        "get": {
          "flatPath": "dns/v1beta2/projects/{project}/policies/{policy}",
          "parameters": {
            "policy": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "User given friendly name of the policy addressed by this request."
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query",
              "type": "string"
            }
          },
          "response": {
            "$ref": "Policy"
          },
          "path": "dns/v1beta2/projects/{project}/policies/{policy}",
          "parameterOrder": [
            "project",
            "policy"
          ],
          "httpMethod": "GET",
          "description": "Fetches the representation of an existing Policy.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "id": "dns.policies.get"
        },
        "create": {
          "flatPath": "dns/v1beta2/projects/{project}/policies",
          "response": {
            "$ref": "Policy"
          },
          "path": "dns/v1beta2/projects/{project}/policies",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "parameterOrder": [
            "project"
          ],
          "request": {
            "$ref": "Policy"
          },
          "parameters": {
            "project": {
              "type": "string",
              "required": true,
              "description": "Identifies the project addressed by this request.",
              "location": "path"
            },
            "clientOperationId": {
              "type": "string",
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            }
          },
          "id": "dns.policies.create",
          "description": "Creates a new Policy."
        }
      }
    },
    "managedZones": {
      "methods": {
        "create": {
          "parameterOrder": [
            "project"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "flatPath": "dns/v1beta2/projects/{project}/managedZones",
          "path": "dns/v1beta2/projects/{project}/managedZones",
          "description": "Creates a new ManagedZone.",
          "id": "dns.managedZones.create",
          "parameters": {
            "project": {
              "required": true,
              "description": "Identifies the project addressed by this request.",
              "location": "path",
              "type": "string"
            },
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            }
          },
          "request": {
            "$ref": "ManagedZone"
          },
          "response": {
            "$ref": "ManagedZone"
          },
          "httpMethod": "POST"
        },
        "getIamPolicy": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "id": "dns.managedZones.getIamPolicy",
          "response": {
            "$ref": "GoogleIamV1Policy"
          },
          "parameterOrder": [
            "resource"
          ],
          "parameters": {
            "resource": {
              "type": "string",
              "required": true,
              "pattern": "^projects/[^/]+/managedZones/[^/]+$",
              "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
              "location": "path"
            }
          },
          "flatPath": "dns/v1beta2/projects/{projectsId}/managedZones/{managedZonesId}:getIamPolicy",
          "httpMethod": "POST",
          "path": "dns/v1beta2/{+resource}:getIamPolicy",
          "request": {
            "$ref": "GoogleIamV1GetIamPolicyRequest"
          },
          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
        },
        "testIamPermissions": {
          "flatPath": "dns/v1beta2/projects/{projectsId}/managedZones/{managedZonesId}:testIamPermissions",
          "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
          "parameterOrder": [
            "resource"
          ],
          "path": "dns/v1beta2/{+resource}:testIamPermissions",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "request": {
            "$ref": "GoogleIamV1TestIamPermissionsRequest"
          },
          "parameters": {
            "resource": {
              "pattern": "^projects/[^/]+/managedZones/[^/]+$",
              "type": "string",
              "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
              "location": "path",
              "required": true
            }
          },
          "httpMethod": "POST",
          "response": {
            "$ref": "GoogleIamV1TestIamPermissionsResponse"
          },
          "id": "dns.managedZones.testIamPermissions"
        },
        "delete": {
          "parameters": {
            "clientOperationId": {
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query"
            },
            "project": {
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "location": "path"
            },
            "managedZone": {
              "location": "path",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "project",
            "managedZone"
          ],
          "httpMethod": "DELETE",
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}",
          "description": "Deletes a previously created ManagedZone.",
          "id": "dns.managedZones.delete",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}"
        },
        "patch": {
          "id": "dns.managedZones.patch",
          "description": "Applies a partial update to an existing ManagedZone.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "request": {
            "$ref": "ManagedZone"
          },
          "parameterOrder": [
            "project",
            "managedZone"
          ],
          "httpMethod": "PATCH",
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}",
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}",
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "clientOperationId": {
              "location": "query",
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            },
            "managedZone": {
              "type": "string",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "required": true,
              "location": "path"
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          }
        },
        "update": {
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}",
          "description": "Updates an existing ManagedZone.",
          "request": {
            "$ref": "ManagedZone"
          },
          "id": "dns.managedZones.update",
          "parameterOrder": [
            "project",
            "managedZone"
          ],
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query",
              "type": "string"
            },
            "project": {
              "location": "path",
              "description": "Identifies the project addressed by this request.",
              "type": "string",
              "required": true
            },
            "managedZone": {
              "location": "path",
              "type": "string",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}",
          "httpMethod": "PUT"
        },
        "get": {
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}",
          "response": {
            "$ref": "ManagedZone"
          },
          "id": "dns.managedZones.get",
          "parameters": {
            "managedZone": {
              "required": true,
              "type": "string",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "location": "path"
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "clientOperationId": {
              "location": "query",
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            }
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "description": "Fetches the representation of an existing ManagedZone.",
          "parameterOrder": [
            "project",
            "managedZone"
          ],
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}"
        },
        "setIamPolicy": {
          "flatPath": "dns/v1beta2/projects/{projectsId}/managedZones/{managedZonesId}:setIamPolicy",
          "parameters": {
            "resource": {
              "pattern": "^projects/[^/]+/managedZones/[^/]+$",
              "required": true,
              "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
              "type": "string",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "response": {
            "$ref": "GoogleIamV1Policy"
          },
          "path": "dns/v1beta2/{+resource}:setIamPolicy",
          "httpMethod": "POST",
          "request": {
            "$ref": "GoogleIamV1SetIamPolicyRequest"
          },
          "id": "dns.managedZones.setIamPolicy",
          "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
          "parameterOrder": [
            "resource"
          ]
        },
        "list": {
          "id": "dns.managedZones.list",
          "parameters": {
            "dnsName": {
              "description": "Restricts the list to return only zones with this domain name.",
              "location": "query",
              "type": "string"
            },
            "pageToken": {
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.",
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "format": "int32",
              "type": "integer",
              "location": "query",
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return."
            },
            "project": {
              "required": true,
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "location": "path"
            }
          },
          "flatPath": "dns/v1beta2/projects/{project}/managedZones",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "description": "Enumerates ManagedZones that have been created but not yet deleted.",
          "response": {
            "$ref": "ManagedZonesListResponse"
          },
          "parameterOrder": [
            "project"
          ],
          "httpMethod": "GET",
          "path": "dns/v1beta2/projects/{project}/managedZones"
        }
      }
    },
    "responsePolicies": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "parameterOrder": [
            "project",
            "responsePolicy"
          ],
          "id": "dns.responsePolicies.get",
          "httpMethod": "GET",
          "parameters": {
            "responsePolicy": {
              "required": true,
              "location": "path",
              "description": "User assigned name of the Response Policy addressed by this request.",
              "type": "string"
            },
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query",
              "type": "string"
            },
            "project": {
              "required": true,
              "location": "path",
              "description": "Identifies the project addressed by this request.",
              "type": "string"
            }
          },
          "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}",
          "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}",
          "response": {
            "$ref": "ResponsePolicy"
          },
          "description": "Fetches the representation of an existing Response Policy."
        },
        "delete": {
          "httpMethod": "DELETE",
          "parameterOrder": [
            "project",
            "responsePolicy"
          ],
          "description": "Deletes a previously created Response Policy. Fails if the response policy is non-empty or still being referenced by a network.",
          "id": "dns.responsePolicies.delete",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "parameters": {
            "responsePolicy": {
              "description": "User assigned name of the Response Policy addressed by this request.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "project": {
              "location": "path",
              "required": true,
              "description": "Identifies the project addressed by this request.",
              "type": "string"
            },
            "clientOperationId": {
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query"
            }
          },
          "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}",
          "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}"
        },
        "create": {
          "response": {
            "$ref": "ResponsePolicy"
          },
          "flatPath": "dns/v1beta2/projects/{project}/responsePolicies",
          "description": "Creates a new Response Policy",
          "request": {
            "$ref": "ResponsePolicy"
          },
          "parameterOrder": [
            "project"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "httpMethod": "POST",
          "parameters": {
            "project": {
              "description": "Identifies the project addressed by this request.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "clientOperationId": {
              "type": "string",
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            }
          },
          "path": "dns/v1beta2/projects/{project}/responsePolicies",
          "id": "dns.responsePolicies.create"
        },
        "list": {
          "flatPath": "dns/v1beta2/projects/{project}/responsePolicies",
          "parameters": {
            "project": {
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "location": "path"
            },
            "maxResults": {
              "location": "query",
              "type": "integer",
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.",
              "format": "int32"
            },
            "pageToken": {
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.",
              "type": "string",
              "location": "query"
            }
          },
          "httpMethod": "GET",
          "id": "dns.responsePolicies.list",
          "response": {
            "$ref": "ResponsePoliciesListResponse"
          },
          "parameterOrder": [
            "project"
          ],
          "description": "Enumerates all Response Policies associated with a project.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "path": "dns/v1beta2/projects/{project}/responsePolicies"
        },
        "update": {
          "parameterOrder": [
            "project",
            "responsePolicy"
          ],
          "description": "Updates an existing Response Policy.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}",
          "request": {
            "$ref": "ResponsePolicy"
          },
          "id": "dns.responsePolicies.update",
          "httpMethod": "PUT",
          "parameters": {
            "clientOperationId": {
              "location": "query",
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            },
            "project": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Identifies the project addressed by this request."
            },
            "responsePolicy": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "User assigned name of the Response Policy addressed by this request."
            }
          },
          "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}",
          "response": {
            "$ref": "ResponsePoliciesUpdateResponse"
          }
        },
        "patch": {
          "request": {
            "$ref": "ResponsePolicy"
          },
          "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}",
          "id": "dns.responsePolicies.patch",
          "response": {
            "$ref": "ResponsePoliciesPatchResponse"
          },
          "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}",
          "description": "Applies a partial update to an existing Response Policy.",
          "parameterOrder": [
            "project",
            "responsePolicy"
          ],
          "parameters": {
            "responsePolicy": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "User assigned name of the Respones Policy addressed by this request."
            },
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            },
            "project": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Identifies the project addressed by this request."
            }
          },
          "httpMethod": "PATCH",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ]
        }
      }
    },
    "dnsKeys": {
      "methods": {
        "get": {
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/dnsKeys/{dnsKeyId}",
          "parameters": {
            "managedZone": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID."
            },
            "digestType": {
              "description": "An optional comma-separated list of digest types to compute and display for key signing keys. If omitted, the recommended digest type is computed and displayed.",
              "type": "string",
              "location": "query"
            },
            "clientOperationId": {
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query"
            },
            "dnsKeyId": {
              "required": true,
              "location": "path",
              "description": "The identifier of the requested DnsKey.",
              "type": "string"
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "description": "Fetches the representation of an existing DnsKey.",
          "id": "dns.dnsKeys.get",
          "httpMethod": "GET",
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/dnsKeys/{dnsKeyId}",
          "response": {
            "$ref": "DnsKey"
          },
          "parameterOrder": [
            "project",
            "managedZone",
            "dnsKeyId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ]
        },
        "list": {
          "id": "dns.dnsKeys.list",
          "parameterOrder": [
            "project",
            "managedZone"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/dnsKeys",
          "response": {
            "$ref": "DnsKeysListResponse"
          },
          "description": "Enumerates DnsKeys to a ResourceRecordSet collection.",
          "httpMethod": "GET",
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/dnsKeys",
          "parameters": {
            "project": {
              "location": "path",
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "type": "string"
            },
            "digestType": {
              "description": "An optional comma-separated list of digest types to compute and display for key signing keys. If omitted, the recommended digest type is computed and displayed.",
              "type": "string",
              "location": "query"
            },
            "managedZone": {
              "location": "path",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "required": true,
              "type": "string"
            },
            "pageToken": {
              "type": "string",
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.",
              "location": "query"
            },
            "maxResults": {
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.",
              "location": "query",
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "changes": {
      "methods": {
        "create": {
          "parameters": {
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "managedZone": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID."
            }
          },
          "response": {
            "$ref": "Change"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "description": "Atomically updates the ResourceRecordSet collection.",
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/changes",
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/changes",
          "httpMethod": "POST",
          "id": "dns.changes.create",
          "parameterOrder": [
            "project",
            "managedZone"
          ],
          "request": {
            "$ref": "Change"
          }
        },
        "get": {
          "parameterOrder": [
            "project",
            "managedZone",
            "changeId"
          ],
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/changes/{changeId}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "response": {
            "$ref": "Change"
          },
          "parameters": {
            "managedZone": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID."
            },
            "project": {
              "type": "string",
              "required": true,
              "description": "Identifies the project addressed by this request.",
              "location": "path"
            },
            "changeId": {
              "location": "path",
              "type": "string",
              "description": "The identifier of the requested change, from a previous ResourceRecordSetsChangeResponse.",
              "required": true
            },
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/changes/{changeId}",
          "description": "Fetches the representation of an existing Change.",
          "id": "dns.changes.get"
        },
        "list": {
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/changes",
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/changes",
          "description": "Enumerates Changes to a ResourceRecordSet collection.",
          "parameters": {
            "managedZone": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID."
            },
            "sortBy": {
              "type": "string",
              "description": "Sorting criterion. The only supported value is change sequence.",
              "default": "changeSequence",
              "enumDescriptions": [
                ""
              ],
              "location": "query",
              "enum": [
                "changeSequence"
              ]
            },
            "pageToken": {
              "type": "string",
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.",
              "location": "query"
            },
            "project": {
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "location": "path"
            },
            "sortOrder": {
              "location": "query",
              "type": "string",
              "description": "Sorting order direction: 'ascending' or 'descending'."
            },
            "maxResults": {
              "type": "integer",
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.",
              "format": "int32",
              "location": "query"
            }
          },
          "id": "dns.changes.list",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "parameterOrder": [
            "project",
            "managedZone"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "ChangesListResponse"
          }
        }
      }
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "kind": "discovery#restDescription",
  "revision": "20220804",
  "version": "v1beta2",
  "batchPath": "batch",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/ndev.clouddns.readonly": {
          "description": "View your DNS records hosted by Google Cloud DNS"
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud services and see the email address of your Google Account"
        },
        "https://www.googleapis.com/auth/ndev.clouddns.readwrite": {
          "description": "View and manage your DNS records hosted by Google Cloud DNS"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "servicePath": "",
  "mtlsRootUrl": "https://dns.mtls.googleapis.com/",
  "ownerName": "Google",
  "canonicalName": "Dns",
  "fullyEncodeReservedExpansion": true,
  "name": "dns",
  "rootUrl": "https://dns.googleapis.com/",
  "documentationLink": "https://cloud.google.com/dns/docs",
  "protocol": "rest",
  "id": "dns:v1beta2",
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "baseUrl": "https://dns.googleapis.com/",
  "parameters": {
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    }
  },
  "description": "",
  "basePath": "",
  "schemas": {
    "OperationDnsKeyContext": {
      "id": "OperationDnsKeyContext",
      "properties": {
        "oldValue": {
          "description": "The pre-operation DnsKey resource.",
          "$ref": "DnsKey"
        },
        "newValue": {
          "$ref": "DnsKey",
          "description": "The post-operation DnsKey resource."
        }
      },
      "type": "object"
    },
    "Project": {
      "id": "Project",
      "properties": {
        "kind": {
          "default": "dns#project",
          "type": "string"
        },
        "number": {
          "type": "string",
          "description": "Unique numeric identifier for the resource; defined by the server (output only).",
          "format": "uint64"
        },
        "quota": {
          "description": "Quotas assigned to this project (output only).",
          "$ref": "Quota"
        },
        "id": {
          "type": "string",
          "description": "User assigned unique identifier for the resource (output only)."
        }
      },
      "type": "object",
      "description": "A project resource. The project is a top level container for resources including Cloud DNS ManagedZones. Projects can be created only in the APIs console. Next tag: 7."
    },
    "GoogleIamV1Binding": {
      "type": "object",
      "description": "Associates `members`, or principals, with a `role`.",
      "id": "GoogleIamV1Binding",
      "properties": {
        "members": {
          "type": "array",
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        }
      }
    },
    "ManagedZonePeeringConfig": {
      "properties": {
        "targetNetwork": {
          "$ref": "ManagedZonePeeringConfigTargetNetwork",
          "description": "The network with which to peer."
        },
        "kind": {
          "type": "string",
          "default": "dns#managedZonePeeringConfig"
        }
      },
      "id": "ManagedZonePeeringConfig",
      "type": "object"
    },
    "ResourceRecordSet": {
      "properties": {
        "ttl": {
          "description": "Number of seconds that this ResourceRecordSet can be cached by resolvers.",
          "type": "integer",
          "format": "int32"
        },
        "routingPolicy": {
          "description": "Configures dynamic query responses based on geo location of querying user or a weighted round robin based routing policy. A ResourceRecordSet should only have either rrdata (static) or routing_policy (dynamic). An error is returned otherwise.",
          "$ref": "RRSetRoutingPolicy"
        },
        "rrdatas": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples."
        },
        "signatureRrdatas": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "As defined in RFC 4034 (section 3.2)."
        },
        "name": {
          "type": "string",
          "description": "For example, www.example.com."
        },
        "type": {
          "description": "The identifier of a supported record type. See the list of Supported DNS record types.",
          "type": "string"
        },
        "kind": {
          "default": "dns#resourceRecordSet",
          "type": "string"
        }
      },
      "id": "ResourceRecordSet",
      "description": "A unit of data that is returned by the DNS servers.",
      "type": "object"
    },
    "ManagedZoneCloudLoggingConfig": {
      "type": "object",
      "description": "Cloud Logging configurations for publicly visible zones.",
      "properties": {
        "enableLogging": {
          "type": "boolean",
          "description": "If set, enable query logging for this ManagedZone. False by default, making logging opt-in."
        },
        "kind": {
          "default": "dns#managedZoneCloudLoggingConfig",
          "type": "string"
        }
      },
      "id": "ManagedZoneCloudLoggingConfig"
    },
    "PolicyAlternativeNameServerConfig": {
      "id": "PolicyAlternativeNameServerConfig",
      "properties": {
        "kind": {
          "default": "dns#policyAlternativeNameServerConfig",
          "type": "string"
        },
        "targetNameServers": {
          "items": {
            "$ref": "PolicyAlternativeNameServerConfigTargetNameServer"
          },
          "type": "array",
          "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified."
        }
      },
      "type": "object"
    },
    "ManagedZonesListResponse": {
      "properties": {
        "managedZones": {
          "type": "array",
          "items": {
            "$ref": "ManagedZone"
          },
          "description": "The managed zone resources."
        },
        "header": {
          "$ref": "ResponseHeader"
        },
        "kind": {
          "description": "Type of resource.",
          "default": "dns#managedZonesListResponse",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size."
        }
      },
      "type": "object",
      "id": "ManagedZonesListResponse"
    },
    "RRSetRoutingPolicyWrrPolicyWrrPolicyItem": {
      "description": "A routing block which contains the routing information for one WRR item.",
      "id": "RRSetRoutingPolicyWrrPolicyWrrPolicyItem",
      "type": "object",
      "properties": {
        "rrdatas": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "weight": {
          "type": "number",
          "description": "The weight corresponding to this subset of rrdata. When multiple WeightedRoundRobinPolicyItems are configured, the probability of returning an rrset is proportional to its weight relative to the sum of weights configured for all items. This weight should be non-negative.",
          "format": "double"
        },
        "signatureRrdatas": {
          "description": "DNSSEC generated signatures for all the rrdata within this item. Note that if health checked targets are provided for DNSSEC enabled zones, there's a restriction of 1 ip per item. .",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "healthCheckedTargets": {
          "$ref": "RRSetRoutingPolicyHealthCheckTargets",
          "description": "endpoints that need to be health checked before making the routing decision. The unhealthy endpoints will be omitted from the result. If all endpoints within a buckete are unhealthy, we'll choose a different bucket (sampled w.r.t. its weight) for responding. Note that if DNSSEC is enabled for this zone, only one of rrdata or health_checked_targets can be set."
        },
        "kind": {
          "default": "dns#rRSetRoutingPolicyWrrPolicyWrrPolicyItem",
          "type": "string"
        }
      }
    },
    "ManagedZoneServiceDirectoryConfig": {
      "type": "object",
      "description": "Contains information about Service Directory-backed zones.",
      "id": "ManagedZoneServiceDirectoryConfig",
      "properties": {
        "namespace": {
          "description": "Contains information about the namespace associated with the zone.",
          "$ref": "ManagedZoneServiceDirectoryConfigNamespace"
        },
        "kind": {
          "default": "dns#managedZoneServiceDirectoryConfig",
          "type": "string"
        }
      }
    },
    "PoliciesUpdateResponse": {
      "id": "PoliciesUpdateResponse",
      "type": "object",
      "properties": {
        "header": {
          "$ref": "ResponseHeader"
        },
        "policy": {
          "$ref": "Policy"
        }
      }
    },
    "ManagedZonePrivateVisibilityConfig": {
      "type": "object",
      "id": "ManagedZonePrivateVisibilityConfig",
      "properties": {
        "gkeClusters": {
          "items": {
            "$ref": "ManagedZonePrivateVisibilityConfigGKECluster"
          },
          "type": "array",
          "description": "The list of Google Kubernetes Engine clusters that can see this zone."
        },
        "kind": {
          "type": "string",
          "default": "dns#managedZonePrivateVisibilityConfig"
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "ManagedZonePrivateVisibilityConfigNetwork"
          },
          "description": "The list of VPC networks that can see this zone."
        }
      }
    },
    "ResponsePolicy": {
      "description": "A Response Policy is a collection of selectors that apply to queries made against one or more Virtual Private Cloud networks.",
      "id": "ResponsePolicy",
      "properties": {
        "kind": {
          "default": "dns#responsePolicy",
          "type": "string"
        },
        "responsePolicyName": {
          "description": "User assigned name for this Response Policy.",
          "type": "string"
        },
        "gkeClusters": {
          "description": "The list of Google Kubernetes Engine clusters to which this response policy is applied.",
          "items": {
            "$ref": "ResponsePolicyGKECluster"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "description": "User-provided description for this Response Policy."
        },
        "networks": {
          "items": {
            "$ref": "ResponsePolicyNetwork"
          },
          "description": "List of network names specifying networks to which this policy is applied.",
          "type": "array"
        },
        "id": {
          "description": "Unique identifier for the resource; defined by the server (output only).",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Operation": {
      "type": "object",
      "description": "An operation represents a successful mutation performed on a Cloud DNS resource. Operations provide: - An audit log of server resource mutations. - A way to recover/retry API calls in the case where the response is never received by the caller. Use the caller specified client_operation_id.",
      "id": "Operation",
      "properties": {
        "kind": {
          "default": "dns#operation",
          "type": "string"
        },
        "dnsKeyContext": {
          "$ref": "OperationDnsKeyContext",
          "description": "Only populated if the operation targeted a DnsKey (output only)."
        },
        "status": {
          "enum": [
            "pending",
            "done"
          ],
          "enumDescriptions": [
            "",
            ""
          ],
          "description": "Status of the operation. Can be one of the following: \"PENDING\" or \"DONE\" (output only). A status of \"DONE\" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.",
          "type": "string"
        },
        "type": {
          "description": "Type of the operation. Operations include insert, update, and delete (output only).",
          "type": "string"
        },
        "startTime": {
          "description": "The time that this operation was started by the server. This is in RFC3339 text format (output only).",
          "type": "string"
        },
        "user": {
          "description": "User who requested the operation, for example: user@example.com. cloud-dns-system for operations automatically done by the system. (output only)",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the resource. This is the client_operation_id if the client specified it when the mutation was initiated, otherwise, it is generated by the server. The name must be 1-63 characters long and match the regular expression [-a-z0-9]? (output only)"
        },
        "zoneContext": {
          "description": "Only populated if the operation targeted a ManagedZone (output only).",
          "$ref": "OperationManagedZoneContext"
        }
      }
    },
    "ManagedZonePeeringConfigTargetNetwork": {
      "type": "object",
      "id": "ManagedZonePeeringConfigTargetNetwork",
      "properties": {
        "deactivateTime": {
          "type": "string",
          "description": "The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only."
        },
        "networkUrl": {
          "description": "The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "default": "dns#managedZonePeeringConfigTargetNetwork"
        }
      }
    },
    "DnsKeySpec": {
      "type": "object",
      "description": "Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey.",
      "id": "DnsKeySpec",
      "properties": {
        "keyLength": {
          "format": "uint32",
          "description": "Length of the keys in bits.",
          "type": "integer"
        },
        "algorithm": {
          "description": "String mnemonic specifying the DNSSEC algorithm of this key.",
          "type": "string",
          "enum": [
            "rsasha1",
            "rsasha256",
            "rsasha512",
            "ecdsap256sha256",
            "ecdsap384sha384"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "keyType": {
          "enumDescriptions": [
            "",
            ""
          ],
          "type": "string",
          "description": "Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.",
          "enum": [
            "keySigning",
            "zoneSigning"
          ]
        },
        "kind": {
          "type": "string",
          "default": "dns#dnsKeySpec"
        }
      }
    },
    "ResponsePolicyGKECluster": {
      "id": "ResponsePolicyGKECluster",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "default": "dns#responsePolicyGKECluster"
        },
        "gkeClusterName": {
          "description": "The resource name of the cluster to bind this response policy to. This should be specified in the format like: projects/*/locations/*/clusters/*. This is referenced from GKE projects.locations.clusters.get API: https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters/get",
          "type": "string"
        }
      }
    },
    "ManagedZonePrivateVisibilityConfigGKECluster": {
      "type": "object",
      "properties": {
        "kind": {
          "default": "dns#managedZonePrivateVisibilityConfigGKECluster",
          "type": "string"
        },
        "gkeClusterName": {
          "type": "string",
          "description": "The resource name of the cluster to bind this ManagedZone to. This should be specified in the format like: projects/*/locations/*/clusters/*. This is referenced from GKE projects.locations.clusters.get API: https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters/get"
        }
      },
      "id": "ManagedZonePrivateVisibilityConfigGKECluster"
    },
    "GoogleIamV1AuditConfig": {
      "type": "object",
      "id": "GoogleIamV1AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "properties": {
        "auditLogConfigs": {
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission."
        },
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        }
      }
    },
    "ResponsePolicyRulesUpdateResponse": {
      "id": "ResponsePolicyRulesUpdateResponse",
      "properties": {
        "header": {
          "$ref": "ResponseHeader"
        },
        "responsePolicyRule": {
          "$ref": "ResponsePolicyRule"
        }
      },
      "type": "object"
    },
    "ResponsePoliciesUpdateResponse": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "ResponseHeader"
        },
        "responsePolicy": {
          "$ref": "ResponsePolicy"
        }
      },
      "id": "ResponsePoliciesUpdateResponse"
    },
    "GoogleIamV1GetIamPolicyRequest": {
      "properties": {
        "options": {
          "$ref": "GoogleIamV1GetPolicyOptions",
          "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
        }
      },
      "description": "Request message for `GetIamPolicy` method.",
      "id": "GoogleIamV1GetIamPolicyRequest",
      "type": "object"
    },
    "RRSetRoutingPolicyGeoPolicyGeoPolicyItem": {
      "id": "RRSetRoutingPolicyGeoPolicyGeoPolicyItem",
      "description": "ResourceRecordSet data for one geo location.",
      "properties": {
        "kind": {
          "default": "dns#rRSetRoutingPolicyGeoPolicyGeoPolicyItem",
          "type": "string"
        },
        "signatureRrdatas": {
          "description": "DNSSEC generated signatures for all the rrdata within this item. Note that if health checked targets are provided for DNSSEC enabled zones, there's a restriction of 1 ip per item. .",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rrdatas": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "location": {
          "description": "The geo-location granularity is a GCP region. This location string should correspond to a GCP region. e.g. \"us-east1\", \"southamerica-east1\", \"asia-east1\", etc.",
          "type": "string"
        },
        "healthCheckedTargets": {
          "$ref": "RRSetRoutingPolicyHealthCheckTargets",
          "description": "For A and AAAA types only. Endpoints to return in the query result only if they are healthy. These can be specified along with rrdata within this item."
        }
      },
      "type": "object"
    },
    "ManagedZoneDnsSecConfig": {
      "id": "ManagedZoneDnsSecConfig",
      "properties": {
        "kind": {
          "default": "dns#managedZoneDnsSecConfig",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "DNSSEC is disabled; the zone is not signed.",
            "DNSSEC is enabled; the zone is signed and fully managed.",
            "DNSSEC is enabled, but in a \"transfer\" mode."
          ],
          "description": "Specifies whether DNSSEC is enabled, and what mode it is in.",
          "type": "string",
          "enum": [
            "off",
            "on",
            "transfer"
          ]
        },
        "nonExistence": {
          "enum": [
            "nsec",
            "nsec3"
          ],
          "description": "Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.",
          "enumDescriptions": [
            "",
            ""
          ],
          "type": "string"
        },
        "defaultKeySpecs": {
          "description": "Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF.",
          "items": {
            "$ref": "DnsKeySpec"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ResourceRecordSetsListResponse": {
      "properties": {
        "header": {
          "$ref": "ResponseHeader"
        },
        "nextPageToken": {
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. This lets you retrieve complete contents of even larger collections, one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.",
          "type": "string"
        },
        "kind": {
          "default": "dns#resourceRecordSetsListResponse",
          "description": "Type of resource.",
          "type": "string"
        },
        "rrsets": {
          "items": {
            "$ref": "ResourceRecordSet"
          },
          "type": "array",
          "description": "The resource record set resources."
        }
      },
      "type": "object",
      "id": "ResourceRecordSetsListResponse"
    },
    "DnsKeysListResponse": {
      "description": "The response to a request to enumerate DnsKeys in a ManagedZone.",
      "type": "object",
      "id": "DnsKeysListResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Type of resource.",
          "default": "dns#dnsKeysListResponse"
        },
        "dnsKeys": {
          "type": "array",
          "description": "The requested resources.",
          "items": {
            "$ref": "DnsKey"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. There is no way to retrieve a \"snapshot\" of collections larger than the maximum page size."
        },
        "header": {
          "$ref": "ResponseHeader"
        }
      }
    },
    "PolicyNetwork": {
      "type": "object",
      "properties": {
        "kind": {
          "default": "dns#policyNetwork",
          "type": "string"
        },
        "networkUrl": {
          "type": "string",
          "description": "The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
        }
      },
      "id": "PolicyNetwork"
    },
    "RRSetRoutingPolicyHealthCheckTargets": {
      "id": "RRSetRoutingPolicyHealthCheckTargets",
      "properties": {
        "internalLoadBalancers": {
          "type": "array",
          "items": {
            "$ref": "RRSetRoutingPolicyLoadBalancerTarget"
          }
        }
      },
      "type": "object",
      "description": "HealthCheckTargets describes endpoints to health-check when responding to Routing Policy queries. Only the healthy endpoints will be included in the response."
    },
    "ManagedZoneOperationsListResponse": {
      "id": "ManagedZoneOperationsListResponse",
      "properties": {
        "header": {
          "$ref": "ResponseHeader"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size."
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "Operation"
          },
          "description": "The operation resources."
        },
        "kind": {
          "default": "dns#managedZoneOperationsListResponse",
          "type": "string",
          "description": "Type of resource."
        }
      },
      "type": "object"
    },
    "ResponsePolicyRulesPatchResponse": {
      "id": "ResponsePolicyRulesPatchResponse",
      "properties": {
        "header": {
          "$ref": "ResponseHeader"
        },
        "responsePolicyRule": {
          "$ref": "ResponsePolicyRule"
        }
      },
      "type": "object"
    },
    "RRSetRoutingPolicyPrimaryBackupPolicy": {
      "properties": {
        "kind": {
          "default": "dns#rRSetRoutingPolicyPrimaryBackupPolicy",
          "type": "string"
        },
        "trickleTraffic": {
          "type": "number",
          "description": "When serving state is PRIMARY, this field provides the option of sending a small percentage of the traffic to the backup targets.",
          "format": "double"
        },
        "primaryTargets": {
          "$ref": "RRSetRoutingPolicyHealthCheckTargets"
        },
        "backupGeoTargets": {
          "description": "Backup targets provide a regional failover policy for the otherwise global primary targets. If serving state is set to BACKUP, this policy essentially becomes a geo routing policy.",
          "$ref": "RRSetRoutingPolicyGeoPolicy"
        }
      },
      "type": "object",
      "description": "Configures a RRSetRoutingPolicy such that all queries are responded with the primary_targets if they are healthy. And if all of them are unhealthy, then we fallback to a geo localized policy.",
      "id": "RRSetRoutingPolicyPrimaryBackupPolicy"
    },
    "RRSetRoutingPolicy": {
      "properties": {
        "primaryBackup": {
          "$ref": "RRSetRoutingPolicyPrimaryBackupPolicy"
        },
        "geoPolicy": {
          "$ref": "RRSetRoutingPolicyGeoPolicy"
        },
        "wrrPolicy": {
          "$ref": "RRSetRoutingPolicyWrrPolicy"
        },
        "geo": {
          "$ref": "RRSetRoutingPolicyGeoPolicy"
        },
        "kind": {
          "type": "string",
          "default": "dns#rRSetRoutingPolicy"
        },
        "wrr": {
          "$ref": "RRSetRoutingPolicyWrrPolicy"
        }
      },
      "description": "A RRSetRoutingPolicy represents ResourceRecordSet data that is returned dynamically with the response varying based on configured properties such as geolocation or by weighted random selection.",
      "type": "object",
      "id": "RRSetRoutingPolicy"
    },
    "PoliciesListResponse": {
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "$ref": "Policy"
          },
          "description": "The policy resources."
        },
        "header": {
          "$ref": "ResponseHeader"
        },
        "nextPageToken": {
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.",
          "type": "string"
        },
        "kind": {
          "default": "dns#policiesListResponse",
          "description": "Type of resource.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "PoliciesListResponse"
    },
    "GoogleIamV1TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "id": "GoogleIamV1TestIamPermissionsRequest",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "GoogleIamV1SetIamPolicyRequest": {
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "GoogleIamV1Policy"
        },
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
        }
      },
      "id": "GoogleIamV1SetIamPolicyRequest",
      "type": "object",
      "description": "Request message for `SetIamPolicy` method."
    },
    "ManagedZoneServiceDirectoryConfigNamespace": {
      "type": "object",
      "id": "ManagedZoneServiceDirectoryConfigNamespace",
      "properties": {
        "namespaceUrl": {
          "description": "The fully qualified URL of the namespace associated with the zone. Format must be https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}",
          "type": "string"
        },
        "deletionTime": {
          "description": "The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only.",
          "type": "string"
        },
        "kind": {
          "default": "dns#managedZoneServiceDirectoryConfigNamespace",
          "type": "string"
        }
      }
    },
    "ChangesListResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. This lets you retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a \"snapshot\" of collections larger than the maximum page size.",
          "type": "string"
        },
        "changes": {
          "description": "The requested changes.",
          "items": {
            "$ref": "Change"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "default": "dns#changesListResponse",
          "description": "Type of resource."
        },
        "header": {
          "$ref": "ResponseHeader"
        }
      },
      "id": "ChangesListResponse",
      "description": "The response to a request to enumerate Changes to a ResourceRecordSets collection."
    },
    "GoogleIamV1TestIamPermissionsResponse": {
      "id": "GoogleIamV1TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResponsePoliciesListResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size."
        },
        "responsePolicies": {
          "description": "The Response Policy resources.",
          "type": "array",
          "items": {
            "$ref": "ResponsePolicy"
          }
        },
        "header": {
          "$ref": "ResponseHeader"
        }
      },
      "type": "object",
      "id": "ResponsePoliciesListResponse"
    },
    "ManagedZone": {
      "type": "object",
      "properties": {
        "peeringConfig": {
          "description": "The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with.",
          "$ref": "ManagedZonePeeringConfig"
        },
        "dnssecConfig": {
          "description": "DNSSEC configuration.",
          "$ref": "ManagedZoneDnsSecConfig"
        },
        "name": {
          "type": "string",
          "description": "User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes."
        },
        "id": {
          "description": "Unique identifier for the resource; defined by the server (output only)",
          "format": "uint64",
          "type": "string"
        },
        "visibility": {
          "description": "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.",
          "enumDescriptions": [
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "public",
            "private"
          ]
        },
        "description": {
          "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function.",
          "type": "string"
        },
        "dnsName": {
          "description": "The DNS name of this managed zone, for instance \"example.com.\".",
          "type": "string"
        },
        "creationTime": {
          "type": "string",
          "description": "The time that this resource was created on the server. This is in RFC3339 text format. Output only."
        },
        "serviceDirectoryConfig": {
          "$ref": "ManagedZoneServiceDirectoryConfig",
          "description": "This field links to the associated service directory namespace. Do not set this field for public zones or forwarding zones."
        },
        "nameServers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Delegate your managed_zone to these virtual name servers; defined by the server (output only)"
        },
        "cloudLoggingConfig": {
          "$ref": "ManagedZoneCloudLoggingConfig"
        },
        "reverseLookupConfig": {
          "$ref": "ManagedZoneReverseLookupConfig",
          "description": "The presence of this field indicates that this is a managed reverse lookup zone and Cloud DNS resolves reverse lookup queries using automatically configured records for VPC resources. This only applies to networks listed under private_visibility_config."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "User labels.",
          "type": "object"
        },
        "kind": {
          "type": "string",
          "default": "dns#managedZone"
        },
        "forwardingConfig": {
          "$ref": "ManagedZoneForwardingConfig",
          "description": "The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to."
        },
        "privateVisibilityConfig": {
          "description": "For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from.",
          "$ref": "ManagedZonePrivateVisibilityConfig"
        },
        "nameServerSet": {
          "description": "Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team.",
          "type": "string"
        }
      },
      "id": "ManagedZone",
      "description": "A zone is a subtree of the DNS namespace under one administrative responsibility. A ManagedZone is a resource that represents a DNS zone hosted by the Cloud DNS service."
    },
    "ResponsePolicyNetwork": {
      "properties": {
        "kind": {
          "default": "dns#responsePolicyNetwork",
          "type": "string"
        },
        "networkUrl": {
          "type": "string",
          "description": "The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
        }
      },
      "id": "ResponsePolicyNetwork",
      "type": "object"
    },
    "RRSetRoutingPolicyLoadBalancerTarget": {
      "properties": {
        "networkUrl": {
          "description": "The fully qualified url of the network on which the ILB is",
          "type": "string"
        },
        "ipProtocol": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "undefined",
            "tcp",
            "udp"
          ]
        },
        "kind": {
          "default": "dns#rRSetRoutingPolicyLoadBalancerTarget",
          "type": "string"
        },
        "ipAddress": {
          "type": "string",
          "description": "The frontend IP address of the"
        },
        "region": {
          "description": "The region for regional ILBs.",
          "type": "string"
        },
        "loadBalancerType": {
          "type": "string",
          "enumDescriptions": [
            "",
            ""
          ],
          "enum": [
            "none",
            "regionalL4ilb"
          ]
        },
        "port": {
          "type": "string",
          "description": "Load Balancer to health check. The configured port of the Load Balancer."
        },
        "project": {
          "description": "present. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network} The project ID in which the ILB exists.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "RRSetRoutingPolicyLoadBalancerTarget"
    },
    "GoogleIamV1AuditLogConfig": {
      "id": "GoogleIamV1AuditLogConfig",
      "properties": {
        "exemptedMembers": {
          "type": "array",
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "items": {
            "type": "string"
          }
        },
        "logType": {
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "description": "The log type that this config enables.",
          "type": "string"
        }
      },
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object"
    },
    "ManagedZoneForwardingConfigNameServerTarget": {
      "properties": {
        "ipv6Address": {
          "description": "IPv6 address of a target name server. Does not accept both fields (ipv4 & ipv6) being populated.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "default": "dns#managedZoneForwardingConfigNameServerTarget"
        },
        "forwardingPath": {
          "type": "string",
          "description": "Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on IP address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
          "enum": [
            "default",
            "private"
          ],
          "enumDescriptions": [
            "Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
            "Cloud DNS always forwards to this target through the VPC."
          ]
        },
        "ipv4Address": {
          "type": "string",
          "description": "IPv4 address of a target name server."
        }
      },
      "id": "ManagedZoneForwardingConfigNameServerTarget",
      "type": "object"
    },
    "OperationManagedZoneContext": {
      "type": "object",
      "id": "OperationManagedZoneContext",
      "properties": {
        "newValue": {
          "$ref": "ManagedZone",
          "description": "The post-operation ManagedZone resource."
        },
        "oldValue": {
          "description": "The pre-operation ManagedZone resource.",
          "$ref": "ManagedZone"
        }
      }
    },
    "PoliciesPatchResponse": {
      "id": "PoliciesPatchResponse",
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "Policy"
        },
        "header": {
          "$ref": "ResponseHeader"
        }
      }
    },
    "ResponsePolicyRuleLocalData": {
      "properties": {
        "localDatas": {
          "type": "array",
          "description": "All resource record sets for this selector, one per resource record type. The name must match the dns_name.",
          "items": {
            "$ref": "ResourceRecordSet"
          }
        }
      },
      "type": "object",
      "id": "ResponsePolicyRuleLocalData"
    },
    "PolicyAlternativeNameServerConfigTargetNameServer": {
      "type": "object",
      "id": "PolicyAlternativeNameServerConfigTargetNameServer",
      "properties": {
        "ipv6Address": {
          "type": "string",
          "description": "IPv6 address to forward to. Does not accept both fields (ipv4 & ipv6) being populated."
        },
        "kind": {
          "default": "dns#policyAlternativeNameServerConfigTargetNameServer",
          "type": "string"
        },
        "forwardingPath": {
          "enum": [
            "default",
            "private"
          ],
          "enumDescriptions": [
            "Cloud DNS makes forwarding decision based on IP address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
            "Cloud DNS always forwards to this target through the VPC."
          ],
          "description": "Forwarding path for this TargetNameServer. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
          "type": "string"
        },
        "ipv4Address": {
          "description": "IPv4 address to forward to.",
          "type": "string"
        }
      }
    },
    "Change": {
      "id": "Change",
      "description": "A Change represents a set of ResourceRecordSet additions and deletions applied atomically to a ManagedZone. ResourceRecordSets within a ManagedZone are modified by creating a new Change element in the Changes collection. In turn the Changes collection also records the past modifications to the ResourceRecordSets in a ManagedZone. The current state of the ManagedZone is the sum effect of applying all Change elements in the Changes collection in sequence.",
      "type": "object",
      "properties": {
        "isServing": {
          "description": "If the DNS queries for the zone will be served.",
          "type": "boolean"
        },
        "additions": {
          "type": "array",
          "description": "Which ResourceRecordSets to add?",
          "items": {
            "$ref": "ResourceRecordSet"
          }
        },
        "deletions": {
          "description": "Which ResourceRecordSets to remove? Must match existing data exactly.",
          "type": "array",
          "items": {
            "$ref": "ResourceRecordSet"
          }
        },
        "kind": {
          "default": "dns#change",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the resource; defined by the server (output only).",
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "pending",
            "done"
          ],
          "description": "Status of the operation (output only). A status of \"done\" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.",
          "enumDescriptions": [
            "",
            ""
          ]
        },
        "startTime": {
          "description": "The time that this operation was started by the server (output only). This is in RFC3339 text format.",
          "type": "string"
        }
      }
    },
    "GoogleIamV1GetPolicyOptions": {
      "properties": {
        "requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Encapsulates settings provided to GetIamPolicy.",
      "id": "GoogleIamV1GetPolicyOptions",
      "type": "object"
    },
    "Policy": {
      "properties": {
        "alternativeNameServerConfig": {
          "$ref": "PolicyAlternativeNameServerConfig",
          "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified."
        },
        "kind": {
          "type": "string",
          "default": "dns#policy"
        },
        "enableLogging": {
          "description": "Controls whether logging is enabled for the networks bound to this policy. Defaults to no logging if not set.",
          "type": "boolean"
        },
        "name": {
          "description": "User-assigned name for this policy.",
          "type": "string"
        },
        "id": {
          "format": "uint64",
          "type": "string",
          "description": "Unique identifier for the resource; defined by the server (output only)."
        },
        "enableInboundForwarding": {
          "type": "boolean",
          "description": "Allows networks bound to this policy to receive DNS queries sent by VMs or applications over VPN connections. When enabled, a virtual IP address is allocated from each of the subnetworks that are bound to this policy."
        },
        "networks": {
          "description": "List of network names specifying networks to which this policy is applied.",
          "items": {
            "$ref": "PolicyNetwork"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the policy's function."
        }
      },
      "description": "A policy is a collection of DNS rules applied to one or more Virtual Private Cloud resources.",
      "id": "Policy",
      "type": "object"
    },
    "RRSetRoutingPolicyWrrPolicy": {
      "properties": {
        "items": {
          "items": {
            "$ref": "RRSetRoutingPolicyWrrPolicyWrrPolicyItem"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "default": "dns#rRSetRoutingPolicyWrrPolicy"
        }
      },
      "id": "RRSetRoutingPolicyWrrPolicy",
      "type": "object",
      "description": "Configures a RRSetRoutingPolicy that routes in a weighted round robin fashion."
    },
    "ManagedZoneReverseLookupConfig": {
      "type": "object",
      "id": "ManagedZoneReverseLookupConfig",
      "properties": {
        "kind": {
          "type": "string",
          "default": "dns#managedZoneReverseLookupConfig"
        }
      }
    },
    "DnsKey": {
      "properties": {
        "description": {
          "type": "string",
          "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the resource's function."
        },
        "digests": {
          "description": "Cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Output only.",
          "items": {
            "$ref": "DnsKeyDigest"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "default": "dns#dnsKey"
        },
        "keyTag": {
          "description": "The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B. Output only.",
          "type": "integer",
          "format": "int32"
        },
        "publicKey": {
          "description": "Base64 encoded public half of this key. Output only.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the resource; defined by the server (output only)."
        },
        "creationTime": {
          "description": "The time that this resource was created in the control plane. This is in RFC3339 text format. Output only.",
          "type": "string"
        },
        "algorithm": {
          "enum": [
            "rsasha1",
            "rsasha256",
            "rsasha512",
            "ecdsap256sha256",
            "ecdsap384sha384"
          ],
          "description": "String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time.",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "isActive": {
          "type": "boolean",
          "description": "Active keys are used to sign subsequent changes to the ManagedZone. Inactive keys are still present as DNSKEY Resource Records for the use of resolvers validating existing signatures."
        },
        "type": {
          "enum": [
            "keySigning",
            "zoneSigning"
          ],
          "description": "One of \"KEY_SIGNING\" or \"ZONE_SIGNING\". Keys of type KEY_SIGNING have the Secure Entry Point flag set and, when active, are used to sign only resource record sets of type DNSKEY. Otherwise, the Secure Entry Point flag is cleared, and this key is used to sign only resource record sets of other types. Immutable after creation time.",
          "type": "string",
          "enumDescriptions": [
            "",
            ""
          ]
        },
        "keyLength": {
          "type": "integer",
          "format": "uint32",
          "description": "Length of the key in bits. Specified at creation time, and then immutable."
        }
      },
      "description": "A DNSSEC key pair.",
      "id": "DnsKey",
      "type": "object"
    },
    "DnsKeyDigest": {
      "id": "DnsKeyDigest",
      "properties": {
        "type": {
          "enum": [
            "sha1",
            "sha256",
            "sha384"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "Specifies the algorithm used to calculate this digest."
        },
        "digest": {
          "type": "string",
          "description": "The base-16 encoded bytes of this digest. Suitable for use in a DS resource record."
        }
      },
      "type": "object"
    },
    "RRSetRoutingPolicyGeoPolicy": {
      "description": "Configures a RRSetRoutingPolicy that routes based on the geo location of the querying user.",
      "type": "object",
      "id": "RRSetRoutingPolicyGeoPolicy",
      "properties": {
        "kind": {
          "default": "dns#rRSetRoutingPolicyGeoPolicy",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "RRSetRoutingPolicyGeoPolicyGeoPolicyItem"
          },
          "description": "The primary geo routing configuration. If there are multiple items with the same location, an error is returned instead.",
          "type": "array"
        },
        "enableFencing": {
          "description": "Without fencing, if health check fails for all configured items in the current geo bucket, we'll failover to the next nearest geo bucket. With fencing, if health check is enabled, as long as some targets in the current geo bucket are healthy, we'll return only the healthy targets. However, if they're all unhealthy, we won't failover to the next nearest bucket, we'll simply return all the items in the current bucket even though they're unhealthy.",
          "type": "boolean"
        }
      }
    },
    "ResponsePolicyRule": {
      "id": "ResponsePolicyRule",
      "description": "A Response Policy Rule is a selector that applies its behavior to queries that match the selector. Selectors are DNS names, which may be wildcards or exact matches. Each DNS query subject to a Response Policy matches at most one ResponsePolicyRule, as identified by the dns_name field with the longest matching suffix.",
      "properties": {
        "dnsName": {
          "description": "The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule.",
          "type": "string"
        },
        "behavior": {
          "description": "Answer this query with a behavior rather than DNS data.",
          "type": "string",
          "enum": [
            "behaviorUnspecified",
            "bypassResponsePolicy"
          ],
          "enumDescriptions": [
            "",
            "Skip a less-specific ResponsePolicyRule and continue normal query logic. This can be used with a less-specific wildcard selector to exempt a subset of the wildcard ResponsePolicyRule from the ResponsePolicy behavior and query the public Internet instead. For instance, if these rules exist: *.example.com -\u003e LocalData 1.2.3.4 foo.example.com -\u003e Behavior 'bypassResponsePolicy' Then a query for 'foo.example.com' skips the wildcard. This additionally functions to facilitate the allowlist feature. RPZs can be applied to multiple levels in the (eventually org, folder, project, network) hierarchy. If a rule is applied at a higher level of the hierarchy, adding a passthru rule at a lower level will supersede that, and a query from an affected vm to that domain will be exempt from the RPZ and proceed to normal resolution behavior."
          ]
        },
        "kind": {
          "type": "string",
          "default": "dns#responsePolicyRule"
        },
        "ruleName": {
          "description": "An identifier for this rule. Must be unique with the ResponsePolicy.",
          "type": "string"
        },
        "localData": {
          "$ref": "ResponsePolicyRuleLocalData",
          "description": "Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name; in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed."
        }
      },
      "type": "object"
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "id": "Expr",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        }
      }
    },
    "ResponsePoliciesPatchResponse": {
      "properties": {
        "responsePolicy": {
          "$ref": "ResponsePolicy"
        },
        "header": {
          "$ref": "ResponseHeader"
        }
      },
      "id": "ResponsePoliciesPatchResponse",
      "type": "object"
    },
    "ResponsePolicyRulesListResponse": {
      "type": "object",
      "properties": {
        "responsePolicyRules": {
          "type": "array",
          "items": {
            "$ref": "ResponsePolicyRule"
          },
          "description": "The Response Policy Rule resources."
        },
        "header": {
          "$ref": "ResponseHeader"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size."
        }
      },
      "id": "ResponsePolicyRulesListResponse"
    },
    "ResponseHeader": {
      "type": "object",
      "id": "ResponseHeader",
      "properties": {
        "operationId": {
          "description": "For mutating operation requests that completed successfully. This is the client_operation_id if the client specified it, otherwise it is generated by the server (output only).",
          "type": "string"
        }
      },
      "description": "Elements common to every response."
    },
    "GoogleIamV1Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "properties": {
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "items": {
            "$ref": "GoogleIamV1Binding"
          },
          "type": "array"
        },
        "etag": {
          "type": "string",
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        },
        "version": {
          "format": "int32",
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "auditConfigs": {
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1AuditConfig"
          },
          "description": "Specifies cloud audit logging configuration for this policy."
        }
      },
      "type": "object",
      "id": "GoogleIamV1Policy"
    },
    "ManagedZonePrivateVisibilityConfigNetwork": {
      "properties": {
        "networkUrl": {
          "description": "The fully qualified URL of the VPC network to bind to. Format this URL like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}",
          "type": "string"
        },
        "kind": {
          "default": "dns#managedZonePrivateVisibilityConfigNetwork",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ManagedZonePrivateVisibilityConfigNetwork"
    },
    "ManagedZoneForwardingConfig": {
      "type": "object",
      "id": "ManagedZoneForwardingConfig",
      "properties": {
        "targetNameServers": {
          "items": {
            "$ref": "ManagedZoneForwardingConfigNameServerTarget"
          },
          "type": "array",
          "description": "List of target name servers to forward to. Cloud DNS selects the best available name server if more than one target is given."
        },
        "kind": {
          "type": "string",
          "default": "dns#managedZoneForwardingConfig"
        }
      }
    },
    "Quota": {
      "type": "object",
      "id": "Quota",
      "properties": {
        "totalRrdataSizePerChange": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum allowed size for total rrdata in one ChangesCreateRequest in bytes."
        },
        "rrsetDeletionsPerChange": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum allowed number of ResourceRecordSets to delete per ChangesCreateRequest."
        },
        "gkeClustersPerResponsePolicy": {
          "format": "int32",
          "description": "Maximum allowed number of GKE clusters per response policy.",
          "type": "integer"
        },
        "responsePolicyRulesPerResponsePolicy": {
          "format": "int32",
          "description": "Maximum allowed number of rules per response policy.",
          "type": "integer"
        },
        "dnsKeysPerManagedZone": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum allowed number of DnsKeys per ManagedZone."
        },
        "targetNameServersPerManagedZone": {
          "description": "Maximum allowed number of target name servers per managed forwarding zone.",
          "format": "int32",
          "type": "integer"
        },
        "gkeClustersPerManagedZone": {
          "description": "Maximum allowed number of GKE clusters to which a privately scoped zone can be attached.",
          "type": "integer",
          "format": "int32"
        },
        "resourceRecordsPerRrset": {
          "description": "Maximum allowed number of ResourceRecords per ResourceRecordSet.",
          "type": "integer",
          "format": "int32"
        },
        "gkeClustersPerPolicy": {
          "description": "Maximum allowed number of GKE clusters per policy.",
          "type": "integer",
          "format": "int32"
        },
        "rrsetsPerManagedZone": {
          "description": "Maximum allowed number of ResourceRecordSets per zone in the project.",
          "format": "int32",
          "type": "integer"
        },
        "managedZonesPerNetwork": {
          "type": "integer",
          "description": "Maximum allowed number of managed zones which can be attached to a network.",
          "format": "int32"
        },
        "itemsPerRoutingPolicy": {
          "format": "int32",
          "description": "Maximum allowed number of items per routing policy.",
          "type": "integer"
        },
        "rrsetAdditionsPerChange": {
          "format": "int32",
          "type": "integer",
          "description": "Maximum allowed number of ResourceRecordSets to add per ChangesCreateRequest."
        },
        "kind": {
          "default": "dns#quota",
          "type": "string"
        },
        "peeringZonesPerTargetNetwork": {
          "type": "integer",
          "description": "Maximum allowed number of consumer peering zones per target network owned by this producer project",
          "format": "int32"
        },
        "networksPerPolicy": {
          "format": "int32",
          "description": "Maximum allowed number of networks per policy.",
          "type": "integer"
        },
        "responsePolicies": {
          "description": "Maximum allowed number of response policies per project.",
          "type": "integer",
          "format": "int32"
        },
        "targetNameServersPerPolicy": {
          "format": "int32",
          "type": "integer",
          "description": "Maximum allowed number of alternative target name servers per policy."
        },
        "managedZonesPerGkeCluster": {
          "format": "int32",
          "type": "integer",
          "description": "Maximum allowed number of managed zones which can be attached to a GKE cluster."
        },
        "networksPerManagedZone": {
          "description": "Maximum allowed number of networks to which a privately scoped zone can be attached.",
          "format": "int32",
          "type": "integer"
        },
        "managedZones": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum allowed number of managed zones in the project."
        },
        "networksPerResponsePolicy": {
          "description": "Maximum allowed number of networks per response policy.",
          "type": "integer",
          "format": "int32"
        },
        "policies": {
          "description": "Maximum allowed number of policies per project.",
          "format": "int32",
          "type": "integer"
        },
        "whitelistedKeySpecs": {
          "type": "array",
          "items": {
            "$ref": "DnsKeySpec"
          },
          "description": "DNSSEC algorithm and key length types that can be used for DnsKeys."
        }
      },
      "description": "Limits associated with a Project."
    }
  }
}

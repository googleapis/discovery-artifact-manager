{
  "resources": {
    "files": {
      "methods": {
        "asyncBatchAnnotate": {
          "request": {
            "$ref": "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesRequest"
          },
          "description": "Run asynchronous image detection and annotation for a list of generic\nfiles, such as PDF files, which may contain multiple pages and multiple\nimages per page. Progress and results can be retrieved through the\n`google.longrunning.Operations` interface.\n`Operation.metadata` contains `OperationMetadata` (metadata).\n`Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results).",
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-vision"
          ],
          "parameters": {},
          "flatPath": "v1p1beta1/files:asyncBatchAnnotate",
          "path": "v1p1beta1/files:asyncBatchAnnotate",
          "id": "vision.files.asyncBatchAnnotate"
        }
      }
    },
    "images": {
      "methods": {
        "annotate": {
          "flatPath": "v1p1beta1/images:annotate",
          "path": "v1p1beta1/images:annotate",
          "id": "vision.images.annotate",
          "request": {
            "$ref": "GoogleCloudVisionV1p1beta1BatchAnnotateImagesRequest"
          },
          "description": "Run image detection and annotation for a batch of images.",
          "response": {
            "$ref": "GoogleCloudVisionV1p1beta1BatchAnnotateImagesResponse"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-vision"
          ],
          "parameters": {}
        }
      }
    }
  },
  "parameters": {
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    }
  },
  "version": "v1p1beta1",
  "baseUrl": "https://vision.googleapis.com/",
  "servicePath": "",
  "description": "Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.",
  "kind": "discovery#restDescription",
  "basePath": "",
  "revision": "20180803",
  "documentationLink": "https://cloud.google.com/vision/",
  "id": "vision:v1p1beta1",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "WebPage": {
      "description": "Metadata for web pages.",
      "type": "object",
      "properties": {
        "score": {
          "description": "(Deprecated) Overall relevancy score for the web page.",
          "format": "float",
          "type": "number"
        },
        "partialMatchingImages": {
          "description": "Partial matching images on the page.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its\ncrops.",
          "type": "array",
          "items": {
            "$ref": "WebImage"
          }
        },
        "url": {
          "description": "The result web page URL.",
          "type": "string"
        },
        "pageTitle": {
          "description": "Title for the web page, may contain HTML markups.",
          "type": "string"
        },
        "fullMatchingImages": {
          "description": "Fully matching images on the page.\nCan include resized copies of the query image.",
          "type": "array",
          "items": {
            "$ref": "WebImage"
          }
        }
      },
      "id": "WebPage"
    },
    "EntityAnnotation": {
      "id": "EntityAnnotation",
      "description": "Set of detected entity features.",
      "type": "object",
      "properties": {
        "score": {
          "description": "Overall score of the result. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "locations": {
          "description": "The location information for the detected entity. Multiple\n`LocationInfo` elements can be present because one location may\nindicate the location of the scene in the image, and another location\nmay indicate the location of the place where the image was taken.\nLocation information is usually present for landmarks.",
          "type": "array",
          "items": {
            "$ref": "LocationInfo"
          }
        },
        "mid": {
          "description": "Opaque entity ID. Some IDs may be available in\n[Google Knowledge Graph Search\nAPI](https://developers.google.com/knowledge-graph/).",
          "type": "string"
        },
        "confidence": {
          "description": "**Deprecated. Use `score` instead.**\nThe accuracy of the entity detection in an image.\nFor example, for an image in which the \"Eiffel Tower\" entity is detected,\nthis field represents the confidence that there is a tower in the query\nimage. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "locale": {
          "description": "The language code for the locale in which the entity textual\n`description` is expressed.",
          "type": "string"
        },
        "boundingPoly": {
          "description": "Image region to which this entity belongs. Not produced\nfor `LABEL_DETECTION` features.",
          "$ref": "BoundingPoly"
        },
        "description": {
          "description": "Entity textual description, expressed in its `locale` language.",
          "type": "string"
        },
        "topicality": {
          "description": "The relevancy of the ICA (Image Content Annotation) label to the\nimage. For example, the relevancy of \"tower\" is likely higher to an image\ncontaining the detected \"Eiffel Tower\" than to an image containing a\ndetected distant towering building, even though the confidence that\nthere is a tower in each image may be the same. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "properties": {
          "description": "Some entities may have optional user-supplied `Property` (name/value)\nfields, such a score or string that qualifies the entity.",
          "type": "array",
          "items": {
            "$ref": "Property"
          }
        }
      }
    },
    "GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage": {
      "type": "object",
      "properties": {
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "confidence": {
          "description": "Confidence of detected language. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage",
      "description": "Detected language for a structural component."
    },
    "GoogleCloudVisionV1p1beta1FaceAnnotation": {
      "description": "A face annotation object contains the results of face detection.",
      "type": "object",
      "properties": {
        "fdBoundingPoly": {
          "description": "The `fd_bounding_poly` bounding polygon is tighter than the\n`boundingPoly`, and encloses only the skin part of the face. Typically, it\nis used to eliminate the face from any image analysis that detects the\n\"amount of skin\" visible in an image. It is not based on the\nlandmarker results, only on the initial face detection, hence\nthe \u003ccode\u003efd\u003c/code\u003e (face detection) prefix.",
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly"
        },
        "angerLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Anger likelihood.",
          "type": "string"
        },
        "landmarks": {
          "description": "Detected face landmarks.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1FaceAnnotationLandmark"
          }
        },
        "surpriseLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Surprise likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ]
        },
        "landmarkingConfidence": {
          "description": "Face landmarking confidence. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "joyLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Joy likelihood.",
          "type": "string"
        },
        "underExposedLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Under-exposed likelihood.",
          "type": "string"
        },
        "panAngle": {
          "description": "Yaw angle, which indicates the leftward/rightward angle that the face is\npointing relative to the vertical plane perpendicular to the image. Range\n[-180,180].",
          "format": "float",
          "type": "number"
        },
        "detectionConfidence": {
          "description": "Detection confidence. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "blurredLikelihood": {
          "description": "Blurred likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "headwearLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Headwear likelihood.",
          "type": "string"
        },
        "boundingPoly": {
          "description": "The bounding polygon around the face. The coordinates of the bounding box\nare in the original image's scale, as returned in `ImageParams`.\nThe bounding box is computed to \"frame\" the face in accordance with human\nexpectations. It is based on the landmarker results.\nNote that one or more x and/or y coordinates may not be generated in the\n`BoundingPoly` (the polygon will be unbounded) if only a partial face\nappears in the image to be annotated.",
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly"
        },
        "rollAngle": {
          "description": "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation\nof the face relative to the image vertical about the axis perpendicular to\nthe face. Range [-180,180].",
          "format": "float",
          "type": "number"
        },
        "sorrowLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Sorrow likelihood.",
          "type": "string"
        },
        "tiltAngle": {
          "description": "Pitch angle, which indicates the upwards/downwards angle that the face is\npointing relative to the image's horizontal plane. Range [-180,180].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1FaceAnnotation"
    },
    "WebImage": {
      "description": "Metadata for online images.",
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The result image URL."
        },
        "score": {
          "type": "number",
          "description": "(Deprecated) Overall relevancy score for the image.",
          "format": "float"
        }
      },
      "id": "WebImage"
    },
    "GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak": {
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unknown break label type.",
            "Regular space.",
            "Sure space (very wide).",
            "Line-wrapping break.",
            "End-line hyphen that is not present in text; does not co-occur with\n`SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.",
            "Line break that ends a paragraph."
          ],
          "enum": [
            "UNKNOWN",
            "SPACE",
            "SURE_SPACE",
            "EOL_SURE_SPACE",
            "HYPHEN",
            "LINE_BREAK"
          ],
          "description": "Detected break type.",
          "type": "string"
        },
        "isPrefix": {
          "type": "boolean",
          "description": "True if break prepends the element."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak",
      "description": "Detected start or end of a structural component.",
      "type": "object"
    },
    "GoogleCloudVisionV1p2beta1WebDetectionWebPage": {
      "id": "GoogleCloudVisionV1p2beta1WebDetectionWebPage",
      "description": "Metadata for web pages.",
      "type": "object",
      "properties": {
        "score": {
          "description": "(Deprecated) Overall relevancy score for the web page.",
          "format": "float",
          "type": "number"
        },
        "partialMatchingImages": {
          "description": "Partial matching images on the page.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its\ncrops.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebImage"
          }
        },
        "url": {
          "description": "The result web page URL.",
          "type": "string"
        },
        "pageTitle": {
          "description": "Title for the web page, may contain HTML markups.",
          "type": "string"
        },
        "fullMatchingImages": {
          "description": "Fully matching images on the page.\nCan include resized copies of the query image.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebImage"
          }
        }
      }
    },
    "GoogleCloudVisionV1p2beta1Block": {
      "description": "Logical element on the page.",
      "type": "object",
      "properties": {
        "property": {
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the block."
        },
        "blockType": {
          "enum": [
            "UNKNOWN",
            "TEXT",
            "TABLE",
            "PICTURE",
            "RULER",
            "BARCODE"
          ],
          "description": "Detected block type (text, image etc) for this block.",
          "type": "string",
          "enumDescriptions": [
            "Unknown block type.",
            "Regular text block.",
            "Table block.",
            "Image block.",
            "Horizontal/vertical line box.",
            "Barcode block."
          ]
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly",
          "description": "The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n\n* when the text is horizontal it might look like:\n\n        0----1\n        |    |\n        3----2\n\n* when it's rotated 180 degrees around the top-left corner it becomes:\n\n        2----3\n        |    |\n        1----0\n\n  and the vertice order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results on the block. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "paragraphs": {
          "description": "List of paragraphs in this block (if this blocks is of type text).",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Paragraph"
          }
        }
      },
      "id": "GoogleCloudVisionV1p2beta1Block"
    },
    "GoogleCloudVisionV1p2beta1CropHint": {
      "type": "object",
      "properties": {
        "confidence": {
          "description": "Confidence of this being a salient region.  Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "importanceFraction": {
          "description": "Fraction of importance of this salient region with respect to the original\nimage.",
          "format": "float",
          "type": "number"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly",
          "description": "The bounding polygon for the crop region. The coordinates of the bounding\nbox are in the original image's scale, as returned in `ImageParams`."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1CropHint",
      "description": "Single crop hint that is used to generate a new crop when serving an image."
    },
    "FaceAnnotation": {
      "properties": {
        "boundingPoly": {
          "$ref": "BoundingPoly",
          "description": "The bounding polygon around the face. The coordinates of the bounding box\nare in the original image's scale, as returned in `ImageParams`.\nThe bounding box is computed to \"frame\" the face in accordance with human\nexpectations. It is based on the landmarker results.\nNote that one or more x and/or y coordinates may not be generated in the\n`BoundingPoly` (the polygon will be unbounded) if only a partial face\nappears in the image to be annotated."
        },
        "rollAngle": {
          "type": "number",
          "description": "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation\nof the face relative to the image vertical about the axis perpendicular to\nthe face. Range [-180,180].",
          "format": "float"
        },
        "sorrowLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Sorrow likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ]
        },
        "tiltAngle": {
          "description": "Pitch angle, which indicates the upwards/downwards angle that the face is\npointing relative to the image's horizontal plane. Range [-180,180].",
          "format": "float",
          "type": "number"
        },
        "fdBoundingPoly": {
          "$ref": "BoundingPoly",
          "description": "The `fd_bounding_poly` bounding polygon is tighter than the\n`boundingPoly`, and encloses only the skin part of the face. Typically, it\nis used to eliminate the face from any image analysis that detects the\n\"amount of skin\" visible in an image. It is not based on the\nlandmarker results, only on the initial face detection, hence\nthe \u003ccode\u003efd\u003c/code\u003e (face detection) prefix."
        },
        "angerLikelihood": {
          "description": "Anger likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "landmarks": {
          "description": "Detected face landmarks.",
          "type": "array",
          "items": {
            "$ref": "Landmark"
          }
        },
        "surpriseLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Surprise likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ]
        },
        "joyLikelihood": {
          "description": "Joy likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "landmarkingConfidence": {
          "description": "Face landmarking confidence. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "underExposedLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Under-exposed likelihood.",
          "type": "string"
        },
        "panAngle": {
          "description": "Yaw angle, which indicates the leftward/rightward angle that the face is\npointing relative to the vertical plane perpendicular to the image. Range\n[-180,180].",
          "format": "float",
          "type": "number"
        },
        "detectionConfidence": {
          "description": "Detection confidence. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "blurredLikelihood": {
          "description": "Blurred likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "headwearLikelihood": {
          "description": "Headwear likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        }
      },
      "id": "FaceAnnotation",
      "description": "A face annotation object contains the results of face detection.",
      "type": "object"
    },
    "InputConfig": {
      "description": "The desired input location and metadata.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "$ref": "GcsSource",
          "description": "The Google Cloud Storage location to read the input from."
        },
        "mimeType": {
          "description": "The type of the file. Currently only \"application/pdf\" and \"image/tiff\"\nare supported. Wildcards are not supported.",
          "type": "string"
        }
      },
      "id": "InputConfig"
    },
    "GoogleCloudVisionV1p1beta1Page": {
      "description": "Detected page from OCR.",
      "type": "object",
      "properties": {
        "height": {
          "description": "Page height. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32",
          "type": "integer"
        },
        "width": {
          "description": "Page width. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32",
          "type": "integer"
        },
        "blocks": {
          "description": "List of blocks of text, images etc on this page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Block"
          }
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty",
          "description": "Additional information detected on the page."
        },
        "confidence": {
          "description": "Confidence of the OCR results on the page. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1Page"
    },
    "GoogleCloudVisionV1p2beta1Vertex": {
      "type": "object",
      "properties": {
        "x": {
          "type": "integer",
          "description": "X coordinate.",
          "format": "int32"
        },
        "y": {
          "description": "Y coordinate.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1Vertex",
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image."
    },
    "GoogleCloudVisionV1p1beta1BoundingPoly": {
      "description": "A bounding polygon for the detected image annotation.",
      "type": "object",
      "properties": {
        "vertices": {
          "description": "The bounding polygon vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Vertex"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1BoundingPoly"
    },
    "GoogleCloudVisionV1p3beta1Vertex": {
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image.",
      "type": "object",
      "properties": {
        "y": {
          "description": "Y coordinate.",
          "format": "int32",
          "type": "integer"
        },
        "x": {
          "description": "X coordinate.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1Vertex"
    },
    "GoogleCloudVisionV1p1beta1ImageSource": {
      "description": "External image source (Google Cloud Storage or web URL image location).",
      "type": "object",
      "properties": {
        "gcsImageUri": {
          "description": "**Use `image_uri` instead.**\n\nThe Google Cloud Storage  URI of the form\n`gs://bucket_name/object_name`. Object versioning is not supported. See\n[Google Cloud Storage Request\nURIs](https://cloud.google.com/storage/docs/reference-uris) for more info.",
          "type": "string"
        },
        "imageUri": {
          "type": "string",
          "description": "The URI of the source image. Can be either:\n\n1. A Google Cloud Storage URI of the form\n   `gs://bucket_name/object_name`. Object versioning is not supported. See\n   [Google Cloud Storage Request\n   URIs](https://cloud.google.com/storage/docs/reference-uris) for more\n   info.\n\n2. A publicly-accessible image HTTP/HTTPS URL. When fetching images from\n   HTTP/HTTPS URLs, Google cannot guarantee that the request will be\n   completed. Your request may fail if the specified host denies the\n   request (e.g. due to request throttling or DOS prevention), or if Google\n   throttles requests to the site for abuse prevention. You should not\n   depend on externally-hosted images for production applications.\n\nWhen both `gcs_image_uri` and `image_uri` are specified, `image_uri` takes\nprecedence."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1ImageSource"
    },
    "GoogleCloudVisionV1p1beta1CropHintsParams": {
      "description": "Parameters for crop hints annotation request.",
      "type": "object",
      "properties": {
        "aspectRatios": {
          "description": "Aspect ratios in floats, representing the ratio of the width to the height\nof the image. For example, if the desired aspect ratio is 4/3, the\ncorresponding float value should be 1.33333.  If not specified, the\nbest possible crop is returned. The number of provided aspect ratios is\nlimited to a maximum of 16; any aspect ratios provided after the 16th are\nignored.",
          "type": "array",
          "items": {
            "format": "float",
            "type": "number"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1CropHintsParams"
    },
    "Symbol": {
      "description": "A single symbol representation.",
      "type": "object",
      "properties": {
        "boundingBox": {
          "description": "The bounding box for the symbol.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertice order will still be (0, 1, 2, 3).",
          "$ref": "BoundingPoly"
        },
        "confidence": {
          "description": "Confidence of the OCR results for the symbol. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "text": {
          "description": "The actual UTF-8 representation of the symbol.",
          "type": "string"
        },
        "property": {
          "description": "Additional information detected for the symbol.",
          "$ref": "TextProperty"
        }
      },
      "id": "Symbol"
    },
    "GoogleCloudVisionV1p2beta1OperationMetadata": {
      "description": "Contains metadata for the BatchAnnotateImages operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time when the batch request was received.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "DONE",
            "CANCELLED"
          ],
          "description": "Current state of the batch operation.",
          "type": "string",
          "enumDescriptions": [
            "Invalid.",
            "Request is received.",
            "Request is actively being processed.",
            "The batch processing is done.",
            "The batch processing was cancelled."
          ]
        },
        "updateTime": {
          "description": "The time when the operation result was last updated.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1OperationMetadata"
    },
    "GoogleCloudVisionV1p1beta1DominantColorsAnnotation": {
      "description": "Set of dominant colors and their corresponding scores.",
      "type": "object",
      "properties": {
        "colors": {
          "description": "RGB color values with their score and pixel fraction.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1ColorInfo"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1DominantColorsAnnotation"
    },
    "GoogleCloudVisionV1p2beta1OutputConfig": {
      "description": "The desired output location and metadata.",
      "type": "object",
      "properties": {
        "batchSize": {
          "description": "The max number of response protos to put into each output JSON file on\nGoogle Cloud Storage.\nThe valid range is [1, 100]. If not specified, the default value is 20.\n\nFor example, for one pdf file with 100 pages, 100 response protos will\nbe generated. If `batch_size` = 20, then 5 json files each\ncontaining 20 response protos will be written under the prefix\n`gcs_destination`.`uri`.\n\nCurrently, batch_size only applies to GcsDestination, with potential future\nsupport for other output configurations.",
          "format": "int32",
          "type": "integer"
        },
        "gcsDestination": {
          "$ref": "GoogleCloudVisionV1p2beta1GcsDestination",
          "description": "The Google Cloud Storage location to write the output(s) to."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1OutputConfig"
    },
    "GoogleCloudVisionV1p2beta1Word": {
      "description": "A word representation.",
      "type": "object",
      "properties": {
        "property": {
          "description": "Additional information detected for the word.",
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty"
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly",
          "description": "The bounding box for the word.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertice order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results for the word. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "symbols": {
          "description": "List of symbols in the word.\nThe order of the symbols follows the natural reading order.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Symbol"
          }
        }
      },
      "id": "GoogleCloudVisionV1p2beta1Word"
    },
    "GoogleCloudVisionV1p1beta1CropHint": {
      "type": "object",
      "properties": {
        "boundingPoly": {
          "description": "The bounding polygon for the crop region. The coordinates of the bounding\nbox are in the original image's scale, as returned in `ImageParams`.",
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly"
        },
        "confidence": {
          "description": "Confidence of this being a salient region.  Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "importanceFraction": {
          "description": "Fraction of importance of this salient region with respect to the original\nimage.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1CropHint",
      "description": "Single crop hint that is used to generate a new crop when serving an image."
    },
    "GoogleCloudVisionV1p2beta1Page": {
      "description": "Detected page from OCR.",
      "type": "object",
      "properties": {
        "height": {
          "description": "Page height. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32",
          "type": "integer"
        },
        "width": {
          "description": "Page width. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32",
          "type": "integer"
        },
        "blocks": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Block"
          },
          "description": "List of blocks of text, images etc on this page."
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty",
          "description": "Additional information detected on the page."
        },
        "confidence": {
          "description": "Confidence of the OCR results on the page. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1Page"
    },
    "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty": {
      "description": "Additional information detected on the structural component.",
      "type": "object",
      "properties": {
        "detectedBreak": {
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak",
          "description": "Detected start or end of a text segment."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage"
          }
        }
      },
      "id": "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty"
    },
    "GoogleCloudVisionV1p1beta1CropHintsAnnotation": {
      "description": "Set of crop hints that are used to generate new crops when serving images.",
      "type": "object",
      "properties": {
        "cropHints": {
          "description": "Crop hint results.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1CropHint"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1CropHintsAnnotation"
    },
    "GoogleCloudVisionV1p1beta1InputConfig": {
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudVisionV1p1beta1GcsSource",
          "description": "The Google Cloud Storage location to read the input from."
        },
        "mimeType": {
          "description": "The type of the file. Currently only \"application/pdf\" and \"image/tiff\"\nare supported. Wildcards are not supported.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1InputConfig",
      "description": "The desired input location and metadata.",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1WebDetectionWebLabel": {
      "description": "Label to provide extra metadata for the web detection.",
      "type": "object",
      "properties": {
        "label": {
          "description": "Label for extra metadata.",
          "type": "string"
        },
        "languageCode": {
          "description": "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1WebDetectionWebLabel"
    },
    "ImageAnnotationContext": {
      "description": "If an image was produced from a file (e.g. a PDF), this message gives\ninformation about the source of that image.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The URI of the file used to produce the image.",
          "type": "string"
        },
        "pageNumber": {
          "description": "If the file was a PDF or TIFF, this field gives the page number within\nthe file used to produce the image.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "ImageAnnotationContext"
    },
    "GoogleCloudVisionV1p2beta1DominantColorsAnnotation": {
      "id": "GoogleCloudVisionV1p2beta1DominantColorsAnnotation",
      "description": "Set of dominant colors and their corresponding scores.",
      "type": "object",
      "properties": {
        "colors": {
          "description": "RGB color values with their score and pixel fraction.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1ColorInfo"
          }
        }
      }
    },
    "WebEntity": {
      "description": "Entity deduced from similar images on the Internet.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Canonical description of the entity, in English.",
          "type": "string"
        },
        "score": {
          "description": "Overall relevancy score for the entity.\nNot normalized and not comparable across different image queries.",
          "format": "float",
          "type": "number"
        },
        "entityId": {
          "description": "Opaque entity ID.",
          "type": "string"
        }
      },
      "id": "WebEntity"
    },
    "GoogleCloudVisionV1p3beta1BoundingPoly": {
      "type": "object",
      "properties": {
        "vertices": {
          "description": "The bounding polygon vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1Vertex"
          }
        },
        "normalizedVertices": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1NormalizedVertex"
          },
          "description": "The bounding polygon normalized vertices."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1BoundingPoly",
      "description": "A bounding polygon for the detected image annotation."
    },
    "GoogleCloudVisionV1p1beta1AsyncAnnotateFileRequest": {
      "description": "An offline file annotation request.",
      "type": "object",
      "properties": {
        "inputConfig": {
          "$ref": "GoogleCloudVisionV1p1beta1InputConfig",
          "description": "Required. Information about the input file."
        },
        "features": {
          "description": "Required. Requested features.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Feature"
          }
        },
        "imageContext": {
          "$ref": "GoogleCloudVisionV1p1beta1ImageContext",
          "description": "Additional context that may accompany the image(s) in the file."
        },
        "outputConfig": {
          "description": "Required. The desired output location and metadata (e.g. format).",
          "$ref": "GoogleCloudVisionV1p1beta1OutputConfig"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1AsyncAnnotateFileRequest"
    },
    "GoogleCloudVisionV1p2beta1WebDetection": {
      "id": "GoogleCloudVisionV1p2beta1WebDetection",
      "description": "Relevant information for the image from the Internet.",
      "type": "object",
      "properties": {
        "visuallySimilarImages": {
          "description": "The visually similar image results.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebImage"
          }
        },
        "bestGuessLabels": {
          "description": "The service's best guess as to the topic of the request image.\nInferred from similar images on the open web.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebLabel"
          }
        },
        "fullMatchingImages": {
          "description": "Fully matching images from the Internet.\nCan include resized copies of the query image.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebImage"
          }
        },
        "webEntities": {
          "description": "Deduced entities from similar images on the Internet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebEntity"
          }
        },
        "pagesWithMatchingImages": {
          "description": "Web pages containing the matching images from the Internet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebPage"
          }
        },
        "partialMatchingImages": {
          "description": "Partial matching images from the Internet.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its crops.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebImage"
          }
        }
      }
    },
    "GoogleCloudVisionV1p1beta1OutputConfig": {
      "description": "The desired output location and metadata.",
      "type": "object",
      "properties": {
        "batchSize": {
          "description": "The max number of response protos to put into each output JSON file on\nGoogle Cloud Storage.\nThe valid range is [1, 100]. If not specified, the default value is 20.\n\nFor example, for one pdf file with 100 pages, 100 response protos will\nbe generated. If `batch_size` = 20, then 5 json files each\ncontaining 20 response protos will be written under the prefix\n`gcs_destination`.`uri`.\n\nCurrently, batch_size only applies to GcsDestination, with potential future\nsupport for other output configurations.",
          "format": "int32",
          "type": "integer"
        },
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output(s) to.",
          "$ref": "GoogleCloudVisionV1p1beta1GcsDestination"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1OutputConfig"
    },
    "GoogleCloudVisionV1p2beta1LocationInfo": {
      "description": "Detected entity location information.",
      "type": "object",
      "properties": {
        "latLng": {
          "description": "lat/long location coordinates.",
          "$ref": "LatLng"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1LocationInfo"
    },
    "NormalizedVertex": {
      "description": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the original image\nand range from 0 to 1.",
      "type": "object",
      "properties": {
        "y": {
          "description": "Y coordinate.",
          "format": "float",
          "type": "number"
        },
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "NormalizedVertex"
    },
    "Block": {
      "properties": {
        "property": {
          "description": "Additional information detected for the block.",
          "$ref": "TextProperty"
        },
        "blockType": {
          "description": "Detected block type (text, image etc) for this block.",
          "type": "string",
          "enumDescriptions": [
            "Unknown block type.",
            "Regular text block.",
            "Table block.",
            "Image block.",
            "Horizontal/vertical line box.",
            "Barcode block."
          ],
          "enum": [
            "UNKNOWN",
            "TEXT",
            "TABLE",
            "PICTURE",
            "RULER",
            "BARCODE"
          ]
        },
        "boundingBox": {
          "$ref": "BoundingPoly",
          "description": "The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n\n* when the text is horizontal it might look like:\n\n        0----1\n        |    |\n        3----2\n\n* when it's rotated 180 degrees around the top-left corner it becomes:\n\n        2----3\n        |    |\n        1----0\n\n  and the vertice order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results on the block. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "paragraphs": {
          "description": "List of paragraphs in this block (if this blocks is of type text).",
          "type": "array",
          "items": {
            "$ref": "Paragraph"
          }
        }
      },
      "id": "Block",
      "description": "Logical element on the page.",
      "type": "object"
    },
    "GoogleCloudVisionV1p2beta1FaceAnnotationLandmark": {
      "type": "object",
      "properties": {
        "position": {
          "description": "Face landmark position.",
          "$ref": "GoogleCloudVisionV1p2beta1Position"
        },
        "type": {
          "enum": [
            "UNKNOWN_LANDMARK",
            "LEFT_EYE",
            "RIGHT_EYE",
            "LEFT_OF_LEFT_EYEBROW",
            "RIGHT_OF_LEFT_EYEBROW",
            "LEFT_OF_RIGHT_EYEBROW",
            "RIGHT_OF_RIGHT_EYEBROW",
            "MIDPOINT_BETWEEN_EYES",
            "NOSE_TIP",
            "UPPER_LIP",
            "LOWER_LIP",
            "MOUTH_LEFT",
            "MOUTH_RIGHT",
            "MOUTH_CENTER",
            "NOSE_BOTTOM_RIGHT",
            "NOSE_BOTTOM_LEFT",
            "NOSE_BOTTOM_CENTER",
            "LEFT_EYE_TOP_BOUNDARY",
            "LEFT_EYE_RIGHT_CORNER",
            "LEFT_EYE_BOTTOM_BOUNDARY",
            "LEFT_EYE_LEFT_CORNER",
            "RIGHT_EYE_TOP_BOUNDARY",
            "RIGHT_EYE_RIGHT_CORNER",
            "RIGHT_EYE_BOTTOM_BOUNDARY",
            "RIGHT_EYE_LEFT_CORNER",
            "LEFT_EYEBROW_UPPER_MIDPOINT",
            "RIGHT_EYEBROW_UPPER_MIDPOINT",
            "LEFT_EAR_TRAGION",
            "RIGHT_EAR_TRAGION",
            "LEFT_EYE_PUPIL",
            "RIGHT_EYE_PUPIL",
            "FOREHEAD_GLABELLA",
            "CHIN_GNATHION",
            "CHIN_LEFT_GONION",
            "CHIN_RIGHT_GONION"
          ],
          "description": "Face landmark type.",
          "type": "string",
          "enumDescriptions": [
            "Unknown face landmark detected. Should not be filled.",
            "Left eye.",
            "Right eye.",
            "Left of left eyebrow.",
            "Right of left eyebrow.",
            "Left of right eyebrow.",
            "Right of right eyebrow.",
            "Midpoint between eyes.",
            "Nose tip.",
            "Upper lip.",
            "Lower lip.",
            "Mouth left.",
            "Mouth right.",
            "Mouth center.",
            "Nose, bottom right.",
            "Nose, bottom left.",
            "Nose, bottom center.",
            "Left eye, top boundary.",
            "Left eye, right corner.",
            "Left eye, bottom boundary.",
            "Left eye, left corner.",
            "Right eye, top boundary.",
            "Right eye, right corner.",
            "Right eye, bottom boundary.",
            "Right eye, left corner.",
            "Left eyebrow, upper midpoint.",
            "Right eyebrow, upper midpoint.",
            "Left ear tragion.",
            "Right ear tragion.",
            "Left eye pupil.",
            "Right eye pupil.",
            "Forehead glabella.",
            "Chin gnathion.",
            "Chin left gonion.",
            "Chin right gonion."
          ]
        }
      },
      "id": "GoogleCloudVisionV1p2beta1FaceAnnotationLandmark",
      "description": "A face-specific landmark (for example, a face feature)."
    },
    "GoogleCloudVisionV1p2beta1NormalizedVertex": {
      "description": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the original image\nand range from 0 to 1.",
      "type": "object",
      "properties": {
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        },
        "y": {
          "description": "Y coordinate.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1NormalizedVertex"
    },
    "GoogleCloudVisionV1p2beta1FaceAnnotation": {
      "description": "A face annotation object contains the results of face detection.",
      "type": "object",
      "properties": {
        "tiltAngle": {
          "description": "Pitch angle, which indicates the upwards/downwards angle that the face is\npointing relative to the image's horizontal plane. Range [-180,180].",
          "format": "float",
          "type": "number"
        },
        "fdBoundingPoly": {
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly",
          "description": "The `fd_bounding_poly` bounding polygon is tighter than the\n`boundingPoly`, and encloses only the skin part of the face. Typically, it\nis used to eliminate the face from any image analysis that detects the\n\"amount of skin\" visible in an image. It is not based on the\nlandmarker results, only on the initial face detection, hence\nthe \u003ccode\u003efd\u003c/code\u003e (face detection) prefix."
        },
        "angerLikelihood": {
          "description": "Anger likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "landmarks": {
          "description": "Detected face landmarks.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1FaceAnnotationLandmark"
          }
        },
        "surpriseLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Surprise likelihood.",
          "type": "string"
        },
        "landmarkingConfidence": {
          "description": "Face landmarking confidence. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "joyLikelihood": {
          "description": "Joy likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "underExposedLikelihood": {
          "description": "Under-exposed likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "panAngle": {
          "description": "Yaw angle, which indicates the leftward/rightward angle that the face is\npointing relative to the vertical plane perpendicular to the image. Range\n[-180,180].",
          "format": "float",
          "type": "number"
        },
        "detectionConfidence": {
          "description": "Detection confidence. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "blurredLikelihood": {
          "description": "Blurred likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "headwearLikelihood": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Headwear likelihood."
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly",
          "description": "The bounding polygon around the face. The coordinates of the bounding box\nare in the original image's scale, as returned in `ImageParams`.\nThe bounding box is computed to \"frame\" the face in accordance with human\nexpectations. It is based on the landmarker results.\nNote that one or more x and/or y coordinates may not be generated in the\n`BoundingPoly` (the polygon will be unbounded) if only a partial face\nappears in the image to be annotated."
        },
        "rollAngle": {
          "description": "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation\nof the face relative to the image vertical about the axis perpendicular to\nthe face. Range [-180,180].",
          "format": "float",
          "type": "number"
        },
        "sorrowLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Sorrow likelihood.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1FaceAnnotation"
    },
    "Position": {
      "description": "A 3D position in the image, used primarily for Face detection landmarks.\nA valid Position must have both x and y coordinates.\nThe position coordinates are in the same scale as the original image.",
      "type": "object",
      "properties": {
        "y": {
          "description": "Y coordinate.",
          "format": "float",
          "type": "number"
        },
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        },
        "z": {
          "description": "Z coordinate (or depth).",
          "format": "float",
          "type": "number"
        }
      },
      "id": "Position"
    },
    "ColorInfo": {
      "description": "Color information consists of RGB channels, score, and the fraction of\nthe image that the color occupies in the image.",
      "type": "object",
      "properties": {
        "pixelFraction": {
          "description": "The fraction of pixels the color occupies in the image.\nValue in range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "color": {
          "description": "RGB components of the color.",
          "$ref": "Color"
        },
        "score": {
          "description": "Image-specific score for this color. Value in range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "ColorInfo"
    },
    "GoogleCloudVisionV1p1beta1WebDetection": {
      "type": "object",
      "properties": {
        "visuallySimilarImages": {
          "description": "The visually similar image results.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebImage"
          }
        },
        "bestGuessLabels": {
          "description": "The service's best guess as to the topic of the request image.\nInferred from similar images on the open web.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebLabel"
          }
        },
        "fullMatchingImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebImage"
          },
          "description": "Fully matching images from the Internet.\nCan include resized copies of the query image."
        },
        "webEntities": {
          "description": "Deduced entities from similar images on the Internet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebEntity"
          }
        },
        "pagesWithMatchingImages": {
          "description": "Web pages containing the matching images from the Internet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebPage"
          }
        },
        "partialMatchingImages": {
          "description": "Partial matching images from the Internet.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its crops.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebImage"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1WebDetection",
      "description": "Relevant information for the image from the Internet."
    },
    "GoogleCloudVisionV1p3beta1BatchOperationMetadata": {
      "properties": {
        "endTime": {
          "description": "The time when the batch request is finished and\ngoogle.longrunning.Operation.done is set to true.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "description": "The current state of the batch operation.",
          "type": "string",
          "enumDescriptions": [
            "Invalid.",
            "Request is actively being processed.",
            "The request is done and at least one item has been successfully\nprocessed.",
            "The request is done and no item has been successfully processed.",
            "The request is done after the longrunning.Operations.CancelOperation has\nbeen called by the user.  Any records that were processed before the\ncancel command are output as specified in the request."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROCESSING",
            "SUCCESSFUL",
            "FAILED",
            "CANCELLED"
          ]
        },
        "submitTime": {
          "description": "The time when the batch request was submitted to the server.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1BatchOperationMetadata",
      "description": "Metadata for the batch operations such as the current state.\n\nThis is included in the `metadata` field of the `Operation` returned by the\n`GetOperation` call of the `google::longrunning::Operations` service.",
      "type": "object"
    },
    "GcsDestination": {
      "description": "The Google Cloud Storage location where the output will be written to.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Google Cloud Storage URI where the results will be stored. Results will\nbe in JSON format and preceded by its corresponding input URI. This field\ncan either represent a single file, or a prefix for multiple outputs.\nPrefixes must end in a `/`.\n\nExamples:\n\n*    File: gs://bucket-name/filename.json\n*    Prefix: gs://bucket-name/prefix/here/\n*    File: gs://bucket-name/prefix/here\n\nIf multiple outputs, each response is still AnnotateFileResponse, each of\nwhich contains some subset of the full list of AnnotateImageResponse.\nMultiple outputs can happen if, for example, the output JSON is too large\nand overflows into multiple sharded files.",
          "type": "string"
        }
      },
      "id": "GcsDestination"
    },
    "GoogleCloudVisionV1p1beta1SafeSearchAnnotation": {
      "id": "GoogleCloudVisionV1p1beta1SafeSearchAnnotation",
      "description": "Set of features pertaining to the image, computed by computer vision\nmethods over safe-search verticals (for example, adult, spoof, medical,\nviolence).",
      "type": "object",
      "properties": {
        "violence": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this image contains violent content.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ]
        },
        "adult": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Represents the adult content likelihood for the image. Adult content may\ncontain elements such as nudity, pornographic images or cartoons, or\nsexual activities.",
          "type": "string"
        },
        "spoof": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Spoof likelihood. The likelihood that an modification\nwas made to the image's canonical version to make it appear\nfunny or offensive."
        },
        "medical": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this is a medical image.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ]
        },
        "racy": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that the request image contains racy content. Racy content may\ninclude (but is not limited to) skimpy or sheer clothing, strategically\ncovered nudity, lewd or provocative poses, or close-ups of sensitive\nbody areas.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ]
        }
      }
    },
    "Landmark": {
      "description": "A face-specific landmark (for example, a face feature).",
      "type": "object",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unknown face landmark detected. Should not be filled.",
            "Left eye.",
            "Right eye.",
            "Left of left eyebrow.",
            "Right of left eyebrow.",
            "Left of right eyebrow.",
            "Right of right eyebrow.",
            "Midpoint between eyes.",
            "Nose tip.",
            "Upper lip.",
            "Lower lip.",
            "Mouth left.",
            "Mouth right.",
            "Mouth center.",
            "Nose, bottom right.",
            "Nose, bottom left.",
            "Nose, bottom center.",
            "Left eye, top boundary.",
            "Left eye, right corner.",
            "Left eye, bottom boundary.",
            "Left eye, left corner.",
            "Right eye, top boundary.",
            "Right eye, right corner.",
            "Right eye, bottom boundary.",
            "Right eye, left corner.",
            "Left eyebrow, upper midpoint.",
            "Right eyebrow, upper midpoint.",
            "Left ear tragion.",
            "Right ear tragion.",
            "Left eye pupil.",
            "Right eye pupil.",
            "Forehead glabella.",
            "Chin gnathion.",
            "Chin left gonion.",
            "Chin right gonion."
          ],
          "enum": [
            "UNKNOWN_LANDMARK",
            "LEFT_EYE",
            "RIGHT_EYE",
            "LEFT_OF_LEFT_EYEBROW",
            "RIGHT_OF_LEFT_EYEBROW",
            "LEFT_OF_RIGHT_EYEBROW",
            "RIGHT_OF_RIGHT_EYEBROW",
            "MIDPOINT_BETWEEN_EYES",
            "NOSE_TIP",
            "UPPER_LIP",
            "LOWER_LIP",
            "MOUTH_LEFT",
            "MOUTH_RIGHT",
            "MOUTH_CENTER",
            "NOSE_BOTTOM_RIGHT",
            "NOSE_BOTTOM_LEFT",
            "NOSE_BOTTOM_CENTER",
            "LEFT_EYE_TOP_BOUNDARY",
            "LEFT_EYE_RIGHT_CORNER",
            "LEFT_EYE_BOTTOM_BOUNDARY",
            "LEFT_EYE_LEFT_CORNER",
            "RIGHT_EYE_TOP_BOUNDARY",
            "RIGHT_EYE_RIGHT_CORNER",
            "RIGHT_EYE_BOTTOM_BOUNDARY",
            "RIGHT_EYE_LEFT_CORNER",
            "LEFT_EYEBROW_UPPER_MIDPOINT",
            "RIGHT_EYEBROW_UPPER_MIDPOINT",
            "LEFT_EAR_TRAGION",
            "RIGHT_EAR_TRAGION",
            "LEFT_EYE_PUPIL",
            "RIGHT_EYE_PUPIL",
            "FOREHEAD_GLABELLA",
            "CHIN_GNATHION",
            "CHIN_LEFT_GONION",
            "CHIN_RIGHT_GONION"
          ],
          "description": "Face landmark type.",
          "type": "string"
        },
        "position": {
          "$ref": "Position",
          "description": "Face landmark position."
        }
      },
      "id": "Landmark"
    },
    "Word": {
      "properties": {
        "property": {
          "$ref": "TextProperty",
          "description": "Additional information detected for the word."
        },
        "boundingBox": {
          "$ref": "BoundingPoly",
          "description": "The bounding box for the word.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertice order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results for the word. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "symbols": {
          "description": "List of symbols in the word.\nThe order of the symbols follows the natural reading order.",
          "type": "array",
          "items": {
            "$ref": "Symbol"
          }
        }
      },
      "id": "Word",
      "description": "A word representation.",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1GcsDestination": {
      "id": "GoogleCloudVisionV1p1beta1GcsDestination",
      "description": "The Google Cloud Storage location where the output will be written to.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Google Cloud Storage URI where the results will be stored. Results will\nbe in JSON format and preceded by its corresponding input URI. This field\ncan either represent a single file, or a prefix for multiple outputs.\nPrefixes must end in a `/`.\n\nExamples:\n\n*    File: gs://bucket-name/filename.json\n*    Prefix: gs://bucket-name/prefix/here/\n*    File: gs://bucket-name/prefix/here\n\nIf multiple outputs, each response is still AnnotateFileResponse, each of\nwhich contains some subset of the full list of AnnotateImageResponse.\nMultiple outputs can happen if, for example, the output JSON is too large\nand overflows into multiple sharded files.",
          "type": "string"
        }
      }
    },
    "GoogleCloudVisionV1p2beta1ColorInfo": {
      "description": "Color information consists of RGB channels, score, and the fraction of\nthe image that the color occupies in the image.",
      "type": "object",
      "properties": {
        "pixelFraction": {
          "description": "The fraction of pixels the color occupies in the image.\nValue in range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "color": {
          "$ref": "Color",
          "description": "RGB components of the color."
        },
        "score": {
          "description": "Image-specific score for this color. Value in range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1ColorInfo"
    },
    "GoogleCloudVisionV1p2beta1AnnotateImageResponse": {
      "description": "Response to an image annotation request.",
      "type": "object",
      "properties": {
        "cropHintsAnnotation": {
          "$ref": "GoogleCloudVisionV1p2beta1CropHintsAnnotation",
          "description": "If present, crop hints have completed successfully."
        },
        "labelAnnotations": {
          "description": "If present, label detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1EntityAnnotation"
          }
        },
        "error": {
          "description": "If set, represents the error message for the operation.\nNote that filled-in image annotations are guaranteed to be\ncorrect, even when `error` is set.",
          "$ref": "Status"
        },
        "fullTextAnnotation": {
          "description": "If present, text (OCR) detection or document (OCR) text detection has\ncompleted successfully.\nThis annotation provides the structural hierarchy for the OCR detected\ntext.",
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotation"
        },
        "textAnnotations": {
          "description": "If present, text (OCR) detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1EntityAnnotation"
          }
        },
        "imagePropertiesAnnotation": {
          "description": "If present, image properties were extracted successfully.",
          "$ref": "GoogleCloudVisionV1p2beta1ImageProperties"
        },
        "logoAnnotations": {
          "description": "If present, logo detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1EntityAnnotation"
          }
        },
        "context": {
          "$ref": "GoogleCloudVisionV1p2beta1ImageAnnotationContext",
          "description": "If present, contextual information is needed to understand where this image\ncomes from."
        },
        "webDetection": {
          "$ref": "GoogleCloudVisionV1p2beta1WebDetection",
          "description": "If present, web detection has completed successfully."
        },
        "safeSearchAnnotation": {
          "$ref": "GoogleCloudVisionV1p2beta1SafeSearchAnnotation",
          "description": "If present, safe-search annotation has completed successfully."
        },
        "landmarkAnnotations": {
          "description": "If present, landmark detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1EntityAnnotation"
          }
        },
        "faceAnnotations": {
          "description": "If present, face detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1FaceAnnotation"
          }
        }
      },
      "id": "GoogleCloudVisionV1p2beta1AnnotateImageResponse"
    },
    "GoogleCloudVisionV1p2beta1ImageProperties": {
      "description": "Stores image properties, such as dominant colors.",
      "type": "object",
      "properties": {
        "dominantColors": {
          "description": "If present, dominant colors completed successfully.",
          "$ref": "GoogleCloudVisionV1p2beta1DominantColorsAnnotation"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1ImageProperties"
    },
    "GoogleCloudVisionV1p2beta1SafeSearchAnnotation": {
      "description": "Set of features pertaining to the image, computed by computer vision\nmethods over safe-search verticals (for example, adult, spoof, medical,\nviolence).",
      "type": "object",
      "properties": {
        "adult": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Represents the adult content likelihood for the image. Adult content may\ncontain elements such as nudity, pornographic images or cartoons, or\nsexual activities.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ]
        },
        "spoof": {
          "description": "Spoof likelihood. The likelihood that an modification\nwas made to the image's canonical version to make it appear\nfunny or offensive.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "medical": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this is a medical image.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ]
        },
        "racy": {
          "description": "Likelihood that the request image contains racy content. Racy content may\ninclude (but is not limited to) skimpy or sheer clothing, strategically\ncovered nudity, lewd or provocative poses, or close-ups of sensitive\nbody areas.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "violence": {
          "description": "Likelihood that this image contains violent content.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        }
      },
      "id": "GoogleCloudVisionV1p2beta1SafeSearchAnnotation"
    },
    "Operation": {
      "type": "object",
      "properties": {
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `operations/some/unique/name`.",
          "type": "string"
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        }
      },
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call."
    },
    "GoogleCloudVisionV1p1beta1Paragraph": {
      "description": "Structural unit of text representing a number of words in certain order.",
      "type": "object",
      "properties": {
        "property": {
          "description": "Additional information detected for the paragraph.",
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty"
        },
        "boundingBox": {
          "description": "The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertice order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly"
        },
        "confidence": {
          "description": "Confidence of the OCR results for the paragraph. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "words": {
          "description": "List of words in this paragraph.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Word"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1Paragraph"
    },
    "GoogleCloudVisionV1p2beta1InputConfig": {
      "description": "The desired input location and metadata.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "description": "The Google Cloud Storage location to read the input from.",
          "$ref": "GoogleCloudVisionV1p2beta1GcsSource"
        },
        "mimeType": {
          "type": "string",
          "description": "The type of the file. Currently only \"application/pdf\" and \"image/tiff\"\nare supported. Wildcards are not supported."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1InputConfig"
    },
    "Page": {
      "description": "Detected page from OCR.",
      "type": "object",
      "properties": {
        "property": {
          "description": "Additional information detected on the page.",
          "$ref": "TextProperty"
        },
        "confidence": {
          "description": "Confidence of the OCR results on the page. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "height": {
          "description": "Page height. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32",
          "type": "integer"
        },
        "width": {
          "type": "integer",
          "description": "Page width. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32"
        },
        "blocks": {
          "description": "List of blocks of text, images etc on this page.",
          "type": "array",
          "items": {
            "$ref": "Block"
          }
        }
      },
      "id": "Page"
    },
    "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty": {
      "type": "object",
      "properties": {
        "detectedBreak": {
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak",
          "description": "Detected start or end of a text segment."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty",
      "description": "Additional information detected on the structural component."
    },
    "GoogleCloudVisionV1p1beta1LocationInfo": {
      "description": "Detected entity location information.",
      "type": "object",
      "properties": {
        "latLng": {
          "$ref": "LatLng",
          "description": "lat/long location coordinates."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1LocationInfo"
    },
    "GoogleCloudVisionV1p1beta1WebDetectionParams": {
      "type": "object",
      "properties": {
        "includeGeoResults": {
          "description": "Whether to include results derived from the geo information in the image.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1WebDetectionParams",
      "description": "Parameters for web detection request."
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
      "type": "object",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "Status"
    },
    "GoogleCloudVisionV1p1beta1LatLongRect": {
      "description": "Rectangle determined by min and max `LatLng` pairs.",
      "type": "object",
      "properties": {
        "minLatLng": {
          "$ref": "LatLng",
          "description": "Min lat/long pair."
        },
        "maxLatLng": {
          "$ref": "LatLng",
          "description": "Max lat/long pair."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1LatLongRect"
    },
    "GoogleCloudVisionV1p1beta1WebDetectionWebPage": {
      "description": "Metadata for web pages.",
      "type": "object",
      "properties": {
        "score": {
          "description": "(Deprecated) Overall relevancy score for the web page.",
          "format": "float",
          "type": "number"
        },
        "partialMatchingImages": {
          "description": "Partial matching images on the page.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its\ncrops.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebImage"
          }
        },
        "url": {
          "description": "The result web page URL.",
          "type": "string"
        },
        "pageTitle": {
          "type": "string",
          "description": "Title for the web page, may contain HTML markups."
        },
        "fullMatchingImages": {
          "description": "Fully matching images on the page.\nCan include resized copies of the query image.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebImage"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1WebDetectionWebPage"
    },
    "GoogleCloudVisionV1p1beta1Feature": {
      "description": "The type of Google Cloud Vision API detection to perform, and the maximum\nnumber of results to return for that type. Multiple `Feature` objects can\nbe specified in the `features` list.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The feature type.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified feature type.",
            "Run face detection.",
            "Run landmark detection.",
            "Run logo detection.",
            "Run label detection.",
            "Run text detection / optical character recognition (OCR). Text detection\nis optimized for areas of text within a larger image; if the image is\na document, use `DOCUMENT_TEXT_DETECTION` instead.",
            "Run dense text document OCR. Takes precedence when both\n`DOCUMENT_TEXT_DETECTION` and `TEXT_DETECTION` are present.",
            "Run Safe Search to detect potentially unsafe\nor undesirable content.",
            "Compute a set of image properties, such as the\nimage's dominant colors.",
            "Run crop hints.",
            "Run web detection."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "FACE_DETECTION",
            "LANDMARK_DETECTION",
            "LOGO_DETECTION",
            "LABEL_DETECTION",
            "TEXT_DETECTION",
            "DOCUMENT_TEXT_DETECTION",
            "SAFE_SEARCH_DETECTION",
            "IMAGE_PROPERTIES",
            "CROP_HINTS",
            "WEB_DETECTION"
          ]
        },
        "maxResults": {
          "description": "Maximum number of results of this type. Does not apply to\n`TEXT_DETECTION`, `DOCUMENT_TEXT_DETECTION`, or `CROP_HINTS`.",
          "format": "int32",
          "type": "integer"
        },
        "model": {
          "description": "Model to use for the feature.\nSupported values: \"builtin/stable\" (the default if unset) and\n\"builtin/latest\".",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1Feature"
    },
    "GoogleCloudVisionV1p2beta1BoundingPoly": {
      "type": "object",
      "properties": {
        "normalizedVertices": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1NormalizedVertex"
          },
          "description": "The bounding polygon normalized vertices."
        },
        "vertices": {
          "description": "The bounding polygon vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Vertex"
          }
        }
      },
      "id": "GoogleCloudVisionV1p2beta1BoundingPoly",
      "description": "A bounding polygon for the detected image annotation."
    },
    "GoogleCloudVisionV1p1beta1GcsSource": {
      "id": "GoogleCloudVisionV1p1beta1GcsSource",
      "description": "The Google Cloud Storage location where the input will be read from.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Google Cloud Storage URI for the input file. This must only be a\nGoogle Cloud Storage object. Wildcards are not currently supported.",
          "type": "string"
        }
      }
    },
    "GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "UNKNOWN",
            "SPACE",
            "SURE_SPACE",
            "EOL_SURE_SPACE",
            "HYPHEN",
            "LINE_BREAK"
          ],
          "description": "Detected break type.",
          "type": "string",
          "enumDescriptions": [
            "Unknown break label type.",
            "Regular space.",
            "Sure space (very wide).",
            "Line-wrapping break.",
            "End-line hyphen that is not present in text; does not co-occur with\n`SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.",
            "Line break that ends a paragraph."
          ]
        },
        "isPrefix": {
          "description": "True if break prepends the element.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak",
      "description": "Detected start or end of a structural component."
    },
    "AsyncBatchAnnotateFilesResponse": {
      "description": "Response to an async batch file annotation request.",
      "type": "object",
      "properties": {
        "responses": {
          "description": "The list of file annotation responses, one for each request in\nAsyncBatchAnnotateFilesRequest.",
          "type": "array",
          "items": {
            "$ref": "AsyncAnnotateFileResponse"
          }
        }
      },
      "id": "AsyncBatchAnnotateFilesResponse"
    },
    "GoogleCloudVisionV1p1beta1Property": {
      "description": "A `Property` consists of a user-supplied name/value pair.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Value of the property.",
          "type": "string"
        },
        "uint64Value": {
          "description": "Value of numeric properties.",
          "format": "uint64",
          "type": "string"
        },
        "name": {
          "description": "Name of the property.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1Property"
    },
    "SafeSearchAnnotation": {
      "type": "object",
      "properties": {
        "adult": {
          "description": "Represents the adult content likelihood for the image. Adult content may\ncontain elements such as nudity, pornographic images or cartoons, or\nsexual activities.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "spoof": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Spoof likelihood. The likelihood that an modification\nwas made to the image's canonical version to make it appear\nfunny or offensive.",
          "type": "string"
        },
        "medical": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this is a medical image.",
          "type": "string"
        },
        "racy": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that the request image contains racy content. Racy content may\ninclude (but is not limited to) skimpy or sheer clothing, strategically\ncovered nudity, lewd or provocative poses, or close-ups of sensitive\nbody areas.",
          "type": "string"
        },
        "violence": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this image contains violent content.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely that the image belongs to the specified vertical.",
            "It is unlikely that the image belongs to the specified vertical.",
            "It is possible that the image belongs to the specified vertical.",
            "It is likely that the image belongs to the specified vertical.",
            "It is very likely that the image belongs to the specified vertical."
          ]
        }
      },
      "id": "SafeSearchAnnotation",
      "description": "Set of features pertaining to the image, computed by computer vision\nmethods over safe-search verticals (for example, adult, spoof, medical,\nviolence)."
    },
    "Vertex": {
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image.",
      "type": "object",
      "properties": {
        "y": {
          "description": "Y coordinate.",
          "format": "int32",
          "type": "integer"
        },
        "x": {
          "description": "X coordinate.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Vertex"
    },
    "WebLabel": {
      "type": "object",
      "properties": {
        "languageCode": {
          "description": "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "label": {
          "description": "Label for extra metadata.",
          "type": "string"
        }
      },
      "id": "WebLabel",
      "description": "Label to provide extra metadata for the web detection."
    },
    "GoogleCloudVisionV1p2beta1WebDetectionWebEntity": {
      "description": "Entity deduced from similar images on the Internet.",
      "type": "object",
      "properties": {
        "entityId": {
          "description": "Opaque entity ID.",
          "type": "string"
        },
        "description": {
          "description": "Canonical description of the entity, in English.",
          "type": "string"
        },
        "score": {
          "description": "Overall relevancy score for the entity.\nNot normalized and not comparable across different image queries.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1WebDetectionWebEntity"
    },
    "TextProperty": {
      "description": "Additional information detected on the structural component.",
      "type": "object",
      "properties": {
        "detectedBreak": {
          "$ref": "DetectedBreak",
          "description": "Detected start or end of a text segment."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "DetectedLanguage"
          }
        }
      },
      "id": "TextProperty"
    },
    "GoogleCloudVisionV1p1beta1Symbol": {
      "description": "A single symbol representation.",
      "type": "object",
      "properties": {
        "text": {
          "description": "The actual UTF-8 representation of the symbol.",
          "type": "string"
        },
        "property": {
          "description": "Additional information detected for the symbol.",
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty"
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly",
          "description": "The bounding box for the symbol.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertice order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results for the symbol. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1Symbol"
    },
    "GoogleCloudVisionV1p1beta1ImageProperties": {
      "description": "Stores image properties, such as dominant colors.",
      "type": "object",
      "properties": {
        "dominantColors": {
          "description": "If present, dominant colors completed successfully.",
          "$ref": "GoogleCloudVisionV1p1beta1DominantColorsAnnotation"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1ImageProperties"
    },
    "GoogleCloudVisionV1p1beta1Image": {
      "id": "GoogleCloudVisionV1p1beta1Image",
      "description": "Client image to perform Google Cloud Vision API tasks over.",
      "type": "object",
      "properties": {
        "content": {
          "description": "Image content, represented as a stream of bytes.\nNote: As with all `bytes` fields, protobuffers use a pure binary\nrepresentation, whereas JSON representations use base64.",
          "format": "byte",
          "type": "string"
        },
        "source": {
          "$ref": "GoogleCloudVisionV1p1beta1ImageSource",
          "description": "Google Cloud Storage image location, or publicly-accessible image\nURL. If both `content` and `source` are provided for an image, `content`\ntakes precedence and is used to perform the image annotation request."
        }
      }
    },
    "GoogleCloudVisionV1p2beta1AsyncBatchAnnotateFilesResponse": {
      "description": "Response to an async batch file annotation request.",
      "type": "object",
      "properties": {
        "responses": {
          "description": "The list of file annotation responses, one for each request in\nAsyncBatchAnnotateFilesRequest.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse"
          }
        }
      },
      "id": "GoogleCloudVisionV1p2beta1AsyncBatchAnnotateFilesResponse"
    },
    "GoogleCloudVisionV1p1beta1ColorInfo": {
      "properties": {
        "pixelFraction": {
          "description": "The fraction of pixels the color occupies in the image.\nValue in range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "color": {
          "$ref": "Color",
          "description": "RGB components of the color."
        },
        "score": {
          "description": "Image-specific score for this color. Value in range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1ColorInfo",
      "description": "Color information consists of RGB channels, score, and the fraction of\nthe image that the color occupies in the image.",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1FaceAnnotationLandmark": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unknown face landmark detected. Should not be filled.",
            "Left eye.",
            "Right eye.",
            "Left of left eyebrow.",
            "Right of left eyebrow.",
            "Left of right eyebrow.",
            "Right of right eyebrow.",
            "Midpoint between eyes.",
            "Nose tip.",
            "Upper lip.",
            "Lower lip.",
            "Mouth left.",
            "Mouth right.",
            "Mouth center.",
            "Nose, bottom right.",
            "Nose, bottom left.",
            "Nose, bottom center.",
            "Left eye, top boundary.",
            "Left eye, right corner.",
            "Left eye, bottom boundary.",
            "Left eye, left corner.",
            "Right eye, top boundary.",
            "Right eye, right corner.",
            "Right eye, bottom boundary.",
            "Right eye, left corner.",
            "Left eyebrow, upper midpoint.",
            "Right eyebrow, upper midpoint.",
            "Left ear tragion.",
            "Right ear tragion.",
            "Left eye pupil.",
            "Right eye pupil.",
            "Forehead glabella.",
            "Chin gnathion.",
            "Chin left gonion.",
            "Chin right gonion."
          ],
          "enum": [
            "UNKNOWN_LANDMARK",
            "LEFT_EYE",
            "RIGHT_EYE",
            "LEFT_OF_LEFT_EYEBROW",
            "RIGHT_OF_LEFT_EYEBROW",
            "LEFT_OF_RIGHT_EYEBROW",
            "RIGHT_OF_RIGHT_EYEBROW",
            "MIDPOINT_BETWEEN_EYES",
            "NOSE_TIP",
            "UPPER_LIP",
            "LOWER_LIP",
            "MOUTH_LEFT",
            "MOUTH_RIGHT",
            "MOUTH_CENTER",
            "NOSE_BOTTOM_RIGHT",
            "NOSE_BOTTOM_LEFT",
            "NOSE_BOTTOM_CENTER",
            "LEFT_EYE_TOP_BOUNDARY",
            "LEFT_EYE_RIGHT_CORNER",
            "LEFT_EYE_BOTTOM_BOUNDARY",
            "LEFT_EYE_LEFT_CORNER",
            "RIGHT_EYE_TOP_BOUNDARY",
            "RIGHT_EYE_RIGHT_CORNER",
            "RIGHT_EYE_BOTTOM_BOUNDARY",
            "RIGHT_EYE_LEFT_CORNER",
            "LEFT_EYEBROW_UPPER_MIDPOINT",
            "RIGHT_EYEBROW_UPPER_MIDPOINT",
            "LEFT_EAR_TRAGION",
            "RIGHT_EAR_TRAGION",
            "LEFT_EYE_PUPIL",
            "RIGHT_EYE_PUPIL",
            "FOREHEAD_GLABELLA",
            "CHIN_GNATHION",
            "CHIN_LEFT_GONION",
            "CHIN_RIGHT_GONION"
          ],
          "description": "Face landmark type."
        },
        "position": {
          "$ref": "GoogleCloudVisionV1p1beta1Position",
          "description": "Face landmark position."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1FaceAnnotationLandmark",
      "description": "A face-specific landmark (for example, a face feature)."
    },
    "GoogleCloudVisionV1p2beta1AnnotateFileResponse": {
      "description": "Response to a single file annotation request. A file may contain one or more\nimages, which individually have their own responses.",
      "type": "object",
      "properties": {
        "responses": {
          "description": "Individual responses to images found within the file.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1AnnotateImageResponse"
          }
        },
        "inputConfig": {
          "description": "Information about the file for which this response is generated.",
          "$ref": "GoogleCloudVisionV1p2beta1InputConfig"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1AnnotateFileResponse"
    },
    "CropHint": {
      "type": "object",
      "properties": {
        "boundingPoly": {
          "$ref": "BoundingPoly",
          "description": "The bounding polygon for the crop region. The coordinates of the bounding\nbox are in the original image's scale, as returned in `ImageParams`."
        },
        "confidence": {
          "description": "Confidence of this being a salient region.  Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "importanceFraction": {
          "description": "Fraction of importance of this salient region with respect to the original\nimage.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "CropHint",
      "description": "Single crop hint that is used to generate a new crop when serving an image."
    },
    "GoogleCloudVisionV1p1beta1AnnotateImageRequest": {
      "type": "object",
      "properties": {
        "image": {
          "description": "The image to be processed.",
          "$ref": "GoogleCloudVisionV1p1beta1Image"
        },
        "features": {
          "description": "Requested features.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Feature"
          }
        },
        "imageContext": {
          "$ref": "GoogleCloudVisionV1p1beta1ImageContext",
          "description": "Additional context that may accompany the image."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1AnnotateImageRequest",
      "description": "Request for performing Google Cloud Vision API tasks over a user-provided\nimage, with user-requested features."
    },
    "GoogleCloudVisionV1p3beta1ImportProductSetsResponse": {
      "description": "Response message for the `ImportProductSets` method.\n\nThis message is returned by the\ngoogle.longrunning.Operations.GetOperation method in the returned\ngoogle.longrunning.Operation.response field.",
      "type": "object",
      "properties": {
        "statuses": {
          "description": "The rpc status for each ImportProductSet request, including both successes\nand errors.\n\nThe number of statuses here matches the number of lines in the csv file,\nand statuses[i] stores the success or failure status of processing the i-th\nline of the csv, starting from line 0.",
          "type": "array",
          "items": {
            "$ref": "Status"
          }
        },
        "referenceImages": {
          "description": "The list of reference_images that are imported successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1ReferenceImage"
          }
        }
      },
      "id": "GoogleCloudVisionV1p3beta1ImportProductSetsResponse"
    },
    "GcsSource": {
      "id": "GcsSource",
      "description": "The Google Cloud Storage location where the input will be read from.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Google Cloud Storage URI for the input file. This must only be a\nGoogle Cloud Storage object. Wildcards are not currently supported.",
          "type": "string"
        }
      }
    },
    "Paragraph": {
      "properties": {
        "property": {
          "description": "Additional information detected for the paragraph.",
          "$ref": "TextProperty"
        },
        "boundingBox": {
          "$ref": "BoundingPoly",
          "description": "The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertice order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results for the paragraph. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "words": {
          "description": "List of words in this paragraph.",
          "type": "array",
          "items": {
            "$ref": "Word"
          }
        }
      },
      "id": "Paragraph",
      "description": "Structural unit of text representing a number of words in certain order.",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1Block": {
      "description": "Logical element on the page.",
      "type": "object",
      "properties": {
        "blockType": {
          "enumDescriptions": [
            "Unknown block type.",
            "Regular text block.",
            "Table block.",
            "Image block.",
            "Horizontal/vertical line box.",
            "Barcode block."
          ],
          "enum": [
            "UNKNOWN",
            "TEXT",
            "TABLE",
            "PICTURE",
            "RULER",
            "BARCODE"
          ],
          "description": "Detected block type (text, image etc) for this block.",
          "type": "string"
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly",
          "description": "The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n\n* when the text is horizontal it might look like:\n\n        0----1\n        |    |\n        3----2\n\n* when it's rotated 180 degrees around the top-left corner it becomes:\n\n        2----3\n        |    |\n        1----0\n\n  and the vertice order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results on the block. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "paragraphs": {
          "description": "List of paragraphs in this block (if this blocks is of type text).",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Paragraph"
          }
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the block."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1Block"
    },
    "GoogleCloudVisionV1p3beta1NormalizedVertex": {
      "description": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the original image\nand range from 0 to 1.",
      "type": "object",
      "properties": {
        "y": {
          "description": "Y coordinate.",
          "format": "float",
          "type": "number"
        },
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1NormalizedVertex"
    },
    "GoogleCloudVisionV1p1beta1TextAnnotation": {
      "properties": {
        "pages": {
          "description": "List of pages detected by OCR.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Page"
          }
        },
        "text": {
          "description": "UTF-8 text detected on the pages.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1TextAnnotation",
      "description": "TextAnnotation contains a structured representation of OCR extracted text.\nThe hierarchy of an OCR extracted text structure is like this:\n    TextAnnotation -\u003e Page -\u003e Block -\u003e Paragraph -\u003e Word -\u003e Symbol\nEach structural component, starting from Page, may further have their own\nproperties. Properties describe detected languages, breaks etc.. Please refer\nto the TextAnnotation.TextProperty message definition below for more\ndetail.",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1Vertex": {
      "type": "object",
      "properties": {
        "y": {
          "description": "Y coordinate.",
          "format": "int32",
          "type": "integer"
        },
        "x": {
          "description": "X coordinate.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1Vertex",
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image."
    },
    "GoogleCloudVisionV1p2beta1GcsDestination": {
      "type": "object",
      "properties": {
        "uri": {
          "description": "Google Cloud Storage URI where the results will be stored. Results will\nbe in JSON format and preceded by its corresponding input URI. This field\ncan either represent a single file, or a prefix for multiple outputs.\nPrefixes must end in a `/`.\n\nExamples:\n\n*    File: gs://bucket-name/filename.json\n*    Prefix: gs://bucket-name/prefix/here/\n*    File: gs://bucket-name/prefix/here\n\nIf multiple outputs, each response is still AnnotateFileResponse, each of\nwhich contains some subset of the full list of AnnotateImageResponse.\nMultiple outputs can happen if, for example, the output JSON is too large\nand overflows into multiple sharded files.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1GcsDestination",
      "description": "The Google Cloud Storage location where the output will be written to."
    },
    "AnnotateFileResponse": {
      "type": "object",
      "properties": {
        "inputConfig": {
          "$ref": "InputConfig",
          "description": "Information about the file for which this response is generated."
        },
        "responses": {
          "description": "Individual responses to images found within the file.",
          "type": "array",
          "items": {
            "$ref": "AnnotateImageResponse"
          }
        }
      },
      "id": "AnnotateFileResponse",
      "description": "Response to a single file annotation request. A file may contain one or more\nimages, which individually have their own responses."
    },
    "GoogleCloudVisionV1p2beta1WebDetectionWebLabel": {
      "description": "Label to provide extra metadata for the web detection.",
      "type": "object",
      "properties": {
        "label": {
          "description": "Label for extra metadata.",
          "type": "string"
        },
        "languageCode": {
          "description": "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1WebDetectionWebLabel"
    },
    "LatLng": {
      "description": "An object representing a latitude/longitude pair. This is expressed as a pair\nof doubles representing degrees latitude and degrees longitude. Unless\nspecified otherwise, this must conform to the\n\u003ca href=\"http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf\"\u003eWGS84\nstandard\u003c/a\u003e. Values must be within normalized ranges.",
      "type": "object",
      "properties": {
        "latitude": {
          "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
          "format": "double",
          "type": "number"
        },
        "longitude": {
          "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
          "format": "double",
          "type": "number"
        }
      },
      "id": "LatLng"
    },
    "GoogleCloudVisionV1p2beta1Symbol": {
      "type": "object",
      "properties": {
        "property": {
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the symbol."
        },
        "boundingBox": {
          "description": "The bounding box for the symbol.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertice order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly"
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the OCR results for the symbol. Range [0, 1].",
          "format": "float"
        },
        "text": {
          "description": "The actual UTF-8 representation of the symbol.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1Symbol",
      "description": "A single symbol representation."
    },
    "Color": {
      "description": "Represents a color in the RGBA color space. This representation is designed\nfor simplicity of conversion to/from color representations in various\nlanguages over compactness; for example, the fields of this representation\ncan be trivially provided to the constructor of \"java.awt.Color\" in Java; it\ncan also be trivially provided to UIColor's \"+colorWithRed:green:blue:alpha\"\nmethod in iOS; and, with just a little work, it can be easily formatted into\na CSS \"rgba()\" string in JavaScript, as well. Here are some examples:\n\nExample (Java):\n\n     import com.google.type.Color;\n\n     // ...\n     public static java.awt.Color fromProto(Color protocolor) {\n       float alpha = protocolor.hasAlpha()\n           ? protocolor.getAlpha().getValue()\n           : 1.0;\n\n       return new java.awt.Color(\n           protocolor.getRed(),\n           protocolor.getGreen(),\n           protocolor.getBlue(),\n           alpha);\n     }\n\n     public static Color toProto(java.awt.Color color) {\n       float red = (float) color.getRed();\n       float green = (float) color.getGreen();\n       float blue = (float) color.getBlue();\n       float denominator = 255.0;\n       Color.Builder resultBuilder =\n           Color\n               .newBuilder()\n               .setRed(red / denominator)\n               .setGreen(green / denominator)\n               .setBlue(blue / denominator);\n       int alpha = color.getAlpha();\n       if (alpha != 255) {\n         result.setAlpha(\n             FloatValue\n                 .newBuilder()\n                 .setValue(((float) alpha) / denominator)\n                 .build());\n       }\n       return resultBuilder.build();\n     }\n     // ...\n\nExample (iOS / Obj-C):\n\n     // ...\n     static UIColor* fromProto(Color* protocolor) {\n        float red = [protocolor red];\n        float green = [protocolor green];\n        float blue = [protocolor blue];\n        FloatValue* alpha_wrapper = [protocolor alpha];\n        float alpha = 1.0;\n        if (alpha_wrapper != nil) {\n          alpha = [alpha_wrapper value];\n        }\n        return [UIColor colorWithRed:red green:green blue:blue alpha:alpha];\n     }\n\n     static Color* toProto(UIColor* color) {\n         CGFloat red, green, blue, alpha;\n         if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) {\n           return nil;\n         }\n         Color* result = [[Color alloc] init];\n         [result setRed:red];\n         [result setGreen:green];\n         [result setBlue:blue];\n         if (alpha \u003c= 0.9999) {\n           [result setAlpha:floatWrapperWithValue(alpha)];\n         }\n         [result autorelease];\n         return result;\n    }\n    // ...\n\n Example (JavaScript):\n\n    // ...\n\n    var protoToCssColor = function(rgb_color) {\n       var redFrac = rgb_color.red || 0.0;\n       var greenFrac = rgb_color.green || 0.0;\n       var blueFrac = rgb_color.blue || 0.0;\n       var red = Math.floor(redFrac * 255);\n       var green = Math.floor(greenFrac * 255);\n       var blue = Math.floor(blueFrac * 255);\n\n       if (!('alpha' in rgb_color)) {\n          return rgbToCssColor_(red, green, blue);\n       }\n\n       var alphaFrac = rgb_color.alpha.value || 0.0;\n       var rgbParams = [red, green, blue].join(',');\n       return ['rgba(', rgbParams, ',', alphaFrac, ')'].join('');\n    };\n\n    var rgbToCssColor_ = function(red, green, blue) {\n      var rgbNumber = new Number((red \u003c\u003c 16) | (green \u003c\u003c 8) | blue);\n      var hexString = rgbNumber.toString(16);\n      var missingZeros = 6 - hexString.length;\n      var resultBuilder = ['#'];\n      for (var i = 0; i \u003c missingZeros; i++) {\n         resultBuilder.push('0');\n      }\n      resultBuilder.push(hexString);\n      return resultBuilder.join('');\n    };\n\n    // ...",
      "type": "object",
      "properties": {
        "red": {
          "description": "The amount of red in the color as a value in the interval [0, 1].",
          "format": "float",
          "type": "number"
        },
        "green": {
          "description": "The amount of green in the color as a value in the interval [0, 1].",
          "format": "float",
          "type": "number"
        },
        "blue": {
          "description": "The amount of blue in the color as a value in the interval [0, 1].",
          "format": "float",
          "type": "number"
        },
        "alpha": {
          "description": "The fraction of this color that should be applied to the pixel. That is,\nthe final pixel color is defined by the equation:\n\n  pixel color = alpha * (this color) + (1.0 - alpha) * (background color)\n\nThis means that a value of 1.0 corresponds to a solid color, whereas\na value of 0.0 corresponds to a completely transparent color. This\nuses a wrapper message rather than a simple float scalar so that it is\npossible to distinguish between a default value and the value being unset.\nIf omitted, this color object is to be rendered as a solid color\n(as if the alpha value had been explicitly given with a value of 1.0).",
          "format": "float",
          "type": "number"
        }
      },
      "id": "Color"
    },
    "ImageProperties": {
      "description": "Stores image properties, such as dominant colors.",
      "type": "object",
      "properties": {
        "dominantColors": {
          "description": "If present, dominant colors completed successfully.",
          "$ref": "DominantColorsAnnotation"
        }
      },
      "id": "ImageProperties"
    },
    "GoogleCloudVisionV1p1beta1ImageContext": {
      "description": "Image context and/or feature-specific parameters.",
      "type": "object",
      "properties": {
        "latLongRect": {
          "$ref": "GoogleCloudVisionV1p1beta1LatLongRect",
          "description": "Not used."
        },
        "cropHintsParams": {
          "description": "Parameters for crop hints annotation request.",
          "$ref": "GoogleCloudVisionV1p1beta1CropHintsParams"
        },
        "languageHints": {
          "description": "List of languages to use for TEXT_DETECTION. In most cases, an empty value\nyields the best results since it enables automatic language detection. For\nlanguages based on the Latin alphabet, setting `language_hints` is not\nneeded. In rare cases, when the language of the text in the image is known,\nsetting a hint will help get better results (although it will be a\nsignificant hindrance if the hint is wrong). Text detection returns an\nerror if one or more of the specified languages is not one of the\n[supported languages](/vision/docs/languages).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "webDetectionParams": {
          "$ref": "GoogleCloudVisionV1p1beta1WebDetectionParams",
          "description": "Parameters for web detection."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1ImageContext"
    },
    "AsyncAnnotateFileResponse": {
      "description": "The response for a single offline file annotation request.",
      "type": "object",
      "properties": {
        "outputConfig": {
          "$ref": "OutputConfig",
          "description": "The output location and metadata from AsyncAnnotateFileRequest."
        }
      },
      "id": "AsyncAnnotateFileResponse"
    },
    "DetectedLanguage": {
      "properties": {
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of detected language. Range [0, 1].",
          "format": "float"
        }
      },
      "id": "DetectedLanguage",
      "description": "Detected language for a structural component.",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage": {
      "properties": {
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "confidence": {
          "description": "Confidence of detected language. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage",
      "description": "Detected language for a structural component.",
      "type": "object"
    },
    "GoogleCloudVisionV1p2beta1TextAnnotation": {
      "description": "TextAnnotation contains a structured representation of OCR extracted text.\nThe hierarchy of an OCR extracted text structure is like this:\n    TextAnnotation -\u003e Page -\u003e Block -\u003e Paragraph -\u003e Word -\u003e Symbol\nEach structural component, starting from Page, may further have their own\nproperties. Properties describe detected languages, breaks etc.. Please refer\nto the TextAnnotation.TextProperty message definition below for more\ndetail.",
      "type": "object",
      "properties": {
        "pages": {
          "description": "List of pages detected by OCR.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Page"
          }
        },
        "text": {
          "description": "UTF-8 text detected on the pages.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1TextAnnotation"
    },
    "OutputConfig": {
      "description": "The desired output location and metadata.",
      "type": "object",
      "properties": {
        "batchSize": {
          "description": "The max number of response protos to put into each output JSON file on\nGoogle Cloud Storage.\nThe valid range is [1, 100]. If not specified, the default value is 20.\n\nFor example, for one pdf file with 100 pages, 100 response protos will\nbe generated. If `batch_size` = 20, then 5 json files each\ncontaining 20 response protos will be written under the prefix\n`gcs_destination`.`uri`.\n\nCurrently, batch_size only applies to GcsDestination, with potential future\nsupport for other output configurations.",
          "format": "int32",
          "type": "integer"
        },
        "gcsDestination": {
          "$ref": "GcsDestination",
          "description": "The Google Cloud Storage location to write the output(s) to."
        }
      },
      "id": "OutputConfig"
    },
    "AnnotateImageResponse": {
      "description": "Response to an image annotation request.",
      "type": "object",
      "properties": {
        "labelAnnotations": {
          "type": "array",
          "items": {
            "$ref": "EntityAnnotation"
          },
          "description": "If present, label detection has completed successfully."
        },
        "error": {
          "$ref": "Status",
          "description": "If set, represents the error message for the operation.\nNote that filled-in image annotations are guaranteed to be\ncorrect, even when `error` is set."
        },
        "fullTextAnnotation": {
          "description": "If present, text (OCR) detection or document (OCR) text detection has\ncompleted successfully.\nThis annotation provides the structural hierarchy for the OCR detected\ntext.",
          "$ref": "TextAnnotation"
        },
        "textAnnotations": {
          "description": "If present, text (OCR) detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "EntityAnnotation"
          }
        },
        "imagePropertiesAnnotation": {
          "$ref": "ImageProperties",
          "description": "If present, image properties were extracted successfully."
        },
        "context": {
          "$ref": "ImageAnnotationContext",
          "description": "If present, contextual information is needed to understand where this image\ncomes from."
        },
        "logoAnnotations": {
          "description": "If present, logo detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "EntityAnnotation"
          }
        },
        "webDetection": {
          "description": "If present, web detection has completed successfully.",
          "$ref": "WebDetection"
        },
        "safeSearchAnnotation": {
          "description": "If present, safe-search annotation has completed successfully.",
          "$ref": "SafeSearchAnnotation"
        },
        "landmarkAnnotations": {
          "type": "array",
          "items": {
            "$ref": "EntityAnnotation"
          },
          "description": "If present, landmark detection has completed successfully."
        },
        "faceAnnotations": {
          "type": "array",
          "items": {
            "$ref": "FaceAnnotation"
          },
          "description": "If present, face detection has completed successfully."
        },
        "cropHintsAnnotation": {
          "$ref": "CropHintsAnnotation",
          "description": "If present, crop hints have completed successfully."
        }
      },
      "id": "AnnotateImageResponse"
    },
    "GoogleCloudVisionV1p2beta1CropHintsAnnotation": {
      "id": "GoogleCloudVisionV1p2beta1CropHintsAnnotation",
      "description": "Set of crop hints that are used to generate new crops when serving images.",
      "type": "object",
      "properties": {
        "cropHints": {
          "description": "Crop hint results.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1CropHint"
          }
        }
      }
    },
    "GoogleCloudVisionV1p3beta1ReferenceImage": {
      "description": "A `ReferenceImage` represents a product image and its associated metadata,\nsuch as bounding boxes.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the reference image.\n\nFormat is:\n\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`.\n\nThis field is ignored when creating a reference image.",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "The Google Cloud Storage URI of the reference image.\n\nThe URI must start with `gs://`.\n\nRequired."
        },
        "boundingPolys": {
          "description": "Bounding polygons around the areas of interest in the reference image.\nOptional. If this field is empty, the system will try to detect regions of\ninterest. At most 10 bounding polygons will be used.\n\nThe provided shape is converted into a non-rotated rectangle. Once\nconverted, the small edge of the rectangle must be greater than or equal\nto 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5\nis not).",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly"
          }
        }
      },
      "id": "GoogleCloudVisionV1p3beta1ReferenceImage"
    },
    "GoogleCloudVisionV1p2beta1WebDetectionWebImage": {
      "description": "Metadata for online images.",
      "type": "object",
      "properties": {
        "score": {
          "description": "(Deprecated) Overall relevancy score for the image.",
          "format": "float",
          "type": "number"
        },
        "url": {
          "description": "The result image URL.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1WebDetectionWebImage"
    },
    "Property": {
      "description": "A `Property` consists of a user-supplied name/value pair.",
      "type": "object",
      "properties": {
        "uint64Value": {
          "description": "Value of numeric properties.",
          "format": "uint64",
          "type": "string"
        },
        "name": {
          "description": "Name of the property.",
          "type": "string"
        },
        "value": {
          "description": "Value of the property.",
          "type": "string"
        }
      },
      "id": "Property"
    },
    "WebDetection": {
      "description": "Relevant information for the image from the Internet.",
      "type": "object",
      "properties": {
        "visuallySimilarImages": {
          "description": "The visually similar image results.",
          "type": "array",
          "items": {
            "$ref": "WebImage"
          }
        },
        "bestGuessLabels": {
          "description": "The service's best guess as to the topic of the request image.\nInferred from similar images on the open web.",
          "type": "array",
          "items": {
            "$ref": "WebLabel"
          }
        },
        "fullMatchingImages": {
          "description": "Fully matching images from the Internet.\nCan include resized copies of the query image.",
          "type": "array",
          "items": {
            "$ref": "WebImage"
          }
        },
        "webEntities": {
          "description": "Deduced entities from similar images on the Internet.",
          "type": "array",
          "items": {
            "$ref": "WebEntity"
          }
        },
        "pagesWithMatchingImages": {
          "description": "Web pages containing the matching images from the Internet.",
          "type": "array",
          "items": {
            "$ref": "WebPage"
          }
        },
        "partialMatchingImages": {
          "description": "Partial matching images from the Internet.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its crops.",
          "type": "array",
          "items": {
            "$ref": "WebImage"
          }
        }
      },
      "id": "WebDetection"
    },
    "GoogleCloudVisionV1p1beta1WebDetectionWebEntity": {
      "description": "Entity deduced from similar images on the Internet.",
      "type": "object",
      "properties": {
        "entityId": {
          "description": "Opaque entity ID.",
          "type": "string"
        },
        "description": {
          "description": "Canonical description of the entity, in English.",
          "type": "string"
        },
        "score": {
          "description": "Overall relevancy score for the entity.\nNot normalized and not comparable across different image queries.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1WebDetectionWebEntity"
    },
    "GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse": {
      "id": "GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse",
      "description": "The response for a single offline file annotation request.",
      "type": "object",
      "properties": {
        "outputConfig": {
          "$ref": "GoogleCloudVisionV1p2beta1OutputConfig",
          "description": "The output location and metadata from AsyncAnnotateFileRequest."
        }
      }
    },
    "GoogleCloudVisionV1p1beta1AnnotateImageResponse": {
      "description": "Response to an image annotation request.",
      "type": "object",
      "properties": {
        "textAnnotations": {
          "description": "If present, text (OCR) detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1EntityAnnotation"
          }
        },
        "imagePropertiesAnnotation": {
          "description": "If present, image properties were extracted successfully.",
          "$ref": "GoogleCloudVisionV1p1beta1ImageProperties"
        },
        "logoAnnotations": {
          "description": "If present, logo detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1EntityAnnotation"
          }
        },
        "context": {
          "description": "If present, contextual information is needed to understand where this image\ncomes from.",
          "$ref": "GoogleCloudVisionV1p1beta1ImageAnnotationContext"
        },
        "webDetection": {
          "description": "If present, web detection has completed successfully.",
          "$ref": "GoogleCloudVisionV1p1beta1WebDetection"
        },
        "safeSearchAnnotation": {
          "$ref": "GoogleCloudVisionV1p1beta1SafeSearchAnnotation",
          "description": "If present, safe-search annotation has completed successfully."
        },
        "landmarkAnnotations": {
          "description": "If present, landmark detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1EntityAnnotation"
          }
        },
        "faceAnnotations": {
          "description": "If present, face detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1FaceAnnotation"
          }
        },
        "cropHintsAnnotation": {
          "description": "If present, crop hints have completed successfully.",
          "$ref": "GoogleCloudVisionV1p1beta1CropHintsAnnotation"
        },
        "labelAnnotations": {
          "description": "If present, label detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1EntityAnnotation"
          }
        },
        "error": {
          "$ref": "Status",
          "description": "If set, represents the error message for the operation.\nNote that filled-in image annotations are guaranteed to be\ncorrect, even when `error` is set."
        },
        "fullTextAnnotation": {
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotation",
          "description": "If present, text (OCR) detection or document (OCR) text detection has\ncompleted successfully.\nThis annotation provides the structural hierarchy for the OCR detected\ntext."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1AnnotateImageResponse"
    },
    "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesRequest": {
      "description": "Multiple async file annotation requests are batched into a single service\ncall.",
      "type": "object",
      "properties": {
        "requests": {
          "description": "Individual async file annotation requests for this batch.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1AsyncAnnotateFileRequest"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesRequest"
    },
    "GoogleCloudVisionV1p2beta1Property": {
      "id": "GoogleCloudVisionV1p2beta1Property",
      "description": "A `Property` consists of a user-supplied name/value pair.",
      "type": "object",
      "properties": {
        "uint64Value": {
          "description": "Value of numeric properties.",
          "format": "uint64",
          "type": "string"
        },
        "name": {
          "description": "Name of the property.",
          "type": "string"
        },
        "value": {
          "description": "Value of the property.",
          "type": "string"
        }
      }
    },
    "DetectedBreak": {
      "description": "Detected start or end of a structural component.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unknown break label type.",
            "Regular space.",
            "Sure space (very wide).",
            "Line-wrapping break.",
            "End-line hyphen that is not present in text; does not co-occur with\n`SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.",
            "Line break that ends a paragraph."
          ],
          "enum": [
            "UNKNOWN",
            "SPACE",
            "SURE_SPACE",
            "EOL_SURE_SPACE",
            "HYPHEN",
            "LINE_BREAK"
          ],
          "description": "Detected break type."
        },
        "isPrefix": {
          "description": "True if break prepends the element.",
          "type": "boolean"
        }
      },
      "id": "DetectedBreak"
    },
    "GoogleCloudVisionV1p1beta1EntityAnnotation": {
      "properties": {
        "mid": {
          "description": "Opaque entity ID. Some IDs may be available in\n[Google Knowledge Graph Search\nAPI](https://developers.google.com/knowledge-graph/).",
          "type": "string"
        },
        "confidence": {
          "description": "**Deprecated. Use `score` instead.**\nThe accuracy of the entity detection in an image.\nFor example, for an image in which the \"Eiffel Tower\" entity is detected,\nthis field represents the confidence that there is a tower in the query\nimage. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "locale": {
          "type": "string",
          "description": "The language code for the locale in which the entity textual\n`description` is expressed."
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly",
          "description": "Image region to which this entity belongs. Not produced\nfor `LABEL_DETECTION` features."
        },
        "description": {
          "description": "Entity textual description, expressed in its `locale` language.",
          "type": "string"
        },
        "topicality": {
          "description": "The relevancy of the ICA (Image Content Annotation) label to the\nimage. For example, the relevancy of \"tower\" is likely higher to an image\ncontaining the detected \"Eiffel Tower\" than to an image containing a\ndetected distant towering building, even though the confidence that\nthere is a tower in each image may be the same. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "properties": {
          "description": "Some entities may have optional user-supplied `Property` (name/value)\nfields, such a score or string that qualifies the entity.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Property"
          }
        },
        "score": {
          "description": "Overall score of the result. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "locations": {
          "description": "The location information for the detected entity. Multiple\n`LocationInfo` elements can be present because one location may\nindicate the location of the scene in the image, and another location\nmay indicate the location of the place where the image was taken.\nLocation information is usually present for landmarks.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1LocationInfo"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1EntityAnnotation",
      "description": "Set of detected entity features.",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1ImageAnnotationContext": {
      "id": "GoogleCloudVisionV1p1beta1ImageAnnotationContext",
      "description": "If an image was produced from a file (e.g. a PDF), this message gives\ninformation about the source of that image.",
      "type": "object",
      "properties": {
        "pageNumber": {
          "description": "If the file was a PDF or TIFF, this field gives the page number within\nthe file used to produce the image.",
          "format": "int32",
          "type": "integer"
        },
        "uri": {
          "description": "The URI of the file used to produce the image.",
          "type": "string"
        }
      }
    },
    "GoogleCloudVisionV1p2beta1Paragraph": {
      "description": "Structural unit of text representing a number of words in certain order.",
      "type": "object",
      "properties": {
        "property": {
          "description": "Additional information detected for the paragraph.",
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty"
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly",
          "description": "The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertice order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the OCR results for the paragraph. Range [0, 1].",
          "format": "float"
        },
        "words": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Word"
          },
          "description": "List of words in this paragraph."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1Paragraph"
    },
    "GoogleCloudVisionV1p1beta1BatchAnnotateImagesRequest": {
      "description": "Multiple image annotation requests are batched into a single service call.",
      "type": "object",
      "properties": {
        "requests": {
          "description": "Individual image annotation requests for this batch.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1AnnotateImageRequest"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1BatchAnnotateImagesRequest"
    },
    "GoogleCloudVisionV1p1beta1Word": {
      "description": "A word representation.",
      "type": "object",
      "properties": {
        "symbols": {
          "description": "List of symbols in the word.\nThe order of the symbols follows the natural reading order.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Symbol"
          }
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the word."
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly",
          "description": "The bounding box for the word.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertice order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results for the word. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1Word"
    },
    "CropHintsAnnotation": {
      "description": "Set of crop hints that are used to generate new crops when serving images.",
      "type": "object",
      "properties": {
        "cropHints": {
          "description": "Crop hint results.",
          "type": "array",
          "items": {
            "$ref": "CropHint"
          }
        }
      },
      "id": "CropHintsAnnotation"
    },
    "OperationMetadata": {
      "properties": {
        "state": {
          "enumDescriptions": [
            "Invalid.",
            "Request is received.",
            "Request is actively being processed.",
            "The batch processing is done.",
            "The batch processing was cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "DONE",
            "CANCELLED"
          ],
          "description": "Current state of the batch operation.",
          "type": "string"
        },
        "updateTime": {
          "description": "The time when the operation result was last updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "description": "The time when the batch request was received.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "OperationMetadata",
      "description": "Contains metadata for the BatchAnnotateImages operation.",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1Position": {
      "properties": {
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        },
        "z": {
          "description": "Z coordinate (or depth).",
          "format": "float",
          "type": "number"
        },
        "y": {
          "description": "Y coordinate.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1Position",
      "description": "A 3D position in the image, used primarily for Face detection landmarks.\nA valid Position must have both x and y coordinates.\nThe position coordinates are in the same scale as the original image.",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1WebDetectionWebImage": {
      "id": "GoogleCloudVisionV1p1beta1WebDetectionWebImage",
      "description": "Metadata for online images.",
      "type": "object",
      "properties": {
        "score": {
          "description": "(Deprecated) Overall relevancy score for the image.",
          "format": "float",
          "type": "number"
        },
        "url": {
          "description": "The result image URL.",
          "type": "string"
        }
      }
    },
    "GoogleCloudVisionV1p2beta1ImageAnnotationContext": {
      "description": "If an image was produced from a file (e.g. a PDF), this message gives\ninformation about the source of that image.",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "The URI of the file used to produce the image."
        },
        "pageNumber": {
          "description": "If the file was a PDF or TIFF, this field gives the page number within\nthe file used to produce the image.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1ImageAnnotationContext"
    },
    "GoogleCloudVisionV1p2beta1Position": {
      "description": "A 3D position in the image, used primarily for Face detection landmarks.\nA valid Position must have both x and y coordinates.\nThe position coordinates are in the same scale as the original image.",
      "type": "object",
      "properties": {
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        },
        "z": {
          "description": "Z coordinate (or depth).",
          "format": "float",
          "type": "number"
        },
        "y": {
          "description": "Y coordinate.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1Position"
    },
    "DominantColorsAnnotation": {
      "description": "Set of dominant colors and their corresponding scores.",
      "type": "object",
      "properties": {
        "colors": {
          "description": "RGB color values with their score and pixel fraction.",
          "type": "array",
          "items": {
            "$ref": "ColorInfo"
          }
        }
      },
      "id": "DominantColorsAnnotation"
    },
    "GoogleCloudVisionV1p1beta1BatchAnnotateImagesResponse": {
      "properties": {
        "responses": {
          "description": "Individual responses to image annotation requests within the batch.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1AnnotateImageResponse"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1BatchAnnotateImagesResponse",
      "description": "Response to a batch image annotation request.",
      "type": "object"
    },
    "TextAnnotation": {
      "id": "TextAnnotation",
      "description": "TextAnnotation contains a structured representation of OCR extracted text.\nThe hierarchy of an OCR extracted text structure is like this:\n    TextAnnotation -\u003e Page -\u003e Block -\u003e Paragraph -\u003e Word -\u003e Symbol\nEach structural component, starting from Page, may further have their own\nproperties. Properties describe detected languages, breaks etc.. Please refer\nto the TextAnnotation.TextProperty message definition below for more\ndetail.",
      "type": "object",
      "properties": {
        "pages": {
          "type": "array",
          "items": {
            "$ref": "Page"
          },
          "description": "List of pages detected by OCR."
        },
        "text": {
          "description": "UTF-8 text detected on the pages.",
          "type": "string"
        }
      }
    },
    "BoundingPoly": {
      "description": "A bounding polygon for the detected image annotation.",
      "type": "object",
      "properties": {
        "vertices": {
          "description": "The bounding polygon vertices.",
          "type": "array",
          "items": {
            "$ref": "Vertex"
          }
        },
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "type": "array",
          "items": {
            "$ref": "NormalizedVertex"
          }
        }
      },
      "id": "BoundingPoly"
    },
    "GoogleCloudVisionV1p2beta1GcsSource": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Google Cloud Storage URI for the input file. This must only be a\nGoogle Cloud Storage object. Wildcards are not currently supported."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1GcsSource",
      "description": "The Google Cloud Storage location where the input will be read from."
    },
    "GoogleCloudVisionV1p2beta1EntityAnnotation": {
      "properties": {
        "score": {
          "description": "Overall score of the result. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1LocationInfo"
          },
          "description": "The location information for the detected entity. Multiple\n`LocationInfo` elements can be present because one location may\nindicate the location of the scene in the image, and another location\nmay indicate the location of the place where the image was taken.\nLocation information is usually present for landmarks."
        },
        "mid": {
          "description": "Opaque entity ID. Some IDs may be available in\n[Google Knowledge Graph Search\nAPI](https://developers.google.com/knowledge-graph/).",
          "type": "string"
        },
        "confidence": {
          "description": "**Deprecated. Use `score` instead.**\nThe accuracy of the entity detection in an image.\nFor example, for an image in which the \"Eiffel Tower\" entity is detected,\nthis field represents the confidence that there is a tower in the query\nimage. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly",
          "description": "Image region to which this entity belongs. Not produced\nfor `LABEL_DETECTION` features."
        },
        "locale": {
          "description": "The language code for the locale in which the entity textual\n`description` is expressed.",
          "type": "string"
        },
        "description": {
          "description": "Entity textual description, expressed in its `locale` language.",
          "type": "string"
        },
        "topicality": {
          "type": "number",
          "description": "The relevancy of the ICA (Image Content Annotation) label to the\nimage. For example, the relevancy of \"tower\" is likely higher to an image\ncontaining the detected \"Eiffel Tower\" than to an image containing a\ndetected distant towering building, even though the confidence that\nthere is a tower in each image may be the same. Range [0, 1].",
          "format": "float"
        },
        "properties": {
          "description": "Some entities may have optional user-supplied `Property` (name/value)\nfields, such a score or string that qualifies the entity.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Property"
          }
        }
      },
      "id": "GoogleCloudVisionV1p2beta1EntityAnnotation",
      "description": "Set of detected entity features.",
      "type": "object"
    },
    "LocationInfo": {
      "type": "object",
      "properties": {
        "latLng": {
          "$ref": "LatLng",
          "description": "lat/long location coordinates."
        }
      },
      "id": "LocationInfo",
      "description": "Detected entity location information."
    }
  },
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "Vision",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-vision": {
          "description": "Apply machine learning models to understand and label images"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "rootUrl": "https://vision.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "vision",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Cloud Vision API",
  "ownerName": "Google"
}

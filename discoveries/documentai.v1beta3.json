{
  "rootUrl": "https://documentai.googleapis.com/",
  "documentationLink": "https://cloud.google.com/document-ai/docs/",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "processorTypes": {
              "methods": {
                "list": {
                  "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processorTypes",
                  "path": "v1beta3/{+parent}/processorTypes",
                  "description": "Lists the processor types that exist.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The location of processor type to list. The available processor types may depend on the allow-listing on projects. Format: `projects/{project}/locations/{location}`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Used to retrieve the next page of results, empty if at the end of the list.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of processor types to return. If unspecified, at most 100 processor types will be returned. The maximum value is 500; values above 500 will be coerced to 500.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1beta3ListProcessorTypesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "documentai.projects.locations.processorTypes.list"
                },
                "get": {
                  "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processorTypes/{processorTypesId}",
                  "path": "v1beta3/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "documentai.projects.locations.processorTypes.get",
                  "description": "Gets a processor type detail.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1beta3ProcessorType"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/processorTypes/[^/]+$",
                      "description": "Required. The processor type resource name.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET"
                }
              }
            },
            "processors": {
              "methods": {
                "process": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1beta3ProcessRequest"
                  },
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1beta3ProcessResponse"
                  },
                  "description": "Processes a single document.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "documentai.projects.locations.processors.process",
                  "path": "v1beta3/{+name}:process",
                  "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:process",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`"
                    }
                  }
                },
                "batchProcess": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1beta3BatchProcessRequest"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The resource name of Processor or ProcessorVersion. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$"
                    }
                  },
                  "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:batchProcess",
                  "id": "documentai.projects.locations.processors.batchProcess",
                  "path": "v1beta3/{+name}:batchProcess",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                },
                "enable": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "documentai.projects.locations.processors.enable",
                  "description": "Enables a processor",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "location": "path",
                      "description": "Required. The processor resource name to be enabled.",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta3/{+name}:enable",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1beta3EnableProcessorRequest"
                  },
                  "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:enable"
                },
                "get": {
                  "path": "v1beta3/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "description": "Required. The processor resource name.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "description": "Gets a processor detail.",
                  "id": "documentai.projects.locations.processors.get",
                  "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1beta3Processor"
                  },
                  "httpMethod": "GET"
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent (project and location) under which to create the processor. Format: `projects/{project}/locations/{location}`",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1beta3Processor"
                  },
                  "description": "Creates a processor from the type processor that the user chose. The processor will be at \"ENABLED\" state by default after its creation.",
                  "path": "v1beta3/{+parent}/processors",
                  "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1beta3Processor"
                  },
                  "id": "documentai.projects.locations.processors.create",
                  "httpMethod": "POST"
                },
                "list": {
                  "path": "v1beta3/{+parent}/processors",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1beta3ListProcessorsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent (project and location) which owns this collection of Processors. Format: `projects/{project}/locations/{location}`",
                      "location": "path"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "The maximum number of processors to return. If unspecified, at most 50 processors will be returned. The maximum value is 100; values above 100 will be coerced to 100.",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "We will return the processors sorted by creation time. The page token will point to the next processor.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors",
                  "id": "documentai.projects.locations.processors.list",
                  "httpMethod": "GET",
                  "description": "Lists all processors which belong to this project.",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "delete": {
                  "id": "documentai.projects.locations.processors.delete",
                  "path": "v1beta3/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Deletes the processor, unloads all deployed model artifacts if it was enabled and then deletes all artifacts associated with this processor.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "description": "Required. The processor resource name to be deleted."
                    }
                  },
                  "httpMethod": "DELETE",
                  "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}"
                },
                "disable": {
                  "parameters": {
                    "name": {
                      "description": "Required. The processor resource name to be disabled.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "description": "Disables a processor",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta3/{+name}:disable",
                  "id": "documentai.projects.locations.processors.disable",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:disable",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1beta3DisableProcessorRequest"
                  }
                },
                "setDefaultProcessorVersion": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "processor": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "description": "Required. The resource name of the Processor to change default version.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:setDefaultProcessorVersion",
                  "description": "Set the default (active) version of a Processor that will be used in ProcessDocument and BatchProcessDocuments.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1beta3/{+processor}:setDefaultProcessorVersion",
                  "id": "documentai.projects.locations.processors.setDefaultProcessorVersion",
                  "parameterOrder": [
                    "processor"
                  ]
                }
              },
              "resources": {
                "processorVersions": {
                  "methods": {
                    "process": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:process",
                      "description": "Processes a single document.",
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1beta3ProcessRequest"
                      },
                      "path": "v1beta3/{+name}:process",
                      "id": "documentai.projects.locations.processors.processorVersions.process",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDocumentaiV1beta3ProcessResponse"
                      }
                    },
                    "get": {
                      "description": "Gets a processor version detail.",
                      "response": {
                        "$ref": "GoogleCloudDocumentaiV1beta3ProcessorVersion"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "description": "Required. The processor resource name.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$"
                        }
                      },
                      "httpMethod": "GET",
                      "id": "documentai.projects.locations.processors.processorVersions.get",
                      "path": "v1beta3/{+name}",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "undeploy": {
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionRequest"
                      },
                      "description": "Undeploys the processor version.",
                      "httpMethod": "POST",
                      "path": "v1beta3/{+name}:undeploy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:undeploy",
                      "id": "documentai.projects.locations.processors.processorVersions.undeploy",
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The processor version resource name to be undeployed.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$"
                        }
                      }
                    },
                    "deploy": {
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1beta3DeployProcessorVersionRequest"
                      },
                      "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:deploy",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. The processor version resource name to be deployed.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$"
                        }
                      },
                      "id": "documentai.projects.locations.processors.processorVersions.deploy",
                      "path": "v1beta3/{+name}:deploy",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deploys the processor version."
                    },
                    "train": {
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "id": "documentai.projects.locations.processors.processorVersions.train",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions:train",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                          "description": "Required. The parent (project, location and processor) to create the new version for. Format: `projects/{project}/locations/{location}/processors/{processor}`."
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionRequest"
                      },
                      "description": "Trains a new processor version. Operation metadata is returned as cloud_documentai_core.TrainProcessorVersionMetadata.",
                      "path": "v1beta3/{+parent}/processorVersions:train"
                    },
                    "batchProcess": {
                      "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:batchProcess",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1beta3BatchProcessRequest"
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "path": "v1beta3/{+name}:batchProcess",
                      "id": "documentai.projects.locations.processors.processorVersions.batchProcess",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. The resource name of Processor or ProcessorVersion. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$"
                        }
                      },
                      "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format."
                    },
                    "delete": {
                      "id": "documentai.projects.locations.processors.processorVersions.delete",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "path": "v1beta3/{+name}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "required": true,
                          "description": "Required. The processor version resource name to be deleted."
                        }
                      },
                      "description": "Deletes the processor version, all artifacts under the processor version will be deleted.",
                      "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE"
                    },
                    "evaluateProcessorVersion": {
                      "parameters": {
                        "processorVersion": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "location": "path",
                          "description": "Required. The resource name of the ProcessorVersion to evaluate. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                          "type": "string",
                          "required": true
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionRequest"
                      },
                      "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:evaluateProcessorVersion",
                      "id": "documentai.projects.locations.processors.processorVersions.evaluateProcessorVersion",
                      "parameterOrder": [
                        "processorVersion"
                      ],
                      "description": "Evaluates a ProcessorVersion against annotated documents, producing an Evaluation.",
                      "path": "v1beta3/{+processorVersion}:evaluateProcessorVersion",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "path": "v1beta3/{+parent}/processorVersions",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDocumentaiV1beta3ListProcessorVersionsResponse"
                      },
                      "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "documentai.projects.locations.processors.processorVersions.list",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "We will return the processor versions sorted by creation time. The page token will point to the next processor version."
                        },
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The parent (project, location and processor) to list all versions. Format: `projects/{project}/locations/{location}/processors/{processor}`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "The maximum number of processor versions to return. If unspecified, at most 10 processor versions will be returned. The maximum value is 20; values above 20 will be coerced to 20.",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "httpMethod": "GET",
                      "description": "Lists all versions of a processor."
                    }
                  },
                  "resources": {
                    "evaluations": {
                      "methods": {
                        "get": {
                          "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}/evaluations/{evaluationsId}",
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDocumentaiV1beta3Evaluation"
                          },
                          "id": "documentai.projects.locations.processors.processorVersions.evaluations.get",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "path": "v1beta3/{+name}",
                          "parameters": {
                            "name": {
                              "location": "path",
                              "required": true,
                              "description": "Required. The resource name of the Evaluation to get. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}/evaluations/{evaluation}`",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+/evaluations/[^/]+$"
                            }
                          },
                          "description": "Retrieves a specific evaluation."
                        },
                        "list": {
                          "path": "v1beta3/{+parent}/evaluations",
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDocumentaiV1beta3ListEvaluationsResponse"
                          },
                          "httpMethod": "GET",
                          "parameters": {
                            "pageSize": {
                              "description": "The standard list page size. If unspecified, at most 5 evaluations will be returned. The maximum value is 100; values above 100 will be coerced to 100.",
                              "type": "integer",
                              "location": "query",
                              "format": "int32"
                            },
                            "parent": {
                              "description": "Required. The resource name of the ProcessorVersion to list evaluations for. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$"
                            },
                            "pageToken": {
                              "description": "A page token, received from a previous `ListEvaluations` call. Provide this to retrieve the subsequent page.",
                              "type": "string",
                              "location": "query"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Retrieves a set of evaluations for a given processor version.",
                          "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}/evaluations",
                          "id": "documentai.projects.locations.processors.processorVersions.evaluations.list"
                        }
                      }
                    }
                  }
                },
                "humanReviewConfig": {
                  "methods": {
                    "reviewDocument": {
                      "parameters": {
                        "humanReviewConfig": {
                          "description": "Required. The resource name of the HumanReviewConfig that the document will be reviewed with.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/humanReviewConfig$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameterOrder": [
                        "humanReviewConfig"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/humanReviewConfig:reviewDocument",
                      "description": "Send a document for Human Review. The input document should be processed by the specified processor.",
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1beta3ReviewDocumentRequest"
                      },
                      "path": "v1beta3/{+humanReviewConfig}:reviewDocument",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "documentai.projects.locations.processors.humanReviewConfig.reviewDocument"
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "id": "documentai.projects.locations.operations.get",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "path": "v1beta3/{+name}",
                  "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "cancel": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1beta3/{+name}:cancel",
                  "id": "documentai.projects.locations.operations.cancel",
                  "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  }
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The standard list page size.",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations$"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}/operations",
                  "path": "v1beta3/{+name}",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "id": "documentai.projects.locations.operations.list"
                }
              }
            }
          },
          "methods": {
            "list": {
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "type": "integer",
                  "format": "int32"
                },
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "pageToken": {
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "documentai.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1beta3/projects/{projectsId}/locations",
              "response": {
                "$ref": "GoogleCloudLocationListLocationsResponse"
              },
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "path": "v1beta3/{+name}/locations"
            },
            "get": {
              "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location.",
              "response": {
                "$ref": "GoogleCloudLocationLocation"
              },
              "httpMethod": "GET",
              "path": "v1beta3/{+name}",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Resource name for the location.",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "id": "documentai.projects.locations.get"
            },
            "fetchProcessorTypes": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudDocumentaiV1beta3FetchProcessorTypesResponse"
              },
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The project of processor type to list. The available processor types may depend on the allow-listing on projects. Format: `projects/{project}/locations/{location}`"
                }
              },
              "path": "v1beta3/{+parent}:fetchProcessorTypes",
              "id": "documentai.projects.locations.fetchProcessorTypes",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1beta3/projects/{projectsId}/locations/{locationsId}:fetchProcessorTypes",
              "httpMethod": "GET",
              "description": "Fetches processor types. Note that we do not use ListProcessorTypes here because it is not paginated."
            }
          }
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "name": "documentai",
  "ownerDomain": "google.com",
  "revision": "20230302",
  "parameters": {
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "alt": {
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "$.xgafv": {
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    }
  },
  "discoveryVersion": "v1",
  "baseUrl": "https://documentai.googleapis.com/",
  "basePath": "",
  "batchPath": "batch",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "mtlsRootUrl": "https://documentai.mtls.googleapis.com/",
  "schemas": {
    "GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScores": {
      "type": "object",
      "properties": {
        "detectedDefects": {
          "type": "array",
          "description": "A list of detected defects.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect"
          }
        },
        "qualityScore": {
          "format": "float",
          "description": "The overall quality score. Range `[0, 1]` where 1 is perfect quality.",
          "type": "number"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScores",
      "description": "Image Quality Scores for the page image"
    },
    "GoogleCloudDocumentaiV1beta3DocumentOutputConfigGcsOutputConfigShardingConfig": {
      "properties": {
        "pagesOverlap": {
          "type": "integer",
          "description": "The number of overlapping pages between consecutive shards.",
          "format": "int32"
        },
        "pagesPerShard": {
          "description": "The number of pages per shard.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "The sharding config for the output document.",
      "id": "GoogleCloudDocumentaiV1beta3DocumentOutputConfigGcsOutputConfigShardingConfig",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse",
      "type": "object",
      "properties": {},
      "description": "Response of the import document operation."
    },
    "GoogleCloudDocumentaiV1beta2GcsDestination": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2GcsDestination",
      "description": "The Google Cloud Storage location where the output file will be written to.",
      "properties": {
        "uri": {
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageLayout": {
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageLayout",
      "type": "object",
      "properties": {
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta3BoundingPoly",
          "description": "The bounding polygon for the Layout."
        },
        "orientation": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ],
          "description": "Detected orientation for the Layout.",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ]
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        }
      },
      "description": "Visual element describing a layout unit on a page."
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata": {
      "properties": {
        "destSplitType": {
          "enumDescriptions": [
            "Default value if the enum is not set. go/protodosdonts#do-include-an-unspecified-value-in-an-enum",
            "Identifies the train documents.",
            "Identifies the test documents.",
            "Identifies the unassigned documents."
          ],
          "type": "string",
          "enum": [
            "DATASET_SPLIT_TYPE_UNSPECIFIED",
            "DATASET_SPLIT_TRAIN",
            "DATASET_SPLIT_TEST",
            "DATASET_SPLIT_UNASSIGNED"
          ],
          "description": "The destination dataset split type."
        },
        "individualBatchMoveStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus"
          },
          "type": "array",
          "description": "The list of response details of each document."
        },
        "destDatasetType": {
          "type": "string",
          "enum": [
            "DATASET_SPLIT_TYPE_UNSPECIFIED",
            "DATASET_SPLIT_TRAIN",
            "DATASET_SPLIT_TEST",
            "DATASET_SPLIT_UNASSIGNED"
          ],
          "enumDescriptions": [
            "Default value if the enum is not set. go/protodosdonts#do-include-an-unspecified-value-in-an-enum",
            "Identifies the train documents.",
            "Identifies the test documents.",
            "Identifies the unassigned documents."
          ],
          "description": "The destination dataset split type."
        },
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus": {
      "id": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus",
      "properties": {
        "outputGcsDestination": {
          "type": "string",
          "description": "The output_gcs_destination (in the request as `output_gcs_destination`) of the processed document if it was successful, otherwise empty."
        },
        "humanReviewStatus": {
          "description": "The status of human review on the processed document.",
          "$ref": "GoogleCloudDocumentaiV1HumanReviewStatus"
        },
        "inputGcsSource": {
          "type": "string",
          "description": "The source of the document, same as the [input_gcs_source] field in the request when the batch process started. The batch process is started by take snapshot of that document, since a user can move or change that document during the process."
        },
        "status": {
          "description": "The status processing the document.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "type": "object",
      "description": "The status of a each individual document in the batch process."
    },
    "GoogleCloudDocumentaiV1beta3BoundingPoly": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3BoundingPoly",
      "properties": {
        "vertices": {
          "description": "The bounding polygon vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3Vertex"
          }
        },
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3NormalizedVertex"
          },
          "type": "array"
        }
      },
      "description": "A bounding polygon for the detected image annotation."
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "details": {
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageParagraph": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Paragraph."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this annotation."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        }
      },
      "description": "A collection of lines that a human would perceive as a paragraph."
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "description": "The long running operation metadata for DeleteLabelerPool.",
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage": {
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage",
      "properties": {
        "confidence": {
          "description": "Confidence of detected language. Range `[0, 1]`.",
          "format": "float",
          "type": "number"
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Detected language for a structural component."
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionResponse",
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The resource name of the processor version produced by training."
        }
      },
      "description": "The response for the TrainProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse": {
      "type": "object",
      "properties": {
        "inputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta1InputConfig",
          "description": "Information about the input file. This is the same as the corresponding input config in the request."
        },
        "outputConfig": {
          "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects.",
          "$ref": "GoogleCloudDocumentaiV1beta1OutputConfig"
        }
      },
      "description": "Response to a single document processing request.",
      "id": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse"
    },
    "GoogleCloudDocumentaiV1CommonOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1CommonOperationMetadata",
      "description": "The common metadata for long running operations.",
      "properties": {
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time of the operation."
        },
        "createTime": {
          "type": "string",
          "description": "The creation time of the operation.",
          "format": "google-datetime"
        },
        "resource": {
          "type": "string",
          "description": "A related resource to this operation."
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "description": "The state of the operation."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata": {
      "properties": {
        "errorDocumentCount": {
          "type": "integer",
          "description": "Total number of documents that failed to be deleted in storage.",
          "format": "int32"
        },
        "individualBatchDeleteStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus"
          },
          "type": "array",
          "description": "The list of response details of each document."
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        },
        "totalDocumentCount": {
          "description": "Total number of documents deleting from dataset.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata"
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata",
      "description": "The long running operation metadata for delete processor method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DocumentSchema": {
      "description": "The schema defines the output of the processed document by a processor.",
      "properties": {
        "entityTypes": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType"
          },
          "type": "array",
          "description": "Entity types of the schema."
        },
        "metadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentSchemaMetadata",
          "description": "Metadata of the schema."
        },
        "description": {
          "type": "string",
          "description": "Description of the schema."
        },
        "displayName": {
          "type": "string",
          "description": "Display name to show to users."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DocumentSchema"
    },
    "GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse",
      "description": "Response message for the deploy processor version method."
    },
    "GoogleCloudDocumentaiV1beta2OutputConfig": {
      "description": "The desired output location and metadata.",
      "type": "object",
      "properties": {
        "pagesPerShard": {
          "type": "integer",
          "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json",
          "format": "int32"
        },
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output to.",
          "$ref": "GoogleCloudDocumentaiV1beta2GcsDestination"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2OutputConfig"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata",
      "type": "object",
      "description": "Metadata of the import document operation.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        },
        "importConfigValidationResults": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult"
          },
          "description": "Validation statuses of the batch documents import config.",
          "type": "array"
        },
        "individualImportStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus"
          },
          "description": "The list of response details of each document.",
          "type": "array"
        },
        "totalDocumentCount": {
          "format": "int32",
          "description": "Total number of the documents that are qualified for importing.",
          "type": "integer"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsResponse": {
      "type": "object",
      "description": "The response proto of AutoLabelDocuments method.",
      "id": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta3DisableProcessorResponse": {
      "id": "GoogleCloudDocumentaiV1beta3DisableProcessorResponse",
      "properties": {},
      "description": "Response message for the disable processor method. Intentionally empty proto for adding fields in future.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat": {
      "description": "The statistic representing a dataset split type for this export.",
      "properties": {
        "splitType": {
          "enum": [
            "DATASET_SPLIT_TYPE_UNSPECIFIED",
            "DATASET_SPLIT_TRAIN",
            "DATASET_SPLIT_TEST",
            "DATASET_SPLIT_UNASSIGNED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value if the enum is not set. go/protodosdonts#do-include-an-unspecified-value-in-an-enum",
            "Identifies the train documents.",
            "Identifies the test documents.",
            "Identifies the unassigned documents."
          ],
          "description": "The dataset split type."
        },
        "totalDocumentCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of documents with the given dataset split type to be exported."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse": {
      "properties": {},
      "description": "Response message for set default processor version method.",
      "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageFormField": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageFormField",
      "properties": {
        "fieldValue": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageLayout",
          "description": "Layout for the FormField value."
        },
        "correctedKeyText": {
          "type": "string",
          "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction."
        },
        "valueDetectedLanguages": {
          "description": "A list of detected languages for value together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage"
          }
        },
        "valueType": {
          "type": "string",
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`"
        },
        "fieldName": {
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageLayout"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentProvenance",
          "description": "The history of this annotation."
        },
        "correctedValueText": {
          "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction.",
          "type": "string"
        },
        "nameDetectedLanguages": {
          "description": "A list of detected languages for name together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage"
          },
          "type": "array"
        }
      },
      "description": "A form field detected on the page."
    },
    "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse": {
      "properties": {
        "processorVersion": {
          "description": "The destination processor version name.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse",
      "description": "The response message for the ImportProcessorVersion method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "description": "The long running operation metadata for UpdateLabelerPool.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDimension": {
      "type": "object",
      "properties": {
        "width": {
          "description": "Page width.",
          "format": "float",
          "type": "number"
        },
        "unit": {
          "description": "Dimension unit.",
          "type": "string"
        },
        "height": {
          "description": "Page height.",
          "type": "number",
          "format": "float"
        }
      },
      "description": "Dimension for the page.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDimension"
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus",
      "description": "Resync status for each document per inconsistency type.",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of resyncing the document with regards to the detected inconsistency. Empty if `validate_only` is true in the request."
        },
        "documentId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId",
          "description": "The document identifier."
        },
        "documentInconsistencyType": {
          "type": "string",
          "description": "The type of document inconsistency.",
          "enum": [
            "DOCUMENT_INCONSISTENCY_TYPE_UNSPECIFIED",
            "DOCUMENT_INCONSISTENCY_TYPE_INVALID_DOCPROTO",
            "DOCUMENT_INCONSISTENCY_TYPE_MISMATCHED_METADATA",
            "DOCUMENT_INCONSISTENCY_TYPE_NO_PAGE_IMAGE"
          ],
          "enumDescriptions": [
            "Default value.",
            "The document proto is invalid.",
            "Indexed docproto metadata is mismatched.",
            "The page image or thumbnails are missing."
          ]
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse": {
      "type": "object",
      "properties": {},
      "description": "Response message for set default processor version method.",
      "id": "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata",
      "description": "The long running operation metadata for the undeploy processor version method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus": {
      "description": "Resync status against inconsistency types on the dataset level.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of resyncing the dataset with regards to the detected inconsistency. Empty if `validate_only` is true in the request."
        },
        "datasetInconsistencyType": {
          "type": "string",
          "enum": [
            "DATASET_INCONSISTENCY_TYPE_UNSPECIFIED",
            "DATASET_INCONSISTENCY_TYPE_NO_STORAGE_MARKER"
          ],
          "enumDescriptions": [
            "Default value.",
            "The marker file under the dataset folder is not found."
          ],
          "description": "The type of the inconsistency of the dataset."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        },
        "individualAutoLabelStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus"
          },
          "type": "array",
          "description": "The list of individual auto-labeling statuses of the dataset documents."
        },
        "totalDocumentCount": {
          "format": "int32",
          "description": "Total number of the auto-labeling documents.",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadata",
      "description": "Metadata of the auto-labeling documents operation."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTable": {
      "properties": {
        "headerRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          },
          "description": "Header rows of the table.",
          "type": "array"
        },
        "bodyRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          },
          "type": "array",
          "description": "Body rows of the table."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this table."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "layout": {
          "description": "Layout for Table.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTable",
      "type": "object",
      "description": "A table representation similar to HTML table structure."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageAnchor": {
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor",
      "properties": {
        "pageRefs": {
          "description": "One or more references to visual page elements",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef"
          }
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyle": {
      "properties": {
        "backgroundColor": {
          "$ref": "GoogleTypeColor",
          "description": "Text background color."
        },
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
        },
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "Text color."
        },
        "textDecoration": {
          "description": "Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp",
          "type": "string"
        },
        "fontSize": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize",
          "description": "Font size."
        },
        "fontFamily": {
          "description": "Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp",
          "type": "string"
        },
        "fontWeight": {
          "type": "string",
          "description": "Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp"
        },
        "textStyle": {
          "type": "string",
          "description": "Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyle",
      "type": "object",
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible."
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageTableTableRow": {
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageTableTableRow",
      "properties": {
        "cells": {
          "type": "array",
          "description": "Cells that make up this row.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell"
          }
        }
      },
      "description": "A row of table cells.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse": {
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The resource name of the processor version produced by training."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse",
      "description": "The response for the TrainProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1DeleteProcessorMetadata": {
      "description": "The long running operation metadata for delete processor method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DeleteProcessorMetadata"
    },
    "GoogleCloudDocumentaiV1beta3Barcode": {
      "id": "GoogleCloudDocumentaiV1beta3Barcode",
      "description": "Encodes the detailed information of a barcode.",
      "properties": {
        "valueFormat": {
          "description": "Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license.",
          "type": "string"
        },
        "format": {
          "description": "Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type.",
          "type": "string"
        },
        "rawValue": {
          "description": "Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize",
      "description": "Font size with unit.",
      "type": "object",
      "properties": {
        "unit": {
          "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.).",
          "type": "string"
        },
        "size": {
          "format": "float",
          "type": "number",
          "description": "Font size for the text."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the property. Follows the same guidelines as the EntityType name."
        },
        "occurrenceType": {
          "enum": [
            "OCCURRENCE_TYPE_UNSPECIFIED",
            "OPTIONAL_ONCE",
            "OPTIONAL_MULTIPLE",
            "REQUIRED_ONCE",
            "REQUIRED_MULTIPLE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified occurrence type.",
            "There will be zero or one instance of this entity type. The same entity instance may be mentioned multiple times.",
            "The entity type will appear zero or multiple times.",
            "The entity type will only appear exactly once. The same entity instance may be mentioned multiple times.",
            "The entity type will appear once or more times."
          ],
          "description": "Occurrence type limits the number of instances an entity type appears in the document."
        },
        "valueType": {
          "type": "string",
          "description": "A reference to the value type of the property. This type is subject to the same conventions as the `Entity.base_types` field."
        }
      },
      "type": "object",
      "description": "Defines properties that can be part of the entity type.",
      "id": "GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty"
    },
    "GoogleCloudDocumentaiV1beta2Barcode": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2Barcode",
      "description": "Encodes the detailed information of a barcode.",
      "properties": {
        "rawValue": {
          "description": "Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`.",
          "type": "string"
        },
        "format": {
          "description": "Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type.",
          "type": "string"
        },
        "valueFormat": {
          "description": "Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextChange": {
      "description": "This message is used for text changes aka. OCR corrections.",
      "properties": {
        "changedText": {
          "type": "string",
          "description": "The text that replaces the text identified in the `text_anchor`."
        },
        "provenance": {
          "type": "array",
          "description": "The history of this annotation.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
          }
        },
        "textAnchor": {
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextChange",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus": {
      "properties": {
        "documentId": {
          "description": "The path to source docproto of the document.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        },
        "outputGcsDestination": {
          "type": "string",
          "description": "The output_gcs_destination of the exported document if it was successful, otherwise empty."
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of the exporting of the document."
        }
      },
      "description": "The status of each individual document in the export process.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus"
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityRelation": {
      "description": "Relationship between Entities.",
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "Object entity id."
        },
        "subjectId": {
          "description": "Subject entity id.",
          "type": "string"
        },
        "relation": {
          "description": "Relationship description.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation"
    },
    "GoogleCloudDocumentaiV1beta3HumanReviewStatus": {
      "properties": {
        "humanReviewOperation": {
          "type": "string",
          "description": "The name of the operation triggered by the processed document. This field is populated only when the [state] is [HUMAN_REVIEW_IN_PROGRESS]. It has the same response type and metadata as the long running operation returned by [ReviewDocument] method."
        },
        "stateMessage": {
          "description": "A message providing more details about the human review state.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Human review state is unspecified. Most likely due to an internal error.",
            "Human review is skipped for the document. This can happen because human review is not enabled on the processor or the processing request has been set to skip this document.",
            "Human review validation is triggered and passed, so no review is needed.",
            "Human review validation is triggered and the document is under review.",
            "Some error happened during triggering human review, see the [state_message] for details."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "SKIPPED",
            "VALIDATION_PASSED",
            "IN_PROGRESS",
            "ERROR"
          ],
          "description": "The state of human review on the processing request."
        }
      },
      "description": "The status of human review on a processed document.",
      "id": "GoogleCloudDocumentaiV1beta3HumanReviewStatus",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DocumentPage": {
      "properties": {
        "imageQualityScores": {
          "description": "Image Quality Scores.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScores"
        },
        "image": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageImage",
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned."
        },
        "provenance": {
          "description": "The history of this page.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentProvenance"
        },
        "paragraphs": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageParagraph"
          },
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph."
        },
        "blocks": {
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageBlock"
          },
          "type": "array"
        },
        "transforms": {
          "type": "array",
          "description": "Transformation matrices that were applied to the original document image to produce Page.image.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageMatrix"
          }
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing."
        },
        "tokens": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageToken"
          },
          "description": "A list of visually detected tokens on the page."
        },
        "lines": {
          "type": "array",
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageLine"
          }
        },
        "symbols": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageSymbol"
          },
          "description": "A list of visually detected symbols on the page."
        },
        "dimension": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageDimension",
          "description": "Physical dimension of the page."
        },
        "visualElements": {
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageVisualElement"
          }
        },
        "formFields": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageFormField"
          },
          "type": "array",
          "description": "A list of visually detected form fields on the page."
        },
        "tables": {
          "type": "array",
          "description": "A list of visually detected tables on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageTable"
          }
        },
        "layout": {
          "description": "Layout for the page.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageLayout"
        },
        "detectedBarcodes": {
          "description": "A list of detected barcodes.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageDetectedBarcode"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DocumentPage",
      "type": "object",
      "description": "A page in a Document."
    },
    "GoogleCloudDocumentaiV1beta3GcsDocument": {
      "id": "GoogleCloudDocumentaiV1beta3GcsDocument",
      "description": "Specifies a document stored on Cloud Storage.",
      "properties": {
        "gcsUri": {
          "type": "string",
          "description": "The Cloud Storage object uri."
        },
        "mimeType": {
          "description": "An IANA MIME type (RFC6838) of the content.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell": {
      "description": "A cell representation inside the table.",
      "properties": {
        "colSpan": {
          "description": "How many columns this cell spans.",
          "format": "int32",
          "type": "integer"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "layout": {
          "description": "Layout for TableCell.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageLayout"
        },
        "rowSpan": {
          "description": "How many rows this cell spans.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell"
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus": {
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus",
      "properties": {
        "humanReviewStatus": {
          "$ref": "GoogleCloudDocumentaiV1beta3HumanReviewStatus",
          "description": "The status of human review on the processed document."
        },
        "inputGcsSource": {
          "type": "string",
          "description": "The source of the document, same as the [input_gcs_source] field in the request when the batch process started. The batch process is started by take snapshot of that document, since a user can move or change that document during the process."
        },
        "humanReviewOperation": {
          "type": "string",
          "description": "The name of the operation triggered by the processed document. If the human review process is not triggered, this field will be empty. It has the same response type and metadata as the long running operation returned by ReviewDocument method."
        },
        "status": {
          "description": "The status processing the document.",
          "$ref": "GoogleRpcStatus"
        },
        "outputGcsDestination": {
          "description": "The output_gcs_destination (in the request as `output_gcs_destination`) of the processed document if it was successful, otherwise empty.",
          "type": "string"
        }
      },
      "description": "The status of a each individual document in the batch process.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef": {
      "description": "Represents a weak reference to a page element within a document.",
      "properties": {
        "page": {
          "type": "string",
          "description": "Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json.",
          "format": "int64"
        },
        "boundingPoly": {
          "description": "Optional. Identifies the bounding polygon of a layout element on the page.",
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly"
        },
        "confidence": {
          "format": "float",
          "description": "Optional. Confidence of detected page element, if applicable. Range `[0, 1]`.",
          "type": "number"
        },
        "layoutType": {
          "type": "string",
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "description": "Optional. The type of the layout element that is being referenced if any.",
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ]
        },
        "layoutId": {
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef"
    },
    "GoogleCloudDocumentaiV1beta1Vertex": {
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "properties": {
        "x": {
          "format": "int32",
          "description": "X coordinate.",
          "type": "integer"
        },
        "y": {
          "type": "integer",
          "format": "int32",
          "description": "Y coordinate (starts from the top of the image)."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1Vertex",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageBlock": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageBlock",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Block."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        }
      },
      "type": "object",
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation."
    },
    "GoogleCloudDocumentaiV1beta3RawDocument": {
      "description": "Payload message of raw document content (bytes).",
      "properties": {
        "mimeType": {
          "description": "An IANA MIME type (RFC6838) indicating the nature and format of the content.",
          "type": "string"
        },
        "content": {
          "type": "string",
          "description": "Inline document content.",
          "format": "byte"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3RawDocument"
    },
    "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionMetadata",
      "type": "object",
      "description": "Metadata of the EvaluateProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig": {
      "description": "The message for input config in batch process.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "description": "The Cloud Storage location as the source of the document.",
          "type": "string"
        },
        "mimeType": {
          "description": "Mimetype of the input. If the input is a raw document, the supported mimetypes are application/pdf, image/tiff, and image/gif. If the input is a [Document] proto, the type should be application/json.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig"
    },
    "GoogleCloudDocumentaiV1beta3DocumentStyleFontSize": {
      "type": "object",
      "description": "Font size with unit.",
      "properties": {
        "size": {
          "description": "Font size for the text.",
          "type": "number",
          "format": "float"
        },
        "unit": {
          "type": "string",
          "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.)."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DocumentStyleFontSize"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata": {
      "description": "Metadata of the batch export documents operation.",
      "type": "object",
      "properties": {
        "individualExportStatuses": {
          "description": "The list of response details of each document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus"
          }
        },
        "splitExportStats": {
          "description": "The list of statistics for each dataset split type.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat"
          }
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata"
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyle": {
      "properties": {
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        },
        "backgroundColor": {
          "description": "Text background color.",
          "$ref": "GoogleTypeColor"
        },
        "fontSize": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize",
          "description": "Font size."
        },
        "textDecoration": {
          "type": "string",
          "description": "Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp"
        },
        "textStyle": {
          "description": "Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp",
          "type": "string"
        },
        "fontFamily": {
          "description": "Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp",
          "type": "string"
        },
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "Text color."
        },
        "fontWeight": {
          "description": "Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp",
          "type": "string"
        }
      },
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyle"
    },
    "GoogleCloudDocumentaiV1beta3DocumentOutputConfigGcsOutputConfig": {
      "properties": {
        "shardingConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentOutputConfigGcsOutputConfigShardingConfig",
          "description": "Specifies the sharding config for the output document."
        },
        "fieldMask": {
          "format": "google-fieldmask",
          "description": "Specifies which fields to include in the output documents. Only supports top level document and pages field so it must be in the form of `{document_field_name}` or `pages.{page_field_name}`.",
          "type": "string"
        },
        "gcsUri": {
          "description": "The Cloud Storage uri (a directory) of the output.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DocumentOutputConfigGcsOutputConfig",
      "description": "The configuration used when outputting documents."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLayout": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
      "description": "Visual element describing a layout unit on a page.",
      "properties": {
        "orientation": {
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ],
          "type": "string",
          "description": "Detected orientation for the Layout.",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ]
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "boundingPoly": {
          "description": "The bounding polygon for the Layout.",
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly"
        },
        "confidence": {
          "format": "float",
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType": {
      "id": "GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType",
      "properties": {
        "enumValues": {
          "description": "If specified, lists all the possible values for this entity. This should not be more than a handful of values. If the number of values is \u003e10 or could change frequently use the `EntityType.value_ontology` field and specify a list of all possible values in a value ontology file.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeEnumValues"
        },
        "displayName": {
          "description": "User defined name for the type.",
          "type": "string"
        },
        "properties": {
          "type": "array",
          "description": "Description the nested structure, or composition of an entity.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty"
          }
        },
        "name": {
          "description": "Name of the type. It must be unique within the schema file and cannot be a 'Common Type'. Besides that we use the following naming conventions: - *use `snake_casing`* - name matching is case-sensitive - Maximum 64 characters. - Must start with a letter. - Allowed characters: ASCII letters `[a-z0-9_-]`. (For backward compatibility internal infrastructure and tooling can handle any ascii character) - The `/` is sometimes used to denote a property of a type. For example `line_item/amount`. This convention is deprecated, but will still be honored for backward compatibility.",
          "type": "string"
        },
        "baseTypes": {
          "description": "The entity type that this type is derived from. For now, one and only one should be set.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "EntityType is the wrapper of a label of the corresponding model with detailed attributes and limitations for entity-based processors. Multiple types can also compose a dependency tree to represent nested types.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode": {
      "properties": {
        "barcode": {
          "$ref": "GoogleCloudDocumentaiV1beta1Barcode",
          "description": "Detailed barcode information of the DetectedBarcode."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for DetectedBarcode."
        }
      },
      "description": "A detected barcode.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentRevision": {
      "properties": {
        "agent": {
          "description": "If the change was made by a person specify the name or id of that person.",
          "type": "string"
        },
        "createTime": {
          "description": "The time that the revision was created, internally generated by doc proto storage at the time of create.",
          "format": "google-datetime",
          "type": "string"
        },
        "processor": {
          "description": "If the annotation was made by processor identify the processor by its resource name.",
          "type": "string"
        },
        "parentIds": {
          "items": {
            "type": "string"
          },
          "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.",
          "type": "array"
        },
        "id": {
          "type": "string",
          "description": "Id of the revision, internally generated by doc proto storage. Unique within the context of the document."
        },
        "parent": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.",
          "type": "array"
        },
        "humanReview": {
          "description": "Human Review information of this revision.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview"
        }
      },
      "description": "Contains past or forward revisions of this document.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentRevision",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "description": "Metadata of the EvaluateProcessorVersion method."
    },
    "GoogleTypeTimeZone": {
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "id": "GoogleTypeTimeZone",
      "properties": {
        "version": {
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\"."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionResponse",
      "type": "object",
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The resource name of the processor version produced by training."
        }
      },
      "description": "The response for the TrainProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta3DocumentOutputConfig": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DocumentOutputConfig",
      "description": "Config that controls the output of documents. All documents will be written as a JSON file.",
      "properties": {
        "gcsOutputConfig": {
          "description": "Output config to write the results to Cloud Storage.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentOutputConfigGcsOutputConfig"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageAnchor": {
      "properties": {
        "pageRefs": {
          "description": "One or more references to visual page elements",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageAnchorPageRef"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageAnchor",
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types."
    },
    "GoogleCloudDocumentaiUiv1beta3RevisionRef": {
      "id": "GoogleCloudDocumentaiUiv1beta3RevisionRef",
      "type": "object",
      "description": "The revision reference specifies which revision on the document to read.",
      "properties": {
        "latestProcessorVersion": {
          "description": "Reads the revision generated by the processor version. The format takes the full resource name of processor version. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
          "type": "string"
        },
        "revisionId": {
          "description": "Reads the revision given by the id.",
          "type": "string"
        },
        "revisionCase": {
          "enum": [
            "REVISION_CASE_UNSPECIFIED",
            "LATEST_HUMAN_REVIEW",
            "LATEST_TIMESTAMP",
            "BASE_OCR_REVISION"
          ],
          "description": "Reads the revision by the predefined case.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified case, fallback to read the LATEST_HUMAN_REVIEW.",
            "The latest revision made by a human.",
            "The latest revision based on timestamp.",
            "The first (OCR) revision."
          ]
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2Document": {
      "id": "GoogleCloudDocumentaiV1beta2Document",
      "properties": {
        "content": {
          "format": "byte",
          "type": "string",
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64."
        },
        "entityRelations": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation"
          },
          "description": "Placeholder. Relationship among Document.entities.",
          "type": "array"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          },
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Any error that occurred while processing this document."
        },
        "textStyles": {
          "type": "array",
          "description": "Styles for the Document.text.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyle"
          }
        },
        "text": {
          "type": "string",
          "description": "Optional. UTF-8 encoded text in reading order from the document."
        },
        "shardInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentShardInfo",
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified."
        },
        "textChanges": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextChange"
          },
          "description": "Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other."
        },
        "mimeType": {
          "type": "string",
          "description": "An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml."
        },
        "revisions": {
          "type": "array",
          "description": "Placeholder. Revision history of this document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevision"
          }
        },
        "uri": {
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.",
          "type": "string"
        },
        "labels": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentLabel"
          },
          "type": "array",
          "description": "Labels for this document."
        },
        "pages": {
          "description": "Visual page layout for the Document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPage"
          },
          "type": "array"
        }
      },
      "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DocumentStyle": {
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "id": "GoogleCloudDocumentaiV1beta3DocumentStyle",
      "properties": {
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentTextAnchor"
        },
        "fontSize": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentStyleFontSize",
          "description": "Font size."
        },
        "fontFamily": {
          "type": "string",
          "description": "Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp"
        },
        "textStyle": {
          "description": "Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp",
          "type": "string"
        },
        "fontWeight": {
          "type": "string",
          "description": "Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp"
        },
        "backgroundColor": {
          "$ref": "GoogleTypeColor",
          "description": "Text background color."
        },
        "textDecoration": {
          "type": "string",
          "description": "Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp"
        },
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "Text color."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DocumentEntity": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DocumentEntity",
      "properties": {
        "pageAnchor": {
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageAnchor"
        },
        "id": {
          "type": "string",
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document."
        },
        "mentionText": {
          "type": "string",
          "description": "Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`."
        },
        "mentionId": {
          "type": "string",
          "description": "Optional. Deprecated. Use `id` field instead."
        },
        "textAnchor": {
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentTextAnchor"
        },
        "type": {
          "type": "string",
          "description": "Required. Entity type from a schema e.g. `Address`."
        },
        "properties": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentEntity"
          },
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.",
          "type": "array"
        },
        "normalizedValue": {
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentEntityNormalizedValue"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentProvenance",
          "description": "Optional. The history of this annotation."
        },
        "redacted": {
          "description": "Optional. Whether the entity will be redacted for de-identification purposes.",
          "type": "boolean"
        },
        "confidence": {
          "type": "number",
          "description": "Optional. Confidence of detected Schema entity. Range `[0, 1]`.",
          "format": "float"
        }
      },
      "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location."
    },
    "GoogleCloudDocumentaiV1beta3Processor": {
      "properties": {
        "createTime": {
          "description": "The time the processor was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the processor."
        },
        "state": {
          "enumDescriptions": [
            "The processor is in an unspecified state.",
            "The processor is enabled, i.e., has an enabled version which can currently serve processing requests and all the feature dependencies have been successfully initialized.",
            "The processor is disabled.",
            "The processor is being enabled, will become `ENABLED` if successful.",
            "The processor is being disabled, will become `DISABLED` if successful.",
            "The processor is being created, will become either `ENABLED` (for successful creation) or `FAILED` (for failed ones). Once a processor is in this state, it can then be used for document processing, but the feature dependencies of the processor might not be fully created yet.",
            "The processor failed during creation or initialization of feature dependencies. The user should delete the processor and recreate one as all the functionalities of the processor are disabled.",
            "The processor is being deleted, will be removed if successful."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ENABLED",
            "DISABLED",
            "ENABLING",
            "DISABLING",
            "CREATING",
            "FAILED",
            "DELETING"
          ],
          "description": "Output only. The state of the processor.",
          "type": "string",
          "readOnly": true
        },
        "processEndpoint": {
          "description": "Output only. Immutable. The http endpoint that can be called to invoke processing.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The processor type, e.g., `OCR_PROCESSOR`, `INVOICE_PROCESSOR`, etc. To get a list of processors types, see FetchProcessorTypes.",
          "type": "string"
        },
        "kmsKeyName": {
          "description": "The KMS key used for encryption/decryption in CMEK scenarios. See https://cloud.google.com/security-key-management.",
          "type": "string"
        },
        "defaultProcessorVersion": {
          "description": "The default processor version.",
          "type": "string"
        },
        "name": {
          "description": "Output only. Immutable. The resource name of the processor. Format: `projects/{project}/locations/{location}/processors/{processor}`",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3Processor",
      "description": "The first-class citizen for Document AI. Each processor defines how to extract structural information from a document."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores",
      "type": "object",
      "properties": {
        "qualityScore": {
          "type": "number",
          "description": "The overall quality score. Range `[0, 1]` where 1 is perfect quality.",
          "format": "float"
        },
        "detectedDefects": {
          "type": "array",
          "description": "A list of detected defects.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect"
          }
        }
      },
      "description": "Image Quality Scores for the page image"
    },
    "GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeEnumValues": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The individual values that this enum values type can include."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeEnumValues",
      "description": "Defines the a list of enum values."
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult": {
      "description": "The validation status of each import config. Status is set to errors if there is no documents to import in the import_config, or OK if the operation will try to proceed at least one document.",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The validation status of import config."
        },
        "inputGcsSource": {
          "description": "The source Cloud Storage URI specified in the import config.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult"
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessRequest": {
      "type": "object",
      "description": "Request message for batch process document method.",
      "properties": {
        "processOptions": {
          "description": "Inference-time options for the process API",
          "$ref": "GoogleCloudDocumentaiV1beta3ProcessOptions"
        },
        "documentOutputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentOutputConfig",
          "description": "The overall output config for batch process."
        },
        "inputDocuments": {
          "description": "The input documents for batch process.",
          "$ref": "GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig"
        },
        "skipHumanReview": {
          "type": "boolean",
          "description": "Whether Human Review feature should be skipped for this request. Default to false."
        },
        "inputConfigs": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig"
          },
          "description": "The input config for each single document in the batch process."
        },
        "outputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig",
          "description": "The overall output config for batch process."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessRequest"
    },
    "GoogleCloudDocumentaiV1beta3DeployProcessorVersionRequest": {
      "id": "GoogleCloudDocumentaiV1beta3DeployProcessorVersionRequest",
      "description": "Request message for the deploy processor version method.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent": {
      "properties": {
        "id": {
          "description": "The id of the parent provenance.",
          "format": "int32",
          "type": "integer"
        },
        "revision": {
          "type": "integer",
          "description": "The index of the index into current revision's parent_ids list.",
          "format": "int32"
        },
        "index": {
          "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent",
      "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations."
    },
    "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata",
      "description": "The long running operation metadata for disable processor method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset.",
      "properties": {
        "datasetErrors": {
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "documentErrorCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of document errors."
        },
        "datasetErrorCount": {
          "description": "The total number of dataset errors.",
          "format": "int32",
          "type": "integer"
        },
        "documentErrors": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3ProcessorTypeLocationInfo": {
      "type": "object",
      "properties": {
        "locationId": {
          "description": "The location id, currently must be one of [us, eu].",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3ProcessorTypeLocationInfo",
      "description": "The location information about where the processor is available."
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect": {
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect",
      "properties": {
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of detected defect. Range `[0, 1]` where 1 indicates strong confidence of that the defect exists."
        },
        "type": {
          "type": "string",
          "description": "Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`"
        }
      },
      "type": "object",
      "description": "Image Quality Defects"
    },
    "GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics": {
      "id": "GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics",
      "description": "Metrics across multiple confidence levels.",
      "type": "object",
      "properties": {
        "confidenceLevelMetricsExact": {
          "description": "Metrics across confidence levels with only exact matching.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics"
          }
        },
        "auprc": {
          "description": "The calculated area under the precision recall curve (AUPRC), computed by integrating over all confidence thresholds.",
          "type": "number",
          "format": "float"
        },
        "auprcExact": {
          "type": "number",
          "description": "The AUPRC for metrics with fuzzy matching disabled, i.e., exact matching only.",
          "format": "float"
        },
        "estimatedCalibrationError": {
          "description": "The Estimated Calibration Error (ECE) of the confidence of the predicted entities.",
          "format": "float",
          "type": "number"
        },
        "confidenceLevelMetrics": {
          "description": "Metrics across confidence levels with fuzzy matching enabled.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics"
          }
        },
        "estimatedCalibrationErrorExact": {
          "type": "number",
          "format": "float",
          "description": "The ECE for the predicted entities with fuzzy matching disabled, i.e., exact matching only."
        },
        "metricsType": {
          "enum": [
            "METRICS_TYPE_UNSPECIFIED",
            "AGGREGATE"
          ],
          "enumDescriptions": [
            "The metrics type is unspecified. By default, metrics without a particular specification are for leaf entity types (i.e., top-level entity types without child types, or child types which are not parent types themselves).",
            "Indicates whether metrics for this particular label type represent an aggregate of metrics for other types instead of being based on actual TP/FP/FN values for the label type. Metrics for parent (i.e., non-leaf) entity types are an aggregate of metrics for their children."
          ],
          "type": "string",
          "description": "The metrics type for the label."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3ListProcessorTypesResponse": {
      "description": "Response message for list processor types.",
      "type": "object",
      "properties": {
        "processorTypes": {
          "description": "The processor types.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3ProcessorType"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Points to the next page, otherwise empty.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3ListProcessorTypesResponse"
    },
    "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse": {
      "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete.",
      "id": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse",
      "properties": {
        "responses": {
          "description": "Responses for each individual document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3EvaluationReference": {
      "id": "GoogleCloudDocumentaiV1beta3EvaluationReference",
      "properties": {
        "aggregateMetricsExact": {
          "description": "An aggregate of the statistics for the evaluation with fuzzy matching off.",
          "$ref": "GoogleCloudDocumentaiV1beta3EvaluationMetrics"
        },
        "operation": {
          "type": "string",
          "description": "The resource name of the Long Running Operation for the evaluation."
        },
        "aggregateMetrics": {
          "$ref": "GoogleCloudDocumentaiV1beta3EvaluationMetrics",
          "description": "An aggregate of the statistics for the evaluation with fuzzy matching on."
        },
        "evaluation": {
          "type": "string",
          "description": "The resource name of the evaluation."
        }
      },
      "type": "object",
      "description": "Gives a short summary of an evaluation, and links to the evaluation itself."
    },
    "GoogleCloudDocumentaiV1beta1DocumentProvenance": {
      "description": "Structure to identify provenance relationships between annotations in different revisions.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of provenance operation.",
          "type": "string",
          "enumDescriptions": [
            "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.",
            "Add an element.",
            "Remove an element identified by `parent`.",
            "Updates any fields within the given provenance scope of the message. It 'overwrites' the fields rather than replacing them. This is especially relevant when we just want to update a field value of an entity without also affecting all the child properties.",
            "Currently unused. Replace an element identified by `parent`.",
            "Deprecated. Request human review for the element identified by `parent`.",
            "Deprecated. Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Deprecated. Element is skipped in the validation process."
          ],
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "UPDATE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ]
        },
        "id": {
          "description": "The Id of this operation. Needs to be unique within the scope of the revision.",
          "type": "integer",
          "format": "int32"
        },
        "parents": {
          "description": "References to the original elements that are replaced.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent"
          }
        },
        "revision": {
          "format": "int32",
          "description": "The index of the revision that produced this element.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageParagraph": {
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "layout": {
          "description": "Layout for Paragraph.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageLayout"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentProvenance"
        }
      },
      "type": "object",
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageParagraph"
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig": {
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig",
      "type": "object",
      "description": "The message for output config in batch process.",
      "properties": {
        "gcsDestination": {
          "type": "string",
          "description": "The output Cloud Storage directory to put the processed documents."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse": {
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse",
      "type": "object",
      "properties": {
        "state": {
          "description": "The state of the review operation.",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "The review operation is rejected by the reviewer.",
            "The review operation is succeeded."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "REJECTED",
            "SUCCEEDED"
          ]
        },
        "rejectionReason": {
          "description": "The reason why the review is rejected by reviewer.",
          "type": "string"
        },
        "gcsDestination": {
          "description": "The Cloud Storage uri for the human reviewed document if the review is succeeded.",
          "type": "string"
        }
      },
      "description": "Response message for review document method."
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageSymbol": {
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageSymbol",
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageLayout",
          "description": "Layout for Symbol."
        }
      },
      "description": "A detected symbol."
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation",
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset.",
      "properties": {
        "documentErrors": {
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "documentErrorCount": {
          "description": "The total number of document errors.",
          "format": "int32",
          "type": "integer"
        },
        "datasetErrors": {
          "type": "array",
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "datasetErrorCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of dataset errors."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics": {
      "id": "GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics",
      "properties": {
        "confidenceLevel": {
          "type": "number",
          "description": "The confidence level.",
          "format": "float"
        },
        "metrics": {
          "description": "The metrics at the specific confidence level.",
          "$ref": "GoogleCloudDocumentaiV1beta3EvaluationMetrics"
        }
      },
      "description": "Evaluations metrics, at a specific confidence level.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageImage": {
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageImage",
      "properties": {
        "mimeType": {
          "type": "string",
          "description": "Encoding mime type for the image."
        },
        "content": {
          "format": "byte",
          "type": "string",
          "description": "Raw byte content of the image."
        },
        "height": {
          "format": "int32",
          "description": "Height of the image in pixels.",
          "type": "integer"
        },
        "width": {
          "type": "integer",
          "description": "Width of the image in pixels.",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "Rendered image contents for this page."
    },
    "GoogleCloudDocumentaiV1beta1Document": {
      "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.",
      "properties": {
        "pages": {
          "description": "Visual page layout for the Document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPage"
          },
          "type": "array"
        },
        "revisions": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevision"
          },
          "description": "Placeholder. Revision history of this document."
        },
        "error": {
          "description": "Any error that occurred while processing this document.",
          "$ref": "GoogleRpcStatus"
        },
        "textChanges": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextChange"
          },
          "description": "Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other."
        },
        "uri": {
          "type": "string",
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info."
        },
        "shardInfo": {
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentShardInfo"
        },
        "content": {
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
          "type": "string",
          "format": "byte"
        },
        "textStyles": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyle"
          },
          "type": "array",
          "description": "Styles for the Document.text."
        },
        "entityRelations": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation"
          },
          "type": "array",
          "description": "Placeholder. Relationship among Document.entities."
        },
        "mimeType": {
          "type": "string",
          "description": "An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml."
        },
        "entities": {
          "type": "array",
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          }
        },
        "text": {
          "type": "string",
          "description": "Optional. UTF-8 encoded text in reading order from the document."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1Document"
    },
    "GoogleCloudDocumentaiV1beta2DocumentShardInfo": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentShardInfo",
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.",
      "properties": {
        "textOffset": {
          "format": "int64",
          "type": "string",
          "description": "The index of the first character in Document.text in the overall document global text."
        },
        "shardIndex": {
          "type": "string",
          "description": "The 0-based index of this shard.",
          "format": "int64"
        },
        "shardCount": {
          "format": "int64",
          "type": "string",
          "description": "Total number of shards."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DocumentProvenanceParent": {
      "type": "object",
      "properties": {
        "revision": {
          "format": "int32",
          "description": "The index of the index into current revision's parent_ids list.",
          "type": "integer"
        },
        "index": {
          "format": "int32",
          "type": "integer",
          "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision."
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "description": "The id of the parent provenance."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DocumentProvenanceParent",
      "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement": {
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for VisualElement."
        },
        "type": {
          "type": "string",
          "description": "Type of the VisualElement."
        }
      },
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "description": "The long running operation metadata for set default processor version method.",
      "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DocumentRevision": {
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time that the revision was created, internally generated by doc proto storage at the time of create."
        },
        "agent": {
          "type": "string",
          "description": "If the change was made by a person specify the name or id of that person."
        },
        "parent": {
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "humanReview": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentRevisionHumanReview",
          "description": "Human Review information of this revision."
        },
        "id": {
          "description": "Id of the revision, internally generated by doc proto storage. Unique within the context of the document.",
          "type": "string"
        },
        "processor": {
          "description": "If the annotation was made by processor identify the processor by its resource name.",
          "type": "string"
        },
        "parentIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field."
        }
      },
      "description": "Contains past or forward revisions of this document.",
      "id": "GoogleCloudDocumentaiV1beta3DocumentRevision",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1ReviewDocumentResponse": {
      "description": "Response message for review document method.",
      "id": "GoogleCloudDocumentaiV1ReviewDocumentResponse",
      "type": "object",
      "properties": {
        "gcsDestination": {
          "description": "The Cloud Storage uri for the human reviewed document if the review is succeeded.",
          "type": "string"
        },
        "state": {
          "description": "The state of the review operation.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "REJECTED",
            "SUCCEEDED"
          ],
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "The review operation is rejected by the reviewer.",
            "The review operation is succeeded."
          ]
        },
        "rejectionReason": {
          "description": "The reason why the review is rejected by reviewer.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "description": "The long running operation metadata for the undeploy processor version method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage": {
      "type": "object",
      "description": "Detected language for a structural component.",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of detected language. Range `[0, 1]`."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
    },
    "GoogleCloudDocumentaiV1BatchProcessResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1BatchProcessResponse",
      "description": "Response message for batch process document method.",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessResponse": {
      "description": "Response message for batch process document method.",
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessResponse",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3ProcessResponse": {
      "type": "object",
      "properties": {
        "humanReviewStatus": {
          "$ref": "GoogleCloudDocumentaiV1beta3HumanReviewStatus",
          "description": "The status of human review on the processed document."
        },
        "document": {
          "$ref": "GoogleCloudDocumentaiV1beta3Document",
          "description": "The document payload, will populate fields based on the processor's behavior."
        },
        "humanReviewOperation": {
          "type": "string",
          "description": "The name of the operation triggered by the processed document. If the human review process is not triggered, this field will be empty. It has the same response type and metadata as the long running operation returned by ReviewDocument method."
        }
      },
      "description": "Response message for the process document method.",
      "id": "GoogleCloudDocumentaiV1beta3ProcessResponse"
    },
    "GoogleCloudDocumentaiV1beta3ProcessorVersionDeprecationInfo": {
      "properties": {
        "deprecationTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which this processor version will be deprecated."
        },
        "replacementProcessorVersion": {
          "type": "string",
          "description": "If set, the processor version that will be used as a replacement."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3ProcessorVersionDeprecationInfo",
      "description": "Information about the upcoming deprecation of this processor version.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata": {
      "description": "The long running operation metadata for delete processor version method.",
      "id": "GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId",
      "description": "Identifies a document uniquely within the scope of a dataset in the Cloud Storage option.",
      "properties": {
        "cwDocId": {
          "type": "string",
          "description": "Id of the document (indexed) managed by Content Warehouse."
        },
        "gcsUri": {
          "description": "Required. The Cloud Storage uri where the actual document is stored.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessMetadata": {
      "description": "The long running operation metadata for batch process method.",
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadata",
      "properties": {
        "individualProcessStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus"
          },
          "type": "array",
          "description": "The list of response details of each document."
        },
        "updateTime": {
          "type": "string",
          "description": "The last update time of the operation.",
          "format": "google-datetime"
        },
        "createTime": {
          "description": "The creation time of the operation.",
          "format": "google-datetime",
          "type": "string"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was being cancelled.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLING",
            "CANCELLED",
            "FAILED"
          ],
          "type": "string",
          "description": "The state of the current batch processing."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DocumentProvenance": {
      "id": "GoogleCloudDocumentaiV1beta3DocumentProvenance",
      "description": "Structure to identify provenance relationships between annotations in different revisions.",
      "type": "object",
      "properties": {
        "parents": {
          "description": "References to the original elements that are replaced.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentProvenanceParent"
          },
          "type": "array"
        },
        "revision": {
          "format": "int32",
          "description": "The index of the revision that produced this element.",
          "type": "integer"
        },
        "id": {
          "description": "The Id of this operation. Needs to be unique within the scope of the revision.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "The type of provenance operation.",
          "type": "string",
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "UPDATE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ],
          "enumDescriptions": [
            "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.",
            "Add an element.",
            "Remove an element identified by `parent`.",
            "Updates any fields within the given provenance scope of the message. It 'overwrites' the fields rather than replacing them. This is especially relevant when we just want to update a field value of an entity without also affecting all the child properties.",
            "Currently unused. Replace an element identified by `parent`.",
            "Deprecated. Request human review for the element identified by `parent`.",
            "Deprecated. Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Deprecated. Element is skipped in the validation process."
          ]
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3NormalizedVertex": {
      "properties": {
        "y": {
          "format": "float",
          "type": "number",
          "description": "Y coordinate (starts from the top of the image)."
        },
        "x": {
          "type": "number",
          "format": "float",
          "description": "X coordinate."
        }
      },
      "type": "object",
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "id": "GoogleCloudDocumentaiV1beta3NormalizedVertex"
    },
    "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionRequest": {
      "description": "Evaluates the given ProcessorVersion against the supplied documents.",
      "properties": {
        "evaluationDocuments": {
          "description": "Optional. The documents used in the evaluation. If unspecified, use the processor's dataset as evaluation input.",
          "$ref": "GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionRequest"
    },
    "GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata": {
      "description": "The long running operation metadata for delete processor version method.",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse": {
      "id": "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse",
      "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete.",
      "type": "object",
      "properties": {
        "responses": {
          "description": "Responses for each individual document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1InputConfig": {
      "properties": {
        "mimeType": {
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format.",
          "type": "string"
        },
        "gcsSource": {
          "description": "The Google Cloud Storage location to read the input from. This must be a single file.",
          "$ref": "GoogleCloudDocumentaiV1beta1GcsSource"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1InputConfig",
      "description": "The desired input location and metadata.",
      "type": "object"
    },
    "GoogleLongrunningListOperationsResponse": {
      "type": "object",
      "id": "GoogleLongrunningListOperationsResponse",
      "properties": {
        "operations": {
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "description": "The response message for Operations.ListOperations."
    },
    "GoogleCloudDocumentaiV1beta3Vertex": {
      "properties": {
        "y": {
          "type": "integer",
          "format": "int32",
          "description": "Y coordinate (starts from the top of the image)."
        },
        "x": {
          "description": "X coordinate.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "id": "GoogleCloudDocumentaiV1beta3Vertex",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DisableProcessorMetadata": {
      "description": "The long running operation metadata for disable processor method.",
      "id": "GoogleCloudDocumentaiV1beta3DisableProcessorMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3ProcessorType": {
      "properties": {
        "name": {
          "description": "The resource name of the processor type. Format: `projects/{project}/processorTypes/{processor_type}`",
          "type": "string"
        },
        "availableLocations": {
          "type": "array",
          "description": "The locations in which this processor is available.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3ProcessorTypeLocationInfo"
          }
        },
        "type": {
          "type": "string",
          "description": "The processor type, e.g., `OCR_PROCESSOR`, `INVOICE_PROCESSOR`, etc."
        },
        "category": {
          "type": "string",
          "description": "The processor category, used by UI to group processor types."
        },
        "launchStage": {
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "UNIMPLEMENTED",
            "PRELAUNCH",
            "EARLY_ACCESS",
            "ALPHA",
            "BETA",
            "GA",
            "DEPRECATED"
          ],
          "enumDescriptions": [
            "Do not use this default value.",
            "The feature is not yet implemented. Users can not use it.",
            "Prelaunch features are hidden from users and are only visible internally.",
            "Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.",
            "Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don't have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.",
            "Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.",
            "GA features are open to all developers and are considered stable and fully qualified for production use.",
            "Deprecated features are scheduled to be shut down and removed. For more information, see the \"Deprecation Policy\" section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation."
          ],
          "description": "Launch stage of the processor type",
          "type": "string"
        },
        "sampleDocumentUris": {
          "description": "A set of Cloud Storage URIs of sample documents for this processor.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "allowCreation": {
          "type": "boolean",
          "description": "Whether the processor type allows creation. If true, users can create a processor of this processor type. Otherwise, users need to request access."
        }
      },
      "description": "A processor type is responsible for performing a certain document understanding task on a certain type of document.",
      "id": "GoogleCloudDocumentaiV1beta3ProcessorType",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment",
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "type": "object",
      "properties": {
        "startIndex": {
          "type": "string",
          "description": "TextSegment start UTF-8 char index in the Document.text.",
          "format": "int64"
        },
        "endIndex": {
          "format": "int64",
          "type": "string",
          "description": "TextSegment half open end UTF-8 char index in the Document.text."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2GcsSource": {
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2GcsSource",
      "type": "object",
      "description": "The Google Cloud Storage location where the input file will be read from."
    },
    "GoogleCloudDocumentaiV1beta3DocumentSchemaMetadata": {
      "type": "object",
      "properties": {
        "documentSplitter": {
          "description": "If true, a `document` entity type can be applied to subdocument ( splitting). Otherwise, it can only be applied to the entire document (classification).",
          "type": "boolean"
        },
        "prefixedNamingOnProperties": {
          "description": "If set, all the nested entities must be prefixed with the parents.",
          "type": "boolean"
        },
        "skipNamingValidation": {
          "type": "boolean",
          "description": "If set, we will skip the naming format validation in the schema. So the string values in `DocumentSchema.EntityType.name` and `DocumentSchema.EntityType.Property.name` will not be checked."
        },
        "documentAllowMultipleLabels": {
          "type": "boolean",
          "description": "If true, on a given page, there can be multiple `document` annotations covering it."
        }
      },
      "description": "Metadata for global schema behavior.",
      "id": "GoogleCloudDocumentaiV1beta3DocumentSchemaMetadata"
    },
    "GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse": {
      "description": "Response message for set default processor version method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview",
      "type": "object",
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`."
        }
      },
      "description": "Human Review information of the document."
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsResponse": {
      "description": "The response proto of ExportDocuments method.",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageToken": {
      "properties": {
        "layout": {
          "description": "Layout for Token.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "detectedBreak": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak",
          "description": "Detected break at the end of a Token."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "A detected token.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageToken"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImage": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImage",
      "properties": {
        "width": {
          "format": "int32",
          "type": "integer",
          "description": "Width of the image in pixels."
        },
        "content": {
          "format": "byte",
          "type": "string",
          "description": "Raw byte content of the image."
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "description": "Height of the image in pixels."
        },
        "mimeType": {
          "description": "Encoding mime type for the image.",
          "type": "string"
        }
      },
      "description": "Rendered image contents for this page.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3ProcessorVersion": {
      "properties": {
        "createTime": {
          "type": "string",
          "description": "The time the processor version was created.",
          "format": "google-datetime"
        },
        "documentSchema": {
          "description": "The schema of the processor version. Describes the output.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentSchema"
        },
        "displayName": {
          "description": "The display name of the processor version.",
          "type": "string"
        },
        "deprecationInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta3ProcessorVersionDeprecationInfo",
          "description": "If set, information about the eventual deprecation of this version."
        },
        "kmsKeyName": {
          "type": "string",
          "description": "The KMS key name used for encryption."
        },
        "state": {
          "description": "The state of the processor version.",
          "enum": [
            "STATE_UNSPECIFIED",
            "DEPLOYED",
            "DEPLOYING",
            "UNDEPLOYED",
            "UNDEPLOYING",
            "CREATING",
            "DELETING",
            "FAILED"
          ],
          "enumDescriptions": [
            "The processor version is in an unspecified state.",
            "The processor version is deployed and can be used for processing.",
            "The processor version is being deployed.",
            "The processor version is not deployed and cannot be used for processing.",
            "The processor version is being undeployed.",
            "The processor version is being created.",
            "The processor version is being deleted.",
            "The processor version failed and is in an indeterminate state."
          ],
          "type": "string"
        },
        "googleManaged": {
          "type": "boolean",
          "description": "Denotes that this ProcessorVersion is managed by google."
        },
        "latestEvaluation": {
          "$ref": "GoogleCloudDocumentaiV1beta3EvaluationReference",
          "description": "The most recently invoked evaluation for the processor version."
        },
        "kmsKeyVersionName": {
          "description": "The KMS key version with which data is encrypted.",
          "type": "string"
        },
        "name": {
          "description": "The resource name of the processor version. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processor_version}`",
          "type": "string"
        }
      },
      "description": "A processor version is an implementation of a processor. Each processor can have multiple versions, pre-trained by Google internally or up-trained by the customer. At a time, a processor can only have one default version version. So the processor's behavior (when processing documents) is defined by a default version",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3ProcessorVersion"
    },
    "GoogleCloudDocumentaiV1beta3EnableProcessorRequest": {
      "type": "object",
      "properties": {},
      "description": "Request message for the enable processor method.",
      "id": "GoogleCloudDocumentaiV1beta3EnableProcessorRequest"
    },
    "GoogleCloudDocumentaiV1beta1DocumentShardInfo": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentShardInfo",
      "properties": {
        "shardCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of shards."
        },
        "shardIndex": {
          "format": "int64",
          "type": "string",
          "description": "The 0-based index of this shard."
        },
        "textOffset": {
          "type": "string",
          "format": "int64",
          "description": "The index of the first character in Document.text in the overall document global text."
        }
      },
      "type": "object",
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is."
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageVisualElement": {
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageVisualElement",
      "properties": {
        "layout": {
          "description": "Layout for VisualElement.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageLayout"
        },
        "type": {
          "type": "string",
          "description": "Type of the VisualElement."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse",
      "description": "Response message for the undeploy processor version method.",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta3ProcessRequest": {
      "properties": {
        "processOptions": {
          "description": "Inference-time options for the process API",
          "$ref": "GoogleCloudDocumentaiV1beta3ProcessOptions"
        },
        "skipHumanReview": {
          "description": "Whether Human Review feature should be skipped for this request. Default to false.",
          "type": "boolean"
        },
        "document": {
          "$ref": "GoogleCloudDocumentaiV1beta3Document",
          "description": "The document payload, the [content] and [mime_type] fields must be set."
        },
        "inlineDocument": {
          "description": "An inline document proto.",
          "$ref": "GoogleCloudDocumentaiV1beta3Document"
        },
        "rawDocument": {
          "description": "A raw document content (bytes).",
          "$ref": "GoogleCloudDocumentaiV1beta3RawDocument"
        },
        "fieldMask": {
          "description": "Specifies which fields to include in ProcessResponse's document. Only supports top level document and pages field so it must be in the form of `{document_field_name}` or `pages.{page_field_name}`.",
          "format": "google-fieldmask",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3ProcessRequest",
      "description": "Request message for the process document method."
    },
    "GoogleCloudDocumentaiV1BatchProcessMetadata": {
      "id": "GoogleCloudDocumentaiV1BatchProcessMetadata",
      "properties": {
        "individualProcessStatuses": {
          "description": "The list of response details of each document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus"
          },
          "type": "array"
        },
        "state": {
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was being cancelled.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLING",
            "CANCELLED",
            "FAILED"
          ],
          "description": "The state of the current batch processing."
        },
        "createTime": {
          "type": "string",
          "description": "The creation time of the operation.",
          "format": "google-datetime"
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time of the operation."
        }
      },
      "type": "object",
      "description": "The long running operation metadata for batch process method."
    },
    "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent": {
      "properties": {
        "revision": {
          "format": "int32",
          "description": "The index of the index into current revision's parent_ids list.",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "The id of the parent provenance.",
          "type": "integer"
        },
        "index": {
          "format": "int32",
          "type": "integer",
          "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent",
      "type": "object",
      "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell": {
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "colSpan": {
          "type": "integer",
          "description": "How many columns this cell spans.",
          "format": "int32"
        },
        "rowSpan": {
          "format": "int32",
          "description": "How many rows this cell spans.",
          "type": "integer"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for TableCell."
        }
      },
      "description": "A cell representation inside the table.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentProvenance": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The Id of this operation. Needs to be unique within the scope of the revision.",
          "format": "int32"
        },
        "parents": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent"
          },
          "description": "References to the original elements that are replaced."
        },
        "type": {
          "type": "string",
          "description": "The type of provenance operation.",
          "enumDescriptions": [
            "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.",
            "Add an element.",
            "Remove an element identified by `parent`.",
            "Updates any fields within the given provenance scope of the message. It 'overwrites' the fields rather than replacing them. This is especially relevant when we just want to update a field value of an entity without also affecting all the child properties.",
            "Currently unused. Replace an element identified by `parent`.",
            "Deprecated. Request human review for the element identified by `parent`.",
            "Deprecated. Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Deprecated. Element is skipped in the validation process."
          ],
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "UPDATE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ]
        },
        "revision": {
          "description": "The index of the revision that produced this element.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
      "description": "Structure to identify provenance relationships between annotations in different revisions."
    },
    "GoogleCloudDocumentaiV1EnableProcessorResponse": {
      "description": "Response message for the enable processor method. Intentionally empty proto for adding fields in future.",
      "id": "GoogleCloudDocumentaiV1EnableProcessorResponse",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionRequest": {
      "properties": {},
      "id": "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionRequest",
      "description": "Request message for the undeploy processor version method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchor": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
      "properties": {
        "content": {
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields.",
          "type": "string"
        },
        "textSegments": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment"
          },
          "type": "array",
          "description": "The text segments from the Document.text."
        }
      },
      "type": "object",
      "description": "Text reference indexing into the Document.text."
    },
    "GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "description": "The long running operation metadata for delete processor method."
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageBlock": {
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageBlock",
      "type": "object",
      "properties": {
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentProvenance",
          "description": "The history of this annotation."
        },
        "layout": {
          "description": "Layout for Block.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageLayout"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata",
      "description": "The long running operation metadata for deploy processor version method.",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTable": {
      "type": "object",
      "description": "A table representation similar to HTML table structure.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTable",
      "properties": {
        "provenance": {
          "description": "The history of this table.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "headerRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          },
          "description": "Header rows of the table.",
          "type": "array"
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "bodyRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          },
          "type": "array",
          "description": "Body rows of the table."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Table."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect",
      "properties": {
        "type": {
          "description": "Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`",
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of detected defect. Range `[0, 1]` where 1 indicates strong confidence of that the defect exists."
        }
      },
      "description": "Image Quality Defects",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "description": "The long running operation metadata for enable processor method."
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse": {
      "properties": {},
      "description": "Response of the batch move documents operation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse"
    },
    "GoogleCloudDocumentaiV1beta3DocumentTextAnchorTextSegment": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DocumentTextAnchorTextSegment",
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "properties": {
        "endIndex": {
          "description": "TextSegment half open end UTF-8 char index in the Document.text.",
          "type": "string",
          "format": "int64"
        },
        "startIndex": {
          "description": "TextSegment start UTF-8 char index in the Document.text.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata": {
      "type": "object",
      "description": "The long running operation metadata for CreateLabelerPool.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata"
    },
    "GoogleCloudDocumentaiV1beta1Barcode": {
      "properties": {
        "valueFormat": {
          "type": "string",
          "description": "Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license."
        },
        "rawValue": {
          "type": "string",
          "description": "Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`."
        },
        "format": {
          "type": "string",
          "description": "Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1Barcode",
      "description": "Encodes the detailed information of a barcode.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue": {
      "description": "Parsed and normalized entity value.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue",
      "type": "object",
      "properties": {
        "integerValue": {
          "format": "int32",
          "type": "integer",
          "description": "Integer value."
        },
        "booleanValue": {
          "type": "boolean",
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes."
        },
        "addressValue": {
          "$ref": "GoogleTypePostalAddress",
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto"
        },
        "floatValue": {
          "type": "number",
          "format": "float",
          "description": "Float value."
        },
        "moneyValue": {
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto",
          "$ref": "GoogleTypeMoney"
        },
        "datetimeValue": {
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto",
          "$ref": "GoogleTypeDateTime"
        },
        "text": {
          "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.",
          "type": "string"
        },
        "dateValue": {
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto",
          "$ref": "GoogleTypeDate"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetResponse": {
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetResponse",
      "type": "object",
      "description": "The response proto of ResyncDataset method."
    },
    "GoogleCloudDocumentaiV1beta3Evaluation": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3Evaluation",
      "description": "An evaluation of a ProcessorVersion's performance.",
      "properties": {
        "kmsKeyName": {
          "type": "string",
          "description": "The KMS key name used for encryption."
        },
        "kmsKeyVersionName": {
          "description": "The KMS key version with which data is encrypted.",
          "type": "string"
        },
        "entityMetrics": {
          "additionalProperties": {
            "$ref": "GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics"
          },
          "description": "Metrics across confidence levels, for different entities.",
          "type": "object"
        },
        "createTime": {
          "description": "The time that the evaluation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "allEntitiesMetrics": {
          "$ref": "GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics",
          "description": "Metrics for all the entities in aggregate."
        },
        "name": {
          "type": "string",
          "description": "The resource name of the evaluation. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processor_version}/evaluations/{evaluation}`"
        },
        "documentCounters": {
          "description": "Counters for the documents used in the evaluation.",
          "$ref": "GoogleCloudDocumentaiV1beta3EvaluationCounters"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1OperationMetadata": {
      "properties": {
        "createTime": {
          "description": "The creation time of the operation.",
          "format": "google-datetime",
          "type": "string"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ],
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "description": "The state of the current batch processing."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "The last update time of the operation.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1OperationMetadata",
      "type": "object",
      "description": "Contains metadata for the BatchProcessDocuments operation."
    },
    "GoogleCloudDocumentaiV1beta2OperationMetadata": {
      "id": "GoogleCloudDocumentaiV1beta2OperationMetadata",
      "description": "Contains metadata for the BatchProcessDocuments operation.",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "description": "The last update time of the operation.",
          "type": "string"
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        },
        "createTime": {
          "description": "The creation time of the operation.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "description": "The state of the current batch processing.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse",
      "properties": {
        "gcsUri": {
          "description": "The Cloud Storage URI containing the output artifacts.",
          "type": "string"
        }
      },
      "description": "Response message associated with the ExportProcessorVersion operation.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDimension": {
      "properties": {
        "unit": {
          "type": "string",
          "description": "Dimension unit."
        },
        "width": {
          "description": "Page width.",
          "type": "number",
          "format": "float"
        },
        "height": {
          "format": "float",
          "description": "Page height.",
          "type": "number"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDimension",
      "description": "Dimension for the page.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DocumentTextChange": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DocumentTextChange",
      "description": "This message is used for text changes aka. OCR corrections.",
      "properties": {
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentTextAnchor",
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index."
        },
        "provenance": {
          "description": "The history of this annotation.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentProvenance"
          },
          "type": "array"
        },
        "changedText": {
          "type": "string",
          "description": "The text that replaces the text identified in the `text_anchor`."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageDetectedBarcode": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageDetectedBarcode",
      "description": "A detected barcode.",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageLayout",
          "description": "Layout for DetectedBarcode."
        },
        "barcode": {
          "$ref": "GoogleCloudDocumentaiV1beta3Barcode",
          "description": "Detailed barcode information of the DetectedBarcode."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DocumentEntityRelation": {
      "properties": {
        "relation": {
          "type": "string",
          "description": "Relationship description."
        },
        "subjectId": {
          "type": "string",
          "description": "Subject entity id."
        },
        "objectId": {
          "type": "string",
          "description": "Object entity id."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DocumentEntityRelation",
      "description": "Relationship between Entities."
    },
    "GoogleCloudDocumentaiV1beta3EvaluationCounters": {
      "type": "object",
      "properties": {
        "evaluatedDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "How many documents were used in the evaluation."
        },
        "invalidDocumentsCount": {
          "type": "integer",
          "description": "How many documents were not included in the evaluation as they didn't pass validation.",
          "format": "int32"
        },
        "inputDocumentsCount": {
          "type": "integer",
          "description": "How many documents were sent for evaluation.",
          "format": "int32"
        },
        "failedDocumentsCount": {
          "format": "int32",
          "type": "integer",
          "description": "How many documents were not included in the evaluation as Document AI failed to process them."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3EvaluationCounters",
      "description": "Evaluation counters for the documents that were used."
    },
    "GoogleCloudDocumentaiV1beta2InputConfig": {
      "type": "object",
      "properties": {
        "contents": {
          "format": "byte",
          "description": "Content in bytes, represented as a stream of bytes. Note: As with all `bytes` fields, proto buffer messages use a pure binary representation, whereas JSON representations use base64. This field only works for synchronous ProcessDocument method.",
          "type": "string"
        },
        "gcsSource": {
          "description": "The Google Cloud Storage location to read the input from. This must be a single file.",
          "$ref": "GoogleCloudDocumentaiV1beta2GcsSource"
        },
        "mimeType": {
          "type": "string",
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2InputConfig",
      "description": "The desired input location and metadata."
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageTokenDetectedBreak": {
      "type": "object",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ],
          "type": "string",
          "description": "Detected break type."
        }
      },
      "description": "Detected break at the end of a Token.",
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageTokenDetectedBreak"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata for the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "description": "The long running operation metadata for the ImportProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow": {
      "properties": {
        "cells": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell"
          },
          "description": "Cells that make up this row.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow",
      "type": "object",
      "description": "A row of table cells."
    },
    "GoogleCloudLocationListLocationsResponse": {
      "id": "GoogleCloudLocationListLocationsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "items": {
            "$ref": "GoogleCloudLocationLocation"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        }
      },
      "description": "The response message for Locations.ListLocations."
    },
    "GoogleCloudDocumentaiV1DeployProcessorVersionResponse": {
      "properties": {},
      "description": "Response message for the deploy processor version method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DeployProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1DeployProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1DeployProcessorVersionMetadata",
      "description": "The long running operation metadata for deploy processor version method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1BoundingPoly": {
      "type": "object",
      "properties": {
        "vertices": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1Vertex"
          },
          "description": "The bounding polygon vertices."
        },
        "normalizedVertices": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1NormalizedVertex"
          },
          "description": "The bounding polygon normalized vertices."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1BoundingPoly",
      "description": "A bounding polygon for the detected image annotation."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect",
      "type": "object",
      "description": "Image Quality Defects",
      "properties": {
        "type": {
          "description": "Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`",
          "type": "string"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Confidence of detected defect. Range `[0, 1]` where 1 indicates strong confidence of that the defect exists."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3OcrConfig": {
      "description": "Config for Document OCR.",
      "type": "object",
      "properties": {
        "advancedOcrOptions": {
          "description": "A list of advanced OCR options to further fine-tune OCR behavior.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "enableNativePdfParsing": {
          "description": "Enables special handling for PDFs with existing text information. Results in better text extraction quality in such PDF inputs.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3OcrConfig"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageMatrix": {
      "properties": {
        "data": {
          "description": "The matrix data.",
          "type": "string",
          "format": "byte"
        },
        "type": {
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "type": "integer",
          "format": "int32"
        },
        "rows": {
          "type": "integer",
          "description": "Number of rows in the matrix.",
          "format": "int32"
        },
        "cols": {
          "format": "int32",
          "description": "Number of columns in the matrix.",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix"
    },
    "GoogleCloudDocumentaiV1UndeployProcessorVersionResponse": {
      "description": "Response message for the undeploy processor version method.",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse": {
      "properties": {},
      "description": "Response message for the deploy processor version method.",
      "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "description": "The long running operation metadata for deploy processor version method.",
      "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
      "type": "object",
      "description": "The common metadata for long running operations.",
      "properties": {
        "resource": {
          "type": "string",
          "description": "A related resource to this operation."
        },
        "state": {
          "type": "string",
          "description": "The state of the operation.",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ]
        },
        "createTime": {
          "type": "string",
          "description": "The creation time of the operation.",
          "format": "google-datetime"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "The last update time of the operation.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1EnableProcessorMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "description": "The long running operation metadata for enable processor method.",
      "id": "GoogleCloudDocumentaiV1EnableProcessorMetadata"
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue",
      "type": "object",
      "properties": {
        "integerValue": {
          "description": "Integer value.",
          "format": "int32",
          "type": "integer"
        },
        "moneyValue": {
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto",
          "$ref": "GoogleTypeMoney"
        },
        "text": {
          "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.",
          "type": "string"
        },
        "addressValue": {
          "$ref": "GoogleTypePostalAddress",
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto"
        },
        "booleanValue": {
          "type": "boolean",
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes."
        },
        "floatValue": {
          "format": "float",
          "type": "number",
          "description": "Float value."
        },
        "datetimeValue": {
          "$ref": "GoogleTypeDateTime",
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto"
        },
        "dateValue": {
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto",
          "$ref": "GoogleTypeDate"
        }
      },
      "description": "Parsed and normalized entity value."
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse": {
      "properties": {},
      "description": "Response of the delete documents operation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImage": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImage",
      "properties": {
        "content": {
          "description": "Raw byte content of the image.",
          "format": "byte",
          "type": "string"
        },
        "mimeType": {
          "type": "string",
          "description": "Encoding mime type for the image."
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "Height of the image in pixels."
        },
        "width": {
          "type": "integer",
          "description": "Width of the image in pixels.",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "Rendered image contents for this page."
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus": {
      "type": "object",
      "properties": {
        "documentId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId",
          "description": "The document id of the document."
        },
        "status": {
          "description": "The status of moving the document.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "description": "The status of each individual document in the batch move process.",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus"
    },
    "GoogleCloudDocumentaiV1beta3GcsPrefix": {
      "id": "GoogleCloudDocumentaiV1beta3GcsPrefix",
      "properties": {
        "gcsUriPrefix": {
          "type": "string",
          "description": "The URI prefix."
        }
      },
      "type": "object",
      "description": "Specifies all documents on Cloud Storage with a common prefix."
    },
    "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse": {
      "type": "object",
      "properties": {
        "outputConfig": {
          "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects.",
          "$ref": "GoogleCloudDocumentaiV1beta2OutputConfig"
        },
        "inputConfig": {
          "description": "Information about the input file. This is the same as the corresponding input config in the request.",
          "$ref": "GoogleCloudDocumentaiV1beta2InputConfig"
        }
      },
      "description": "Response to a single document processing request.",
      "id": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode": {
      "description": "A detected barcode.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for DetectedBarcode."
        },
        "barcode": {
          "description": "Detailed barcode information of the DetectedBarcode.",
          "$ref": "GoogleCloudDocumentaiV1beta2Barcode"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2Vertex": {
      "properties": {
        "x": {
          "format": "int32",
          "type": "integer",
          "description": "X coordinate."
        },
        "y": {
          "format": "int32",
          "description": "Y coordinate (starts from the top of the image).",
          "type": "integer"
        }
      },
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "id": "GoogleCloudDocumentaiV1beta2Vertex",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageParagraph": {
      "properties": {
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "description": "Layout for Paragraph.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        }
      },
      "type": "object",
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph"
    },
    "GoogleCloudDocumentaiV1beta3DocumentEntityNormalizedValue": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DocumentEntityNormalizedValue",
      "properties": {
        "floatValue": {
          "type": "number",
          "format": "float",
          "description": "Float value."
        },
        "integerValue": {
          "description": "Integer value.",
          "type": "integer",
          "format": "int32"
        },
        "datetimeValue": {
          "$ref": "GoogleTypeDateTime",
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto"
        },
        "dateValue": {
          "$ref": "GoogleTypeDate",
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto"
        },
        "addressValue": {
          "$ref": "GoogleTypePostalAddress",
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto"
        },
        "moneyValue": {
          "$ref": "GoogleTypeMoney",
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto"
        },
        "booleanValue": {
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes.",
          "type": "boolean"
        },
        "text": {
          "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.",
          "type": "string"
        }
      },
      "description": "Parsed and normalized entity value."
    },
    "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionRequest": {
      "properties": {
        "defaultProcessorVersion": {
          "description": "Required. The resource name of child ProcessorVersion to use as default. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{version}`",
          "type": "string"
        }
      },
      "description": "Request message for the set default processor version method.",
      "id": "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionRequest",
      "type": "object"
    },
    "GoogleProtobufEmpty": {
      "properties": {},
      "id": "GoogleProtobufEmpty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "GoogleCloudDocumentaiV1beta1GcsSource": {
      "description": "The Google Cloud Storage location where the input file will be read from.",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1GcsSource"
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchor": {
      "properties": {
        "textSegments": {
          "type": "array",
          "description": "The text segments from the Document.text.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment"
          }
        },
        "content": {
          "type": "string",
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields."
        }
      },
      "description": "Text reference indexing into the Document.text.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak",
      "description": "Detected break at the end of a Token.",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ],
          "description": "Detected break type.",
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ]
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        },
        "trainingDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The training dataset validation information."
        },
        "testDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The test dataset validation information."
        }
      },
      "description": "The metadata that represents a processor version being created.",
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse": {
      "description": "Response message for the enable processor method. Intentionally empty proto for adding fields in future.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse"
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentRequest": {
      "type": "object",
      "properties": {
        "inlineDocument": {
          "description": "An inline document proto.",
          "$ref": "GoogleCloudDocumentaiV1beta3Document"
        },
        "document": {
          "description": "The document that needs human review.",
          "$ref": "GoogleCloudDocumentaiV1beta3Document"
        },
        "enableSchemaValidation": {
          "type": "boolean",
          "description": "Whether the validation should be performed on the ad-hoc review request."
        },
        "documentSchema": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentSchema",
          "description": "The document schema of the human review task."
        },
        "priority": {
          "enum": [
            "DEFAULT",
            "URGENT"
          ],
          "description": "The priority of the human review task.",
          "enumDescriptions": [
            "The default priority level.",
            "The urgent priority level. The labeling manager should allocate labeler resource to the urgent task queue to respect this priority level."
          ],
          "type": "string"
        }
      },
      "description": "Request message for review document method.",
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentRequest"
    },
    "GoogleTypeDate": {
      "properties": {
        "month": {
          "format": "int32",
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
        },
        "year": {
          "type": "integer",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "format": "int32"
        },
        "day": {
          "type": "integer",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "format": "int32"
        }
      },
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "id": "GoogleTypeDate",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell",
      "properties": {
        "layout": {
          "description": "Layout for TableCell.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "rowSpan": {
          "format": "int32",
          "description": "How many rows this cell spans.",
          "type": "integer"
        },
        "colSpan": {
          "type": "integer",
          "description": "How many columns this cell spans.",
          "format": "int32"
        }
      },
      "description": "A cell representation inside the table.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLayout": {
      "properties": {
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        },
        "confidence": {
          "format": "float",
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.",
          "type": "number"
        },
        "boundingPoly": {
          "description": "The bounding polygon for the Layout.",
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly"
        },
        "orientation": {
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ],
          "description": "Detected orientation for the Layout.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ]
        }
      },
      "description": "Visual element describing a layout unit on a page.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3ListProcessorVersionsResponse": {
      "description": "Response message for list processors.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Points to the next processor, otherwise empty."
        },
        "processorVersions": {
          "type": "array",
          "description": "The list of processors.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3ProcessorVersion"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3ListProcessorVersionsResponse"
    },
    "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata",
      "description": "The long running operation metadata for set default processor version method."
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionMetadata": {
      "type": "object",
      "description": "The metadata that represents a processor version being created.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        },
        "trainingDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation",
          "description": "The training dataset validation information."
        },
        "testDatasetValidation": {
          "description": "The test dataset validation information.",
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation"
        }
      },
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta3ListProcessorsResponse": {
      "properties": {
        "processors": {
          "type": "array",
          "description": "The list of processors.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3Processor"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Points to the next processor, otherwise empty."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3ListProcessorsResponse",
      "description": "Response message for list processors."
    },
    "GoogleCloudDocumentaiV1beta3DocumentTextAnchor": {
      "id": "GoogleCloudDocumentaiV1beta3DocumentTextAnchor",
      "description": "Text reference indexing into the Document.text.",
      "properties": {
        "content": {
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields.",
          "type": "string"
        },
        "textSegments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentTextAnchorTextSegment"
          },
          "description": "The text segments from the Document.text."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentLabel": {
      "properties": {
        "automlModel": {
          "description": "Label is generated AutoML model. This field stores the full resource name of the AutoML model. Format: `projects/{project-id}/locations/{location-id}/models/{model-id}`",
          "type": "string"
        },
        "confidence": {
          "format": "float",
          "description": "Confidence score between 0 and 1 for label assignment.",
          "type": "number"
        },
        "name": {
          "type": "string",
          "description": "Name of the label. When the label is generated from AutoML Text Classification model, this field represents the name of the category."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentLabel",
      "type": "object",
      "description": "Label attaches schema information and/or other metadata to segments within a Document. Multiple Labels on a single field can denote either different labels, different instances of the same label created at different times, or some combination of both."
    },
    "GoogleTypePostalAddress": {
      "description": "Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an internationalization-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478",
      "type": "object",
      "id": "GoogleTypePostalAddress",
      "properties": {
        "revision": {
          "format": "int32",
          "type": "integer",
          "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions."
        },
        "locality": {
          "type": "string",
          "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines."
        },
        "languageCode": {
          "type": "string",
          "description": "Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\"."
        },
        "addressLines": {
          "description": "Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "administrativeArea": {
          "type": "string",
          "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated."
        },
        "postalCode": {
          "description": "Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).",
          "type": "string"
        },
        "organization": {
          "type": "string",
          "description": "Optional. The name of the organization at the address."
        },
        "recipients": {
          "description": "Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regionCode": {
          "type": "string",
          "description": "Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See https://cldr.unicode.org/ and https://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland."
        },
        "sublocality": {
          "description": "Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.",
          "type": "string"
        },
        "sortingCode": {
          "type": "string",
          "description": "Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire)."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus": {
      "description": "The status of each individual document in the import process.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus",
      "properties": {
        "status": {
          "description": "The status of the importing of the document.",
          "$ref": "GoogleRpcStatus"
        },
        "inputGcsSource": {
          "description": "The source Cloud Storage URI of the document.",
          "type": "string"
        },
        "outputGcsDestination": {
          "description": "The output_gcs_destination of the processed document if it was successful, otherwise empty.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLine": {
      "properties": {
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this annotation."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Line."
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        }
      },
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLine",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3ProcessOptions": {
      "description": "Options for Process API",
      "type": "object",
      "properties": {
        "ocrConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta3OcrConfig",
          "description": "Only applicable to \"Document OCR Processor\". Returns error if set on other processor types."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3ProcessOptions"
    },
    "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse": {
      "description": "Response message for the disable processor method. Intentionally empty proto for adding fields in future.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse"
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata",
      "description": "The long running operation metadata for updating the human review configuration.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageToken": {
      "description": "A detected token.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageToken",
      "type": "object",
      "properties": {
        "detectedBreak": {
          "description": "Detected break at the end of a Token.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this annotation."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Token."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageSymbol": {
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Symbol."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageSymbol",
      "description": "A detected symbol.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DocumentShardInfo": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DocumentShardInfo",
      "properties": {
        "shardIndex": {
          "description": "The 0-based index of this shard.",
          "format": "int64",
          "type": "string"
        },
        "shardCount": {
          "description": "Total number of shards.",
          "format": "int64",
          "type": "string"
        },
        "textOffset": {
          "description": "The index of the first character in Document.text in the overall document global text.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is."
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionRequest": {
      "type": "object",
      "description": "Request message for the create processor version method.",
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionRequest",
      "properties": {
        "baseProcessorVersion": {
          "type": "string",
          "description": "Optional. The processor version to use as a base for training. This processor version must be a child of `parent`. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`."
        },
        "documentSchema": {
          "description": "Optional. The schema the processor version will be trained with.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentSchema"
        },
        "processorVersion": {
          "description": "Required. The processor version to be created.",
          "$ref": "GoogleCloudDocumentaiV1beta3ProcessorVersion"
        },
        "inputData": {
          "description": "Optional. The input data used to train the `ProcessorVersion`.",
          "$ref": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionRequestInputData"
        }
      }
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation": {
      "properties": {
        "datasetErrors": {
          "type": "array",
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "documentErrorCount": {
          "type": "integer",
          "description": "The total number of document errors.",
          "format": "int32"
        },
        "documentErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training."
        },
        "datasetErrorCount": {
          "description": "The total number of dataset errors.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset.",
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation"
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageTable": {
      "properties": {
        "bodyRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageTableTableRow"
          },
          "description": "Body rows of the table.",
          "type": "array"
        },
        "headerRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageTableTableRow"
          },
          "type": "array",
          "description": "Header rows of the table."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage"
          }
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentProvenance",
          "description": "The history of this table."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageLayout",
          "description": "Layout for Table."
        }
      },
      "description": "A table representation similar to HTML table structure.",
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageTable",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntity": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntity",
      "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.",
      "properties": {
        "mentionText": {
          "type": "string",
          "description": "Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "Optional. The history of this annotation."
        },
        "mentionId": {
          "type": "string",
          "description": "Optional. Deprecated. Use `id` field instead."
        },
        "type": {
          "type": "string",
          "description": "Required. Entity type from a schema e.g. `Address`."
        },
        "normalizedValue": {
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue"
        },
        "pageAnchor": {
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor"
        },
        "properties": {
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          },
          "type": "array"
        },
        "id": {
          "type": "string",
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document."
        },
        "confidence": {
          "format": "float",
          "description": "Optional. Confidence of detected Schema entity. Range `[0, 1]`.",
          "type": "number"
        },
        "textAnchor": {
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        },
        "redacted": {
          "type": "boolean",
          "description": "Optional. Whether the entity will be redacted for de-identification purposes."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageFormField": {
      "description": "A form field detected on the page.",
      "properties": {
        "correctedValueText": {
          "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction.",
          "type": "string"
        },
        "valueType": {
          "type": "string",
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "nameDetectedLanguages": {
          "description": "A list of detected languages for name together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "fieldValue": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for the FormField value."
        },
        "valueDetectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages for value together with confidence."
        },
        "correctedKeyText": {
          "type": "string",
          "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction."
        },
        "fieldName": {
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageFormField",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment",
      "type": "object",
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "properties": {
        "endIndex": {
          "format": "int64",
          "description": "TextSegment half open end UTF-8 char index in the Document.text.",
          "type": "string"
        },
        "startIndex": {
          "description": "TextSegment start UTF-8 char index in the Document.text.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak": {
      "description": "Detected break at the end of a Token.",
      "properties": {
        "type": {
          "description": "Detected break type.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ]
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak",
      "type": "object"
    },
    "GoogleTypeMoney": {
      "properties": {
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "format": "int32",
          "type": "integer"
        },
        "units": {
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "type": "string",
          "format": "int64"
        },
        "currencyCode": {
          "type": "string",
          "description": "The three-letter currency code defined in ISO 4217."
        }
      },
      "description": "Represents an amount of money with its currency type.",
      "id": "GoogleTypeMoney",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DocumentId": {
      "description": "Document Identifier.",
      "type": "object",
      "properties": {
        "revisionRef": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3RevisionRef",
          "description": "Points to a specific revision of the document if set."
        },
        "gcsManagedDocId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3DocumentId"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef": {
      "properties": {
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly",
          "description": "Optional. Identifies the bounding polygon of a layout element on the page."
        },
        "layoutId": {
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead.",
          "type": "string"
        },
        "page": {
          "type": "string",
          "description": "Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json.",
          "format": "int64"
        },
        "layoutType": {
          "description": "Optional. The type of the layout element that is being referenced if any.",
          "type": "string",
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ]
        },
        "confidence": {
          "description": "Optional. Confidence of detected page element, if applicable. Range `[0, 1]`.",
          "type": "number",
          "format": "float"
        }
      },
      "type": "object",
      "description": "Represents a weak reference to a page element within a document.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef"
    },
    "GoogleCloudDocumentaiV1beta2BoundingPoly": {
      "properties": {
        "normalizedVertices": {
          "type": "array",
          "description": "The bounding polygon normalized vertices.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2NormalizedVertex"
          }
        },
        "vertices": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2Vertex"
          },
          "description": "The bounding polygon vertices."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2BoundingPoly",
      "description": "A bounding polygon for the detected image annotation."
    },
    "GoogleCloudDocumentaiV1DisableProcessorResponse": {
      "id": "GoogleCloudDocumentaiV1DisableProcessorResponse",
      "description": "Response message for the disable processor method. Intentionally empty proto for adding fields in future.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageDimension": {
      "description": "Dimension for the page.",
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageDimension",
      "type": "object",
      "properties": {
        "height": {
          "description": "Page height.",
          "type": "number",
          "format": "float"
        },
        "unit": {
          "description": "Dimension unit.",
          "type": "string"
        },
        "width": {
          "format": "float",
          "type": "number",
          "description": "Page width."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse": {
      "type": "object",
      "description": "Response message for the undeploy processor version method.",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1beta1NormalizedVertex": {
      "id": "GoogleCloudDocumentaiV1beta1NormalizedVertex",
      "type": "object",
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "properties": {
        "y": {
          "format": "float",
          "type": "number",
          "description": "Y coordinate (starts from the top of the image)."
        },
        "x": {
          "format": "float",
          "type": "number",
          "description": "X coordinate."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageMatrix": {
      "type": "object",
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.",
      "properties": {
        "type": {
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "type": "integer",
          "format": "int32"
        },
        "rows": {
          "format": "int32",
          "type": "integer",
          "description": "Number of rows in the matrix."
        },
        "data": {
          "format": "byte",
          "type": "string",
          "description": "The matrix data."
        },
        "cols": {
          "format": "int32",
          "description": "Number of columns in the matrix.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageMatrix"
    },
    "GoogleTypeDateTime": {
      "properties": {
        "year": {
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
          "type": "integer",
          "format": "int32"
        },
        "nanos": {
          "type": "integer",
          "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
          "format": "int32"
        },
        "timeZone": {
          "description": "Time zone.",
          "$ref": "GoogleTypeTimeZone"
        },
        "utcOffset": {
          "format": "google-duration",
          "type": "string",
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }."
        },
        "seconds": {
          "type": "integer",
          "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.",
          "format": "int32"
        },
        "month": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month."
        },
        "day": {
          "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.",
          "type": "integer",
          "format": "int32"
        },
        "hours": {
          "format": "int32",
          "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "type": "integer"
        },
        "minutes": {
          "type": "integer",
          "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
          "format": "int32"
        }
      },
      "id": "GoogleTypeDateTime",
      "type": "object",
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations."
    },
    "GoogleCloudDocumentaiV1beta1GcsDestination": {
      "description": "The Google Cloud Storage location where the output file will be written to.",
      "id": "GoogleCloudDocumentaiV1beta1GcsDestination",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageAnchorPageRef": {
      "properties": {
        "page": {
          "type": "string",
          "format": "int64",
          "description": "Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json."
        },
        "layoutId": {
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead.",
          "type": "string"
        },
        "layoutType": {
          "description": "Optional. The type of the layout element that is being referenced if any.",
          "type": "string",
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ],
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ]
        },
        "confidence": {
          "description": "Optional. Confidence of detected page element, if applicable. Range `[0, 1]`.",
          "type": "number",
          "format": "float"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta3BoundingPoly",
          "description": "Optional. Identifies the bounding polygon of a layout element on the page."
        }
      },
      "description": "Represents a weak reference to a page element within a document.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageAnchorPageRef"
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "description": "The long running operation metadata for delete processor version method."
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextChange": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextChange",
      "description": "This message is used for text changes aka. OCR corrections.",
      "type": "object",
      "properties": {
        "provenance": {
          "description": "The history of this annotation.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
          },
          "type": "array"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index."
        },
        "changedText": {
          "description": "The text that replaces the text identified in the `text_anchor`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata": {
      "properties": {
        "questionId": {
          "description": "The Crowd Compute question ID.",
          "type": "string"
        },
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata",
      "type": "object",
      "description": "The long running operation metadata for review document method."
    },
    "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionResponse",
      "properties": {
        "evaluation": {
          "description": "The resource name of the created evaluation.",
          "type": "string"
        }
      },
      "description": "Metadata of the EvaluateProcessorVersion method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageBlock": {
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
      "properties": {
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Block."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageBlock",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageFormField": {
      "type": "object",
      "description": "A form field detected on the page.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageFormField",
      "properties": {
        "valueDetectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages for value together with confidence."
        },
        "correctedValueText": {
          "type": "string",
          "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction."
        },
        "nameDetectedLanguages": {
          "type": "array",
          "description": "A list of detected languages for name together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "fieldValue": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for the FormField value."
        },
        "valueType": {
          "type": "string",
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`"
        },
        "fieldName": {
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this annotation."
        },
        "correctedKeyText": {
          "type": "string",
          "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview",
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`."
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`."
        }
      },
      "description": "Human Review information of the document."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPage": {
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing."
        },
        "imageQualityScores": {
          "description": "Image Quality Scores.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for the page."
        },
        "transforms": {
          "type": "array",
          "description": "Transformation matrices that were applied to the original document image to produce Page.image.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix"
          }
        },
        "symbols": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageSymbol"
          },
          "type": "array",
          "description": "A list of visually detected symbols on the page."
        },
        "paragraphs": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph"
          },
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.",
          "type": "array"
        },
        "lines": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLine"
          },
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line."
        },
        "dimension": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDimension",
          "description": "Physical dimension of the page."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "tables": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTable"
          },
          "type": "array",
          "description": "A list of visually detected tables on the page."
        },
        "image": {
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImage"
        },
        "visualElements": {
          "type": "array",
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement"
          }
        },
        "formFields": {
          "description": "A list of visually detected form fields on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageFormField"
          },
          "type": "array"
        },
        "detectedBarcodes": {
          "description": "A list of detected barcodes.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode"
          },
          "type": "array"
        },
        "provenance": {
          "description": "The history of this page.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "blocks": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageBlock"
          },
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation."
        },
        "tokens": {
          "description": "A list of visually detected tokens on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageToken"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPage",
      "description": "A page in a Document.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata",
      "type": "object",
      "description": "The long running operation metadata for the undeploy processor version method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1EvaluateProcessorVersionResponse": {
      "type": "object",
      "properties": {
        "evaluation": {
          "description": "The resource name of the created evaluation.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1EvaluateProcessorVersionResponse",
      "description": "Metadata of the EvaluateProcessorVersion method."
    },
    "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus",
      "properties": {
        "gcsUri": {
          "description": "The gcs_uri of the auto-labeling document, which uniquely identifies a dataset document.",
          "type": "string"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of the document auto-labeling."
        }
      },
      "description": "The status of individual documents in the auto-labeling process."
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus": {
      "description": "The status of each individual document in the batch delete process.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus",
      "properties": {
        "status": {
          "description": "The status of deleting the document in storage.",
          "$ref": "GoogleRpcStatus"
        },
        "documentId": {
          "description": "The document id of the document.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3EvaluationMetrics": {
      "properties": {
        "totalDocumentsCount": {
          "type": "integer",
          "description": "The amount of documents that had an occurrence of this label.",
          "format": "int32"
        },
        "truePositivesCount": {
          "description": "The amount of true positives.",
          "type": "integer",
          "format": "int32"
        },
        "predictedOccurrencesCount": {
          "type": "integer",
          "format": "int32",
          "description": "The amount of occurrences in predicted documents."
        },
        "recall": {
          "description": "The calculated recall.",
          "format": "float",
          "type": "number"
        },
        "groundTruthOccurrencesCount": {
          "format": "int32",
          "description": "The amount of occurrences in ground truth documents.",
          "type": "integer"
        },
        "falseNegativesCount": {
          "format": "int32",
          "description": "The amount of false negatives.",
          "type": "integer"
        },
        "groundTruthDocumentCount": {
          "type": "integer",
          "format": "int32",
          "description": "The amount of documents with a ground truth occurrence."
        },
        "precision": {
          "description": "The calculated precision.",
          "type": "number",
          "format": "float"
        },
        "f1Score": {
          "type": "number",
          "description": "The calculated f1 score.",
          "format": "float"
        },
        "falsePositivesCount": {
          "format": "int32",
          "type": "integer",
          "description": "The amount of false positives."
        },
        "predictedDocumentCount": {
          "format": "int32",
          "type": "integer",
          "description": "The amount of documents with a predicted occurrence."
        }
      },
      "description": "Evaluation metrics, either in aggregate or about a specific entity.",
      "id": "GoogleCloudDocumentaiV1beta3EvaluationMetrics",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLine": {
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Line."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLine"
    },
    "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse",
      "type": "object",
      "description": "Metadata of the EvaluateProcessorVersion method.",
      "properties": {
        "evaluation": {
          "type": "string",
          "description": "The resource name of the created evaluation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageLine": {
      "type": "object",
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "description": "Layout for Line.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageLayout"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentProvenance"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageLine"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata": {
      "description": "Metadata message associated with the ExportProcessorVersion operation.",
      "id": "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The common metadata about the operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        },
        "datasetResyncStatuses": {
          "description": "The list of dataset resync statuses. Not checked when `dataset_documents` is specified in ResyncRequest.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus"
          }
        },
        "individualDocumentResyncStatuses": {
          "type": "array",
          "description": "The list of document resync statuses. The same document could have multiple `individual_document_resync_statuses` if it has multiple inconsistencies.",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus"
          }
        }
      },
      "description": "The metadata proto of ResyncDataset method.",
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata"
    },
    "GoogleCloudDocumentaiV1beta2NormalizedVertex": {
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "properties": {
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        },
        "y": {
          "type": "number",
          "format": "float",
          "description": "Y coordinate (starts from the top of the image)."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2NormalizedVertex"
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata",
      "description": "The metadata that represents a processor version being created.",
      "type": "object",
      "properties": {
        "testDatasetValidation": {
          "description": "The test dataset validation information.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation"
        },
        "trainingDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The training dataset validation information."
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores": {
      "type": "object",
      "description": "Image Quality Scores for the page image",
      "properties": {
        "qualityScore": {
          "format": "float",
          "type": "number",
          "description": "The overall quality score. Range `[0, 1]` where 1 is perfect quality."
        },
        "detectedDefects": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect"
          },
          "type": "array",
          "description": "A list of detected defects."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage",
      "type": "object",
      "description": "Detected language for a structural component.",
      "properties": {
        "confidence": {
          "description": "Confidence of detected language. Range `[0, 1]`.",
          "format": "float",
          "type": "number"
        },
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3EnableProcessorMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3EnableProcessorMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "description": "The long running operation metadata for enable processor method."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPage": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPage",
      "type": "object",
      "description": "A page in a Document.",
      "properties": {
        "detectedBarcodes": {
          "description": "A list of detected barcodes.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode"
          },
          "type": "array"
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "image": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImage",
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned."
        },
        "lines": {
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLine"
          }
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for the page."
        },
        "imageQualityScores": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores",
          "description": "Image Quality Scores."
        },
        "transforms": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix"
          },
          "description": "Transformation matrices that were applied to the original document image to produce Page.image."
        },
        "dimension": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDimension",
          "description": "Physical dimension of the page."
        },
        "paragraphs": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph"
          },
          "type": "array",
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph."
        },
        "visualElements": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement"
          },
          "type": "array",
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page."
        },
        "symbols": {
          "description": "A list of visually detected symbols on the page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageSymbol"
          }
        },
        "tables": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTable"
          },
          "type": "array",
          "description": "A list of visually detected tables on the page."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this page."
        },
        "pageNumber": {
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.",
          "type": "integer",
          "format": "int32"
        },
        "formFields": {
          "type": "array",
          "description": "A list of visually detected form fields on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageFormField"
          }
        },
        "tokens": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageToken"
          },
          "description": "A list of visually detected tokens on the page.",
          "type": "array"
        },
        "blocks": {
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageBlock"
          }
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageAnchor": {
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.",
      "type": "object",
      "properties": {
        "pageRefs": {
          "description": "One or more references to visual page elements",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor"
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize": {
      "description": "Font size with unit.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize",
      "properties": {
        "unit": {
          "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.).",
          "type": "string"
        },
        "size": {
          "format": "float",
          "type": "number",
          "description": "Font size for the text."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentRevision": {
      "description": "Contains past or forward revisions of this document.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentRevision",
      "properties": {
        "parentIds": {
          "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "type": "string",
          "description": "Id of the revision, internally generated by doc proto storage. Unique within the context of the document."
        },
        "agent": {
          "type": "string",
          "description": "If the change was made by a person specify the name or id of that person."
        },
        "parent": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array",
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field."
        },
        "processor": {
          "description": "If the annotation was made by processor identify the processor by its resource name.",
          "type": "string"
        },
        "humanReview": {
          "description": "Human Review information of this revision.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview"
        },
        "createTime": {
          "description": "The time that the revision was created, internally generated by doc proto storage at the time of create.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow": {
      "properties": {
        "cells": {
          "description": "Cells that make up this row.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell"
          }
        }
      },
      "type": "object",
      "description": "A row of table cells.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
    },
    "GoogleCloudDocumentaiV1beta3EnableProcessorResponse": {
      "properties": {},
      "description": "Response message for the enable processor method. Intentionally empty proto for adding fields in future.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3EnableProcessorResponse"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageSymbol": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageSymbol",
      "type": "object",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Symbol."
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        }
      },
      "description": "A detected symbol."
    },
    "GoogleCloudDocumentaiV1beta3DisableProcessorRequest": {
      "properties": {},
      "description": "Request message for the disable processor method.",
      "id": "GoogleCloudDocumentaiV1beta3DisableProcessorRequest",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityRelation": {
      "properties": {
        "subjectId": {
          "type": "string",
          "description": "Subject entity id."
        },
        "objectId": {
          "type": "string",
          "description": "Object entity id."
        },
        "relation": {
          "description": "Relationship description.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation",
      "description": "Relationship between Entities.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionRequestInputData": {
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionRequestInputData",
      "properties": {
        "trainingDocuments": {
          "$ref": "GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig",
          "description": "The documents used for training the new version."
        },
        "testDocuments": {
          "$ref": "GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig",
          "description": "The documents used for testing the trained version."
        }
      },
      "description": "The input data used to train a new `ProcessorVersion`.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement": {
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "type": {
          "type": "string",
          "description": "Type of the VisualElement."
        },
        "layout": {
          "description": "Layout for VisualElement.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement",
      "type": "object",
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page."
    },
    "GoogleCloudDocumentaiV1beta3DocumentRevisionHumanReview": {
      "type": "object",
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`.",
          "type": "string"
        },
        "state": {
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DocumentRevisionHumanReview",
      "description": "Human Review information of the document."
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3FetchProcessorTypesResponse": {
      "properties": {
        "processorTypes": {
          "description": "The list of processor types.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3ProcessorType"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3FetchProcessorTypesResponse",
      "description": "Response message for fetch processor types."
    },
    "GoogleCloudDocumentaiV1beta3ListEvaluationsResponse": {
      "properties": {
        "evaluations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3Evaluation"
          },
          "description": "The evaluations requested."
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3ListEvaluationsResponse",
      "description": "The response from ListEvaluations.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DisableProcessorMetadata": {
      "description": "The long running operation metadata for disable processor method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DisableProcessorMetadata"
    },
    "GoogleCloudDocumentaiV1HumanReviewStatus": {
      "id": "GoogleCloudDocumentaiV1HumanReviewStatus",
      "description": "The status of human review on a processed document.",
      "properties": {
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the human review state."
        },
        "humanReviewOperation": {
          "description": "The name of the operation triggered by the processed document. This field is populated only when the [state] is [HUMAN_REVIEW_IN_PROGRESS]. It has the same response type and metadata as the long running operation returned by [ReviewDocument] method.",
          "type": "string"
        },
        "state": {
          "description": "The state of human review on the processing request.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "SKIPPED",
            "VALIDATION_PASSED",
            "IN_PROGRESS",
            "ERROR"
          ],
          "enumDescriptions": [
            "Human review state is unspecified. Most likely due to an internal error.",
            "Human review is skipped for the document. This can happen because human review is not enabled on the processor or the processing request has been set to skip this document.",
            "Human review validation is triggered and passed, so no review is needed.",
            "Human review validation is triggered and the document is under review.",
            "Some error happened during triggering human review, see the [state_message] for details."
          ]
        }
      },
      "type": "object"
    },
    "GoogleTypeColor": {
      "id": "GoogleTypeColor",
      "type": "object",
      "properties": {
        "red": {
          "format": "float",
          "type": "number",
          "description": "The amount of red in the color as a value in the interval [0, 1]."
        },
        "alpha": {
          "format": "float",
          "description": "The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).",
          "type": "number"
        },
        "blue": {
          "description": "The amount of blue in the color as a value in the interval [0, 1].",
          "format": "float",
          "type": "number"
        },
        "green": {
          "type": "number",
          "description": "The amount of green in the color as a value in the interval [0, 1].",
          "format": "float"
        }
      },
      "description": "Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to/from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't carry information about the absolute color space that should be used to interpret the RGB value (e.g. sRGB, Adobe RGB, DCI-P3, BT.2020, etc.). By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most 1e-5. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha \u003c= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red \u003c\u003c 16) | (green \u003c\u003c 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i \u003c missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ..."
    },
    "GoogleCloudDocumentaiV1beta1OutputConfig": {
      "id": "GoogleCloudDocumentaiV1beta1OutputConfig",
      "properties": {
        "pagesPerShard": {
          "type": "integer",
          "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json",
          "format": "int32"
        },
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output to.",
          "$ref": "GoogleCloudDocumentaiV1beta1GcsDestination"
        }
      },
      "type": "object",
      "description": "The desired output location and metadata."
    },
    "GoogleLongrunningOperation": {
      "properties": {
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        }
      },
      "type": "object",
      "id": "GoogleLongrunningOperation",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "GoogleCloudDocumentaiV1EvaluateProcessorVersionMetadata": {
      "description": "Metadata of the EvaluateProcessorVersion method.",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1EvaluateProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta3DocumentPageToken": {
      "properties": {
        "detectedBreak": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageTokenDetectedBreak",
          "description": "Detected break at the end of a Token."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageLayout",
          "description": "Layout for Token."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentProvenance",
          "description": "The history of this annotation."
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        }
      },
      "description": "A detected token.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DocumentPageToken"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageMatrix": {
      "type": "object",
      "properties": {
        "type": {
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "type": "integer",
          "format": "int32"
        },
        "rows": {
          "type": "integer",
          "description": "Number of rows in the matrix.",
          "format": "int32"
        },
        "cols": {
          "format": "int32",
          "type": "integer",
          "description": "Number of columns in the matrix."
        },
        "data": {
          "format": "byte",
          "type": "string",
          "description": "The matrix data."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix",
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation."
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata",
      "description": "The long running operation metadata for review document method.",
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed.",
          "type": "string"
        },
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The creation time of the operation."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "The last update time of the operation.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "description": "Used only when Operation.done is false.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ]
        },
        "questionId": {
          "description": "The Crowd Compute question ID.",
          "type": "string"
        }
      }
    },
    "GoogleCloudLocationLocation": {
      "id": "GoogleCloudLocationLocation",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        }
      },
      "description": "A resource that represents Google Cloud Platform location."
    },
    "GoogleCloudDocumentaiV1beta3Document": {
      "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3Document",
      "properties": {
        "revisions": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentRevision"
          },
          "description": "Placeholder. Revision history of this document.",
          "type": "array"
        },
        "entities": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentEntity"
          },
          "type": "array",
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries."
        },
        "text": {
          "description": "Optional. UTF-8 encoded text in reading order from the document.",
          "type": "string"
        },
        "textChanges": {
          "description": "Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentTextChange"
          }
        },
        "entityRelations": {
          "type": "array",
          "description": "Placeholder. Relationship among Document.entities.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentEntityRelation"
          }
        },
        "uri": {
          "type": "string",
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info."
        },
        "pages": {
          "description": "Visual page layout for the Document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentPage"
          }
        },
        "content": {
          "format": "byte",
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
          "type": "string"
        },
        "mimeType": {
          "description": "An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml.",
          "type": "string"
        },
        "textStyles": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3DocumentStyle"
          },
          "description": "Styles for the Document.text.",
          "type": "array"
        },
        "error": {
          "description": "Any error that occurred while processing this document.",
          "$ref": "GoogleRpcStatus"
        },
        "shardInfo": {
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentShardInfo"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata",
      "type": "object",
      "description": "The long running operation metadata for set default processor version method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3CommonOperationMetadata": {
      "description": "The common metadata for long running operations.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
      "properties": {
        "resource": {
          "type": "string",
          "description": "A related resource to this operation."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The creation time of the operation."
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time of the operation."
        },
        "state": {
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "type": "string",
          "description": "The state of the operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntity": {
      "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntity",
      "properties": {
        "properties": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          },
          "type": "array",
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document."
        },
        "id": {
          "type": "string",
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document."
        },
        "pageAnchor": {
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "Optional. The history of this annotation."
        },
        "confidence": {
          "description": "Optional. Confidence of detected Schema entity. Range `[0, 1]`.",
          "format": "float",
          "type": "number"
        },
        "mentionId": {
          "description": "Optional. Deprecated. Use `id` field instead.",
          "type": "string"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text."
        },
        "redacted": {
          "type": "boolean",
          "description": "Optional. Whether the entity will be redacted for de-identification purposes."
        },
        "normalizedValue": {
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue"
        },
        "mentionText": {
          "description": "Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.",
          "type": "string"
        },
        "type": {
          "description": "Required. Entity type from a schema e.g. `Address`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3GcsDocuments": {
      "id": "GoogleCloudDocumentaiV1beta3GcsDocuments",
      "properties": {
        "documents": {
          "description": "The list of documents.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3GcsDocument"
          },
          "type": "array"
        }
      },
      "description": "Specifies a set of documents on Cloud Storage.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig": {
      "id": "GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig",
      "type": "object",
      "description": "The common config to specify a set of documents used as input.",
      "properties": {
        "gcsPrefix": {
          "$ref": "GoogleCloudDocumentaiV1beta3GcsPrefix",
          "description": "The set of documents that match the specified Cloud Storage `gcs_prefix`."
        },
        "gcsDocuments": {
          "description": "The set of documents individually specified on Cloud Storage.",
          "$ref": "GoogleCloudDocumentaiV1beta3GcsDocuments"
        }
      }
    }
  },
  "title": "Cloud Document AI API",
  "description": "Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "canonicalName": "Document",
  "version": "v1beta3",
  "fullyEncodeReservedExpansion": true,
  "ownerName": "Google",
  "version_module": true,
  "id": "documentai:v1beta3",
  "servicePath": ""
}

{
  "resources": {
    "customers": {
      "resources": {
        "apps": {
          "methods": {
            "countChromeAppRequests": {
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.appdetails.readonly"
              ],
              "id": "chromemanagement.customers.apps.countChromeAppRequests",
              "response": {
                "$ref": "GoogleChromeManagementV1CountChromeAppRequestsResponse"
              },
              "flatPath": "v1/customers/{customersId}/apps:countChromeAppRequests",
              "parameterOrder": [
                "customer"
              ],
              "httpMethod": "GET",
              "path": "v1/{+customer}/apps:countChromeAppRequests",
              "description": "Generate summary of app installation requests.",
              "parameters": {
                "customer": {
                  "pattern": "^customers/[^/]+$",
                  "required": true,
                  "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request.",
                  "location": "path",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Maximum number of results to return. Maximum and default are 50, anything above will be coerced to 50.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "orgUnitId": {
                  "location": "query",
                  "type": "string",
                  "description": "The ID of the organizational unit."
                },
                "orderBy": {
                  "description": "Field used to order results. Supported fields: * request_count * latest_request_time",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "description": "Token to specify the page of the request to be returned.",
                  "location": "query",
                  "type": "string"
                }
              }
            }
          },
          "resources": {
            "android": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "id": "chromemanagement.customers.apps.android.get",
                  "flatPath": "v1/customers/{customersId}/apps/android/{androidId}",
                  "parameters": {
                    "name": {
                      "pattern": "^customers/[^/]+/apps/android/[^/]+$",
                      "required": true,
                      "description": "Required. The app for which details are being queried. Examples: \"customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2\" for the Save to Google Drive Chrome extension version 2.1.2, \"customers/my_customer/apps/android/com.google.android.apps.docs\" for the Google Drive Android app's latest version.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.appdetails.readonly"
                  ],
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleChromeManagementV1AppDetails"
                  },
                  "description": "Get a specific app for a customer by its resource name.",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "chrome": {
              "methods": {
                "get": {
                  "path": "v1/{+name}",
                  "flatPath": "v1/customers/{customersId}/apps/chrome/{chromeId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.appdetails.readonly"
                  ],
                  "httpMethod": "GET",
                  "description": "Get a specific app for a customer by its resource name.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleChromeManagementV1AppDetails"
                  },
                  "id": "chromemanagement.customers.apps.chrome.get",
                  "parameters": {
                    "name": {
                      "pattern": "^customers/[^/]+/apps/chrome/[^/]+$",
                      "description": "Required. The app for which details are being queried. Examples: \"customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2\" for the Save to Google Drive Chrome extension version 2.1.2, \"customers/my_customer/apps/android/com.google.android.apps.docs\" for the Google Drive Android app's latest version.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            },
            "web": {
              "methods": {
                "get": {
                  "response": {
                    "$ref": "GoogleChromeManagementV1AppDetails"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The app for which details are being queried. Examples: \"customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2\" for the Save to Google Drive Chrome extension version 2.1.2, \"customers/my_customer/apps/android/com.google.android.apps.docs\" for the Google Drive Android app's latest version.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^customers/[^/]+/apps/web/[^/]+$"
                    }
                  },
                  "path": "v1/{+name}",
                  "id": "chromemanagement.customers.apps.web.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.appdetails.readonly"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/customers/{customersId}/apps/web/{webId}",
                  "description": "Get a specific app for a customer by its resource name."
                }
              }
            }
          }
        },
        "reports": {
          "methods": {
            "countChromeDevicesThatNeedAttention": {
              "path": "v1/{+customer}/reports:countChromeDevicesThatNeedAttention",
              "httpMethod": "GET",
              "parameterOrder": [
                "customer"
              ],
              "response": {
                "$ref": "GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse"
              },
              "id": "chromemanagement.customers.reports.countChromeDevicesThatNeedAttention",
              "description": "Counts of ChromeOS devices that have not synced policies or have lacked user activity in the past 28 days, are out of date, or are not complaint. Further information can be found here https://support.google.com/chrome/a/answer/10564947",
              "flatPath": "v1/customers/{customersId}/reports:countChromeDevicesThatNeedAttention",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "parameters": {
                "readMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "type": "string",
                  "description": "Required. Mask of the fields that should be populated in the returned report."
                },
                "customer": {
                  "required": true,
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "description": "Required. The customer ID or \"my_customer\" prefixed with \"customers/\"."
                },
                "orgUnitId": {
                  "location": "query",
                  "description": "Optional. The ID of the organizational unit. If omitted, all data will be returned.",
                  "type": "string"
                }
              }
            },
            "countInstalledApps": {
              "id": "chromemanagement.customers.reports.countInstalledApps",
              "description": "Generate report of app installations.",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "Token to specify the page of the request to be returned.",
                  "location": "query"
                },
                "pageSize": {
                  "description": "Maximum number of results to return. Maximum and default are 100.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                },
                "orderBy": {
                  "type": "string",
                  "description": "Field used to order results. Supported order by fields: * app_name * app_type * install_type * number_of_permissions * total_install_count * app_id",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "description": "Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Supported filter fields: * app_name * app_type * install_type * number_of_permissions * total_install_count * latest_profile_active_date * permission_name * app_id",
                  "location": "query"
                },
                "customer": {
                  "required": true,
                  "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request.",
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "type": "string"
                },
                "orgUnitId": {
                  "description": "The ID of the organizational unit.",
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "v1/{+customer}/reports:countInstalledApps",
              "httpMethod": "GET",
              "parameterOrder": [
                "customer"
              ],
              "flatPath": "v1/customers/{customersId}/reports:countInstalledApps",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "response": {
                "$ref": "GoogleChromeManagementV1CountInstalledAppsResponse"
              }
            },
            "findInstalledAppDevices": {
              "parameterOrder": [
                "customer"
              ],
              "description": "Generate report of managed Chrome browser devices that have a specified app installed.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "path": "v1/{+customer}/reports:findInstalledAppDevices",
              "parameters": {
                "appType": {
                  "description": "Type of the app.",
                  "type": "string",
                  "enum": [
                    "APP_TYPE_UNSPECIFIED",
                    "EXTENSION",
                    "APP",
                    "THEME",
                    "HOSTED_APP",
                    "ANDROID_APP"
                  ],
                  "location": "query",
                  "enumDescriptions": [
                    "App type not specified.",
                    "Chrome extension.",
                    "Chrome app.",
                    "Chrome theme.",
                    "Chrome hosted app.",
                    "ARC++ app."
                  ]
                },
                "appId": {
                  "location": "query",
                  "type": "string",
                  "description": "Unique identifier of the app. For Chrome apps and extensions, the 32-character id (e.g. ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g. com.evernote)."
                },
                "orderBy": {
                  "location": "query",
                  "type": "string",
                  "description": "Field used to order results. Supported order by fields: * machine * device_id"
                },
                "orgUnitId": {
                  "location": "query",
                  "type": "string",
                  "description": "The ID of the organizational unit."
                },
                "customer": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request.",
                  "pattern": "^customers/[^/]+$",
                  "required": true
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Maximum number of results to return. Maximum and default are 100.",
                  "format": "int32"
                },
                "pageToken": {
                  "location": "query",
                  "description": "Token to specify the page of the request to be returned.",
                  "type": "string"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Supported filter fields: * last_active_date"
                }
              },
              "response": {
                "$ref": "GoogleChromeManagementV1FindInstalledAppDevicesResponse"
              },
              "flatPath": "v1/customers/{customersId}/reports:findInstalledAppDevices",
              "id": "chromemanagement.customers.reports.findInstalledAppDevices"
            },
            "countPrintJobsByUser": {
              "response": {
                "$ref": "GoogleChromeManagementV1CountPrintJobsByUserResponse"
              },
              "parameters": {
                "customer": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. Customer ID prefixed with \"customers/\" or \"customers/my_customer\" to use the customer associated to the account making the request.",
                  "required": true,
                  "pattern": "^customers/[^/]+$"
                },
                "printerOrgUnitId": {
                  "type": "string",
                  "description": "The ID of the organizational unit for printers. If specified, only print jobs initiated with printers from the specified organizational unit will be counted. If omitted, all print jobs will be counted.",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "description": "Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Note: Only \u003e= and \u003c= comparators are supported in this filter. Supported filter fields: * complete_time",
                  "type": "string"
                },
                "orderBy": {
                  "location": "query",
                  "type": "string",
                  "description": "Field used to order results. If omitted, results will be ordered in ascending order of the 'user_email' field. Supported order_by fields: * user_email * job_count * printer_count * device_count"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Maximum number of results to return. Maximum and default are 100.",
                  "format": "int32",
                  "type": "integer"
                },
                "pageToken": {
                  "description": "Token to specify the page of the response to be returned.",
                  "location": "query",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "id": "chromemanagement.customers.reports.countPrintJobsByUser",
              "flatPath": "v1/customers/{customersId}/reports:countPrintJobsByUser",
              "parameterOrder": [
                "customer"
              ],
              "path": "v1/{+customer}/reports:countPrintJobsByUser",
              "description": "Get a summary of printing done by each user."
            },
            "countChromeDevicesReachingAutoExpirationDate": {
              "flatPath": "v1/customers/{customersId}/reports:countChromeDevicesReachingAutoExpirationDate",
              "parameters": {
                "minAueDate": {
                  "type": "string",
                  "description": "Optional. Maximum expiration date in format yyyy-mm-dd in UTC timezone. If included returns all devices that have already expired and devices with auto expiration date equal to or later than the minimum date.",
                  "location": "query"
                },
                "orgUnitId": {
                  "description": "Optional. The organizational unit ID, if omitted, will return data for all organizational units.",
                  "type": "string",
                  "location": "query"
                },
                "customer": {
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The customer ID or \"my_customer\" prefixed with \"customers/\"."
                },
                "maxAueDate": {
                  "type": "string",
                  "description": "Optional. Maximum expiration date in format yyyy-mm-dd in UTC timezone. If included returns all devices that have already expired and devices with auto expiration date equal to or earlier than the maximum date.",
                  "location": "query"
                }
              },
              "id": "chromemanagement.customers.reports.countChromeDevicesReachingAutoExpirationDate",
              "parameterOrder": [
                "customer"
              ],
              "description": "Generate report of the number of devices expiring in each month of the selected time frame. Devices are grouped by auto update expiration date and model. Further information can be found [here](https://support.google.com/chrome/a/answer/10564947).",
              "path": "v1/{+customer}/reports:countChromeDevicesReachingAutoExpirationDate",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "response": {
                "$ref": "GoogleChromeManagementV1CountChromeDevicesReachingAutoExpirationDateResponse"
              },
              "httpMethod": "GET"
            },
            "enumeratePrintJobs": {
              "parameters": {
                "printerOrgUnitId": {
                  "location": "query",
                  "type": "string",
                  "description": "The ID of the organizational unit for printers. If specified, only print jobs submitted to printers from the specified organizational unit will be returned."
                },
                "customer": {
                  "pattern": "^customers/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. Customer ID prefixed with \"customers/\" or \"customers/my_customer\" to use the customer associated to the account making the request.",
                  "type": "string"
                },
                "orderBy": {
                  "type": "string",
                  "description": "Field used to order results. If not specified, results will be ordered in descending order of the `complete_time` field. Supported order by fields: * title * state * create_time * complete_time * document_page_count * color_mode * duplex_mode * printer * user_email",
                  "location": "query"
                },
                "pageToken": {
                  "description": "A page token received from a previous `EnumeratePrintJobs` call. Provide this to retrieve the subsequent page. If omitted, the first page of results will be returned. When paginating, all other parameters provided to `EnumeratePrintJobs` must match the call that provided the page token.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "description": "The number of print jobs in the page from 0 to 100 inclusive, if page_size is not specified or zero, the size will be 50.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                },
                "filter": {
                  "description": "Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Note: Only \u003e= and \u003c= comparators are supported for `complete_time`. Note: Only = comparator supported for `user_id` and `printer_id`. Supported filter fields: * complete_time * printer_id * user_id",
                  "type": "string",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "GoogleChromeManagementV1EnumeratePrintJobsResponse"
              },
              "path": "v1/{+customer}/reports:enumeratePrintJobs",
              "flatPath": "v1/customers/{customersId}/reports:enumeratePrintJobs",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "httpMethod": "GET",
              "id": "chromemanagement.customers.reports.enumeratePrintJobs",
              "description": "Get a list of print jobs.",
              "parameterOrder": [
                "customer"
              ]
            },
            "countChromeBrowsersNeedingAttention": {
              "response": {
                "$ref": "GoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse"
              },
              "description": "Count of Chrome Browsers that have been recently enrolled, have new policy to be synced, or have no recent activity.",
              "path": "v1/{+customer}/reports:countChromeBrowsersNeedingAttention",
              "parameterOrder": [
                "customer"
              ],
              "parameters": {
                "customer": {
                  "location": "path",
                  "pattern": "^customers/[^/]+$",
                  "required": true,
                  "description": "Required. The customer ID or \"my_customer\" prefixed with \"customers/\".",
                  "type": "string"
                },
                "orgUnitId": {
                  "description": "Optional. The ID of the organizational unit. If omitted, all data will be returned.",
                  "type": "string",
                  "location": "query"
                }
              },
              "id": "chromemanagement.customers.reports.countChromeBrowsersNeedingAttention",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "flatPath": "v1/customers/{customersId}/reports:countChromeBrowsersNeedingAttention",
              "httpMethod": "GET"
            },
            "countPrintJobsByPrinter": {
              "flatPath": "v1/customers/{customersId}/reports:countPrintJobsByPrinter",
              "parameters": {
                "filter": {
                  "location": "query",
                  "description": "Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Note: Only \u003e= and \u003c= comparators are supported in this filter. Supported filter fields: * complete_time",
                  "type": "string"
                },
                "orderBy": {
                  "location": "query",
                  "description": "Field used to order results. If omitted, results will be ordered in ascending order of the 'printer' field. Supported order_by fields: * printer * job_count * device_count * user_count",
                  "type": "string"
                },
                "printerOrgUnitId": {
                  "type": "string",
                  "description": "The ID of the organizational unit for printers. If specified, only data for printers from the specified organizational unit will be returned. If omitted, data for printers from all organizational units will be returned.",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Token to specify the page of the response to be returned."
                },
                "customer": {
                  "type": "string",
                  "description": "Required. Customer ID prefixed with \"customers/\" or \"customers/my_customer\" to use the customer associated to the account making the request.",
                  "location": "path",
                  "pattern": "^customers/[^/]+$",
                  "required": true
                },
                "pageSize": {
                  "format": "int32",
                  "description": "Maximum number of results to return. Maximum and default are 100.",
                  "type": "integer",
                  "location": "query"
                }
              },
              "id": "chromemanagement.customers.reports.countPrintJobsByPrinter",
              "parameterOrder": [
                "customer"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleChromeManagementV1CountPrintJobsByPrinterResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "description": "Get a summary of printing done by each printer.",
              "path": "v1/{+customer}/reports:countPrintJobsByPrinter"
            },
            "countChromeHardwareFleetDevices": {
              "response": {
                "$ref": "GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse"
              },
              "httpMethod": "GET",
              "description": "Counts of devices with a specific hardware specification from the requested hardware type (for example model name, processor type). Further information can be found here https://support.google.com/chrome/a/answer/10564947",
              "flatPath": "v1/customers/{customersId}/reports:countChromeHardwareFleetDevices",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "id": "chromemanagement.customers.reports.countChromeHardwareFleetDevices",
              "parameters": {
                "readMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Required. Mask of the fields that should be populated in the returned report.",
                  "type": "string"
                },
                "orgUnitId": {
                  "description": "Optional. The ID of the organizational unit. If omitted, all data will be returned.",
                  "type": "string",
                  "location": "query"
                },
                "customer": {
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. The customer ID or \"my_customer\"."
                }
              },
              "parameterOrder": [
                "customer"
              ],
              "path": "v1/{+customer}/reports:countChromeHardwareFleetDevices"
            },
            "countChromeVersions": {
              "parameters": {
                "customer": {
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request."
                },
                "pageSize": {
                  "location": "query",
                  "description": "Maximum number of results to return. Maximum and default are 100.",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Token to specify the page of the request to be returned.",
                  "type": "string",
                  "location": "query"
                },
                "orgUnitId": {
                  "description": "The ID of the organizational unit.",
                  "type": "string",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "description": "Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Supported filter fields: * last_active_date",
                  "location": "query"
                }
              },
              "id": "chromemanagement.customers.reports.countChromeVersions",
              "path": "v1/{+customer}/reports:countChromeVersions",
              "flatPath": "v1/customers/{customersId}/reports:countChromeVersions",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "response": {
                "$ref": "GoogleChromeManagementV1CountChromeVersionsResponse"
              },
              "httpMethod": "GET",
              "description": "Generate report of installed Chrome versions.",
              "parameterOrder": [
                "customer"
              ]
            }
          }
        },
        "telemetry": {
          "resources": {
            "notificationConfigs": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/customers/{customersId}/telemetry/notificationConfigs",
                  "path": "v1/{+parent}/telemetry/notificationConfigs",
                  "response": {
                    "$ref": "GoogleChromeManagementV1ListTelemetryNotificationConfigsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.telemetry.readonly"
                  ],
                  "description": "List all telemetry notification configs.",
                  "id": "chromemanagement.customers.telemetry.notificationConfigs.list",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "A page token, received from a previous `ListTelemetryNotificationConfigs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTelemetryNotificationConfigs` must match the call that provided the page token.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The parent which owns the notification configs.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^customers/[^/]+$",
                      "required": true
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of notification configs to return. The service may return fewer than this value. If unspecified, at most 100 notification configs will be returned. The maximum value is 100; values above 100 will be coerced to 100."
                    }
                  }
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^customers/[^/]+$",
                      "description": "Required. The parent resource where this notification config will be created. Format: `customers/{customer}`"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.telemetry.readonly"
                  ],
                  "path": "v1/{+parent}/telemetry/notificationConfigs",
                  "response": {
                    "$ref": "GoogleChromeManagementV1TelemetryNotificationConfig"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/customers/{customersId}/telemetry/notificationConfigs",
                  "description": "Create a telemetry notification config.",
                  "httpMethod": "POST",
                  "id": "chromemanagement.customers.telemetry.notificationConfigs.create",
                  "request": {
                    "$ref": "GoogleChromeManagementV1TelemetryNotificationConfig"
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.telemetry.readonly"
                  ],
                  "description": "Delete a telemetry notification config.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^customers/[^/]+/telemetry/notificationConfigs/[^/]+$",
                      "description": "Required. The name of the notification config to delete. Format: `customers/{customer}/telemetry/notificationConfigs/{notification_config}`"
                    }
                  },
                  "id": "chromemanagement.customers.telemetry.notificationConfigs.delete",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/customers/{customersId}/telemetry/notificationConfigs/{notificationConfigsId}",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "events": {
              "methods": {
                "list": {
                  "description": "List telemetry events.",
                  "id": "chromemanagement.customers.telemetry.events.list",
                  "parameters": {
                    "parent": {
                      "pattern": "^customers/[^/]+$",
                      "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Only include resources that match the filter. Although this parameter is currently optional, this parameter will be required- please specify at least 1 event type. Supported filter fields: - device_id - user_id - device_org_unit_id - user_org_unit_id - timestamp - event_type The \"timestamp\" filter accepts either the Unix Epoch milliseconds format or the RFC3339 UTC \"Zulu\" format with nanosecond resolution and up to nine fractional digits. Both formats should be surrounded by simple double quotes. Examples: \"2014-10-02T15:01:23Z\", \"2014-10-02T15:01:23.045123456Z\", \"1679283943823\"."
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. Maximum number of results to return. Default value is 100. Maximum value is 1000."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Optional. Token to specify next page in the list.",
                      "type": "string"
                    },
                    "readMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "Required. Read mask to specify which fields to return. Although currently required, this field will become optional, while the filter parameter with an event type will be come required."
                    }
                  },
                  "flatPath": "v1/customers/{customersId}/telemetry/events",
                  "path": "v1/{+parent}/telemetry/events",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleChromeManagementV1ListTelemetryEventsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.telemetry.readonly"
                  ]
                }
              }
            },
            "users": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.telemetry.readonly"
                  ],
                  "description": "List all telemetry users.",
                  "httpMethod": "GET",
                  "id": "chromemanagement.customers.telemetry.users.list",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "Only include resources that match the filter. Supported filter fields: - user_id - user_org_unit_id ",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request.",
                      "required": true,
                      "pattern": "^customers/[^/]+$"
                    },
                    "readMask": {
                      "type": "string",
                      "description": "Read mask to specify which fields to return.",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "Token to specify next page in the list.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Maximum number of results to return. Default value is 100. Maximum value is 1000.",
                      "location": "query",
                      "format": "int32"
                    }
                  },
                  "path": "v1/{+parent}/telemetry/users",
                  "flatPath": "v1/customers/{customersId}/telemetry/users",
                  "response": {
                    "$ref": "GoogleChromeManagementV1ListTelemetryUsersResponse"
                  }
                },
                "get": {
                  "flatPath": "v1/customers/{customersId}/telemetry/users/{usersId}",
                  "path": "v1/{+name}",
                  "id": "chromemanagement.customers.telemetry.users.get",
                  "description": "Get telemetry user.",
                  "parameters": {
                    "readMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Read mask to specify which fields to return.",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the `TelemetryUser` to return.",
                      "pattern": "^customers/[^/]+/telemetry/users/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.telemetry.readonly"
                  ],
                  "response": {
                    "$ref": "GoogleChromeManagementV1TelemetryUser"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "devices": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.telemetry.readonly"
                  ],
                  "flatPath": "v1/customers/{customersId}/telemetry/devices/{devicesId}",
                  "id": "chromemanagement.customers.telemetry.devices.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleChromeManagementV1TelemetryDevice"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^customers/[^/]+/telemetry/devices/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the `TelemetryDevice` to return."
                    },
                    "readMask": {
                      "description": "Required. Read mask to specify which fields to return.",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    }
                  },
                  "description": "Get telemetry device."
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/customers/{customersId}/telemetry/devices",
                  "id": "chromemanagement.customers.telemetry.devices.list",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.telemetry.readonly"
                  ],
                  "description": "List all telemetry devices.",
                  "path": "v1/{+parent}/telemetry/devices",
                  "response": {
                    "$ref": "GoogleChromeManagementV1ListTelemetryDevicesResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "Token to specify next page in the list.",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request.",
                      "location": "path",
                      "required": true,
                      "pattern": "^customers/[^/]+$",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. Only include resources that match the filter. Supported filter fields: - org_unit_id - serial_number - device_id - reports_timestamp The \"reports_timestamp\" filter accepts either the Unix Epoch milliseconds format or the RFC3339 UTC \"Zulu\" format with nanosecond resolution and up to nine fractional digits. Both formats should be surrounded by simple double quotes. Examples: \"2014-10-02T15:01:23Z\", \"2014-10-02T15:01:23.045123456Z\", \"1679283943823\".",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Maximum number of results to return. Default value is 100. Maximum value is 1000."
                    },
                    "readMask": {
                      "type": "string",
                      "description": "Required. Read mask to specify which fields to return.",
                      "location": "query",
                      "format": "google-fieldmask"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "mtlsRootUrl": "https://chromemanagement.mtls.googleapis.com/",
  "id": "chromemanagement:v1",
  "kind": "discovery#restDescription",
  "schemas": {
    "GoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse": {
      "description": "Response containing counts for browsers that need attention.",
      "properties": {
        "noRecentActivityCount": {
          "description": "Number of browsers that haven’t had any recent activity",
          "format": "int64",
          "type": "string"
        },
        "recentlyEnrolledCount": {
          "description": "Number of browsers that have been recently enrolled",
          "format": "int64",
          "type": "string"
        },
        "pendingBrowserUpdateCount": {
          "description": "Number of browsers that are pending an OS update",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "GoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse",
      "type": "object"
    },
    "GoogleChromeManagementV1CountChromeDevicesReachingAutoExpirationDateResponse": {
      "type": "object",
      "description": "Response containing a list of devices expiring in each month of a selected time frame. Counts are grouped by model and Auto Update Expiration date.",
      "id": "GoogleChromeManagementV1CountChromeDevicesReachingAutoExpirationDateResponse",
      "properties": {
        "deviceAueCountReports": {
          "items": {
            "$ref": "GoogleChromeManagementV1DeviceAueCountReport"
          },
          "description": "The list of reports sorted by auto update expiration date in ascending order.",
          "type": "array"
        }
      }
    },
    "GoogleChromeManagementV1UsbPeripheralReport": {
      "description": "USB connected peripheral report.",
      "type": "object",
      "properties": {
        "vendor": {
          "description": "Output only. Vendor name",
          "readOnly": true,
          "type": "string"
        },
        "pid": {
          "readOnly": true,
          "format": "int32",
          "type": "integer",
          "description": "Output only. Product ID"
        },
        "classId": {
          "readOnly": true,
          "description": "Output only. Class ID https://www.usb.org/defined-class-codes",
          "type": "integer",
          "format": "int32"
        },
        "categories": {
          "description": "Output only. Categories the device belongs to https://www.usb.org/defined-class-codes",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "vid": {
          "description": "Output only. Vendor ID",
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "description": "Output only. Device name, model name, or product name",
          "readOnly": true,
          "type": "string"
        },
        "subclassId": {
          "readOnly": true,
          "format": "int32",
          "description": "Output only. Subclass ID https://www.usb.org/defined-class-codes",
          "type": "integer"
        },
        "firmwareVersion": {
          "readOnly": true,
          "description": "Output only. Firmware version",
          "type": "string"
        }
      },
      "id": "GoogleChromeManagementV1UsbPeripheralReport"
    },
    "GoogleChromeManagementV1InstalledApp": {
      "id": "GoogleChromeManagementV1InstalledApp",
      "description": "Describes an installed app.",
      "type": "object",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Permissions of the installed app."
        },
        "homepageUri": {
          "description": "Output only. Homepage uri of the installed app.",
          "type": "string",
          "readOnly": true
        },
        "appId": {
          "description": "Output only. Unique identifier of the app. For Chrome apps and extensions, the 32-character id (e.g. ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g. com.evernote).",
          "type": "string",
          "readOnly": true
        },
        "disabled": {
          "readOnly": true,
          "description": "Output only. Whether the app is disabled.",
          "type": "boolean"
        },
        "browserDeviceCount": {
          "readOnly": true,
          "type": "string",
          "format": "int64",
          "description": "Output only. Count of browser devices with this app installed."
        },
        "appSource": {
          "type": "string",
          "enum": [
            "APP_SOURCE_UNSPECIFIED",
            "CHROME_WEBSTORE",
            "PLAY_STORE"
          ],
          "enumDescriptions": [
            "Application source not specified.",
            "Generally for extensions and Chrome apps.",
            "Play Store app."
          ],
          "description": "Output only. Source of the installed app.",
          "readOnly": true
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Description of the installed app."
        },
        "osUserCount": {
          "format": "int64",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Count of ChromeOS users with this app installed."
        },
        "appInstallType": {
          "enum": [
            "APP_INSTALL_TYPE_UNSPECIFIED",
            "MULTIPLE",
            "NORMAL",
            "ADMIN",
            "DEVELOPMENT",
            "SIDELOAD",
            "OTHER"
          ],
          "enumDescriptions": [
            "Application install type not specified.",
            "Multiple app install types.",
            "Normal app install type.",
            "Administrator app install type.",
            "Development app install type.",
            "Sideloaded app install type.",
            "Other app install type."
          ],
          "description": "Output only. How the app was installed.",
          "readOnly": true,
          "type": "string"
        },
        "appType": {
          "enumDescriptions": [
            "App type not specified.",
            "Chrome extension.",
            "Chrome app.",
            "Chrome theme.",
            "Chrome hosted app.",
            "ARC++ app."
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. Type of the app.",
          "enum": [
            "APP_TYPE_UNSPECIFIED",
            "EXTENSION",
            "APP",
            "THEME",
            "HOSTED_APP",
            "ANDROID_APP"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "Output only. Name of the installed app.",
          "readOnly": true
        }
      }
    },
    "GoogleChromeManagementV1PrinterReport": {
      "type": "object",
      "id": "GoogleChromeManagementV1PrinterReport",
      "description": "Report for CountPrintJobsByPrinter, contains statistics on printer usage. Contains the total number of print jobs initiated with this printer, the number of users and the number of devices that have initiated at least one print job with this printer.",
      "properties": {
        "jobCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of print jobs sent to the printer."
        },
        "userCount": {
          "format": "int64",
          "description": "Number of users that have sent print jobs to the printer.",
          "type": "string"
        },
        "printer": {
          "type": "string",
          "description": "Printer name."
        },
        "deviceCount": {
          "description": "Number of chrome devices that have been used to send print jobs to the specified printer.",
          "type": "string",
          "format": "int64"
        },
        "printerModel": {
          "description": "Printer model.",
          "type": "string"
        },
        "printerId": {
          "description": "Printer API ID.",
          "type": "string"
        }
      }
    },
    "GoogleChromeManagementV1CpuInfo": {
      "type": "object",
      "id": "GoogleChromeManagementV1CpuInfo",
      "properties": {
        "architecture": {
          "enumDescriptions": [
            "Architecture unknown.",
            "x64 architecture"
          ],
          "type": "string",
          "description": "Output only. Architecture type for the CPU. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A",
          "readOnly": true,
          "enum": [
            "ARCHITECTURE_UNSPECIFIED",
            "X64"
          ]
        },
        "keylockerSupported": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether keylocker is supported."
        },
        "maxClockSpeed": {
          "readOnly": true,
          "description": "Output only. The max CPU clock speed in kHz.",
          "type": "integer",
          "format": "int32"
        },
        "keylockerConfigured": {
          "type": "boolean",
          "description": "Output only. Whether keylocker is configured.`TRUE` = Enabled; `FALSE` = disabled. Only reported if keylockerSupported = `TRUE`.",
          "readOnly": true
        },
        "model": {
          "description": "Output only. The CPU model name. Example: Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "CPU specifications for the device * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_CPU_INFO"
    },
    "GoogleChromeManagementV1DiskInfo": {
      "properties": {
        "sizeBytes": {
          "type": "string",
          "readOnly": true,
          "format": "int64",
          "description": "Output only. Disk size."
        },
        "serialNumber": {
          "type": "string",
          "description": "Output only. Disk serial number.",
          "readOnly": true
        },
        "bytesReadThisSession": {
          "description": "Output only. Number of bytes read since last boot.",
          "format": "int64",
          "readOnly": true,
          "type": "string"
        },
        "bytesWrittenThisSession": {
          "readOnly": true,
          "description": "Output only. Number of bytes written since last boot.",
          "format": "int64",
          "type": "string"
        },
        "discardTimeThisSession": {
          "readOnly": true,
          "format": "google-duration",
          "type": "string",
          "description": "Output only. Time spent discarding since last boot. Discarding is writing to clear blocks which are no longer in use. Supported on kernels 4.18+."
        },
        "health": {
          "readOnly": true,
          "description": "Output only. Disk health.",
          "type": "string"
        },
        "writeTimeThisSession": {
          "type": "string",
          "format": "google-duration",
          "readOnly": true,
          "description": "Output only. Time spent writing to disk since last boot."
        },
        "model": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Disk model."
        },
        "ioTimeThisSession": {
          "description": "Output only. Counts the time the disk and queue were busy, so unlike the fields above, parallel requests are not counted multiple times.",
          "readOnly": true,
          "format": "google-duration",
          "type": "string"
        },
        "type": {
          "readOnly": true,
          "description": "Output only. Disk type: eMMC / NVMe / ATA / SCSI.",
          "type": "string"
        },
        "readTimeThisSession": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Time spent reading from disk since last boot.",
          "format": "google-duration"
        },
        "manufacturer": {
          "description": "Output only. Disk manufacturer.",
          "type": "string",
          "readOnly": true
        },
        "volumeIds": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "Output only. Disk volumes."
        }
      },
      "type": "object",
      "description": "Status of the single storage device.",
      "id": "GoogleChromeManagementV1DiskInfo"
    },
    "GoogleChromeManagementV1ChromeAppInfo": {
      "type": "object",
      "properties": {
        "type": {
          "readOnly": true,
          "enum": [
            "ITEM_TYPE_UNSPECIFIED",
            "EXTENSION",
            "OTHERS"
          ],
          "description": "Output only. Types of an item in the Chrome Web Store",
          "type": "string",
          "enumDescriptions": [
            "Unspecified ItemType.",
            "Chrome Extensions.",
            "Any other type than extension."
          ]
        },
        "isTheme": {
          "type": "boolean",
          "description": "Output only. Whether the app or extension is a theme.",
          "readOnly": true
        },
        "permissions": {
          "type": "array",
          "description": "Output only. Every custom permission requested by the app. Version-specific field that will only be set when the requested app version is found.",
          "items": {
            "$ref": "GoogleChromeManagementV1ChromeAppPermission"
          },
          "readOnly": true
        },
        "supportEnabled": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. The app developer has enabled support for their app. Version-specific field that will only be set when the requested app version is found."
        },
        "minUserCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Output only. The minimum number of users using this app."
        },
        "siteAccess": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1ChromeAppSiteAccess"
          },
          "description": "Output only. Every permission giving access to domains or broad host patterns. ( e.g. www.google.com). This includes the matches from content scripts as well as hosts in the permissions node of the manifest. Version-specific field that will only be set when the requested app version is found."
        },
        "kioskEnabled": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether this app is enabled for Kiosk mode on ChromeOS devices"
        },
        "isCwsHosted": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether the app or extension is in a published state in the Chrome Web Store."
        },
        "googleOwned": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether the app or extension is built and maintained by Google. Version-specific field that will only be set when the requested app version is found."
        },
        "isExtensionPolicySupported": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether an app supports policy for extensions."
        },
        "isKioskOnly": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether the app is only for Kiosk mode on ChromeOS devices"
        }
      },
      "description": "Chrome Web Store app information.",
      "id": "GoogleChromeManagementV1ChromeAppInfo"
    },
    "GoogleChromeManagementV1CountChromeVersionsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to specify the next page of the request."
        },
        "browserVersions": {
          "items": {
            "$ref": "GoogleChromeManagementV1BrowserVersion"
          },
          "type": "array",
          "description": "List of all browser versions and their install counts."
        },
        "totalSize": {
          "format": "int32",
          "type": "integer",
          "description": "Total number browser versions matching request."
        }
      },
      "type": "object",
      "id": "GoogleChromeManagementV1CountChromeVersionsResponse",
      "description": "Response containing requested browser versions details and counts."
    },
    "GoogleChromeManagementV1TelemetryNotificationFilter": {
      "type": "object",
      "properties": {
        "telemetryEventNotificationFilter": {
          "description": "Only sends notifications for the telemetry events matching this filter.",
          "$ref": "GoogleChromeManagementV1TelemetryEventNotificationFilter"
        },
        "userEmail": {
          "type": "string",
          "description": "If set, only sends notifications for telemetry data coming from devices owned by this user."
        },
        "deviceOrgUnitId": {
          "type": "string",
          "description": "If set, only sends notifications for telemetry data coming from devices in this org unit."
        },
        "userOrgUnitId": {
          "type": "string",
          "description": "If set, only sends notifications for telemetry data coming from devices owned by users in this org unit."
        },
        "deviceId": {
          "description": "If set, only sends notifications for telemetry data coming from this device.",
          "type": "string"
        }
      },
      "description": "Configures how the telemetry data should be filtered.",
      "id": "GoogleChromeManagementV1TelemetryNotificationFilter"
    },
    "GoogleChromeManagementV1BatteryInfo": {
      "properties": {
        "manufacturer": {
          "description": "Output only. Battery manufacturer.",
          "readOnly": true,
          "type": "string"
        },
        "technology": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Technology of the battery. Example: Li-ion"
        },
        "designMinVoltage": {
          "format": "int32",
          "readOnly": true,
          "description": "Output only. Designed minimum output voltage (mV)",
          "type": "integer"
        },
        "manufactureDate": {
          "readOnly": true,
          "description": "Output only. The date the battery was manufactured.",
          "$ref": "GoogleTypeDate"
        },
        "serialNumber": {
          "description": "Output only. Battery serial number.",
          "type": "string",
          "readOnly": true
        },
        "designCapacity": {
          "readOnly": true,
          "description": "Output only. Design capacity (mAmpere-hours).",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "GoogleChromeManagementV1BatteryInfo",
      "type": "object",
      "description": "Information about the battery. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDevicePowerStatus](https://chromeenterprise.google/policies/#ReportDevicePowerStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_BATTERY_INFO"
    },
    "GoogleChromeManagementV1PeripheralsReport": {
      "id": "GoogleChromeManagementV1PeripheralsReport",
      "properties": {
        "reportTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Timestamp of when the report was collected.",
          "readOnly": true
        },
        "usbPeripheralReport": {
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1UsbPeripheralReport"
          },
          "description": "Reports of all usb connected devices."
        }
      },
      "type": "object",
      "description": "Peripherals report. * Granular permission needed: TELEMETRY_API_PERIPHERALS_REPORT"
    },
    "GoogleChromeManagementV1GraphicsInfo": {
      "type": "object",
      "id": "GoogleChromeManagementV1GraphicsInfo",
      "description": "Information of the graphics subsystem. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceGraphicsStatus](https://chromeenterprise.google/policies/#ReportDeviceGraphicsStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_GRAPHICS_INFO",
      "properties": {
        "touchScreenInfo": {
          "readOnly": true,
          "$ref": "GoogleChromeManagementV1TouchScreenInfo",
          "description": "Output only. Information about the internal touch screen(s) of the device."
        },
        "displayDevices": {
          "readOnly": true,
          "description": "Output only. Information about the display(s) of the device.",
          "items": {
            "$ref": "GoogleChromeManagementV1DisplayDevice"
          },
          "type": "array"
        },
        "eprivacySupported": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Is ePrivacy screen supported or not."
        },
        "adapterInfo": {
          "readOnly": true,
          "description": "Output only. Information about the graphics adapter (GPU).",
          "$ref": "GoogleChromeManagementV1GraphicsAdapterInfo"
        }
      }
    },
    "GoogleChromeManagementV1PrintJob": {
      "properties": {
        "documentPageCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of pages in the document."
        },
        "id": {
          "description": "Unique ID of the print job.",
          "type": "string"
        },
        "title": {
          "description": "The title of the document.",
          "type": "string"
        },
        "colorMode": {
          "enumDescriptions": [
            "Unspecified.",
            "Black and white.",
            "Color."
          ],
          "description": "Color mode.",
          "type": "string",
          "enum": [
            "COLOR_MODE_UNSPECIFIED",
            "BLACK_AND_WHITE",
            "COLOR"
          ]
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Print job creation timestamp."
        },
        "printerId": {
          "description": "API ID of the printer used for printing.",
          "type": "string"
        },
        "copyCount": {
          "type": "integer",
          "description": "Number of copies.",
          "format": "int32"
        },
        "userEmail": {
          "type": "string",
          "description": "The primary e-mail address of the user who submitted the print job."
        },
        "state": {
          "description": "The final state of the job.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PRINTED",
            "CANCELLED",
            "FAILED"
          ],
          "enumDescriptions": [
            "Print job is in an unspecified state.",
            "The document was successfully printed.",
            "Print job was cancelled.",
            "Print job failed."
          ],
          "type": "string"
        },
        "userId": {
          "description": "The unique Directory API ID of the user who submitted the print job.",
          "type": "string"
        },
        "completeTime": {
          "description": "Print job completion timestamp.",
          "format": "google-datetime",
          "type": "string"
        },
        "duplexMode": {
          "enum": [
            "DUPLEX_MODE_UNSPECIFIED",
            "ONE_SIDED",
            "TWO_SIDED_LONG_EDGE",
            "TWO_SIDED_SHORT_EDGE"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "One-sided.",
            "Two-sided flipping over long edge.",
            "Two-sided flipping over short edge."
          ],
          "type": "string",
          "description": "Duplex mode."
        },
        "printer": {
          "type": "string",
          "description": "Name of the printer used for printing."
        }
      },
      "type": "object",
      "id": "GoogleChromeManagementV1PrintJob",
      "description": "Represents a request to print a document that has been submitted to a printer."
    },
    "GoogleChromeManagementV1BatterySampleReport": {
      "properties": {
        "current": {
          "description": "Output only. Battery current (mA).",
          "format": "int64",
          "readOnly": true,
          "type": "string"
        },
        "chargeRate": {
          "format": "int32",
          "readOnly": true,
          "description": "Output only. Battery charge percentage.",
          "type": "integer"
        },
        "temperature": {
          "description": "Output only. Temperature in Celsius degrees.",
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "reportTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Timestamp of when the sample was collected on device"
        },
        "dischargeRate": {
          "readOnly": true,
          "description": "Output only. The battery discharge rate measured in mW. Positive if the battery is being discharged, negative if it's being charged.",
          "type": "integer",
          "format": "int32"
        },
        "remainingCapacity": {
          "readOnly": true,
          "type": "string",
          "format": "int64",
          "description": "Output only. Battery remaining capacity (mAmpere-hours)."
        },
        "status": {
          "type": "string",
          "description": "Output only. Battery status read from sysfs. Example: Discharging",
          "readOnly": true
        },
        "voltage": {
          "format": "int64",
          "readOnly": true,
          "description": "Output only. Battery voltage (millivolt).",
          "type": "string"
        }
      },
      "description": "Sampling data for battery. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDevicePowerStatus](https://chromeenterprise.google/policies/#ReportDevicePowerStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A",
      "id": "GoogleChromeManagementV1BatterySampleReport",
      "type": "object"
    },
    "GoogleChromeManagementV1AudioStatusReport": {
      "description": "Status data for storage. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceAudioStatus](https://chromeenterprise.google/policies/#ReportDeviceAudioStatus) * Data Collection Frequency: 10 minutes * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_AUDIO_REPORT",
      "type": "object",
      "properties": {
        "outputMute": {
          "type": "boolean",
          "description": "Output only. Is active output device mute or not.",
          "readOnly": true
        },
        "inputMute": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Is active input device mute or not."
        },
        "reportTime": {
          "readOnly": true,
          "description": "Output only. Timestamp of when the sample was collected on device.",
          "type": "string",
          "format": "google-datetime"
        },
        "outputDevice": {
          "description": "Output only. Active output device's name.",
          "type": "string",
          "readOnly": true
        },
        "inputDevice": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Active input device's name."
        },
        "outputVolume": {
          "format": "int32",
          "type": "integer",
          "description": "Output only. Active output device's volume in [0, 100].",
          "readOnly": true
        },
        "inputGain": {
          "readOnly": true,
          "description": "Output only. Active input device's gain in [0, 100].",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "GoogleChromeManagementV1AudioStatusReport"
    },
    "GoogleChromeManagementV1GraphicsAdapterInfo": {
      "description": "Information of a graphics adapter (GPU).",
      "type": "object",
      "properties": {
        "driverVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Version of the GPU driver."
        },
        "adapter": {
          "description": "Output only. Adapter name. Example: Mesa DRI Intel(R) UHD Graphics 620 (Kabylake GT2).",
          "type": "string",
          "readOnly": true
        },
        "deviceId": {
          "description": "Output only. Represents the graphics card device id.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        }
      },
      "id": "GoogleChromeManagementV1GraphicsAdapterInfo"
    },
    "GoogleChromeManagementV1DisplayInfo": {
      "description": "Information for a display.",
      "id": "GoogleChromeManagementV1DisplayInfo",
      "properties": {
        "resolutionHeight": {
          "format": "int32",
          "readOnly": true,
          "description": "Output only. Resolution height in pixels.",
          "type": "integer"
        },
        "resolutionWidth": {
          "description": "Output only. Resolution width in pixels.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "deviceId": {
          "readOnly": true,
          "format": "int64",
          "type": "string",
          "description": "Output only. Represents the graphics card device id."
        },
        "refreshRate": {
          "description": "Output only. Refresh rate in Hz.",
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        },
        "displayName": {
          "readOnly": true,
          "description": "Output only. Display device name.",
          "type": "string"
        },
        "isInternal": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Indicates if display is internal or not."
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1AppDetails": {
      "description": "Resource representing app details.",
      "id": "GoogleChromeManagementV1AppDetails",
      "type": "object",
      "properties": {
        "revisionId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. App version. A new revision is committed whenever a new version of the app is published."
        },
        "reviewNumber": {
          "type": "string",
          "description": "Output only. Number of reviews received. Chrome Web Store review information will always be for the latest version of an app.",
          "format": "int64",
          "readOnly": true
        },
        "latestPublishTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Latest published time.",
          "type": "string"
        },
        "androidAppInfo": {
          "$ref": "GoogleChromeManagementV1AndroidAppInfo",
          "readOnly": true,
          "description": "Output only. Android app information."
        },
        "privacyPolicyUri": {
          "readOnly": true,
          "description": "Output only. The URI pointing to the privacy policy of the app, if it was provided by the developer. Version-specific field that will only be set when the requested app version is found.",
          "type": "string"
        },
        "displayName": {
          "readOnly": true,
          "description": "Output only. App's display name.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. App's description."
        },
        "chromeAppInfo": {
          "readOnly": true,
          "$ref": "GoogleChromeManagementV1ChromeAppInfo",
          "description": "Output only. Chrome Web Store app information."
        },
        "name": {
          "description": "Output only. Format: name=customers/{customer_id}/apps/{chrome|android|web}/{app_id}@{version}",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "App type unspecified.",
            "Chrome app.",
            "ARC++ app.",
            "Web app."
          ],
          "enum": [
            "APP_ITEM_TYPE_UNSPECIFIED",
            "CHROME",
            "ANDROID",
            "WEB"
          ],
          "description": "Output only. App type.",
          "readOnly": true
        },
        "appId": {
          "description": "Output only. Unique store identifier for the item. Examples: \"gmbmikajjgmnabiglmofipeabaddhgne\" for the Save to Google Drive Chrome extension, \"com.google.android.apps.docs\" for the Google Drive Android app.",
          "type": "string",
          "readOnly": true
        },
        "iconUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. A link to an image that can be used as an icon for the product."
        },
        "publisher": {
          "description": "Output only. The publisher of the item.",
          "readOnly": true,
          "type": "string"
        },
        "homepageUri": {
          "description": "Output only. Home page or Website uri.",
          "type": "string",
          "readOnly": true
        },
        "serviceError": {
          "$ref": "GoogleRpcStatus",
          "readOnly": true,
          "description": "Output only. Information about a partial service error if applicable."
        },
        "reviewRating": {
          "type": "number",
          "readOnly": true,
          "description": "Output only. The rating of the app (on 5 stars). Chrome Web Store review information will always be for the latest version of an app.",
          "format": "float"
        },
        "firstPublishTime": {
          "type": "string",
          "description": "Output only. First published time.",
          "format": "google-datetime",
          "readOnly": true
        },
        "isPaidApp": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Indicates if the app has to be paid for OR has paid content."
        },
        "detailUri": {
          "description": "Output only. The uri for the detail page of the item.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleChromeManagementV1CountPrintJobsByUserResponse": {
      "type": "object",
      "id": "GoogleChromeManagementV1CountPrintJobsByUserResponse",
      "properties": {
        "totalSize": {
          "description": "Total number of users matching request.",
          "type": "string",
          "format": "int64"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token for requesting the next page."
        },
        "userPrintReports": {
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1UserPrintReport"
          },
          "description": "List of UserPrintReports matching request."
        }
      },
      "description": "Response containing a summary printing report for each user that has initiated a print job with a printer from the specified organizational unit during the requested time interval."
    },
    "GoogleChromeManagementV1StorageInfo": {
      "id": "GoogleChromeManagementV1StorageInfo",
      "properties": {
        "volume": {
          "items": {
            "$ref": "GoogleChromeManagementV1StorageInfoDiskVolume"
          },
          "type": "array",
          "description": "Information for disk volumes"
        },
        "availableDiskBytes": {
          "format": "int64",
          "description": "The available space for user data storage in the device in bytes.",
          "type": "string"
        },
        "totalDiskBytes": {
          "description": "The total space for user data storage in the device in bytes.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Status data for storage. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceStorageStatus](https://chromeenterprise.google/policies/#ReportDeviceStorageStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_STORAGE_INFO",
      "type": "object"
    },
    "GoogleChromeManagementV1TouchScreenDevice": {
      "properties": {
        "stylusCapable": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Touch screen device is stylus capable or not."
        },
        "displayName": {
          "description": "Output only. Touch screen device display name.",
          "type": "string",
          "readOnly": true
        },
        "touchPointCount": {
          "readOnly": true,
          "description": "Output only. Number of touch points supported on the device.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "GoogleChromeManagementV1TouchScreenDevice",
      "description": "Information of an internal touch screen device.",
      "type": "object"
    },
    "GoogleChromeManagementV1StorageInfoDiskVolume": {
      "id": "GoogleChromeManagementV1StorageInfoDiskVolume",
      "description": "Information for disk volumes",
      "properties": {
        "storageFreeBytes": {
          "type": "string",
          "format": "int64",
          "description": "Free storage space in bytes."
        },
        "volumeId": {
          "type": "string",
          "description": "Disk volume id."
        },
        "storageTotalBytes": {
          "description": "Total storage space in bytes.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1CpuStatusReport": {
      "type": "object",
      "properties": {
        "cpuUtilizationPct": {
          "description": "Output only. Sample of CPU utilization (0-100 percent).",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "reportTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp in milliseconds representing time at which this report was sampled.",
          "readOnly": true
        },
        "sampleFrequency": {
          "readOnly": true,
          "description": "Output only. Frequency the report is sampled.",
          "format": "google-duration",
          "type": "string"
        },
        "cpuTemperatureInfo": {
          "items": {
            "$ref": "GoogleChromeManagementV1CpuTemperatureInfo"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. CPU temperature sample info per CPU core in Celsius"
        }
      },
      "description": "Provides information about the status of the CPU. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Every 10 minutes * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_CPU_REPORT",
      "id": "GoogleChromeManagementV1CpuStatusReport"
    },
    "GoogleChromeManagementV1KioskAppStatusReport": {
      "id": "GoogleChromeManagementV1KioskAppStatusReport",
      "description": "Kiosk app status report of a device. * Available for Kiosks * This field provides the app id and version number running on a kiosk device and the timestamp of when the report was last updated * Data for this field is controlled via policy: [ReportDeviceSessionStatus](https://chromeenterprise.google/policies/#ReportDeviceSessionStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_APPS_REPORT",
      "type": "object",
      "properties": {
        "reportTime": {
          "description": "Timestamp of when report was collected",
          "format": "google-datetime",
          "type": "string"
        },
        "appId": {
          "type": "string",
          "description": "App id of kiosk app for example \"mdmkkicfmmkgmpkmkdikhlbggogpicma\""
        },
        "appVersion": {
          "type": "string",
          "description": "App version number of kiosk app for example \"1.10.118\""
        }
      }
    },
    "GoogleChromeManagementV1MemoryStatusReport": {
      "description": "Contains samples of memory status reports. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceMemoryInfo](https://chromeenterprise.google/policies/#ReportDeviceMemoryInfo) * Data Collection Frequency: Only at upload, SystemRamFreeByes is collected every 10 minutes * Default Data Reporting Frequency: Every 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_MEMORY_REPORT",
      "properties": {
        "pageFaults": {
          "format": "int32",
          "readOnly": true,
          "description": "Output only. Number of page faults during this collection",
          "type": "integer"
        },
        "sampleFrequency": {
          "readOnly": true,
          "description": "Output only. Frequency the report is sampled.",
          "type": "string",
          "format": "google-duration"
        },
        "reportTime": {
          "description": "Output only. The timestamp in milliseconds representing time at which this report was sampled.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "systemRamFreeBytes": {
          "description": "Output only. Amount of free RAM in bytes (unreliable due to Garbage Collection).",
          "readOnly": true,
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GoogleChromeManagementV1MemoryStatusReport",
      "type": "object"
    },
    "GoogleChromeManagementV1Device": {
      "description": "Describes a device reporting Chrome browser information.",
      "type": "object",
      "properties": {
        "deviceId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The ID of the device that reported this Chrome browser information."
        },
        "machine": {
          "type": "string",
          "description": "Output only. The name of the machine within its local network.",
          "readOnly": true
        }
      },
      "id": "GoogleChromeManagementV1Device"
    },
    "GoogleChromeManagementV1ChromeAppPermission": {
      "description": "Permission requested by a Chrome app or extension.",
      "properties": {
        "documentationUri": {
          "description": "Output only. If available, a URI to a page that has documentation for the current permission.",
          "type": "string",
          "readOnly": true
        },
        "accessUserData": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. If available, whether this permissions grants the app/extension access to user data."
        },
        "type": {
          "readOnly": true,
          "description": "Output only. The type of the permission.",
          "type": "string"
        }
      },
      "id": "GoogleChromeManagementV1ChromeAppPermission",
      "type": "object"
    },
    "GoogleChromeManagementV1ChromeAppRequest": {
      "id": "GoogleChromeManagementV1ChromeAppRequest",
      "properties": {
        "displayName": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. App's display name."
        },
        "detailUri": {
          "description": "Output only. The uri for the detail page of the item.",
          "type": "string",
          "readOnly": true
        },
        "appId": {
          "description": "Output only. Unique store identifier for the app. Example: \"gmbmikajjgmnabiglmofipeabaddhgne\" for the Save to Google Drive Chrome extension.",
          "type": "string",
          "readOnly": true
        },
        "iconUri": {
          "type": "string",
          "description": "Output only. A link to an image that can be used as an icon for the product.",
          "readOnly": true
        },
        "requestCount": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Total count of requests for this app.",
          "format": "int64"
        },
        "appDetails": {
          "readOnly": true,
          "description": "Output only. Format: app_details=customers/{customer_id}/apps/chrome/{app_id}",
          "type": "string"
        },
        "latestRequestTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp of the most recently made request for this app."
        }
      },
      "description": "Details of an app installation request.",
      "type": "object"
    },
    "GoogleChromeManagementV1MemoryInfo": {
      "description": "Memory information of a device. * This field has both telemetry and device information: - `totalRamBytes` - Device information - `availableRamBytes` - Telemetry information - `totalMemoryEncryption` - Device information * Data for this field is controlled via policy: [ReportDeviceMemoryInfo](https://chromeenterprise.google/policies/#ReportDeviceMemoryInfo) * Data Collection Frequency: - `totalRamBytes` - Only at upload - `availableRamBytes` - Every 10 minutes - `totalMemoryEncryption` - at device startup * Default Data Reporting Frequency: - `totalRamBytes` - 3 hours - `availableRamBytes` - 3 hours - `totalMemoryEncryption` - at device startup - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: only for `totalMemoryEncryption` * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_MEMORY_INFO",
      "id": "GoogleChromeManagementV1MemoryInfo",
      "type": "object",
      "properties": {
        "availableRamBytes": {
          "format": "int64",
          "type": "string",
          "description": "Output only. Amount of available RAM in bytes.",
          "readOnly": true
        },
        "totalRamBytes": {
          "description": "Output only. Total RAM in bytes.",
          "type": "string",
          "readOnly": true,
          "format": "int64"
        },
        "totalMemoryEncryption": {
          "readOnly": true,
          "$ref": "GoogleChromeManagementV1TotalMemoryEncryptionInfo",
          "description": "Output only. Total memory encryption info for the device."
        }
      }
    },
    "GoogleChromeManagementV1ChromeAppSiteAccess": {
      "id": "GoogleChromeManagementV1ChromeAppSiteAccess",
      "properties": {
        "hostMatch": {
          "description": "Output only. This can contain very specific hosts, or patterns like \"*.com\" for instance.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Represent one host permission.",
      "type": "object"
    },
    "GoogleChromeManagementV1BootPerformanceReport": {
      "properties": {
        "shutdownDuration": {
          "type": "string",
          "format": "google-duration",
          "description": "Total time since shutdown start to power off."
        },
        "bootUpDuration": {
          "format": "google-duration",
          "type": "string",
          "description": "Total time to boot up."
        },
        "reportTime": {
          "type": "string",
          "description": "Timestamp when the report was collected.",
          "format": "google-datetime"
        },
        "shutdownReason": {
          "enumDescriptions": [
            "Shutdown reason is not specified.",
            "User initiated.",
            "System update initiated.",
            "Shutdown due to low battery.",
            "Shutdown due to other reasons."
          ],
          "enum": [
            "SHUTDOWN_REASON_UNSPECIFIED",
            "USER_REQUEST",
            "SYSTEM_UPDATE",
            "LOW_BATTERY",
            "OTHER"
          ],
          "description": "The shutdown reason.",
          "type": "string"
        },
        "shutdownTime": {
          "description": "The timestamp when shutdown.",
          "type": "string",
          "format": "google-datetime"
        },
        "bootUpTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The timestamp when power came on."
        }
      },
      "description": "Boot performance report of a device. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceBootMode](https://chromeenterprise.google/policies/#ReportDeviceBootMode) * Data Collection Frequency: On every boot up event * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_OS_REPORT",
      "id": "GoogleChromeManagementV1BootPerformanceReport",
      "type": "object"
    },
    "GoogleChromeManagementV1OsUpdateStatus": {
      "id": "GoogleChromeManagementV1OsUpdateStatus",
      "type": "object",
      "properties": {
        "lastUpdateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Timestamp of the last successful update.",
          "readOnly": true
        },
        "updateState": {
          "readOnly": true,
          "description": "Output only. Current state of the os update.",
          "enumDescriptions": [
            "State unspecified.",
            "OS has not started downloading.",
            "OS has started download on device.",
            "Device needs reboot to finish upload."
          ],
          "type": "string",
          "enum": [
            "UPDATE_STATE_UNSPECIFIED",
            "OS_IMAGE_DOWNLOAD_NOT_STARTED",
            "OS_IMAGE_DOWNLOAD_IN_PROGRESS",
            "OS_UPDATE_NEED_REBOOT"
          ]
        },
        "newRequestedPlatformVersion": {
          "readOnly": true,
          "description": "Output only. New requested platform version from the pending updated kiosk app.",
          "type": "string"
        },
        "lastRebootTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Timestamp of the last reboot."
        },
        "lastUpdateCheckTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Timestamp of the last update check."
        },
        "newPlatformVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. New platform version of the os image being downloaded and applied. It is only set when update status is OS_IMAGE_DOWNLOAD_IN_PROGRESS or OS_UPDATE_NEED_REBOOT. Note this could be a dummy \"0.0.0.0\" for OS_UPDATE_NEED_REBOOT status for some edge cases, e.g. update engine is restarted without a reboot."
        }
      },
      "description": "Contains information regarding the current OS update status. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceOsUpdateStatus](https://chromeenterprise.google/policies/#ReportDeviceOsUpdateStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_OS_REPORT"
    },
    "GoogleChromeManagementV1CountChromeAppRequestsResponse": {
      "properties": {
        "totalSize": {
          "format": "int32",
          "type": "integer",
          "description": "Total number of matching app requests."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to specify the next page in the list."
        },
        "requestedApps": {
          "description": "Count of requested apps matching request.",
          "items": {
            "$ref": "GoogleChromeManagementV1ChromeAppRequest"
          },
          "type": "array"
        }
      },
      "id": "GoogleChromeManagementV1CountChromeAppRequestsResponse",
      "description": "Response containing summary of requested app installations.",
      "type": "object"
    },
    "GoogleChromeManagementV1TelemetryDevice": {
      "id": "GoogleChromeManagementV1TelemetryDevice",
      "description": "Telemetry data collected from a managed device. * Granular permission needed: TELEMETRY_API_DEVICE",
      "properties": {
        "thunderboltInfo": {
          "readOnly": true,
          "description": "Output only. Information on Thunderbolt bus.",
          "items": {
            "$ref": "GoogleChromeManagementV1ThunderboltInfo"
          },
          "type": "array"
        },
        "graphicsStatusReport": {
          "items": {
            "$ref": "GoogleChromeManagementV1GraphicsStatusReport"
          },
          "type": "array",
          "description": "Output only. Graphics reports collected periodically.",
          "readOnly": true
        },
        "cpuInfo": {
          "items": {
            "$ref": "GoogleChromeManagementV1CpuInfo"
          },
          "type": "array",
          "description": "Output only. Information regarding CPU specs for the device.",
          "readOnly": true
        },
        "storageStatusReport": {
          "description": "Output only. Storage reports collected periodically.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "GoogleChromeManagementV1StorageStatusReport"
          }
        },
        "heartbeatStatusReport": {
          "items": {
            "$ref": "GoogleChromeManagementV1HeartbeatStatusReport"
          },
          "type": "array",
          "description": "Output only. Heartbeat status report containing timestamps periodically sorted in decreasing order of report_time",
          "readOnly": true
        },
        "memoryStatusReport": {
          "items": {
            "$ref": "GoogleChromeManagementV1MemoryStatusReport"
          },
          "description": "Output only. Memory status reports collected periodically sorted decreasing by report_time.",
          "readOnly": true,
          "type": "array"
        },
        "orgUnitId": {
          "type": "string",
          "description": "Output only. Organization unit ID of the device.",
          "readOnly": true
        },
        "customer": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Google Workspace Customer whose enterprise enrolled the device."
        },
        "kioskAppStatusReport": {
          "items": {
            "$ref": "GoogleChromeManagementV1KioskAppStatusReport"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Kiosk app status report for the kiosk device"
        },
        "storageInfo": {
          "$ref": "GoogleChromeManagementV1StorageInfo",
          "readOnly": true,
          "description": "Output only. Information of storage specs for the device."
        },
        "batteryInfo": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. Information on battery specs for the device.",
          "items": {
            "$ref": "GoogleChromeManagementV1BatteryInfo"
          }
        },
        "bootPerformanceReport": {
          "description": "Output only. Boot performance reports of the device.",
          "readOnly": true,
          "items": {
            "$ref": "GoogleChromeManagementV1BootPerformanceReport"
          },
          "type": "array"
        },
        "networkStatusReport": {
          "items": {
            "$ref": "GoogleChromeManagementV1NetworkStatusReport"
          },
          "description": "Output only. Network specs collected periodically.",
          "readOnly": true,
          "type": "array"
        },
        "audioStatusReport": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1AudioStatusReport"
          },
          "description": "Output only. Audio reports collected periodically sorted in a decreasing order of report_time."
        },
        "peripheralsReport": {
          "description": "Output only. Peripherals reports collected periodically sorted in a decreasing order of report_time.",
          "items": {
            "$ref": "GoogleChromeManagementV1PeripheralsReport"
          },
          "readOnly": true,
          "type": "array"
        },
        "graphicsInfo": {
          "description": "Output only. Contains information regarding Graphic peripherals for the device.",
          "readOnly": true,
          "$ref": "GoogleChromeManagementV1GraphicsInfo"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Resource name of the device.",
          "type": "string"
        },
        "osUpdateStatus": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1OsUpdateStatus"
          },
          "description": "Output only. Contains relevant information regarding ChromeOS update status."
        },
        "deviceId": {
          "description": "Output only. The unique Directory API ID of the device. This value is the same as the Admin Console's Directory API ID in the ChromeOS Devices tab",
          "readOnly": true,
          "type": "string"
        },
        "serialNumber": {
          "description": "Output only. Device serial number. This value is the same as the Admin Console's Serial Number in the ChromeOS Devices tab.",
          "type": "string",
          "readOnly": true
        },
        "memoryInfo": {
          "$ref": "GoogleChromeManagementV1MemoryInfo",
          "readOnly": true,
          "description": "Output only. Information regarding memory specs for the device."
        },
        "networkDiagnosticsReport": {
          "items": {
            "$ref": "GoogleChromeManagementV1NetworkDiagnosticsReport"
          },
          "description": "Output only. Network diagnostics collected periodically.",
          "readOnly": true,
          "type": "array"
        },
        "cpuStatusReport": {
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1CpuStatusReport"
          },
          "readOnly": true,
          "description": "Output only. CPU status reports collected periodically sorted in a decreasing order of report_time."
        },
        "batteryStatusReport": {
          "items": {
            "$ref": "GoogleChromeManagementV1BatteryStatusReport"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Battery reports collected periodically."
        },
        "networkInfo": {
          "description": "Output only. Network devices information.",
          "readOnly": true,
          "$ref": "GoogleChromeManagementV1NetworkInfo"
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1GraphicsStatusReport": {
      "type": "object",
      "properties": {
        "reportTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Time at which the graphics data was reported."
        },
        "displays": {
          "description": "Output only. Information about the displays for the device.",
          "items": {
            "$ref": "GoogleChromeManagementV1DisplayInfo"
          },
          "type": "array",
          "readOnly": true
        }
      },
      "description": "Information of the graphics subsystem. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceGraphicsInfo](https://chromeenterprise.google/policies/#ReportDeviceGraphicsInfo) * Data Collection Frequency: 3 hours. * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_GRAPHICS_REPORT",
      "id": "GoogleChromeManagementV1GraphicsStatusReport"
    },
    "GoogleChromeManagementV1TelemetryAudioSevereUnderrunEvent": {
      "properties": {},
      "id": "GoogleChromeManagementV1TelemetryAudioSevereUnderrunEvent",
      "description": "`TelemetryAudioSevereUnderrunEvent` is triggered when a audio devices run out of buffer data for more than 5 seconds. * Granular permission needed: TELEMETRY_API_AUDIO_REPORT",
      "type": "object"
    },
    "GoogleChromeManagementV1TelemetryUserInfo": {
      "type": "object",
      "id": "GoogleChromeManagementV1TelemetryUserInfo",
      "properties": {
        "orgUnitId": {
          "description": "Output only. Organization unit ID of the user.",
          "readOnly": true,
          "type": "string"
        },
        "email": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. User's email."
        }
      },
      "description": "Information about a user associated with telemetry data. * Granular permission needed: TELEMETRY_API_USER"
    },
    "GoogleChromeManagementV1NetworkInfo": {
      "type": "object",
      "properties": {
        "networkDevices": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "GoogleChromeManagementV1NetworkDevice"
          },
          "description": "Output only. List of network devices."
        }
      },
      "description": "Network device information. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportNetworkDeviceConfiguration](https://chromeenterprise.google/policies/#ReportNetworkDeviceConfiguration) * Data Collection Frequency: At device startup * Default Data Reporting Frequency: At device startup - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_NETWORK_INFO",
      "id": "GoogleChromeManagementV1NetworkInfo"
    },
    "GoogleChromeManagementV1ListTelemetryNotificationConfigsResponse": {
      "type": "object",
      "id": "GoogleChromeManagementV1ListTelemetryNotificationConfigsResponse",
      "description": "Response message for listing notification configs for a customer.",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "telemetryNotificationConfigs": {
          "description": "The telemetry notification configs from the specified customer.",
          "items": {
            "$ref": "GoogleChromeManagementV1TelemetryNotificationConfig"
          },
          "type": "array"
        }
      }
    },
    "GoogleChromeManagementV1EnumeratePrintJobsResponse": {
      "properties": {
        "totalSize": {
          "description": "Total number of print jobs matching request.",
          "type": "string",
          "format": "int64"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be used in a subsequent request to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "printJobs": {
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1PrintJob"
          },
          "description": "List of requested print jobs."
        }
      },
      "id": "GoogleChromeManagementV1EnumeratePrintJobsResponse",
      "description": "Response containing a list of print jobs.",
      "type": "object"
    },
    "GoogleChromeManagementV1AndroidAppPermission": {
      "id": "GoogleChromeManagementV1AndroidAppPermission",
      "properties": {
        "type": {
          "description": "Output only. The type of the permission.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "Permission requested by an Android app.",
      "type": "object"
    },
    "GoogleChromeManagementV1HttpsLatencyRoutineData": {
      "description": "Data that describes the result of the HTTPS latency diagnostics routine, with the HTTPS requests issued to Google websites.",
      "type": "object",
      "id": "GoogleChromeManagementV1HttpsLatencyRoutineData",
      "properties": {
        "problem": {
          "enum": [
            "HTTPS_LATENCY_PROBLEM_UNSPECIFIED",
            "FAILED_DNS_RESOLUTIONS",
            "FAILED_HTTPS_REQUESTS",
            "HIGH_LATENCY",
            "VERY_HIGH_LATENCY"
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. HTTPS latency routine problem if a problem occurred.",
          "enumDescriptions": [
            "HTTPS latency problem not specified.",
            "One or more DNS resolutions resulted in a failure.",
            "One or more HTTPS requests resulted in a failure.",
            "Average HTTPS request latency time between 500ms and 1000ms is high.",
            "Average HTTPS request latency time greater than 1000ms is very high."
          ]
        },
        "latency": {
          "format": "google-duration",
          "readOnly": true,
          "description": "Output only. HTTPS latency if routine succeeded or failed because of HIGH_LATENCY or VERY_HIGH_LATENCY.",
          "type": "string"
        }
      }
    },
    "GoogleChromeManagementV1BatteryStatusReport": {
      "description": "Status data for battery. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDevicePowerStatus](https://chromeenterprise.google/policies/#ReportDevicePowerStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_BATTERY_REPORT",
      "id": "GoogleChromeManagementV1BatteryStatusReport",
      "properties": {
        "fullChargeCapacity": {
          "type": "string",
          "readOnly": true,
          "format": "int64",
          "description": "Output only. Full charge capacity (mAmpere-hours)."
        },
        "serialNumber": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Battery serial number."
        },
        "batteryHealth": {
          "enumDescriptions": [
            "Health unknown.",
            "Battery is healthy.",
            "Battery is moderately unhealthy and should be replaced soon.",
            "Battery is unhealthy and should be replaced."
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. Battery health.",
          "enum": [
            "BATTERY_HEALTH_UNSPECIFIED",
            "BATTERY_HEALTH_NORMAL",
            "BATTERY_REPLACE_SOON",
            "BATTERY_REPLACE_NOW"
          ]
        },
        "reportTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Timestamp of when the sample was collected on device",
          "type": "string"
        },
        "sample": {
          "description": "Output only. Sampling data for the battery sorted in a decreasing order of report_time.",
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1BatterySampleReport"
          },
          "readOnly": true
        },
        "cycleCount": {
          "description": "Output only. Cycle count.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse": {
      "type": "object",
      "id": "GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse",
      "description": "Response containing a list of devices with a specific type of hardware specification from the requested hardware type.",
      "properties": {
        "modelReports": {
          "items": {
            "$ref": "GoogleChromeManagementV1DeviceHardwareCountReport"
          },
          "description": "The DeviceHardwareCountReport for device model type (for example Acer C7 Chromebook).",
          "type": "array"
        },
        "storageReports": {
          "description": "The DeviceHardwareCountReport for device storage amount in gigabytes (for example 128).",
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1DeviceHardwareCountReport"
          }
        },
        "memoryReports": {
          "description": "The DeviceHardwareCountReport for device memory amount in gigabytes (for example 16).",
          "items": {
            "$ref": "GoogleChromeManagementV1DeviceHardwareCountReport"
          },
          "type": "array"
        },
        "cpuReports": {
          "description": "The DeviceHardwareCountReport for device cpu type (for example Intel(R) Core(TM) i7-10610U CPU @ 1.80GHz).",
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1DeviceHardwareCountReport"
          }
        }
      }
    },
    "GoogleChromeManagementV1CountPrintJobsByPrinterResponse": {
      "type": "object",
      "description": "Response containing a summary printing report for each printer from the specified organizational unit for the requested time interval.",
      "id": "GoogleChromeManagementV1CountPrintJobsByPrinterResponse",
      "properties": {
        "printerReports": {
          "description": "List of PrinterReports matching request.",
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1PrinterReport"
          }
        },
        "totalSize": {
          "type": "string",
          "description": "Total number of printers matching request.",
          "format": "int64"
        },
        "nextPageToken": {
          "description": "Pagination token for requesting the next page.",
          "type": "string"
        }
      }
    },
    "GoogleChromeManagementV1FindInstalledAppDevicesResponse": {
      "type": "object",
      "description": "Response containing a list of devices with queried app installed.",
      "properties": {
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of devices matching request."
        },
        "nextPageToken": {
          "description": "Token to specify the next page of the request.",
          "type": "string"
        },
        "devices": {
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1Device"
          },
          "description": "A list of devices which have the app installed. Sorted in ascending alphabetical order on the Device.machine field."
        }
      },
      "id": "GoogleChromeManagementV1FindInstalledAppDevicesResponse"
    },
    "GoogleChromeManagementV1CpuTemperatureInfo": {
      "properties": {
        "temperatureCelsius": {
          "format": "int32",
          "description": "Output only. CPU temperature in Celsius.",
          "type": "integer",
          "readOnly": true
        },
        "label": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. CPU label. Example: Core 0"
        }
      },
      "description": "CPU temperature of a device. Sampled per CPU core in Celsius. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Every 10 minutes * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A",
      "id": "GoogleChromeManagementV1CpuTemperatureInfo",
      "type": "object"
    },
    "GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse": {
      "type": "object",
      "description": "Response containing counts for devices that need attention.",
      "id": "GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse",
      "properties": {
        "pendingUpdate": {
          "format": "int64",
          "type": "string",
          "description": "Number of devices that are pending an OS update."
        },
        "noRecentPolicySyncCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of ChromeOS devices have not synced policies in the past 28 days."
        },
        "osVersionNotCompliantCount": {
          "format": "int64",
          "description": "Number of devices whose OS version is not compliant.",
          "type": "string"
        },
        "noRecentUserActivityCount": {
          "type": "string",
          "description": "Number of ChromeOS devices that have not seen any user activity in the past 28 days.",
          "format": "int64"
        },
        "unsupportedPolicyCount": {
          "description": "Number of devices that are unable to apply a policy due to an OS version mismatch.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleChromeManagementV1TelemetryNetworkSignalStrengthEvent": {
      "id": "GoogleChromeManagementV1TelemetryNetworkSignalStrengthEvent",
      "description": "`TelemetryNetworkSignalStrengthEvent` is triggered on WiFi signal strength events. * Granular permission needed: TELEMETRY_API_NETWORK_REPORT",
      "properties": {
        "guid": {
          "type": "string",
          "description": "Unique identifier of the network."
        },
        "signalStrengthDbm": {
          "format": "int32",
          "type": "integer",
          "description": "Signal strength RSSI value."
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1NetworkStatusReport": {
      "id": "GoogleChromeManagementV1NetworkStatusReport",
      "description": "State of visible/configured networks. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportNetworkStatus](https://chromeenterprise.google/policies/#ReportNetworkStatus) * Data Collection Frequency: 60 minutes * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: Yes * Granular permission needed: TELEMETRY_API_NETWORK_REPORT",
      "properties": {
        "transmissionBitRateMbps": {
          "readOnly": true,
          "type": "string",
          "format": "int64",
          "description": "Output only. Transmission bit rate measured in Megabits per second."
        },
        "encryptionOn": {
          "description": "Output only. Whether the wifi encryption key is turned off.",
          "readOnly": true,
          "type": "boolean"
        },
        "transmissionPowerDbm": {
          "type": "integer",
          "readOnly": true,
          "description": "Output only. Transmission power measured in decibels.",
          "format": "int32"
        },
        "connectionType": {
          "enum": [
            "NETWORK_TYPE_UNSPECIFIED",
            "CELLULAR",
            "ETHERNET",
            "TETHER",
            "VPN",
            "WIFI"
          ],
          "description": "Output only. Network connection type.",
          "type": "string",
          "enumDescriptions": [
            "Network connection type unspecified",
            "Cellular network connection.",
            "Ethernet network connection.",
            "Tether network connection.",
            "VPN network connection.",
            "Wifi network connection."
          ],
          "readOnly": true
        },
        "gatewayIpAddress": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Gateway IP address."
        },
        "wifiLinkQuality": {
          "description": "Output only. Wifi link quality. Value ranges from [0, 70]. 0 indicates no signal and 70 indicates a strong signal.",
          "format": "int64",
          "readOnly": true,
          "type": "string"
        },
        "guid": {
          "type": "string",
          "description": "Output only. Network connection guid.",
          "readOnly": true
        },
        "connectionState": {
          "enumDescriptions": [
            "Network connection state unspecified.",
            "The network is connected and internet connectivity is available.",
            "The network is connected and not in a detected portal state, but internet connectivity may not be available.",
            "The network is connected but a portal state was detected. Internet connectivity may be limited.",
            "The network is in the process of connecting.",
            "The network is not connected."
          ],
          "description": "Output only. Current connection state of the network.",
          "enum": [
            "NETWORK_CONNECTION_STATE_UNSPECIFIED",
            "ONLINE",
            "CONNECTED",
            "PORTAL",
            "CONNECTING",
            "NOT_CONNECTED"
          ],
          "type": "string",
          "readOnly": true
        },
        "wifiPowerManagementEnabled": {
          "readOnly": true,
          "description": "Output only. Wifi power management enabled",
          "type": "boolean"
        },
        "signalStrengthDbm": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "description": "Output only. Signal strength for wireless networks measured in decibels."
        },
        "sampleFrequency": {
          "format": "google-duration",
          "type": "string",
          "description": "Output only. Frequency the report is sampled.",
          "readOnly": true
        },
        "lanIpAddress": {
          "readOnly": true,
          "description": "Output only. LAN IP address.",
          "type": "string"
        },
        "reportTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Time at which the network state was reported."
        },
        "receivingBitRateMbps": {
          "format": "int64",
          "description": "Output only. Receiving bit rate measured in Megabits per second.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1TelemetryNotificationConfig": {
      "id": "GoogleChromeManagementV1TelemetryNotificationConfig",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Resource name of the notification configuration."
        },
        "googleCloudPubsubTopic": {
          "description": "The pubsub topic to which notifications are published to.",
          "type": "string"
        },
        "filter": {
          "$ref": "GoogleChromeManagementV1TelemetryNotificationFilter",
          "description": "Only send notifications for telemetry data matching this filter."
        },
        "customer": {
          "readOnly": true,
          "description": "Output only. Google Workspace customer that owns the resource.",
          "type": "string"
        }
      },
      "description": "Configuration to receive notifications of telemetry data."
    },
    "GoogleRpcStatus": {
      "type": "object",
      "id": "GoogleRpcStatus",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "GoogleChromeManagementV1TouchScreenInfo": {
      "type": "object",
      "id": "GoogleChromeManagementV1TouchScreenInfo",
      "properties": {
        "devices": {
          "items": {
            "$ref": "GoogleChromeManagementV1TouchScreenDevice"
          },
          "description": "Output only. List of the internal touch screen devices.",
          "type": "array",
          "readOnly": true
        },
        "touchpadLibrary": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Touchpad library name used by the input stack."
        }
      },
      "description": "Information on the device touch screen."
    },
    "GoogleChromeManagementV1NetworkDiagnosticsReport": {
      "id": "GoogleChromeManagementV1NetworkDiagnosticsReport",
      "properties": {
        "reportTime": {
          "description": "Output only. Timestamp of when the diagnostics were collected.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "httpsLatencyData": {
          "description": "Output only. HTTPS latency test data.",
          "$ref": "GoogleChromeManagementV1HttpsLatencyRoutineData",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Network testing results to determine the health of the device's network connection, for example whether the HTTPS latency is high or normal. * Granular permission needed: TELEMETRY_API_NETWORK_REPORT"
    },
    "GoogleChromeManagementV1NetworkDevice": {
      "type": "object",
      "description": "Details about the network device. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportNetworkDeviceConfiguration](https://chromeenterprise.google/policies/#ReportNetworkDeviceConfiguration) * Data Collection Frequency: At device startup * Default Data Reporting Frequency: At device startup - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A",
      "properties": {
        "meid": {
          "readOnly": true,
          "description": "Output only. MEID (if applicable) of the corresponding network device.",
          "type": "string"
        },
        "mdn": {
          "type": "string",
          "description": "Output only. The mobile directory number associated with the device's sim card.",
          "readOnly": true
        },
        "type": {
          "description": "Output only. Network device type.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "NETWORK_DEVICE_TYPE_UNSPECIFIED",
            "CELLULAR_DEVICE",
            "ETHERNET_DEVICE",
            "WIFI_DEVICE"
          ],
          "enumDescriptions": [
            "Network device type not specified.",
            "Cellular device.",
            "Ethernet device.",
            "Wifi device."
          ]
        },
        "iccid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The integrated circuit card ID associated with the device's sim card."
        },
        "macAddress": {
          "description": "Output only. MAC address (if applicable) of the corresponding network device.",
          "readOnly": true,
          "type": "string"
        },
        "imei": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. IMEI (if applicable) of the corresponding network device."
        }
      },
      "id": "GoogleChromeManagementV1NetworkDevice"
    },
    "GoogleTypeDate": {
      "id": "GoogleTypeDate",
      "properties": {
        "month": {
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "format": "int32",
          "type": "integer"
        },
        "year": {
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer"
        },
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "type": "object"
    },
    "GoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent": {
      "properties": {
        "httpsLatencyState": {
          "type": "string",
          "enum": [
            "HTTPS_LATENCY_STATE_UNSPECIFIED",
            "RECOVERY",
            "PROBLEM"
          ],
          "description": "Current HTTPS latency state.",
          "enumDescriptions": [
            "HTTPS latency state is unspecified.",
            "HTTPS latency recovered from a problem.",
            "HTTPS latency problem."
          ]
        },
        "httpsLatencyRoutineData": {
          "$ref": "GoogleChromeManagementV1HttpsLatencyRoutineData",
          "description": "HTTPS latency routine data that triggered the event."
        }
      },
      "id": "GoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent",
      "description": "Https latency routine is run periodically and `TelemetryHttpsLatencyChangeEvent` is triggered if a latency problem was detected or if the device has recovered from a latency problem. * Granular permission needed: TELEMETRY_API_NETWORK_REPORT",
      "type": "object"
    },
    "GoogleChromeManagementV1TotalMemoryEncryptionInfo": {
      "type": "object",
      "properties": {
        "maxKeys": {
          "format": "int64",
          "description": "The maximum number of keys that can be used for encryption.",
          "type": "string"
        },
        "encryptionAlgorithm": {
          "enum": [
            "MEMORY_ENCRYPTION_ALGORITHM_UNSPECIFIED",
            "MEMORY_ENCRYPTION_ALGORITHM_UNKNOWN",
            "MEMORY_ENCRYPTION_ALGORITHM_AES_XTS_128",
            "MEMORY_ENCRYPTION_ALGORITHM_AES_XTS_256"
          ],
          "description": "Memory encryption algorithm.",
          "type": "string",
          "enumDescriptions": [
            "Memory encryption algorithm is not set.",
            "The memory encryption algorithm being used is unknown.",
            "The memory encryption algorithm is using the AES_XTS encryption algorithm with a 128 bit block cypher.",
            "The memory encryption algorithm is using the AES_XTS encryption algorithm with a 256 bit block cypher."
          ]
        },
        "keyLength": {
          "type": "string",
          "description": "The length of the encryption keys.",
          "format": "int64"
        },
        "encryptionState": {
          "description": "The state of memory encryption on the device.",
          "enum": [
            "MEMORY_ENCRYPTION_STATE_UNSPECIFIED",
            "MEMORY_ENCRYPTION_STATE_UNKNOWN",
            "MEMORY_ENCRYPTION_STATE_DISABLED",
            "MEMORY_ENCRYPTION_STATE_TME",
            "MEMORY_ENCRYPTION_STATE_MKTME"
          ],
          "enumDescriptions": [
            "Memory encryption state is not set.",
            "The memory encryption state is unknown.",
            "Memory encrpytion on the device is disabled.",
            "Memory encryption on the device uses total memory encryption.",
            "Memory encryption on the device uses multi-key total memory encryption."
          ],
          "type": "string"
        }
      },
      "id": "GoogleChromeManagementV1TotalMemoryEncryptionInfo",
      "description": "Memory encryption information of a device. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceMemoryInfo](https://chromeenterprise.google/policies/#ReportDeviceMemoryInfo) * Data Collection Frequency: At device startup * Default Data Reporting Frequency: At device startup - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A"
    },
    "GoogleChromeManagementV1BrowserVersion": {
      "properties": {
        "system": {
          "description": "Output only. The device operating system.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No operating system specified.",
            "Other operating system.",
            "Android operating system.",
            "Apple iOS operating system.",
            "ChromeOS operating system.",
            "Microsoft Windows operating system.",
            "Apple macOS operating system.",
            "Linux operating system."
          ],
          "enum": [
            "DEVICE_SYSTEM_UNSPECIFIED",
            "SYSTEM_OTHER",
            "SYSTEM_ANDROID",
            "SYSTEM_IOS",
            "SYSTEM_CROS",
            "SYSTEM_WINDOWS",
            "SYSTEM_MAC",
            "SYSTEM_LINUX"
          ]
        },
        "channel": {
          "description": "Output only. The release channel of the installed browser.",
          "type": "string",
          "enumDescriptions": [
            "No release channel specified.",
            "Canary release channel.",
            "Dev release channel.",
            "Beta release channel.",
            "Stable release channel."
          ],
          "readOnly": true,
          "enum": [
            "RELEASE_CHANNEL_UNSPECIFIED",
            "CANARY",
            "DEV",
            "BETA",
            "STABLE"
          ]
        },
        "version": {
          "description": "Output only. The full version of the installed browser.",
          "readOnly": true,
          "type": "string"
        },
        "count": {
          "readOnly": true,
          "description": "Output only. Count grouped by device_system and major version",
          "format": "int64",
          "type": "string"
        },
        "deviceOsVersion": {
          "description": "Output only. Version of the system-specified operating system.",
          "type": "string",
          "readOnly": true
        }
      },
      "id": "GoogleChromeManagementV1BrowserVersion",
      "type": "object",
      "description": "Describes a browser version and its install count."
    },
    "GoogleChromeManagementV1HeartbeatStatusReport": {
      "type": "object",
      "description": "Heartbeat status report of a device. * Available for Kiosks * This field provides online/offline/unknown status of a device and will only be included if the status has changed (e.g. Online -\u003e Offline) * Data for this field is controlled via policy: [HeartbeatEnabled](https://chromeenterprise.google/policies/#HeartbeatEnabled) [More Info](https://support.google.com/chrome/a/answer/6179663#:~:text=On%20the%20Chrome,device%20status%20alerts) * Heartbeat Frequency: 2 mins * Note: If a device goes offline, it can take up to 12 minutes for the online status of the device to be updated * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: N/A * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_DEVICE_ACTIVITY_REPORT",
      "properties": {
        "reportTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Timestamp of when status changed was detected"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "UNKNOWN",
            "ONLINE",
            "OFFLINE"
          ],
          "enumDescriptions": [
            "State not specified",
            "Device is not eligible for heartbeat monitoring",
            "Device is online",
            "Device is offline"
          ],
          "description": "State the device changed to",
          "type": "string"
        }
      },
      "id": "GoogleChromeManagementV1HeartbeatStatusReport"
    },
    "GoogleChromeManagementV1ThunderboltInfo": {
      "description": "Thunderbolt bus info. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceSecurityStatus](https://chromeenterprise.google/policies/#ReportDeviceSecurityStatus) * Data Collection Frequency: At device startup * Default Data Reporting Frequency: At device startup - Policy Controlled: No * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_BUS_DEVICE_INFO",
      "properties": {
        "securityLevel": {
          "enumDescriptions": [
            "Thunderbolt security level is not set.",
            "All devices are automatically connected by the firmware. No user approval is needed.",
            "User is asked whether the device is allowed to be connected.",
            "User is asked whether the device is allowed to be connected. In addition the device is sent a challenge that should match the expected one based on a random key written to the key sysfs attribute",
            "The firmware automatically creates tunnels for Thunderbolt.",
            "The firmware automatically creates tunnels for the USB controller and Display Port in a dock. All PCIe links downstream of the dock are removed.",
            "PCIE tunneling is disabled."
          ],
          "type": "string",
          "enum": [
            "THUNDERBOLT_SECURITY_LEVEL_UNSPECIFIED",
            "THUNDERBOLT_SECURITY_NONE_LEVEL",
            "THUNDERBOLT_SECURITY_USER_LEVEL",
            "THUNDERBOLT_SECURITY_SECURE_LEVEL",
            "THUNDERBOLT_SECURITY_DP_ONLY_LEVEL",
            "THUNDERBOLT_SECURITY_USB_ONLY_LEVEL",
            "THUNDERBOLT_SECURITY_NO_PCIE_LEVEL"
          ],
          "description": "Security level of the Thunderbolt bus."
        }
      },
      "type": "object",
      "id": "GoogleChromeManagementV1ThunderboltInfo"
    },
    "GoogleChromeManagementV1DeviceHardwareCountReport": {
      "description": "Report for CountChromeDevicesPerHardwareSpecResponse, contains the count of devices with a unique hardware specification.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Count of devices with a unique hardware specification.",
          "format": "int64",
          "type": "string"
        },
        "bucket": {
          "description": "Public name of the hardware specification.",
          "type": "string"
        }
      },
      "id": "GoogleChromeManagementV1DeviceHardwareCountReport"
    },
    "GoogleChromeManagementV1TelemetryUserDevice": {
      "description": "Telemetry data collected for a managed user and device. * Granular permission needed: TELEMETRY_API_DEVICE",
      "id": "GoogleChromeManagementV1TelemetryUserDevice",
      "properties": {
        "audioStatusReport": {
          "description": "Output only. Audio reports collected periodically sorted in a decreasing order of report_time.",
          "readOnly": true,
          "items": {
            "$ref": "GoogleChromeManagementV1AudioStatusReport"
          },
          "type": "array"
        },
        "deviceActivityReport": {
          "description": "Output only. Device activity reports collected periodically sorted in a decreasing order of report_time.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1DeviceActivityReport"
          }
        },
        "deviceId": {
          "type": "string",
          "description": "The unique Directory API ID of the device. This value is the same as the Admin Console's Directory API ID in the ChromeOS Devices tab."
        },
        "peripheralsReport": {
          "description": "Output only. Peripherals reports collected periodically sorted in a decreasing order of report_time.",
          "items": {
            "$ref": "GoogleChromeManagementV1PeripheralsReport"
          },
          "type": "array",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1ListTelemetryDevicesResponse": {
      "properties": {
        "devices": {
          "description": "Telemetry devices returned in the response.",
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1TelemetryDevice"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to specify next page in the list."
        }
      },
      "id": "GoogleChromeManagementV1ListTelemetryDevicesResponse",
      "type": "object"
    },
    "GoogleChromeManagementV1ListTelemetryEventsResponse": {
      "type": "object",
      "id": "GoogleChromeManagementV1ListTelemetryEventsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to specify next page in the list.",
          "type": "string"
        },
        "telemetryEvents": {
          "items": {
            "$ref": "GoogleChromeManagementV1TelemetryEvent"
          },
          "type": "array",
          "description": "Telemetry events returned in the response."
        }
      },
      "description": "Response message for listing telemetry events for a customer."
    },
    "GoogleChromeManagementV1DisplayDevice": {
      "description": "Information of a display device.",
      "id": "GoogleChromeManagementV1DisplayDevice",
      "type": "object",
      "properties": {
        "manufactureYear": {
          "type": "integer",
          "readOnly": true,
          "description": "Output only. Year of manufacture.",
          "format": "int32"
        },
        "internal": {
          "readOnly": true,
          "description": "Output only. Is display internal or not.",
          "type": "boolean"
        },
        "manufacturerId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Three letter manufacturer ID."
        },
        "displayHeightMm": {
          "type": "integer",
          "readOnly": true,
          "description": "Output only. Display height in millimeters.",
          "format": "int32"
        },
        "modelId": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Output only. Manufacturer product code."
        },
        "displayWidthMm": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Output only. Display width in millimeters."
        },
        "displayName": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Display device name."
        }
      }
    },
    "GoogleProtobufEmpty": {
      "id": "GoogleProtobufEmpty",
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "GoogleChromeManagementV1TelemetryUser": {
      "description": "Telemetry data collected from a managed user. * Granular permission needed: TELEMETRY_API_USER",
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Directory ID of the user."
        },
        "customer": {
          "type": "string",
          "description": "G Suite Customer whose enterprise enrolled the device."
        },
        "userEmail": {
          "description": "Email address of the user.",
          "type": "string"
        },
        "name": {
          "description": "Resource name of the user.",
          "type": "string"
        },
        "userDevice": {
          "type": "array",
          "description": "Telemetry data collected from a managed user and device.",
          "items": {
            "$ref": "GoogleChromeManagementV1TelemetryUserDevice"
          }
        },
        "orgUnitId": {
          "type": "string",
          "description": "Organization unit of the user."
        }
      },
      "id": "GoogleChromeManagementV1TelemetryUser"
    },
    "GoogleChromeManagementV1TelemetryUsbPeripheralsEvent": {
      "description": "`TelemetryUsbPeripheralsEvent` is triggered USB devices are either added or removed. * Granular permission needed: TELEMETRY_API_PERIPHERALS_REPORT",
      "type": "object",
      "id": "GoogleChromeManagementV1TelemetryUsbPeripheralsEvent",
      "properties": {
        "usbPeripheralReport": {
          "items": {
            "$ref": "GoogleChromeManagementV1UsbPeripheralReport"
          },
          "type": "array",
          "description": "List of usb devices that were either added or removed."
        }
      }
    },
    "GoogleChromeManagementV1DeviceAueCountReport": {
      "id": "GoogleChromeManagementV1DeviceAueCountReport",
      "description": "Report for CountChromeDevicesPerAueDateResponse, contains the count of devices of a specific model and auto update expiration range.",
      "type": "object",
      "properties": {
        "model": {
          "description": "Public model name of the devices.",
          "type": "string"
        },
        "aueMonth": {
          "type": "string",
          "enum": [
            "MONTH_UNSPECIFIED",
            "JANUARY",
            "FEBRUARY",
            "MARCH",
            "APRIL",
            "MAY",
            "JUNE",
            "JULY",
            "AUGUST",
            "SEPTEMBER",
            "OCTOBER",
            "NOVEMBER",
            "DECEMBER"
          ],
          "description": "Enum value of month corresponding to the auto update expiration date in UTC time zone. If the device is already expired, this field is empty.",
          "enumDescriptions": [
            "The unspecified month.",
            "The month of January.",
            "The month of February.",
            "The month of March.",
            "The month of April.",
            "The month of May.",
            "The month of June.",
            "The month of July.",
            "The month of August.",
            "The month of September.",
            "The month of October.",
            "The month of November.",
            "The month of December."
          ]
        },
        "count": {
          "description": "Count of devices of this model.",
          "format": "int64",
          "type": "string"
        },
        "expired": {
          "description": "Boolean value for whether or not the device has already expired.",
          "type": "boolean"
        },
        "aueYear": {
          "type": "string",
          "format": "int64",
          "description": "Int value of year corresponding to the Auto Update Expiration date in UTC time zone. If the device is already expired, this field is empty."
        }
      }
    },
    "GoogleChromeManagementV1TelemetryEventNotificationFilter": {
      "properties": {
        "eventTypes": {
          "description": "Only sends the notifications for events of these types. Must not be empty.",
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Event type unknown.",
              "Triggered when a audio devices run out of buffer data for more than 5 seconds.",
              "Triggered immediately on any changes to a network connection.",
              "Triggered when USB devices are added.",
              "Triggered when USB devices are removed.",
              "Triggered when a new HTTPS latency problem was detected or the device has recovered form an existing HTTPS latency problem.",
              "Triggered when connected WiFi network signal strength drops below -70dBm.",
              "Triggered when connected WiFi network signal strength is recovered from a signal drop.",
              "Triggered on changes to VPN connections."
            ],
            "enum": [
              "EVENT_TYPE_UNSPECIFIED",
              "AUDIO_SEVERE_UNDERRUN",
              "NETWORK_STATE_CHANGE",
              "USB_ADDED",
              "USB_REMOVED",
              "NETWORK_HTTPS_LATENCY_CHANGE",
              "WIFI_SIGNAL_STRENGTH_LOW",
              "WIFI_SIGNAL_STRENGTH_RECOVERED",
              "VPN_CONNECTION_STATE_CHANGE"
            ],
            "type": "string"
          }
        }
      },
      "description": "Configures how the telemetry events should be filtered.",
      "id": "GoogleChromeManagementV1TelemetryEventNotificationFilter",
      "type": "object"
    },
    "GoogleChromeManagementV1TelemetryDeviceInfo": {
      "type": "object",
      "description": "Information about a device associated with telemetry data. * Granular Permission needed: TELEMETRY_API_DEVICE",
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Output only. The unique Directory API ID of the device. This value is the same as the Admin Console's Directory API ID in the ChromeOS Devices tab.",
          "readOnly": true
        },
        "orgUnitId": {
          "description": "Output only. Organization unit ID of the device.",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "GoogleChromeManagementV1TelemetryDeviceInfo"
    },
    "GoogleChromeManagementV1DeviceActivityReport": {
      "id": "GoogleChromeManagementV1DeviceActivityReport",
      "properties": {
        "reportTime": {
          "description": "Output only. Timestamp of when the report was collected.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "deviceActivityState": {
          "enumDescriptions": [
            "Device activity state is unspecified.",
            "Device is currently being used.",
            "Device is currently idle.",
            "Device is currently locked."
          ],
          "type": "string",
          "enum": [
            "DEVICE_ACTIVITY_STATE_UNSPECIFIED",
            "ACTIVE",
            "IDLE",
            "LOCKED"
          ],
          "readOnly": true,
          "description": "Output only. Device activity state."
        }
      },
      "type": "object",
      "description": "Device activity report. * Granular permission needed: TELEMETRY_API_DEVICE_ACTIVITY_REPORT"
    },
    "GoogleChromeManagementV1TelemetryEvent": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. Resource name of the event.",
          "readOnly": true
        },
        "vpnConnectionStateChangeEvent": {
          "readOnly": true,
          "description": "Output only. Payload for VPN connection state change event. Present only when `event_type` is `VPN_CONNECTION_STATE_CHANGE`.",
          "$ref": "GoogleChromeManagementV1TelemetryNetworkConnectionStateChangeEvent"
        },
        "wifiSignalStrengthEvent": {
          "readOnly": true,
          "$ref": "GoogleChromeManagementV1TelemetryNetworkSignalStrengthEvent",
          "description": "Output only. Payload for WiFi signal strength events. Present only when `event_type` is `WIFI_SIGNAL_STRENGTH_LOW` or `WIFI_SIGNAL_STRENGTH_RECOVERED`."
        },
        "audioSevereUnderrunEvent": {
          "$ref": "GoogleChromeManagementV1TelemetryAudioSevereUnderrunEvent",
          "description": "Output only. Payload for audio severe underrun event. Present only when the `event_type` field is `AUDIO_SEVERE_UNDERRUN`.",
          "readOnly": true
        },
        "user": {
          "readOnly": true,
          "description": "Output only. Information about the user associated with the event.",
          "$ref": "GoogleChromeManagementV1TelemetryUserInfo"
        },
        "device": {
          "$ref": "GoogleChromeManagementV1TelemetryDeviceInfo",
          "description": "Output only. Information about the device associated with the event.",
          "readOnly": true
        },
        "eventType": {
          "type": "string",
          "enumDescriptions": [
            "Event type unknown.",
            "Triggered when a audio devices run out of buffer data for more than 5 seconds.",
            "Triggered immediately on any changes to a network connection.",
            "Triggered when USB devices are added.",
            "Triggered when USB devices are removed.",
            "Triggered when a new HTTPS latency problem was detected or the device has recovered form an existing HTTPS latency problem.",
            "Triggered when connected WiFi network signal strength drops below -70dBm.",
            "Triggered when connected WiFi network signal strength is recovered from a signal drop.",
            "Triggered on changes to VPN connections."
          ],
          "enum": [
            "EVENT_TYPE_UNSPECIFIED",
            "AUDIO_SEVERE_UNDERRUN",
            "NETWORK_STATE_CHANGE",
            "USB_ADDED",
            "USB_REMOVED",
            "NETWORK_HTTPS_LATENCY_CHANGE",
            "WIFI_SIGNAL_STRENGTH_LOW",
            "WIFI_SIGNAL_STRENGTH_RECOVERED",
            "VPN_CONNECTION_STATE_CHANGE"
          ],
          "description": "The event type of the current event."
        },
        "httpsLatencyChangeEvent": {
          "$ref": "GoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent",
          "description": "Output only. Payload for HTTPS latency change event. Present only when `event_type` is `NETWORK_HTTPS_LATENCY_CHANGE`.",
          "readOnly": true
        },
        "reportTime": {
          "description": "Timestamp that represents when the event was reported.",
          "type": "string",
          "format": "google-datetime"
        },
        "networkStateChangeEvent": {
          "readOnly": true,
          "description": "Output only. Payload for network connection state change event. Present only when `event_type` is `NETWORK_STATE_CHANGE`.",
          "$ref": "GoogleChromeManagementV1TelemetryNetworkConnectionStateChangeEvent"
        },
        "usbPeripheralsEvent": {
          "readOnly": true,
          "$ref": "GoogleChromeManagementV1TelemetryUsbPeripheralsEvent",
          "description": "Output only. Payload for usb peripherals event. Present only when the `event_type` field is either `USB_ADDED` or `USB_REMOVED`."
        }
      },
      "description": "Telemetry data reported by a managed device.",
      "type": "object",
      "id": "GoogleChromeManagementV1TelemetryEvent"
    },
    "GoogleChromeManagementV1ListTelemetryUsersResponse": {
      "properties": {
        "telemetryUsers": {
          "items": {
            "$ref": "GoogleChromeManagementV1TelemetryUser"
          },
          "description": "Telemetry users returned in the response.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to specify next page in the list."
        }
      },
      "type": "object",
      "id": "GoogleChromeManagementV1ListTelemetryUsersResponse",
      "description": "Response message for listing telemetry users for a customer."
    },
    "GoogleChromeManagementV1TelemetryNetworkConnectionStateChangeEvent": {
      "type": "object",
      "properties": {
        "guid": {
          "description": "Unique identifier of the network.",
          "type": "string"
        },
        "connectionState": {
          "description": "Current connection state of the network.",
          "type": "string",
          "enumDescriptions": [
            "Network connection state unspecified.",
            "The network is connected and internet connectivity is available.",
            "The network is connected and not in a detected portal state, but internet connectivity may not be available.",
            "The network is connected but a portal state was detected. Internet connectivity may be limited.",
            "The network is in the process of connecting.",
            "The network is not connected."
          ],
          "enum": [
            "NETWORK_CONNECTION_STATE_UNSPECIFIED",
            "ONLINE",
            "CONNECTED",
            "PORTAL",
            "CONNECTING",
            "NOT_CONNECTED"
          ]
        }
      },
      "description": "`TelemetryNetworkConnectionStateChangeEvent` is triggered on network connection state changes. * Granular permission needed: TELEMETRY_API_NETWORK_REPORT",
      "id": "GoogleChromeManagementV1TelemetryNetworkConnectionStateChangeEvent"
    },
    "GoogleChromeManagementV1AndroidAppInfo": {
      "type": "object",
      "id": "GoogleChromeManagementV1AndroidAppInfo",
      "properties": {
        "permissions": {
          "description": "Output only. Permissions requested by an Android app.",
          "items": {
            "$ref": "GoogleChromeManagementV1AndroidAppPermission"
          },
          "type": "array",
          "readOnly": true
        }
      },
      "description": "Android app information."
    },
    "GoogleChromeManagementV1UserPrintReport": {
      "description": "Report for CountPrintJobsByUser, contains printing statistics for a user. Contains the number of printers, the number of devices used to initiate print jobs, and the number of print jobs initiated.",
      "type": "object",
      "properties": {
        "printerCount": {
          "type": "string",
          "description": "Number of printers used by the user.",
          "format": "int64"
        },
        "jobCount": {
          "description": "Number of print jobs initiated by the user.",
          "type": "string",
          "format": "int64"
        },
        "userId": {
          "description": "The unique Directory API ID of the user.",
          "type": "string"
        },
        "userEmail": {
          "description": "The primary e-mail address of the user.",
          "type": "string"
        },
        "deviceCount": {
          "type": "string",
          "description": "Number of chrome devices that have been used to initiate print jobs by the user.",
          "format": "int64"
        }
      },
      "id": "GoogleChromeManagementV1UserPrintReport"
    },
    "GoogleChromeManagementV1StorageStatusReport": {
      "id": "GoogleChromeManagementV1StorageStatusReport",
      "type": "object",
      "description": "Status data for storage. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceStorageStatus](https://chromeenterprise.google/policies/#ReportDeviceStorageStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_STORAGE_REPORT",
      "properties": {
        "disk": {
          "readOnly": true,
          "description": "Output only. Reports on disk.",
          "items": {
            "$ref": "GoogleChromeManagementV1DiskInfo"
          },
          "type": "array"
        },
        "reportTime": {
          "description": "Output only. Timestamp of when the sample was collected on device",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GoogleChromeManagementV1CountInstalledAppsResponse": {
      "description": "Response containing details of queried installed apps.",
      "type": "object",
      "id": "GoogleChromeManagementV1CountInstalledAppsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to specify the next page of the request."
        },
        "installedApps": {
          "items": {
            "$ref": "GoogleChromeManagementV1InstalledApp"
          },
          "type": "array",
          "description": "List of installed apps matching request."
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of installed apps matching request."
        }
      }
    }
  },
  "baseUrl": "https://chromemanagement.googleapis.com/",
  "parameters": {
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query",
      "type": "boolean"
    },
    "alt": {
      "type": "string",
      "location": "query",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response."
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    }
  },
  "documentationLink": "http://developers.google.com/chrome/management/",
  "title": "Chrome Management API",
  "servicePath": "",
  "protocol": "rest",
  "basePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/chrome.management.telemetry.readonly": {
          "description": "See basic device and telemetry information collected from Chrome OS devices or users managed within your organization"
        },
        "https://www.googleapis.com/auth/chrome.management.reports.readonly": {
          "description": "See reports about devices and Chrome browsers managed within your organization"
        },
        "https://www.googleapis.com/auth/chrome.management.appdetails.readonly": {
          "description": "See detailed information about apps installed on Chrome browsers and devices managed by your organization"
        }
      }
    }
  },
  "name": "chromemanagement",
  "rootUrl": "https://chromemanagement.googleapis.com/",
  "batchPath": "batch",
  "ownerName": "Google",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "ownerDomain": "google.com",
  "description": "The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.",
  "canonicalName": "Chrome Management",
  "version_module": true,
  "discoveryVersion": "v1",
  "revision": "20230913",
  "version": "v1"
}

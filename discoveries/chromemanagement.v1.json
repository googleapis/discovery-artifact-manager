{
  "name": "chromemanagement",
  "kind": "discovery#restDescription",
  "servicePath": "",
  "batchPath": "batch",
  "protocol": "rest",
  "id": "chromemanagement:v1",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "canonicalName": "Chrome Management",
  "ownerName": "Google",
  "resources": {
    "customers": {
      "resources": {
        "telemetry": {
          "resources": {
            "events": {
              "methods": {
                "list": {
                  "flatPath": "v1/customers/{customersId}/telemetry/events",
                  "parameters": {
                    "parent": {
                      "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request.",
                      "pattern": "^customers/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "pageToken": {
                      "description": "Optional. Token to specify next page in the list.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "Optional. Maximum number of results to return. Default value is 100. Maximum value is 1000.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "filter": {
                      "description": "Optional. Only include resources that match the filter. Although this parameter is currently optional, this parameter will be required- please specify at least 1 event type. Supported filter fields: - device_id - user_id - device_org_unit_id - user_org_unit_id - timestamp - event_type The \"timestamp\" filter accepts either the Unix Epoch milliseconds format or the RFC3339 UTC \"Zulu\" format with nanosecond resolution and up to nine fractional digits. Both formats should be surrounded by simple double quotes. Examples: \"2014-10-02T15:01:23Z\", \"2014-10-02T15:01:23.045123456Z\", \"1679283943823\".",
                      "location": "query",
                      "type": "string"
                    },
                    "readMask": {
                      "location": "query",
                      "description": "Required. Read mask to specify which fields to return. Although currently required, this field will become optional, while the filter parameter with an event type will be come required.",
                      "format": "google-fieldmask",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/telemetry/events",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.telemetry.readonly"
                  ],
                  "id": "chromemanagement.customers.telemetry.events.list",
                  "description": "List telemetry events.",
                  "response": {
                    "$ref": "GoogleChromeManagementV1ListTelemetryEventsResponse"
                  },
                  "httpMethod": "GET"
                }
              }
            },
            "devices": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.telemetry.readonly"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get telemetry device.",
                  "flatPath": "v1/customers/{customersId}/telemetry/devices/{devicesId}",
                  "id": "chromemanagement.customers.telemetry.devices.get",
                  "response": {
                    "$ref": "GoogleChromeManagementV1TelemetryDevice"
                  },
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^customers/[^/]+/telemetry/devices/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the `TelemetryDevice` to return.",
                      "location": "path"
                    },
                    "readMask": {
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Required. Read mask to specify which fields to return."
                    }
                  }
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^customers/[^/]+$",
                      "required": true,
                      "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Maximum number of results to return. Default value is 100. Maximum value is 1000.",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "Token to specify next page in the list.",
                      "location": "query",
                      "type": "string"
                    },
                    "readMask": {
                      "location": "query",
                      "description": "Required. Read mask to specify which fields to return.",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Optional. Only include resources that match the filter. Supported filter fields: - org_unit_id - serial_number - device_id - reports_timestamp The \"reports_timestamp\" filter accepts either the Unix Epoch milliseconds format or the RFC3339 UTC \"Zulu\" format with nanosecond resolution and up to nine fractional digits. Both formats should be surrounded by simple double quotes. Examples: \"2014-10-02T15:01:23Z\", \"2014-10-02T15:01:23.045123456Z\", \"1679283943823\".",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/telemetry/devices",
                  "description": "List all telemetry devices.",
                  "flatPath": "v1/customers/{customersId}/telemetry/devices",
                  "id": "chromemanagement.customers.telemetry.devices.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.telemetry.readonly"
                  ],
                  "response": {
                    "$ref": "GoogleChromeManagementV1ListTelemetryDevicesResponse"
                  }
                }
              }
            },
            "users": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.telemetry.readonly"
                  ],
                  "id": "chromemanagement.customers.telemetry.users.get",
                  "flatPath": "v1/customers/{customersId}/telemetry/users/{usersId}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleChromeManagementV1TelemetryUser"
                  },
                  "description": "Get telemetry user.",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^customers/[^/]+/telemetry/users/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the `TelemetryUser` to return."
                    },
                    "readMask": {
                      "location": "query",
                      "description": "Read mask to specify which fields to return.",
                      "format": "google-fieldmask",
                      "type": "string"
                    }
                  }
                },
                "list": {
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "Maximum number of results to return. Default value is 100. Maximum value is 1000.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "parent": {
                      "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^customers/[^/]+$"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Only include resources that match the filter. Supported filter fields: - user_id - user_org_unit_id "
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Token to specify next page in the list.",
                      "type": "string"
                    },
                    "readMask": {
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Read mask to specify which fields to return."
                    }
                  },
                  "id": "chromemanagement.customers.telemetry.users.list",
                  "path": "v1/{+parent}/telemetry/users",
                  "flatPath": "v1/customers/{customersId}/telemetry/users",
                  "response": {
                    "$ref": "GoogleChromeManagementV1ListTelemetryUsersResponse"
                  },
                  "description": "List all telemetry users.",
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.telemetry.readonly"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET"
                }
              }
            },
            "notificationConfigs": {
              "methods": {
                "delete": {
                  "id": "chromemanagement.customers.telemetry.notificationConfigs.delete",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the notification config to delete. Format: `customers/{customer}/telemetry/notificationConfigs/{notification_config}`",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^customers/[^/]+/telemetry/notificationConfigs/[^/]+$"
                    }
                  },
                  "flatPath": "v1/customers/{customersId}/telemetry/notificationConfigs/{notificationConfigsId}",
                  "description": "Delete a telemetry notification config.",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.telemetry.readonly"
                  ],
                  "path": "v1/{+name}"
                },
                "list": {
                  "flatPath": "v1/customers/{customersId}/telemetry/notificationConfigs",
                  "id": "chromemanagement.customers.telemetry.notificationConfigs.list",
                  "path": "v1/{+parent}/telemetry/notificationConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of notification configs to return. The service may return fewer than this value. If unspecified, at most 100 notification configs will be returned. The maximum value is 100; values above 100 will be coerced to 100."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A page token, received from a previous `ListTelemetryNotificationConfigs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTelemetryNotificationConfigs` must match the call that provided the page token."
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^customers/[^/]+$",
                      "description": "Required. The parent which owns the notification configs.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleChromeManagementV1ListTelemetryNotificationConfigsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.telemetry.readonly"
                  ],
                  "description": "List all telemetry notification configs.",
                  "httpMethod": "GET"
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.telemetry.readonly"
                  ],
                  "description": "Create a telemetry notification config.",
                  "request": {
                    "$ref": "GoogleChromeManagementV1TelemetryNotificationConfig"
                  },
                  "id": "chromemanagement.customers.telemetry.notificationConfigs.create",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "pattern": "^customers/[^/]+$",
                      "description": "Required. The parent resource where this notification config will be created. Format: `customers/{customer}`",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "GoogleChromeManagementV1TelemetryNotificationConfig"
                  },
                  "path": "v1/{+parent}/telemetry/notificationConfigs",
                  "flatPath": "v1/customers/{customersId}/telemetry/notificationConfigs"
                }
              }
            }
          }
        },
        "reports": {
          "methods": {
            "countInstalledApps": {
              "flatPath": "v1/customers/{customersId}/reports:countInstalledApps",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "response": {
                "$ref": "GoogleChromeManagementV1CountInstalledAppsResponse"
              },
              "id": "chromemanagement.customers.reports.countInstalledApps",
              "parameters": {
                "orgUnitId": {
                  "type": "string",
                  "description": "The ID of the organizational unit.",
                  "location": "query"
                },
                "pageSize": {
                  "description": "Maximum number of results to return. Maximum and default are 100.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "customer": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request."
                },
                "filter": {
                  "description": "Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Supported filter fields: * app_name * app_type * install_type * number_of_permissions * total_install_count * latest_profile_active_date * permission_name * app_id",
                  "type": "string",
                  "location": "query"
                },
                "orderBy": {
                  "type": "string",
                  "location": "query",
                  "description": "Field used to order results. Supported order by fields: * app_name * app_type * install_type * number_of_permissions * total_install_count * app_id"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Token to specify the page of the request to be returned."
                }
              },
              "description": "Generate report of app installations.",
              "path": "v1/{+customer}/reports:countInstalledApps",
              "parameterOrder": [
                "customer"
              ]
            },
            "countChromeHardwareFleetDevices": {
              "path": "v1/{+customer}/reports:countChromeHardwareFleetDevices",
              "id": "chromemanagement.customers.reports.countChromeHardwareFleetDevices",
              "response": {
                "$ref": "GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse"
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "parameters": {
                "readMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string",
                  "description": "Required. Mask of the fields that should be populated in the returned report."
                },
                "customer": {
                  "location": "path",
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "description": "Required. The customer ID or \"my_customer\"."
                },
                "orgUnitId": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional. The ID of the organizational unit. If omitted, all data will be returned."
                }
              },
              "parameterOrder": [
                "customer"
              ],
              "description": "Counts of devices with a specific hardware specification from the requested hardware type (for example model name, processor type). Further information can be found here https://support.google.com/chrome/a/answer/10564947",
              "flatPath": "v1/customers/{customersId}/reports:countChromeHardwareFleetDevices"
            },
            "findInstalledAppDevices": {
              "parameterOrder": [
                "customer"
              ],
              "description": "Generate report of managed Chrome browser devices that have a specified app installed.",
              "flatPath": "v1/customers/{customersId}/reports:findInstalledAppDevices",
              "response": {
                "$ref": "GoogleChromeManagementV1FindInstalledAppDevicesResponse"
              },
              "parameters": {
                "appType": {
                  "location": "query",
                  "enum": [
                    "APP_TYPE_UNSPECIFIED",
                    "EXTENSION",
                    "APP",
                    "THEME",
                    "HOSTED_APP",
                    "ANDROID_APP"
                  ],
                  "enumDescriptions": [
                    "App type not specified.",
                    "Chrome extension.",
                    "Chrome app.",
                    "Chrome theme.",
                    "Chrome hosted app.",
                    "ARC++ app."
                  ],
                  "type": "string",
                  "description": "Type of the app."
                },
                "appId": {
                  "description": "Unique identifier of the app. For Chrome apps and extensions, the 32-character id (e.g. ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g. com.evernote).",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "description": "Token to specify the page of the request to be returned.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Maximum number of results to return. Maximum and default are 100.",
                  "format": "int32",
                  "type": "integer"
                },
                "filter": {
                  "type": "string",
                  "description": "Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Supported filter fields: * last_active_date",
                  "location": "query"
                },
                "customer": {
                  "required": true,
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request.",
                  "location": "path"
                },
                "orgUnitId": {
                  "description": "The ID of the organizational unit.",
                  "location": "query",
                  "type": "string"
                },
                "orderBy": {
                  "type": "string",
                  "description": "Field used to order results. Supported order by fields: * machine * device_id",
                  "location": "query"
                }
              },
              "httpMethod": "GET",
              "id": "chromemanagement.customers.reports.findInstalledAppDevices",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "path": "v1/{+customer}/reports:findInstalledAppDevices"
            },
            "enumeratePrintJobs": {
              "description": "Get a list of print jobs.",
              "parameters": {
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Note: Only \u003e= and \u003c= comparators are supported for `complete_time`. Note: Only = comparator supported for `user_id` and `printer_id`. Supported filter fields: * complete_time * printer_id * user_id"
                },
                "customer": {
                  "pattern": "^customers/[^/]+$",
                  "required": true,
                  "description": "Required. Customer ID prefixed with \"customers/\" or \"customers/my_customer\" to use the customer associated to the account making the request.",
                  "type": "string",
                  "location": "path"
                },
                "pageToken": {
                  "description": "A page token received from a previous `EnumeratePrintJobs` call. Provide this to retrieve the subsequent page. If omitted, the first page of results will be returned. When paginating, all other parameters provided to `EnumeratePrintJobs` must match the call that provided the page token.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "description": "The number of print jobs in the page from 0 to 100 inclusive, if page_size is not specified or zero, the size will be 50.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "printerOrgUnitId": {
                  "type": "string",
                  "description": "The ID of the organizational unit for printers. If specified, only print jobs submitted to printers from the specified organizational unit will be returned.",
                  "location": "query"
                },
                "orderBy": {
                  "location": "query",
                  "description": "Field used to order results. If not specified, results will be ordered in descending order of the `complete_time` field. Supported order by fields: * title * state * create_time * complete_time * document_page_count * color_mode * duplex_mode * printer * user_email",
                  "type": "string"
                }
              },
              "path": "v1/{+customer}/reports:enumeratePrintJobs",
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleChromeManagementV1EnumeratePrintJobsResponse"
              },
              "parameterOrder": [
                "customer"
              ],
              "flatPath": "v1/customers/{customersId}/reports:enumeratePrintJobs",
              "id": "chromemanagement.customers.reports.enumeratePrintJobs",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ]
            },
            "countChromeBrowsersNeedingAttention": {
              "parameterOrder": [
                "customer"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse"
              },
              "id": "chromemanagement.customers.reports.countChromeBrowsersNeedingAttention",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "flatPath": "v1/customers/{customersId}/reports:countChromeBrowsersNeedingAttention",
              "description": "Count of Chrome Browsers that have been recently enrolled, have new policy to be synced, or have no recent activity.",
              "path": "v1/{+customer}/reports:countChromeBrowsersNeedingAttention",
              "parameters": {
                "customer": {
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. The customer ID or \"my_customer\" prefixed with \"customers/\".",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "orgUnitId": {
                  "description": "Optional. The ID of the organizational unit. If omitted, all data will be returned.",
                  "location": "query",
                  "type": "string"
                }
              }
            },
            "countPrintJobsByPrinter": {
              "path": "v1/{+customer}/reports:countPrintJobsByPrinter",
              "httpMethod": "GET",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Token to specify the page of the response to be returned."
                },
                "printerOrgUnitId": {
                  "location": "query",
                  "description": "The ID of the organizational unit for printers. If specified, only data for printers from the specified organizational unit will be returned. If omitted, data for printers from all organizational units will be returned.",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Maximum number of results to return. Maximum and default are 100.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                },
                "customer": {
                  "description": "Required. Customer ID prefixed with \"customers/\" or \"customers/my_customer\" to use the customer associated to the account making the request.",
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "orderBy": {
                  "description": "Field used to order results. If omitted, results will be ordered in ascending order of the 'printer' field. Supported order_by fields: * printer * job_count * device_count * user_count",
                  "type": "string",
                  "location": "query"
                },
                "filter": {
                  "description": "Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Note: Only \u003e= and \u003c= comparators are supported in this filter. Supported filter fields: * complete_time",
                  "type": "string",
                  "location": "query"
                }
              },
              "id": "chromemanagement.customers.reports.countPrintJobsByPrinter",
              "flatPath": "v1/customers/{customersId}/reports:countPrintJobsByPrinter",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "parameterOrder": [
                "customer"
              ],
              "description": "Get a summary of printing done by each printer.",
              "response": {
                "$ref": "GoogleChromeManagementV1CountPrintJobsByPrinterResponse"
              }
            },
            "countPrintJobsByUser": {
              "httpMethod": "GET",
              "description": "Get a summary of printing done by each user.",
              "flatPath": "v1/customers/{customersId}/reports:countPrintJobsByUser",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "path": "v1/{+customer}/reports:countPrintJobsByUser",
              "parameterOrder": [
                "customer"
              ],
              "response": {
                "$ref": "GoogleChromeManagementV1CountPrintJobsByUserResponse"
              },
              "parameters": {
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Note: Only \u003e= and \u003c= comparators are supported in this filter. Supported filter fields: * complete_time"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Token to specify the page of the response to be returned."
                },
                "customer": {
                  "type": "string",
                  "description": "Required. Customer ID prefixed with \"customers/\" or \"customers/my_customer\" to use the customer associated to the account making the request.",
                  "pattern": "^customers/[^/]+$",
                  "required": true,
                  "location": "path"
                },
                "pageSize": {
                  "description": "Maximum number of results to return. Maximum and default are 100.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "printerOrgUnitId": {
                  "description": "The ID of the organizational unit for printers. If specified, only print jobs initiated with printers from the specified organizational unit will be counted. If omitted, all print jobs will be counted.",
                  "type": "string",
                  "location": "query"
                },
                "orderBy": {
                  "location": "query",
                  "type": "string",
                  "description": "Field used to order results. If omitted, results will be ordered in ascending order of the 'user_email' field. Supported order_by fields: * user_email * job_count * printer_count * device_count"
                }
              },
              "id": "chromemanagement.customers.reports.countPrintJobsByUser"
            },
            "countChromeDevicesThatNeedAttention": {
              "path": "v1/{+customer}/reports:countChromeDevicesThatNeedAttention",
              "description": "Counts of ChromeOS devices that have not synced policies or have lacked user activity in the past 28 days, are out of date, or are not complaint. Further information can be found here https://support.google.com/chrome/a/answer/10564947",
              "parameterOrder": [
                "customer"
              ],
              "id": "chromemanagement.customers.reports.countChromeDevicesThatNeedAttention",
              "flatPath": "v1/customers/{customersId}/reports:countChromeDevicesThatNeedAttention",
              "response": {
                "$ref": "GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse"
              },
              "httpMethod": "GET",
              "parameters": {
                "readMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Required. Mask of the fields that should be populated in the returned report.",
                  "type": "string"
                },
                "orgUnitId": {
                  "description": "Optional. The ID of the organizational unit. If omitted, all data will be returned.",
                  "type": "string",
                  "location": "query"
                },
                "customer": {
                  "type": "string",
                  "description": "Required. The customer ID or \"my_customer\" prefixed with \"customers/\".",
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ]
            },
            "countChromeDevicesReachingAutoExpirationDate": {
              "httpMethod": "GET",
              "id": "chromemanagement.customers.reports.countChromeDevicesReachingAutoExpirationDate",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "parameters": {
                "minAueDate": {
                  "type": "string",
                  "description": "Optional. Maximum expiration date in format yyyy-mm-dd in UTC timezone. If included returns all devices that have already expired and devices with auto expiration date equal to or later than the minimum date.",
                  "location": "query"
                },
                "customer": {
                  "location": "path",
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. The customer ID or \"my_customer\" prefixed with \"customers/\".",
                  "type": "string"
                },
                "maxAueDate": {
                  "description": "Optional. Maximum expiration date in format yyyy-mm-dd in UTC timezone. If included returns all devices that have already expired and devices with auto expiration date equal to or earlier than the maximum date.",
                  "location": "query",
                  "type": "string"
                },
                "orgUnitId": {
                  "description": "Optional. The organizational unit ID, if omitted, will return data for all organizational units.",
                  "type": "string",
                  "location": "query"
                }
              },
              "description": "Generate report of the number of devices expiring in each month of the selected time frame. Devices are grouped by auto update expiration date and model. Further information can be found [here](https://support.google.com/chrome/a/answer/10564947).",
              "response": {
                "$ref": "GoogleChromeManagementV1CountChromeDevicesReachingAutoExpirationDateResponse"
              },
              "path": "v1/{+customer}/reports:countChromeDevicesReachingAutoExpirationDate",
              "parameterOrder": [
                "customer"
              ],
              "flatPath": "v1/customers/{customersId}/reports:countChromeDevicesReachingAutoExpirationDate"
            },
            "countChromeVersions": {
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Maximum number of results to return. Maximum and default are 100.",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Token to specify the page of the request to be returned.",
                  "type": "string",
                  "location": "query"
                },
                "orgUnitId": {
                  "description": "The ID of the organizational unit.",
                  "location": "query",
                  "type": "string"
                },
                "customer": {
                  "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request.",
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "type": "string"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Supported filter fields: * last_active_date"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "description": "Generate report of installed Chrome versions.",
              "parameterOrder": [
                "customer"
              ],
              "httpMethod": "GET",
              "path": "v1/{+customer}/reports:countChromeVersions",
              "flatPath": "v1/customers/{customersId}/reports:countChromeVersions",
              "response": {
                "$ref": "GoogleChromeManagementV1CountChromeVersionsResponse"
              },
              "id": "chromemanagement.customers.reports.countChromeVersions"
            }
          }
        },
        "apps": {
          "resources": {
            "web": {
              "methods": {
                "get": {
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The app for which details are being queried. Examples: \"customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2\" for the Save to Google Drive Chrome extension version 2.1.2, \"customers/my_customer/apps/android/com.google.android.apps.docs\" for the Google Drive Android app's latest version.",
                      "pattern": "^customers/[^/]+/apps/web/[^/]+$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.appdetails.readonly"
                  ],
                  "response": {
                    "$ref": "GoogleChromeManagementV1AppDetails"
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1/customers/{customersId}/apps/web/{webId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "chromemanagement.customers.apps.web.get",
                  "description": "Get a specific app for a customer by its resource name."
                }
              }
            },
            "chrome": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "description": "Get a specific app for a customer by its resource name.",
                  "path": "v1/{+name}",
                  "flatPath": "v1/customers/{customersId}/apps/chrome/{chromeId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The app for which details are being queried. Examples: \"customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2\" for the Save to Google Drive Chrome extension version 2.1.2, \"customers/my_customer/apps/android/com.google.android.apps.docs\" for the Google Drive Android app's latest version.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^customers/[^/]+/apps/chrome/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.appdetails.readonly"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "chromemanagement.customers.apps.chrome.get",
                  "response": {
                    "$ref": "GoogleChromeManagementV1AppDetails"
                  }
                }
              }
            },
            "android": {
              "methods": {
                "get": {
                  "flatPath": "v1/customers/{customersId}/apps/android/{androidId}",
                  "id": "chromemanagement.customers.apps.android.get",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. The app for which details are being queried. Examples: \"customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2\" for the Save to Google Drive Chrome extension version 2.1.2, \"customers/my_customer/apps/android/com.google.android.apps.docs\" for the Google Drive Android app's latest version.",
                      "pattern": "^customers/[^/]+/apps/android/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.appdetails.readonly"
                  ],
                  "response": {
                    "$ref": "GoogleChromeManagementV1AppDetails"
                  },
                  "description": "Get a specific app for a customer by its resource name."
                }
              }
            }
          },
          "methods": {
            "countChromeAppRequests": {
              "id": "chromemanagement.customers.apps.countChromeAppRequests",
              "description": "Generate summary of app installation requests.",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Token to specify the page of the request to be returned."
                },
                "orgUnitId": {
                  "description": "The ID of the organizational unit.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "Maximum number of results to return. Maximum and default are 50, anything above will be coerced to 50."
                },
                "customer": {
                  "type": "string",
                  "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request.",
                  "location": "path",
                  "pattern": "^customers/[^/]+$",
                  "required": true
                },
                "orderBy": {
                  "location": "query",
                  "type": "string",
                  "description": "Field used to order results. Supported fields: * request_count * latest_request_time"
                }
              },
              "response": {
                "$ref": "GoogleChromeManagementV1CountChromeAppRequestsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.appdetails.readonly"
              ],
              "httpMethod": "GET",
              "parameterOrder": [
                "customer"
              ],
              "flatPath": "v1/customers/{customersId}/apps:countChromeAppRequests",
              "path": "v1/{+customer}/apps:countChromeAppRequests"
            }
          }
        }
      }
    }
  },
  "title": "Chrome Management API",
  "baseUrl": "https://chromemanagement.googleapis.com/",
  "basePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/chrome.management.appdetails.readonly": {
          "description": "See detailed information about apps installed on Chrome browsers and devices managed by your organization"
        },
        "https://www.googleapis.com/auth/chrome.management.telemetry.readonly": {
          "description": "See basic device and telemetry information collected from Chrome OS devices or users managed within your organization"
        },
        "https://www.googleapis.com/auth/chrome.management.reports.readonly": {
          "description": "See reports about devices and Chrome browsers managed within your organization"
        }
      }
    }
  },
  "rootUrl": "https://chromemanagement.googleapis.com/",
  "schemas": {
    "GoogleChromeManagementV1TelemetryNotificationFilter": {
      "description": "Configures how the telemetry data should be filtered.",
      "type": "object",
      "id": "GoogleChromeManagementV1TelemetryNotificationFilter",
      "properties": {
        "telemetryEventNotificationFilter": {
          "description": "Only sends notifications for the telemetry events matching this filter.",
          "$ref": "GoogleChromeManagementV1TelemetryEventNotificationFilter"
        },
        "userEmail": {
          "type": "string",
          "description": "If set, only sends notifications for telemetry data coming from devices owned by this user."
        },
        "userOrgUnitId": {
          "type": "string",
          "description": "If set, only sends notifications for telemetry data coming from devices owned by users in this org unit."
        },
        "deviceOrgUnitId": {
          "type": "string",
          "description": "If set, only sends notifications for telemetry data coming from devices in this org unit."
        },
        "deviceId": {
          "type": "string",
          "description": "If set, only sends notifications for telemetry data coming from this device."
        }
      }
    },
    "GoogleChromeManagementV1NetworkBandwidthReport": {
      "description": "Network bandwidth report. * Granular permission needed: TELEMETRY_API_NETWORK_REPORT",
      "id": "GoogleChromeManagementV1NetworkBandwidthReport",
      "type": "object",
      "properties": {
        "reportTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Timestamp of when the report was collected.",
          "readOnly": true
        },
        "downloadSpeedKbps": {
          "readOnly": true,
          "format": "int64",
          "type": "string",
          "description": "Output only. Download speed in kilobits per second."
        }
      }
    },
    "GoogleChromeManagementV1RuntimeCountersReport": {
      "description": "Runtime counters retrieved from CPU. Currently the runtime counters telemetry is only supported by Intel vPro PSR on Gen 14+.",
      "properties": {
        "uptimeRuntimeDuration": {
          "description": "Total lifetime runtime. Currently always S0 runtime from Intel vPro PSR.",
          "type": "string",
          "format": "google-duration"
        },
        "reportTime": {
          "description": "Timestamp when the report was collected.",
          "type": "string",
          "format": "google-datetime"
        },
        "enterPoweroffCount": {
          "format": "int64",
          "description": "Number of times that the device has entered into the power-off state. Currently obtained via the PSR, count from S0-\u003eS5.",
          "type": "string"
        },
        "enterHibernationCount": {
          "description": "Number of times that the device has entered into the hibernation state. Currently obtained via the PSR, count from S0-\u003eS4.",
          "type": "string",
          "format": "int64"
        },
        "enterSleepCount": {
          "type": "string",
          "description": "Number of times that the device has entered into the sleep state. Currently obtained via the PSR, count from S0-\u003eS3.",
          "format": "int64"
        }
      },
      "id": "GoogleChromeManagementV1RuntimeCountersReport",
      "type": "object"
    },
    "GoogleChromeManagementV1TelemetryNetworkSignalStrengthEvent": {
      "description": "`TelemetryNetworkSignalStrengthEvent` is triggered on WiFi signal strength events. * Granular permission needed: TELEMETRY_API_NETWORK_REPORT",
      "properties": {
        "guid": {
          "description": "Unique identifier of the network.",
          "type": "string"
        },
        "signalStrengthDbm": {
          "format": "int32",
          "type": "integer",
          "description": "Signal strength RSSI value."
        }
      },
      "type": "object",
      "id": "GoogleChromeManagementV1TelemetryNetworkSignalStrengthEvent"
    },
    "GoogleChromeManagementV1PrintJob": {
      "description": "Represents a request to print a document that has been submitted to a printer.",
      "id": "GoogleChromeManagementV1PrintJob",
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "Print job creation timestamp.",
          "format": "google-datetime"
        },
        "printer": {
          "type": "string",
          "description": "Name of the printer used for printing."
        },
        "userEmail": {
          "description": "The primary e-mail address of the user who submitted the print job.",
          "type": "string"
        },
        "documentPageCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of pages in the document."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PRINTED",
            "CANCELLED",
            "FAILED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Print job is in an unspecified state.",
            "The document was successfully printed.",
            "Print job was cancelled.",
            "Print job failed."
          ],
          "description": "The final state of the job."
        },
        "completeTime": {
          "description": "Print job completion timestamp.",
          "format": "google-datetime",
          "type": "string"
        },
        "copyCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of copies."
        },
        "colorMode": {
          "enum": [
            "COLOR_MODE_UNSPECIFIED",
            "BLACK_AND_WHITE",
            "COLOR"
          ],
          "description": "Color mode.",
          "enumDescriptions": [
            "Unspecified.",
            "Black and white.",
            "Color."
          ],
          "type": "string"
        },
        "duplexMode": {
          "description": "Duplex mode.",
          "enumDescriptions": [
            "Unspecified.",
            "One-sided.",
            "Two-sided flipping over long edge.",
            "Two-sided flipping over short edge."
          ],
          "enum": [
            "DUPLEX_MODE_UNSPECIFIED",
            "ONE_SIDED",
            "TWO_SIDED_LONG_EDGE",
            "TWO_SIDED_SHORT_EDGE"
          ],
          "type": "string"
        },
        "printerId": {
          "description": "API ID of the printer used for printing.",
          "type": "string"
        },
        "title": {
          "description": "The title of the document.",
          "type": "string"
        },
        "id": {
          "description": "Unique ID of the print job.",
          "type": "string"
        },
        "userId": {
          "type": "string",
          "description": "The unique Directory API ID of the user who submitted the print job."
        }
      }
    },
    "GoogleChromeManagementV1DeviceActivityReport": {
      "type": "object",
      "description": "Device activity report. * Granular permission needed: TELEMETRY_API_DEVICE_ACTIVITY_REPORT",
      "properties": {
        "reportTime": {
          "readOnly": true,
          "description": "Output only. Timestamp of when the report was collected.",
          "type": "string",
          "format": "google-datetime"
        },
        "deviceActivityState": {
          "readOnly": true,
          "enum": [
            "DEVICE_ACTIVITY_STATE_UNSPECIFIED",
            "ACTIVE",
            "IDLE",
            "LOCKED"
          ],
          "description": "Output only. Device activity state.",
          "type": "string",
          "enumDescriptions": [
            "Device activity state is unspecified.",
            "Device is currently being used.",
            "Device is currently idle.",
            "Device is currently locked."
          ]
        }
      },
      "id": "GoogleChromeManagementV1DeviceActivityReport"
    },
    "GoogleChromeManagementV1ListTelemetryDevicesResponse": {
      "id": "GoogleChromeManagementV1ListTelemetryDevicesResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to specify next page in the list.",
          "type": "string"
        },
        "devices": {
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1TelemetryDevice"
          },
          "description": "Telemetry devices returned in the response."
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1NetworkStatusReport": {
      "properties": {
        "wifiPowerManagementEnabled": {
          "description": "Output only. Wifi power management enabled",
          "type": "boolean",
          "readOnly": true
        },
        "connectionState": {
          "description": "Output only. Current connection state of the network.",
          "enumDescriptions": [
            "Network connection state unspecified.",
            "The network is connected and internet connectivity is available.",
            "The network is connected and not in a detected portal state, but internet connectivity may not be available.",
            "The network is connected but a portal state was detected. Internet connectivity may be limited.",
            "The network is in the process of connecting.",
            "The network is not connected."
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "NETWORK_CONNECTION_STATE_UNSPECIFIED",
            "ONLINE",
            "CONNECTED",
            "PORTAL",
            "CONNECTING",
            "NOT_CONNECTED"
          ]
        },
        "sampleFrequency": {
          "type": "string",
          "format": "google-duration",
          "description": "Output only. Frequency the report is sampled.",
          "readOnly": true
        },
        "signalStrengthDbm": {
          "readOnly": true,
          "format": "int32",
          "description": "Output only. Signal strength for wireless networks measured in decibels.",
          "type": "integer"
        },
        "lanIpAddress": {
          "description": "Output only. LAN IP address.",
          "readOnly": true,
          "type": "string"
        },
        "transmissionPowerDbm": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Output only. Transmission power measured in decibels."
        },
        "gatewayIpAddress": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Gateway IP address."
        },
        "connectionType": {
          "type": "string",
          "enumDescriptions": [
            "Network connection type unspecified",
            "Cellular network connection.",
            "Ethernet network connection.",
            "Tether network connection.",
            "VPN network connection.",
            "Wifi network connection."
          ],
          "description": "Output only. Network connection type.",
          "enum": [
            "NETWORK_TYPE_UNSPECIFIED",
            "CELLULAR",
            "ETHERNET",
            "TETHER",
            "VPN",
            "WIFI"
          ],
          "readOnly": true
        },
        "receivingBitRateMbps": {
          "description": "Output only. Receiving bit rate measured in Megabits per second.",
          "format": "int64",
          "readOnly": true,
          "type": "string"
        },
        "transmissionBitRateMbps": {
          "description": "Output only. Transmission bit rate measured in Megabits per second.",
          "type": "string",
          "format": "int64",
          "readOnly": true
        },
        "reportTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Time at which the network state was reported.",
          "format": "google-datetime"
        },
        "encryptionOn": {
          "description": "Output only. Whether the wifi encryption key is turned off.",
          "type": "boolean",
          "readOnly": true
        },
        "wifiLinkQuality": {
          "description": "Output only. Wifi link quality. Value ranges from [0, 70]. 0 indicates no signal and 70 indicates a strong signal.",
          "format": "int64",
          "type": "string",
          "readOnly": true
        },
        "guid": {
          "type": "string",
          "description": "Output only. Network connection guid.",
          "readOnly": true
        }
      },
      "id": "GoogleChromeManagementV1NetworkStatusReport",
      "description": "State of visible/configured networks. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportNetworkStatus](https://chromeenterprise.google/policies/#ReportNetworkStatus) * Data Collection Frequency: 60 minutes * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: Yes * Granular permission needed: TELEMETRY_API_NETWORK_REPORT",
      "type": "object"
    },
    "GoogleChromeManagementV1GraphicsInfo": {
      "id": "GoogleChromeManagementV1GraphicsInfo",
      "description": "Information of the graphics subsystem. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceGraphicsStatus](https://chromeenterprise.google/policies/#ReportDeviceGraphicsStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_GRAPHICS_INFO",
      "properties": {
        "eprivacySupported": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Is ePrivacy screen supported or not."
        },
        "adapterInfo": {
          "readOnly": true,
          "$ref": "GoogleChromeManagementV1GraphicsAdapterInfo",
          "description": "Output only. Information about the graphics adapter (GPU)."
        },
        "touchScreenInfo": {
          "description": "Output only. Information about the internal touch screen(s) of the device.",
          "$ref": "GoogleChromeManagementV1TouchScreenInfo",
          "readOnly": true
        },
        "displayDevices": {
          "readOnly": true,
          "items": {
            "$ref": "GoogleChromeManagementV1DisplayDevice"
          },
          "type": "array",
          "description": "Output only. Information about the display(s) of the device."
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse": {
      "id": "GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse",
      "description": "Response containing counts for devices that need attention.",
      "properties": {
        "osVersionNotCompliantCount": {
          "description": "Number of devices whose OS version is not compliant.",
          "format": "int64",
          "type": "string"
        },
        "noRecentUserActivityCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of ChromeOS devices that have not seen any user activity in the past 28 days."
        },
        "unsupportedPolicyCount": {
          "description": "Number of devices that are unable to apply a policy due to an OS version mismatch.",
          "type": "string",
          "format": "int64"
        },
        "pendingUpdate": {
          "type": "string",
          "description": "Number of devices that are pending an OS update.",
          "format": "int64"
        },
        "noRecentPolicySyncCount": {
          "format": "int64",
          "description": "Number of ChromeOS devices have not synced policies in the past 28 days.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1TelemetryUsbPeripheralsEvent": {
      "id": "GoogleChromeManagementV1TelemetryUsbPeripheralsEvent",
      "type": "object",
      "description": "`TelemetryUsbPeripheralsEvent` is triggered USB devices are either added or removed. * Granular permission needed: TELEMETRY_API_PERIPHERALS_REPORT",
      "properties": {
        "usbPeripheralReport": {
          "description": "List of usb devices that were either added or removed.",
          "items": {
            "$ref": "GoogleChromeManagementV1UsbPeripheralReport"
          },
          "type": "array"
        }
      }
    },
    "GoogleChromeManagementV1MemoryStatusReport": {
      "id": "GoogleChromeManagementV1MemoryStatusReport",
      "description": "Contains samples of memory status reports. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceMemoryInfo](https://chromeenterprise.google/policies/#ReportDeviceMemoryInfo) * Data Collection Frequency: Only at upload, SystemRamFreeByes is collected every 10 minutes * Default Data Reporting Frequency: Every 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_MEMORY_REPORT",
      "type": "object",
      "properties": {
        "pageFaults": {
          "description": "Output only. Number of page faults during this collection",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "systemRamFreeBytes": {
          "readOnly": true,
          "format": "int64",
          "type": "string",
          "description": "Output only. Amount of free RAM in bytes (unreliable due to Garbage Collection)."
        },
        "reportTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp in milliseconds representing time at which this report was sampled."
        },
        "sampleFrequency": {
          "type": "string",
          "description": "Output only. Frequency the report is sampled.",
          "format": "google-duration",
          "readOnly": true
        }
      }
    },
    "GoogleChromeManagementV1CountPrintJobsByPrinterResponse": {
      "description": "Response containing a summary printing report for each printer from the specified organizational unit for the requested time interval.",
      "type": "object",
      "properties": {
        "printerReports": {
          "items": {
            "$ref": "GoogleChromeManagementV1PrinterReport"
          },
          "type": "array",
          "description": "List of PrinterReports matching request."
        },
        "nextPageToken": {
          "description": "Pagination token for requesting the next page.",
          "type": "string"
        },
        "totalSize": {
          "format": "int64",
          "description": "Total number of printers matching request.",
          "type": "string"
        }
      },
      "id": "GoogleChromeManagementV1CountPrintJobsByPrinterResponse"
    },
    "GoogleChromeManagementV1ChromeAppPermission": {
      "description": "Permission requested by a Chrome app or extension.",
      "properties": {
        "documentationUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. If available, a URI to a page that has documentation for the current permission."
        },
        "type": {
          "description": "Output only. The type of the permission.",
          "readOnly": true,
          "type": "string"
        },
        "accessUserData": {
          "description": "Output only. If available, whether this permissions grants the app/extension access to user data.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "id": "GoogleChromeManagementV1ChromeAppPermission",
      "type": "object"
    },
    "GoogleChromeManagementV1CpuStatusReport": {
      "description": "Provides information about the status of the CPU. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Every 10 minutes * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_CPU_REPORT",
      "type": "object",
      "id": "GoogleChromeManagementV1CpuStatusReport",
      "properties": {
        "cpuUtilizationPct": {
          "type": "integer",
          "readOnly": true,
          "description": "Output only. Sample of CPU utilization (0-100 percent).",
          "format": "int32"
        },
        "sampleFrequency": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Frequency the report is sampled.",
          "format": "google-duration"
        },
        "cpuTemperatureInfo": {
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1CpuTemperatureInfo"
          },
          "description": "Output only. CPU temperature sample info per CPU core in Celsius",
          "readOnly": true
        },
        "reportTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The timestamp in milliseconds representing time at which this report was sampled."
        }
      }
    },
    "GoogleChromeManagementV1CountPrintJobsByUserResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token for requesting the next page."
        },
        "userPrintReports": {
          "description": "List of UserPrintReports matching request.",
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1UserPrintReport"
          }
        },
        "totalSize": {
          "type": "string",
          "format": "int64",
          "description": "Total number of users matching request."
        }
      },
      "type": "object",
      "description": "Response containing a summary printing report for each user that has initiated a print job with a printer from the specified organizational unit during the requested time interval.",
      "id": "GoogleChromeManagementV1CountPrintJobsByUserResponse"
    },
    "GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse": {
      "properties": {
        "memoryReports": {
          "type": "array",
          "description": "The DeviceHardwareCountReport for device memory amount in gigabytes (for example 16).",
          "items": {
            "$ref": "GoogleChromeManagementV1DeviceHardwareCountReport"
          }
        },
        "storageReports": {
          "items": {
            "$ref": "GoogleChromeManagementV1DeviceHardwareCountReport"
          },
          "type": "array",
          "description": "The DeviceHardwareCountReport for device storage amount in gigabytes (for example 128)."
        },
        "cpuReports": {
          "items": {
            "$ref": "GoogleChromeManagementV1DeviceHardwareCountReport"
          },
          "type": "array",
          "description": "The DeviceHardwareCountReport for device cpu type (for example Intel(R) Core(TM) i7-10610U CPU @ 1.80GHz)."
        },
        "modelReports": {
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1DeviceHardwareCountReport"
          },
          "description": "The DeviceHardwareCountReport for device model type (for example Acer C7 Chromebook)."
        }
      },
      "id": "GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse",
      "type": "object",
      "description": "Response containing a list of devices with a specific type of hardware specification from the requested hardware type."
    },
    "GoogleChromeManagementV1ChromeAppInfo": {
      "description": "Chrome Web Store app information.",
      "id": "GoogleChromeManagementV1ChromeAppInfo",
      "properties": {
        "type": {
          "type": "string",
          "description": "Output only. Types of an item in the Chrome Web Store",
          "enum": [
            "ITEM_TYPE_UNSPECIFIED",
            "EXTENSION",
            "OTHERS"
          ],
          "enumDescriptions": [
            "Unspecified ItemType.",
            "Chrome Extensions.",
            "Any other type than extension."
          ],
          "readOnly": true
        },
        "siteAccess": {
          "description": "Output only. Every permission giving access to domains or broad host patterns. ( e.g. www.google.com). This includes the matches from content scripts as well as hosts in the permissions node of the manifest. Version-specific field that will only be set when the requested app version is found.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1ChromeAppSiteAccess"
          }
        },
        "supportEnabled": {
          "description": "Output only. The app developer has enabled support for their app. Version-specific field that will only be set when the requested app version is found.",
          "readOnly": true,
          "type": "boolean"
        },
        "minUserCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "description": "Output only. The minimum number of users using this app."
        },
        "googleOwned": {
          "readOnly": true,
          "description": "Output only. Whether the app or extension is built and maintained by Google. Version-specific field that will only be set when the requested app version is found.",
          "type": "boolean"
        },
        "permissions": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1ChromeAppPermission"
          },
          "description": "Output only. Every custom permission requested by the app. Version-specific field that will only be set when the requested app version is found."
        },
        "isCwsHosted": {
          "description": "Output only. Whether the app or extension is in a published state in the Chrome Web Store.",
          "type": "boolean",
          "readOnly": true
        },
        "kioskEnabled": {
          "description": "Output only. Whether this app is enabled for Kiosk mode on ChromeOS devices",
          "readOnly": true,
          "type": "boolean"
        },
        "isKioskOnly": {
          "type": "boolean",
          "description": "Output only. Whether the app is only for Kiosk mode on ChromeOS devices",
          "readOnly": true
        },
        "isTheme": {
          "type": "boolean",
          "description": "Output only. Whether the app or extension is a theme.",
          "readOnly": true
        },
        "isExtensionPolicySupported": {
          "type": "boolean",
          "description": "Output only. Whether an app supports policy for extensions.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1FindInstalledAppDevicesResponse": {
      "type": "object",
      "properties": {
        "totalSize": {
          "format": "int32",
          "type": "integer",
          "description": "Total number of devices matching request."
        },
        "devices": {
          "description": "A list of devices which have the app installed. Sorted in ascending alphabetical order on the Device.machine field.",
          "items": {
            "$ref": "GoogleChromeManagementV1Device"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to specify the next page of the request.",
          "type": "string"
        }
      },
      "id": "GoogleChromeManagementV1FindInstalledAppDevicesResponse",
      "description": "Response containing a list of devices with queried app installed."
    },
    "GoogleChromeManagementV1CpuTemperatureInfo": {
      "type": "object",
      "properties": {
        "temperatureCelsius": {
          "description": "Output only. CPU temperature in Celsius.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "label": {
          "type": "string",
          "description": "Output only. CPU label. Example: Core 0",
          "readOnly": true
        }
      },
      "id": "GoogleChromeManagementV1CpuTemperatureInfo",
      "description": "CPU temperature of a device. Sampled per CPU core in Celsius. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Every 10 minutes * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A"
    },
    "GoogleChromeManagementV1AppDetails": {
      "description": "Resource representing app details.",
      "type": "object",
      "properties": {
        "reviewRating": {
          "format": "float",
          "readOnly": true,
          "description": "Output only. The rating of the app (on 5 stars). Chrome Web Store review information will always be for the latest version of an app.",
          "type": "number"
        },
        "homepageUri": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Home page or Website uri."
        },
        "appId": {
          "description": "Output only. Unique store identifier for the item. Examples: \"gmbmikajjgmnabiglmofipeabaddhgne\" for the Save to Google Drive Chrome extension, \"com.google.android.apps.docs\" for the Google Drive Android app.",
          "type": "string",
          "readOnly": true
        },
        "chromeAppInfo": {
          "$ref": "GoogleChromeManagementV1ChromeAppInfo",
          "readOnly": true,
          "description": "Output only. Chrome Web Store app information."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Format: name=customers/{customer_id}/apps/{chrome|android|web}/{app_id}@{version}"
        },
        "detailUri": {
          "type": "string",
          "description": "Output only. The uri for the detail page of the item.",
          "readOnly": true
        },
        "latestPublishTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Latest published time.",
          "format": "google-datetime"
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. App's description."
        },
        "isPaidApp": {
          "description": "Output only. Indicates if the app has to be paid for OR has paid content.",
          "type": "boolean",
          "readOnly": true
        },
        "androidAppInfo": {
          "readOnly": true,
          "description": "Output only. Android app information.",
          "$ref": "GoogleChromeManagementV1AndroidAppInfo"
        },
        "revisionId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. App version. A new revision is committed whenever a new version of the app is published."
        },
        "reviewNumber": {
          "description": "Output only. Number of reviews received. Chrome Web Store review information will always be for the latest version of an app.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "type": {
          "readOnly": true,
          "enumDescriptions": [
            "App type unspecified.",
            "Chrome app.",
            "ARC++ app.",
            "Web app."
          ],
          "enum": [
            "APP_ITEM_TYPE_UNSPECIFIED",
            "CHROME",
            "ANDROID",
            "WEB"
          ],
          "description": "Output only. App type.",
          "type": "string"
        },
        "serviceError": {
          "description": "Output only. Information about a partial service error if applicable.",
          "readOnly": true,
          "$ref": "GoogleRpcStatus"
        },
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. App's display name."
        },
        "publisher": {
          "description": "Output only. The publisher of the item.",
          "readOnly": true,
          "type": "string"
        },
        "privacyPolicyUri": {
          "readOnly": true,
          "description": "Output only. The URI pointing to the privacy policy of the app, if it was provided by the developer. Version-specific field that will only be set when the requested app version is found.",
          "type": "string"
        },
        "iconUri": {
          "type": "string",
          "description": "Output only. A link to an image that can be used as an icon for the product.",
          "readOnly": true
        },
        "firstPublishTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. First published time.",
          "readOnly": true
        }
      },
      "id": "GoogleChromeManagementV1AppDetails"
    },
    "GoogleChromeManagementV1HeartbeatStatusReport": {
      "type": "object",
      "description": "Heartbeat status report of a device. * Available for Kiosks * This field provides online/offline/unknown status of a device and will only be included if the status has changed (e.g. Online -\u003e Offline) * Data for this field is controlled via policy: [HeartbeatEnabled](https://chromeenterprise.google/policies/#HeartbeatEnabled) [More Info](https://support.google.com/chrome/a/answer/6179663#:~:text=On%20the%20Chrome,device%20status%20alerts) * Heartbeat Frequency: 2 mins * Note: If a device goes offline, it can take up to 12 minutes for the online status of the device to be updated * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: N/A * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_DEVICE_ACTIVITY_REPORT",
      "id": "GoogleChromeManagementV1HeartbeatStatusReport",
      "properties": {
        "reportTime": {
          "description": "Timestamp of when status changed was detected",
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "UNKNOWN",
            "ONLINE",
            "OFFLINE"
          ],
          "description": "State the device changed to",
          "enumDescriptions": [
            "State not specified",
            "Device is not eligible for heartbeat monitoring",
            "Device is online",
            "Device is offline"
          ],
          "type": "string"
        }
      }
    },
    "GoogleChromeManagementV1DeviceHardwareCountReport": {
      "description": "Report for CountChromeDevicesPerHardwareSpecResponse, contains the count of devices with a unique hardware specification.",
      "properties": {
        "bucket": {
          "type": "string",
          "description": "Public name of the hardware specification."
        },
        "count": {
          "type": "string",
          "format": "int64",
          "description": "Count of devices with a unique hardware specification."
        }
      },
      "id": "GoogleChromeManagementV1DeviceHardwareCountReport",
      "type": "object"
    },
    "GoogleChromeManagementV1CountChromeDevicesReachingAutoExpirationDateResponse": {
      "properties": {
        "deviceAueCountReports": {
          "items": {
            "$ref": "GoogleChromeManagementV1DeviceAueCountReport"
          },
          "description": "The list of reports sorted by auto update expiration date in ascending order.",
          "type": "array"
        }
      },
      "description": "Response containing a list of devices expiring in each month of a selected time frame. Counts are grouped by model and Auto Update Expiration date.",
      "id": "GoogleChromeManagementV1CountChromeDevicesReachingAutoExpirationDateResponse",
      "type": "object"
    },
    "GoogleChromeManagementV1TelemetryNetworkConnectionStateChangeEvent": {
      "description": "`TelemetryNetworkConnectionStateChangeEvent` is triggered on network connection state changes. * Granular permission needed: TELEMETRY_API_NETWORK_REPORT",
      "id": "GoogleChromeManagementV1TelemetryNetworkConnectionStateChangeEvent",
      "properties": {
        "connectionState": {
          "description": "Current connection state of the network.",
          "enumDescriptions": [
            "Network connection state unspecified.",
            "The network is connected and internet connectivity is available.",
            "The network is connected and not in a detected portal state, but internet connectivity may not be available.",
            "The network is connected but a portal state was detected. Internet connectivity may be limited.",
            "The network is in the process of connecting.",
            "The network is not connected."
          ],
          "enum": [
            "NETWORK_CONNECTION_STATE_UNSPECIFIED",
            "ONLINE",
            "CONNECTED",
            "PORTAL",
            "CONNECTING",
            "NOT_CONNECTED"
          ],
          "type": "string"
        },
        "guid": {
          "description": "Unique identifier of the network.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1Device": {
      "type": "object",
      "id": "GoogleChromeManagementV1Device",
      "description": "Describes a device reporting Chrome browser information.",
      "properties": {
        "deviceId": {
          "description": "Output only. The ID of the device that reported this Chrome browser information.",
          "readOnly": true,
          "type": "string"
        },
        "machine": {
          "description": "Output only. The name of the machine within its local network.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GoogleChromeManagementV1OsUpdateStatus": {
      "type": "object",
      "description": "Contains information regarding the current OS update status. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceOsUpdateStatus](https://chromeenterprise.google/policies/#ReportDeviceOsUpdateStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_OS_REPORT",
      "properties": {
        "lastUpdateCheckTime": {
          "type": "string",
          "description": "Output only. Timestamp of the last update check.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "lastUpdateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Timestamp of the last successful update.",
          "type": "string"
        },
        "lastRebootTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Timestamp of the last reboot."
        },
        "updateState": {
          "readOnly": true,
          "enumDescriptions": [
            "State unspecified.",
            "OS has not started downloading.",
            "OS has started download on device.",
            "Device needs reboot to finish upload."
          ],
          "type": "string",
          "enum": [
            "UPDATE_STATE_UNSPECIFIED",
            "OS_IMAGE_DOWNLOAD_NOT_STARTED",
            "OS_IMAGE_DOWNLOAD_IN_PROGRESS",
            "OS_UPDATE_NEED_REBOOT"
          ],
          "description": "Output only. Current state of the os update."
        },
        "newRequestedPlatformVersion": {
          "type": "string",
          "description": "Output only. New requested platform version from the pending updated kiosk app.",
          "readOnly": true
        },
        "newPlatformVersion": {
          "description": "Output only. New platform version of the os image being downloaded and applied. It is only set when update status is OS_IMAGE_DOWNLOAD_IN_PROGRESS or OS_UPDATE_NEED_REBOOT. Note this could be a dummy \"0.0.0.0\" for OS_UPDATE_NEED_REBOOT status for some edge cases, e.g. update engine is restarted without a reboot.",
          "type": "string",
          "readOnly": true
        }
      },
      "id": "GoogleChromeManagementV1OsUpdateStatus"
    },
    "GoogleChromeManagementV1DisplayDevice": {
      "type": "object",
      "id": "GoogleChromeManagementV1DisplayDevice",
      "properties": {
        "manufacturerId": {
          "description": "Output only. Three letter manufacturer ID.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Output only. Display device name.",
          "readOnly": true,
          "type": "string"
        },
        "modelId": {
          "format": "int32",
          "description": "Output only. Manufacturer product code.",
          "type": "integer",
          "readOnly": true
        },
        "displayHeightMm": {
          "description": "Output only. Display height in millimeters.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "displayWidthMm": {
          "format": "int32",
          "type": "integer",
          "description": "Output only. Display width in millimeters.",
          "readOnly": true
        },
        "manufactureYear": {
          "readOnly": true,
          "type": "integer",
          "description": "Output only. Year of manufacture.",
          "format": "int32"
        },
        "internal": {
          "description": "Output only. Is display internal or not.",
          "type": "boolean",
          "readOnly": true
        }
      },
      "description": "Information of a display device."
    },
    "GoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse": {
      "description": "Response containing counts for browsers that need attention.",
      "properties": {
        "recentlyEnrolledCount": {
          "type": "string",
          "description": "Number of browsers that have been recently enrolled",
          "format": "int64"
        },
        "pendingBrowserUpdateCount": {
          "description": "Number of browsers that are pending an OS update",
          "type": "string",
          "format": "int64"
        },
        "noRecentActivityCount": {
          "type": "string",
          "description": "Number of browsers that haven’t had any recent activity",
          "format": "int64"
        }
      },
      "id": "GoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse",
      "type": "object"
    },
    "GoogleChromeManagementV1TelemetryEventNotificationFilter": {
      "id": "GoogleChromeManagementV1TelemetryEventNotificationFilter",
      "properties": {
        "eventTypes": {
          "items": {
            "enum": [
              "EVENT_TYPE_UNSPECIFIED",
              "AUDIO_SEVERE_UNDERRUN",
              "NETWORK_STATE_CHANGE",
              "USB_ADDED",
              "USB_REMOVED",
              "NETWORK_HTTPS_LATENCY_CHANGE",
              "WIFI_SIGNAL_STRENGTH_LOW",
              "WIFI_SIGNAL_STRENGTH_RECOVERED",
              "VPN_CONNECTION_STATE_CHANGE"
            ],
            "enumDescriptions": [
              "Event type unknown.",
              "Triggered when a audio devices run out of buffer data for more than 5 seconds.",
              "Triggered immediately on any changes to a network connection.",
              "Triggered when USB devices are added.",
              "Triggered when USB devices are removed.",
              "Triggered when a new HTTPS latency problem was detected or the device has recovered form an existing HTTPS latency problem.",
              "Triggered when connected WiFi network signal strength drops below -70dBm.",
              "Triggered when connected WiFi network signal strength is recovered from a signal drop.",
              "Triggered on changes to VPN connections."
            ],
            "type": "string"
          },
          "description": "Only sends the notifications for events of these types. Must not be empty.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Configures how the telemetry events should be filtered."
    },
    "GoogleTypeDate": {
      "type": "object",
      "properties": {
        "year": {
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer"
        },
        "month": {
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "GoogleTypeDate",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
    },
    "GoogleChromeManagementV1AndroidAppPermission": {
      "description": "Permission requested by an Android app.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Output only. The type of the permission.",
          "readOnly": true
        }
      },
      "id": "GoogleChromeManagementV1AndroidAppPermission"
    },
    "GoogleChromeManagementV1MemoryInfo": {
      "properties": {
        "totalRamBytes": {
          "description": "Output only. Total RAM in bytes.",
          "type": "string",
          "format": "int64",
          "readOnly": true
        },
        "totalMemoryEncryption": {
          "description": "Output only. Total memory encryption info for the device.",
          "$ref": "GoogleChromeManagementV1TotalMemoryEncryptionInfo",
          "readOnly": true
        },
        "availableRamBytes": {
          "format": "int64",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Amount of available RAM in bytes."
        }
      },
      "description": "Memory information of a device. * This field has both telemetry and device information: - `totalRamBytes` - Device information - `availableRamBytes` - Telemetry information - `totalMemoryEncryption` - Device information * Data for this field is controlled via policy: [ReportDeviceMemoryInfo](https://chromeenterprise.google/policies/#ReportDeviceMemoryInfo) * Data Collection Frequency: - `totalRamBytes` - Only at upload - `availableRamBytes` - Every 10 minutes - `totalMemoryEncryption` - at device startup * Default Data Reporting Frequency: - `totalRamBytes` - 3 hours - `availableRamBytes` - 3 hours - `totalMemoryEncryption` - at device startup - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: only for `totalMemoryEncryption` * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_MEMORY_INFO",
      "id": "GoogleChromeManagementV1MemoryInfo",
      "type": "object"
    },
    "GoogleChromeManagementV1NetworkDiagnosticsReport": {
      "properties": {
        "httpsLatencyData": {
          "readOnly": true,
          "description": "Output only. HTTPS latency test data.",
          "$ref": "GoogleChromeManagementV1HttpsLatencyRoutineData"
        },
        "reportTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Timestamp of when the diagnostics were collected."
        }
      },
      "description": "Network testing results to determine the health of the device's network connection, for example whether the HTTPS latency is high or normal. * Granular permission needed: TELEMETRY_API_NETWORK_REPORT",
      "id": "GoogleChromeManagementV1NetworkDiagnosticsReport",
      "type": "object"
    },
    "GoogleChromeManagementV1NetworkDevice": {
      "type": "object",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Network device type not specified.",
            "Cellular device.",
            "Ethernet device.",
            "Wifi device."
          ],
          "enum": [
            "NETWORK_DEVICE_TYPE_UNSPECIFIED",
            "CELLULAR_DEVICE",
            "ETHERNET_DEVICE",
            "WIFI_DEVICE"
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. Network device type."
        },
        "iccid": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The integrated circuit card ID associated with the device's sim card."
        },
        "mdn": {
          "type": "string",
          "description": "Output only. The mobile directory number associated with the device's sim card.",
          "readOnly": true
        },
        "imei": {
          "description": "Output only. IMEI (if applicable) of the corresponding network device.",
          "readOnly": true,
          "type": "string"
        },
        "macAddress": {
          "readOnly": true,
          "description": "Output only. MAC address (if applicable) of the corresponding network device.",
          "type": "string"
        },
        "meid": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. MEID (if applicable) of the corresponding network device."
        }
      },
      "id": "GoogleChromeManagementV1NetworkDevice",
      "description": "Details about the network device. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportNetworkDeviceConfiguration](https://chromeenterprise.google/policies/#ReportNetworkDeviceConfiguration) * Data Collection Frequency: At device startup * Default Data Reporting Frequency: At device startup - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A"
    },
    "GoogleChromeManagementV1TelemetryNotificationConfig": {
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Resource name of the notification configuration."
        },
        "customer": {
          "description": "Output only. Google Workspace customer that owns the resource.",
          "type": "string",
          "readOnly": true
        },
        "filter": {
          "description": "Only send notifications for telemetry data matching this filter.",
          "$ref": "GoogleChromeManagementV1TelemetryNotificationFilter"
        },
        "googleCloudPubsubTopic": {
          "type": "string",
          "description": "The pubsub topic to which notifications are published to."
        }
      },
      "description": "Configuration to receive notifications of telemetry data.",
      "type": "object",
      "id": "GoogleChromeManagementV1TelemetryNotificationConfig"
    },
    "GoogleChromeManagementV1CpuInfo": {
      "type": "object",
      "id": "GoogleChromeManagementV1CpuInfo",
      "description": "CPU specifications for the device * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_CPU_INFO",
      "properties": {
        "maxClockSpeed": {
          "format": "int32",
          "description": "Output only. The max CPU clock speed in kHz.",
          "readOnly": true,
          "type": "integer"
        },
        "keylockerSupported": {
          "description": "Output only. Whether keylocker is supported.",
          "readOnly": true,
          "type": "boolean"
        },
        "model": {
          "readOnly": true,
          "description": "Output only. The CPU model name. Example: Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz",
          "type": "string"
        },
        "keylockerConfigured": {
          "description": "Output only. Whether keylocker is configured.`TRUE` = Enabled; `FALSE` = disabled. Only reported if keylockerSupported = `TRUE`.",
          "readOnly": true,
          "type": "boolean"
        },
        "architecture": {
          "readOnly": true,
          "enum": [
            "ARCHITECTURE_UNSPECIFIED",
            "X64"
          ],
          "enumDescriptions": [
            "Architecture unknown.",
            "x64 architecture"
          ],
          "type": "string",
          "description": "Output only. Architecture type for the CPU. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A"
        }
      }
    },
    "GoogleChromeManagementV1BrowserVersion": {
      "id": "GoogleChromeManagementV1BrowserVersion",
      "description": "Describes a browser version and its install count.",
      "type": "object",
      "properties": {
        "channel": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "RELEASE_CHANNEL_UNSPECIFIED",
            "CANARY",
            "DEV",
            "BETA",
            "STABLE"
          ],
          "description": "Output only. The release channel of the installed browser.",
          "enumDescriptions": [
            "No release channel specified.",
            "Canary release channel.",
            "Dev release channel.",
            "Beta release channel.",
            "Stable release channel."
          ]
        },
        "deviceOsVersion": {
          "type": "string",
          "description": "Output only. Version of the system-specified operating system.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The full version of the installed browser."
        },
        "count": {
          "format": "int64",
          "description": "Output only. Count grouped by device_system and major version",
          "type": "string",
          "readOnly": true
        },
        "system": {
          "enum": [
            "DEVICE_SYSTEM_UNSPECIFIED",
            "SYSTEM_OTHER",
            "SYSTEM_ANDROID",
            "SYSTEM_IOS",
            "SYSTEM_CROS",
            "SYSTEM_WINDOWS",
            "SYSTEM_MAC",
            "SYSTEM_LINUX"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "No operating system specified.",
            "Other operating system.",
            "Android operating system.",
            "Apple iOS operating system.",
            "ChromeOS operating system.",
            "Microsoft Windows operating system.",
            "Apple macOS operating system.",
            "Linux operating system."
          ],
          "type": "string",
          "description": "Output only. The device operating system."
        }
      }
    },
    "GoogleChromeManagementV1BatteryInfo": {
      "description": "Information about the battery. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDevicePowerStatus](https://chromeenterprise.google/policies/#ReportDevicePowerStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_BATTERY_INFO",
      "properties": {
        "serialNumber": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Battery serial number."
        },
        "manufacturer": {
          "type": "string",
          "description": "Output only. Battery manufacturer.",
          "readOnly": true
        },
        "manufactureDate": {
          "$ref": "GoogleTypeDate",
          "description": "Output only. The date the battery was manufactured.",
          "readOnly": true
        },
        "technology": {
          "description": "Output only. Technology of the battery. Example: Li-ion",
          "type": "string",
          "readOnly": true
        },
        "designCapacity": {
          "format": "int64",
          "description": "Output only. Design capacity (mAmpere-hours).",
          "readOnly": true,
          "type": "string"
        },
        "designMinVoltage": {
          "readOnly": true,
          "description": "Output only. Designed minimum output voltage (mV)",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleChromeManagementV1BatteryInfo",
      "type": "object"
    },
    "GoogleChromeManagementV1DiskInfo": {
      "properties": {
        "health": {
          "readOnly": true,
          "description": "Output only. Disk health.",
          "type": "string"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Disk type: eMMC / NVMe / ATA / SCSI."
        },
        "volumeIds": {
          "description": "Output only. Disk volumes.",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ioTimeThisSession": {
          "format": "google-duration",
          "description": "Output only. Counts the time the disk and queue were busy, so unlike the fields above, parallel requests are not counted multiple times.",
          "type": "string",
          "readOnly": true
        },
        "readTimeThisSession": {
          "readOnly": true,
          "description": "Output only. Time spent reading from disk since last boot.",
          "format": "google-duration",
          "type": "string"
        },
        "bytesReadThisSession": {
          "type": "string",
          "format": "int64",
          "readOnly": true,
          "description": "Output only. Number of bytes read since last boot."
        },
        "sizeBytes": {
          "format": "int64",
          "description": "Output only. Disk size.",
          "type": "string",
          "readOnly": true
        },
        "model": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Disk model."
        },
        "discardTimeThisSession": {
          "description": "Output only. Time spent discarding since last boot. Discarding is writing to clear blocks which are no longer in use. Supported on kernels 4.18+.",
          "type": "string",
          "readOnly": true,
          "format": "google-duration"
        },
        "manufacturer": {
          "type": "string",
          "description": "Output only. Disk manufacturer.",
          "readOnly": true
        },
        "writeTimeThisSession": {
          "description": "Output only. Time spent writing to disk since last boot.",
          "readOnly": true,
          "format": "google-duration",
          "type": "string"
        },
        "serialNumber": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Disk serial number."
        },
        "bytesWrittenThisSession": {
          "description": "Output only. Number of bytes written since last boot.",
          "format": "int64",
          "type": "string",
          "readOnly": true
        }
      },
      "id": "GoogleChromeManagementV1DiskInfo",
      "description": "Status of the single storage device.",
      "type": "object"
    },
    "GoogleChromeManagementV1UsbPeripheralReport": {
      "type": "object",
      "id": "GoogleChromeManagementV1UsbPeripheralReport",
      "properties": {
        "name": {
          "description": "Output only. Device name, model name, or product name",
          "readOnly": true,
          "type": "string"
        },
        "vendor": {
          "readOnly": true,
          "description": "Output only. Vendor name",
          "type": "string"
        },
        "firmwareVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Firmware version"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Output only. Categories the device belongs to https://www.usb.org/defined-class-codes"
        },
        "subclassId": {
          "type": "integer",
          "readOnly": true,
          "description": "Output only. Subclass ID https://www.usb.org/defined-class-codes",
          "format": "int32"
        },
        "pid": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "Output only. Product ID"
        },
        "classId": {
          "description": "Output only. Class ID https://www.usb.org/defined-class-codes",
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "vid": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "description": "Output only. Vendor ID"
        }
      },
      "description": "USB connected peripheral report."
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        }
      },
      "id": "GoogleRpcStatus",
      "type": "object"
    },
    "GoogleChromeManagementV1ChromeAppSiteAccess": {
      "type": "object",
      "id": "GoogleChromeManagementV1ChromeAppSiteAccess",
      "description": "Represent one host permission.",
      "properties": {
        "hostMatch": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. This can contain very specific hosts, or patterns like \"*.com\" for instance."
        }
      }
    },
    "GoogleChromeManagementV1DisplayInfo": {
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Output only. Represents the graphics card device id.",
          "readOnly": true,
          "format": "int64",
          "type": "string"
        },
        "refreshRate": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "description": "Output only. Refresh rate in Hz."
        },
        "isInternal": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Indicates if display is internal or not."
        },
        "resolutionWidth": {
          "description": "Output only. Resolution width in pixels.",
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        },
        "displayName": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Display device name."
        },
        "resolutionHeight": {
          "type": "integer",
          "description": "Output only. Resolution height in pixels.",
          "format": "int32",
          "readOnly": true
        }
      },
      "description": "Information for a display.",
      "id": "GoogleChromeManagementV1DisplayInfo"
    },
    "GoogleChromeManagementV1TelemetryUser": {
      "id": "GoogleChromeManagementV1TelemetryUser",
      "type": "object",
      "properties": {
        "userEmail": {
          "type": "string",
          "description": "Email address of the user."
        },
        "name": {
          "type": "string",
          "description": "Resource name of the user."
        },
        "userId": {
          "type": "string",
          "description": "Directory ID of the user."
        },
        "userDevice": {
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1TelemetryUserDevice"
          },
          "description": "Telemetry data collected from a managed user and device."
        },
        "orgUnitId": {
          "type": "string",
          "description": "Organization unit of the user."
        },
        "customer": {
          "type": "string",
          "description": "G Suite Customer whose enterprise enrolled the device."
        }
      },
      "description": "Telemetry data collected from a managed user. * Granular permission needed: TELEMETRY_API_USER"
    },
    "GoogleChromeManagementV1NetworkInfo": {
      "properties": {
        "networkDevices": {
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1NetworkDevice"
          },
          "description": "Output only. List of network devices.",
          "readOnly": true
        }
      },
      "description": "Network device information. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportNetworkDeviceConfiguration](https://chromeenterprise.google/policies/#ReportNetworkDeviceConfiguration) * Data Collection Frequency: At device startup * Default Data Reporting Frequency: At device startup - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_NETWORK_INFO",
      "type": "object",
      "id": "GoogleChromeManagementV1NetworkInfo"
    },
    "GoogleChromeManagementV1GraphicsAdapterInfo": {
      "properties": {
        "deviceId": {
          "description": "Output only. Represents the graphics card device id.",
          "format": "int64",
          "readOnly": true,
          "type": "string"
        },
        "adapter": {
          "type": "string",
          "description": "Output only. Adapter name. Example: Mesa DRI Intel(R) UHD Graphics 620 (Kabylake GT2).",
          "readOnly": true
        },
        "driverVersion": {
          "description": "Output only. Version of the GPU driver.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "description": "Information of a graphics adapter (GPU).",
      "id": "GoogleChromeManagementV1GraphicsAdapterInfo"
    },
    "GoogleChromeManagementV1KioskAppStatusReport": {
      "id": "GoogleChromeManagementV1KioskAppStatusReport",
      "properties": {
        "appVersion": {
          "type": "string",
          "description": "App version number of kiosk app for example \"1.10.118\""
        },
        "appId": {
          "description": "App id of kiosk app for example \"mdmkkicfmmkgmpkmkdikhlbggogpicma\"",
          "type": "string"
        },
        "reportTime": {
          "format": "google-datetime",
          "description": "Timestamp of when report was collected",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Kiosk app status report of a device. * Available for Kiosks * This field provides the app id and version number running on a kiosk device and the timestamp of when the report was last updated * Data for this field is controlled via policy: [ReportDeviceSessionStatus](https://chromeenterprise.google/policies/#ReportDeviceSessionStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_APPS_REPORT"
    },
    "GoogleChromeManagementV1TouchScreenDevice": {
      "description": "Information of an internal touch screen device.",
      "id": "GoogleChromeManagementV1TouchScreenDevice",
      "type": "object",
      "properties": {
        "touchPointCount": {
          "description": "Output only. Number of touch points supported on the device.",
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        },
        "stylusCapable": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Touch screen device is stylus capable or not."
        },
        "displayName": {
          "description": "Output only. Touch screen device display name.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GoogleChromeManagementV1BatteryStatusReport": {
      "description": "Status data for battery. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDevicePowerStatus](https://chromeenterprise.google/policies/#ReportDevicePowerStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_BATTERY_REPORT",
      "properties": {
        "cycleCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Output only. Cycle count."
        },
        "fullChargeCapacity": {
          "format": "int64",
          "type": "string",
          "description": "Output only. Full charge capacity (mAmpere-hours).",
          "readOnly": true
        },
        "reportTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Timestamp of when the sample was collected on device"
        },
        "batteryHealth": {
          "enumDescriptions": [
            "Health unknown.",
            "Battery is healthy, full charge capacity / design capacity \u003e 80%",
            "Battery is moderately unhealthy and suggested to be replaced soon, full charge capacity / design capacity 75% - 80%",
            "Battery is unhealthy and suggested to be replaced, full charge capacity / design capacity \u003c 75%"
          ],
          "readOnly": true,
          "description": "Output only. Battery health.",
          "type": "string",
          "enum": [
            "BATTERY_HEALTH_UNSPECIFIED",
            "BATTERY_HEALTH_NORMAL",
            "BATTERY_REPLACE_SOON",
            "BATTERY_REPLACE_NOW"
          ]
        },
        "sample": {
          "description": "Output only. Sampling data for the battery sorted in a decreasing order of report_time.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "GoogleChromeManagementV1BatterySampleReport"
          }
        },
        "serialNumber": {
          "description": "Output only. Battery serial number.",
          "type": "string",
          "readOnly": true
        }
      },
      "id": "GoogleChromeManagementV1BatteryStatusReport",
      "type": "object"
    },
    "GoogleChromeManagementV1UserPrintReport": {
      "type": "object",
      "id": "GoogleChromeManagementV1UserPrintReport",
      "properties": {
        "userEmail": {
          "type": "string",
          "description": "The primary e-mail address of the user."
        },
        "printerCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of printers used by the user."
        },
        "jobCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of print jobs initiated by the user."
        },
        "deviceCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of chrome devices that have been used to initiate print jobs by the user."
        },
        "userId": {
          "type": "string",
          "description": "The unique Directory API ID of the user."
        }
      },
      "description": "Report for CountPrintJobsByUser, contains printing statistics for a user. Contains the number of printers, the number of devices used to initiate print jobs, and the number of print jobs initiated."
    },
    "GoogleChromeManagementV1TouchScreenInfo": {
      "description": "Information on the device touch screen.",
      "properties": {
        "devices": {
          "items": {
            "$ref": "GoogleChromeManagementV1TouchScreenDevice"
          },
          "description": "Output only. List of the internal touch screen devices.",
          "type": "array",
          "readOnly": true
        },
        "touchpadLibrary": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Touchpad library name used by the input stack."
        }
      },
      "id": "GoogleChromeManagementV1TouchScreenInfo",
      "type": "object"
    },
    "GoogleChromeManagementV1TelemetryUserInfo": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. User's email."
        },
        "orgUnitId": {
          "description": "Output only. Organization unit ID of the user.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "Information about a user associated with telemetry data. * Granular permission needed: TELEMETRY_API_USER",
      "id": "GoogleChromeManagementV1TelemetryUserInfo"
    },
    "GoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent": {
      "type": "object",
      "properties": {
        "httpsLatencyRoutineData": {
          "description": "HTTPS latency routine data that triggered the event.",
          "$ref": "GoogleChromeManagementV1HttpsLatencyRoutineData"
        },
        "httpsLatencyState": {
          "enumDescriptions": [
            "HTTPS latency state is unspecified.",
            "HTTPS latency recovered from a problem.",
            "HTTPS latency problem."
          ],
          "enum": [
            "HTTPS_LATENCY_STATE_UNSPECIFIED",
            "RECOVERY",
            "PROBLEM"
          ],
          "type": "string",
          "description": "Current HTTPS latency state."
        }
      },
      "id": "GoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent",
      "description": "Https latency routine is run periodically and `TelemetryHttpsLatencyChangeEvent` is triggered if a latency problem was detected or if the device has recovered from a latency problem. * Granular permission needed: TELEMETRY_API_NETWORK_REPORT"
    },
    "GoogleChromeManagementV1PrinterReport": {
      "properties": {
        "userCount": {
          "format": "int64",
          "description": "Number of users that have sent print jobs to the printer.",
          "type": "string"
        },
        "printer": {
          "description": "Printer name.",
          "type": "string"
        },
        "printerId": {
          "description": "Printer API ID.",
          "type": "string"
        },
        "printerModel": {
          "type": "string",
          "description": "Printer model."
        },
        "deviceCount": {
          "description": "Number of chrome devices that have been used to send print jobs to the specified printer.",
          "format": "int64",
          "type": "string"
        },
        "jobCount": {
          "format": "int64",
          "description": "Number of print jobs sent to the printer.",
          "type": "string"
        }
      },
      "description": "Report for CountPrintJobsByPrinter, contains statistics on printer usage. Contains the total number of print jobs initiated with this printer, the number of users and the number of devices that have initiated at least one print job with this printer.",
      "type": "object",
      "id": "GoogleChromeManagementV1PrinterReport"
    },
    "GoogleChromeManagementV1StorageInfoDiskVolume": {
      "description": "Information for disk volumes",
      "properties": {
        "volumeId": {
          "type": "string",
          "description": "Disk volume id."
        },
        "storageTotalBytes": {
          "type": "string",
          "description": "Total storage space in bytes.",
          "format": "int64"
        },
        "storageFreeBytes": {
          "description": "Free storage space in bytes.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GoogleChromeManagementV1StorageInfoDiskVolume",
      "type": "object"
    },
    "GoogleChromeManagementV1PeripheralsReport": {
      "description": "Peripherals report. * Granular permission needed: TELEMETRY_API_PERIPHERALS_REPORT",
      "type": "object",
      "id": "GoogleChromeManagementV1PeripheralsReport",
      "properties": {
        "reportTime": {
          "description": "Output only. Timestamp of when the report was collected.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "usbPeripheralReport": {
          "items": {
            "$ref": "GoogleChromeManagementV1UsbPeripheralReport"
          },
          "description": "Reports of all usb connected devices.",
          "type": "array"
        }
      }
    },
    "GoogleChromeManagementV1ListTelemetryEventsResponse": {
      "description": "Response message for listing telemetry events for a customer.",
      "id": "GoogleChromeManagementV1ListTelemetryEventsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to specify next page in the list.",
          "type": "string"
        },
        "telemetryEvents": {
          "type": "array",
          "description": "Telemetry events returned in the response.",
          "items": {
            "$ref": "GoogleChromeManagementV1TelemetryEvent"
          }
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1TelemetryUserDevice": {
      "properties": {
        "deviceActivityReport": {
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1DeviceActivityReport"
          },
          "readOnly": true,
          "description": "Output only. Device activity reports collected periodically sorted in a decreasing order of report_time."
        },
        "peripheralsReport": {
          "type": "array",
          "description": "Output only. Peripherals reports collected periodically sorted in a decreasing order of report_time.",
          "readOnly": true,
          "items": {
            "$ref": "GoogleChromeManagementV1PeripheralsReport"
          }
        },
        "networkBandwidthReport": {
          "description": "Output only. Network bandwidth reports collected periodically sorted in a decreasing order of report_time.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "GoogleChromeManagementV1NetworkBandwidthReport"
          }
        },
        "audioStatusReport": {
          "readOnly": true,
          "description": "Output only. Audio reports collected periodically sorted in a decreasing order of report_time.",
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1AudioStatusReport"
          }
        },
        "deviceId": {
          "type": "string",
          "description": "The unique Directory API ID of the device. This value is the same as the Admin Console's Directory API ID in the ChromeOS Devices tab."
        }
      },
      "id": "GoogleChromeManagementV1TelemetryUserDevice",
      "type": "object",
      "description": "Telemetry data collected for a managed user and device. * Granular permission needed: TELEMETRY_API_DEVICE"
    },
    "GoogleChromeManagementV1BootPerformanceReport": {
      "type": "object",
      "id": "GoogleChromeManagementV1BootPerformanceReport",
      "description": "Boot performance report of a device. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceBootMode](https://chromeenterprise.google/policies/#ReportDeviceBootMode) * Data Collection Frequency: On every boot up event * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_OS_REPORT",
      "properties": {
        "bootUpTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The timestamp when power came on."
        },
        "reportTime": {
          "description": "Timestamp when the report was collected.",
          "format": "google-datetime",
          "type": "string"
        },
        "shutdownTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The timestamp when shutdown."
        },
        "shutdownReason": {
          "enum": [
            "SHUTDOWN_REASON_UNSPECIFIED",
            "USER_REQUEST",
            "SYSTEM_UPDATE",
            "LOW_BATTERY",
            "OTHER"
          ],
          "type": "string",
          "enumDescriptions": [
            "Shutdown reason is not specified.",
            "User initiated.",
            "System update initiated.",
            "Shutdown due to low battery.",
            "Shutdown due to other reasons."
          ],
          "description": "The shutdown reason."
        },
        "bootUpDuration": {
          "format": "google-duration",
          "description": "Total time to boot up.",
          "type": "string"
        },
        "shutdownDuration": {
          "format": "google-duration",
          "description": "Total time since shutdown start to power off.",
          "type": "string"
        }
      }
    },
    "GoogleChromeManagementV1BatterySampleReport": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Output only. Battery status read from sysfs. Example: Discharging",
          "readOnly": true,
          "type": "string"
        },
        "dischargeRate": {
          "description": "Output only. The battery discharge rate measured in mW. Positive if the battery is being discharged, negative if it's being charged.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "chargeRate": {
          "readOnly": true,
          "type": "integer",
          "description": "Output only. Battery charge percentage.",
          "format": "int32"
        },
        "current": {
          "format": "int64",
          "readOnly": true,
          "description": "Output only. Battery current (mA).",
          "type": "string"
        },
        "temperature": {
          "format": "int32",
          "readOnly": true,
          "description": "Output only. Temperature in Celsius degrees.",
          "type": "integer"
        },
        "voltage": {
          "format": "int64",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Battery voltage (millivolt)."
        },
        "reportTime": {
          "readOnly": true,
          "description": "Output only. Timestamp of when the sample was collected on device",
          "type": "string",
          "format": "google-datetime"
        },
        "remainingCapacity": {
          "format": "int64",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Battery remaining capacity (mAmpere-hours)."
        }
      },
      "description": "Sampling data for battery. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDevicePowerStatus](https://chromeenterprise.google/policies/#ReportDevicePowerStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A",
      "id": "GoogleChromeManagementV1BatterySampleReport"
    },
    "GoogleChromeManagementV1CountInstalledAppsResponse": {
      "type": "object",
      "description": "Response containing details of queried installed apps.",
      "properties": {
        "nextPageToken": {
          "description": "Token to specify the next page of the request.",
          "type": "string"
        },
        "installedApps": {
          "items": {
            "$ref": "GoogleChromeManagementV1InstalledApp"
          },
          "description": "List of installed apps matching request.",
          "type": "array"
        },
        "totalSize": {
          "description": "Total number of installed apps matching request.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "GoogleChromeManagementV1CountInstalledAppsResponse"
    },
    "GoogleChromeManagementV1GraphicsStatusReport": {
      "properties": {
        "reportTime": {
          "readOnly": true,
          "description": "Output only. Time at which the graphics data was reported.",
          "type": "string",
          "format": "google-datetime"
        },
        "displays": {
          "description": "Output only. Information about the displays for the device.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "GoogleChromeManagementV1DisplayInfo"
          }
        }
      },
      "id": "GoogleChromeManagementV1GraphicsStatusReport",
      "description": "Information of the graphics subsystem. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceGraphicsInfo](https://chromeenterprise.google/policies/#ReportDeviceGraphicsInfo) * Data Collection Frequency: 3 hours. * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_GRAPHICS_REPORT",
      "type": "object"
    },
    "GoogleChromeManagementV1TelemetryDevice": {
      "id": "GoogleChromeManagementV1TelemetryDevice",
      "type": "object",
      "description": "Telemetry data collected from a managed device. * Granular permission needed: TELEMETRY_API_DEVICE",
      "properties": {
        "heartbeatStatusReport": {
          "type": "array",
          "description": "Output only. Heartbeat status report containing timestamps periodically sorted in decreasing order of report_time",
          "items": {
            "$ref": "GoogleChromeManagementV1HeartbeatStatusReport"
          },
          "readOnly": true
        },
        "runtimeCountersReport": {
          "description": "Output only. Runtime counters reports collected device lifetime runtime, as well as the counts of S0-\u003eS3, S0-\u003eS4, and S0-\u003eS5 transitions, meaning entering into sleep, hibernation, and power-off states",
          "readOnly": true,
          "items": {
            "$ref": "GoogleChromeManagementV1RuntimeCountersReport"
          },
          "type": "array"
        },
        "storageInfo": {
          "$ref": "GoogleChromeManagementV1StorageInfo",
          "readOnly": true,
          "description": "Output only. Information of storage specs for the device."
        },
        "memoryStatusReport": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. Memory status reports collected periodically sorted decreasing by report_time.",
          "items": {
            "$ref": "GoogleChromeManagementV1MemoryStatusReport"
          }
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Resource name of the device."
        },
        "storageStatusReport": {
          "description": "Output only. Storage reports collected periodically.",
          "readOnly": true,
          "items": {
            "$ref": "GoogleChromeManagementV1StorageStatusReport"
          },
          "type": "array"
        },
        "networkStatusReport": {
          "items": {
            "$ref": "GoogleChromeManagementV1NetworkStatusReport"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. Network specs collected periodically."
        },
        "serialNumber": {
          "description": "Output only. Device serial number. This value is the same as the Admin Console's Serial Number in the ChromeOS Devices tab.",
          "readOnly": true,
          "type": "string"
        },
        "thunderboltInfo": {
          "readOnly": true,
          "description": "Output only. Information on Thunderbolt bus.",
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1ThunderboltInfo"
          }
        },
        "peripheralsReport": {
          "description": "Output only. Peripherals reports collected periodically sorted in a decreasing order of report_time.",
          "readOnly": true,
          "items": {
            "$ref": "GoogleChromeManagementV1PeripheralsReport"
          },
          "type": "array"
        },
        "customer": {
          "description": "Output only. Google Workspace Customer whose enterprise enrolled the device.",
          "type": "string",
          "readOnly": true
        },
        "cpuInfo": {
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1CpuInfo"
          },
          "description": "Output only. Information regarding CPU specs for the device.",
          "readOnly": true
        },
        "kioskAppStatusReport": {
          "items": {
            "$ref": "GoogleChromeManagementV1KioskAppStatusReport"
          },
          "description": "Output only. Kiosk app status report for the kiosk device",
          "readOnly": true,
          "type": "array"
        },
        "graphicsInfo": {
          "description": "Output only. Contains information regarding Graphic peripherals for the device.",
          "readOnly": true,
          "$ref": "GoogleChromeManagementV1GraphicsInfo"
        },
        "networkInfo": {
          "description": "Output only. Network devices information.",
          "readOnly": true,
          "$ref": "GoogleChromeManagementV1NetworkInfo"
        },
        "bootPerformanceReport": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1BootPerformanceReport"
          },
          "description": "Output only. Boot performance reports of the device."
        },
        "graphicsStatusReport": {
          "items": {
            "$ref": "GoogleChromeManagementV1GraphicsStatusReport"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Graphics reports collected periodically."
        },
        "osUpdateStatus": {
          "readOnly": true,
          "items": {
            "$ref": "GoogleChromeManagementV1OsUpdateStatus"
          },
          "description": "Output only. Contains relevant information regarding ChromeOS update status.",
          "type": "array"
        },
        "networkBandwidthReport": {
          "readOnly": true,
          "description": "Output only. Network bandwidth reports collected periodically sorted in a decreasing order of report_time.",
          "items": {
            "$ref": "GoogleChromeManagementV1NetworkBandwidthReport"
          },
          "type": "array"
        },
        "orgUnitId": {
          "type": "string",
          "description": "Output only. Organization unit ID of the device.",
          "readOnly": true
        },
        "deviceId": {
          "type": "string",
          "description": "Output only. The unique Directory API ID of the device. This value is the same as the Admin Console's Directory API ID in the ChromeOS Devices tab",
          "readOnly": true
        },
        "audioStatusReport": {
          "description": "Output only. Audio reports collected periodically sorted in a decreasing order of report_time.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1AudioStatusReport"
          }
        },
        "networkDiagnosticsReport": {
          "type": "array",
          "description": "Output only. Network diagnostics collected periodically.",
          "items": {
            "$ref": "GoogleChromeManagementV1NetworkDiagnosticsReport"
          },
          "readOnly": true
        },
        "batteryStatusReport": {
          "items": {
            "$ref": "GoogleChromeManagementV1BatteryStatusReport"
          },
          "type": "array",
          "description": "Output only. Battery reports collected periodically.",
          "readOnly": true
        },
        "cpuStatusReport": {
          "description": "Output only. CPU status reports collected periodically sorted in a decreasing order of report_time.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1CpuStatusReport"
          }
        },
        "memoryInfo": {
          "readOnly": true,
          "$ref": "GoogleChromeManagementV1MemoryInfo",
          "description": "Output only. Information regarding memory specs for the device."
        },
        "batteryInfo": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. Information on battery specs for the device.",
          "items": {
            "$ref": "GoogleChromeManagementV1BatteryInfo"
          }
        }
      }
    },
    "GoogleChromeManagementV1TelemetryDeviceInfo": {
      "description": "Information about a device associated with telemetry data. * Granular Permission needed: TELEMETRY_API_DEVICE",
      "type": "object",
      "id": "GoogleChromeManagementV1TelemetryDeviceInfo",
      "properties": {
        "deviceId": {
          "description": "Output only. The unique Directory API ID of the device. This value is the same as the Admin Console's Directory API ID in the ChromeOS Devices tab.",
          "type": "string",
          "readOnly": true
        },
        "orgUnitId": {
          "description": "Output only. Organization unit ID of the device.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleChromeManagementV1AudioStatusReport": {
      "description": "Status data for storage. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceAudioStatus](https://chromeenterprise.google/policies/#ReportDeviceAudioStatus) * Data Collection Frequency: 10 minutes * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_AUDIO_REPORT",
      "id": "GoogleChromeManagementV1AudioStatusReport",
      "properties": {
        "outputDevice": {
          "description": "Output only. Active output device's name.",
          "readOnly": true,
          "type": "string"
        },
        "inputDevice": {
          "type": "string",
          "description": "Output only. Active input device's name.",
          "readOnly": true
        },
        "outputVolume": {
          "description": "Output only. Active output device's volume in [0, 100].",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "outputMute": {
          "description": "Output only. Is active output device mute or not.",
          "type": "boolean",
          "readOnly": true
        },
        "inputMute": {
          "description": "Output only. Is active input device mute or not.",
          "type": "boolean",
          "readOnly": true
        },
        "reportTime": {
          "description": "Output only. Timestamp of when the sample was collected on device.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "inputGain": {
          "format": "int32",
          "readOnly": true,
          "description": "Output only. Active input device's gain in [0, 100].",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1DeviceAueCountReport": {
      "type": "object",
      "id": "GoogleChromeManagementV1DeviceAueCountReport",
      "properties": {
        "aueYear": {
          "format": "int64",
          "description": "Int value of year corresponding to the Auto Update Expiration date in UTC time zone. If the device is already expired, this field is empty.",
          "type": "string"
        },
        "expired": {
          "type": "boolean",
          "description": "Boolean value for whether or not the device has already expired."
        },
        "count": {
          "description": "Count of devices of this model.",
          "type": "string",
          "format": "int64"
        },
        "model": {
          "type": "string",
          "description": "Public model name of the devices."
        },
        "aueMonth": {
          "enumDescriptions": [
            "The unspecified month.",
            "The month of January.",
            "The month of February.",
            "The month of March.",
            "The month of April.",
            "The month of May.",
            "The month of June.",
            "The month of July.",
            "The month of August.",
            "The month of September.",
            "The month of October.",
            "The month of November.",
            "The month of December."
          ],
          "type": "string",
          "enum": [
            "MONTH_UNSPECIFIED",
            "JANUARY",
            "FEBRUARY",
            "MARCH",
            "APRIL",
            "MAY",
            "JUNE",
            "JULY",
            "AUGUST",
            "SEPTEMBER",
            "OCTOBER",
            "NOVEMBER",
            "DECEMBER"
          ],
          "description": "Enum value of month corresponding to the auto update expiration date in UTC time zone. If the device is already expired, this field is empty."
        }
      },
      "description": "Report for CountChromeDevicesPerAueDateResponse, contains the count of devices of a specific model and auto update expiration range."
    },
    "GoogleChromeManagementV1HttpsLatencyRoutineData": {
      "id": "GoogleChromeManagementV1HttpsLatencyRoutineData",
      "type": "object",
      "properties": {
        "latency": {
          "description": "Output only. HTTPS latency if routine succeeded or failed because of HIGH_LATENCY or VERY_HIGH_LATENCY.",
          "readOnly": true,
          "format": "google-duration",
          "type": "string"
        },
        "problem": {
          "enum": [
            "HTTPS_LATENCY_PROBLEM_UNSPECIFIED",
            "FAILED_DNS_RESOLUTIONS",
            "FAILED_HTTPS_REQUESTS",
            "HIGH_LATENCY",
            "VERY_HIGH_LATENCY"
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. HTTPS latency routine problem if a problem occurred.",
          "enumDescriptions": [
            "HTTPS latency problem not specified.",
            "One or more DNS resolutions resulted in a failure.",
            "One or more HTTPS requests resulted in a failure.",
            "Average HTTPS request latency time between 500ms and 1000ms is high.",
            "Average HTTPS request latency time greater than 1000ms is very high."
          ]
        }
      },
      "description": "Data that describes the result of the HTTPS latency diagnostics routine, with the HTTPS requests issued to Google websites."
    },
    "GoogleChromeManagementV1ChromeAppRequest": {
      "type": "object",
      "description": "Details of an app installation request.",
      "id": "GoogleChromeManagementV1ChromeAppRequest",
      "properties": {
        "latestRequestTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp of the most recently made request for this app."
        },
        "appDetails": {
          "description": "Output only. Format: app_details=customers/{customer_id}/apps/chrome/{app_id}",
          "type": "string",
          "readOnly": true
        },
        "requestCount": {
          "format": "int64",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Total count of requests for this app."
        },
        "detailUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The uri for the detail page of the item."
        },
        "appId": {
          "readOnly": true,
          "description": "Output only. Unique store identifier for the app. Example: \"gmbmikajjgmnabiglmofipeabaddhgne\" for the Save to Google Drive Chrome extension.",
          "type": "string"
        },
        "iconUri": {
          "description": "Output only. A link to an image that can be used as an icon for the product.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. App's display name."
        }
      }
    },
    "GoogleChromeManagementV1TelemetryEvent": {
      "properties": {
        "networkStateChangeEvent": {
          "$ref": "GoogleChromeManagementV1TelemetryNetworkConnectionStateChangeEvent",
          "description": "Output only. Payload for network connection state change event. Present only when `event_type` is `NETWORK_STATE_CHANGE`.",
          "readOnly": true
        },
        "device": {
          "$ref": "GoogleChromeManagementV1TelemetryDeviceInfo",
          "readOnly": true,
          "description": "Output only. Information about the device associated with the event."
        },
        "user": {
          "$ref": "GoogleChromeManagementV1TelemetryUserInfo",
          "description": "Output only. Information about the user associated with the event.",
          "readOnly": true
        },
        "usbPeripheralsEvent": {
          "readOnly": true,
          "description": "Output only. Payload for usb peripherals event. Present only when the `event_type` field is either `USB_ADDED` or `USB_REMOVED`.",
          "$ref": "GoogleChromeManagementV1TelemetryUsbPeripheralsEvent"
        },
        "httpsLatencyChangeEvent": {
          "readOnly": true,
          "description": "Output only. Payload for HTTPS latency change event. Present only when `event_type` is `NETWORK_HTTPS_LATENCY_CHANGE`.",
          "$ref": "GoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent"
        },
        "vpnConnectionStateChangeEvent": {
          "readOnly": true,
          "description": "Output only. Payload for VPN connection state change event. Present only when `event_type` is `VPN_CONNECTION_STATE_CHANGE`.",
          "$ref": "GoogleChromeManagementV1TelemetryNetworkConnectionStateChangeEvent"
        },
        "eventType": {
          "enum": [
            "EVENT_TYPE_UNSPECIFIED",
            "AUDIO_SEVERE_UNDERRUN",
            "NETWORK_STATE_CHANGE",
            "USB_ADDED",
            "USB_REMOVED",
            "NETWORK_HTTPS_LATENCY_CHANGE",
            "WIFI_SIGNAL_STRENGTH_LOW",
            "WIFI_SIGNAL_STRENGTH_RECOVERED",
            "VPN_CONNECTION_STATE_CHANGE"
          ],
          "enumDescriptions": [
            "Event type unknown.",
            "Triggered when a audio devices run out of buffer data for more than 5 seconds.",
            "Triggered immediately on any changes to a network connection.",
            "Triggered when USB devices are added.",
            "Triggered when USB devices are removed.",
            "Triggered when a new HTTPS latency problem was detected or the device has recovered form an existing HTTPS latency problem.",
            "Triggered when connected WiFi network signal strength drops below -70dBm.",
            "Triggered when connected WiFi network signal strength is recovered from a signal drop.",
            "Triggered on changes to VPN connections."
          ],
          "type": "string",
          "description": "The event type of the current event."
        },
        "wifiSignalStrengthEvent": {
          "$ref": "GoogleChromeManagementV1TelemetryNetworkSignalStrengthEvent",
          "readOnly": true,
          "description": "Output only. Payload for WiFi signal strength events. Present only when `event_type` is `WIFI_SIGNAL_STRENGTH_LOW` or `WIFI_SIGNAL_STRENGTH_RECOVERED`."
        },
        "audioSevereUnderrunEvent": {
          "readOnly": true,
          "$ref": "GoogleChromeManagementV1TelemetryAudioSevereUnderrunEvent",
          "description": "Output only. Payload for audio severe underrun event. Present only when the `event_type` field is `AUDIO_SEVERE_UNDERRUN`."
        },
        "reportTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Timestamp that represents when the event was reported."
        },
        "name": {
          "description": "Output only. Resource name of the event.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Telemetry data reported by a managed device.",
      "id": "GoogleChromeManagementV1TelemetryEvent"
    },
    "GoogleChromeManagementV1TelemetryAudioSevereUnderrunEvent": {
      "description": "`TelemetryAudioSevereUnderrunEvent` is triggered when a audio devices run out of buffer data for more than 5 seconds. * Granular permission needed: TELEMETRY_API_AUDIO_REPORT",
      "properties": {},
      "type": "object",
      "id": "GoogleChromeManagementV1TelemetryAudioSevereUnderrunEvent"
    },
    "GoogleProtobufEmpty": {
      "id": "GoogleProtobufEmpty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "GoogleChromeManagementV1TotalMemoryEncryptionInfo": {
      "type": "object",
      "description": "Memory encryption information of a device. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceMemoryInfo](https://chromeenterprise.google/policies/#ReportDeviceMemoryInfo) * Data Collection Frequency: At device startup * Default Data Reporting Frequency: At device startup - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A",
      "id": "GoogleChromeManagementV1TotalMemoryEncryptionInfo",
      "properties": {
        "encryptionState": {
          "enumDescriptions": [
            "Memory encryption state is not set.",
            "The memory encryption state is unknown.",
            "Memory encrpytion on the device is disabled.",
            "Memory encryption on the device uses total memory encryption.",
            "Memory encryption on the device uses multi-key total memory encryption."
          ],
          "type": "string",
          "description": "The state of memory encryption on the device.",
          "enum": [
            "MEMORY_ENCRYPTION_STATE_UNSPECIFIED",
            "MEMORY_ENCRYPTION_STATE_UNKNOWN",
            "MEMORY_ENCRYPTION_STATE_DISABLED",
            "MEMORY_ENCRYPTION_STATE_TME",
            "MEMORY_ENCRYPTION_STATE_MKTME"
          ]
        },
        "keyLength": {
          "format": "int64",
          "description": "The length of the encryption keys.",
          "type": "string"
        },
        "maxKeys": {
          "description": "The maximum number of keys that can be used for encryption.",
          "type": "string",
          "format": "int64"
        },
        "encryptionAlgorithm": {
          "enumDescriptions": [
            "Memory encryption algorithm is not set.",
            "The memory encryption algorithm being used is unknown.",
            "The memory encryption algorithm is using the AES_XTS encryption algorithm with a 128 bit block cypher.",
            "The memory encryption algorithm is using the AES_XTS encryption algorithm with a 256 bit block cypher."
          ],
          "type": "string",
          "description": "Memory encryption algorithm.",
          "enum": [
            "MEMORY_ENCRYPTION_ALGORITHM_UNSPECIFIED",
            "MEMORY_ENCRYPTION_ALGORITHM_UNKNOWN",
            "MEMORY_ENCRYPTION_ALGORITHM_AES_XTS_128",
            "MEMORY_ENCRYPTION_ALGORITHM_AES_XTS_256"
          ]
        }
      }
    },
    "GoogleChromeManagementV1InstalledApp": {
      "type": "object",
      "properties": {
        "permissions": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. Permissions of the installed app."
        },
        "homepageUri": {
          "readOnly": true,
          "description": "Output only. Homepage uri of the installed app.",
          "type": "string"
        },
        "browserDeviceCount": {
          "description": "Output only. Count of browser devices with this app installed.",
          "type": "string",
          "readOnly": true,
          "format": "int64"
        },
        "appInstallType": {
          "enumDescriptions": [
            "Application install type not specified.",
            "Multiple app install types.",
            "Normal app install type.",
            "Administrator app install type.",
            "Development app install type.",
            "Sideloaded app install type.",
            "Other app install type."
          ],
          "type": "string",
          "enum": [
            "APP_INSTALL_TYPE_UNSPECIFIED",
            "MULTIPLE",
            "NORMAL",
            "ADMIN",
            "DEVELOPMENT",
            "SIDELOAD",
            "OTHER"
          ],
          "readOnly": true,
          "description": "Output only. How the app was installed."
        },
        "disabled": {
          "type": "boolean",
          "description": "Output only. Whether the app is disabled.",
          "readOnly": true
        },
        "appSource": {
          "enum": [
            "APP_SOURCE_UNSPECIFIED",
            "CHROME_WEBSTORE",
            "PLAY_STORE"
          ],
          "enumDescriptions": [
            "Application source not specified.",
            "Generally for extensions and Chrome apps.",
            "Play Store app."
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. Source of the installed app."
        },
        "displayName": {
          "description": "Output only. Name of the installed app.",
          "type": "string",
          "readOnly": true
        },
        "appId": {
          "readOnly": true,
          "description": "Output only. Unique identifier of the app. For Chrome apps and extensions, the 32-character id (e.g. ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g. com.evernote).",
          "type": "string"
        },
        "osUserCount": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Count of ChromeOS users with this app installed.",
          "format": "int64"
        },
        "description": {
          "description": "Output only. Description of the installed app.",
          "readOnly": true,
          "type": "string"
        },
        "appType": {
          "type": "string",
          "enumDescriptions": [
            "App type not specified.",
            "Chrome extension.",
            "Chrome app.",
            "Chrome theme.",
            "Chrome hosted app.",
            "ARC++ app."
          ],
          "description": "Output only. Type of the app.",
          "readOnly": true,
          "enum": [
            "APP_TYPE_UNSPECIFIED",
            "EXTENSION",
            "APP",
            "THEME",
            "HOSTED_APP",
            "ANDROID_APP"
          ]
        }
      },
      "description": "Describes an installed app.",
      "id": "GoogleChromeManagementV1InstalledApp"
    },
    "GoogleChromeManagementV1ThunderboltInfo": {
      "id": "GoogleChromeManagementV1ThunderboltInfo",
      "description": "Thunderbolt bus info. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceSecurityStatus](https://chromeenterprise.google/policies/#ReportDeviceSecurityStatus) * Data Collection Frequency: At device startup * Default Data Reporting Frequency: At device startup - Policy Controlled: No * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_BUS_DEVICE_INFO",
      "type": "object",
      "properties": {
        "securityLevel": {
          "type": "string",
          "description": "Security level of the Thunderbolt bus.",
          "enumDescriptions": [
            "Thunderbolt security level is not set.",
            "All devices are automatically connected by the firmware. No user approval is needed.",
            "User is asked whether the device is allowed to be connected.",
            "User is asked whether the device is allowed to be connected. In addition the device is sent a challenge that should match the expected one based on a random key written to the key sysfs attribute",
            "The firmware automatically creates tunnels for Thunderbolt.",
            "The firmware automatically creates tunnels for the USB controller and Display Port in a dock. All PCIe links downstream of the dock are removed.",
            "PCIE tunneling is disabled."
          ],
          "enum": [
            "THUNDERBOLT_SECURITY_LEVEL_UNSPECIFIED",
            "THUNDERBOLT_SECURITY_NONE_LEVEL",
            "THUNDERBOLT_SECURITY_USER_LEVEL",
            "THUNDERBOLT_SECURITY_SECURE_LEVEL",
            "THUNDERBOLT_SECURITY_DP_ONLY_LEVEL",
            "THUNDERBOLT_SECURITY_USB_ONLY_LEVEL",
            "THUNDERBOLT_SECURITY_NO_PCIE_LEVEL"
          ]
        }
      }
    },
    "GoogleChromeManagementV1ListTelemetryNotificationConfigsResponse": {
      "id": "GoogleChromeManagementV1ListTelemetryNotificationConfigsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "telemetryNotificationConfigs": {
          "description": "The telemetry notification configs from the specified customer.",
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1TelemetryNotificationConfig"
          }
        }
      },
      "description": "Response message for listing notification configs for a customer."
    },
    "GoogleChromeManagementV1CountChromeVersionsResponse": {
      "type": "object",
      "description": "Response containing requested browser versions details and counts.",
      "properties": {
        "totalSize": {
          "description": "Total number browser versions matching request.",
          "type": "integer",
          "format": "int32"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to specify the next page of the request."
        },
        "browserVersions": {
          "description": "List of all browser versions and their install counts.",
          "items": {
            "$ref": "GoogleChromeManagementV1BrowserVersion"
          },
          "type": "array"
        }
      },
      "id": "GoogleChromeManagementV1CountChromeVersionsResponse"
    },
    "GoogleChromeManagementV1ListTelemetryUsersResponse": {
      "type": "object",
      "description": "Response message for listing telemetry users for a customer.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to specify next page in the list."
        },
        "telemetryUsers": {
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1TelemetryUser"
          },
          "description": "Telemetry users returned in the response."
        }
      },
      "id": "GoogleChromeManagementV1ListTelemetryUsersResponse"
    },
    "GoogleChromeManagementV1StorageInfo": {
      "properties": {
        "volume": {
          "description": "Information for disk volumes",
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1StorageInfoDiskVolume"
          }
        },
        "totalDiskBytes": {
          "description": "The total space for user data storage in the device in bytes.",
          "format": "int64",
          "type": "string"
        },
        "availableDiskBytes": {
          "type": "string",
          "description": "The available space for user data storage in the device in bytes.",
          "format": "int64"
        }
      },
      "description": "Status data for storage. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceStorageStatus](https://chromeenterprise.google/policies/#ReportDeviceStorageStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_STORAGE_INFO",
      "id": "GoogleChromeManagementV1StorageInfo",
      "type": "object"
    },
    "GoogleChromeManagementV1CountChromeAppRequestsResponse": {
      "description": "Response containing summary of requested app installations.",
      "type": "object",
      "properties": {
        "requestedApps": {
          "description": "Count of requested apps matching request.",
          "items": {
            "$ref": "GoogleChromeManagementV1ChromeAppRequest"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to specify the next page in the list."
        },
        "totalSize": {
          "description": "Total number of matching app requests.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleChromeManagementV1CountChromeAppRequestsResponse"
    },
    "GoogleChromeManagementV1EnumeratePrintJobsResponse": {
      "properties": {
        "printJobs": {
          "description": "List of requested print jobs.",
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1PrintJob"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be used in a subsequent request to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "totalSize": {
          "format": "int64",
          "type": "string",
          "description": "Total number of print jobs matching request."
        }
      },
      "description": "Response containing a list of print jobs.",
      "id": "GoogleChromeManagementV1EnumeratePrintJobsResponse",
      "type": "object"
    },
    "GoogleChromeManagementV1StorageStatusReport": {
      "type": "object",
      "properties": {
        "reportTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Timestamp of when the sample was collected on device"
        },
        "disk": {
          "description": "Output only. Reports on disk.",
          "items": {
            "$ref": "GoogleChromeManagementV1DiskInfo"
          },
          "type": "array",
          "readOnly": true
        }
      },
      "id": "GoogleChromeManagementV1StorageStatusReport",
      "description": "Status data for storage. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceStorageStatus](https://chromeenterprise.google/policies/#ReportDeviceStorageStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_STORAGE_REPORT"
    },
    "GoogleChromeManagementV1AndroidAppInfo": {
      "description": "Android app information.",
      "type": "object",
      "properties": {
        "permissions": {
          "readOnly": true,
          "items": {
            "$ref": "GoogleChromeManagementV1AndroidAppPermission"
          },
          "description": "Output only. Permissions requested by an Android app.",
          "type": "array"
        }
      },
      "id": "GoogleChromeManagementV1AndroidAppInfo"
    }
  },
  "discoveryVersion": "v1",
  "revision": "20240227",
  "version_module": true,
  "description": "The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.",
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "alt": {
      "location": "query",
      "default": "json",
      "type": "string",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "type": "string",
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    }
  },
  "mtlsRootUrl": "https://chromemanagement.mtls.googleapis.com/",
  "ownerDomain": "google.com",
  "version": "v1",
  "documentationLink": "http://developers.google.com/chrome/management/"
}

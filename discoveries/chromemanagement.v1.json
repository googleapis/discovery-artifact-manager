{
  "documentationLink": "http://developers.google.com/chrome/management/",
  "fullyEncodeReservedExpansion": true,
  "resources": {
    "customers": {
      "resources": {
        "reports": {
          "methods": {
            "countInstalledApps": {
              "flatPath": "v1/customers/{customersId}/reports:countInstalledApps",
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "Maximum number of results to return. Maximum and default are 100."
                },
                "orgUnitId": {
                  "description": "The ID of the organizational unit.",
                  "location": "query",
                  "type": "string"
                },
                "orderBy": {
                  "location": "query",
                  "description": "Field used to order results. Supported order by fields: * app_name * app_type * install_type * number_of_permissions * total_install_count",
                  "type": "string"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Supported filter fields: * app_name * app_type * install_type * number_of_permissions * total_install_count * latest_profile_active_date * permission_name"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Token to specify the page of the request to be returned."
                },
                "customer": {
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request.",
                  "location": "path"
                }
              },
              "id": "chromemanagement.customers.reports.countInstalledApps",
              "httpMethod": "GET",
              "description": "Generate report of app installations.",
              "path": "v1/{+customer}/reports:countInstalledApps",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "response": {
                "$ref": "GoogleChromeManagementV1CountInstalledAppsResponse"
              },
              "parameterOrder": [
                "customer"
              ]
            },
            "countChromeDevicesThatNeedAttention": {
              "parameters": {
                "orgUnitId": {
                  "description": "Optional. The ID of the organizational unit. If omitted, all data will be returned.",
                  "type": "string",
                  "location": "query"
                },
                "readMask": {
                  "type": "string",
                  "description": "Required. Mask of the fields that should be populated in the returned report.",
                  "location": "query",
                  "format": "google-fieldmask"
                },
                "customer": {
                  "location": "path",
                  "required": true,
                  "description": "Required. The customer ID or \"my_customer\" prefixed with \"customers/\".",
                  "type": "string",
                  "pattern": "^customers/[^/]+$"
                }
              },
              "response": {
                "$ref": "GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse"
              },
              "description": "Counts of ChromeOS devices that have not synced policies or have lacked user activity in the past 28 days, are out of date, or are not complaint. Further information can be found here https://support.google.com/chrome/a/answer/10564947",
              "parameterOrder": [
                "customer"
              ],
              "path": "v1/{+customer}/reports:countChromeDevicesThatNeedAttention",
              "httpMethod": "GET",
              "flatPath": "v1/customers/{customersId}/reports:countChromeDevicesThatNeedAttention",
              "id": "chromemanagement.customers.reports.countChromeDevicesThatNeedAttention",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ]
            },
            "findInstalledAppDevices": {
              "response": {
                "$ref": "GoogleChromeManagementV1FindInstalledAppDevicesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "Maximum number of results to return. Maximum and default are 100."
                },
                "appType": {
                  "type": "string",
                  "location": "query",
                  "description": "Type of the app.",
                  "enumDescriptions": [
                    "App type not specified.",
                    "Chrome extension.",
                    "Chrome app.",
                    "Chrome theme.",
                    "Chrome hosted app.",
                    "ARC++ app."
                  ],
                  "enum": [
                    "APP_TYPE_UNSPECIFIED",
                    "EXTENSION",
                    "APP",
                    "THEME",
                    "HOSTED_APP",
                    "ANDROID_APP"
                  ]
                },
                "filter": {
                  "description": "Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Supported filter fields: * last_active_date",
                  "type": "string",
                  "location": "query"
                },
                "orgUnitId": {
                  "type": "string",
                  "description": "The ID of the organizational unit.",
                  "location": "query"
                },
                "pageToken": {
                  "description": "Token to specify the page of the request to be returned.",
                  "location": "query",
                  "type": "string"
                },
                "customer": {
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request.",
                  "required": true,
                  "location": "path"
                },
                "appId": {
                  "description": "Unique identifier of the app. For Chrome apps and extensions, the 32-character id (e.g. ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g. com.evernote).",
                  "type": "string",
                  "location": "query"
                },
                "orderBy": {
                  "type": "string",
                  "location": "query",
                  "description": "Field used to order results. Supported order by fields: * machine * device_id"
                }
              },
              "path": "v1/{+customer}/reports:findInstalledAppDevices",
              "flatPath": "v1/customers/{customersId}/reports:findInstalledAppDevices",
              "id": "chromemanagement.customers.reports.findInstalledAppDevices",
              "description": "Generate report of devices that have a specified app installed.",
              "parameterOrder": [
                "customer"
              ],
              "httpMethod": "GET"
            },
            "countChromeDevicesReachingAutoExpirationDate": {
              "httpMethod": "GET",
              "id": "chromemanagement.customers.reports.countChromeDevicesReachingAutoExpirationDate",
              "parameterOrder": [
                "customer"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "description": "Generate report of the number of devices expiring in each month of the selected time frame. Devices are grouped by auto update expiration date and model. Further information can be found [here](https://support.google.com/chrome/a/answer/10564947).",
              "flatPath": "v1/customers/{customersId}/reports:countChromeDevicesReachingAutoExpirationDate",
              "parameters": {
                "customer": {
                  "required": true,
                  "description": "Required. The customer ID or \"my_customer\" prefixed with \"customers/\".",
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "location": "path"
                },
                "orgUnitId": {
                  "type": "string",
                  "description": "Optional. The organizational unit ID, if omitted, will return data for all organizational units.",
                  "location": "query"
                },
                "maxAueDate": {
                  "description": "Optional. Maximum expiration date in format yyyy-mm-dd in UTC timezone. If included returns all devices that have already expired and devices with auto expiration date equal to or earlier than the maximum date.",
                  "location": "query",
                  "type": "string"
                },
                "minAueDate": {
                  "description": "Optional. Maximum expiration date in format yyyy-mm-dd in UTC timezone. If included returns all devices that have already expired and devices with auto expiration date equal to or later than the minimum date.",
                  "type": "string",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "GoogleChromeManagementV1CountChromeDevicesReachingAutoExpirationDateResponse"
              },
              "path": "v1/{+customer}/reports:countChromeDevicesReachingAutoExpirationDate"
            },
            "countChromeVersions": {
              "response": {
                "$ref": "GoogleChromeManagementV1CountChromeVersionsResponse"
              },
              "id": "chromemanagement.customers.reports.countChromeVersions",
              "parameters": {
                "orgUnitId": {
                  "location": "query",
                  "description": "The ID of the organizational unit.",
                  "type": "string"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Supported filter fields: * last_active_date"
                },
                "pageSize": {
                  "type": "integer",
                  "description": "Maximum number of results to return. Maximum and default are 100.",
                  "location": "query",
                  "format": "int32"
                },
                "customer": {
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request."
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Token to specify the page of the request to be returned."
                }
              },
              "flatPath": "v1/customers/{customersId}/reports:countChromeVersions",
              "parameterOrder": [
                "customer"
              ],
              "path": "v1/{+customer}/reports:countChromeVersions",
              "description": "Generate report of installed Chrome versions.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ]
            }
          }
        },
        "apps": {
          "resources": {
            "web": {
              "methods": {
                "get": {
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^customers/[^/]+/apps/web/[^/]+$",
                      "description": "Required. The app for which details are being queried. Examples: \"customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2\" for the Save to Google Drive Chrome extension version 2.1.2, \"customers/my_customer/apps/android/com.google.android.apps.docs\" for the Google Drive Android app's latest version.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.appdetails.readonly"
                  ],
                  "description": "Get a specific app for a customer by its resource name.",
                  "id": "chromemanagement.customers.apps.web.get",
                  "flatPath": "v1/customers/{customersId}/apps/web/{webId}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleChromeManagementV1AppDetails"
                  }
                }
              }
            },
            "android": {
              "methods": {
                "get": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The app for which details are being queried. Examples: \"customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2\" for the Save to Google Drive Chrome extension version 2.1.2, \"customers/my_customer/apps/android/com.google.android.apps.docs\" for the Google Drive Android app's latest version.",
                      "required": true,
                      "pattern": "^customers/[^/]+/apps/android/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleChromeManagementV1AppDetails"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "id": "chromemanagement.customers.apps.android.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.appdetails.readonly"
                  ],
                  "flatPath": "v1/customers/{customersId}/apps/android/{androidId}",
                  "description": "Get a specific app for a customer by its resource name."
                }
              }
            },
            "chrome": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^customers/[^/]+/apps/chrome/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The app for which details are being queried. Examples: \"customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2\" for the Save to Google Drive Chrome extension version 2.1.2, \"customers/my_customer/apps/android/com.google.android.apps.docs\" for the Google Drive Android app's latest version.",
                      "type": "string"
                    }
                  },
                  "description": "Get a specific app for a customer by its resource name.",
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.appdetails.readonly"
                  ],
                  "flatPath": "v1/customers/{customersId}/apps/chrome/{chromeId}",
                  "response": {
                    "$ref": "GoogleChromeManagementV1AppDetails"
                  },
                  "path": "v1/{+name}",
                  "id": "chromemanagement.customers.apps.chrome.get",
                  "httpMethod": "GET"
                }
              }
            }
          },
          "methods": {
            "countChromeAppRequests": {
              "id": "chromemanagement.customers.apps.countChromeAppRequests",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.appdetails.readonly"
              ],
              "flatPath": "v1/customers/{customersId}/apps:countChromeAppRequests",
              "response": {
                "$ref": "GoogleChromeManagementV1CountChromeAppRequestsResponse"
              },
              "parameterOrder": [
                "customer"
              ],
              "description": "Generate summary of app installation requests.",
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "Maximum number of results to return. Maximum and default are 50, anything above will be coerced to 50."
                },
                "pageToken": {
                  "description": "Token to specify the page of the request to be returned.",
                  "type": "string",
                  "location": "query"
                },
                "orderBy": {
                  "description": "Field used to order results. Supported fields: * request_count * latest_request_time",
                  "type": "string",
                  "location": "query"
                },
                "customer": {
                  "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request.",
                  "required": true,
                  "location": "path",
                  "pattern": "^customers/[^/]+$",
                  "type": "string"
                },
                "orgUnitId": {
                  "location": "query",
                  "description": "The ID of the organizational unit.",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "path": "v1/{+customer}/apps:countChromeAppRequests"
            }
          }
        },
        "telemetry": {
          "resources": {
            "devices": {
              "methods": {
                "get": {
                  "flatPath": "v1/customers/{customersId}/telemetry/devices/{devicesId}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleChromeManagementV1TelemetryDevice"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "chromemanagement.customers.telemetry.devices.get",
                  "path": "v1/{+name}",
                  "parameters": {
                    "readMask": {
                      "description": "Required. Read mask to specify which fields to return.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the `TelemetryDevice` to return.",
                      "pattern": "^customers/[^/]+/telemetry/devices/[^/]+$"
                    }
                  },
                  "description": "Get telemetry device.",
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.telemetry.readonly"
                  ]
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/customers/{customersId}/telemetry/devices",
                  "httpMethod": "GET",
                  "id": "chromemanagement.customers.telemetry.devices.list",
                  "response": {
                    "$ref": "GoogleChromeManagementV1ListTelemetryDevicesResponse"
                  },
                  "description": "List all telemetry devices.",
                  "path": "v1/{+parent}/telemetry/devices",
                  "scopes": [
                    "https://www.googleapis.com/auth/chrome.management.telemetry.readonly"
                  ],
                  "parameters": {
                    "readMask": {
                      "description": "Required. Read mask to specify which fields to return.",
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Only include resources that match the filter. Supported filter fields: - org_unit_id - serial_number - device_id "
                    },
                    "parent": {
                      "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request.",
                      "pattern": "^customers/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "pageToken": {
                      "description": "Token to specify next page in the list.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Maximum number of results to return. Default value is 100. Maximum value is 1000.",
                      "location": "query",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "batchPath": "batch",
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/chrome.management.reports.readonly": {
          "description": "See reports about devices and Chrome browsers managed within your organization"
        },
        "https://www.googleapis.com/auth/chrome.management.appdetails.readonly": {
          "description": "See detailed information about apps installed on Chrome browsers and devices managed by your organization"
        },
        "https://www.googleapis.com/auth/chrome.management.telemetry.readonly": {
          "description": "See basic device and telemetry information collected from Chrome OS devices or users managed within your organization"
        }
      }
    }
  },
  "schemas": {
    "GoogleChromeManagementV1GraphicsAdapterInfo": {
      "id": "GoogleChromeManagementV1GraphicsAdapterInfo",
      "properties": {
        "driverVersion": {
          "readOnly": true,
          "description": "Output only. Version of the GPU driver.",
          "type": "string"
        },
        "adapter": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Adapter name. Example: Mesa DRI Intel(R) UHD Graphics 620 (Kabylake GT2)."
        },
        "deviceId": {
          "readOnly": true,
          "type": "string",
          "format": "int64",
          "description": "Output only. Represents the graphics card device id."
        }
      },
      "type": "object",
      "description": "Information of a graphics adapter (GPU)."
    },
    "GoogleTypeDate": {
      "type": "object",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "id": "GoogleTypeDate",
      "properties": {
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "type": "integer"
        },
        "year": {
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleChromeManagementV1FindInstalledAppDevicesResponse": {
      "description": "Response containing a list of devices with queried app installed.",
      "properties": {
        "devices": {
          "items": {
            "$ref": "GoogleChromeManagementV1Device"
          },
          "type": "array",
          "description": "A list of devices which have the app installed. Sorted in ascending alphabetical order on the Device.machine field."
        },
        "totalSize": {
          "description": "Total number of devices matching request.",
          "format": "int32",
          "type": "integer"
        },
        "nextPageToken": {
          "description": "Token to specify the next page of the request.",
          "type": "string"
        }
      },
      "id": "GoogleChromeManagementV1FindInstalledAppDevicesResponse",
      "type": "object"
    },
    "GoogleChromeManagementV1AndroidAppInfo": {
      "id": "GoogleChromeManagementV1AndroidAppInfo",
      "description": "Android app information.",
      "properties": {
        "permissions": {
          "items": {
            "$ref": "GoogleChromeManagementV1AndroidAppPermission"
          },
          "description": "Output only. Permissions requested by an Android app.",
          "type": "array",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1StorageInfoDiskVolume": {
      "description": "Information for disk volumes",
      "type": "object",
      "id": "GoogleChromeManagementV1StorageInfoDiskVolume",
      "properties": {
        "storageTotalBytes": {
          "description": "Total storage space in bytes.",
          "format": "int64",
          "type": "string"
        },
        "storageFreeBytes": {
          "format": "int64",
          "description": "Free storage space in bytes.",
          "type": "string"
        },
        "volumeId": {
          "description": "Disk volume id.",
          "type": "string"
        }
      }
    },
    "GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse": {
      "type": "object",
      "id": "GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse",
      "description": "Response containing counts for devices that need attention.",
      "properties": {
        "pendingUpdate": {
          "format": "int64",
          "type": "string",
          "description": "Number of devices that are pending an OS update."
        },
        "unsupportedPolicyCount": {
          "format": "int64",
          "description": "Number of devices that are unable to apply a policy due to an OS version mismatch.",
          "type": "string"
        },
        "noRecentUserActivityCount": {
          "description": "Number of ChromeOS devices that have not seen any user activity in the past 28 days.",
          "format": "int64",
          "type": "string"
        },
        "noRecentPolicySyncCount": {
          "format": "int64",
          "description": "Number of ChromeOS devices have not synced policies in the past 28 days.",
          "type": "string"
        },
        "osVersionNotCompliantCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of devices whose OS version is not compliant."
        }
      }
    },
    "GoogleChromeManagementV1CountChromeDevicesReachingAutoExpirationDateResponse": {
      "id": "GoogleChromeManagementV1CountChromeDevicesReachingAutoExpirationDateResponse",
      "description": "Response containing a list of devices expiring in each month of a selected time frame. Counts are grouped by model and Auto Update Expiration date.",
      "properties": {
        "deviceAueCountReports": {
          "items": {
            "$ref": "GoogleChromeManagementV1DeviceAueCountReport"
          },
          "type": "array",
          "description": "The list of reports sorted by auto update expiration date in ascending order."
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1NetworkInfo": {
      "properties": {
        "networkDevices": {
          "type": "array",
          "description": "Output only. List of network devices.",
          "items": {
            "$ref": "GoogleChromeManagementV1NetworkDevice"
          },
          "readOnly": true
        }
      },
      "id": "GoogleChromeManagementV1NetworkInfo",
      "type": "object",
      "description": "Network device information. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportNetworkDeviceConfiguration](https://chromeenterprise.google/policies/#ReportNetworkDeviceConfiguration) * Data Collection Frequency: At device startup * Default Data Reporting Frequency: At device startup - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A"
    },
    "GoogleChromeManagementV1CpuTemperatureInfo": {
      "id": "GoogleChromeManagementV1CpuTemperatureInfo",
      "description": "CPU temperature of a device. Sampled per CPU core in Celsius. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Every 10 minutes * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A",
      "properties": {
        "label": {
          "type": "string",
          "description": "Output only. CPU label. Example: Core 0",
          "readOnly": true
        },
        "temperatureCelsius": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Output only. CPU temperature in Celsius."
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1CountChromeVersionsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Token to specify the next page of the request.",
          "type": "string"
        },
        "browserVersions": {
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1BrowserVersion"
          },
          "description": "List of all browser versions and their install counts."
        },
        "totalSize": {
          "format": "int32",
          "description": "Total number browser versions matching request.",
          "type": "integer"
        }
      },
      "description": "Response containing requested browser versions details and counts.",
      "id": "GoogleChromeManagementV1CountChromeVersionsResponse",
      "type": "object"
    },
    "GoogleChromeManagementV1ChromeAppRequest": {
      "id": "GoogleChromeManagementV1ChromeAppRequest",
      "properties": {
        "appId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Unique store identifier for the app. Example: \"gmbmikajjgmnabiglmofipeabaddhgne\" for the Save to Google Drive Chrome extension."
        },
        "detailUri": {
          "readOnly": true,
          "description": "Output only. The uri for the detail page of the item.",
          "type": "string"
        },
        "iconUri": {
          "description": "Output only. A link to an image that can be used as an icon for the product.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "readOnly": true,
          "description": "Output only. App's display name.",
          "type": "string"
        },
        "requestCount": {
          "readOnly": true,
          "format": "int64",
          "description": "Output only. Total count of requests for this app.",
          "type": "string"
        },
        "latestRequestTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp of the most recently made request for this app.",
          "format": "google-datetime"
        },
        "appDetails": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Format: app_details=customers/{customer_id}/apps/chrome/{app_id}"
        }
      },
      "description": "Details of an app installation request.",
      "type": "object"
    },
    "GoogleChromeManagementV1MemoryStatusReport": {
      "id": "GoogleChromeManagementV1MemoryStatusReport",
      "description": "Contains samples of memory status reports. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceMemoryInfo](https://chromeenterprise.google/policies/#ReportDeviceMemoryInfo) * Data Collection Frequency: Only at upload, SystemRamFreeByes is collected every 10 minutes * Default Data Reporting Frequency: Every 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A",
      "type": "object",
      "properties": {
        "sampleFrequency": {
          "format": "google-duration",
          "description": "Output only. Frequency the report is sampled.",
          "readOnly": true,
          "type": "string"
        },
        "pageFaults": {
          "description": "Output only. Number of page faults during this collection",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "systemRamFreeBytes": {
          "format": "int64",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Amount of free RAM in bytes (unreliable due to Garbage Collection)."
        },
        "reportTime": {
          "description": "Output only. The timestamp in milliseconds representing time at which this report was sampled.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GoogleChromeManagementV1OsUpdateStatus": {
      "properties": {
        "lastRebootTime": {
          "type": "string",
          "description": "Output only. Timestamp of the last reboot.",
          "format": "google-datetime",
          "readOnly": true
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Timestamp of the last successful update.",
          "readOnly": true
        },
        "newRequestedPlatformVersion": {
          "readOnly": true,
          "description": "Output only. New requested platform version from the pending updated kiosk app.",
          "type": "string"
        },
        "lastUpdateCheckTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Timestamp of the last update check."
        },
        "updateState": {
          "type": "string",
          "enum": [
            "UPDATE_STATE_UNSPECIFIED",
            "OS_IMAGE_DOWNLOAD_NOT_STARTED",
            "OS_IMAGE_DOWNLOAD_IN_PROGRESS",
            "OS_UPDATE_NEED_REBOOT"
          ],
          "description": "Output only. Current state of the os update.",
          "enumDescriptions": [
            "State unspecified.",
            "OS has not started downloading.",
            "OS has started download on device.",
            "Device needs reboot to finish upload."
          ],
          "readOnly": true
        },
        "newPlatformVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. New platform version of the os image being downloaded and applied. It is only set when update status is OS_IMAGE_DOWNLOAD_IN_PROGRESS or OS_UPDATE_NEED_REBOOT. Note this could be a dummy \"0.0.0.0\" for OS_UPDATE_NEED_REBOOT status for some edge cases, e.g. update engine is restarted without a reboot."
        }
      },
      "id": "GoogleChromeManagementV1OsUpdateStatus",
      "type": "object",
      "description": "Contains information regarding the current OS update status. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceOsUpdateStatus](https://chromeenterprise.google/policies/#ReportDeviceOsUpdateStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A"
    },
    "GoogleChromeManagementV1DiskInfo": {
      "id": "GoogleChromeManagementV1DiskInfo",
      "description": "Status of the single storage device.",
      "type": "object",
      "properties": {
        "volumeIds": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. Disk volumes.",
          "items": {
            "type": "string"
          }
        },
        "health": {
          "type": "string",
          "description": "Output only. Disk health.",
          "readOnly": true
        },
        "sizeBytes": {
          "format": "int64",
          "readOnly": true,
          "description": "Output only. Disk size.",
          "type": "string"
        },
        "bytesWrittenThisSession": {
          "format": "int64",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Number of bytes written since last boot."
        },
        "serialNumber": {
          "description": "Output only. Disk serial number.",
          "type": "string",
          "readOnly": true
        },
        "writeTimeThisSession": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Time spent writing to disk since last boot.",
          "format": "google-duration"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Disk type: eMMC / NVMe / ATA / SCSI."
        },
        "discardTimeThisSession": {
          "format": "google-duration",
          "description": "Output only. Time spent discarding since last boot. Discarding is writing to clear blocks which are no longer in use. Supported on kernels 4.18+.",
          "readOnly": true,
          "type": "string"
        },
        "bytesReadThisSession": {
          "format": "int64",
          "description": "Output only. Number of bytes read since last boot.",
          "readOnly": true,
          "type": "string"
        },
        "manufacturer": {
          "readOnly": true,
          "description": "Output only. Disk manufacturer.",
          "type": "string"
        },
        "ioTimeThisSession": {
          "format": "google-duration",
          "description": "Output only. Counts the time the disk and queue were busy, so unlike the fields above, parallel requests are not counted multiple times.",
          "readOnly": true,
          "type": "string"
        },
        "model": {
          "type": "string",
          "description": "Output only. Disk model.",
          "readOnly": true
        },
        "readTimeThisSession": {
          "format": "google-duration",
          "type": "string",
          "description": "Output only. Time spent reading from disk since last boot.",
          "readOnly": true
        }
      }
    },
    "GoogleChromeManagementV1InstalledApp": {
      "type": "object",
      "properties": {
        "browserDeviceCount": {
          "description": "Output only. Count of browser devices with this app installed.",
          "readOnly": true,
          "format": "int64",
          "type": "string"
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Description of the installed app."
        },
        "disabled": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether the app is disabled."
        },
        "appSource": {
          "description": "Output only. Source of the installed app.",
          "enumDescriptions": [
            "Application source not specified.",
            "Generally for extensions and Chrome apps.",
            "Play Store app."
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "APP_SOURCE_UNSPECIFIED",
            "CHROME_WEBSTORE",
            "PLAY_STORE"
          ]
        },
        "permissions": {
          "description": "Output only. Permissions of the installed app.",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "osUserCount": {
          "type": "string",
          "format": "int64",
          "description": "Output only. Count of ChromeOS users with this app installed.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the installed app."
        },
        "appInstallType": {
          "enum": [
            "APP_INSTALL_TYPE_UNSPECIFIED",
            "MULTIPLE",
            "NORMAL",
            "ADMIN",
            "DEVELOPMENT",
            "SIDELOAD",
            "OTHER"
          ],
          "readOnly": true,
          "description": "Output only. How the app was installed.",
          "type": "string",
          "enumDescriptions": [
            "Application install type not specified.",
            "Multiple app install types.",
            "Normal app install type.",
            "Administrator app install type.",
            "Development app install type.",
            "Sideloaded app install type.",
            "Other app install type."
          ]
        },
        "appType": {
          "readOnly": true,
          "description": "Output only. Type of the app.",
          "enum": [
            "APP_TYPE_UNSPECIFIED",
            "EXTENSION",
            "APP",
            "THEME",
            "HOSTED_APP",
            "ANDROID_APP"
          ],
          "type": "string",
          "enumDescriptions": [
            "App type not specified.",
            "Chrome extension.",
            "Chrome app.",
            "Chrome theme.",
            "Chrome hosted app.",
            "ARC++ app."
          ]
        },
        "appId": {
          "description": "Output only. Unique identifier of the app. For Chrome apps and extensions, the 32-character id (e.g. ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g. com.evernote).",
          "readOnly": true,
          "type": "string"
        },
        "homepageUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Homepage uri of the installed app."
        }
      },
      "id": "GoogleChromeManagementV1InstalledApp",
      "description": "Describes an installed app."
    },
    "GoogleChromeManagementV1ChromeAppPermission": {
      "id": "GoogleChromeManagementV1ChromeAppPermission",
      "description": "Permission requested by a Chrome app or extension.",
      "type": "object",
      "properties": {
        "documentationUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. If available, a URI to a page that has documentation for the current permission."
        },
        "accessUserData": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. If available, whether this permissions grants the app/extension access to user data."
        },
        "type": {
          "description": "Output only. The type of the permission.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GoogleChromeManagementV1MemoryInfo": {
      "description": "Memory information of a device. * This field has both telemetry and device information: - `totalRamBytes` - Device information - `availableRamBytes` - Telemetry information - `totalMemoryEncryption` - Device information * Data for this field is controlled via policy: [ReportDeviceMemoryInfo](https://chromeenterprise.google/policies/#ReportDeviceMemoryInfo) * Data Collection Frequency: - `totalRamBytes` - Only at upload - `availableRamBytes` - Every 10 minutes - `totalMemoryEncryption` - at device startup * Default Data Reporting Frequency: - `totalRamBytes` - 3 hours - `availableRamBytes` - 3 hours - `totalMemoryEncryption` - at device startup - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: only for `totalMemoryEncryption` * Reported for affiliated users only: N/A",
      "id": "GoogleChromeManagementV1MemoryInfo",
      "properties": {
        "totalMemoryEncryption": {
          "description": "Output only. Total memory encryption info for the device.",
          "$ref": "GoogleChromeManagementV1TotalMemoryEncryptionInfo",
          "readOnly": true
        },
        "availableRamBytes": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Amount of available RAM in bytes.",
          "format": "int64"
        },
        "totalRamBytes": {
          "readOnly": true,
          "format": "int64",
          "description": "Output only. Total RAM in bytes.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1ThunderboltInfo": {
      "type": "object",
      "description": "Thunderbolt bus info. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceSecurityStatus](https://chromeenterprise.google/policies/#ReportDeviceSecurityStatus) * Data Collection Frequency: At device startup * Default Data Reporting Frequency: At device startup - Policy Controlled: No * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A",
      "properties": {
        "securityLevel": {
          "description": "Security level of the Thunderbolt bus.",
          "enum": [
            "THUNDERBOLT_SECURITY_LEVEL_UNSPECIFIED",
            "THUNDERBOLT_SECURITY_NONE_LEVEL",
            "THUNDERBOLT_SECURITY_USER_LEVEL",
            "THUNDERBOLT_SECURITY_SECURE_LEVEL",
            "THUNDERBOLT_SECURITY_DP_ONLY_LEVEL",
            "THUNDERBOLT_SECURITY_USB_ONLY_LEVEL",
            "THUNDERBOLT_SECURITY_NO_PCIE_LEVEL"
          ],
          "enumDescriptions": [
            "Thunderbolt security level is not set.",
            "All devices are automatically connected by the firmware. No user approval is needed.",
            "User is asked whether the device is allowed to be connected.",
            "User is asked whether the device is allowed to be connected. In addition the device is sent a challenge that should match the expected one based on a random key written to the key sysfs attribute",
            "The firmware automatically creates tunnels for Thunderbolt.",
            "The firmware automatically creates tunnels for the USB controller and Display Port in a dock. All PCIe links downstream of the dock are removed.",
            "PCIE tunneling is disabled."
          ],
          "type": "string"
        }
      },
      "id": "GoogleChromeManagementV1ThunderboltInfo"
    },
    "GoogleChromeManagementV1ChromeAppSiteAccess": {
      "id": "GoogleChromeManagementV1ChromeAppSiteAccess",
      "type": "object",
      "description": "Represent one host permission.",
      "properties": {
        "hostMatch": {
          "type": "string",
          "description": "Output only. This can contain very specific hosts, or patterns like \"*.com\" for instance.",
          "readOnly": true
        }
      }
    },
    "GoogleChromeManagementV1BatteryInfo": {
      "description": "Information about the battery. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDevicePowerStatus](https://chromeenterprise.google/policies/#ReportDevicePowerStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A",
      "properties": {
        "technology": {
          "description": "Output only. Technology of the battery. Example: Li-ion",
          "type": "string",
          "readOnly": true
        },
        "designCapacity": {
          "format": "int64",
          "description": "Output only. Design capacity (mAmpere-hours).",
          "readOnly": true,
          "type": "string"
        },
        "manufactureDate": {
          "$ref": "GoogleTypeDate",
          "description": "Output only. The date the battery was manufactured.",
          "readOnly": true
        },
        "serialNumber": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Battery serial number."
        },
        "designMinVoltage": {
          "description": "Output only. Designed minimum output voltage (mV)",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "manufacturer": {
          "description": "Output only. Battery manufacturer.",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "GoogleChromeManagementV1BatteryInfo",
      "type": "object"
    },
    "GoogleChromeManagementV1AppDetails": {
      "type": "object",
      "id": "GoogleChromeManagementV1AppDetails",
      "description": "Resource representing app details.",
      "properties": {
        "displayName": {
          "description": "Output only. App's display name.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Output only. Format: name=customers/{customer_id}/apps/{chrome|android|web}/{app_id}@{version}",
          "readOnly": true,
          "type": "string"
        },
        "appId": {
          "description": "Output only. Unique store identifier for the item. Examples: \"gmbmikajjgmnabiglmofipeabaddhgne\" for the Save to Google Drive Chrome extension, \"com.google.android.apps.docs\" for the Google Drive Android app.",
          "type": "string",
          "readOnly": true
        },
        "isPaidApp": {
          "description": "Output only. Indicates if the app has to be paid for OR has paid content.",
          "type": "boolean",
          "readOnly": true
        },
        "type": {
          "enumDescriptions": [
            "App type unspecified.",
            "Chrome app.",
            "ARC++ app.",
            "Web app."
          ],
          "enum": [
            "APP_ITEM_TYPE_UNSPECIFIED",
            "CHROME",
            "ANDROID",
            "WEB"
          ],
          "description": "Output only. App type.",
          "readOnly": true,
          "type": "string"
        },
        "publisher": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The publisher of the item."
        },
        "revisionId": {
          "type": "string",
          "description": "Output only. App version. A new revision is committed whenever a new version of the app is published.",
          "readOnly": true
        },
        "detailUri": {
          "description": "Output only. The uri for the detail page of the item.",
          "readOnly": true,
          "type": "string"
        },
        "reviewRating": {
          "description": "Output only. The rating of the app (on 5 stars). Chrome Web Store review information will always be for the latest version of an app.",
          "format": "float",
          "type": "number",
          "readOnly": true
        },
        "androidAppInfo": {
          "readOnly": true,
          "$ref": "GoogleChromeManagementV1AndroidAppInfo",
          "description": "Output only. Android app information."
        },
        "firstPublishTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. First published time."
        },
        "description": {
          "readOnly": true,
          "description": "Output only. App's description.",
          "type": "string"
        },
        "serviceError": {
          "readOnly": true,
          "$ref": "GoogleRpcStatus",
          "description": "Output only. Information about a partial service error if applicable."
        },
        "iconUri": {
          "description": "Output only. A link to an image that can be used as an icon for the product.",
          "readOnly": true,
          "type": "string"
        },
        "chromeAppInfo": {
          "readOnly": true,
          "description": "Output only. Chrome Web Store app information.",
          "$ref": "GoogleChromeManagementV1ChromeAppInfo"
        },
        "privacyPolicyUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The URI pointing to the privacy policy of the app, if it was provided by the developer. Version-specific field that will only be set when the requested app version is found."
        },
        "reviewNumber": {
          "description": "Output only. Number of reviews received. Chrome Web Store review information will always be for the latest version of an app.",
          "readOnly": true,
          "format": "int64",
          "type": "string"
        },
        "homepageUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Home page or Website uri."
        },
        "latestPublishTime": {
          "type": "string",
          "description": "Output only. Latest published time.",
          "format": "google-datetime",
          "readOnly": true
        }
      }
    },
    "GoogleChromeManagementV1TelemetryDevice": {
      "type": "object",
      "description": "Telemetry data collected from a managed device.",
      "properties": {
        "graphicsInfo": {
          "$ref": "GoogleChromeManagementV1GraphicsInfo",
          "description": "Output only. Contains information regarding Graphic peripherals for the device.",
          "readOnly": true
        },
        "storageInfo": {
          "description": "Output only. Information of storage specs for the device.",
          "readOnly": true,
          "$ref": "GoogleChromeManagementV1StorageInfo"
        },
        "networkDiagnosticsReport": {
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1NetworkDiagnosticsReport"
          },
          "readOnly": true,
          "description": "Output only. Network diagnostics collected periodically."
        },
        "cpuInfo": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. Information regarding CPU specs for the device.",
          "items": {
            "$ref": "GoogleChromeManagementV1CpuInfo"
          }
        },
        "orgUnitId": {
          "description": "Output only. Organization unit ID of the device.",
          "readOnly": true,
          "type": "string"
        },
        "osUpdateStatus": {
          "description": "Output only. Contains relevant information regarding ChromeOS update status.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1OsUpdateStatus"
          }
        },
        "memoryStatusReport": {
          "readOnly": true,
          "items": {
            "$ref": "GoogleChromeManagementV1MemoryStatusReport"
          },
          "type": "array",
          "description": "Output only. Memory status reports collected periodically sorted decreasing by report_time."
        },
        "storageStatusReport": {
          "items": {
            "$ref": "GoogleChromeManagementV1StorageStatusReport"
          },
          "description": "Output only. Storage reports collected periodically.",
          "readOnly": true,
          "type": "array"
        },
        "batteryStatusReport": {
          "description": "Output only. Battery reports collected periodically.",
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1BatteryStatusReport"
          },
          "readOnly": true
        },
        "graphicsStatusReport": {
          "items": {
            "$ref": "GoogleChromeManagementV1GraphicsStatusReport"
          },
          "description": "Output only. Graphics reports collected periodically.",
          "type": "array",
          "readOnly": true
        },
        "memoryInfo": {
          "description": "Output only. Information regarding memory specs for the device.",
          "readOnly": true,
          "$ref": "GoogleChromeManagementV1MemoryInfo"
        },
        "networkInfo": {
          "readOnly": true,
          "$ref": "GoogleChromeManagementV1NetworkInfo",
          "description": "Output only. Network devices information."
        },
        "deviceId": {
          "type": "string",
          "description": "Output only. The unique Directory API ID of the device. This value is the same as the Admin Console's Directory API ID in the ChromeOS Devices tab",
          "readOnly": true
        },
        "batteryInfo": {
          "description": "Output only. Information on battery specs for the device.",
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1BatteryInfo"
          },
          "readOnly": true
        },
        "serialNumber": {
          "type": "string",
          "description": "Output only. Device serial number. This value is the same as the Admin Console's Serial Number in the ChromeOS Devices tab.",
          "readOnly": true
        },
        "audioStatusReport": {
          "items": {
            "$ref": "GoogleChromeManagementV1AudioStatusReport"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Audio reports collected periodically sorted in a decreasing order of report_time."
        },
        "networkStatusReport": {
          "items": {
            "$ref": "GoogleChromeManagementV1NetworkStatusReport"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Network specs collected periodically."
        },
        "customer": {
          "readOnly": true,
          "description": "Output only. Google Workspace Customer whose enterprise enrolled the device.",
          "type": "string"
        },
        "cpuStatusReport": {
          "readOnly": true,
          "description": "Output only. CPU status reports collected periodically sorted in a decreasing order of report_time.",
          "items": {
            "$ref": "GoogleChromeManagementV1CpuStatusReport"
          },
          "type": "array"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Resource name of the device."
        },
        "thunderboltInfo": {
          "description": "Output only. Information on Thunderbolt bus.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1ThunderboltInfo"
          }
        }
      },
      "id": "GoogleChromeManagementV1TelemetryDevice"
    },
    "GoogleChromeManagementV1DisplayInfo": {
      "properties": {
        "deviceId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Represents the graphics card device id.",
          "format": "int64"
        },
        "isInternal": {
          "type": "boolean",
          "description": "Output only. Indicates if display is internal or not.",
          "readOnly": true
        },
        "resolutionWidth": {
          "type": "integer",
          "format": "int32",
          "description": "Output only. Resolution width in pixels.",
          "readOnly": true
        },
        "resolutionHeight": {
          "format": "int32",
          "readOnly": true,
          "description": "Output only. Resolution height in pixels.",
          "type": "integer"
        },
        "refreshRate": {
          "readOnly": true,
          "format": "int32",
          "description": "Output only. Refresh rate in Hz.",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "Information for a display.",
      "id": "GoogleChromeManagementV1DisplayInfo"
    },
    "GoogleChromeManagementV1CountInstalledAppsResponse": {
      "id": "GoogleChromeManagementV1CountInstalledAppsResponse",
      "type": "object",
      "properties": {
        "installedApps": {
          "items": {
            "$ref": "GoogleChromeManagementV1InstalledApp"
          },
          "type": "array",
          "description": "List of installed apps matching request."
        },
        "totalSize": {
          "description": "Total number of installed apps matching request.",
          "format": "int32",
          "type": "integer"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to specify the next page of the request."
        }
      },
      "description": "Response containing details of queried installed apps."
    },
    "GoogleChromeManagementV1GraphicsInfo": {
      "id": "GoogleChromeManagementV1GraphicsInfo",
      "description": "Information of the graphics subsystem. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceGraphicsStatus](https://chromeenterprise.google/policies/#ReportDeviceGraphicsStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A",
      "properties": {
        "adapterInfo": {
          "$ref": "GoogleChromeManagementV1GraphicsAdapterInfo",
          "description": "Output only. Information about the graphics adapter (GPU).",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "GoogleChromeManagementV1BatterySampleReport": {
      "description": "Sampling data for battery. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDevicePowerStatus](https://chromeenterprise.google/policies/#ReportDevicePowerStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A",
      "properties": {
        "reportTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Timestamp of when the sample was collected on device",
          "readOnly": true
        },
        "voltage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Battery voltage (millivolt).",
          "format": "int64"
        },
        "remainingCapacity": {
          "description": "Output only. Battery remaining capacity (mAmpere-hours).",
          "format": "int64",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Output only. Battery status read from sysfs. Example: Discharging",
          "readOnly": true,
          "type": "string"
        },
        "dischargeRate": {
          "description": "Output only. The battery discharge rate measured in mW. Positive if the battery is being discharged, negative if it's being charged.",
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "current": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Battery current (mA).",
          "format": "int64"
        },
        "chargeRate": {
          "type": "integer",
          "format": "int32",
          "description": "Output only. Battery charge percentage.",
          "readOnly": true
        },
        "temperature": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Output only. Temperature in Celsius degrees."
        }
      },
      "type": "object",
      "id": "GoogleChromeManagementV1BatterySampleReport"
    },
    "GoogleChromeManagementV1CpuStatusReport": {
      "properties": {
        "sampleFrequency": {
          "type": "string",
          "description": "Output only. Frequency the report is sampled.",
          "format": "google-duration",
          "readOnly": true
        },
        "reportTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp in milliseconds representing time at which this report was sampled.",
          "type": "string"
        },
        "cpuTemperatureInfo": {
          "items": {
            "$ref": "GoogleChromeManagementV1CpuTemperatureInfo"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. CPU temperature sample info per CPU core in Celsius"
        },
        "cpuUtilizationPct": {
          "readOnly": true,
          "format": "int32",
          "type": "integer",
          "description": "Output only. Sample of CPU utilization (0-100 percent)."
        }
      },
      "type": "object",
      "description": "Provides information about the status of the CPU. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Every 10 minutes * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A",
      "id": "GoogleChromeManagementV1CpuStatusReport"
    },
    "GoogleChromeManagementV1Device": {
      "type": "object",
      "id": "GoogleChromeManagementV1Device",
      "properties": {
        "machine": {
          "type": "string",
          "description": "Output only. The name of the machine within its local network.",
          "readOnly": true
        },
        "deviceId": {
          "description": "Output only. The ID of the device that reported this Chrome browser information.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "Describes a device reporting Chrome browser information."
    },
    "GoogleChromeManagementV1HttpsLatencyRoutineData": {
      "description": "Data that describes the result of the HTTPS latency diagnostics routine, with the HTTPS requests issued to Google websites.",
      "type": "object",
      "id": "GoogleChromeManagementV1HttpsLatencyRoutineData",
      "properties": {
        "latency": {
          "readOnly": true,
          "format": "google-duration",
          "type": "string",
          "description": "Output only. HTTPS latency if routine succeeded or failed because of HIGH_LATENCY or VERY_HIGH_LATENCY."
        },
        "problem": {
          "readOnly": true,
          "enum": [
            "HTTPS_LATENCY_PROBLEM_UNSPECIFIED",
            "FAILED_DNS_RESOLUTIONS",
            "FAILED_HTTPS_REQUESTS",
            "HIGH_LATENCY",
            "VERY_HIGH_LATENCY"
          ],
          "type": "string",
          "description": "Output only. HTTPS latency routine problem if a problem occurred.",
          "enumDescriptions": [
            "HTTPS latency problem not specified.",
            "One or more DNS resolutions resulted in a failure.",
            "One or more HTTPS requests resulted in a failure.",
            "Average HTTPS request latency time between 500ms and 1000ms is high.",
            "Average HTTPS request latency time greater than 1000ms is very high."
          ]
        }
      }
    },
    "GoogleChromeManagementV1CountChromeAppRequestsResponse": {
      "id": "GoogleChromeManagementV1CountChromeAppRequestsResponse",
      "description": "Response containing summary of requested app installations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to specify the next page in the list.",
          "type": "string"
        },
        "requestedApps": {
          "items": {
            "$ref": "GoogleChromeManagementV1ChromeAppRequest"
          },
          "description": "Count of requested apps matching request.",
          "type": "array"
        },
        "totalSize": {
          "format": "int32",
          "description": "Total number of matching app requests.",
          "type": "integer"
        }
      }
    },
    "GoogleChromeManagementV1BatteryStatusReport": {
      "type": "object",
      "description": "Status data for battery. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDevicePowerStatus](https://chromeenterprise.google/policies/#ReportDevicePowerStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A",
      "properties": {
        "reportTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Timestamp of when the sample was collected on device",
          "readOnly": true
        },
        "fullChargeCapacity": {
          "type": "string",
          "description": "Output only. Full charge capacity (mAmpere-hours).",
          "format": "int64",
          "readOnly": true
        },
        "batteryHealth": {
          "enum": [
            "BATTERY_HEALTH_UNSPECIFIED",
            "BATTERY_HEALTH_NORMAL",
            "BATTERY_REPLACE_SOON",
            "BATTERY_REPLACE_NOW"
          ],
          "enumDescriptions": [
            "Health unknown.",
            "Battery is healthy.",
            "Battery is moderately unhealthy and should be replaced soon.",
            "Battery is unhealthy and should be replaced."
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. Battery health."
        },
        "cycleCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Output only. Cycle count.",
          "format": "int32"
        },
        "serialNumber": {
          "readOnly": true,
          "description": "Output only. Battery serial number.",
          "type": "string"
        },
        "sample": {
          "items": {
            "$ref": "GoogleChromeManagementV1BatterySampleReport"
          },
          "description": "Output only. Sampling data for the battery sorted in a decreasing order of report_time.",
          "type": "array",
          "readOnly": true
        }
      },
      "id": "GoogleChromeManagementV1BatteryStatusReport"
    },
    "GoogleChromeManagementV1ListTelemetryDevicesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to specify next page in the list."
        },
        "devices": {
          "description": "Telemetry devices returned in the response.",
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1TelemetryDevice"
          }
        }
      },
      "type": "object",
      "id": "GoogleChromeManagementV1ListTelemetryDevicesResponse"
    },
    "GoogleChromeManagementV1GraphicsStatusReport": {
      "type": "object",
      "description": "Information of the graphics subsystem. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceGraphicsInfo](https://chromeenterprise.google/policies/#ReportDeviceGraphicsInfo) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A",
      "properties": {
        "reportTime": {
          "type": "string",
          "description": "Output only. Time at which the graphics data was reported.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "displays": {
          "items": {
            "$ref": "GoogleChromeManagementV1DisplayInfo"
          },
          "description": "Output only. Information about the displays for the device.",
          "readOnly": true,
          "type": "array"
        }
      },
      "id": "GoogleChromeManagementV1GraphicsStatusReport"
    },
    "GoogleChromeManagementV1NetworkDiagnosticsReport": {
      "type": "object",
      "description": "Network testing results to determine the health of the device's network connection, for example whether the HTTPS latency is high or normal.",
      "properties": {
        "httpsLatencyData": {
          "readOnly": true,
          "description": "Output only. HTTPS latency test data.",
          "$ref": "GoogleChromeManagementV1HttpsLatencyRoutineData"
        },
        "reportTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Timestamp of when the diagnostics were collected."
        }
      },
      "id": "GoogleChromeManagementV1NetworkDiagnosticsReport"
    },
    "GoogleChromeManagementV1NetworkStatusReport": {
      "properties": {
        "encryptionOn": {
          "description": "Output only. Whether the wifi encryption key is turned off.",
          "readOnly": true,
          "type": "boolean"
        },
        "connectionState": {
          "enumDescriptions": [
            "Network connection state unspecified.",
            "The network is connected and internet connectivity is available.",
            "The network is connected and not in a detected portal state, but internet connectivity may not be available.",
            "The network is connected but a portal state was detected. Internet connectivity may be limited.",
            "The network is in the process of connecting.",
            "The network is not connected."
          ],
          "description": "Output only. Current connection state of the network.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "NETWORK_CONNECTION_STATE_UNSPECIFIED",
            "ONLINE",
            "CONNECTED",
            "PORTAL",
            "CONNECTING",
            "NOT_CONNECTED"
          ]
        },
        "lanIpAddress": {
          "description": "Output only. LAN IP address.",
          "readOnly": true,
          "type": "string"
        },
        "wifiPowerManagementEnabled": {
          "description": "Output only. Wifi power management enabled",
          "readOnly": true,
          "type": "boolean"
        },
        "signalStrengthDbm": {
          "description": "Output only. Signal strength for wireless networks measured in decibels.",
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "sampleFrequency": {
          "type": "string",
          "format": "google-duration",
          "description": "Output only. Frequency the report is sampled.",
          "readOnly": true
        },
        "wifiLinkQuality": {
          "readOnly": true,
          "description": "Output only. Wifi link quality. Value ranges from [0, 70]. 0 indicates no signal and 70 indicates a strong signal.",
          "type": "string",
          "format": "int64"
        },
        "reportTime": {
          "description": "Output only. Time at which the network state was reported.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "gatewayIpAddress": {
          "description": "Output only. Gateway IP address.",
          "readOnly": true,
          "type": "string"
        },
        "receivingBitRateMbps": {
          "readOnly": true,
          "format": "int64",
          "description": "Output only. Receiving bit rate measured in Megabits per second.",
          "type": "string"
        },
        "transmissionPowerDbm": {
          "format": "int32",
          "type": "integer",
          "description": "Output only. Transmission power measured in decibels.",
          "readOnly": true
        },
        "connectionType": {
          "description": "Output only. Network connection type.",
          "readOnly": true,
          "enumDescriptions": [
            "Network connection type unspecified",
            "Cellular network connection.",
            "Ethernet network connection.",
            "Tether network connection.",
            "VPN network connection.",
            "Wifi network connection."
          ],
          "type": "string",
          "enum": [
            "NETWORK_TYPE_UNSPECIFIED",
            "CELLULAR",
            "ETHERNET",
            "TETHER",
            "VPN",
            "WIFI"
          ]
        },
        "transmissionBitRateMbps": {
          "format": "int64",
          "description": "Output only. Transmission bit rate measured in Megabits per second.",
          "type": "string",
          "readOnly": true
        },
        "guid": {
          "description": "Output only. Network connection guid.",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "GoogleChromeManagementV1NetworkStatusReport",
      "type": "object",
      "description": "State of visible/configured networks. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportNetworkStatus](https://chromeenterprise.google/policies/#ReportNetworkStatus) * Data Collection Frequency: 60 minutes * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: Yes"
    },
    "GoogleChromeManagementV1NetworkDevice": {
      "description": "Details about the network device. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportNetworkDeviceConfiguration](https://chromeenterprise.google/policies/#ReportNetworkDeviceConfiguration) * Data Collection Frequency: At device startup * Default Data Reporting Frequency: At device startup - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A",
      "type": "object",
      "properties": {
        "mdn": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The mobile directory number associated with the device's sim card."
        },
        "meid": {
          "readOnly": true,
          "description": "Output only. MEID (if applicable) of the corresponding network device.",
          "type": "string"
        },
        "iccid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The integrated circuit card ID associated with the device's sim card."
        },
        "macAddress": {
          "type": "string",
          "description": "Output only. MAC address (if applicable) of the corresponding network device.",
          "readOnly": true
        },
        "imei": {
          "type": "string",
          "description": "Output only. IMEI (if applicable) of the corresponding network device.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Network device type not specified.",
            "Cellular device.",
            "Ethernet device.",
            "Wifi device."
          ],
          "description": "Output only. Network device type.",
          "enum": [
            "NETWORK_DEVICE_TYPE_UNSPECIFIED",
            "CELLULAR_DEVICE",
            "ETHERNET_DEVICE",
            "WIFI_DEVICE"
          ],
          "readOnly": true
        }
      },
      "id": "GoogleChromeManagementV1NetworkDevice"
    },
    "GoogleChromeManagementV1DeviceAueCountReport": {
      "description": "Report for CountChromeDevicesPerAueDateResponse, contains the count of devices of a specific model and auto update expiration range.",
      "type": "object",
      "id": "GoogleChromeManagementV1DeviceAueCountReport",
      "properties": {
        "model": {
          "description": "Public model name of the devices.",
          "type": "string"
        },
        "aueYear": {
          "format": "int64",
          "description": "Int value of year corresponding to the Auto Update Expiration date in UTC time zone. If the device is already expired, this field is empty.",
          "type": "string"
        },
        "expired": {
          "type": "boolean",
          "description": "Boolean value for whether or not the device has already expired."
        },
        "count": {
          "format": "int64",
          "type": "string",
          "description": "Count of devices of this model."
        },
        "aueMonth": {
          "type": "string",
          "enum": [
            "MONTH_UNSPECIFIED",
            "JANUARY",
            "FEBRUARY",
            "MARCH",
            "APRIL",
            "MAY",
            "JUNE",
            "JULY",
            "AUGUST",
            "SEPTEMBER",
            "OCTOBER",
            "NOVEMBER",
            "DECEMBER"
          ],
          "enumDescriptions": [
            "The unspecified month.",
            "The month of January.",
            "The month of February.",
            "The month of March.",
            "The month of April.",
            "The month of May.",
            "The month of June.",
            "The month of July.",
            "The month of August.",
            "The month of September.",
            "The month of October.",
            "The month of November.",
            "The month of December."
          ],
          "description": "Enum value of month corresponding to the auto update expiration date in UTC time zone. If the device is already expired, this field is empty."
        }
      }
    },
    "GoogleChromeManagementV1StorageStatusReport": {
      "id": "GoogleChromeManagementV1StorageStatusReport",
      "properties": {
        "reportTime": {
          "readOnly": true,
          "description": "Output only. Timestamp of when the sample was collected on device",
          "format": "google-datetime",
          "type": "string"
        },
        "disk": {
          "description": "Output only. Reports on disk.",
          "items": {
            "$ref": "GoogleChromeManagementV1DiskInfo"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object",
      "description": "Status data for storage. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceStorageStatus](https://chromeenterprise.google/policies/#ReportDeviceStorageStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A"
    },
    "GoogleRpcStatus": {
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "GoogleChromeManagementV1TotalMemoryEncryptionInfo": {
      "properties": {
        "encryptionAlgorithm": {
          "type": "string",
          "enumDescriptions": [
            "Memory encryption algorithm is not set.",
            "The memory encryption algorithm being used is unknown.",
            "The memory encryption algorithm is using the AES_XTS encryption algorithm with a 128 bit block cypher.",
            "The memory encryption algorithm is using the AES_XTS encryption algorithm with a 256 bit block cypher."
          ],
          "enum": [
            "MEMORY_ENCRYPTION_ALGORITHM_UNSPECIFIED",
            "MEMORY_ENCRYPTION_ALGORITHM_UNKNOWN",
            "MEMORY_ENCRYPTION_ALGORITHM_AES_XTS_128",
            "MEMORY_ENCRYPTION_ALGORITHM_AES_XTS_256"
          ],
          "description": "Memory encryption algorithm."
        },
        "encryptionState": {
          "enum": [
            "MEMORY_ENCRYPTION_STATE_UNSPECIFIED",
            "MEMORY_ENCRYPTION_STATE_UNKNOWN",
            "MEMORY_ENCRYPTION_STATE_DISABLED",
            "MEMORY_ENCRYPTION_STATE_TME",
            "MEMORY_ENCRYPTION_STATE_MKTME"
          ],
          "description": "The state of memory encryption on the device.",
          "type": "string",
          "enumDescriptions": [
            "Memory encryption state is not set.",
            "The memory encryption state is unknown.",
            "Memory encrpytion on the device is disabled.",
            "Memory encryption on the device uses total memory encryption.",
            "Memory encryption on the device uses multi-key total memory encryption."
          ]
        },
        "maxKeys": {
          "type": "string",
          "description": "The maximum number of keys that can be used for encryption.",
          "format": "int64"
        },
        "keyLength": {
          "format": "int64",
          "type": "string",
          "description": "The length of the encryption keys."
        }
      },
      "description": "Memory encryption information of a device. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceMemoryInfo](https://chromeenterprise.google/policies/#ReportDeviceMemoryInfo) * Data Collection Frequency: At device startup * Default Data Reporting Frequency: At device startup - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A",
      "type": "object",
      "id": "GoogleChromeManagementV1TotalMemoryEncryptionInfo"
    },
    "GoogleChromeManagementV1AndroidAppPermission": {
      "id": "GoogleChromeManagementV1AndroidAppPermission",
      "description": "Permission requested by an Android app.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The type of the permission."
        }
      }
    },
    "GoogleChromeManagementV1AudioStatusReport": {
      "id": "GoogleChromeManagementV1AudioStatusReport",
      "type": "object",
      "description": "Status data for storage. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceAudioStatus](https://chromeenterprise.google/policies/#ReportDeviceAudioStatus) * Data Collection Frequency: 10 minutes * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A",
      "properties": {
        "reportTime": {
          "description": "Output only. Timestamp of when the sample was collected on device.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "outputDevice": {
          "type": "string",
          "description": "Output only. Active output device's name.",
          "readOnly": true
        },
        "inputGain": {
          "description": "Output only. Active input device's gain in [0, 100].",
          "readOnly": true,
          "format": "int32",
          "type": "integer"
        },
        "outputMute": {
          "description": "Output only. Is active output device mute or not.",
          "readOnly": true,
          "type": "boolean"
        },
        "outputVolume": {
          "readOnly": true,
          "description": "Output only. Active output device's volume in [0, 100].",
          "format": "int32",
          "type": "integer"
        },
        "inputMute": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Is active input device mute or not."
        },
        "inputDevice": {
          "readOnly": true,
          "description": "Output only. Active input device's name.",
          "type": "string"
        }
      }
    },
    "GoogleChromeManagementV1BrowserVersion": {
      "description": "Describes a browser version and its install count.",
      "type": "object",
      "properties": {
        "version": {
          "description": "Output only. The full version of the installed browser.",
          "readOnly": true,
          "type": "string"
        },
        "count": {
          "readOnly": true,
          "description": "Output only. Count grouped by device_system and major version",
          "format": "int64",
          "type": "string"
        },
        "deviceOsVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Version of the system-specified operating system."
        },
        "system": {
          "readOnly": true,
          "enumDescriptions": [
            "No operating system specified.",
            "Other operating system.",
            "Android operating system.",
            "Apple iOS operating system.",
            "ChromeOS operating system.",
            "Microsoft Windows operating system.",
            "Apple macOS operating system.",
            "Linux operating system."
          ],
          "enum": [
            "DEVICE_SYSTEM_UNSPECIFIED",
            "SYSTEM_OTHER",
            "SYSTEM_ANDROID",
            "SYSTEM_IOS",
            "SYSTEM_CROS",
            "SYSTEM_WINDOWS",
            "SYSTEM_MAC",
            "SYSTEM_LINUX"
          ],
          "type": "string",
          "description": "Output only. The device operating system."
        },
        "channel": {
          "type": "string",
          "description": "Output only. The release channel of the installed browser.",
          "enum": [
            "RELEASE_CHANNEL_UNSPECIFIED",
            "CANARY",
            "DEV",
            "BETA",
            "STABLE"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "No release channel specified.",
            "Canary release channel.",
            "Dev release channel.",
            "Beta release channel.",
            "Stable release channel."
          ]
        }
      },
      "id": "GoogleChromeManagementV1BrowserVersion"
    },
    "GoogleChromeManagementV1CpuInfo": {
      "properties": {
        "maxClockSpeed": {
          "readOnly": true,
          "format": "int32",
          "description": "Output only. The max CPU clock speed in kHz.",
          "type": "integer"
        },
        "model": {
          "description": "Output only. The CPU model name. Example: Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz",
          "readOnly": true,
          "type": "string"
        },
        "keylockerConfigured": {
          "readOnly": true,
          "description": "Output only. Whether keylocker is configured.`TRUE` = Enabled; `FALSE` = disabled. Only reported if keylockerSupported = `TRUE`.",
          "type": "boolean"
        },
        "architecture": {
          "type": "string",
          "enum": [
            "ARCHITECTURE_UNSPECIFIED",
            "X64"
          ],
          "description": "Output only. Architecture type for the CPU. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A",
          "enumDescriptions": [
            "Architecture unknown.",
            "x64 architecture"
          ],
          "readOnly": true
        },
        "keylockerSupported": {
          "description": "Output only. Whether keylocker is supported.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "id": "GoogleChromeManagementV1CpuInfo",
      "description": "CPU specifications for the device * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A",
      "type": "object"
    },
    "GoogleChromeManagementV1ChromeAppInfo": {
      "description": "Chrome Web Store app information.",
      "type": "object",
      "id": "GoogleChromeManagementV1ChromeAppInfo",
      "properties": {
        "isKioskOnly": {
          "description": "Output only. Whether the app is only for Kiosk mode on ChromeOS devices",
          "type": "boolean",
          "readOnly": true
        },
        "minUserCount": {
          "format": "int32",
          "description": "Output only. The minimum number of users using this app.",
          "readOnly": true,
          "type": "integer"
        },
        "permissions": {
          "readOnly": true,
          "items": {
            "$ref": "GoogleChromeManagementV1ChromeAppPermission"
          },
          "description": "Output only. Every custom permission requested by the app. Version-specific field that will only be set when the requested app version is found.",
          "type": "array"
        },
        "supportEnabled": {
          "type": "boolean",
          "description": "Output only. The app developer has enabled support for their app. Version-specific field that will only be set when the requested app version is found.",
          "readOnly": true
        },
        "siteAccess": {
          "type": "array",
          "description": "Output only. Every permission giving access to domains or broad host patterns. ( e.g. www.google.com). This includes the matches from content scripts as well as hosts in the permissions node of the manifest. Version-specific field that will only be set when the requested app version is found.",
          "items": {
            "$ref": "GoogleChromeManagementV1ChromeAppSiteAccess"
          },
          "readOnly": true
        },
        "isTheme": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether the app or extension is a theme."
        },
        "isCwsHosted": {
          "description": "Output only. Whether the app or extension is in a published state in the Chrome Web Store.",
          "readOnly": true,
          "type": "boolean"
        },
        "googleOwned": {
          "readOnly": true,
          "description": "Output only. Whether the app or extension is built and maintained by Google. Version-specific field that will only be set when the requested app version is found.",
          "type": "boolean"
        },
        "kioskEnabled": {
          "readOnly": true,
          "description": "Output only. Whether this app is enabled for Kiosk mode on ChromeOS devices",
          "type": "boolean"
        }
      }
    },
    "GoogleChromeManagementV1StorageInfo": {
      "description": "Status data for storage. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceStorageStatus](https://chromeenterprise.google/policies/#ReportDeviceStorageStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A",
      "type": "object",
      "id": "GoogleChromeManagementV1StorageInfo",
      "properties": {
        "totalDiskBytes": {
          "format": "int64",
          "type": "string",
          "description": "The total space for user data storage in the device in bytes."
        },
        "availableDiskBytes": {
          "format": "int64",
          "type": "string",
          "description": "The available space for user data storage in the device in bytes."
        },
        "volume": {
          "description": "Information for disk volumes",
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1StorageInfoDiskVolume"
          }
        }
      }
    }
  },
  "discoveryVersion": "v1",
  "baseUrl": "https://chromemanagement.googleapis.com/",
  "servicePath": "",
  "protocol": "rest",
  "basePath": "",
  "mtlsRootUrl": "https://chromemanagement.mtls.googleapis.com/",
  "canonicalName": "Chrome Management",
  "rootUrl": "https://chromemanagement.googleapis.com/",
  "title": "Chrome Management API",
  "parameters": {
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "description": "V1 error format."
    }
  },
  "version": "v1",
  "id": "chromemanagement:v1",
  "description": "The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.",
  "version_module": true,
  "name": "chromemanagement",
  "revision": "20220908",
  "ownerDomain": "google.com"
}
